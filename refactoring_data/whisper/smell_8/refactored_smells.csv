file,type,smells,frame,itCount,describeCount
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Duplicate Assert,"{'line': 63, 'column': 4, 'index': 1766}","  61 |     img.setAttribute(""data-srcset"", url400);
  62 |     setSources(img, settings, instance);
> 63 |     expect(img).toHaveAttribute(""src"", url200);
     |    ^ Duplicate Assert
  64 |     expect(img).toHaveAttribute(""srcset"", url400);
  65 |   });
  66 |",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Duplicate Assert,"{'line': 64, 'column': 4, 'index': 1814}","  62 |     setSources(img, settings, instance);
  63 |     expect(img).toHaveAttribute(""src"", url200);
> 64 |     expect(img).toHaveAttribute(""srcset"", url400);
     |    ^ Duplicate Assert
  65 |   });
  66 |
  67 |   test(""with initial values in src and srcset"", () => {",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Duplicate Assert,"{'line': 73, 'column': 4, 'index': 2129}","  71 |     img.setAttribute(""srcset"", url1);
  72 |     setSources(img, settings, instance);
> 73 |     expect(img).toHaveAttribute(""src"", url200);
     |    ^ Duplicate Assert
  74 |     expect(img).toHaveAttribute(""srcset"", url400);
  75 |   });
  76 |   test(""with initial values in src and srcset and empty data-*"", () => {",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Duplicate Assert,"{'line': 74, 'column': 4, 'index': 2177}","  72 |     setSources(img, settings, instance);
  73 |     expect(img).toHaveAttribute(""src"", url200);
> 74 |     expect(img).toHaveAttribute(""srcset"", url400);
     |    ^ Duplicate Assert
  75 |   });
  76 |   test(""with initial values in src and srcset and empty data-*"", () => {
  77 |     img.setAttribute(""data-src"", """");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Duplicate Assert,"{'line': 82, 'column': 4, 'index': 2504}","  80 |     img.setAttribute(""srcset"", url400);
  81 |     setSources(img, settings, instance);
> 82 |     expect(img).toHaveAttribute(""src"", url200);
     |    ^ Duplicate Assert
  83 |     expect(img).toHaveAttribute(""srcset"", url400);
  84 |   });
  85 | });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Duplicate Assert,"{'line': 83, 'column': 4, 'index': 2552}","  81 |     setSources(img, settings, instance);
  82 |     expect(img).toHaveAttribute(""src"", url200);
> 83 |     expect(img).toHaveAttribute(""srcset"", url400);
     |    ^ Duplicate Assert
  84 |   });
  85 | });
  86 |",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Global Variable,"{'line': 11, 'column': 0, 'index': 415}","   9 | expectExtend(expect);
  10 |
> 11 | var outerDiv, settings, instance;
  12 |
  13 | beforeEach(() => {
  14 |   outerDiv = document.createElement(""div"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Magic Number,"{'line': 40, 'column': 42, 'index': 1265}","  38 |     const mockInstance = {};
  39 |     setToLoadCount(mockInstance, 10);
> 40 |     expect(mockInstance.toLoadCount).toBe(10);
     |                                          ^ Magic Number
  41 |   });
  42 | })
  43 |",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 46, 'column': 4, 'index': 1088}","  44 |   test(""when load hasn't been called on the element"", () => {
  45 |     restore(img);
> 46 |     expect(img).not.toHaveAttribute(""src"");
     |    ^ Duplicate Assert
  47 |     expect(img).not.toHaveAttribute(""srcset"");
  48 |     expect(img).not.toHaveAttribute(""sizes"");
  49 |   });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 47, 'column': 4, 'index': 1132}","  45 |     restore(img);
  46 |     expect(img).not.toHaveAttribute(""src"");
> 47 |     expect(img).not.toHaveAttribute(""srcset"");
     |    ^ Duplicate Assert
  48 |     expect(img).not.toHaveAttribute(""sizes"");
  49 |   });
  50 |",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 48, 'column': 4, 'index': 1179}","  46 |     expect(img).not.toHaveAttribute(""src"");
  47 |     expect(img).not.toHaveAttribute(""srcset"");
> 48 |     expect(img).not.toHaveAttribute(""sizes"");
     |    ^ Duplicate Assert
  49 |   });
  50 |
  51 |   test(""with initially empty src and srcset"", () => {",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 57, 'column': 4, 'index': 1481}","  55 |     load(img, settings, instance);
  56 |     restore(img, settings);
> 57 |     expect(img).not.toHaveAttribute(""src"");
     |    ^ Duplicate Assert
  58 |     expect(img).not.toHaveAttribute(""srcset"");
  59 |     expect(img).not.toHaveAttribute(""sizes"");
  60 |   });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 58, 'column': 4, 'index': 1525}","  56 |     restore(img, settings);
  57 |     expect(img).not.toHaveAttribute(""src"");
> 58 |     expect(img).not.toHaveAttribute(""srcset"");
     |    ^ Duplicate Assert
  59 |     expect(img).not.toHaveAttribute(""sizes"");
  60 |   });
  61 |",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 59, 'column': 4, 'index': 1572}","  57 |     expect(img).not.toHaveAttribute(""src"");
  58 |     expect(img).not.toHaveAttribute(""srcset"");
> 59 |     expect(img).not.toHaveAttribute(""sizes"");
     |    ^ Duplicate Assert
  60 |   });
  61 |
  62 |   test(""with initial values in src and srcset"", () => {",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 69, 'column': 4, 'index': 1904}","  67 |     load(img, settings, instance);
  68 |     restore(img, settings);
> 69 |     expect(img).toHaveAttributeValue(""src"", url1);
     |    ^ Duplicate Assert
  70 |     expect(img).toHaveAttributeValue(""srcset"", url2);
  71 |   });
  72 |",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 70, 'column': 4, 'index': 1955}","  68 |     restore(img, settings);
  69 |     expect(img).toHaveAttributeValue(""src"", url1);
> 70 |     expect(img).toHaveAttributeValue(""srcset"", url2);
     |    ^ Duplicate Assert
  71 |   });
  72 |
  73 |   test(""with initial values in src and srcset and empty data-*"", () => {",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 80, 'column': 4, 'index': 2308}","  78 |     load(img, settings, instance);
  79 |     restore(img, settings);
> 80 |     expect(img).toHaveAttributeValue(""src"", url200);
     |    ^ Duplicate Assert
  81 |     expect(img).toHaveAttributeValue(""srcset"", url400);
  82 |   });
  83 |",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 81, 'column': 4, 'index': 2361}","  79 |     restore(img, settings);
  80 |     expect(img).toHaveAttributeValue(""src"", url200);
> 81 |     expect(img).toHaveAttributeValue(""srcset"", url400);
     |    ^ Duplicate Assert
  82 |   });
  83 |
  84 |   test(""has no classes nor status after restore"", () => {",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 88, 'column': 4, 'index': 2583}","  86 |     load(img, settings, instance);
  87 |     restore(img, settings);
> 88 |     expect(img).not.toHaveClassName(""applied"");
     |    ^ Duplicate Assert
  89 |     expect(img).not.toHaveClassName(""loading"");
  90 |     expect(img).not.toHaveClassName(""loaded"");
  91 |     expect(img).not.toHaveClassName(""error"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 89, 'column': 4, 'index': 2631}","  87 |     restore(img, settings);
  88 |     expect(img).not.toHaveClassName(""applied"");
> 89 |     expect(img).not.toHaveClassName(""loading"");
     |    ^ Duplicate Assert
  90 |     expect(img).not.toHaveClassName(""loaded"");
  91 |     expect(img).not.toHaveClassName(""error"");
  92 |     expect(img).not.toHaveClassName(""entered"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 90, 'column': 4, 'index': 2679}","  88 |     expect(img).not.toHaveClassName(""applied"");
  89 |     expect(img).not.toHaveClassName(""loading"");
> 90 |     expect(img).not.toHaveClassName(""loaded"");
     |    ^ Duplicate Assert
  91 |     expect(img).not.toHaveClassName(""error"");
  92 |     expect(img).not.toHaveClassName(""entered"");
  93 |     expect(img).not.toHaveClassName(""exited"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 91, 'column': 4, 'index': 2726}","  89 |     expect(img).not.toHaveClassName(""loading"");
  90 |     expect(img).not.toHaveClassName(""loaded"");
> 91 |     expect(img).not.toHaveClassName(""error"");
     |    ^ Duplicate Assert
  92 |     expect(img).not.toHaveClassName(""entered"");
  93 |     expect(img).not.toHaveClassName(""exited"");
  94 |     expect(getStatus(img)).toBeNull();",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 92, 'column': 4, 'index': 2772}","  90 |     expect(img).not.toHaveClassName(""loaded"");
  91 |     expect(img).not.toHaveClassName(""error"");
> 92 |     expect(img).not.toHaveClassName(""entered"");
     |    ^ Duplicate Assert
  93 |     expect(img).not.toHaveClassName(""exited"");
  94 |     expect(getStatus(img)).toBeNull();
  95 |   });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 93, 'column': 4, 'index': 2820}","  91 |     expect(img).not.toHaveClassName(""error"");
  92 |     expect(img).not.toHaveClassName(""entered"");
> 93 |     expect(img).not.toHaveClassName(""exited"");
     |    ^ Duplicate Assert
  94 |     expect(getStatus(img)).toBeNull();
  95 |   });
  96 | });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 156, 'column': 4, 'index': 5030}","  154 |     load(img, settings, instance);
  155 |     restore(img, settings);
> 156 |     expect(img).not.toHaveClassName(""applied"");
      |    ^ Duplicate Assert
  157 |     expect(img).not.toHaveClassName(""loading"");
  158 |     expect(img).not.toHaveClassName(""loaded"");
  159 |     expect(img).not.toHaveClassName(""error"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 157, 'column': 4, 'index': 5078}","  155 |     restore(img, settings);
  156 |     expect(img).not.toHaveClassName(""applied"");
> 157 |     expect(img).not.toHaveClassName(""loading"");
      |    ^ Duplicate Assert
  158 |     expect(img).not.toHaveClassName(""loaded"");
  159 |     expect(img).not.toHaveClassName(""error"");
  160 |     expect(img).not.toHaveClassName(""entered"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 158, 'column': 4, 'index': 5126}","  156 |     expect(img).not.toHaveClassName(""applied"");
  157 |     expect(img).not.toHaveClassName(""loading"");
> 158 |     expect(img).not.toHaveClassName(""loaded"");
      |    ^ Duplicate Assert
  159 |     expect(img).not.toHaveClassName(""error"");
  160 |     expect(img).not.toHaveClassName(""entered"");
  161 |     expect(img).not.toHaveClassName(""exited"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 159, 'column': 4, 'index': 5173}","  157 |     expect(img).not.toHaveClassName(""loading"");
  158 |     expect(img).not.toHaveClassName(""loaded"");
> 159 |     expect(img).not.toHaveClassName(""error"");
      |    ^ Duplicate Assert
  160 |     expect(img).not.toHaveClassName(""entered"");
  161 |     expect(img).not.toHaveClassName(""exited"");
  162 |     expect(getStatus(img)).toBeNull();",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 160, 'column': 4, 'index': 5219}","  158 |     expect(img).not.toHaveClassName(""loaded"");
  159 |     expect(img).not.toHaveClassName(""error"");
> 160 |     expect(img).not.toHaveClassName(""entered"");
      |    ^ Duplicate Assert
  161 |     expect(img).not.toHaveClassName(""exited"");
  162 |     expect(getStatus(img)).toBeNull();
  163 |   });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 161, 'column': 4, 'index': 5267}","  159 |     expect(img).not.toHaveClassName(""error"");
  160 |     expect(img).not.toHaveClassName(""entered"");
> 161 |     expect(img).not.toHaveClassName(""exited"");
      |    ^ Duplicate Assert
  162 |     expect(getStatus(img)).toBeNull();
  163 |   });
  164 | });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 203, 'column': 4, 'index': 6484}","  201 |     load(iframe, settings, instance);
  202 |     restore(iframe, settings);
> 203 |     expect(iframe).not.toHaveClassName(""applied"");
      |    ^ Duplicate Assert
  204 |     expect(iframe).not.toHaveClassName(""loading"");
  205 |     expect(iframe).not.toHaveClassName(""loaded"");
  206 |     expect(iframe).not.toHaveClassName(""error"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 204, 'column': 4, 'index': 6535}","  202 |     restore(iframe, settings);
  203 |     expect(iframe).not.toHaveClassName(""applied"");
> 204 |     expect(iframe).not.toHaveClassName(""loading"");
      |    ^ Duplicate Assert
  205 |     expect(iframe).not.toHaveClassName(""loaded"");
  206 |     expect(iframe).not.toHaveClassName(""error"");
  207 |     expect(iframe).not.toHaveClassName(""entered"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 205, 'column': 4, 'index': 6586}","  203 |     expect(iframe).not.toHaveClassName(""applied"");
  204 |     expect(iframe).not.toHaveClassName(""loading"");
> 205 |     expect(iframe).not.toHaveClassName(""loaded"");
      |    ^ Duplicate Assert
  206 |     expect(iframe).not.toHaveClassName(""error"");
  207 |     expect(iframe).not.toHaveClassName(""entered"");
  208 |     expect(iframe).not.toHaveClassName(""exited"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 206, 'column': 4, 'index': 6636}","  204 |     expect(iframe).not.toHaveClassName(""loading"");
  205 |     expect(iframe).not.toHaveClassName(""loaded"");
> 206 |     expect(iframe).not.toHaveClassName(""error"");
      |    ^ Duplicate Assert
  207 |     expect(iframe).not.toHaveClassName(""entered"");
  208 |     expect(iframe).not.toHaveClassName(""exited"");
  209 |     expect(getStatus(iframe)).toBeNull();",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 207, 'column': 4, 'index': 6685}","  205 |     expect(iframe).not.toHaveClassName(""loaded"");
  206 |     expect(iframe).not.toHaveClassName(""error"");
> 207 |     expect(iframe).not.toHaveClassName(""entered"");
      |    ^ Duplicate Assert
  208 |     expect(iframe).not.toHaveClassName(""exited"");
  209 |     expect(getStatus(iframe)).toBeNull();
  210 |   });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 208, 'column': 4, 'index': 6736}","  206 |     expect(iframe).not.toHaveClassName(""error"");
  207 |     expect(iframe).not.toHaveClassName(""entered"");
> 208 |     expect(iframe).not.toHaveClassName(""exited"");
      |    ^ Duplicate Assert
  209 |     expect(getStatus(iframe)).toBeNull();
  210 |   });
  211 | });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 260, 'column': 4, 'index': 8488}","  258 |     load(innerDiv, settings, instance);
  259 |     restore(innerDiv, settings);
> 260 |     expect(innerDiv).not.toHaveClassName(""applied"");
      |    ^ Duplicate Assert
  261 |     expect(innerDiv).not.toHaveClassName(""loading"");
  262 |     expect(innerDiv).not.toHaveClassName(""loaded"");
  263 |     expect(innerDiv).not.toHaveClassName(""error"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 261, 'column': 4, 'index': 8541}","  259 |     restore(innerDiv, settings);
  260 |     expect(innerDiv).not.toHaveClassName(""applied"");
> 261 |     expect(innerDiv).not.toHaveClassName(""loading"");
      |    ^ Duplicate Assert
  262 |     expect(innerDiv).not.toHaveClassName(""loaded"");
  263 |     expect(innerDiv).not.toHaveClassName(""error"");
  264 |     expect(innerDiv).not.toHaveClassName(""entered"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 262, 'column': 4, 'index': 8594}","  260 |     expect(innerDiv).not.toHaveClassName(""applied"");
  261 |     expect(innerDiv).not.toHaveClassName(""loading"");
> 262 |     expect(innerDiv).not.toHaveClassName(""loaded"");
      |    ^ Duplicate Assert
  263 |     expect(innerDiv).not.toHaveClassName(""error"");
  264 |     expect(innerDiv).not.toHaveClassName(""entered"");
  265 |     expect(innerDiv).not.toHaveClassName(""exited"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 263, 'column': 4, 'index': 8646}","  261 |     expect(innerDiv).not.toHaveClassName(""loading"");
  262 |     expect(innerDiv).not.toHaveClassName(""loaded"");
> 263 |     expect(innerDiv).not.toHaveClassName(""error"");
      |    ^ Duplicate Assert
  264 |     expect(innerDiv).not.toHaveClassName(""entered"");
  265 |     expect(innerDiv).not.toHaveClassName(""exited"");
  266 |     expect(getStatus(innerDiv)).toBeNull();",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 264, 'column': 4, 'index': 8697}","  262 |     expect(innerDiv).not.toHaveClassName(""loaded"");
  263 |     expect(innerDiv).not.toHaveClassName(""error"");
> 264 |     expect(innerDiv).not.toHaveClassName(""entered"");
      |    ^ Duplicate Assert
  265 |     expect(innerDiv).not.toHaveClassName(""exited"");
  266 |     expect(getStatus(innerDiv)).toBeNull();
  267 |   });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 265, 'column': 4, 'index': 8750}","  263 |     expect(innerDiv).not.toHaveClassName(""error"");
  264 |     expect(innerDiv).not.toHaveClassName(""entered"");
> 265 |     expect(innerDiv).not.toHaveClassName(""exited"");
      |    ^ Duplicate Assert
  266 |     expect(getStatus(innerDiv)).toBeNull();
  267 |   });
  268 | });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 318, 'column': 4, 'index': 10433}","  316 |     load(innerDiv, settings, instance);
  317 |     restore(innerDiv, settings);
> 318 |     expect(innerDiv).not.toHaveClassName(""applied"");
      |    ^ Duplicate Assert
  319 |     expect(innerDiv).not.toHaveClassName(""loading"");
  320 |     expect(innerDiv).not.toHaveClassName(""loaded"");
  321 |     expect(innerDiv).not.toHaveClassName(""error"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 319, 'column': 4, 'index': 10486}","  317 |     restore(innerDiv, settings);
  318 |     expect(innerDiv).not.toHaveClassName(""applied"");
> 319 |     expect(innerDiv).not.toHaveClassName(""loading"");
      |    ^ Duplicate Assert
  320 |     expect(innerDiv).not.toHaveClassName(""loaded"");
  321 |     expect(innerDiv).not.toHaveClassName(""error"");
  322 |     expect(innerDiv).not.toHaveClassName(""entered"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 320, 'column': 4, 'index': 10539}","  318 |     expect(innerDiv).not.toHaveClassName(""applied"");
  319 |     expect(innerDiv).not.toHaveClassName(""loading"");
> 320 |     expect(innerDiv).not.toHaveClassName(""loaded"");
      |    ^ Duplicate Assert
  321 |     expect(innerDiv).not.toHaveClassName(""error"");
  322 |     expect(innerDiv).not.toHaveClassName(""entered"");
  323 |     expect(innerDiv).not.toHaveClassName(""exited"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 321, 'column': 4, 'index': 10591}","  319 |     expect(innerDiv).not.toHaveClassName(""loading"");
  320 |     expect(innerDiv).not.toHaveClassName(""loaded"");
> 321 |     expect(innerDiv).not.toHaveClassName(""error"");
      |    ^ Duplicate Assert
  322 |     expect(innerDiv).not.toHaveClassName(""entered"");
  323 |     expect(innerDiv).not.toHaveClassName(""exited"");
  324 |     expect(getStatus(innerDiv)).toBeNull();",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 322, 'column': 4, 'index': 10642}","  320 |     expect(innerDiv).not.toHaveClassName(""loaded"");
  321 |     expect(innerDiv).not.toHaveClassName(""error"");
> 322 |     expect(innerDiv).not.toHaveClassName(""entered"");
      |    ^ Duplicate Assert
  323 |     expect(innerDiv).not.toHaveClassName(""exited"");
  324 |     expect(getStatus(innerDiv)).toBeNull();
  325 |   });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 323, 'column': 4, 'index': 10695}","  321 |     expect(innerDiv).not.toHaveClassName(""error"");
  322 |     expect(innerDiv).not.toHaveClassName(""entered"");
> 323 |     expect(innerDiv).not.toHaveClassName(""exited"");
      |    ^ Duplicate Assert
  324 |     expect(getStatus(innerDiv)).toBeNull();
  325 |   });
  326 | });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 385, 'column': 4, 'index': 12623}","  383 |     load(video, settings, instance);
  384 |     restore(video, settings);
> 385 |     expect(video).not.toHaveClassName(""applied"");
      |    ^ Duplicate Assert
  386 |     expect(video).not.toHaveClassName(""loading"");
  387 |     expect(video).not.toHaveClassName(""loaded"");
  388 |     expect(video).not.toHaveClassName(""error"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 386, 'column': 4, 'index': 12673}","  384 |     restore(video, settings);
  385 |     expect(video).not.toHaveClassName(""applied"");
> 386 |     expect(video).not.toHaveClassName(""loading"");
      |    ^ Duplicate Assert
  387 |     expect(video).not.toHaveClassName(""loaded"");
  388 |     expect(video).not.toHaveClassName(""error"");
  389 |     expect(video).not.toHaveClassName(""entered"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 387, 'column': 4, 'index': 12723}","  385 |     expect(video).not.toHaveClassName(""applied"");
  386 |     expect(video).not.toHaveClassName(""loading"");
> 387 |     expect(video).not.toHaveClassName(""loaded"");
      |    ^ Duplicate Assert
  388 |     expect(video).not.toHaveClassName(""error"");
  389 |     expect(video).not.toHaveClassName(""entered"");
  390 |     expect(video).not.toHaveClassName(""exited"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 388, 'column': 4, 'index': 12772}","  386 |     expect(video).not.toHaveClassName(""loading"");
  387 |     expect(video).not.toHaveClassName(""loaded"");
> 388 |     expect(video).not.toHaveClassName(""error"");
      |    ^ Duplicate Assert
  389 |     expect(video).not.toHaveClassName(""entered"");
  390 |     expect(video).not.toHaveClassName(""exited"");
  391 |     expect(getStatus(video)).toBeNull();",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 389, 'column': 4, 'index': 12820}","  387 |     expect(video).not.toHaveClassName(""loaded"");
  388 |     expect(video).not.toHaveClassName(""error"");
> 389 |     expect(video).not.toHaveClassName(""entered"");
      |    ^ Duplicate Assert
  390 |     expect(video).not.toHaveClassName(""exited"");
  391 |     expect(getStatus(video)).toBeNull();
  392 |   });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Duplicate Assert,"{'line': 390, 'column': 4, 'index': 12870}","  388 |     expect(video).not.toHaveClassName(""error"");
  389 |     expect(video).not.toHaveClassName(""entered"");
> 390 |     expect(video).not.toHaveClassName(""exited"");
      |    ^ Duplicate Assert
  391 |     expect(getStatus(video)).toBeNull();
  392 |   });
  393 | });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/restore.test.js,Global Variable,"{'line': 16, 'column': 0, 'index': 513}","  14 | const sizes50 = ""50vw"";
  15 |
> 16 | var outerDiv, settings, instance;
  17 |
  18 | expectExtend(expect);
  19 |",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/reset.test.js,Duplicate Assert,"{'line': 44, 'column': 4, 'index': 1056}","  42 |     img.setAttribute(""sizes"", sizes50);
  43 |     resetSourcesImg(img);
> 44 |     expect(img).not.toHaveAttribute(""src"");
     |    ^ Duplicate Assert
  45 |     expect(img).not.toHaveAttribute(""srcset"");
  46 |     expect(img).not.toHaveAttribute(""sizes"");
  47 |   });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/reset.test.js,Duplicate Assert,"{'line': 45, 'column': 4, 'index': 1100}","  43 |     resetSourcesImg(img);
  44 |     expect(img).not.toHaveAttribute(""src"");
> 45 |     expect(img).not.toHaveAttribute(""srcset"");
     |    ^ Duplicate Assert
  46 |     expect(img).not.toHaveAttribute(""sizes"");
  47 |   });
  48 | });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/reset.test.js,Duplicate Assert,"{'line': 46, 'column': 4, 'index': 1147}","  44 |     expect(img).not.toHaveAttribute(""src"");
  45 |     expect(img).not.toHaveAttribute(""srcset"");
> 46 |     expect(img).not.toHaveAttribute(""sizes"");
     |    ^ Duplicate Assert
  47 |   });
  48 | });
  49 |",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/reset.test.js,Global Variable,"{'line': 10, 'column': 0, 'index': 313}","   8 | expectExtend(expect);
   9 |
> 10 | var outerDiv, settings, instance;
  11 |
  12 | beforeEach(() => {
  13 |   outerDiv = document.createElement(""div"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/originalAttributes.test.js,Global Variable,"{'line': 11, 'column': 0, 'index': 371}","   9 | expectExtend(expect);
  10 |
> 11 | var outerDiv, settings, instance;
  12 |
  13 | beforeEach(() => {
  14 |   outerDiv = document.createElement(""div"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/load.test.js,Duplicate Assert,"{'line': 48, 'column': 4, 'index': 1147}","  46 |     settings.callback_loading = loadingCb;
  47 |     load(img, settings, instance);
> 48 |     expect(loadingCb).toHaveBeenCalledTimes(1);
     |    ^ Duplicate Assert
  49 |     expect(loadingCb).toHaveBeenCalledWith(img, instance);
  50 |   });
  51 | });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/load.test.js,Duplicate Assert,"{'line': 49, 'column': 4, 'index': 1195}","  47 |     load(img, settings, instance);
  48 |     expect(loadingCb).toHaveBeenCalledTimes(1);
> 49 |     expect(loadingCb).toHaveBeenCalledWith(img, instance);
     |    ^ Duplicate Assert
  50 |   });
  51 | });
  52 |",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/load.test.js,Global Variable,"{'line': 12, 'column': 0, 'index': 402}","  10 | expectExtend(expect);
  11 |
> 12 | var outerDiv, settings, instance;
  13 |
  14 | beforeEach(() => {
  15 |   outerDiv = document.createElement(""div"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/cancelOnExit.test.js,Duplicate Assert,"{'line': 68, 'column': 4, 'index': 1968}","  66 |     setSources(img, settings, instance);
  67 |     cancelLoading(img, entry, settings, instance);
> 68 |     expect(img).toHaveAttribute(""src"", url1);
     |    ^ Duplicate Assert
  69 |     expect(img).not.toHaveAttribute(""srcset"");
  70 |     expect(img).not.toHaveAttribute(""sizes"");
  71 |   });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/cancelOnExit.test.js,Duplicate Assert,"{'line': 69, 'column': 4, 'index': 2014}","  67 |     cancelLoading(img, entry, settings, instance);
  68 |     expect(img).toHaveAttribute(""src"", url1);
> 69 |     expect(img).not.toHaveAttribute(""srcset"");
     |    ^ Duplicate Assert
  70 |     expect(img).not.toHaveAttribute(""sizes"");
  71 |   });
  72 |",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/cancelOnExit.test.js,Duplicate Assert,"{'line': 70, 'column': 4, 'index': 2061}","  68 |     expect(img).toHaveAttribute(""src"", url1);
  69 |     expect(img).not.toHaveAttribute(""srcset"");
> 70 |     expect(img).not.toHaveAttribute(""sizes"");
     |    ^ Duplicate Assert
  71 |   });
  72 |
  73 |   test(""Removes loading class"", () => {",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/cancelOnExit.test.js,Duplicate Assert,"{'line': 99, 'column': 4, 'index': 2957}","   97 |     setSources(img, settings, instance);
   98 |     cancelLoading(img, entry, settings, instance);
>  99 |     expect(cancelCb).toHaveBeenCalledTimes(1);
      |    ^ Duplicate Assert
  100 |     expect(cancelCb).toHaveBeenCalledWith(img, entry, instance);
  101 |   });
  102 | });",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/cancelOnExit.test.js,Duplicate Assert,"{'line': 100, 'column': 4, 'index': 3004}","   98 |     cancelLoading(img, entry, settings, instance);
   99 |     expect(cancelCb).toHaveBeenCalledTimes(1);
> 100 |     expect(cancelCb).toHaveBeenCalledWith(img, entry, instance);
      |    ^ Duplicate Assert
  101 |   });
  102 | });
  103 |",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/cancelOnExit.test.js,Global Variable,"{'line': 13, 'column': 0, 'index': 473}","  11 | expectExtend(expect);
  12 |
> 13 | var outerDiv, instance, settings;
  14 |
  15 | beforeEach(() => {
  16 |   outerDiv = document.createElement(""div"");",,
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/cancelOnExit.test.js,Magic Number,"{'line': 84, 'column': 39, 'index': 2522}","  82 |     setSources(img, settings, instance);
  83 |     cancelLoading(img, entry, settings, instance);
> 84 |     expect(instance.loadingCount).toBe(0);
     |                                       ^ Magic Number
  85 |   });
  86 |
  87 |   test(""Resets internal status"", () => {",,
tests/unit/set.test.js,GeneralFixture,"[{""startLine"":14,""endLine"":14}]",,19.0,7.0
tests/unit/set.test.js,IdenticalTestDescription,"[{""startLine"":176,""endLine"":181}]",,19.0,7.0
tests/unit/set.test.js,IdenticalTestDescription,"[{""startLine"":182,""endLine"":190}]",,19.0,7.0
tests/unit/set.test.js,IdenticalTestDescription,"[{""startLine"":191,""endLine"":200}]",,19.0,7.0
tests/unit/set.test.js,IdenticalTestDescription,"[{""startLine"":222,""endLine"":228}]",,19.0,7.0
tests/unit/restore.test.js,GeneralFixture,"[{""startLine"":21,""endLine"":21}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":112,""endLine"":117}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":150,""endLine"":163}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":180,""endLine"":183}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":199,""endLine"":210}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":228,""endLine"":231}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":256,""endLine"":267}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":284,""endLine"":287}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":289,""endLine"":294}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":305,""endLine"":312}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":314,""endLine"":325}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":347,""endLine"":350}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":352,""endLine"":357}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":359,""endLine"":365}]",,29.0,6.0
tests/unit/restore.test.js,IdenticalTestDescription,"[{""startLine"":381,""endLine"":392}]",,29.0,6.0
tests/unit/restore.test.js,NonFunctionalStatement,"[{""startLine"":337,""endLine"":338}]",,29.0,6.0
tests/unit/reset.test.js,GeneralFixture,"[{""startLine"":13,""endLine"":13}]",,1.0,1.0
tests/unit/reset.test.js,GeneralFixture,"[{""startLine"":14,""endLine"":14}]",,1.0,1.0
tests/unit/reset.test.js,GeneralFixture,"[{""startLine"":15,""endLine"":15}]",,1.0,1.0
tests/unit/originalAttributes.test.js,GeneralFixture,"[{""startLine"":14,""endLine"":14}]",,1.0,1.0
tests/unit/load.test.js,GeneralFixture,"[{""startLine"":15,""endLine"":15}]",,2.0,1.0
tests/unit/cancelOnExit.test.js,GeneralFixture,"[{""startLine"":16,""endLine"":16}]",,8.0,2.0
tests/unit/cancelOnExit.test.js,SubOptimalAssert,"[{""startLine"":91,""endLine"":91}]",,8.0,2.0
