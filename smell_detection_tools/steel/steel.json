{"project":"steel","version":"","testSuites":246,"testCases":705,"smelledTestSuites":193,"smelledTestCases":0,"smells":1888,"smelledFiles":[{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/dev-warning.spec.js","testCases":2,"smells":2,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  21 |   warning('hi');\n  22 |\n> 23 |   expect(warn).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  24 |\n  25 |   // re-enable\n  26 |","start":{"line":23,"column":2,"index":467}},{"frame":"  29 |   warning('hey');\n  30 |\n> 31 |   expect(warn).toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  32 | });\n  33 |","start":{"line":31,"column":2,"index":607}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":20.833,"halstead":{"bugs":0.117,"difficulty":5.318,"effort":1866.346,"length":73,"time":103.686,"vocabulary":28,"volume":350.937,"operands":{"distinct":22,"total":39,"identifiers":["warn","jest","spyOn","console","\"warn\"","mockImplementation","afterEach","mockClear","it","\"should log a warning to the console\"","warning","\"hey\"","expect","toHaveBeenCalled","\"should not log a warning if warnings are disabled\"","window","\"__react-beautiful-dnd-disable-dev-warnings\"","true","\"sup\"","\"hi\"","not","false"]},"operators":{"distinct":6,"total":34,"identifiers":["const","=","()",".","function=>","[]"]}},"paramCount":0,"sloc":{"logical":24,"physical":33}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../src/dev-warning","type":"esm"}],"errors":[],"lineEnd":33,"lineStart":1,"maintainability":125.334,"methods":[{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":4,"lineStart":4,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["warn","mockClear"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":8,"lineStart":6,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.008,"difficulty":1,"effort":25.266,"length":9,"time":1.404,"vocabulary":7,"volume":25.266,"operands":{"distinct":5,"total":5,"identifiers":["warning","\"hey\"","expect","warn","toHaveBeenCalled"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":14,"lineStart":10,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.048,"difficulty":3.5,"effort":504,"length":36,"time":28,"vocabulary":16,"volume":144,"operands":{"distinct":12,"total":21,"identifiers":["window","\"__react-beautiful-dnd-disable-dev-warnings\"","true","warning","\"hey\"","\"sup\"","\"hi\"","expect","warn","not","toHaveBeenCalled","false"]},"operators":{"distinct":4,"total":15,"identifiers":["=","[]","()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":17},"errors":[],"lineEnd":32,"lineStart":16,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.023,"difficulty":1.064,"effort":373.269,"length":14.6,"time":20.737,"vocabulary":5.6,"volume":70.187,"operands":{"distinct":4.4,"total":7.8},"operators":{"distinct":1.2,"total":6.8}},"paramCount":0,"sloc":{"logical":4.8,"physical":6.6}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":35.833,"halstead":{"bugs":0.015,"difficulty":1.375,"effort":134.317,"length":12.25,"time":7.462,"vocabulary":6.75,"volume":44.317,"operands":{"distinct":4.75,"total":7},"operators":{"distinct":2,"total":5.25}},"paramCount":0,"sloc":{"logical":3.5,"physical":6.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/use-draggable-publisher.spec.js","testCases":8,"smells":15,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"   98 |       getDimension: expect.any(Function),\n   99 |     };\n> 100 |     expect(registerSpy).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  101 |     expect(registerSpy).toHaveBeenCalledWith(expected);\n  102 |   });\n  103 |","start":{"line":100,"column":4,"index":2698}},{"frame":"   99 |     };\n  100 |     expect(registerSpy).toHaveBeenCalledTimes(1);\n> 101 |     expect(registerSpy).toHaveBeenCalledWith(expected);\n      |    ^ Duplicate Assert\n  102 |   });\n  103 |\n  104 |   it('should unregister itself when unmounting', () => {","start":{"line":101,"column":4,"index":2748}},{"frame":"  117 |     };\n  118 |\n> 119 |     expect(unregisterSpy).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  120 |     expect(registerSpy).toHaveBeenCalledTimes(1);\n  121 |     expect(registerSpy).toHaveBeenCalledWith(expected);\n  122 |     const entry = registerSpy.mock.calls[0][0];","start":{"line":119,"column":4,"index":3360}},{"frame":"  118 |\n  119 |     expect(unregisterSpy).not.toHaveBeenCalled();\n> 120 |     expect(registerSpy).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  121 |     expect(registerSpy).toHaveBeenCalledWith(expected);\n  122 |     const entry = registerSpy.mock.calls[0][0];\n  123 |     expect(entry).toEqual(expected);","start":{"line":120,"column":4,"index":3410}},{"frame":"  119 |     expect(unregisterSpy).not.toHaveBeenCalled();\n  120 |     expect(registerSpy).toHaveBeenCalledTimes(1);\n> 121 |     expect(registerSpy).toHaveBeenCalledWith(expected);\n      |    ^ Duplicate Assert\n  122 |     const entry = registerSpy.mock.calls[0][0];\n  123 |     expect(entry).toEqual(expected);\n  124 |","start":{"line":121,"column":4,"index":3460}},{"frame":"  124 |\n  125 |     wrapper.unmount();\n> 126 |     expect(unregisterSpy).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  127 |     expect(unregisterSpy.mock.calls[0][0]).toBe(entry);\n  128 |   });\n  129 |","start":{"line":126,"column":4,"index":3625}},{"frame":"  145 |\n  146 |     // asserting shape of original publish\n> 147 |     expect(registerSpy).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  148 |     expect(registerSpy).toHaveBeenCalledWith(expectedInitial);\n  149 |     const entry = registerSpy.mock.calls[0][0];\n  150 |     expect(entry).toEqual(expectedInitial);","start":{"line":147,"column":4,"index":4428}},{"frame":"  146 |     // asserting shape of original publish\n  147 |     expect(registerSpy).toHaveBeenCalledTimes(1);\n> 148 |     expect(registerSpy).toHaveBeenCalledWith(expectedInitial);\n      |    ^ Duplicate Assert\n  149 |     const entry = registerSpy.mock.calls[0][0];\n  150 |     expect(entry).toEqual(expectedInitial);\n  151 |","start":{"line":148,"column":4,"index":4478}},{"frame":"  150 |     expect(entry).toEqual(expectedInitial);\n  151 |\n> 152 |     expect(updateSpy).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  153 |     expect(unregisterSpy).not.toHaveBeenCalled();\n  154 |\n  155 |     registerSpy.mockReset();","start":{"line":152,"column":4,"index":4634}},{"frame":"  151 |\n  152 |     expect(updateSpy).not.toHaveBeenCalled();\n> 153 |     expect(unregisterSpy).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  154 |\n  155 |     registerSpy.mockReset();\n  156 |","start":{"line":153,"column":4,"index":4680}},{"frame":"  151 |\n  152 |     expect(updateSpy).not.toHaveBeenCalled();\n> 153 |     expect(unregisterSpy).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  154 |\n  155 |     registerSpy.mockReset();\n  156 |","start":{"line":153,"column":4,"index":4680}},{"frame":"  171 |       getDimension: expect.any(Function),\n  172 |     };\n> 173 |     expect(updateSpy).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  174 |     // new descriptor\n  175 |     expect(updateSpy.mock.calls[0][0]).toEqual(expectedUpdate);\n  176 |     // late reference: same reference","start":{"line":173,"column":4,"index":5131}},{"frame":"  178 |\n  179 |     // Nothing else changed\n> 180 |     expect(registerSpy).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  181 |     expect(unregisterSpy).not.toHaveBeenCalled();\n  182 |   });\n  183 |","start":{"line":180,"column":4,"index":5384}},{"frame":"  179 |     // Nothing else changed\n  180 |     expect(registerSpy).not.toHaveBeenCalled();\n> 181 |     expect(unregisterSpy).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  182 |   });\n  183 |\n  184 |   it('should not update its registration when a descriptor property does not change on an update', () => {","start":{"line":181,"column":4,"index":5432}},{"frame":"  179 |     // Nothing else changed\n  180 |     expect(registerSpy).not.toHaveBeenCalled();\n> 181 |     expect(unregisterSpy).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  182 |   });\n  183 |\n  184 |   it('should not update its registration when a descriptor property does not change on an update', () => {","start":{"line":181,"column":4,"index":5432}}]}],"metrics":{"aggregate":{"cyclomatic":26,"cyclomaticDensity":8.254,"halstead":{"bugs":3.018,"difficulty":32.578,"effort":294968.515,"length":1270,"time":16387.14,"vocabulary":140,"volume":9054.189,"operands":{"distinct":128,"total":695,"identifiers":["preset","getPreset","noComputedSpacing","getComputedSpacing","ItemProps","index","draggableId","DraggableId","registry","Registry","defaultOptions","DraggableOptions","canDragInteractiveElements","false","shouldRespectForcePress","isEnabled","true","Item","props","inHome1","descriptor","id","ref","useRef","HTMLElement","null","setRef","useCallback","value","current","getRef","DraggableDescriptor","useMemo","type","droppableId","useDraggablePublisher","getDraggableRef","beforeEach","tryCleanPrototypeStubs","jest","spyOn","console","\"error\"","mockImplementation","afterEach","error","mockRestore","describe","\"dimension registration\"","it","\"should register itself when mounting\"","createRegistry","registerSpy","draggable","\"register\"","mount","expected","DraggableEntry","uniqueId","expect","any","String","options","getDimension","Function","toHaveBeenCalledTimes","1","toHaveBeenCalledWith","\"should unregister itself when unmounting\"","unregisterSpy","\"unregister\"","wrapper","not","toHaveBeenCalled","entry","mock","calls","0","toEqual","unmount","toBe","\"should update its registration when a descriptor property changes\"","updateSpy","\"update\"","expectedInitial","mockReset","setProps","1000","expectedUpdate","\"should not update its registration when a descriptor property does not change on an update\"","forceUpdate","\"dimension publishing\"","setBoundingClientRect","borderBox","getDOMNode","invariant","getBoundingClientRect","\"should publish the dimensions of the target when requested\"","DraggableDimension","getDraggableDimension","\"fake-id\"","home","10","top","right","100","bottom","left","window","\"getComputedStyle\"","ReactWrapper","client","GetDraggableDimensionFn","result","x","y","\"should consider any margins when calculating dimensions\"","margin","Spacing","30","40","50","\"should consider the window scroll when calculating dimensions\"","windowScroll","\"should throw an error if no ref is provided when attempting to get a dimension\"","NoRefItem","\"draggable\"","toThrow"]},"operators":{"distinct":12,"total":575,"identifiers":["const","=","()","{}",":","function",".","function=>","[]",",","... (spread)","return"]}},"paramCount":5,"sloc":{"logical":315,"physical":378}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"css-box-model","type":"esm"},{"line":4,"path":"enzyme","type":"esm"},{"line":5,"path":"use-memo-one","type":"esm"},{"line":6,"path":"../../../src/invariant","type":"esm"},{"line":7,"path":"../../../src/view/use-draggable-publisher","type":"esm"},{"line":12,"path":"../../util/dimension","type":"esm"},{"line":13,"path":"../../util/force-update","type":"esm"},{"line":14,"path":"../../util/try-clean-prototype-stubs","type":"esm"},{"line":20,"path":"../../../src/types","type":"esm"},{"line":25,"path":"../../../src/state/registry/registry-types","type":"esm"},{"line":26,"path":"../../../src/state/registry/create-registry","type":"esm"}],"errors":[],"lineEnd":378,"lineStart":1,"maintainability":98.659,"methods":[{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.118,"difficulty":9.952,"effort":3533.095,"length":71,"time":196.283,"vocabulary":32,"volume":355,"operands":{"distinct":21,"total":38,"identifiers":["registry","draggableId","preset","inHome1","descriptor","id","index","props","ref","useRef","HTMLElement","null","setRef","useCallback","value","getRef","DraggableDescriptor","useMemo","useDraggablePublisher","getDraggableRef","defaultOptions"]},"operators":{"distinct":11,"total":33,"identifiers":["const","=","{}",".","()","function=>","[]",",",":","... (spread)","return"]}},"paramCount":1,"sloc":{"logical":22,"physical":30},"errors":[],"lineEnd":72,"lineStart":43,"name":"Item","paramNames":["props"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["ref","current","value"]},"operators":{"distinct":2,"total":2,"identifiers":["=","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":52,"lineStart":50,"name":"<anon method-1>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":0.5,"effort":4,"length":4,"time":0.222,"vocabulary":4,"volume":8,"operands":{"distinct":3,"total":3,"identifiers":["HTMLElement","ref","current"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":53,"lineStart":53,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.028,"difficulty":2.625,"effort":217.944,"length":24,"time":12.108,"vocabulary":11,"volume":83.026,"operands":{"distinct":8,"total":14,"identifiers":["id","draggableId","index","type","preset","inHome1","descriptor","droppableId"]},"operators":{"distinct":3,"total":10,"identifiers":["{}",":","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":60,"lineStart":55,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.013,"difficulty":1.5,"effort":57.059,"length":12,"time":3.17,"vocabulary":9,"volume":38.039,"operands":{"distinct":6,"total":6,"identifiers":["tryCleanPrototypeStubs","jest","spyOn","console","\"error\"","mockImplementation"]},"operators":{"distinct":3,"total":6,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":78,"lineStart":74,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":77,"lineStart":77,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1,"effort":20.68,"length":8,"time":1.149,"vocabulary":6,"volume":20.68,"operands":{"distinct":4,"total":4,"identifiers":["console","error","mockRestore","tryCleanPrototypeStubs"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":5},"errors":[],"lineEnd":84,"lineStart":80,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should register itself when mounting\"","\"should unregister itself when unmounting\"","\"should update its registration when a descriptor property changes\"","\"should not update its registration when a descriptor property does not change on an update\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":110},"errors":[],"lineEnd":195,"lineStart":86,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.104,"difficulty":4.2,"effort":1310.88,"length":63,"time":72.827,"vocabulary":31,"volume":312.114,"operands":{"distinct":25,"total":35,"identifiers":["registry","Registry","createRegistry","registerSpy","jest","spyOn","draggable","\"register\"","mount","expected","DraggableEntry","uniqueId","expect","any","String","descriptor","preset","inHome1","options","defaultOptions","getDimension","Function","toHaveBeenCalledTimes","1","toHaveBeenCalledWith"]},"operators":{"distinct":6,"total":28,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":16,"physical":16},"errors":[],"lineEnd":102,"lineStart":87,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.237,"difficulty":6.622,"effort":4699.538,"length":130,"time":261.085,"vocabulary":44,"volume":709.726,"operands":{"distinct":37,"total":70,"identifiers":["registry","Registry","createRegistry","registerSpy","jest","spyOn","draggable","\"register\"","unregisterSpy","\"unregister\"","wrapper","mount","expected","DraggableEntry","uniqueId","expect","any","String","descriptor","preset","inHome1","options","defaultOptions","getDimension","Function","not","toHaveBeenCalled","toHaveBeenCalledTimes","1","toHaveBeenCalledWith","entry","mock","calls","0","toEqual","unmount","toBe"]},"operators":{"distinct":7,"total":60,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":29,"physical":25},"errors":[],"lineEnd":128,"lineStart":104,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.083,"halstead":{"bugs":0.416,"difficulty":10.884,"effort":13582.161,"length":220,"time":754.564,"vocabulary":51,"volume":1247.934,"operands":{"distinct":43,"total":117,"identifiers":["registry","Registry","createRegistry","registerSpy","jest","spyOn","draggable","\"register\"","updateSpy","\"update\"","unregisterSpy","\"unregister\"","wrapper","mount","expectedInitial","DraggableEntry","uniqueId","expect","any","String","descriptor","preset","inHome1","options","defaultOptions","getDimension","Function","toHaveBeenCalledTimes","1","toHaveBeenCalledWith","entry","mock","calls","0","toEqual","not","toHaveBeenCalled","mockReset","setProps","index","1000","expectedUpdate","toBe"]},"operators":{"distinct":8,"total":103,"identifiers":["const","=","()",".","{}",":","[]","... (spread)"]}},"paramCount":0,"sloc":{"logical":48,"physical":53},"errors":[],"lineEnd":182,"lineStart":130,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.077,"difficulty":3.111,"effort":721.437,"length":52,"time":40.08,"vocabulary":22,"volume":231.89,"operands":{"distinct":18,"total":28,"identifiers":["registry","Registry","createRegistry","registerSpy","jest","spyOn","draggable","\"register\"","updateSpy","\"update\"","wrapper","mount","expect","toHaveBeenCalledTimes","1","forceUpdate","not","toHaveBeenCalled"]},"operators":{"distinct":4,"total":24,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":13,"physical":11},"errors":[],"lineEnd":194,"lineStart":184,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.026,"difficulty":2.75,"effort":216.89,"length":22,"time":12.049,"vocabulary":12,"volume":78.869,"operands":{"distinct":8,"total":11,"identifiers":["setBoundingClientRect","wrapper","borderBox","it","\"should publish the dimensions of the target when requested\"","\"should consider any margins when calculating dimensions\"","\"should consider the window scroll when calculating dimensions\"","\"should throw an error if no ref is provided when attempting to get a dimension\""]},"operators":{"distinct":4,"total":11,"identifiers":["const","=","function=>","()"]}},"paramCount":0,"sloc":{"logical":10,"physical":181},"errors":[],"lineEnd":377,"lineStart":197,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.018,"difficulty":3.333,"effort":184.503,"length":16,"time":10.25,"vocabulary":11,"volume":55.351,"operands":{"distinct":6,"total":8,"identifiers":["ref","HTMLElement","wrapper","getDOMNode","invariant","getBoundingClientRect"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()",".","function=>"]}},"paramCount":2,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":206,"lineStart":200,"name":"<anon method-13>","paramNames":["wrapper","borderBox"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["borderBox"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":205,"lineStart":205,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.258,"difficulty":6.818,"effort":5285.862,"length":136,"time":293.659,"vocabulary":52,"volume":775.26,"operands":{"distinct":44,"total":75,"identifiers":["expected","DraggableDimension","getDraggableDimension","descriptor","id","\"fake-id\"","droppableId","preset","home","type","index","10","borderBox","top","0","right","100","bottom","left","jest","spyOn","window","\"getComputedStyle\"","mockImplementation","registry","Registry","createRegistry","registerSpy","draggable","\"register\"","wrapper","ReactWrapper","mount","setBoundingClientRect","client","getDimension","GetDraggableDimensionFn","mock","calls","result","x","y","expect","toEqual"]},"operators":{"distinct":8,"total":61,"identifiers":["const","=","()","{}",":",".","function=>","[]"]}},"paramCount":0,"sloc":{"logical":29,"physical":39},"errors":[],"lineEnd":246,"lineStart":208,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["noComputedSpacing"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":225,"lineStart":225,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.301,"difficulty":7.102,"effort":6420.941,"length":155,"time":356.719,"vocabulary":57,"volume":904.098,"operands":{"distinct":49,"total":87,"identifiers":["margin","Spacing","top","10","right","30","bottom","40","left","50","expected","DraggableDimension","getDraggableDimension","descriptor","id","\"fake-id\"","droppableId","preset","home","type","index","borderBox","0","100","jest","spyOn","window","\"getComputedStyle\"","mockImplementation","registry","Registry","createRegistry","registerSpy","draggable","\"register\"","wrapper","ReactWrapper","mount","setBoundingClientRect","client","getDimension","GetDraggableDimensionFn","mock","calls","result","x","y","expect","toEqual"]},"operators":{"distinct":8,"total":68,"identifiers":["const","=","{}",":","()",".","function=>","[]"]}},"paramCount":0,"sloc":{"logical":35,"physical":46},"errors":[],"lineEnd":293,"lineStart":248,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.003,"difficulty":1.5,"effort":15,"length":5,"time":0.833,"vocabulary":4,"volume":10,"operands":{"distinct":2,"total":3,"identifiers":["getComputedSpacing","margin"]},"operators":{"distinct":2,"total":2,"identifiers":["()","{}"]}},"paramCount":0,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":272,"lineStart":272,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.259,"difficulty":7.07,"effort":5494.074,"length":137,"time":305.226,"vocabulary":51,"volume":777.122,"operands":{"distinct":43,"total":76,"identifiers":["expected","DraggableDimension","getDraggableDimension","descriptor","id","\"fake-id\"","droppableId","preset","home","type","index","10","borderBox","top","0","right","100","bottom","left","windowScroll","jest","spyOn","window","\"getComputedStyle\"","mockImplementation","registry","Registry","createRegistry","registerSpy","draggable","\"register\"","wrapper","ReactWrapper","mount","setBoundingClientRect","client","getDimension","GetDraggableDimensionFn","mock","calls","result","expect","toEqual"]},"operators":{"distinct":8,"total":61,"identifiers":["const","=","()","{}",":",".","function=>","[]"]}},"paramCount":0,"sloc":{"logical":28,"physical":40},"errors":[],"lineEnd":334,"lineStart":295,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["noComputedSpacing"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":313,"lineStart":313,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.085,"difficulty":3.955,"effort":1007.578,"length":53,"time":55.977,"vocabulary":28,"volume":254.79,"operands":{"distinct":22,"total":29,"identifiers":["NoRefItem","props","registry","Registry","createRegistry","registerSpy","jest","spyOn","draggable","\"register\"","wrapper","ReactWrapper","mount","\"draggable\"","getDimension","GetDraggableDimensionFn","mock","calls","0","expect","toThrow","unmount"]},"operators":{"distinct":6,"total":24,"identifiers":["function","const","=","()",".","[]"]}},"paramCount":0,"sloc":{"logical":11,"physical":41},"errors":[],"lineEnd":376,"lineStart":336,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.101,"difficulty":9.842,"effort":2994.236,"length":62,"time":166.346,"vocabulary":30,"volume":304.227,"operands":{"distinct":19,"total":34,"identifiers":["registry","draggableId","preset","inHome1","descriptor","id","index","props","ref","useRef","HTMLElement","null","getRef","useCallback","DraggableDescriptor","useMemo","useDraggablePublisher","getDraggableRef","defaultOptions"]},"operators":{"distinct":11,"total":28,"identifiers":["const","=","{}",".","()","function=>","[]",",",":","... (spread)","return"]}},"paramCount":1,"sloc":{"logical":19,"physical":28},"errors":[],"lineEnd":364,"lineStart":337,"name":"NoRefItem","paramNames":["props"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":0.5,"effort":4,"length":4,"time":0.222,"vocabulary":4,"volume":8,"operands":{"distinct":3,"total":3,"identifiers":["HTMLElement","ref","current"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":344,"lineStart":344,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.028,"difficulty":2.625,"effort":217.944,"length":24,"time":12.108,"vocabulary":11,"volume":83.026,"operands":{"distinct":8,"total":14,"identifiers":["id","draggableId","index","type","preset","inHome1","descriptor","droppableId"]},"operators":{"distinct":3,"total":10,"identifiers":["{}",":","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":351,"lineStart":346,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.317,"halstead":{"bugs":0.116,"difficulty":1.253,"effort":11344.943,"length":48.846,"time":630.275,"vocabulary":5.385,"volume":348.238,"operands":{"distinct":4.923,"total":26.731},"operators":{"distinct":0.462,"total":22.115}},"paramCount":0.192,"sloc":{"logical":12.115,"physical":14.538}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":33.563,"halstead":{"bugs":0.084,"difficulty":3.54,"effort":1842.852,"length":48.88,"time":102.381,"vocabulary":19.4,"volume":252.547,"operands":{"distinct":15.2,"total":26.76},"operators":{"distinct":4.2,"total":22.12}},"paramCount":0.2,"sloc":{"logical":11.92,"physical":26.36}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/announcer.spec.js","testCases":4,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  54 |   unmount();\n  55 |   // not unmounted straight away\n> 56 |   expect(getElement('5')).toBeTruthy();\n     |  ^ Duplicate Assert\n  57 |\n  58 |   jest.runOnlyPendingTimers();\n  59 |   expect(getElement('5')).not.toBeTruthy();","start":{"line":56,"column":2,"index":1805}},{"frame":"  57 |\n  58 |   jest.runOnlyPendingTimers();\n> 59 |   expect(getElement('5')).not.toBeTruthy();\n     |  ^ Duplicate Assert\n  60 | });\n  61 |\n  62 | it('should set the text content of the announcement element', () => {","start":{"line":59,"column":2,"index":1877}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  38 |\n  39 |   const el: ?HTMLElement = getElement('5');\n> 40 |   invariant(el, 'Cannot find node');\n     |  ^ Lazy Test\n  41 |\n  42 |   expect(el.getAttribute('aria-live')).toBe('assertive');\n  43 |   expect(el.getAttribute('aria-atomic')).toBe('true');","start":{"line":40,"column":2,"index":1310}},{"frame":"  65 |   render(<WithAnnouncer contextId=\"6\">{mock}</WithAnnouncer>);\n  66 |   const el: ?HTMLElement = getElement('6');\n> 67 |   invariant(el, 'Could not find announcer');\n     |  ^ Lazy Test\n  68 |\n  69 |   // act\n  70 |   const announce: Announce = getAnnounce(mock);","start":{"line":67,"column":2,"index":2142}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":14.085,"halstead":{"bugs":0.45,"difficulty":10.417,"effort":14071.513,"length":226,"time":781.751,"vocabulary":63,"volume":1350.865,"operands":{"distinct":54,"total":125,"identifiers":["jest","useFakeTimers","Props","contextId","ContextId","children","announce","Announce","Node","WithAnnouncer","props","useAnnouncer","getAnnounce","myMock","mock","calls","0","getMock","fn","mockImplementation","null","getElement","HTMLElement","document","getElementById","getId","it","\"should create a new element when mounting\"","render","\"5\"","el","expect","toBeTruthy","\"should apply the appropriate aria attributes and non visibility styles\"","invariant","\"Cannot find node\"","getAttribute","\"aria-live\"","toBe","\"assertive\"","\"aria-atomic\"","\"true\"","style","overflow","\"hidden\"","\"should remove the element when unmounting after a timeout\"","unmount","runOnlyPendingTimers","not","\"should set the text content of the announcement element\"","\"6\"","\"Could not find announcer\"","\"test\"","textContent"]},"operators":{"distinct":9,"total":101,"identifiers":["()",".","function","const","=","return","function=>","[]","{}"]}},"paramCount":3,"sloc":{"logical":71,"physical":76}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../src/invariant","type":"esm"},{"line":5,"path":"../../../src/types","type":"esm"},{"line":6,"path":"../../../src/view/use-announcer","type":"esm"},{"line":7,"path":"../../../src/view/use-announcer/use-announcer","type":"esm"}],"errors":[],"lineEnd":76,"lineStart":1,"maintainability":114.454,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":3.333,"effort":172.972,"length":15,"time":9.61,"vocabulary":11,"volume":51.891,"operands":{"distinct":6,"total":8,"identifiers":["announce","Announce","useAnnouncer","props","contextId","children"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","()",".","return"]}},"paramCount":1,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":19,"lineStart":16,"name":"WithAnnouncer","paramNames":["props"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.009,"difficulty":1.2,"effort":33.688,"length":10,"time":1.872,"vocabulary":7,"volume":28.074,"operands":{"distinct":5,"total":6,"identifiers":["Announce","myMock","mock","calls","0"]},"operators":{"distinct":2,"total":4,"identifiers":["[]","."]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":21,"lineStart":21,"name":"<anon method-1>","paramNames":["myMock"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":31.02,"length":8,"time":1.723,"vocabulary":6,"volume":20.68,"operands":{"distinct":3,"total":3,"identifiers":["jest","fn","mockImplementation"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":1},"errors":[],"lineEnd":22,"lineStart":22,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["null"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":22,"lineStart":22,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.007,"difficulty":1,"effort":22.459,"length":8,"time":1.248,"vocabulary":7,"volume":22.459,"operands":{"distinct":5,"total":5,"identifiers":["HTMLElement","document","getElementById","getId","contextId"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":3,"physical":2},"errors":[],"lineEnd":26,"lineStart":25,"name":"<anon method-4>","paramNames":["contextId"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.022,"difficulty":2.5,"effort":161.323,"length":18,"time":8.962,"vocabulary":12,"volume":64.529,"operands":{"distinct":8,"total":10,"identifiers":["render","\"5\"","getMock","el","HTMLElement","getElement","expect","toBeTruthy"]},"operators":{"distinct":4,"total":8,"identifiers":["()","const","=","."]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":34,"lineStart":28,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.073,"difficulty":3.111,"effort":679.816,"length":49,"time":37.768,"vocabulary":22,"volume":218.512,"operands":{"distinct":18,"total":28,"identifiers":["render","\"5\"","getMock","el","HTMLElement","getElement","invariant","\"Cannot find node\"","expect","getAttribute","\"aria-live\"","toBe","\"assertive\"","\"aria-atomic\"","\"true\"","style","overflow","\"hidden\""]},"operators":{"distinct":4,"total":21,"identifiers":["()","const","=","."]}},"paramCount":0,"sloc":{"logical":13,"physical":12},"errors":[],"lineEnd":47,"lineStart":36,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.044,"difficulty":4.25,"effort":564.546,"length":34,"time":31.364,"vocabulary":15,"volume":132.834,"operands":{"distinct":10,"total":17,"identifiers":["unmount","render","\"5\"","getMock","expect","getElement","toBeTruthy","jest","runOnlyPendingTimers","not"]},"operators":{"distinct":5,"total":17,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":12,"physical":12},"errors":[],"lineEnd":60,"lineStart":49,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.056,"difficulty":2.875,"effort":484.596,"length":39,"time":26.922,"vocabulary":20,"volume":168.555,"operands":{"distinct":16,"total":23,"identifiers":["mock","getMock","render","\"6\"","el","HTMLElement","getElement","invariant","\"Could not find announcer\"","announce","Announce","getAnnounce","\"test\"","expect","textContent","toBe"]},"operators":{"distinct":4,"total":16,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":14},"errors":[],"lineEnd":75,"lineStart":62,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.408,"halstead":{"bugs":0.045,"difficulty":1.042,"effort":1407.151,"length":22.6,"time":78.175,"vocabulary":6.3,"volume":135.087,"operands":{"distinct":5.4,"total":12.5},"operators":{"distinct":0.9,"total":10.1}},"paramCount":0.3,"sloc":{"logical":7.1,"physical":7.6}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":36.124,"halstead":{"bugs":0.026,"difficulty":2.197,"effort":238.935,"length":20.222,"time":13.274,"vocabulary":11.222,"volume":78.615,"operands":{"distinct":8,"total":11.222},"operators":{"distinct":3.222,"total":9}},"paramCount":0.333,"sloc":{"logical":6.111,"physical":6}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/use-droppable-publisher/scroll-watching.spec.js","testCases":10,"smells":21,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  80 |     // first event\n  81 |     scroll(container, { x: 500, y: 1000 });\n> 82 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledTimes(1);\n     |    ^ Duplicate Assert\n  83 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledWith(\n  84 |       preset.home.descriptor.id,\n  85 |       { x: 500, y: 1000 },","start":{"line":82,"column":4,"index":2885}},{"frame":"  81 |     scroll(container, { x: 500, y: 1000 });\n  82 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledTimes(1);\n> 83 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledWith(\n     |    ^ Duplicate Assert\n  84 |       preset.home.descriptor.id,\n  85 |       { x: 500, y: 1000 },\n  86 |     );","start":{"line":83,"column":4,"index":2953}},{"frame":"  90 |     // second event - scroll to same spot\n  91 |     scroll(container, { x: 500, y: 1000 });\n> 92 |     expect(marshal.updateDroppableScroll).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  93 |\n  94 |     // third event - new value\n  95 |     scroll(container, { x: 500, y: 1001 });","start":{"line":92,"column":4,"index":3238}},{"frame":"  94 |     // third event - new value\n  95 |     scroll(container, { x: 500, y: 1001 });\n> 96 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledWith(\n     |    ^ Duplicate Assert\n  97 |       preset.home.descriptor.id,\n  98 |       { x: 500, y: 1001 },\n  99 |     );","start":{"line":96,"column":4,"index":3380}},{"frame":"  160 |     requestAnimationFrame.step();\n  161 |\n> 162 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  163 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledWith(\n  164 |       preset.home.descriptor.id,\n  165 |       { x: 200, y: 800 },","start":{"line":162,"column":4,"index":5658}},{"frame":"  161 |\n  162 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledTimes(1);\n> 163 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledWith(\n      |    ^ Duplicate Assert\n  164 |       preset.home.descriptor.id,\n  165 |       { x: 200, y: 800 },\n  166 |     );","start":{"line":163,"column":4,"index":5726}},{"frame":"  168 |     // also checking that no loose frames are stored up\n  169 |     requestAnimationFrame.flush();\n> 170 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  171 |   });\n  172 |\n  173 |   it('should not fire a scroll if the value has not changed since the previous frame', () => {","start":{"line":170,"column":4,"index":5948}},{"frame":"  196 |     // release the frame\n  197 |     requestAnimationFrame.step();\n> 198 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  199 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledWith(\n  200 |       preset.home.descriptor.id,\n  201 |       { x: 500, y: 1000 },","start":{"line":198,"column":4,"index":7040}},{"frame":"  197 |     requestAnimationFrame.step();\n  198 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledTimes(1);\n> 199 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledWith(\n      |    ^ Duplicate Assert\n  200 |       preset.home.descriptor.id,\n  201 |       { x: 500, y: 1000 },\n  202 |     );","start":{"line":199,"column":4,"index":7108}},{"frame":"  212 |     // release the frame\n  213 |     requestAnimationFrame.step();\n> 214 |     expect(marshal.updateDroppableScroll).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  215 |   });\n  216 |\n  217 |   it('should not publish a scroll update after requested not to update while an animation frame is occurring', () => {","start":{"line":214,"column":4,"index":7557}},{"frame":"  238 |     scroll(container, { x: 500, y: 1000 });\n  239 |     requestAnimationFrame.step();\n> 240 |     expect(marshal.updateDroppableScroll).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  241 |     // $ExpectError\n  242 |     marshal.updateDroppableScroll.mockReset();\n  243 |","start":{"line":240,"column":4,"index":8576}},{"frame":"  251 |     // flushing any frames\n  252 |     requestAnimationFrame.flush();\n> 253 |     expect(marshal.updateDroppableScroll).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  254 |   });\n  255 | });\n  256 |","start":{"line":253,"column":4,"index":8958}},{"frame":"  277 |   // first event\n  278 |   scroll(container, { x: 500, y: 1000 });\n> 279 |   expect(marshal.updateDroppableScroll).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  280 |   // $ExpectError\n  281 |   marshal.updateDroppableScroll.mockReset();\n  282 |","start":{"line":279,"column":2,"index":9929}},{"frame":"  285 |   // scroll event after no longer watching\n  286 |   scroll(container, { x: 190, y: 400 });\n> 287 |   expect(marshal.updateDroppableScroll).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  288 | });\n  289 |\n  290 | it('should stop watching for scroll events when the component is unmounted', () => {","start":{"line":287,"column":2,"index":10171}},{"frame":"  371 |     passive: true,\n  372 |   };\n> 373 |   expect(container.addEventListener).toHaveBeenCalledWith(\n      |  ^ Duplicate Assert\n  374 |     'scroll',\n  375 |     expect.any(Function),\n  376 |     expectedOptions,","start":{"line":373,"column":2,"index":13178}},{"frame":"  376 |     expectedOptions,\n  377 |   );\n> 378 |   expect(container.removeEventListener).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  379 |   container.addEventListener.mockReset();\n  380 |\n  381 |   // unwatching scroll","start":{"line":378,"column":2,"index":13303}},{"frame":"  383 |\n  384 |   // assertion\n> 385 |   expect(container.removeEventListener).toHaveBeenCalledWith(\n      |  ^ Duplicate Assert\n  386 |     'scroll',\n  387 |     expect.any(Function),\n  388 |     expectedOptions,","start":{"line":385,"column":2,"index":13476}},{"frame":"  388 |     expectedOptions,\n  389 |   );\n> 390 |   expect(container.removeEventListener).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  391 |   expect(container.addEventListener).not.toHaveBeenCalled();\n  392 |\n  393 |   // cleanup","start":{"line":390,"column":2,"index":13604}},{"frame":"  389 |   );\n  390 |   expect(container.removeEventListener).toHaveBeenCalledTimes(1);\n> 391 |   expect(container.addEventListener).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  392 |\n  393 |   // cleanup\n  394 |   container.addEventListener.mockRestore();","start":{"line":391,"column":2,"index":13670}}]},{"name":"Redundant Print","packageName":"redundantPrint","items":[{"frame":"  314 |   expect(marshal.updateDroppableScroll).not.toHaveBeenCalled();\n  315 |   // also logs a warning\n> 316 |   expect(console.warn).toHaveBeenCalled();\n      |         ^ Redundant Print\n  317 |\n  318 |   // cleanup\n  319 |   // $ExpectError","start":{"line":316,"column":9,"index":11282}},{"frame":"  318 |   // cleanup\n  319 |   // $ExpectError\n> 320 |   console.warn.mockRestore();\n      |  ^ Redundant Print\n  321 | });\n  322 |\n  323 | it('should throw an error if asked to watch a scroll when already listening for scroll changes', () => {","start":{"line":320,"column":2,"index":11350}}]}],"metrics":{"aggregate":{"cyclomatic":16,"cyclomaticDensity":5.246,"halstead":{"bugs":3.003,"difficulty":33.82,"effort":304670.028,"length":1339,"time":16926.113,"vocabulary":106,"volume":9008.685,"operands":{"distinct":97,"total":729,"identifiers":["scroll","el","target","scrollTop","y","scrollLeft","x","dispatchEvent","Event","\"scroll\"","setViewport","preset","viewport","describe","\"should immediately publish updates\"","it","\"should immediately publish the scroll offset of the closest scrollable\"","marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","container","HTMLElement","find","\".scroll-container\"","getDOMNode","invariant","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","windowScroll","immediate","500","1000","expect","updateDroppableScroll","toHaveBeenCalledWith","home","descriptor","id","\"should not fire a scroll if the value has not changed since the previous call\"","toHaveBeenCalledTimes","1","mockReset","not","toHaveBeenCalled","1001","\"should schedule publish updates\"","\"should publish the scroll offset of the closest scrollable\"","scheduled","requestAnimationFrame","step","\"should throttle multiple scrolls into a animation frame\"","200","800","flush","\"should not fire a scroll if the value has not changed since the previous frame\"","501","\"should not publish a scroll update after requested not to update while an animation frame is occurring\"","400","100","dragStopped","\"should stop watching scroll when no longer required to publish\"","190","\"should stop watching for scroll events when the component is unmounted\"","console","\"warn\"","mockImplementation","unmount","300","warn","mockRestore","\"should throw an error if asked to watch a scroll when already listening for scroll changes\"","request","toThrow","\"should add and remove events with the same event options\"","\"addEventListener\"","\"removeEventListener\"","expectedOptions","passive","true","addEventListener","any","Function","removeEventListener"]},"operators":{"distinct":9,"total":610,"identifiers":["const","=","function=>",".","()","new","[]","{}",":"]}},"paramCount":2,"sloc":{"logical":305,"physical":397}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"enzyme","type":"esm"},{"line":3,"path":"react","type":"esm"},{"line":4,"path":"css-box-model","type":"esm"},{"line":5,"path":"../../../../src/invariant","type":"esm"},{"line":6,"path":"../../../../src/state/dimension-marshal/dimension-marshal-types","type":"esm"},{"line":7,"path":"../../../util/dimension-marshal","type":"esm"},{"line":8,"path":"../../../util/viewport","type":"esm"},{"line":15,"path":"./util/shared","type":"esm"},{"line":19,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":20,"path":"../../../../src/state/registry/create-registry","type":"esm"}],"errors":[],"lineEnd":397,"lineStart":1,"maintainability":89.545,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.026,"difficulty":2.667,"effort":207.225,"length":21,"time":11.512,"vocabulary":13,"volume":77.709,"operands":{"distinct":9,"total":12,"identifiers":["el","scrollTop","target","y","scrollLeft","x","dispatchEvent","Event","\"scroll\""]},"operators":{"distinct":4,"total":9,"identifiers":["=",".","()","new"]}},"paramCount":2,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":26,"lineStart":22,"name":"<anon method-1>","paramNames":["el","target"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should immediately publish the scroll offset of the closest scrollable\"","\"should not fire a scroll if the value has not changed since the previous call\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":72},"errors":[],"lineEnd":101,"lineStart":30,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.184,"difficulty":4.936,"effort":2726.374,"length":100,"time":151.465,"vocabulary":46,"volume":552.356,"operands":{"distinct":39,"total":55,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","container","HTMLElement","find","\".scroll-container\"","getDOMNode","invariant","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","immediate","scroll","x","500","y","1000","expect","updateDroppableScroll","toHaveBeenCalledWith","home","descriptor","id"]},"operators":{"distinct":7,"total":45,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":21,"physical":27},"errors":[],"lineEnd":57,"lineStart":31,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.778,"halstead":{"bugs":0.317,"difficulty":7.156,"effort":6811.899,"length":167,"time":378.439,"vocabulary":52,"volume":951.973,"operands":{"distinct":45,"total":92,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","container","HTMLElement","find","\".scroll-container\"","getDOMNode","invariant","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","immediate","scroll","x","500","y","1000","expect","updateDroppableScroll","toHaveBeenCalledTimes","1","toHaveBeenCalledWith","home","descriptor","id","mockReset","not","toHaveBeenCalled","1001"]},"operators":{"distinct":7,"total":75,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":36,"physical":42},"errors":[],"lineEnd":100,"lineStart":59,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should publish the scroll offset of the closest scrollable\"","\"should throttle multiple scrolls into a animation frame\"","\"should not fire a scroll if the value has not changed since the previous frame\"","\"should not publish a scroll update after requested not to update while an animation frame is occurring\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":153},"errors":[],"lineEnd":255,"lineStart":103,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.194,"difficulty":4.866,"effort":2826.263,"length":104,"time":157.015,"vocabulary":48,"volume":580.836,"operands":{"distinct":41,"total":57,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","container","HTMLElement","find","\".scroll-container\"","getDOMNode","invariant","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","scheduled","scroll","x","500","y","1000","requestAnimationFrame","step","expect","updateDroppableScroll","toHaveBeenCalledWith","home","descriptor","id"]},"operators":{"distinct":7,"total":47,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":22,"physical":29},"errors":[],"lineEnd":132,"lineStart":104,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.26,"difficulty":5.707,"effort":4445.364,"length":136,"time":246.965,"vocabulary":53,"volume":778.997,"operands":{"distinct":46,"total":75,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","container","HTMLElement","find","\".scroll-container\"","getDOMNode","invariant","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","scheduled","scroll","x","500","y","1000","200","800","requestAnimationFrame","step","expect","updateDroppableScroll","toHaveBeenCalledTimes","1","toHaveBeenCalledWith","home","descriptor","id","flush"]},"operators":{"distinct":7,"total":61,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":30,"physical":38},"errors":[],"lineEnd":171,"lineStart":134,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.295,"difficulty":6.125,"effort":5417.857,"length":153,"time":300.992,"vocabulary":55,"volume":884.548,"operands":{"distinct":48,"total":84,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","container","HTMLElement","find","\".scroll-container\"","getDOMNode","invariant","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","scheduled","scroll","x","500","y","1000","requestAnimationFrame","step","expect","updateDroppableScroll","toHaveBeenCalledTimes","1","toHaveBeenCalledWith","home","descriptor","id","mockReset","501","1001","not","toHaveBeenCalled"]},"operators":{"distinct":7,"total":69,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":34,"physical":43},"errors":[],"lineEnd":215,"lineStart":173,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.239,"difficulty":5.174,"effort":3704.47,"length":125,"time":205.804,"vocabulary":53,"volume":715.99,"operands":{"distinct":46,"total":68,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","container","HTMLElement","find","\".scroll-container\"","getDOMNode","invariant","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","scheduled","scroll","x","500","y","1000","requestAnimationFrame","step","expect","updateDroppableScroll","toHaveBeenCalledTimes","1","mockReset","400","100","dragStopped","flush","not","toHaveBeenCalled"]},"operators":{"distinct":7,"total":57,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":28,"physical":38},"errors":[],"lineEnd":254,"lineStart":217,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.22,"difficulty":5.209,"effort":3439.865,"length":117,"time":191.104,"vocabulary":50,"volume":660.331,"operands":{"distinct":43,"total":64,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","container","HTMLElement","find","\".scroll-container\"","getDOMNode","invariant","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","immediate","scroll","x","500","y","1000","expect","updateDroppableScroll","toHaveBeenCalledTimes","1","mockReset","dragStopped","190","400","not","toHaveBeenCalled"]},"operators":{"distinct":7,"total":53,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":26,"physical":32},"errors":[],"lineEnd":288,"lineStart":257,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.219,"difficulty":5.767,"effort":3794.984,"length":116,"time":210.832,"vocabulary":51,"volume":658.001,"operands":{"distinct":43,"total":62,"identifiers":["jest","spyOn","console","\"warn\"","mockImplementation","marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","droppable","\"register\"","wrapper","mount","container","HTMLElement","find","\".scroll-container\"","getDOMNode","invariant","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","immediate","unmount","scroll","x","100","y","300","expect","updateDroppableScroll","not","toHaveBeenCalled","warn","mockRestore"]},"operators":{"distinct":8,"total":54,"identifiers":["()",".","function=>","const","=","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":26,"physical":32},"errors":[],"lineEnd":321,"lineStart":290,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":291,"lineStart":291,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.105,"difficulty":4.304,"effort":1359.179,"length":65,"time":75.51,"vocabulary":29,"volume":315.769,"operands":{"distinct":23,"total":33,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","callbacks","DroppableCallbacks","mock","calls","0","request","expect","toThrow","dragStopped","unmount"]},"operators":{"distinct":6,"total":32,"identifiers":["const","=","()",".","[]","function=>"]}},"paramCount":0,"sloc":{"logical":16,"physical":22},"errors":[],"lineEnd":344,"lineStart":323,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1,"effort":22.459,"length":8,"time":1.248,"vocabulary":7,"volume":22.459,"operands":{"distinct":5,"total":5,"identifiers":["callbacks","getDimensionAndWatchScroll","preset","windowScroll","immediate"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":2},"errors":[],"lineEnd":337,"lineStart":336,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.322,"difficulty":6.851,"effort":6623.753,"length":168,"time":367.986,"vocabulary":54,"volume":966.821,"operands":{"distinct":47,"total":92,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","container","HTMLElement","find","\".scroll-container\"","getDOMNode","invariant","\"addEventListener\"","\"removeEventListener\"","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","scheduled","expectedOptions","passive","true","expect","addEventListener","toHaveBeenCalledWith","\"scroll\"","any","Function","removeEventListener","not","toHaveBeenCalled","mockReset","dragStopped","toHaveBeenCalledTimes","1","mockRestore"]},"operators":{"distinct":7,"total":76,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":34,"physical":50},"errors":[],"lineEnd":396,"lineStart":347,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.328,"halstead":{"bugs":0.188,"difficulty":2.114,"effort":19041.877,"length":83.688,"time":1057.882,"vocabulary":6.625,"volume":563.043,"operands":{"distinct":6.063,"total":45.563},"operators":{"distinct":0.563,"total":38.125}},"paramCount":0.125,"sloc":{"logical":19.063,"physical":24.813}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":10.643,"halstead":{"bugs":0.161,"difficulty":4.18,"effort":2765.088,"length":86.933,"time":153.616,"vocabulary":34.867,"volume":481.952,"operands":{"distinct":29.533,"total":47.4},"operators":{"distinct":5.333,"total":39.533}},"paramCount":0.133,"sloc":{"logical":19.333,"physical":39.067}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/use-droppable-publisher/registration.spec.js","testCases":4,"smells":13,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  26 |   );\n  27 |\n> 28 |   expect(registerSpy).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  29 |\n  30 |   // $ExpectError: using awesome matchers\n  31 |   const expected: DroppableEntry = {","start":{"line":28,"column":2,"index":900}},{"frame":"  35 |   };\n  36 |\n> 37 |   expect(registerSpy).toHaveBeenCalledWith(expected);\n     |  ^ Duplicate Assert\n  38 | });\n  39 |\n  40 | it('should unregister itself when unmounting', () => {","start":{"line":37,"column":2,"index":1143}},{"frame":"  49 |   );\n  50 |   expect(registerSpy).toHaveBeenCalled();\n> 51 |   expect(unregisterSpy).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  52 |\n  53 |   const entry = registerSpy.mock.calls[0][0];\n  54 |","start":{"line":51,"column":2,"index":1602}},{"frame":"  54 |\n  55 |   wrapper.unmount();\n> 56 |   expect(unregisterSpy).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  57 |   expect(unregisterSpy).toHaveBeenCalledWith(entry);\n  58 | });\n  59 |","start":{"line":56,"column":2,"index":1719}},{"frame":"  55 |   wrapper.unmount();\n  56 |   expect(unregisterSpy).toHaveBeenCalledTimes(1);\n> 57 |   expect(unregisterSpy).toHaveBeenCalledWith(entry);\n     |  ^ Duplicate Assert\n  58 | });\n  59 |\n  60 | it('should update its registration when a descriptor property changes', () => {","start":{"line":57,"column":2,"index":1769}},{"frame":"   96 |\n   97 |   // old descriptor removed\n>  98 |   expect(unregisterSpy).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n   99 |   expect(unregisterSpy).toHaveBeenCalledWith(first);\n  100 |\n  101 |   // new descriptor added","start":{"line":98,"column":2,"index":2877}},{"frame":"   97 |   // old descriptor removed\n   98 |   expect(unregisterSpy).toHaveBeenCalledTimes(1);\n>  99 |   expect(unregisterSpy).toHaveBeenCalledWith(first);\n      |  ^ Duplicate Assert\n  100 |\n  101 |   // new descriptor added\n  102 |   // $ExpectError: using awesome matchers","start":{"line":99,"column":2,"index":2927}},{"frame":"  119 |     </WithAppContext>,\n  120 |   );\n> 121 |   expect(registerSpy).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  122 |   expect(unregisterSpy).not.toHaveBeenCalled();\n  123 |   registerSpy.mockClear();\n  124 |","start":{"line":121,"column":2,"index":3664}},{"frame":"  120 |   );\n  121 |   expect(registerSpy).toHaveBeenCalledTimes(1);\n> 122 |   expect(unregisterSpy).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  123 |   registerSpy.mockClear();\n  124 |\n  125 |   forceUpdate(wrapper);","start":{"line":122,"column":2,"index":3712}},{"frame":"  120 |   );\n  121 |   expect(registerSpy).toHaveBeenCalledTimes(1);\n> 122 |   expect(unregisterSpy).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  123 |   registerSpy.mockClear();\n  124 |\n  125 |   forceUpdate(wrapper);","start":{"line":122,"column":2,"index":3712}},{"frame":"  124 |\n  125 |   forceUpdate(wrapper);\n> 126 |   expect(unregisterSpy).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  127 |   expect(registerSpy).not.toHaveBeenCalled();\n  128 | });\n  129 |","start":{"line":126,"column":2,"index":3812}},{"frame":"  124 |\n  125 |   forceUpdate(wrapper);\n> 126 |   expect(unregisterSpy).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  127 |   expect(registerSpy).not.toHaveBeenCalled();\n  128 | });\n  129 |","start":{"line":126,"column":2,"index":3812}},{"frame":"  125 |   forceUpdate(wrapper);\n  126 |   expect(unregisterSpy).not.toHaveBeenCalled();\n> 127 |   expect(registerSpy).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  128 | });\n  129 |","start":{"line":127,"column":2,"index":3860}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":6.316,"halstead":{"bugs":0.77,"difficulty":17.575,"effort":40603.35,"length":388,"time":2255.742,"vocabulary":62,"volume":2310.228,"operands":{"distinct":53,"total":207,"identifiers":["setViewport","preset","viewport","it","\"should register itself when mounting\"","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","mount","expect","toHaveBeenCalledTimes","1","expected","DroppableEntry","uniqueId","any","String","descriptor","home","callbacks","Object","toHaveBeenCalledWith","\"should unregister itself when unmounting\"","unregisterSpy","\"unregister\"","wrapper","toHaveBeenCalled","not","entry","mock","calls","0","unmount","\"should update its registration when a descriptor property changes\"","extra","expectedFirst","first","toEqual","mockClear","setProps","droppableId","\"some-new-id\"","updated","DroppableDescriptor","id","expectedSecond","\"should not update its registration when a descriptor property does not change on an update\"","forceUpdate"]},"operators":{"distinct":9,"total":181,"identifiers":["()",".","function=>","const","=","{}",":","[]","... (spread)"]}},"paramCount":1,"sloc":{"logical":95,"physical":129}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":3,"path":"enzyme","type":"esm"},{"line":4,"path":"react","type":"esm"},{"line":5,"path":"../../../../src/types","type":"esm"},{"line":6,"path":"../../../util/force-update","type":"esm"},{"line":7,"path":"./util/shared","type":"esm"},{"line":8,"path":"../../../util/viewport","type":"esm"},{"line":9,"path":"../../../util/pass-through-props","type":"esm"},{"line":13,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":14,"path":"../../../../src/state/registry/create-registry","type":"esm"}],"errors":[],"lineEnd":129,"lineStart":1,"maintainability":96.09,"methods":[{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.097,"difficulty":4.304,"effort":1254.626,"length":60,"time":69.701,"vocabulary":29,"volume":291.479,"operands":{"distinct":23,"total":33,"identifiers":["registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","mount","expect","toHaveBeenCalledTimes","1","expected","DroppableEntry","uniqueId","any","String","descriptor","preset","home","callbacks","Object","toHaveBeenCalledWith"]},"operators":{"distinct":6,"total":27,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":21},"errors":[],"lineEnd":38,"lineStart":18,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.125,"difficulty":4.457,"effort":1671.078,"length":78,"time":92.838,"vocabulary":28,"volume":374.974,"operands":{"distinct":23,"total":41,"identifiers":["registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","unregisterSpy","\"unregister\"","wrapper","mount","expect","toHaveBeenCalled","not","entry","mock","calls","0","unmount","toHaveBeenCalledTimes","1","toHaveBeenCalledWith"]},"operators":{"distinct":5,"total":37,"identifiers":["const","=","()",".","[]"]}},"paramCount":0,"sloc":{"logical":18,"physical":19},"errors":[],"lineEnd":58,"lineStart":40,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.29,"difficulty":9.225,"effort":8028.333,"length":155,"time":446.019,"vocabulary":49,"volume":870.28,"operands":{"distinct":40,"total":82,"identifiers":["registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","unregisterSpy","\"unregister\"","wrapper","mount","extra","expectedFirst","DroppableEntry","uniqueId","expect","any","String","descriptor","preset","home","callbacks","Object","first","mock","calls","0","toEqual","mockClear","setProps","droppableId","\"some-new-id\"","updated","DroppableDescriptor","id","toHaveBeenCalledTimes","1","toHaveBeenCalledWith","expectedSecond"]},"operators":{"distinct":9,"total":73,"identifiers":["const","=","()",".","function=>","{}",":","[]","... (spread)"]}},"paramCount":0,"sloc":{"logical":34,"physical":50},"errors":[],"lineEnd":109,"lineStart":60,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["registry","extra"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":5},"errors":[],"lineEnd":71,"lineStart":67,"name":"<anon method-4>","paramNames":["extra"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.109,"difficulty":4,"effort":1302.786,"length":72,"time":72.377,"vocabulary":23,"volume":325.696,"operands":{"distinct":19,"total":38,"identifiers":["registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","unregisterSpy","\"unregister\"","wrapper","mount","expect","toHaveBeenCalledTimes","1","not","toHaveBeenCalled","mockClear","forceUpdate"]},"operators":{"distinct":4,"total":34,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":18,"physical":18},"errors":[],"lineEnd":128,"lineStart":111,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.053,"halstead":{"bugs":0.128,"difficulty":2.929,"effort":6767.225,"length":64.667,"time":375.957,"vocabulary":10.333,"volume":385.038,"operands":{"distinct":8.833,"total":34.5},"operators":{"distinct":1.5,"total":30.167}},"paramCount":0.167,"sloc":{"logical":15.833,"physical":21.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":24.144,"halstead":{"bugs":0.124,"difficulty":4.397,"effort":2451.365,"length":73.4,"time":136.187,"vocabulary":26.2,"volume":372.886,"operands":{"distinct":21.4,"total":39.2},"operators":{"distinct":4.8,"total":34.2}},"paramCount":0.2,"sloc":{"logical":17.2,"physical":22.6}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/use-droppable-publisher/publishing.spec.js","testCases":9,"smells":6,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  411 |       registerSpy.mock.calls[0][0].callbacks;\n  412 |     // execute it to get the dimension\n> 413 |     expect(console.warn).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  414 |     const result: DroppableDimension = callbacks.getDimensionAndWatchScroll(\n  415 |       preset.windowScroll,\n  416 |       immediate,","start":{"line":413,"column":4,"index":13396}},{"frame":"  416 |       immediate,\n  417 |     );\n> 418 |     expect(console.warn).toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  419 |\n  420 |     expect(result).toEqual(expected);\n  421 |     // $FlowFixMe","start":{"line":418,"column":4,"index":13573}}]},{"name":"Exception Handling","packageName":"exceptionHandling","items":[{"frame":"  402 |     // should never be called!\n  403 |     jest.spyOn(parent, 'getBoundingClientRect').mockImplementation(() => {\n> 404 |       throw new Error(\n      |      ^ Exception Handling\n  405 |         'Should not be getting the boundingClientRect on the parent',\n  406 |       );\n  407 |     });","start":{"line":404,"column":6,"index":13117}}]},{"name":"Redundant Print","packageName":"redundantPrint","items":[{"frame":"  411 |       registerSpy.mock.calls[0][0].callbacks;\n  412 |     // execute it to get the dimension\n> 413 |     expect(console.warn).not.toHaveBeenCalled();\n      |           ^ Redundant Print\n  414 |     const result: DroppableDimension = callbacks.getDimensionAndWatchScroll(\n  415 |       preset.windowScroll,\n  416 |       immediate,","start":{"line":413,"column":11,"index":13403}},{"frame":"  416 |       immediate,\n  417 |     );\n> 418 |     expect(console.warn).toHaveBeenCalled();\n      |           ^ Redundant Print\n  419 |\n  420 |     expect(result).toEqual(expected);\n  421 |     // $FlowFixMe","start":{"line":418,"column":11,"index":13580}},{"frame":"  420 |     expect(result).toEqual(expected);\n  421 |     // $FlowFixMe\n> 422 |     console.warn.mockRestore();\n      |    ^ Redundant Print\n  423 |   });\n  424 | });\n  425 |","start":{"line":422,"column":4,"index":13675}}]}],"metrics":{"aggregate":{"cyclomatic":30,"cyclomaticDensity":6.849,"halstead":{"bugs":4.052,"difficulty":45.818,"effort":556971.658,"length":1760,"time":30942.87,"vocabulary":120,"volume":12156.127,"operands":{"distinct":110,"total":1008,"identifiers":["beforeEach","setViewport","preset","viewport","afterEach","tryCleanPrototypeStubs","it","\"should publish the dimensions of the target\"","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","expected","DroppableDimension","getDroppableDimension","descriptor","id","\"fake-id\"","type","\"fake\"","mode","\"standard\"","borderBox","bigClient","margin","padding","border","windowScroll","x","0","y","wrapper","ReactWrapper","mount","false","el","HTMLElement","getDOMNode","invariant","\"getBoundingClientRect\"","mockImplementation","callbacks","DroppableCallbacks","mock","calls","result","getDimensionAndWatchScroll","scheduled","expect","toEqual","client","\"should consider the window scroll when calculating dimensions\"","Position","500","1000","setWindowScroll","shouldPublish","describe","\"no closest scrollable\"","\"should return null for the closest scrollable if there is no scroll container\"","find","\".droppable\"","immediate","\"droppable is scrollable\"","\"should collect information about the scrollable\"","closest","smallFrameClient","scrollSize","scrollWidth","paddingBox","width","scrollHeight","height","scroll","shouldClipSubject","true","Object","defineProperty","\"scrollWidth\"","value","\"scrollHeight\"","\"should account for a change in scroll when crafting its custom borderBox\"","10","displacement","negate","offsetByPosition","scrollTop","scrollLeft","\"parent of droppable is scrollable\"","ScrollSize","parent","\".scroll-parent\"","\"both droppable and parent is scrollable\"","\"should log a warning as the use case is not supported\"","console","\"warn\"","Error","\"Should not be getting the boundingClientRect on the parent\"","warn","not","toHaveBeenCalled","mockRestore","\"should capture the initial scroll of the closest scrollable\"","frameScroll","20","\"should indicate if subject clipping is permitted based on the ignoreContainerClipping prop\""]},"operators":{"distinct":10,"total":752,"identifiers":["()","function=>",".","const","=","{}",":","[]","throw","new"]}},"paramCount":0,"sloc":{"logical":438,"physical":547}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":4,"path":"react","type":"esm"},{"line":5,"path":"../../../../src/invariant","type":"esm"},{"line":6,"path":"../../../../src/types","type":"esm"},{"line":7,"path":"../../../../src/state/position","type":"esm"},{"line":8,"path":"../../../../src/state/spacing","type":"esm"},{"line":9,"path":"../../../util/dimension","type":"esm"},{"line":10,"path":"../../../util/set-window-scroll","type":"esm"},{"line":24,"path":"./util/shared","type":"esm"},{"line":25,"path":"../../../util/viewport","type":"esm"},{"line":26,"path":"../../../util/try-clean-prototype-stubs","type":"esm"},{"line":30,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":31,"path":"../../../../src/state/registry/create-registry","type":"esm"}],"errors":[],"lineEnd":547,"lineStart":1,"maintainability":93.952,"methods":[{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["setViewport","preset","viewport"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":35,"lineStart":33,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0.5,"effort":1,"length":2,"time":0.056,"vocabulary":2,"volume":2,"operands":{"distinct":1,"total":1,"identifiers":["tryCleanPrototypeStubs"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":39,"lineStart":37,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.32,"difficulty":8,"effort":7677.646,"length":166,"time":426.536,"vocabulary":55,"volume":959.706,"operands":{"distinct":47,"total":94,"identifiers":["registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","expected","DroppableDimension","getDroppableDimension","descriptor","id","\"fake-id\"","type","\"fake\"","mode","\"standard\"","borderBox","bigClient","margin","padding","border","windowScroll","x","0","y","wrapper","ReactWrapper","mount","false","el","HTMLElement","getDOMNode","invariant","\"getBoundingClientRect\"","mockImplementation","callbacks","DroppableCallbacks","mock","calls","result","getDimensionAndWatchScroll","scheduled","expect","toEqual","client"]},"operators":{"distinct":8,"total":72,"identifiers":["const","=","()",".","{}",":","function=>","[]"]}},"paramCount":0,"sloc":{"logical":38,"physical":44},"errors":[],"lineEnd":84,"lineStart":41,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["bigClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":69,"lineStart":69,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.03,"halstead":{"bugs":0.271,"difficulty":6.275,"effort":5093.677,"length":138,"time":282.982,"vocabulary":59,"volume":811.805,"operands":{"distinct":51,"total":80,"identifiers":["registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","windowScroll","Position","x","500","y","1000","setWindowScroll","shouldPublish","false","expected","DroppableDimension","getDroppableDimension","descriptor","id","\"fake-id\"","type","\"fake\"","mode","\"standard\"","borderBox","bigClient","margin","padding","border","wrapper","ReactWrapper","mount","el","HTMLElement","getDOMNode","invariant","\"getBoundingClientRect\"","mockImplementation","callbacks","DroppableCallbacks","mock","calls","0","result","getDimensionAndWatchScroll","scheduled","expect","toEqual"]},"operators":{"distinct":8,"total":58,"identifiers":["const","=","()",".","{}",":","function=>","[]"]}},"paramCount":0,"sloc":{"logical":33,"physical":46},"errors":[],"lineEnd":131,"lineStart":86,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["bigClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":120,"lineStart":120,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should return null for the closest scrollable if there is no scroll container\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":35},"errors":[],"lineEnd":167,"lineStart":133,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.201,"difficulty":6.2,"effort":3739.691,"length":108,"time":207.761,"vocabulary":48,"volume":603.176,"operands":{"distinct":40,"total":62,"identifiers":["registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","expected","DroppableDimension","getDroppableDimension","descriptor","borderBox","bigClient","border","margin","padding","windowScroll","preset","wrapper","mount","false","el","HTMLElement","find","\".droppable\"","getDOMNode","invariant","\"getBoundingClientRect\"","mockImplementation","callbacks","DroppableCallbacks","mock","calls","0","result","getDimensionAndWatchScroll","immediate","expect","toEqual"]},"operators":{"distinct":8,"total":46,"identifiers":["const","=","()",".","{}",":","function=>","[]"]}},"paramCount":0,"sloc":{"logical":26,"physical":33},"errors":[],"lineEnd":166,"lineStart":134,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["bigClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":154,"lineStart":154,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should collect information about the scrollable\"","\"should account for a change in scroll when crafting its custom borderBox\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":132},"errors":[],"lineEnd":300,"lineStart":169,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.381,"halstead":{"bugs":0.357,"difficulty":7.228,"effort":7748.357,"length":178,"time":430.464,"vocabulary":65,"volume":1071.981,"operands":{"distinct":57,"total":103,"identifiers":["expected","DroppableDimension","getDroppableDimension","descriptor","borderBox","bigClient","margin","padding","border","windowScroll","preset","closest","smallFrameClient","scrollSize","scrollWidth","paddingBox","width","scrollHeight","height","scroll","x","0","y","shouldClipSubject","true","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","el","HTMLElement","find","\".droppable\"","getDOMNode","invariant","\"getBoundingClientRect\"","mockImplementation","Object","defineProperty","\"scrollWidth\"","value","\"scrollHeight\"","callbacks","DroppableCallbacks","mock","calls","result","getDimensionAndWatchScroll","immediate","expect","toEqual"]},"operators":{"distinct":8,"total":75,"identifiers":["const","=","()","{}",":",".","function=>","[]"]}},"paramCount":0,"sloc":{"logical":42,"physical":63},"errors":[],"lineEnd":232,"lineStart":170,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["smallFrameClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":213,"lineStart":213,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.083,"halstead":{"bugs":0.424,"difficulty":7.5,"effort":9532.534,"length":206,"time":529.585,"vocabulary":72,"volume":1271.005,"operands":{"distinct":64,"total":120,"identifiers":["scroll","Position","x","10","y","displacement","negate","expected","DroppableDimension","getDroppableDimension","descriptor","borderBox","offsetByPosition","bigClient","margin","padding","border","closest","smallFrameClient","scrollSize","scrollWidth","paddingBox","width","scrollHeight","height","shouldClipSubject","true","windowScroll","preset","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","el","HTMLElement","find","\".droppable\"","getDOMNode","invariant","\"getBoundingClientRect\"","mockImplementation","Object","defineProperty","\"scrollWidth\"","value","\"scrollHeight\"","scrollTop","scrollLeft","callbacks","DroppableCallbacks","mock","calls","0","result","getDimensionAndWatchScroll","immediate","expect","toEqual"]},"operators":{"distinct":8,"total":86,"identifiers":["const","=","{}",":","()",".","function=>","[]"]}},"paramCount":0,"sloc":{"logical":48,"physical":66},"errors":[],"lineEnd":299,"lineStart":234,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["smallFrameClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":278,"lineStart":278,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should collect information about the scrollable\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":57},"errors":[],"lineEnd":358,"lineStart":302,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.041,"halstead":{"bugs":0.408,"difficulty":7.733,"effort":9462.352,"length":201,"time":525.686,"vocabulary":68,"volume":1223.58,"operands":{"distinct":60,"total":116,"identifiers":["scrollSize","ScrollSize","scrollHeight","bigClient","paddingBox","height","scrollWidth","width","expected","DroppableDimension","getDroppableDimension","descriptor","borderBox","margin","padding","border","closest","smallFrameClient","scroll","x","0","y","shouldClipSubject","true","windowScroll","preset","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","false","HTMLElement","find","\".droppable\"","getDOMNode","invariant","\"getBoundingClientRect\"","mockImplementation","parent","\".scroll-parent\"","Object","defineProperty","\"scrollWidth\"","value","\"scrollHeight\"","callbacks","DroppableCallbacks","mock","calls","result","getDimensionAndWatchScroll","immediate","expect","toEqual"]},"operators":{"distinct":8,"total":85,"identifiers":["const","=","{}",":",".","()","function=>","[]"]}},"paramCount":0,"sloc":{"logical":49,"physical":55},"errors":[],"lineEnd":357,"lineStart":303,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["bigClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":336,"lineStart":336,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["smallFrameClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":340,"lineStart":340,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should log a warning as the use case is not supported\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":65},"errors":[],"lineEnd":424,"lineStart":360,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.786,"halstead":{"bugs":0.481,"difficulty":8.188,"effort":11820.805,"length":234,"time":656.711,"vocabulary":72,"volume":1443.762,"operands":{"distinct":64,"total":131,"identifiers":["jest","spyOn","console","\"warn\"","mockImplementation","expected","DroppableDimension","getDroppableDimension","descriptor","borderBox","bigClient","margin","padding","border","closest","smallFrameClient","scrollSize","scrollWidth","paddingBox","width","scrollHeight","height","scroll","x","0","y","shouldClipSubject","true","windowScroll","preset","registry","Registry","createRegistry","registerSpy","droppable","\"register\"","wrapper","mount","HTMLElement","find","\".droppable\"","getDOMNode","invariant","parent","\".scroll-parent\"","\"getBoundingClientRect\"","Object","defineProperty","\"scrollWidth\"","value","\"scrollHeight\"","callbacks","DroppableCallbacks","mock","calls","expect","warn","not","toHaveBeenCalled","result","getDimensionAndWatchScroll","immediate","toEqual","mockRestore"]},"operators":{"distinct":8,"total":103,"identifiers":["()",".","function=>","const","=","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":56,"physical":63},"errors":[],"lineEnd":423,"lineStart":361,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":362,"lineStart":362,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["smallFrameClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":395,"lineStart":395,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["Error","\"Should not be getting the boundingClientRect on the parent\""]},"operators":{"distinct":2,"total":2,"identifiers":["throw","new"]}},"paramCount":0,"sloc":{"logical":1,"physical":5},"errors":[],"lineEnd":407,"lineStart":403,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.923,"halstead":{"bugs":0.46,"difficulty":7.877,"effort":10872.76,"length":223,"time":604.042,"vocabulary":73,"volume":1380.331,"operands":{"distinct":65,"total":128,"identifiers":["frameScroll","Position","x","10","y","20","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","false","HTMLElement","find","\".droppable\"","getDOMNode","invariant","parent","\".scroll-parent\"","scrollTop","scrollLeft","Object","defineProperty","\"scrollWidth\"","value","bigClient","paddingBox","width","\"scrollHeight\"","height","\"getBoundingClientRect\"","mockImplementation","expected","DroppableDimension","getDroppableDimension","descriptor","borderBox","margin","border","padding","closest","smallFrameClient","scrollSize","scrollWidth","scrollHeight","scroll","shouldClipSubject","true","windowScroll","preset","callbacks","DroppableCallbacks","mock","calls","0","result","getDimensionAndWatchScroll","immediate","expect","toEqual"]},"operators":{"distinct":8,"total":95,"identifiers":["const","=","{}",":","()",".","function=>","[]"]}},"paramCount":0,"sloc":{"logical":52,"physical":60},"errors":[],"lineEnd":485,"lineStart":426,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["bigClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":451,"lineStart":451,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["smallFrameClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":454,"lineStart":454,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.041,"halstead":{"bugs":0.406,"difficulty":7.864,"effort":9588.945,"length":201,"time":532.719,"vocabulary":67,"volume":1219.284,"operands":{"distinct":59,"total":116,"identifiers":["registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","false","HTMLElement","find","\".droppable\"","getDOMNode","invariant","parent","\".scroll-parent\"","scrollSize","ScrollSize","scrollWidth","bigClient","paddingBox","width","scrollHeight","height","Object","defineProperty","\"scrollWidth\"","value","\"scrollHeight\"","\"getBoundingClientRect\"","mockImplementation","expected","DroppableDimension","getDroppableDimension","descriptor","borderBox","margin","padding","border","closest","smallFrameClient","scroll","x","0","y","shouldClipSubject","windowScroll","preset","callbacks","DroppableCallbacks","mock","calls","result","getDimensionAndWatchScroll","immediate","expect","toEqual"]},"operators":{"distinct":8,"total":85,"identifiers":["const","=","()",".","{}",":","function=>","[]"]}},"paramCount":0,"sloc":{"logical":49,"physical":60},"errors":[],"lineEnd":546,"lineStart":487,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["bigClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":515,"lineStart":515,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["smallFrameClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":518,"lineStart":518,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.228,"halstead":{"bugs":0.135,"difficulty":1.527,"effort":18565.722,"length":58.667,"time":1031.429,"vocabulary":4,"volume":405.204,"operands":{"distinct":3.667,"total":33.6},"operators":{"distinct":0.333,"total":25.067}},"paramCount":0,"sloc":{"logical":14.6,"physical":18.233}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":58.509,"halstead":{"bugs":0.116,"difficulty":2.748,"effort":2608.092,"length":59.379,"time":144.894,"vocabulary":22.172,"volume":348.478,"operands":{"distinct":18.828,"total":34.138},"operators":{"distinct":3.345,"total":25.241}},"paramCount":0,"sloc":{"logical":14.414,"physical":27.69}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/use-droppable-publisher/is-enabled-change.spec.js","testCases":3,"smells":13,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  35 |   );\n  36 |   // not called yet\n> 37 |   expect(marshal.updateDroppableIsEnabled).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  38 |\n  39 |   const callbacks: DroppableCallbacks = registerSpy.mock.calls[0][0].callbacks;\n  40 |   callbacks.getDimensionAndWatchScroll(preset.windowScroll, scheduled);","start":{"line":37,"column":2,"index":1237}},{"frame":"  45 |   });\n  46 |\n> 47 |   expect(marshal.updateDroppableIsEnabled).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  48 |   expect(marshal.updateDroppableIsEnabled).toHaveBeenCalledWith(\n  49 |     preset.home.descriptor.id,\n  50 |     !isDropDisabled,","start":{"line":47,"column":2,"index":1546}},{"frame":"  46 |\n  47 |   expect(marshal.updateDroppableIsEnabled).toHaveBeenCalledTimes(1);\n> 48 |   expect(marshal.updateDroppableIsEnabled).toHaveBeenCalledWith(\n     |  ^ Duplicate Assert\n  49 |     preset.home.descriptor.id,\n  50 |     !isDropDisabled,\n  51 |   );","start":{"line":48,"column":2,"index":1615}},{"frame":"  66 |\n  67 |   // not called yet\n> 68 |   expect(marshal.updateDroppableIsEnabled).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  69 |\n  70 |   // no yet dragging\n  71 |","start":{"line":68,"column":2,"index":2207}},{"frame":"  66 |\n  67 |   // not called yet\n> 68 |   expect(marshal.updateDroppableIsEnabled).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  69 |\n  70 |   // no yet dragging\n  71 |","start":{"line":68,"column":2,"index":2207}},{"frame":"  74 |   });\n  75 |\n> 76 |   expect(marshal.updateDroppableIsEnabled).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  77 | });\n  78 |\n  79 | it('should not publish updates when there is no change', () => {","start":{"line":76,"column":2,"index":2351}},{"frame":"  74 |   });\n  75 |\n> 76 |   expect(marshal.updateDroppableIsEnabled).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  77 | });\n  78 |\n  79 | it('should not publish updates when there is no change', () => {","start":{"line":76,"column":2,"index":2351}},{"frame":"  92 |\n  93 |   // not called yet\n> 94 |   expect(marshal.updateDroppableIsEnabled).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  95 |   const callbacks: DroppableCallbacks = registerSpy.mock.calls[0][0].callbacks;\n  96 |   callbacks.getDimensionAndWatchScroll(preset.windowScroll, scheduled);\n  97 |","start":{"line":94,"column":2,"index":2935}},{"frame":"  92 |\n  93 |   // not called yet\n> 94 |   expect(marshal.updateDroppableIsEnabled).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  95 |   const callbacks: DroppableCallbacks = registerSpy.mock.calls[0][0].callbacks;\n  96 |   callbacks.getDimensionAndWatchScroll(preset.windowScroll, scheduled);\n  97 |","start":{"line":94,"column":2,"index":2935}},{"frame":"  101 |   });\n  102 |\n> 103 |   expect(marshal.updateDroppableIsEnabled).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  104 |   // $ExpectError\n  105 |   marshal.updateDroppableIsEnabled.mockReset();\n  106 |","start":{"line":103,"column":2,"index":3225}},{"frame":"  101 |   });\n  102 |\n> 103 |   expect(marshal.updateDroppableIsEnabled).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  104 |   // $ExpectError\n  105 |   marshal.updateDroppableIsEnabled.mockReset();\n  106 |","start":{"line":103,"column":2,"index":3225}},{"frame":"  106 |\n  107 |   forceUpdate(wrapper);\n> 108 |   expect(marshal.updateDroppableIsEnabled).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  109 | });\n  110 |","start":{"line":108,"column":2,"index":3383}},{"frame":"  106 |\n  107 |   forceUpdate(wrapper);\n> 108 |   expect(marshal.updateDroppableIsEnabled).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  109 | });\n  110 |","start":{"line":108,"column":2,"index":3383}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":10.938,"halstead":{"bugs":0.529,"difficulty":14.9,"effort":23666.399,"length":276,"time":1314.8,"vocabulary":54,"volume":1588.349,"operands":{"distinct":45,"total":149,"identifiers":["setViewport","preset","viewport","it","\"should publish updates to the enabled state when dragging\"","marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","extra","false","expect","updateDroppableIsEnabled","not","toHaveBeenCalled","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","windowScroll","scheduled","isDropDisabled","true","setProps","toHaveBeenCalledTimes","1","toHaveBeenCalledWith","home","descriptor","id","\"should not publish updates to the enabled state when there is no drag\"","\"should not publish updates when there is no change\"","mockReset","forceUpdate"]},"operators":{"distinct":9,"total":127,"identifiers":["()",".","function=>","const","=","[]","{}","! (prefix)",":"]}},"paramCount":3,"sloc":{"logical":64,"physical":110}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"enzyme","type":"esm"},{"line":3,"path":"react","type":"esm"},{"line":4,"path":"../../../../src/state/dimension-marshal/dimension-marshal-types","type":"esm"},{"line":5,"path":"../../../util/dimension-marshal","type":"esm"},{"line":6,"path":"../../../util/viewport","type":"esm"},{"line":12,"path":"./util/shared","type":"esm"},{"line":13,"path":"../../../util/force-update","type":"esm"},{"line":14,"path":"../../../util/pass-through-props","type":"esm"},{"line":18,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":19,"path":"../../../../src/state/registry/create-registry","type":"esm"}],"errors":[],"lineEnd":110,"lineStart":1,"maintainability":107.359,"methods":[{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.182,"difficulty":5.889,"effort":3214.999,"length":100,"time":178.611,"vocabulary":44,"volume":545.943,"operands":{"distinct":36,"total":53,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","extra","expect","updateDroppableIsEnabled","not","toHaveBeenCalled","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","scheduled","isDropDisabled","true","setProps","toHaveBeenCalledTimes","1","toHaveBeenCalledWith","home","descriptor","id"]},"operators":{"distinct":8,"total":47,"identifiers":["const","=","()",".","function=>","[]","{}","! (prefix)"]}},"paramCount":0,"sloc":{"logical":20,"physical":30},"errors":[],"lineEnd":52,"lineStart":23,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":0,"effort":0,"length":4,"time":0,"vocabulary":4,"volume":8,"operands":{"distinct":4,"total":4,"identifiers":["marshal","registry","false","extra"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":5},"errors":[],"lineEnd":33,"lineStart":29,"name":"<anon method-2>","paramNames":["extra"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.071,"difficulty":5.031,"effort":1069.681,"length":47,"time":59.427,"vocabulary":23,"volume":212.607,"operands":{"distinct":16,"total":23,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","wrapper","mount","extra","expect","updateDroppableIsEnabled","not","toHaveBeenCalled","setProps","isDropDisabled","true"]},"operators":{"distinct":7,"total":24,"identifiers":["const","=","()","function=>",".","{}",":"]}},"paramCount":0,"sloc":{"logical":13,"physical":24},"errors":[],"lineEnd":77,"lineStart":54,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":0,"effort":0,"length":4,"time":0,"vocabulary":4,"volume":8,"operands":{"distinct":4,"total":4,"identifiers":["marshal","registry","false","extra"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":5},"errors":[],"lineEnd":63,"lineStart":59,"name":"<anon method-4>","paramNames":["extra"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.177,"difficulty":6.5,"effort":3459.253,"length":100,"time":192.181,"vocabulary":40,"volume":532.193,"operands":{"distinct":32,"total":52,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","extra","expect","updateDroppableIsEnabled","not","toHaveBeenCalled","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","scheduled","setProps","isDropDisabled","false","mockReset","forceUpdate"]},"operators":{"distinct":8,"total":48,"identifiers":["const","=","()",".","function=>","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":21,"physical":31},"errors":[],"lineEnd":109,"lineStart":79,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":0,"effort":0,"length":4,"time":0,"vocabulary":4,"volume":8,"operands":{"distinct":4,"total":4,"identifiers":["marshal","registry","false","extra"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":5},"errors":[],"lineEnd":89,"lineStart":85,"name":"<anon method-6>","paramNames":["extra"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.563,"halstead":{"bugs":0.076,"difficulty":2.129,"effort":3380.914,"length":39.429,"time":187.829,"vocabulary":7.714,"volume":226.907,"operands":{"distinct":6.429,"total":21.286},"operators":{"distinct":1.286,"total":18.143}},"paramCount":0.429,"sloc":{"logical":9.143,"physical":15.714}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":52.909,"halstead":{"bugs":0.073,"difficulty":2.903,"effort":1290.655,"length":43.167,"time":71.703,"vocabulary":19.833,"volume":219.124,"operands":{"distinct":16,"total":23.333},"operators":{"distinct":3.833,"total":19.833}},"paramCount":0.5,"sloc":{"logical":9.5,"physical":16.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/use-droppable-publisher/is-element-scrollable.spec.js","testCases":5,"smells":6,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  4 |\n  5 | it('should return true if an element has overflow:auto or overflow:scroll', () => {\n> 6 |   ['overflowY', 'overflowX'].forEach((overflow: string) => {\n    |                             ^ Conditional Test Logic\n  7 |     ['auto', 'scroll'].forEach((value: string) => {\n  8 |       const el: HTMLElement = document.createElement('div');\n  9 |       // $ExpectError - flow being mean","start":{"line":6,"column":29,"index":282}},{"frame":"   5 | it('should return true if an element has overflow:auto or overflow:scroll', () => {\n   6 |   ['overflowY', 'overflowX'].forEach((overflow: string) => {\n>  7 |     ['auto', 'scroll'].forEach((value: string) => {\n     |                       ^ Conditional Test Logic\n   8 |       const el: HTMLElement = document.createElement('div');\n   9 |       // $ExpectError - flow being mean\n  10 |       el.style[overflow] = value;","start":{"line":7,"column":23,"index":337}},{"frame":"  15 |\n  16 | it('should return false if an element has overflow:visible', () => {\n> 17 |   ['overflowY', 'overflowX'].forEach((overflow: string) => {\n     |                             ^ Conditional Test Logic\n  18 |     const el: HTMLElement = document.createElement('div');\n  19 |     // $ExpectError - flow being mean\n  20 |     el.style[overflow] = 'visible';","start":{"line":17,"column":29,"index":667}}]},{"name":"Redundant Print","packageName":"redundantPrint","items":[{"frame":"  63 |\n  64 |     expect(getClosestScrollable(body)).toBe(null);\n> 65 |     expect(console.warn).toHaveBeenCalled();\n     |           ^ Redundant Print\n  66 |   });\n  67 |\n  68 |   it('should not mark the body as a scroll container if it does not have any overflow set', () => {","start":{"line":65,"column":11,"index":2067}},{"frame":"  69 |     body.style.overflowX = 'visible';\n  70 |     expect(getClosestScrollable(body)).toBe(null);\n> 71 |     expect(console.warn).not.toHaveBeenCalled();\n     |           ^ Redundant Print\n  72 |   });\n  73 |\n  74 |   it('should not mark the body as a scroll container if the html element has visible overflow', () => {","start":{"line":71,"column":11,"index":2308}},{"frame":"  76 |     html.style.overflowY = 'visible';\n  77 |     expect(getClosestScrollable(body)).toBe(null);\n> 78 |     expect(console.warn).not.toHaveBeenCalled();\n     |           ^ Redundant Print\n  79 |   });\n  80 | });\n  81 |","start":{"line":78,"column":11,"index":2592}}]}],"metrics":{"aggregate":{"cyclomatic":15,"cyclomaticDensity":19.737,"halstead":{"bugs":0.562,"difficulty":14.531,"effort":24495.404,"length":289,"time":1360.856,"vocabulary":57,"volume":1685.705,"operands":{"distinct":48,"total":155,"identifiers":["it","\"should return true if an element has overflow:auto or overflow:scroll\"","\"overflowY\"","\"overflowX\"","forEach","overflow","\"auto\"","\"scroll\"","value","el","HTMLElement","document","createElement","\"div\"","style","expect","getClosestScrollable","toBe","\"should return false if an element has overflow:visible\"","\"visible\"","null","describe","\"body detection\"","body","Element","invariant","HTMLBodyElement","html","parentElement","documentElement","reset","overflowX","overflowY","beforeEach","jest","spyOn","console","\"warn\"","mockImplementation","afterEach","warn","mockReset","afterAll","\"should warn if the body might be a scroll container\"","toHaveBeenCalled","\"should not mark the body as a scroll container if it does not have any overflow set\"","not","\"should not mark the body as a scroll container if the html element has visible overflow\""]},"operators":{"distinct":9,"total":134,"identifiers":["()","function=>",".","[]",",","const","=","instanceof","==="]}},"paramCount":4,"sloc":{"logical":76,"physical":81}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/invariant","type":"esm"},{"line":3,"path":"../../../../src/view/use-droppable-publisher/get-closest-scrollable","type":"esm"}],"errors":[],"lineEnd":81,"lineStart":1,"maintainability":119.411,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["\"overflowY\"","\"overflowX\"","forEach","overflow"]},"operators":{"distinct":5,"total":5,"identifiers":["()",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":10},"errors":[],"lineEnd":14,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["\"auto\"","\"scroll\"","forEach","value"]},"operators":{"distinct":5,"total":5,"identifiers":["()",".","[]",",","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":8},"errors":[],"lineEnd":13,"lineStart":6,"name":"<anon method-2>","paramNames":["overflow"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.033,"difficulty":3.182,"effort":318.182,"length":25,"time":17.677,"vocabulary":16,"volume":100,"operands":{"distinct":11,"total":14,"identifiers":["el","HTMLElement","document","createElement","\"div\"","style","overflow","value","expect","getClosestScrollable","toBe"]},"operators":{"distinct":5,"total":11,"identifiers":["const","=","()",".","[]"]}},"paramCount":1,"sloc":{"logical":6,"physical":6},"errors":[],"lineEnd":12,"lineStart":7,"name":"<anon method-3>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["\"overflowY\"","\"overflowX\"","forEach","overflow"]},"operators":{"distinct":5,"total":5,"identifiers":["()",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":8},"errors":[],"lineEnd":23,"lineStart":16,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.034,"difficulty":2.917,"effort":298.044,"length":25,"time":16.558,"vocabulary":17,"volume":102.187,"operands":{"distinct":12,"total":14,"identifiers":["el","HTMLElement","document","createElement","\"div\"","style","overflow","\"visible\"","expect","getClosestScrollable","toBe","null"]},"operators":{"distinct":5,"total":11,"identifiers":["const","=","()",".","[]"]}},"paramCount":1,"sloc":{"logical":6,"physical":6},"errors":[],"lineEnd":22,"lineStart":17,"name":"<anon method-5>","paramNames":["overflow"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.098,"difficulty":6.417,"effort":1877.279,"length":63,"time":104.293,"vocabulary":25,"volume":292.563,"operands":{"distinct":18,"total":33,"identifiers":["body","Element","document","invariant","HTMLBodyElement","html","parentElement","documentElement","HTMLElement","reset","el","beforeEach","afterEach","afterAll","it","\"should warn if the body might be a scroll container\"","\"should not mark the body as a scroll container if it does not have any overflow set\"","\"should not mark the body as a scroll container if the html element has visible overflow\""]},"operators":{"distinct":7,"total":30,"identifiers":["const","=",".","()","instanceof","===","function=>"]}},"paramCount":0,"sloc":{"logical":21,"physical":56},"errors":[],"lineEnd":80,"lineStart":25,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.022,"difficulty":3.143,"effort":206.577,"length":19,"time":11.477,"vocabulary":11,"volume":65.729,"operands":{"distinct":7,"total":11,"identifiers":["invariant","el","HTMLElement","style","overflowX","\"visible\"","overflowY"]},"operators":{"distinct":4,"total":8,"identifiers":["()","instanceof","=","."]}},"paramCount":1,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":42,"lineStart":38,"name":"<anon method-7>","paramNames":["el"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.018,"difficulty":1.688,"effort":93.405,"length":16,"time":5.189,"vocabulary":11,"volume":55.351,"operands":{"distinct":8,"total":9,"identifiers":["reset","body","html","jest","spyOn","console","\"warn\"","mockImplementation"]},"operators":{"distinct":3,"total":7,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":48,"lineStart":44,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":47,"lineStart":47,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.005,"difficulty":1,"effort":13.932,"length":6,"time":0.774,"vocabulary":5,"volume":13.932,"operands":{"distinct":3,"total":3,"identifiers":["console","warn","mockReset"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":4},"errors":[],"lineEnd":53,"lineStart":50,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":0.667,"effort":8,"length":6,"time":0.444,"vocabulary":4,"volume":12,"operands":{"distinct":3,"total":4,"identifiers":["reset","body","html"]},"operators":{"distinct":1,"total":2,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":58,"lineStart":55,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.041,"difficulty":1.962,"effort":243.231,"length":31,"time":13.513,"vocabulary":16,"volume":124,"operands":{"distinct":13,"total":17,"identifiers":["body","style","overflowX","\"auto\"","html","overflowY","expect","getClosestScrollable","toBe","null","console","warn","toHaveBeenCalled"]},"operators":{"distinct":3,"total":14,"identifiers":["=",".","()"]}},"paramCount":0,"sloc":{"logical":7,"physical":7},"errors":[],"lineEnd":66,"lineStart":60,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.034,"difficulty":1.75,"effort":177.764,"length":26,"time":9.876,"vocabulary":15,"volume":101.579,"operands":{"distinct":12,"total":14,"identifiers":["body","style","overflowX","\"visible\"","expect","getClosestScrollable","toBe","null","console","warn","not","toHaveBeenCalled"]},"operators":{"distinct":3,"total":12,"identifiers":["=",".","()"]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":72,"lineStart":68,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.046,"difficulty":1.8,"effort":247.694,"length":33,"time":13.761,"vocabulary":18,"volume":137.608,"operands":{"distinct":15,"total":18,"identifiers":["body","style","overflowX","\"auto\"","html","overflowY","\"visible\"","expect","getClosestScrollable","toBe","null","console","warn","not","toHaveBeenCalled"]},"operators":{"distinct":3,"total":15,"identifiers":["=",".","()"]}},"paramCount":0,"sloc":{"logical":7,"physical":6},"errors":[],"lineEnd":79,"lineStart":74,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.316,"halstead":{"bugs":0.037,"difficulty":0.969,"effort":1633.027,"length":19.267,"time":90.724,"vocabulary":3.8,"volume":112.38,"operands":{"distinct":3.2,"total":10.333},"operators":{"distinct":0.6,"total":8.933}},"paramCount":0.267,"sloc":{"logical":5.067,"physical":5.4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":31.19,"halstead":{"bugs":0.026,"difficulty":2.287,"effort":264.148,"length":19.786,"time":14.675,"vocabulary":11.786,"volume":77.895,"operands":{"distinct":8.143,"total":10.643},"operators":{"distinct":3.643,"total":9.143}},"paramCount":0.286,"sloc":{"logical":5,"physical":9.357}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/use-droppable-publisher/is-combined-enabled-change.spec.js","testCases":3,"smells":15,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  35 |   );\n  36 |   // not called yet\n> 37 |   expect(marshal.updateDroppableIsCombineEnabled).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  38 |\n  39 |   const callbacks: DroppableCallbacks = registerSpy.mock.calls[0][0].callbacks;\n  40 |   callbacks.getDimensionAndWatchScroll(preset.windowScroll, scheduled);","start":{"line":37,"column":2,"index":1231}},{"frame":"  44 |     isCombineEnabled: false,\n  45 |   });\n> 46 |   expect(marshal.updateDroppableIsCombineEnabled).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  47 |   expect(marshal.updateDroppableIsCombineEnabled).toHaveBeenCalledWith(\n  48 |     preset.home.descriptor.id,\n  49 |     false,","start":{"line":46,"column":2,"index":1538}},{"frame":"  45 |   });\n  46 |   expect(marshal.updateDroppableIsCombineEnabled).toHaveBeenCalledTimes(1);\n> 47 |   expect(marshal.updateDroppableIsCombineEnabled).toHaveBeenCalledWith(\n     |  ^ Duplicate Assert\n  48 |     preset.home.descriptor.id,\n  49 |     false,\n  50 |   );","start":{"line":47,"column":2,"index":1614}},{"frame":"  56 |     isCombineEnabled: true,\n  57 |   });\n> 58 |   expect(marshal.updateDroppableIsCombineEnabled).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  59 |   expect(marshal.updateDroppableIsCombineEnabled).toHaveBeenCalledWith(\n  60 |     preset.home.descriptor.id,\n  61 |     true,","start":{"line":58,"column":2,"index":1885}},{"frame":"  57 |   });\n  58 |   expect(marshal.updateDroppableIsCombineEnabled).toHaveBeenCalledTimes(1);\n> 59 |   expect(marshal.updateDroppableIsCombineEnabled).toHaveBeenCalledWith(\n     |  ^ Duplicate Assert\n  60 |     preset.home.descriptor.id,\n  61 |     true,\n  62 |   );","start":{"line":59,"column":2,"index":1961}},{"frame":"  77 |\n  78 |   // not called yet\n> 79 |   expect(marshal.updateDroppableIsCombineEnabled).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  80 |\n  81 |   // no yet dragging\n  82 |","start":{"line":79,"column":2,"index":2544}},{"frame":"  77 |\n  78 |   // not called yet\n> 79 |   expect(marshal.updateDroppableIsCombineEnabled).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  80 |\n  81 |   // no yet dragging\n  82 |","start":{"line":79,"column":2,"index":2544}},{"frame":"  85 |   });\n  86 |\n> 87 |   expect(marshal.updateDroppableIsCombineEnabled).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  88 | });\n  89 |\n  90 | it('should not publish updates when there is no change', () => {","start":{"line":87,"column":2,"index":2698}},{"frame":"  85 |   });\n  86 |\n> 87 |   expect(marshal.updateDroppableIsCombineEnabled).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  88 | });\n  89 |\n  90 | it('should not publish updates when there is no change', () => {","start":{"line":87,"column":2,"index":2698}},{"frame":"  103 |\n  104 |   // not called yet\n> 105 |   expect(marshal.updateDroppableIsCombineEnabled).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  106 |   const callbacks: DroppableCallbacks = registerSpy.mock.calls[0][0].callbacks;\n  107 |   callbacks.getDimensionAndWatchScroll(preset.windowScroll, scheduled);\n  108 |","start":{"line":105,"column":2,"index":3284}},{"frame":"  103 |\n  104 |   // not called yet\n> 105 |   expect(marshal.updateDroppableIsCombineEnabled).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  106 |   const callbacks: DroppableCallbacks = registerSpy.mock.calls[0][0].callbacks;\n  107 |   callbacks.getDimensionAndWatchScroll(preset.windowScroll, scheduled);\n  108 |","start":{"line":105,"column":2,"index":3284}},{"frame":"  112 |   });\n  113 |\n> 114 |   expect(marshal.updateDroppableIsCombineEnabled).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  115 |   // $FlowFixMe\n  116 |   marshal.updateDroppableIsCombineEnabled.mockReset();\n  117 |","start":{"line":114,"column":2,"index":3582}},{"frame":"  112 |   });\n  113 |\n> 114 |   expect(marshal.updateDroppableIsCombineEnabled).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  115 |   // $FlowFixMe\n  116 |   marshal.updateDroppableIsCombineEnabled.mockReset();\n  117 |","start":{"line":114,"column":2,"index":3582}},{"frame":"  117 |\n  118 |   forceUpdate(wrapper);\n> 119 |   expect(marshal.updateDroppableIsCombineEnabled).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  120 | });\n  121 |","start":{"line":119,"column":2,"index":3752}},{"frame":"  117 |\n  118 |   forceUpdate(wrapper);\n> 119 |   expect(marshal.updateDroppableIsCombineEnabled).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  120 | });\n  121 |","start":{"line":119,"column":2,"index":3752}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":10,"halstead":{"bugs":0.591,"difficulty":14.348,"effort":25431.599,"length":308,"time":1412.867,"vocabulary":54,"volume":1772.505,"operands":{"distinct":46,"total":165,"identifiers":["setViewport","preset","viewport","it","\"should publish updates to the enabled state when dragging\"","marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","extra","expect","updateDroppableIsCombineEnabled","not","toHaveBeenCalled","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","windowScroll","scheduled","setProps","isCombineEnabled","false","toHaveBeenCalledTimes","1","toHaveBeenCalledWith","home","descriptor","id","mockClear","true","\"should not publish updates to the enabled state when there is no drag\"","\"should not publish updates when there is no change\"","mockReset","forceUpdate"]},"operators":{"distinct":8,"total":143,"identifiers":["()",".","function=>","const","=","[]","{}",":"]}},"paramCount":3,"sloc":{"logical":70,"physical":121}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"enzyme","type":"esm"},{"line":3,"path":"react","type":"esm"},{"line":4,"path":"../../../../src/state/dimension-marshal/dimension-marshal-types","type":"esm"},{"line":5,"path":"../../../util/dimension-marshal","type":"esm"},{"line":6,"path":"../../../util/viewport","type":"esm"},{"line":12,"path":"./util/shared","type":"esm"},{"line":13,"path":"../../../util/force-update","type":"esm"},{"line":14,"path":"../../../util/pass-through-props","type":"esm"},{"line":18,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":19,"path":"../../../../src/state/registry/create-registry","type":"esm"}],"errors":[],"lineEnd":121,"lineStart":1,"maintainability":105.662,"methods":[{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.249,"difficulty":7.579,"effort":5651.476,"length":135,"time":313.971,"vocabulary":46,"volume":745.681,"operands":{"distinct":38,"total":72,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","extra","expect","updateDroppableIsCombineEnabled","not","toHaveBeenCalled","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","scheduled","setProps","isCombineEnabled","false","toHaveBeenCalledTimes","1","toHaveBeenCalledWith","home","descriptor","id","mockClear","true"]},"operators":{"distinct":8,"total":63,"identifiers":["const","=","()",".","function=>","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":26,"physical":41},"errors":[],"lineEnd":63,"lineStart":23,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0,"effort":0,"length":3,"time":0,"vocabulary":3,"volume":4.755,"operands":{"distinct":3,"total":3,"identifiers":["marshal","registry","extra"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":5},"errors":[],"lineEnd":33,"lineStart":29,"name":"<anon method-2>","paramNames":["extra"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.071,"difficulty":5.031,"effort":1069.681,"length":47,"time":59.427,"vocabulary":23,"volume":212.607,"operands":{"distinct":16,"total":23,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","wrapper","mount","extra","expect","updateDroppableIsCombineEnabled","not","toHaveBeenCalled","setProps","isCombineEnabled","false"]},"operators":{"distinct":7,"total":24,"identifiers":["const","=","()","function=>",".","{}",":"]}},"paramCount":0,"sloc":{"logical":13,"physical":24},"errors":[],"lineEnd":88,"lineStart":65,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0,"effort":0,"length":3,"time":0,"vocabulary":3,"volume":4.755,"operands":{"distinct":3,"total":3,"identifiers":["marshal","registry","extra"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":5},"errors":[],"lineEnd":74,"lineStart":70,"name":"<anon method-4>","paramNames":["extra"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.177,"difficulty":6.5,"effort":3459.253,"length":100,"time":192.181,"vocabulary":40,"volume":532.193,"operands":{"distinct":32,"total":52,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","extra","expect","updateDroppableIsCombineEnabled","not","toHaveBeenCalled","callbacks","DroppableCallbacks","mock","calls","0","getDimensionAndWatchScroll","preset","windowScroll","scheduled","setProps","isCombineEnabled","true","mockReset","forceUpdate"]},"operators":{"distinct":8,"total":48,"identifiers":["const","=","()",".","function=>","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":21,"physical":31},"errors":[],"lineEnd":120,"lineStart":90,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0,"effort":0,"length":3,"time":0,"vocabulary":3,"volume":4.755,"operands":{"distinct":3,"total":3,"identifiers":["marshal","registry","extra"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":5},"errors":[],"lineEnd":100,"lineStart":96,"name":"<anon method-6>","paramNames":["extra"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.429,"halstead":{"bugs":0.084,"difficulty":2.05,"effort":3633.086,"length":44,"time":201.838,"vocabulary":7.714,"volume":253.215,"operands":{"distinct":6.571,"total":23.571},"operators":{"distinct":1.143,"total":20.429}},"paramCount":0.429,"sloc":{"logical":10,"physical":17.286}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":52.717,"halstead":{"bugs":0.084,"difficulty":3.185,"effort":1696.735,"length":48.5,"time":94.263,"vocabulary":19.667,"volume":250.791,"operands":{"distinct":15.833,"total":26},"operators":{"distinct":3.833,"total":22.5}},"paramCount":0.5,"sloc":{"logical":10.5,"physical":18.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/use-droppable-publisher/forced-scroll.spec.js","testCases":3,"smells":38,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  51 |\n  52 |   // validating no initial scroll\n> 53 |   expect(parent.scrollTop).toBe(0);\n     |  ^ Duplicate Assert\n  54 |   expect(parent.scrollLeft).toBe(0);\n  55 |   expect(droppable.scrollTop).toBe(0);\n  56 |   expect(droppable.scrollLeft).toBe(0);","start":{"line":53,"column":2,"index":1727}},{"frame":"  51 |\n  52 |   // validating no initial scroll\n> 53 |   expect(parent.scrollTop).toBe(0);\n     |  ^ Duplicate Assert\n  54 |   expect(parent.scrollLeft).toBe(0);\n  55 |   expect(droppable.scrollTop).toBe(0);\n  56 |   expect(droppable.scrollLeft).toBe(0);","start":{"line":53,"column":2,"index":1727}},{"frame":"  52 |   // validating no initial scroll\n  53 |   expect(parent.scrollTop).toBe(0);\n> 54 |   expect(parent.scrollLeft).toBe(0);\n     |  ^ Duplicate Assert\n  55 |   expect(droppable.scrollTop).toBe(0);\n  56 |   expect(droppable.scrollLeft).toBe(0);\n  57 |","start":{"line":54,"column":2,"index":1763}},{"frame":"  52 |   // validating no initial scroll\n  53 |   expect(parent.scrollTop).toBe(0);\n> 54 |   expect(parent.scrollLeft).toBe(0);\n     |  ^ Duplicate Assert\n  55 |   expect(droppable.scrollTop).toBe(0);\n  56 |   expect(droppable.scrollLeft).toBe(0);\n  57 |","start":{"line":54,"column":2,"index":1763}},{"frame":"  53 |   expect(parent.scrollTop).toBe(0);\n  54 |   expect(parent.scrollLeft).toBe(0);\n> 55 |   expect(droppable.scrollTop).toBe(0);\n     |  ^ Duplicate Assert\n  56 |   expect(droppable.scrollLeft).toBe(0);\n  57 |\n  58 |   const callbacks: DroppableCallbacks = registerSpy.mock.calls[0][0].callbacks;","start":{"line":55,"column":2,"index":1800}},{"frame":"  53 |   expect(parent.scrollTop).toBe(0);\n  54 |   expect(parent.scrollLeft).toBe(0);\n> 55 |   expect(droppable.scrollTop).toBe(0);\n     |  ^ Duplicate Assert\n  56 |   expect(droppable.scrollLeft).toBe(0);\n  57 |\n  58 |   const callbacks: DroppableCallbacks = registerSpy.mock.calls[0][0].callbacks;","start":{"line":55,"column":2,"index":1800}},{"frame":"  54 |   expect(parent.scrollLeft).toBe(0);\n  55 |   expect(droppable.scrollTop).toBe(0);\n> 56 |   expect(droppable.scrollLeft).toBe(0);\n     |  ^ Duplicate Assert\n  57 |\n  58 |   const callbacks: DroppableCallbacks = registerSpy.mock.calls[0][0].callbacks;\n  59 |   // request the droppable start listening for scrolling","start":{"line":56,"column":2,"index":1839}},{"frame":"  54 |   expect(parent.scrollLeft).toBe(0);\n  55 |   expect(droppable.scrollTop).toBe(0);\n> 56 |   expect(droppable.scrollLeft).toBe(0);\n     |  ^ Duplicate Assert\n  57 |\n  58 |   const callbacks: DroppableCallbacks = registerSpy.mock.calls[0][0].callbacks;\n  59 |   // request the droppable start listening for scrolling","start":{"line":56,"column":2,"index":1839}},{"frame":"  64 |\n  65 |   // no scroll changes\n> 66 |   expect(parent.scrollTop).toBe(0);\n     |  ^ Duplicate Assert\n  67 |   expect(parent.scrollLeft).toBe(0);\n  68 |   expect(droppable.scrollTop).toBe(0);\n  69 |   expect(droppable.scrollLeft).toBe(0);","start":{"line":66,"column":2,"index":2200}},{"frame":"  64 |\n  65 |   // no scroll changes\n> 66 |   expect(parent.scrollTop).toBe(0);\n     |  ^ Duplicate Assert\n  67 |   expect(parent.scrollLeft).toBe(0);\n  68 |   expect(droppable.scrollTop).toBe(0);\n  69 |   expect(droppable.scrollLeft).toBe(0);","start":{"line":66,"column":2,"index":2200}},{"frame":"  65 |   // no scroll changes\n  66 |   expect(parent.scrollTop).toBe(0);\n> 67 |   expect(parent.scrollLeft).toBe(0);\n     |  ^ Duplicate Assert\n  68 |   expect(droppable.scrollTop).toBe(0);\n  69 |   expect(droppable.scrollLeft).toBe(0);\n  70 | });","start":{"line":67,"column":2,"index":2236}},{"frame":"  65 |   // no scroll changes\n  66 |   expect(parent.scrollTop).toBe(0);\n> 67 |   expect(parent.scrollLeft).toBe(0);\n     |  ^ Duplicate Assert\n  68 |   expect(droppable.scrollTop).toBe(0);\n  69 |   expect(droppable.scrollLeft).toBe(0);\n  70 | });","start":{"line":67,"column":2,"index":2236}},{"frame":"  66 |   expect(parent.scrollTop).toBe(0);\n  67 |   expect(parent.scrollLeft).toBe(0);\n> 68 |   expect(droppable.scrollTop).toBe(0);\n     |  ^ Duplicate Assert\n  69 |   expect(droppable.scrollLeft).toBe(0);\n  70 | });\n  71 |","start":{"line":68,"column":2,"index":2273}},{"frame":"  66 |   expect(parent.scrollTop).toBe(0);\n  67 |   expect(parent.scrollLeft).toBe(0);\n> 68 |   expect(droppable.scrollTop).toBe(0);\n     |  ^ Duplicate Assert\n  69 |   expect(droppable.scrollLeft).toBe(0);\n  70 | });\n  71 |","start":{"line":68,"column":2,"index":2273}},{"frame":"  67 |   expect(parent.scrollLeft).toBe(0);\n  68 |   expect(droppable.scrollTop).toBe(0);\n> 69 |   expect(droppable.scrollLeft).toBe(0);\n     |  ^ Duplicate Assert\n  70 | });\n  71 |\n  72 | describe('there is a closest scrollable', () => {","start":{"line":69,"column":2,"index":2312}},{"frame":"  67 |   expect(parent.scrollLeft).toBe(0);\n  68 |   expect(droppable.scrollTop).toBe(0);\n> 69 |   expect(droppable.scrollLeft).toBe(0);\n     |  ^ Duplicate Assert\n  70 | });\n  71 |\n  72 | describe('there is a closest scrollable', () => {","start":{"line":69,"column":2,"index":2312}},{"frame":"  85 |     invariant(container);\n  86 |\n> 87 |     expect(container.scrollTop).toBe(0);\n     |    ^ Duplicate Assert\n  88 |     expect(container.scrollLeft).toBe(0);\n  89 |\n  90 |     // tell the droppable to watch for scrolling","start":{"line":87,"column":4,"index":2921}},{"frame":"  86 |\n  87 |     expect(container.scrollTop).toBe(0);\n> 88 |     expect(container.scrollLeft).toBe(0);\n     |    ^ Duplicate Assert\n  89 |\n  90 |     // tell the droppable to watch for scrolling\n  91 |     const callbacks: DroppableCallbacks =","start":{"line":88,"column":4,"index":2962}},{"frame":"   96 |     callbacks.scroll({ x: 500, y: 1000 });\n   97 |\n>  98 |     expect(container.scrollLeft).toBe(500);\n      |    ^ Duplicate Assert\n   99 |     expect(container.scrollTop).toBe(1000);\n  100 |   });\n  101 |","start":{"line":98,"column":4,"index":3334}},{"frame":"   97 |\n   98 |     expect(container.scrollLeft).toBe(500);\n>  99 |     expect(container.scrollTop).toBe(1000);\n      |    ^ Duplicate Assert\n  100 |   });\n  101 |\n  102 |   it('should throw if asked to scoll while scroll is not currently being watched', () => {","start":{"line":99,"column":4,"index":3378}},{"frame":"  120 |     const callbacks: DroppableCallbacks =\n  121 |       registerSpy.mock.calls[0][0].callbacks;\n> 122 |     expect(() => callbacks.scroll({ x: 500, y: 1000 })).toThrow();\n      |    ^ Duplicate Assert\n  123 |\n  124 |     // now watching scroll\n  125 |     callbacks.getDimensionAndWatchScroll(preset.windowScroll, immediate);","start":{"line":122,"column":4,"index":4171}},{"frame":"  120 |     const callbacks: DroppableCallbacks =\n  121 |       registerSpy.mock.calls[0][0].callbacks;\n> 122 |     expect(() => callbacks.scroll({ x: 500, y: 1000 })).toThrow();\n      |    ^ Duplicate Assert\n  123 |\n  124 |     // now watching scroll\n  125 |     callbacks.getDimensionAndWatchScroll(preset.windowScroll, immediate);","start":{"line":122,"column":4,"index":4171}},{"frame":"  127 |     // no longer watching scroll\n  128 |     callbacks.dragStopped();\n> 129 |     expect(() => callbacks.scroll({ x: 500, y: 1000 })).toThrow();\n      |    ^ Duplicate Assert\n  130 |   });\n  131 | });\n  132 |","start":{"line":129,"column":4,"index":4403}},{"frame":"  127 |     // no longer watching scroll\n  128 |     callbacks.dragStopped();\n> 129 |     expect(() => callbacks.scroll({ x: 500, y: 1000 })).toThrow();\n      |    ^ Duplicate Assert\n  130 |   });\n  131 | });\n  132 |","start":{"line":129,"column":4,"index":4403}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  51 |\n  52 |   // validating no initial scroll\n> 53 |   expect(parent.scrollTop).toBe(0);\n     |                                ^ Magic Number\n  54 |   expect(parent.scrollLeft).toBe(0);\n  55 |   expect(droppable.scrollTop).toBe(0);\n  56 |   expect(droppable.scrollLeft).toBe(0);","start":{"line":53,"column":32,"index":1757}},{"frame":"  52 |   // validating no initial scroll\n  53 |   expect(parent.scrollTop).toBe(0);\n> 54 |   expect(parent.scrollLeft).toBe(0);\n     |                                 ^ Magic Number\n  55 |   expect(droppable.scrollTop).toBe(0);\n  56 |   expect(droppable.scrollLeft).toBe(0);\n  57 |","start":{"line":54,"column":33,"index":1794}},{"frame":"  53 |   expect(parent.scrollTop).toBe(0);\n  54 |   expect(parent.scrollLeft).toBe(0);\n> 55 |   expect(droppable.scrollTop).toBe(0);\n     |                                   ^ Magic Number\n  56 |   expect(droppable.scrollLeft).toBe(0);\n  57 |\n  58 |   const callbacks: DroppableCallbacks = registerSpy.mock.calls[0][0].callbacks;","start":{"line":55,"column":35,"index":1833}},{"frame":"  54 |   expect(parent.scrollLeft).toBe(0);\n  55 |   expect(droppable.scrollTop).toBe(0);\n> 56 |   expect(droppable.scrollLeft).toBe(0);\n     |                                    ^ Magic Number\n  57 |\n  58 |   const callbacks: DroppableCallbacks = registerSpy.mock.calls[0][0].callbacks;\n  59 |   // request the droppable start listening for scrolling","start":{"line":56,"column":36,"index":1873}},{"frame":"  64 |\n  65 |   // no scroll changes\n> 66 |   expect(parent.scrollTop).toBe(0);\n     |                                ^ Magic Number\n  67 |   expect(parent.scrollLeft).toBe(0);\n  68 |   expect(droppable.scrollTop).toBe(0);\n  69 |   expect(droppable.scrollLeft).toBe(0);","start":{"line":66,"column":32,"index":2230}},{"frame":"  65 |   // no scroll changes\n  66 |   expect(parent.scrollTop).toBe(0);\n> 67 |   expect(parent.scrollLeft).toBe(0);\n     |                                 ^ Magic Number\n  68 |   expect(droppable.scrollTop).toBe(0);\n  69 |   expect(droppable.scrollLeft).toBe(0);\n  70 | });","start":{"line":67,"column":33,"index":2267}},{"frame":"  66 |   expect(parent.scrollTop).toBe(0);\n  67 |   expect(parent.scrollLeft).toBe(0);\n> 68 |   expect(droppable.scrollTop).toBe(0);\n     |                                   ^ Magic Number\n  69 |   expect(droppable.scrollLeft).toBe(0);\n  70 | });\n  71 |","start":{"line":68,"column":35,"index":2306}},{"frame":"  67 |   expect(parent.scrollLeft).toBe(0);\n  68 |   expect(droppable.scrollTop).toBe(0);\n> 69 |   expect(droppable.scrollLeft).toBe(0);\n     |                                    ^ Magic Number\n  70 | });\n  71 |\n  72 | describe('there is a closest scrollable', () => {","start":{"line":69,"column":36,"index":2346}},{"frame":"  85 |     invariant(container);\n  86 |\n> 87 |     expect(container.scrollTop).toBe(0);\n     |                                     ^ Magic Number\n  88 |     expect(container.scrollLeft).toBe(0);\n  89 |\n  90 |     // tell the droppable to watch for scrolling","start":{"line":87,"column":37,"index":2954}},{"frame":"  86 |\n  87 |     expect(container.scrollTop).toBe(0);\n> 88 |     expect(container.scrollLeft).toBe(0);\n     |                                      ^ Magic Number\n  89 |\n  90 |     // tell the droppable to watch for scrolling\n  91 |     const callbacks: DroppableCallbacks =","start":{"line":88,"column":38,"index":2996}},{"frame":"   96 |     callbacks.scroll({ x: 500, y: 1000 });\n   97 |\n>  98 |     expect(container.scrollLeft).toBe(500);\n      |                                      ^ Magic Number\n   99 |     expect(container.scrollTop).toBe(1000);\n  100 |   });\n  101 |","start":{"line":98,"column":38,"index":3368}},{"frame":"   97 |\n   98 |     expect(container.scrollLeft).toBe(500);\n>  99 |     expect(container.scrollTop).toBe(1000);\n      |                                     ^ Magic Number\n  100 |   });\n  101 |\n  102 |   it('should throw if asked to scoll while scroll is not currently being watched', () => {","start":{"line":99,"column":37,"index":3411}},{"frame":"  114 |       .getDOMNode();\n  115 |     invariant(container);\n> 116 |     expect(container.scrollTop).toBe(0);\n      |                                     ^ Magic Number\n  117 |     expect(container.scrollLeft).toBe(0);\n  118 |\n  119 |     // dimension not returned yet","start":{"line":116,"column":37,"index":3998}},{"frame":"  115 |     invariant(container);\n  116 |     expect(container.scrollTop).toBe(0);\n> 117 |     expect(container.scrollLeft).toBe(0);\n      |                                      ^ Magic Number\n  118 |\n  119 |     // dimension not returned yet\n  120 |     const callbacks: DroppableCallbacks =","start":{"line":117,"column":38,"index":4040}}]}],"metrics":{"aggregate":{"cyclomatic":11,"cyclomaticDensity":9.244,"halstead":{"bugs":0.944,"difficulty":16.667,"effort":47177.837,"length":465,"time":2620.991,"vocabulary":68,"volume":2830.67,"operands":{"distinct":60,"total":250,"identifiers":["setViewport","preset","viewport","afterEach","tryCleanPrototypeStubs","it","\"should throw if the droppable has no closest scrollable\"","marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","false","HTMLElement","find","\".droppable\"","getDOMNode","invariant","parent","\".scroll-parent\"","\"getBoundingClientRect\"","mockImplementation","smallFrameClient","borderBox","bigClient","expect","scrollTop","toBe","0","scrollLeft","callbacks","DroppableCallbacks","mock","calls","getDimensionAndWatchScroll","windowScroll","scheduled","scroll","x","100","y","toThrow","describe","\"there is a closest scrollable\"","\"should update the scroll of the closest scrollable\"","container","\".scroll-container\"","500","1000","\"should throw if asked to scoll while scroll is not currently being watched\"","immediate","dragStopped"]},"operators":{"distinct":8,"total":215,"identifiers":["()",".","function=>","const","=","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":119,"physical":132}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"enzyme","type":"esm"},{"line":3,"path":"react","type":"esm"},{"line":4,"path":"../../../../src/invariant","type":"esm"},{"line":5,"path":"../../../../src/state/dimension-marshal/dimension-marshal-types","type":"esm"},{"line":6,"path":"../../../util/dimension-marshal","type":"esm"},{"line":7,"path":"../../../util/viewport","type":"esm"},{"line":17,"path":"./util/shared","type":"esm"},{"line":18,"path":"../../../util/try-clean-prototype-stubs","type":"esm"},{"line":22,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":23,"path":"../../../../src/state/registry/create-registry","type":"esm"}],"errors":[],"lineEnd":132,"lineStart":1,"maintainability":103.82,"methods":[{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0.5,"effort":1,"length":2,"time":0.056,"vocabulary":2,"volume":2,"operands":{"distinct":1,"total":1,"identifiers":["tryCleanPrototypeStubs"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":29,"lineStart":27,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.326,"halstead":{"bugs":0.331,"difficulty":8.027,"effort":7970.89,"length":183,"time":442.827,"vocabulary":43,"volume":993.006,"operands":{"distinct":37,"total":99,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","false","HTMLElement","find","\".droppable\"","getDOMNode","invariant","parent","\".scroll-parent\"","\"getBoundingClientRect\"","mockImplementation","expect","scrollTop","toBe","0","scrollLeft","callbacks","DroppableCallbacks","mock","calls","getDimensionAndWatchScroll","preset","windowScroll","scheduled","toThrow"]},"operators":{"distinct":6,"total":84,"identifiers":["const","=","()",".","function=>","[]"]}},"paramCount":0,"sloc":{"logical":43,"physical":40},"errors":[],"lineEnd":70,"lineStart":31,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["smallFrameClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":47,"lineStart":47,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["bigClient","borderBox"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":50,"lineStart":50,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.012,"difficulty":2.4,"effort":83.686,"length":11,"time":4.649,"vocabulary":9,"volume":34.869,"operands":{"distinct":5,"total":6,"identifiers":["callbacks","scroll","x","100","y"]},"operators":{"distinct":4,"total":5,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":4,"physical":1},"errors":[],"lineEnd":63,"lineStart":63,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should update the scroll of the closest scrollable\"","\"should throw if asked to scoll while scroll is not currently being watched\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":60},"errors":[],"lineEnd":131,"lineStart":72,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.209,"difficulty":5.959,"effort":3741.555,"length":115,"time":207.864,"vocabulary":44,"volume":627.835,"operands":{"distinct":37,"total":63,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","container","HTMLElement","find","\".scroll-container\"","getDOMNode","invariant","expect","scrollTop","toBe","0","scrollLeft","callbacks","DroppableCallbacks","mock","calls","getDimensionAndWatchScroll","preset","windowScroll","scheduled","scroll","x","500","y","1000"]},"operators":{"distinct":7,"total":52,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":25,"physical":28},"errors":[],"lineEnd":100,"lineStart":73,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.181,"difficulty":4.676,"effort":2538.56,"length":102,"time":141.031,"vocabulary":40,"volume":542.837,"operands":{"distinct":34,"total":53,"identifiers":["marshal","DimensionMarshal","getMarshalStub","registry","Registry","createRegistry","registerSpy","jest","spyOn","droppable","\"register\"","wrapper","mount","container","HTMLElement","find","\".scroll-container\"","getDOMNode","invariant","expect","scrollTop","toBe","0","scrollLeft","callbacks","DroppableCallbacks","mock","calls","toThrow","getDimensionAndWatchScroll","preset","windowScroll","immediate","dragStopped"]},"operators":{"distinct":6,"total":49,"identifiers":["const","=","()",".","[]","function=>"]}},"paramCount":0,"sloc":{"logical":25,"physical":29},"errors":[],"lineEnd":130,"lineStart":102,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.012,"difficulty":2,"effort":73.082,"length":11,"time":4.06,"vocabulary":10,"volume":36.541,"operands":{"distinct":6,"total":6,"identifiers":["callbacks","scroll","x","500","y","1000"]},"operators":{"distinct":4,"total":5,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":4,"physical":1},"errors":[],"lineEnd":122,"lineStart":122,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.012,"difficulty":2,"effort":73.082,"length":11,"time":4.06,"vocabulary":10,"volume":36.541,"operands":{"distinct":6,"total":6,"identifiers":["callbacks","scroll","x","500","y","1000"]},"operators":{"distinct":4,"total":5,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":4,"physical":1},"errors":[],"lineEnd":129,"lineStart":129,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.84,"halstead":{"bugs":0.086,"difficulty":1.515,"effort":4288.894,"length":42.273,"time":238.272,"vocabulary":6.182,"volume":257.334,"operands":{"distinct":5.455,"total":22.727},"operators":{"distinct":0.727,"total":19.545}},"paramCount":0,"sloc":{"logical":10.818,"physical":12}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":41.033,"halstead":{"bugs":0.077,"difficulty":2.79,"effort":1451.138,"length":44.9,"time":80.619,"vocabulary":16.9,"volume":230.171,"operands":{"distinct":13.3,"total":24.2},"operators":{"distinct":3.6,"total":20.7}},"paramCount":0,"sloc":{"logical":11.2,"physical":16.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/style-marshal/style-marshal.spec.js","testCases":9,"smells":11,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  56 |\n  57 |   // initially there is no style tag\n> 58 |   expect(document.querySelector(dynamicSelector)).toBeFalsy();\n     |  ^ Duplicate Assert\n  59 |   expect(document.querySelector(alwaysSelector)).toBeFalsy();\n  60 |\n  61 |   // now mounting","start":{"line":58,"column":2,"index":2061}},{"frame":"  57 |   // initially there is no style tag\n  58 |   expect(document.querySelector(dynamicSelector)).toBeFalsy();\n> 59 |   expect(document.querySelector(alwaysSelector)).toBeFalsy();\n     |  ^ Duplicate Assert\n  60 |\n  61 |   // now mounting\n  62 |   const wrapper: ReactWrapper<*> = mount(","start":{"line":59,"column":2,"index":2124}},{"frame":"  65 |\n  66 |   // elements should now exist\n> 67 |   expect(document.querySelector(alwaysSelector)).toBeInstanceOf(\n     |  ^ Duplicate Assert\n  68 |     HTMLStyleElement,\n  69 |   );\n  70 |   expect(document.querySelector(dynamicSelector)).toBeInstanceOf(","start":{"line":67,"column":2,"index":2350}},{"frame":"  68 |     HTMLStyleElement,\n  69 |   );\n> 70 |   expect(document.querySelector(dynamicSelector)).toBeInstanceOf(\n     |  ^ Duplicate Assert\n  71 |     HTMLStyleElement,\n  72 |   );\n  73 |","start":{"line":70,"column":2,"index":2442}},{"frame":"  154 |\n  155 |   // the style tag exists\n> 156 |   expect(document.querySelector(selector1)).toBeTruthy();\n      |  ^ Duplicate Assert\n  157 |   expect(document.querySelector(selector2)).toBeTruthy();\n  158 |\n  159 |   // now unmounted","start":{"line":156,"column":2,"index":5047}},{"frame":"  155 |   // the style tag exists\n  156 |   expect(document.querySelector(selector1)).toBeTruthy();\n> 157 |   expect(document.querySelector(selector2)).toBeTruthy();\n      |  ^ Duplicate Assert\n  158 |\n  159 |   // now unmounted\n  160 |   wrapper.unmount();","start":{"line":157,"column":2,"index":5105}},{"frame":"  160 |   wrapper.unmount();\n  161 |\n> 162 |   expect(document.querySelector(selector1)).not.toBeTruthy();\n      |  ^ Duplicate Assert\n  163 |   expect(document.querySelector(selector2)).not.toBeTruthy();\n  164 | });\n  165 |","start":{"line":162,"column":2,"index":5205}},{"frame":"  161 |\n  162 |   expect(document.querySelector(selector1)).not.toBeTruthy();\n> 163 |   expect(document.querySelector(selector2)).not.toBeTruthy();\n      |  ^ Duplicate Assert\n  164 | });\n  165 |\n  166 | it('should allow subsequent updates', () => {","start":{"line":163,"column":2,"index":5267}},{"frame":"  175 |   Array.from({ length: 4 }).forEach(() => {\n  176 |     marshal.resting();\n> 177 |     expect(getDynamicStyleFromTag(contextId)).toEqual(styles.resting);\n      |    ^ Duplicate Assert\n  178 |\n  179 |     marshal.dragging();\n  180 |     expect(getDynamicStyleFromTag(contextId)).toEqual(styles.dragging);","start":{"line":177,"column":4,"index":5723}},{"frame":"  178 |\n  179 |     marshal.dragging();\n> 180 |     expect(getDynamicStyleFromTag(contextId)).toEqual(styles.dragging);\n      |    ^ Duplicate Assert\n  181 |\n  182 |     marshal.dropping('DROP');\n  183 |     expect(getDynamicStyleFromTag(contextId)).toEqual(styles.dropAnimating);","start":{"line":180,"column":4,"index":5819}},{"frame":"  181 |\n  182 |     marshal.dropping('DROP');\n> 183 |     expect(getDynamicStyleFromTag(contextId)).toEqual(styles.dropAnimating);\n      |    ^ Duplicate Assert\n  184 |   });\n  185 |\n  186 |   wrapper.unmount();","start":{"line":183,"column":4,"index":5922}}]}],"metrics":{"aggregate":{"cyclomatic":23,"cyclomaticDensity":10.952,"halstead":{"bugs":1.64,"difficulty":27.95,"effort":137549.34,"length":736,"time":7641.63,"vocabulary":103,"volume":4921.264,"operands":{"distinct":90,"total":387,"identifiers":["getMarshal","myMock","StyleMarshal","mock","calls","0","getMock","jest","fn","mockImplementation","null","Props","contextId","ContextId","nonce","children","marshal","Node","WithMarshal","props","useStyleMarshal","getDynamicStyleTagSelector","prefix","style[","-dynamic=\"","\"]","getAlwaysStyleTagSelector","-always=\"","getDynamicStyleTag","HTMLStyleElement","selector","el","document","querySelector","getAlwaysStyleTag","getDynamicStyleFromTag","innerHTML","getAlwaysStyleFromTag","it","\"should not mount style tags until mounted\"","\"1\"","dynamicSelector","alwaysSelector","expect","toBeFalsy","wrapper","ReactWrapper","mount","toBeInstanceOf","unmount","\"should apply the resting dyanmic styles by default\"","\"2\"","active","toEqual","getStyles","resting","\"should apply the resting always styles by default\"","always","\"should apply the dragging styles when asked\"","dragging","\"should apply the drop animating styles when asked\"","dropping","\"DROP\"","dropAnimating","\"should apply the user cancel styles when asked\"","\"CANCEL\"","userCancel","\"should remove the style tag from the head when unmounting\"","selector1","selector2","toBeTruthy","not","\"should allow subsequent updates\"","\"10\"","styles","Styles","Array","from","length","4","forEach","\"should insert nonce into tag attribute\"","\"ThisShouldBeACryptographicallySecurePseudoRandomNumber\"","dynamicStyleTag","dynamicStyleTagNonce","getAttribute","\"nonce\"","\"\"","alwaysStyleTag","alwaysStyleTagNonce"]},"operators":{"distinct":13,"total":349,"identifiers":["const","=","function=>","[]",".","()","function","return","``","${}","{}",":",":?"]}},"paramCount":8,"sloc":{"logical":210,"physical":214}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":4,"path":"../../../../src/types","type":"esm"},{"line":5,"path":"../../../../src/view/use-style-marshal","type":"esm"},{"line":8,"path":"../../../../src/view/use-style-marshal/get-styles","type":"esm"},{"line":9,"path":"../../../../src/view/use-style-marshal/style-marshal-types","type":"esm"},{"line":10,"path":"../../../../src/view/data-attributes","type":"esm"}],"errors":[],"lineEnd":214,"lineStart":1,"maintainability":103.555,"methods":[{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.009,"difficulty":1.2,"effort":33.688,"length":10,"time":1.872,"vocabulary":7,"volume":28.074,"operands":{"distinct":5,"total":6,"identifiers":["StyleMarshal","myMock","mock","calls","0"]},"operators":{"distinct":2,"total":4,"identifiers":["[]","."]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":12,"lineStart":12,"name":"<anon method-1>","paramNames":["myMock"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":31.02,"length":8,"time":1.723,"vocabulary":6,"volume":20.68,"operands":{"distinct":3,"total":3,"identifiers":["jest","fn","mockImplementation"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":1},"errors":[],"lineEnd":13,"lineStart":13,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["null"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":13,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.022,"difficulty":3.571,"effort":230.462,"length":18,"time":12.803,"vocabulary":12,"volume":64.529,"operands":{"distinct":7,"total":10,"identifiers":["marshal","StyleMarshal","useStyleMarshal","props","contextId","nonce","children"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()",".","return"]}},"paramCount":1,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":24,"lineStart":21,"name":"WithMarshal","paramNames":["props"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.007,"difficulty":1,"effort":22.459,"length":8,"time":1.248,"vocabulary":7,"volume":22.459,"operands":{"distinct":5,"total":5,"identifiers":["prefix","contextId","style[","-dynamic=\"","\"]"]},"operators":{"distinct":2,"total":3,"identifiers":["``","${}"]}},"paramCount":1,"sloc":{"logical":1,"physical":2},"errors":[],"lineEnd":27,"lineStart":26,"name":"<anon method-4>","paramNames":["contextId"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.007,"difficulty":1,"effort":22.459,"length":8,"time":1.248,"vocabulary":7,"volume":22.459,"operands":{"distinct":5,"total":5,"identifiers":["prefix","contextId","style[","-always=\"","\"]"]},"operators":{"distinct":2,"total":3,"identifiers":["``","${}"]}},"paramCount":1,"sloc":{"logical":1,"physical":2},"errors":[],"lineEnd":30,"lineStart":29,"name":"<anon method-5>","paramNames":["contextId"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":3.571,"effort":230.462,"length":18,"time":12.803,"vocabulary":12,"volume":64.529,"operands":{"distinct":7,"total":10,"identifiers":["HTMLStyleElement","selector","getDynamicStyleTagSelector","contextId","el","document","querySelector"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()",".","return"]}},"paramCount":1,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":36,"lineStart":32,"name":"<anon method-6>","paramNames":["contextId"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":3.571,"effort":230.462,"length":18,"time":12.803,"vocabulary":12,"volume":64.529,"operands":{"distinct":7,"total":10,"identifiers":["HTMLStyleElement","selector","getAlwaysStyleTagSelector","contextId","el","document","querySelector"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()",".","return"]}},"paramCount":1,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":42,"lineStart":38,"name":"<anon method-7>","paramNames":["contextId"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["getDynamicStyleTag","contextId","innerHTML"]},"operators":{"distinct":3,"total":3,"identifiers":["return",".","()"]}},"paramCount":1,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":46,"lineStart":44,"name":"<anon method-8>","paramNames":["contextId"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["getAlwaysStyleTag","contextId","innerHTML"]},"operators":{"distinct":3,"total":3,"identifiers":["return",".","()"]}},"paramCount":1,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":50,"lineStart":48,"name":"<anon method-9>","paramNames":["contextId"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.107,"difficulty":4.222,"effort":1355.667,"length":72,"time":75.315,"vocabulary":22,"volume":321.079,"operands":{"distinct":18,"total":38,"identifiers":["contextId","ContextId","\"1\"","dynamicSelector","getDynamicStyleTagSelector","alwaysSelector","getAlwaysStyleTagSelector","expect","document","querySelector","toBeFalsy","wrapper","ReactWrapper","mount","getMock","toBeInstanceOf","HTMLStyleElement","unmount"]},"operators":{"distinct":4,"total":34,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":21,"physical":24},"errors":[],"lineEnd":75,"lineStart":52,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.053,"difficulty":4.071,"effort":651.068,"length":37,"time":36.17,"vocabulary":20,"volume":159.911,"operands":{"distinct":14,"total":19,"identifiers":["contextId","ContextId","\"2\"","wrapper","ReactWrapper","mount","getMock","active","getDynamicStyleFromTag","expect","toEqual","getStyles","resting","unmount"]},"operators":{"distinct":6,"total":18,"identifiers":["const","=","()",".","``","${}"]}},"paramCount":0,"sloc":{"logical":10,"physical":11},"errors":[],"lineEnd":87,"lineStart":77,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.052,"difficulty":4.385,"effort":689.145,"length":37,"time":38.286,"vocabulary":19,"volume":157.173,"operands":{"distinct":13,"total":19,"identifiers":["contextId","ContextId","\"2\"","wrapper","ReactWrapper","mount","getMock","always","getAlwaysStyleFromTag","expect","toEqual","getStyles","unmount"]},"operators":{"distinct":6,"total":18,"identifiers":["const","=","()",".","``","${}"]}},"paramCount":0,"sloc":{"logical":10,"physical":11},"errors":[],"lineEnd":99,"lineStart":89,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.079,"difficulty":4.5,"effort":1072.881,"length":52,"time":59.605,"vocabulary":24,"volume":238.418,"operands":{"distinct":18,"total":27,"identifiers":["contextId","ContextId","\"2\"","mock","getMock","wrapper","ReactWrapper","mount","marshal","StyleMarshal","getMarshal","dragging","active","getDynamicStyleFromTag","expect","toEqual","getStyles","unmount"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","()",".","``","${}"]}},"paramCount":0,"sloc":{"logical":14,"physical":15},"errors":[],"lineEnd":115,"lineStart":101,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.083,"difficulty":4.2,"effort":1046.318,"length":53,"time":58.129,"vocabulary":26,"volume":249.123,"operands":{"distinct":20,"total":28,"identifiers":["contextId","ContextId","\"2\"","mock","getMock","wrapper","ReactWrapper","mount","marshal","StyleMarshal","getMarshal","dropping","\"DROP\"","active","getDynamicStyleFromTag","expect","toEqual","getStyles","dropAnimating","unmount"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","()",".","``","${}"]}},"paramCount":0,"sloc":{"logical":14,"physical":14},"errors":[],"lineEnd":130,"lineStart":117,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.083,"difficulty":4.2,"effort":1046.318,"length":53,"time":58.129,"vocabulary":26,"volume":249.123,"operands":{"distinct":20,"total":28,"identifiers":["contextId","ContextId","\"2\"","mock","getMock","wrapper","ReactWrapper","mount","marshal","StyleMarshal","getMarshal","dropping","\"CANCEL\"","active","getDynamicStyleFromTag","expect","toEqual","getStyles","userCancel","unmount"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","()",".","``","${}"]}},"paramCount":0,"sloc":{"logical":14,"physical":14},"errors":[],"lineEnd":145,"lineStart":132,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.108,"difficulty":4.471,"effort":1453.082,"length":74,"time":80.727,"vocabulary":21,"volume":325.031,"operands":{"distinct":17,"total":38,"identifiers":["contextId","ContextId","\"2\"","wrapper","ReactWrapper","mount","getMock","selector1","getDynamicStyleTagSelector","selector2","getAlwaysStyleTagSelector","expect","document","querySelector","toBeTruthy","unmount","not"]},"operators":{"distinct":4,"total":36,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":21,"physical":18},"errors":[],"lineEnd":164,"lineStart":147,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.081,"difficulty":5.625,"effort":1366.307,"length":50,"time":75.906,"vocabulary":29,"volume":242.899,"operands":{"distinct":20,"total":25,"identifiers":["contextId","ContextId","\"10\"","styles","Styles","getStyles","mock","getMock","wrapper","ReactWrapper","mount","marshal","StyleMarshal","getMarshal","Array","from","length","4","forEach","unmount"]},"operators":{"distinct":9,"total":25,"identifiers":["const","=","()","``","${}",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":14,"physical":22},"errors":[],"lineEnd":187,"lineStart":166,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.057,"difficulty":2.273,"effort":386.864,"length":46,"time":21.492,"vocabulary":13,"volume":170.22,"operands":{"distinct":11,"total":25,"identifiers":["marshal","resting","expect","getDynamicStyleFromTag","contextId","toEqual","styles","dragging","dropping","\"DROP\"","dropAnimating"]},"operators":{"distinct":2,"total":21,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":12,"physical":10},"errors":[],"lineEnd":184,"lineStart":175,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":3,"cyclomaticDensity":15.789,"halstead":{"bugs":0.119,"difficulty":4.659,"effort":1661.509,"length":75,"time":92.306,"vocabulary":27,"volume":356.617,"operands":{"distinct":22,"total":41,"identifiers":["contextId","ContextId","\"2\"","nonce","\"ThisShouldBeACryptographicallySecurePseudoRandomNumber\"","mock","getMock","wrapper","ReactWrapper","mount","dynamicStyleTag","getDynamicStyleTag","dynamicStyleTagNonce","getAttribute","\"nonce\"","\"\"","alwaysStyleTag","getAlwaysStyleTag","alwaysStyleTagNonce","expect","toEqual","unmount"]},"operators":{"distinct":5,"total":34,"identifiers":["const","=","()",":?","."]}},"paramCount":0,"sloc":{"logical":19,"physical":25},"errors":[],"lineEnd":213,"lineStart":189,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.095,"cyclomaticDensity":0.522,"halstead":{"bugs":0.078,"difficulty":1.331,"effort":6549.969,"length":35.048,"time":363.887,"vocabulary":4.905,"volume":234.346,"operands":{"distinct":4.286,"total":18.429},"operators":{"distinct":0.619,"total":16.619}},"paramCount":0.381,"sloc":{"logical":10,"physical":10.19}},"methodAverage":{"cyclomatic":1.1,"cyclomaticDensity":33.611,"halstead":{"bugs":0.046,"difficulty":3.051,"effort":578.835,"length":32.5,"time":32.157,"vocabulary":15.15,"volume":139.394,"operands":{"distinct":10.95,"total":17.2},"operators":{"distinct":4.2,"total":15.3}},"paramCount":0.4,"sloc":{"logical":8.75,"physical":9.55}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/placeholder/on-transition-end.spec.js","testCases":1,"smells":3,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  38 |   };\n  39 |   wrapper.simulate('transitionend', height);\n> 40 |   expect(onTransitionEnd).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  41 |   onTransitionEnd.mockClear();\n  42 |\n  43 |   // subsequent transition events will not trigger","start":{"line":40,"column":2,"index":1203}},{"frame":"  53 |   wrapper.simulate('transitionend', margin);\n  54 |   wrapper.simulate('transitionend', width);\n> 55 |   expect(onTransitionEnd).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  56 |\n  57 |   // another transition event of height would trigger the handler\n  58 |   wrapper.simulate('transitionend', height);","start":{"line":55,"column":2,"index":1646}},{"frame":"  57 |   // another transition event of height would trigger the handler\n  58 |   wrapper.simulate('transitionend', height);\n> 59 |   expect(onTransitionEnd).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  60 |\n  61 |   // validate: this should not have triggered any close events\n  62 |   expect(onClose).not.toHaveBeenCalled();","start":{"line":59,"column":2,"index":1808}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":8.824,"halstead":{"bugs":0.234,"difficulty":7.412,"effort":5201.868,"length":131,"time":288.993,"vocabulary":41,"volume":701.839,"operands":{"distinct":34,"total":72,"identifiers":["jest","useFakeTimers","it","\"should only fire a single transitionend event a single time when transitioning multiple properties\"","onTransitionEnd","fn","onClose","wrapper","ReactWrapper","mount","\"open\"","placeholder","\"hey\"","act","runOnlyPendingTimers","update","expectIsFull","getPlaceholderStyle","height","TransitionEvent","propertyName","\"height\"","simulate","\"transitionend\"","expect","toHaveBeenCalledTimes","1","mockClear","margin","\"margin\"","width","\"width\"","not","toHaveBeenCalled"]},"operators":{"distinct":7,"total":59,"identifiers":["()",".","function=>","const","=","{}",":"]}},"paramCount":0,"sloc":{"logical":34,"physical":64}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":4,"path":"react-dom/test-utils","type":"esm"},{"line":5,"path":"./util/placeholder-with-class","type":"esm"},{"line":6,"path":"./util/expect","type":"esm"},{"line":7,"path":"./util/get-placeholder-style","type":"esm"},{"line":8,"path":"./util/data","type":"esm"}],"errors":[],"lineEnd":64,"lineStart":1,"maintainability":106.164,"methods":[{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.207,"difficulty":7.7,"effort":4773.422,"length":119,"time":265.19,"vocabulary":37,"volume":619.925,"operands":{"distinct":30,"total":66,"identifiers":["onTransitionEnd","jest","fn","onClose","wrapper","ReactWrapper","mount","\"open\"","placeholder","\"hey\"","act","update","expectIsFull","getPlaceholderStyle","height","TransitionEvent","propertyName","\"height\"","simulate","\"transitionend\"","expect","toHaveBeenCalledTimes","1","mockClear","margin","\"margin\"","width","\"width\"","not","toHaveBeenCalled"]},"operators":{"distinct":7,"total":53,"identifiers":["const","=","()",".","function=>","{}",":"]}},"paramCount":0,"sloc":{"logical":30,"physical":52},"errors":[],"lineEnd":63,"lineStart":12,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["jest","runOnlyPendingTimers"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":28,"lineStart":26,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.078,"difficulty":2.471,"effort":1733.956,"length":43.667,"time":96.331,"vocabulary":13.667,"volume":233.946,"operands":{"distinct":11.333,"total":24},"operators":{"distinct":2.333,"total":19.667}},"paramCount":0,"sloc":{"logical":11.333,"physical":21.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":51.667,"halstead":{"bugs":0.105,"difficulty":4.35,"effort":2390.711,"length":61.5,"time":132.817,"vocabulary":20.5,"volume":313.962,"operands":{"distinct":16,"total":34},"operators":{"distinct":4.5,"total":27.5}},"paramCount":0,"sloc":{"logical":15.5,"physical":27.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/placeholder/on-close.spec.js","testCases":2,"smells":8,"smellInfo":[{"name":"Assertion Roulette","packageName":"assertionRoulette","items":[{"frame":"  70 |   };\n  71 |   expectIsFull(getPlaceholderStyle(wrapper));\n> 72 |   assert();\n     |  ^ Assertion Roulette\n  73 |\n  74 |   wrapper.setProps({ animate: 'open' });\n  75 |   assert();","start":{"column":2,"line":72}},{"frame":"  73 |\n  74 |   wrapper.setProps({ animate: 'open' });\n> 75 |   assert();\n     |  ^ Assertion Roulette\n  76 | });\n  77 |","start":{"column":2,"line":75}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  30 |   };\n  31 |   wrapper.simulate('transitionend', height);\n> 32 |   expect(onClose).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  33 |   onClose.mockClear();\n  34 |\n  35 |   // transition events while animate=\"closed\" of different properties will not trigger","start":{"line":32,"column":2,"index":839}},{"frame":"  45 |   wrapper.simulate('transitionend', margin);\n  46 |   wrapper.simulate('transitionend', width);\n> 47 |   expect(onClose).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  48 | });\n  49 |\n  50 | it('should not fire an onClose if not closing when a transitionend occurs', () => {","start":{"line":47,"column":2,"index":1302}},{"frame":"  70 |   };\n  71 |   expectIsFull(getPlaceholderStyle(wrapper));\n> 72 |   assert();\n     |  ^ Duplicate Assert\n  73 |\n  74 |   wrapper.setProps({ animate: 'open' });\n  75 |   assert();","start":{"line":72,"column":2,"index":1976}},{"frame":"  73 |\n  74 |   wrapper.setProps({ animate: 'open' });\n> 75 |   assert();\n     |  ^ Duplicate Assert\n  76 | });\n  77 |","start":{"line":75,"column":2,"index":2030}}]},{"name":"Redundant Assertion","packageName":"redundantAssertion","items":[{"frame":"  70 |   };\n  71 |   expectIsFull(getPlaceholderStyle(wrapper));\n> 72 |   assert();\n     |  ^ Redundant Assertion\n  73 |\n  74 |   wrapper.setProps({ animate: 'open' });\n  75 |   assert();","start":{"column":2,"line":72}},{"frame":"  73 |\n  74 |   wrapper.setProps({ animate: 'open' });\n> 75 |   assert();\n     |  ^ Redundant Assertion\n  76 | });\n  77 |","start":{"column":2,"line":75}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":8.696,"halstead":{"bugs":0.307,"difficulty":9.3,"effort":8575.402,"length":171,"time":476.411,"vocabulary":42,"volume":922.086,"operands":{"distinct":35,"total":93,"identifiers":["it","\"should only fire a single onClose event\"","onClose","jest","fn","wrapper","ReactWrapper","mount","\"1\"","\"none\"","placeholder","expectIsFull","getPlaceholderStyle","setProps","animate","\"close\"","height","TransitionEvent","propertyName","\"height\"","simulate","\"transitionend\"","expect","toHaveBeenCalledTimes","1","mockClear","margin","\"margin\"","width","\"width\"","not","toHaveBeenCalled","\"should not fire an onClose if not closing when a transitionend occurs\"","assert","\"open\""]},"operators":{"distinct":7,"total":78,"identifiers":["()","function=>","const","=",".","{}",":"]}},"paramCount":0,"sloc":{"logical":46,"physical":77}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":4,"path":"./util/placeholder-with-class","type":"esm"},{"line":5,"path":"./util/expect","type":"esm"},{"line":6,"path":"./util/get-placeholder-style","type":"esm"},{"line":7,"path":"./util/data","type":"esm"}],"errors":[],"lineEnd":77,"lineStart":1,"maintainability":105.201,"methods":[{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.164,"difficulty":5.3,"effort":2603.057,"length":95,"time":144.614,"vocabulary":36,"volume":491.143,"operands":{"distinct":30,"total":53,"identifiers":["onClose","jest","fn","wrapper","ReactWrapper","mount","\"1\"","\"none\"","placeholder","expectIsFull","getPlaceholderStyle","setProps","animate","\"close\"","height","TransitionEvent","propertyName","\"height\"","simulate","\"transitionend\"","expect","toHaveBeenCalledTimes","1","mockClear","margin","\"margin\"","width","\"width\"","not","toHaveBeenCalled"]},"operators":{"distinct":6,"total":42,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":23,"physical":40},"errors":[],"lineEnd":48,"lineStart":9,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.062,"difficulty":5.133,"effort":961.453,"length":42,"time":53.414,"vocabulary":22,"volume":187.296,"operands":{"distinct":15,"total":22,"identifiers":["onClose","jest","fn","wrapper","ReactWrapper","mount","\"none\"","\"1\"","placeholder","assert","expectIsFull","getPlaceholderStyle","setProps","animate","\"open\""]},"operators":{"distinct":7,"total":20,"identifiers":["const","=","()",".","function=>","{}",":"]}},"paramCount":0,"sloc":{"logical":13,"physical":27},"errors":[],"lineEnd":76,"lineStart":50,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.036,"difficulty":3.5,"effort":379.463,"length":26,"time":21.081,"vocabulary":18,"volume":108.418,"operands":{"distinct":12,"total":14,"identifiers":["height","TransitionEvent","propertyName","\"height\"","wrapper","simulate","\"transitionend\"","expect","onClose","not","toHaveBeenCalled","mockClear"]},"operators":{"distinct":6,"total":12,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":9},"errors":[],"lineEnd":70,"lineStart":62,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.174,"halstead":{"bugs":0.077,"difficulty":2.325,"effort":2143.851,"length":42.75,"time":119.103,"vocabulary":10.5,"volume":230.522,"operands":{"distinct":8.75,"total":23.25},"operators":{"distinct":1.75,"total":19.5}},"paramCount":0,"sloc":{"logical":11.5,"physical":19.25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":9.569,"halstead":{"bugs":0.087,"difficulty":4.644,"effort":1314.658,"length":54.333,"time":73.037,"vocabulary":25.333,"volume":262.286,"operands":{"distinct":19,"total":29.667},"operators":{"distinct":6.333,"total":24.667}},"paramCount":0,"sloc":{"logical":14,"physical":25.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/placeholder/animated-mount.spec.js","testCases":3,"smells":7,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  71 |   expectIsEmpty(onMount);\n  72 |\n> 73 |   expect(getCreatePlaceholderCalls()).toHaveLength(1);\n     |  ^ Duplicate Assert\n  74 |\n  75 |   // interrupting animation\n  76 |   wrapper.setProps({","start":{"line":73,"column":2,"index":1923}},{"frame":"  81 |   // render 2: useEffect calling setState\n  82 |   // render 3: result of setState\n> 83 |   expect(getCreatePlaceholderCalls()).toHaveLength(3);\n     |  ^ Duplicate Assert\n  84 |\n  85 |   // no timers are run\n  86 |   // let enzyme know that the react tree has changed due to the set state","start":{"line":83,"column":2,"index":2154}},{"frame":"   95 |   wrapper.update();\n   96 |   expectIsFull(getPlaceholderStyle(wrapper));\n>  97 |   expect(getCreatePlaceholderCalls()).toHaveLength(0);\n      |  ^ Duplicate Assert\n   98 | });\n   99 |\n  100 | it('should not animate in if unmounted', () => {","start":{"line":97,"column":2,"index":2577}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  40 |   );\n  41 |\n> 42 |   expect(getCreatePlaceholderCalls().length).toBe(1);\n     |                                                  ^ Magic Number\n  43 |\n  44 |   // first call had an empty size\n  45 |   const onMount: PlaceholderStyle = getPlaceholderStyle(wrapper);","start":{"line":42,"column":50,"index":1178}},{"frame":"  71 |   expectIsEmpty(onMount);\n  72 |\n> 73 |   expect(getCreatePlaceholderCalls()).toHaveLength(1);\n     |                                                   ^ Magic Number\n  74 |\n  75 |   // interrupting animation\n  76 |   wrapper.setProps({","start":{"line":73,"column":51,"index":1972}},{"frame":"  81 |   // render 2: useEffect calling setState\n  82 |   // render 3: result of setState\n> 83 |   expect(getCreatePlaceholderCalls()).toHaveLength(3);\n     |                                                   ^ Magic Number\n  84 |\n  85 |   // no timers are run\n  86 |   // let enzyme know that the react tree has changed due to the set state","start":{"line":83,"column":51,"index":2203}},{"frame":"   95 |   wrapper.update();\n   96 |   expectIsFull(getPlaceholderStyle(wrapper));\n>  97 |   expect(getCreatePlaceholderCalls()).toHaveLength(0);\n      |                                                   ^ Magic Number\n   98 | });\n   99 |\n  100 | it('should not animate in if unmounted', () => {","start":{"line":97,"column":51,"index":2626}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":12.658,"halstead":{"bugs":0.542,"difficulty":16.189,"effort":26323.429,"length":270,"time":1462.413,"vocabulary":65,"volume":1626.039,"operands":{"distinct":53,"total":143,"identifiers":["jest","useFakeTimers","contextId","\"hello-there\"","spy","beforeEach","spyOn","React","\"createElement\"","afterEach","mockRestore","getCreatePlaceholderCalls","mock","calls","filter","call","1","attributes","placeholder","it","\"should animate a mount\"","wrapper","ReactWrapper","mount","\"open\"","fn","expect","length","toBe","onMount","PlaceholderStyle","getPlaceholderStyle","expectIsEmpty","act","runOnlyPendingTimers","update","postMount","expectIsFull","\"should not animate a mount if interrupted\"","toHaveLength","setProps","animate","\"none\"","3","mockClear","0","\"should not animate in if unmounted\"","error","console","\"error\"","unmount","not","toHaveBeenCalled"]},"operators":{"distinct":12,"total":127,"identifiers":["()",".","const","=","let","function=>","return","&&","[]","===","{}",":"]}},"paramCount":1,"sloc":{"logical":79,"physical":122}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":4,"path":"react-dom/test-utils","type":"esm"},{"line":5,"path":"./util/placeholder-with-class","type":"esm"},{"line":6,"path":"../../../../src/view/placeholder/placeholder-types","type":"esm"},{"line":7,"path":"./util/expect","type":"esm"},{"line":8,"path":"./util/data","type":"esm"},{"line":9,"path":"./util/get-placeholder-style","type":"esm"},{"line":10,"path":"../../../../src/view/data-attributes","type":"esm"}],"errors":[],"lineEnd":122,"lineStart":1,"maintainability":108.41,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1.5,"effort":36,"length":8,"time":2,"vocabulary":8,"volume":24,"operands":{"distinct":5,"total":5,"identifiers":["spy","jest","spyOn","React","\"createElement\""]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":19,"lineStart":17,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["spy","mockRestore"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":23,"lineStart":21,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.012,"difficulty":2,"effort":69.738,"length":11,"time":3.874,"vocabulary":9,"volume":34.869,"operands":{"distinct":5,"total":5,"identifiers":["spy","mock","calls","filter","call"]},"operators":{"distinct":4,"total":6,"identifiers":["return","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":29,"lineStart":25,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":200,"halstead":{"bugs":0.018,"difficulty":4,"effort":212.603,"length":16,"time":11.811,"vocabulary":10,"volume":53.151,"operands":{"distinct":5,"total":8,"identifiers":["call","1","attributes","placeholder","contextId"]},"operators":{"distinct":5,"total":8,"identifiers":["return","&&","[]","===","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":28,"lineStart":26,"name":"<anon method-4>","paramNames":["call"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.085,"difficulty":3.571,"effort":906.513,"length":54,"time":50.362,"vocabulary":26,"volume":253.824,"operands":{"distinct":21,"total":30,"identifiers":["wrapper","ReactWrapper","mount","contextId","\"open\"","placeholder","jest","fn","expect","getCreatePlaceholderCalls","length","toBe","1","onMount","PlaceholderStyle","getPlaceholderStyle","expectIsEmpty","act","update","postMount","expectIsFull"]},"operators":{"distinct":5,"total":24,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":16,"physical":28},"errors":[],"lineEnd":58,"lineStart":31,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["jest","runOnlyPendingTimers"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":51,"lineStart":49,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.151,"difficulty":5.444,"effort":2471.753,"length":90,"time":137.32,"vocabulary":33,"volume":453.995,"operands":{"distinct":27,"total":49,"identifiers":["wrapper","ReactWrapper","mount","\"open\"","contextId","placeholder","jest","fn","onMount","PlaceholderStyle","getPlaceholderStyle","expectIsEmpty","expect","getCreatePlaceholderCalls","toHaveLength","1","setProps","animate","\"none\"","3","update","postMount","expectIsFull","spy","mockClear","runOnlyPendingTimers","0"]},"operators":{"distinct":6,"total":41,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":27,"physical":39},"errors":[],"lineEnd":98,"lineStart":60,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.078,"difficulty":2.8,"effort":654.733,"length":51,"time":36.374,"vocabulary":24,"volume":233.833,"operands":{"distinct":20,"total":28,"identifiers":["error","jest","spyOn","console","\"error\"","wrapper","ReactWrapper","mount","\"open\"","contextId","placeholder","fn","expectIsEmpty","getPlaceholderStyle","unmount","runOnlyPendingTimers","expect","not","toHaveBeenCalled","mockRestore"]},"operators":{"distinct":4,"total":23,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":13,"physical":22},"errors":[],"lineEnd":121,"lineStart":100,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.111,"cyclomaticDensity":1.406,"halstead":{"bugs":0.06,"difficulty":1.799,"effort":2924.825,"length":30,"time":162.49,"vocabulary":7.222,"volume":180.671,"operands":{"distinct":5.889,"total":15.889},"operators":{"distinct":1.333,"total":14.111}},"paramCount":0.111,"sloc":{"logical":8.778,"physical":13.556}},"methodAverage":{"cyclomatic":1.125,"cyclomaticDensity":62.622,"halstead":{"bugs":0.045,"difficulty":2.664,"effort":545.918,"length":29.75,"time":30.329,"vocabulary":14.75,"volume":133.709,"operands":{"distinct":10.875,"total":16.125},"operators":{"distinct":3.875,"total":13.625}},"paramCount":0.125,"sloc":{"logical":8,"physical":13.25}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/is-type-of-element/is-element.spec.js","testCases":3,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  14 |\n  15 | it('should not let other types through', () => {\n> 16 |   [null, 1, true, {}, () => {}].forEach((value: mixed) =>\n     |                                ^ Conditional Test Logic\n  17 |     expect(isElement(value)).toBe(false),\n  18 |   );\n  19 | });","start":{"line":16,"column":32,"index":520}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":14.286,"halstead":{"bugs":0.283,"difficulty":17.981,"effort":15268.207,"length":163,"time":848.234,"vocabulary":37,"volume":849.141,"operands":{"distinct":26,"total":85,"identifiers":["it","\"should allow all elements through\"","anchor","HTMLElement","document","createElement","\"a\"","svg","SVGElement","getSvg","expect","isElement","toBe","true","\"should not let other types through\"","null","1","forEach","value","false","\"should not allow svg elements from another window\"","other","JSDOM","<!DOCTYPE html><p>Hello world</p>","window","Element"]},"operators":{"distinct":11,"total":78,"identifiers":["()","function=>","const","=",".","[]",",","{}","new","``","instanceof"]}},"paramCount":1,"sloc":{"logical":42,"physical":35}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"jsdom","type":"esm"},{"line":3,"path":"../../../../src/view/is-type-of-element/is-element","type":"esm"},{"line":4,"path":"./util/get-svg","type":"esm"}],"errors":[],"lineEnd":35,"lineStart":1,"maintainability":112.657,"methods":[{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.045,"difficulty":3.167,"effort":430.667,"length":34,"time":23.926,"vocabulary":16,"volume":136,"operands":{"distinct":12,"total":19,"identifiers":["anchor","HTMLElement","document","createElement","\"a\"","svg","SVGElement","getSvg","expect","isElement","toBe","true"]},"operators":{"distinct":4,"total":15,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":8},"errors":[],"lineEnd":13,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.017,"difficulty":3,"effort":155.674,"length":15,"time":8.649,"vocabulary":11,"volume":51.891,"operands":{"distinct":5,"total":5,"identifiers":["null","1","true","forEach","value"]},"operators":{"distinct":6,"total":10,"identifiers":["()",".","[]",",","{}","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":19,"lineStart":15,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":16,"lineStart":16,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.008,"difficulty":1,"effort":25.266,"length":9,"time":1.404,"vocabulary":7,"volume":25.266,"operands":{"distinct":5,"total":5,"identifiers":["expect","isElement","value","toBe","false"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":4,"physical":2},"errors":[],"lineEnd":17,"lineStart":16,"name":"<anon method-4>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.142,"difficulty":10.294,"effort":4389.427,"length":93,"time":243.857,"vocabulary":24,"volume":426.402,"operands":{"distinct":17,"total":50,"identifiers":["other","JSDOM","<!DOCTYPE html><p>Hello world</p>","anchor","HTMLElement","window","document","createElement","\"a\"","svg","getSvg","expect","isElement","toBe","true","Element","false"]},"operators":{"distinct":7,"total":43,"identifiers":["const","=","new","``","()",".","instanceof"]}},"paramCount":0,"sloc":{"logical":19,"physical":14},"errors":[],"lineEnd":34,"lineStart":21,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.381,"halstead":{"bugs":0.047,"difficulty":2.997,"effort":2544.701,"length":27.167,"time":141.372,"vocabulary":6.167,"volume":141.523,"operands":{"distinct":4.333,"total":14.167},"operators":{"distinct":1.833,"total":13}},"paramCount":0.167,"sloc":{"logical":7,"physical":5.833}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.719,"halstead":{"bugs":0.043,"difficulty":3.492,"effort":1000.207,"length":30.2,"time":55.567,"vocabulary":11.6,"volume":127.912,"operands":{"distinct":7.8,"total":15.8},"operators":{"distinct":3.8,"total":14.4}},"paramCount":0.2,"sloc":{"logical":7.2,"physical":6}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/droppable/placeholder.spec.js","testCases":7,"smells":7,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  20 |     });\n  21 |\n> 22 |     expect(wrapper.find(Placeholder)).toHaveLength(0);\n     |                                                   ^ Magic Number\n  23 |   });\n  24 |\n  25 |   it('should render a placeholder when dragging over', () => {","start":{"line":22,"column":51,"index":560}},{"frame":"  29 |     });\n  30 |\n> 31 |     expect(wrapper.find(Placeholder)).toHaveLength(1);\n     |                                                   ^ Magic Number\n  32 |   });\n  33 |\n  34 |   it('should render a placeholder when dragging over nothing', () => {","start":{"line":31,"column":51,"index":797}},{"frame":"  38 |     });\n  39 |\n> 40 |     expect(wrapper.find(Placeholder)).toHaveLength(1);\n     |                                                   ^ Magic Number\n  41 |   });\n  42 |\n  43 |   it('should render a placeholder when dragging over a foreign list', () => {","start":{"line":40,"column":51,"index":1045}},{"frame":"  47 |     });\n  48 |\n> 49 |     expect(wrapper.find(Placeholder)).toHaveLength(1);\n     |                                                   ^ Magic Number\n  50 |   });\n  51 | });\n  52 |","start":{"line":49,"column":51,"index":1300}},{"frame":"  58 |     });\n  59 |\n> 60 |     expect(wrapper.find(Placeholder)).toHaveLength(0);\n     |                                                   ^ Magic Number\n  61 |   });\n  62 |\n  63 |   it('should render a placeholder when dragging over', () => {","start":{"line":60,"column":51,"index":1575}},{"frame":"  67 |     });\n  68 |\n> 69 |     expect(wrapper.find(Placeholder)).toHaveLength(1);\n     |                                                   ^ Magic Number\n  70 |   });\n  71 |\n  72 |   it('should not render a placeholder when over nothing', () => {","start":{"line":69,"column":51,"index":1818}},{"frame":"  76 |     });\n  77 |\n> 78 |     expect(wrapper.find(Placeholder)).toHaveLength(0);\n     |                                                   ^ Magic Number\n  79 |   });\n  80 | });\n  81 |","start":{"line":78,"column":51,"index":2067}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":14.925,"halstead":{"bugs":0.346,"difficulty":14.13,"effort":14664.329,"length":204,"time":814.685,"vocabulary":34,"volume":1037.842,"operands":{"distinct":27,"total":109,"identifiers":["describe","\"home list\"","it","\"should not render a placeholder when not dragging\"","wrapper","ReactWrapper","mount","ownProps","homeOwnProps","mapProps","homeAtRest","expect","find","Placeholder","toHaveLength","0","\"should render a placeholder when dragging over\"","isOverHome","1","\"should render a placeholder when dragging over nothing\"","isNotOverHome","\"should render a placeholder when dragging over a foreign list\"","isOverForeign","\"foreign\"","foreignOwnProps","\"should not render a placeholder when over nothing\"","isNotOverForeign"]},"operators":{"distinct":7,"total":95,"identifiers":["()","function=>","const","=","{}",":","."]}},"paramCount":0,"sloc":{"logical":67,"physical":81}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"enzyme","type":"esm"},{"line":3,"path":"./util/mount","type":"esm"},{"line":12,"path":"./util/get-props","type":"esm"},{"line":13,"path":"../../../../src/view/placeholder","type":"esm"}],"errors":[],"lineEnd":81,"lineStart":1,"maintainability":115.252,"methods":[{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should not render a placeholder when not dragging\"","\"should render a placeholder when dragging over\"","\"should render a placeholder when dragging over nothing\"","\"should render a placeholder when dragging over a foreign list\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":37},"errors":[],"lineEnd":51,"lineStart":15,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.033,"difficulty":3.25,"effort":325.254,"length":24,"time":18.07,"vocabulary":18,"volume":100.078,"operands":{"distinct":12,"total":13,"identifiers":["wrapper","ReactWrapper","mount","ownProps","homeOwnProps","mapProps","homeAtRest","expect","find","Placeholder","toHaveLength","0"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":7,"physical":8},"errors":[],"lineEnd":23,"lineStart":16,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.033,"difficulty":3.25,"effort":325.254,"length":24,"time":18.07,"vocabulary":18,"volume":100.078,"operands":{"distinct":12,"total":13,"identifiers":["wrapper","ReactWrapper","mount","ownProps","homeOwnProps","mapProps","isOverHome","expect","find","Placeholder","toHaveLength","1"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":7,"physical":8},"errors":[],"lineEnd":32,"lineStart":25,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.033,"difficulty":3.25,"effort":325.254,"length":24,"time":18.07,"vocabulary":18,"volume":100.078,"operands":{"distinct":12,"total":13,"identifiers":["wrapper","ReactWrapper","mount","ownProps","homeOwnProps","mapProps","isNotOverHome","expect","find","Placeholder","toHaveLength","1"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":7,"physical":8},"errors":[],"lineEnd":41,"lineStart":34,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.033,"difficulty":3.25,"effort":325.254,"length":24,"time":18.07,"vocabulary":18,"volume":100.078,"operands":{"distinct":12,"total":13,"identifiers":["wrapper","ReactWrapper","mount","ownProps","homeOwnProps","mapProps","isOverForeign","expect","find","Placeholder","toHaveLength","1"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":7,"physical":8},"errors":[],"lineEnd":50,"lineStart":43,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should not render a placeholder when not dragging\"","\"should render a placeholder when dragging over\"","\"should not render a placeholder when over nothing\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":28},"errors":[],"lineEnd":80,"lineStart":53,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.033,"difficulty":3.25,"effort":325.254,"length":24,"time":18.07,"vocabulary":18,"volume":100.078,"operands":{"distinct":12,"total":13,"identifiers":["wrapper","ReactWrapper","mount","ownProps","foreignOwnProps","mapProps","homeAtRest","expect","find","Placeholder","toHaveLength","0"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":7,"physical":8},"errors":[],"lineEnd":61,"lineStart":54,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.033,"difficulty":3.25,"effort":325.254,"length":24,"time":18.07,"vocabulary":18,"volume":100.078,"operands":{"distinct":12,"total":13,"identifiers":["wrapper","ReactWrapper","mount","ownProps","foreignOwnProps","mapProps","isOverForeign","expect","find","Placeholder","toHaveLength","1"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":7,"physical":8},"errors":[],"lineEnd":70,"lineStart":63,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.033,"difficulty":3.25,"effort":325.254,"length":24,"time":18.07,"vocabulary":18,"volume":100.078,"operands":{"distinct":12,"total":13,"identifiers":["wrapper","ReactWrapper","mount","ownProps","foreignOwnProps","mapProps","isNotOverForeign","expect","find","Placeholder","toHaveLength","0"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":7,"physical":8},"errors":[],"lineEnd":79,"lineStart":72,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.493,"halstead":{"bugs":0.035,"difficulty":1.413,"effort":1466.433,"length":20.4,"time":81.468,"vocabulary":3.4,"volume":103.784,"operands":{"distinct":2.7,"total":10.9},"operators":{"distinct":0.7,"total":9.5}},"paramCount":0,"sloc":{"logical":6.7,"physical":8.1}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.352,"halstead":{"bugs":0.029,"difficulty":2.872,"effort":266.131,"length":21.778,"time":14.785,"vocabulary":15.444,"volume":86.276,"operands":{"distinct":10.333,"total":11.667},"operators":{"distinct":5.111,"total":10.111}},"paramCount":0,"sloc":{"logical":7,"physical":13.444}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/droppable/placeholder-setup-warning.spec.js","testCases":4,"smells":12,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  53 |       WrappedComponent: WithNoPlaceholder,\n  54 |     });\n> 55 |     expect(console.warn).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  56 |\n  57 |     wrapper.setProps(isOverForeign);\n  58 |     expect(console.warn).toHaveBeenCalled();","start":{"line":55,"column":4,"index":1265}},{"frame":"  56 |\n  57 |     wrapper.setProps(isOverForeign);\n> 58 |     expect(console.warn).toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  59 |\n  60 |     wrapper.unmount();\n  61 |   });","start":{"line":58,"column":4,"index":1352}},{"frame":"  81 |       WrappedComponent: WithNoPlaceholder,\n  82 |     });\n> 83 |     expect(console.warn).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  84 |\n  85 |     wrapper.setProps(isNotOverForeign);\n  86 |     expect(console.warn).not.toHaveBeenCalled();","start":{"line":83,"column":4,"index":1983}},{"frame":"  81 |       WrappedComponent: WithNoPlaceholder,\n  82 |     });\n> 83 |     expect(console.warn).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  84 |\n  85 |     wrapper.setProps(isNotOverForeign);\n  86 |     expect(console.warn).not.toHaveBeenCalled();","start":{"line":83,"column":4,"index":1983}},{"frame":"  84 |\n  85 |     wrapper.setProps(isNotOverForeign);\n> 86 |     expect(console.warn).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  87 |\n  88 |     wrapper.unmount();\n  89 |   });","start":{"line":86,"column":4,"index":2073}},{"frame":"  84 |\n  85 |     wrapper.setProps(isNotOverForeign);\n> 86 |     expect(console.warn).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  87 |\n  88 |     wrapper.unmount();\n  89 |   });","start":{"line":86,"column":4,"index":2073}}]},{"name":"Redundant Print","packageName":"redundantPrint","items":[{"frame":"  42 |     });\n  43 |\n> 44 |     expect(console.warn).toHaveBeenCalled();\n     |           ^ Redundant Print\n  45 |\n  46 |     wrapper.unmount();\n  47 |   });","start":{"line":44,"column":11,"index":988}},{"frame":"  53 |       WrappedComponent: WithNoPlaceholder,\n  54 |     });\n> 55 |     expect(console.warn).not.toHaveBeenCalled();\n     |           ^ Redundant Print\n  56 |\n  57 |     wrapper.setProps(isOverForeign);\n  58 |     expect(console.warn).toHaveBeenCalled();","start":{"line":55,"column":11,"index":1272}},{"frame":"  56 |\n  57 |     wrapper.setProps(isOverForeign);\n> 58 |     expect(console.warn).toHaveBeenCalled();\n     |           ^ Redundant Print\n  59 |\n  60 |     wrapper.unmount();\n  61 |   });","start":{"line":58,"column":11,"index":1359}},{"frame":"  70 |     });\n  71 |\n> 72 |     expect(console.warn).not.toHaveBeenCalled();\n     |           ^ Redundant Print\n  73 |\n  74 |     wrapper.unmount();\n  75 |   });","start":{"line":72,"column":11,"index":1698}},{"frame":"  81 |       WrappedComponent: WithNoPlaceholder,\n  82 |     });\n> 83 |     expect(console.warn).not.toHaveBeenCalled();\n     |           ^ Redundant Print\n  84 |\n  85 |     wrapper.setProps(isNotOverForeign);\n  86 |     expect(console.warn).not.toHaveBeenCalled();","start":{"line":83,"column":11,"index":1990}},{"frame":"  84 |\n  85 |     wrapper.setProps(isNotOverForeign);\n> 86 |     expect(console.warn).not.toHaveBeenCalled();\n     |           ^ Redundant Print\n  87 |\n  88 |     wrapper.unmount();\n  89 |   });","start":{"line":86,"column":11,"index":2080}}]}],"metrics":{"aggregate":{"cyclomatic":11,"cyclomaticDensity":18.033,"halstead":{"bugs":0.41,"difficulty":15.024,"effort":18499.456,"length":216,"time":1027.748,"vocabulary":52,"volume":1231.295,"operands":{"distinct":41,"total":112,"identifiers":["WithNoPlaceholder","React","Component","provided","Provided","render","props","innerRef","droppableProps","beforeEach","jest","spyOn","console","\"warn\"","mockImplementation","afterEach","warn","mockRestore","describe","\"is over foreign\"","it","\"should log a warning when mounting\"","wrapper","ReactWrapper","mount","ownProps","foreignOwnProps","mapProps","isOverForeign","WrappedComponent","expect","toHaveBeenCalled","unmount","\"should log a warning when updating\"","homeAtRest","not","setProps","\"is not over foreign\"","\"should not log a warning when mounting\"","isNotOverForeign","\"should not log a warning when updating\""]},"operators":{"distinct":11,"total":104,"identifiers":["class","extends",".","return","this","()","function=>","const","=","{}",":"]}},"paramCount":0,"sloc":{"logical":61,"physical":91}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[{"aggregate":{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.019,"difficulty":2.25,"effort":128.382,"length":18,"time":7.132,"vocabulary":9,"volume":57.059,"operands":{"distinct":6,"total":9,"identifiers":["provided","Provided","render","props","innerRef","droppableProps"]},"operators":{"distinct":3,"total":9,"identifiers":["return",".","this"]}},"paramCount":0,"sloc":{"logical":2,"physical":14}},"errors":[],"lineEnd":26,"lineStart":13,"methods":[{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.014,"difficulty":2.25,"effort":94.748,"length":15,"time":5.264,"vocabulary":7,"volume":42.11,"operands":{"distinct":4,"total":6,"identifiers":["props","provided","innerRef","droppableProps"]},"operators":{"distinct":3,"total":9,"identifiers":["return",".","this"]}},"paramCount":0,"sloc":{"logical":1,"physical":10},"errors":[],"lineEnd":25,"lineStart":16,"name":"render","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":0.5,"cyclomaticDensity":25,"halstead":{"bugs":0.01,"difficulty":1.125,"effort":64.191,"length":9,"time":3.566,"vocabulary":4.5,"volume":28.529,"operands":{"distinct":3,"total":4.5},"operators":{"distinct":1.5,"total":4.5}},"paramCount":0,"sloc":{"logical":1,"physical":7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.014,"difficulty":2.25,"effort":94.748,"length":15,"time":5.264,"vocabulary":7,"volume":42.11,"operands":{"distinct":4,"total":6},"operators":{"distinct":3,"total":9}},"paramCount":0,"sloc":{"logical":1,"physical":10}},"name":"WithNoPlaceholder","superClassName":"<computed~React.Component>","maintainability":155.435}],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":4,"path":"../../../../src/view/droppable/droppable-types","type":"esm"},{"line":10,"path":"./util/get-props","type":"esm"},{"line":11,"path":"./util/mount","type":"esm"}],"errors":[],"lineEnd":91,"lineStart":1,"maintainability":117.847,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["jest","spyOn","console","\"warn\"","mockImplementation"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":30,"lineStart":28,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":29,"lineStart":29,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.005,"difficulty":1,"effort":13.932,"length":6,"time":0.774,"vocabulary":5,"volume":13.932,"operands":{"distinct":3,"total":3,"identifiers":["console","warn","mockRestore"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":4},"errors":[],"lineEnd":34,"lineStart":31,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should log a warning when mounting\"","\"should log a warning when updating\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":27},"errors":[],"lineEnd":62,"lineStart":36,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.04,"difficulty":3.214,"effort":388.974,"length":28,"time":21.61,"vocabulary":20,"volume":121.014,"operands":{"distinct":14,"total":15,"identifiers":["wrapper","ReactWrapper","mount","ownProps","foreignOwnProps","mapProps","isOverForeign","WrappedComponent","WithNoPlaceholder","expect","console","warn","toHaveBeenCalled","unmount"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":8,"physical":11},"errors":[],"lineEnd":47,"lineStart":37,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.065,"difficulty":4.059,"effort":789.495,"length":43,"time":43.861,"vocabulary":23,"volume":194.513,"operands":{"distinct":17,"total":23,"identifiers":["wrapper","ReactWrapper","mount","ownProps","foreignOwnProps","mapProps","homeAtRest","WrappedComponent","WithNoPlaceholder","expect","console","warn","not","toHaveBeenCalled","setProps","isOverForeign","unmount"]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":11,"physical":13},"errors":[],"lineEnd":61,"lineStart":49,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should not log a warning when mounting\"","\"should not log a warning when updating\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":27},"errors":[],"lineEnd":90,"lineStart":64,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.044,"difficulty":3.2,"effort":421.662,"length":30,"time":23.426,"vocabulary":21,"volume":131.77,"operands":{"distinct":15,"total":16,"identifiers":["wrapper","ReactWrapper","mount","ownProps","foreignOwnProps","mapProps","isNotOverForeign","WrappedComponent","WithNoPlaceholder","expect","console","warn","not","toHaveBeenCalled","unmount"]},"operators":{"distinct":6,"total":14,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":8,"physical":11},"errors":[],"lineEnd":75,"lineStart":65,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.068,"difficulty":4.235,"effort":862.138,"length":45,"time":47.897,"vocabulary":23,"volume":203.56,"operands":{"distinct":17,"total":24,"identifiers":["wrapper","ReactWrapper","mount","ownProps","foreignOwnProps","mapProps","homeAtRest","WrappedComponent","WithNoPlaceholder","expect","console","warn","not","toHaveBeenCalled","setProps","isNotOverForeign","unmount"]},"operators":{"distinct":6,"total":21,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":11,"physical":13},"errors":[],"lineEnd":89,"lineStart":77,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.639,"halstead":{"bugs":0.037,"difficulty":1.366,"effort":1681.769,"length":19.636,"time":93.432,"vocabulary":4.727,"volume":111.936,"operands":{"distinct":3.727,"total":10.182},"operators":{"distinct":1,"total":9.455}},"paramCount":0,"sloc":{"logical":5.545,"physical":8.273}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":32.652,"halstead":{"bugs":0.026,"difficulty":2.213,"effort":266.548,"length":19.3,"time":14.808,"vocabulary":11.7,"volume":77.405,"operands":{"distinct":8.1,"total":10},"operators":{"distinct":3.6,"total":9.3}},"paramCount":0,"sloc":{"logical":5.1,"physical":12}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/droppable/pass-through-snapshot.spec.js","testCases":2,"smells":6,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  33 |     WrappedComponent: getStubber(myMock),\n  34 |   });\n> 35 |   expect(getLastSnapshot(myMock)).toBe(homeAtRest.snapshot);\n     |  ^ Duplicate Assert\n  36 |\n  37 |   wrapper.setProps(isOverHome);\n  38 |   expect(getLastSnapshot(myMock)).toBe(isOverHome.snapshot);","start":{"line":35,"column":2,"index":879}},{"frame":"  33 |     WrappedComponent: getStubber(myMock),\n  34 |   });\n> 35 |   expect(getLastSnapshot(myMock)).toBe(homeAtRest.snapshot);\n     |  ^ Duplicate Assert\n  36 |\n  37 |   wrapper.setProps(isOverHome);\n  38 |   expect(getLastSnapshot(myMock)).toBe(isOverHome.snapshot);","start":{"line":35,"column":2,"index":879}},{"frame":"  36 |\n  37 |   wrapper.setProps(isOverHome);\n> 38 |   expect(getLastSnapshot(myMock)).toBe(isOverHome.snapshot);\n     |  ^ Duplicate Assert\n  39 |\n  40 |   // now over foreign list\n  41 |   wrapper.setProps(isNotOverHome);","start":{"line":38,"column":2,"index":973}},{"frame":"  40 |   // now over foreign list\n  41 |   wrapper.setProps(isNotOverHome);\n> 42 |   expect(getLastSnapshot(myMock)).toBe(isNotOverHome.snapshot);\n     |  ^ Duplicate Assert\n  43 |\n  44 |   // drag is now over\n  45 |   wrapper.setProps(homeAtRest);","start":{"line":42,"column":2,"index":1097}},{"frame":"  44 |   // drag is now over\n  45 |   wrapper.setProps(homeAtRest);\n> 46 |   expect(getLastSnapshot(myMock)).toBe(homeAtRest.snapshot);\n     |  ^ Duplicate Assert\n  47 | });\n  48 |","start":{"line":46,"column":2,"index":1216}},{"frame":"  44 |   // drag is now over\n  45 |   wrapper.setProps(homeAtRest);\n> 46 |   expect(getLastSnapshot(myMock)).toBe(homeAtRest.snapshot);\n     |  ^ Duplicate Assert\n  47 | });\n  48 |","start":{"line":46,"column":2,"index":1216}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":10.256,"halstead":{"bugs":0.257,"difficulty":13.276,"effort":10244.568,"length":146,"time":569.143,"vocabulary":39,"volume":771.669,"operands":{"distinct":29,"total":77,"identifiers":["getLastSnapshot","myMock","mock","calls","length","1","0","snapshot","it","\"should let a consumer know when a foreign list is being dragged over\"","jest","fn","mount","ownProps","foreignOwnProps","mapProps","isOverForeign","WrappedComponent","getStubber","expect","toEqual","\"should update snapshot as dragging over changes\"","wrapper","ReactWrapper","homeAtRest","toBe","setProps","isOverHome","isNotOverHome"]},"operators":{"distinct":10,"total":69,"identifiers":["const","=","function=>","return",".","[]","-","()","{}",":"]}},"paramCount":1,"sloc":{"logical":39,"physical":48}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"enzyme","type":"esm"},{"line":3,"path":"./util/mount","type":"esm"},{"line":4,"path":"./util/get-stubber","type":"esm"},{"line":11,"path":"./util/get-props","type":"esm"}],"errors":[],"lineEnd":48,"lineStart":1,"maintainability":107.267,"methods":[{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.023,"difficulty":2.857,"effort":197.682,"length":20,"time":10.982,"vocabulary":11,"volume":69.189,"operands":{"distinct":7,"total":10,"identifiers":["myMock","mock","calls","length","1","0","snapshot"]},"operators":{"distinct":4,"total":10,"identifiers":["return",".","[]","-"]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"<anon method-1>","paramNames":["myMock"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.046,"difficulty":3.643,"effort":503.813,"length":32,"time":27.99,"vocabulary":20,"volume":138.302,"operands":{"distinct":14,"total":17,"identifiers":["myMock","jest","fn","mount","ownProps","foreignOwnProps","mapProps","isOverForeign","WrappedComponent","getStubber","expect","getLastSnapshot","toEqual","snapshot"]},"operators":{"distinct":6,"total":15,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":10,"physical":10},"errors":[],"lineEnd":26,"lineStart":17,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.122,"difficulty":7.765,"effort":2845.054,"length":81,"time":158.059,"vocabulary":23,"volume":366.409,"operands":{"distinct":17,"total":44,"identifiers":["myMock","jest","fn","wrapper","ReactWrapper","mount","mapProps","homeAtRest","WrappedComponent","getStubber","expect","getLastSnapshot","toBe","snapshot","setProps","isOverHome","isNotOverHome"]},"operators":{"distinct":6,"total":37,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":22,"physical":20},"errors":[],"lineEnd":47,"lineStart":28,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.064,"difficulty":3.319,"effort":2561.142,"length":36.5,"time":142.286,"vocabulary":9.75,"volume":192.917,"operands":{"distinct":7.25,"total":19.25},"operators":{"distinct":2.5,"total":17.25}},"paramCount":0.25,"sloc":{"logical":9.75,"physical":12}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":38.182,"halstead":{"bugs":0.064,"difficulty":4.755,"effort":1182.183,"length":44.333,"time":65.677,"vocabulary":18,"volume":191.3,"operands":{"distinct":12.667,"total":23.667},"operators":{"distinct":5.333,"total":20.667}},"paramCount":0.333,"sloc":{"logical":11,"physical":11}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/droppable/own-props-validation.spec.js","testCases":4,"smells":4,"smellInfo":[{"name":"Unknown Test","packageName":"unknownTest","items":[{"frame":"  14 | });\n  15 |\n> 16 | it('should throw if no droppableId is provided', () => {\n  17 |   const ownProps: OwnProps = {\n  18 |     ...defaultOwnProps,\n  19 |   };","start":{"column":0,"line":16}},{"frame":"  38 | });\n  39 |\n> 40 | it('should throw if isDropDisabled is set to null', () => {\n  41 |   const ownProps: OwnProps = {\n  42 |     ...defaultOwnProps,\n  43 |   };","start":{"column":0,"line":40}},{"frame":"  49 | });\n  50 |\n> 51 | it('should throw if isCombineEnabled is set to null', () => {\n  52 |   const ownProps: OwnProps = {\n  53 |     ...defaultOwnProps,\n  54 |   };","start":{"column":0,"line":51}},{"frame":"  60 | });\n  61 |\n> 62 | it('should throw if ignoreContainerClipping is set to null', () => {\n  63 |   const ownProps: OwnProps = {\n  64 |     ...defaultOwnProps,\n  65 |   };","start":{"column":0,"line":62}}]}],"metrics":{"aggregate":{"cyclomatic":14,"cyclomaticDensity":28,"halstead":{"bugs":0.242,"difficulty":9.692,"effort":7040.422,"length":144,"time":391.135,"vocabulary":33,"volume":726.393,"operands":{"distinct":26,"total":72,"identifiers":["beforeAll","jest","spyOn","console","\"error\"","mockImplementation","afterAll","error","mockReset","it","\"should throw if no droppableId is provided\"","ownProps","OwnProps","defaultOwnProps","withError","droppableId","undefined","mount","null","3","\"should throw if isDropDisabled is set to null\"","isDropDisabled","\"should throw if isCombineEnabled is set to null\"","isCombineEnabled","\"should throw if ignoreContainerClipping is set to null\"","ignoreContainerClipping"]},"operators":{"distinct":7,"total":72,"identifiers":["()","function=>",".","const","=","{}","... (spread)"]}},"paramCount":0,"sloc":{"logical":50,"physical":72}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/view/droppable/droppable-types","type":"esm"},{"line":3,"path":"./util/mount","type":"esm"},{"line":4,"path":"./util/get-props","type":"esm"},{"line":5,"path":"../../../util/console","type":"esm"}],"errors":[],"lineEnd":72,"lineStart":1,"maintainability":129.104,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["jest","spyOn","console","\"error\"","mockImplementation"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":9,"lineStart":7,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":8,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.005,"difficulty":1,"effort":13.932,"length":6,"time":0.774,"vocabulary":5,"volume":13.932,"operands":{"distinct":3,"total":3,"identifiers":["console","error","mockReset"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":4},"errors":[],"lineEnd":14,"lineStart":11,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.018,"difficulty":4.5,"effort":239.179,"length":16,"time":13.288,"vocabulary":10,"volume":53.151,"operands":{"distinct":4,"total":6,"identifiers":["ownProps","OwnProps","defaultOwnProps","withError"]},"operators":{"distinct":6,"total":10,"identifiers":["const","=","{}","... (spread)","()","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":23},"errors":[],"lineEnd":38,"lineStart":16,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":3,"effort":90,"length":10,"time":5,"vocabulary":8,"volume":30,"operands":{"distinct":4,"total":6,"identifiers":["ownProps","droppableId","undefined","mount"]},"operators":{"distinct":4,"total":4,"identifiers":["=",".","()","{}"]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":25,"lineStart":21,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":3,"effort":90,"length":10,"time":5,"vocabulary":8,"volume":30,"operands":{"distinct":4,"total":6,"identifiers":["ownProps","droppableId","null","mount"]},"operators":{"distinct":4,"total":4,"identifiers":["=",".","()","{}"]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":31,"lineStart":27,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":3,"effort":90,"length":10,"time":5,"vocabulary":8,"volume":30,"operands":{"distinct":4,"total":6,"identifiers":["ownProps","droppableId","3","mount"]},"operators":{"distinct":4,"total":4,"identifiers":["=",".","()","{}"]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":37,"lineStart":33,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.011,"difficulty":3,"effort":99.658,"length":10,"time":5.537,"vocabulary":10,"volume":33.219,"operands":{"distinct":4,"total":4,"identifiers":["ownProps","OwnProps","defaultOwnProps","withError"]},"operators":{"distinct":6,"total":6,"identifiers":["const","=","{}","... (spread)","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":10},"errors":[],"lineEnd":49,"lineStart":40,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":3,"effort":90,"length":10,"time":5,"vocabulary":8,"volume":30,"operands":{"distinct":4,"total":6,"identifiers":["ownProps","isDropDisabled","null","mount"]},"operators":{"distinct":4,"total":4,"identifiers":["=",".","()","{}"]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":48,"lineStart":44,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.011,"difficulty":3,"effort":99.658,"length":10,"time":5.537,"vocabulary":10,"volume":33.219,"operands":{"distinct":4,"total":4,"identifiers":["ownProps","OwnProps","defaultOwnProps","withError"]},"operators":{"distinct":6,"total":6,"identifiers":["const","=","{}","... (spread)","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":10},"errors":[],"lineEnd":60,"lineStart":51,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":3,"effort":90,"length":10,"time":5,"vocabulary":8,"volume":30,"operands":{"distinct":4,"total":6,"identifiers":["ownProps","isCombineEnabled","null","mount"]},"operators":{"distinct":4,"total":4,"identifiers":["=",".","()","{}"]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":59,"lineStart":55,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.011,"difficulty":3,"effort":99.658,"length":10,"time":5.537,"vocabulary":10,"volume":33.219,"operands":{"distinct":4,"total":4,"identifiers":["ownProps","OwnProps","defaultOwnProps","withError"]},"operators":{"distinct":6,"total":6,"identifiers":["const","=","{}","... (spread)","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":10},"errors":[],"lineEnd":71,"lineStart":62,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":3,"effort":90,"length":10,"time":5,"vocabulary":8,"volume":30,"operands":{"distinct":4,"total":6,"identifiers":["ownProps","ignoreContainerClipping","null","mount"]},"operators":{"distinct":4,"total":4,"identifiers":["=",".","()","{}"]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":70,"lineStart":66,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2,"halstead":{"bugs":0.017,"difficulty":0.692,"effort":502.887,"length":10.286,"time":27.938,"vocabulary":2.357,"volume":51.885,"operands":{"distinct":1.857,"total":5.143},"operators":{"distinct":0.5,"total":5.143}},"paramCount":0,"sloc":{"logical":3.571,"physical":5.143}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":34.432,"halstead":{"bugs":0.01,"difficulty":2.615,"effort":87.468,"length":9.385,"time":4.859,"vocabulary":7.769,"volume":28.98,"operands":{"distinct":3.692,"total":4.769},"operators":{"distinct":4.077,"total":4.615}},"paramCount":0,"sloc":{"logical":2.923,"physical":7}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/droppable/inner-ref-validation.spec.js","testCases":2,"smells":2,"smellInfo":[{"name":"Unknown Test","packageName":"unknownTest","items":[{"frame":"   5 | import { withError } from '../../../util/console';\n   6 |\n>  7 | it('should warn a consumer if they have not provided a ref', () => {\n   8 |   class NoRef extends React.Component<{ provided: Provided }> {\n   9 |     render() {\n  10 |       const provided: Provided = this.props.provided;","start":{"column":0,"line":7}},{"frame":"  24 | });\n  25 |\n> 26 | it('should throw a consumer if they have provided an SVGElement', () => {\n  27 |   class WithSVG extends React.Component<{ provided: Provided }> {\n  28 |     render() {\n  29 |       const provided: Provided = this.props.provided;","start":{"column":0,"line":26}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":35,"halstead":{"bugs":0.127,"difficulty":13.588,"effort":5160.554,"length":79,"time":286.697,"vocabulary":28,"volume":379.781,"operands":{"distinct":17,"total":42,"identifiers":["it","\"should warn a consumer if they have not provided a ref\"","NoRef","React","Component","provided","Provided","render","props","droppableProps","placeholder","withError","mount","WrappedComponent","\"should throw a consumer if they have provided an SVGElement\"","WithSVG","innerRef"]},"operators":{"distinct":11,"total":37,"identifiers":["()","function=>","class","extends",".","const","=","this","return","{}",":"]}},"paramCount":0,"sloc":{"logical":20,"physical":45}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[{"aggregate":{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.022,"difficulty":4.583,"effort":301.259,"length":19,"time":16.737,"vocabulary":11,"volume":65.729,"operands":{"distinct":6,"total":11,"identifiers":["provided","Provided","render","props","droppableProps","placeholder"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=",".","this","return"]}},"paramCount":0,"sloc":{"logical":3,"physical":12}},"errors":[],"lineEnd":19,"lineStart":8,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.018,"difficulty":4,"effort":212.603,"length":16,"time":11.811,"vocabulary":10,"volume":53.151,"operands":{"distinct":5,"total":8,"identifiers":["provided","Provided","props","droppableProps","placeholder"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=",".","this","return"]}},"paramCount":0,"sloc":{"logical":2,"physical":10},"errors":[],"lineEnd":18,"lineStart":9,"name":"render","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":0.5,"cyclomaticDensity":16.667,"halstead":{"bugs":0.011,"difficulty":2.292,"effort":150.629,"length":9.5,"time":8.368,"vocabulary":5.5,"volume":32.865,"operands":{"distinct":3,"total":5.5},"operators":{"distinct":2.5,"total":4}},"paramCount":0,"sloc":{"logical":1.5,"physical":6}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.018,"difficulty":4,"effort":212.603,"length":16,"time":11.811,"vocabulary":10,"volume":53.151,"operands":{"distinct":5,"total":8},"operators":{"distinct":5,"total":8}},"paramCount":0,"sloc":{"logical":2,"physical":10}},"name":"NoRef","superClassName":"<computed~React.Component>","maintainability":141.442},{"aggregate":{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.026,"difficulty":4.643,"effort":366.178,"length":22,"time":20.343,"vocabulary":12,"volume":78.869,"operands":{"distinct":7,"total":13,"identifiers":["provided","Provided","render","props","droppableProps","innerRef","placeholder"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=",".","this","return"]}},"paramCount":0,"sloc":{"logical":3,"physical":13}},"errors":[],"lineEnd":39,"lineStart":27,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.022,"difficulty":4.167,"effort":273.872,"length":19,"time":15.215,"vocabulary":11,"volume":65.729,"operands":{"distinct":6,"total":10,"identifiers":["provided","Provided","props","droppableProps","innerRef","placeholder"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=",".","this","return"]}},"paramCount":0,"sloc":{"logical":2,"physical":11},"errors":[],"lineEnd":38,"lineStart":28,"name":"render","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":0.5,"cyclomaticDensity":16.667,"halstead":{"bugs":0.013,"difficulty":2.321,"effort":183.089,"length":11,"time":10.172,"vocabulary":6,"volume":39.435,"operands":{"distinct":3.5,"total":6.5},"operators":{"distinct":2.5,"total":4.5}},"paramCount":0,"sloc":{"logical":1.5,"physical":6.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.022,"difficulty":4.167,"effort":273.872,"length":19,"time":15.215,"vocabulary":11,"volume":65.729,"operands":{"distinct":6,"total":10},"operators":{"distinct":5,"total":9}},"paramCount":0,"sloc":{"logical":2,"physical":11}},"name":"WithSVG","superClassName":"<computed~React.Component>","maintainability":140.576}],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"../../../../src/view/droppable/droppable-types","type":"esm"},{"line":4,"path":"./util/mount","type":"esm"},{"line":5,"path":"../../../util/console","type":"esm"}],"errors":[],"lineEnd":45,"lineStart":1,"maintainability":131.411,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.014,"difficulty":2.5,"effort":107.549,"length":12,"time":5.975,"vocabulary":12,"volume":43.02,"operands":{"distinct":7,"total":7,"identifiers":["NoRef","React","Component","provided","Provided","render","withError"]},"operators":{"distinct":5,"total":5,"identifiers":["class","extends",".","()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":18},"errors":[],"lineEnd":24,"lineStart":7,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["mount","WrappedComponent","NoRef"]},"operators":{"distinct":3,"total":3,"identifiers":["()","{}",":"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":23,"lineStart":21,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.014,"difficulty":2.5,"effort":107.549,"length":12,"time":5.975,"vocabulary":12,"volume":43.02,"operands":{"distinct":7,"total":7,"identifiers":["WithSVG","React","Component","provided","Provided","render","withError"]},"operators":{"distinct":5,"total":5,"identifiers":["class","extends",".","()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":19},"errors":[],"lineEnd":44,"lineStart":26,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["mount","WrappedComponent","WithSVG"]},"operators":{"distinct":3,"total":3,"identifiers":["()","{}",":"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":43,"lineStart":41,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.018,"difficulty":1.941,"effort":737.222,"length":11.286,"time":40.957,"vocabulary":4,"volume":54.254,"operands":{"distinct":2.429,"total":6},"operators":{"distinct":1.571,"total":5.286}},"paramCount":0,"sloc":{"logical":2.857,"physical":6.429}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":41.667,"halstead":{"bugs":0.013,"difficulty":2.694,"effort":124.684,"length":11.833,"time":6.927,"vocabulary":9.5,"volume":39.323,"operands":{"distinct":5.167,"total":6.333},"operators":{"distinct":4.333,"total":5.5}},"paramCount":0,"sloc":{"logical":2.667,"physical":10.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/droppable/home-list-placeholder-cleanup.spec.js","testCases":2,"smells":12,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  18 |   });\n  19 |\n> 20 |   expect(wrapper.find(Placeholder)).toHaveLength(1);\n     |  ^ Duplicate Assert\n  21 |\n  22 |   wrapper.setProps({\n  23 |     ...homeAtRest,","start":{"line":20,"column":2,"index":512}},{"frame":"  25 |   wrapper.update();\n  26 |\n> 27 |   expect(wrapper.find(Placeholder)).toHaveLength(0);\n     |  ^ Duplicate Assert\n  28 | });\n  29 |\n  30 | it('should animate a placeholder closed in a home list after a drag', () => {","start":{"line":27,"column":2,"index":633}},{"frame":"  35 |   });\n  36 |\n> 37 |   expect(wrapper.find(Placeholder)).toHaveLength(1);\n     |  ^ Duplicate Assert\n  38 |\n  39 |   wrapper.setProps({\n  40 |     ...homePostDropAnimation,","start":{"line":37,"column":2,"index":890}},{"frame":"  35 |   });\n  36 |\n> 37 |   expect(wrapper.find(Placeholder)).toHaveLength(1);\n     |  ^ Duplicate Assert\n  38 |\n  39 |   wrapper.setProps({\n  40 |     ...homePostDropAnimation,","start":{"line":37,"column":2,"index":890}},{"frame":"  42 |   wrapper.update();\n  43 |\n> 44 |   expect(wrapper.find(Placeholder)).toHaveLength(1);\n     |  ^ Duplicate Assert\n  45 |   expect(homePostDropAnimation.shouldAnimatePlaceholder).toBe(true);\n  46 |\n  47 |   // finishing the animation","start":{"line":44,"column":2,"index":1022}},{"frame":"  42 |   wrapper.update();\n  43 |\n> 44 |   expect(wrapper.find(Placeholder)).toHaveLength(1);\n     |  ^ Duplicate Assert\n  45 |   expect(homePostDropAnimation.shouldAnimatePlaceholder).toBe(true);\n  46 |\n  47 |   // finishing the animation","start":{"line":44,"column":2,"index":1022}},{"frame":"  54 |\n  55 |   // placeholder is now gone\n> 56 |   expect(wrapper.find(Placeholder)).toHaveLength(0);\n     |  ^ Duplicate Assert\n  57 | });\n  58 |","start":{"line":56,"column":2,"index":1347}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  18 |   });\n  19 |\n> 20 |   expect(wrapper.find(Placeholder)).toHaveLength(1);\n     |                                                 ^ Magic Number\n  21 |\n  22 |   wrapper.setProps({\n  23 |     ...homeAtRest,","start":{"line":20,"column":49,"index":559}},{"frame":"  25 |   wrapper.update();\n  26 |\n> 27 |   expect(wrapper.find(Placeholder)).toHaveLength(0);\n     |                                                 ^ Magic Number\n  28 | });\n  29 |\n  30 | it('should animate a placeholder closed in a home list after a drag', () => {","start":{"line":27,"column":49,"index":680}},{"frame":"  35 |   });\n  36 |\n> 37 |   expect(wrapper.find(Placeholder)).toHaveLength(1);\n     |                                                 ^ Magic Number\n  38 |\n  39 |   wrapper.setProps({\n  40 |     ...homePostDropAnimation,","start":{"line":37,"column":49,"index":937}},{"frame":"  42 |   wrapper.update();\n  43 |\n> 44 |   expect(wrapper.find(Placeholder)).toHaveLength(1);\n     |                                                 ^ Magic Number\n  45 |   expect(homePostDropAnimation.shouldAnimatePlaceholder).toBe(true);\n  46 |\n  47 |   // finishing the animation","start":{"line":44,"column":49,"index":1069}},{"frame":"  54 |\n  55 |   // placeholder is now gone\n> 56 |   expect(wrapper.find(Placeholder)).toHaveLength(0);\n     |                                                 ^ Magic Number\n  57 | });\n  58 |","start":{"line":56,"column":49,"index":1394}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":10.256,"halstead":{"bugs":0.234,"difficulty":10.923,"effort":7668.763,"length":138,"time":426.042,"vocabulary":34,"volume":702.07,"operands":{"distinct":26,"total":71,"identifiers":["it","\"should not display a placeholder after a flushed drag end in the home list\"","wrapper","ReactWrapper","mount","ownProps","homeOwnProps","mapProps","isNotOverHome","expect","find","Placeholder","toHaveLength","1","setProps","homeAtRest","update","0","\"should animate a placeholder closed in a home list after a drag\"","homePostDropAnimation","shouldAnimatePlaceholder","toBe","true","act","props","onClose"]},"operators":{"distinct":8,"total":67,"identifiers":["()","function=>","const","=","{}",":",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":39,"physical":58}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react-dom/test-utils","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":4,"path":"./util/mount","type":"esm"},{"line":10,"path":"./util/get-props","type":"esm"},{"line":11,"path":"../../../../src/view/placeholder","type":"esm"}],"errors":[],"lineEnd":58,"lineStart":1,"maintainability":108.258,"methods":[{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.069,"difficulty":5.25,"effort":1092.44,"length":46,"time":60.691,"vocabulary":23,"volume":208.084,"operands":{"distinct":16,"total":24,"identifiers":["wrapper","ReactWrapper","mount","ownProps","homeOwnProps","mapProps","isNotOverHome","expect","find","Placeholder","toHaveLength","1","setProps","homeAtRest","update","0"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","()","{}",":",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":12,"physical":16},"errors":[],"lineEnd":28,"lineStart":13,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.117,"difficulty":7.6,"effort":2667.121,"length":73,"time":148.173,"vocabulary":28,"volume":350.937,"operands":{"distinct":20,"total":38,"identifiers":["wrapper","ReactWrapper","mount","ownProps","homeOwnProps","mapProps","isNotOverHome","expect","find","Placeholder","toHaveLength","1","setProps","homePostDropAnimation","update","shouldAnimatePlaceholder","toBe","true","act","0"]},"operators":{"distinct":8,"total":35,"identifiers":["const","=","()","{}",":",".","... (spread)","function=>"]}},"paramCount":0,"sloc":{"logical":20,"physical":28},"errors":[],"lineEnd":57,"lineStart":30,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1,"effort":30.881,"length":11,"time":1.716,"vocabulary":7,"volume":30.881,"operands":{"distinct":5,"total":5,"identifiers":["wrapper","find","Placeholder","props","onClose"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":50,"lineStart":48,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.059,"difficulty":2.731,"effort":1917.191,"length":34.5,"time":106.511,"vocabulary":8.5,"volume":175.517,"operands":{"distinct":6.5,"total":17.75},"operators":{"distinct":2,"total":16.75}},"paramCount":0,"sloc":{"logical":9.75,"physical":14.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":15.556,"halstead":{"bugs":0.066,"difficulty":4.617,"effort":1263.481,"length":43.333,"time":70.193,"vocabulary":19.333,"volume":196.634,"operands":{"distinct":13.667,"total":22.333},"operators":{"distinct":5.667,"total":21}},"paramCount":0,"sloc":{"logical":11.667,"physical":15.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/dimension-marshal/publish-while-dragging.spec.js","testCases":15,"smells":69,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  137 |     // A publish has started\n  138 |     marshal.startPublishing(defaultRequest);\n> 139 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  140 |\n  141 |     registry.draggable.register(\n  142 |       getDraggableEntry({ dimension: beforeInHome1 }),","start":{"line":139,"column":4,"index":3660}},{"frame":"  137 |     // A publish has started\n  138 |     marshal.startPublishing(defaultRequest);\n> 139 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  140 |\n  141 |     registry.draggable.register(\n  142 |       getDraggableEntry({ dimension: beforeInHome1 }),","start":{"line":139,"column":4,"index":3660}},{"frame":"  146 |     );\n  147 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n> 148 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  149 |\n  150 |     // Fire the collection / publish step\n  151 |     requestAnimationFrame.step();","start":{"line":148,"column":4,"index":3979}},{"frame":"  146 |     );\n  147 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n> 148 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  149 |\n  150 |     // Fire the collection / publish step\n  151 |     requestAnimationFrame.step();","start":{"line":148,"column":4,"index":3979}},{"frame":"  155 |       modified: [{ droppableId: scrollableHome.descriptor.id, scroll: origin }],\n  156 |     };\n> 157 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledWith(expected);\n      |    ^ Duplicate Assert\n  158 |   });\n  159 |\n  160 |   it('should not do anything if trying to add a draggable that does not have the same type as the dragging item', () => {","start":{"line":157,"column":4,"index":4310}},{"frame":"  169 |     // A publish has started\n  170 |     marshal.startPublishing(defaultRequest);\n> 171 |     expect(callbacks.collectionStarting).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  172 |\n  173 |     // Registering a new draggable (inserted before inHome1)\n  174 |","start":{"line":171,"column":4,"index":4834}},{"frame":"  169 |     // A publish has started\n  170 |     marshal.startPublishing(defaultRequest);\n> 171 |     expect(callbacks.collectionStarting).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  172 |\n  173 |     // Registering a new draggable (inserted before inHome1)\n  174 |","start":{"line":171,"column":4,"index":4834}},{"frame":"  176 |       getDraggableEntry({ dimension: inAnotherType }),\n  177 |     );\n> 178 |     expect(callbacks.collectionStarting).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  179 |   });\n  180 |\n  181 |   describe('ordering of published draggables', () => {","start":{"line":178,"column":4,"index":5057}},{"frame":"  176 |       getDraggableEntry({ dimension: inAnotherType }),\n  177 |     );\n> 178 |     expect(callbacks.collectionStarting).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  179 |   });\n  180 |\n  181 |   describe('ordering of published draggables', () => {","start":{"line":178,"column":4,"index":5057}},{"frame":"  207 |       // A publish has started\n  208 |       marshal.startPublishing(defaultRequest);\n> 209 |       expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  210 |\n  211 |       // Registering draggables\n  212 |       registry.draggable.register(","start":{"line":209,"column":6,"index":5992}},{"frame":"  207 |       // A publish has started\n  208 |       marshal.startPublishing(defaultRequest);\n> 209 |       expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  210 |\n  211 |       // Registering draggables\n  212 |       registry.draggable.register(","start":{"line":209,"column":6,"index":5992}},{"frame":"  216 |         getDraggableEntry({ dimension: beforeInHome1 }),\n  217 |       );\n> 218 |       expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  219 |\n  220 |       // Fire the collection / publish step\n  221 |       requestAnimationFrame.step();","start":{"line":218,"column":6,"index":6296}},{"frame":"  216 |         getDraggableEntry({ dimension: beforeInHome1 }),\n  217 |       );\n> 218 |       expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  219 |\n  220 |       // Fire the collection / publish step\n  221 |       requestAnimationFrame.step();","start":{"line":218,"column":6,"index":6296}},{"frame":"  225 |         modified: [{ droppableId: scrollableHome.descriptor.id, scroll: origin }],\n  226 |       };\n> 227 |       expect(callbacks.publishWhileDragging).toHaveBeenCalledWith(expected);\n      |      ^ Duplicate Assert\n  228 |     });\n  229 |\n  230 |     it('should handle publishing when draggables are registered out of order', () => {","start":{"line":227,"column":6,"index":6643}},{"frame":"  255 |       // A publish has started\n  256 |       marshal.startPublishing(defaultRequest);\n> 257 |       expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  258 |\n  259 |       // Registering draggables in reverse order\n  260 |       registry.draggable.register(","start":{"line":257,"column":6,"index":7550}},{"frame":"  255 |       // A publish has started\n  256 |       marshal.startPublishing(defaultRequest);\n> 257 |       expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  258 |\n  259 |       // Registering draggables in reverse order\n  260 |       registry.draggable.register(","start":{"line":257,"column":6,"index":7550}},{"frame":"  264 |         getDraggableEntry({ dimension: beforeInHome2 }),\n  265 |       );\n> 266 |       expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  267 |\n  268 |       // Fire the collection / publish step\n  269 |       requestAnimationFrame.step();","start":{"line":266,"column":6,"index":7871}},{"frame":"  264 |         getDraggableEntry({ dimension: beforeInHome2 }),\n  265 |       );\n> 266 |       expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  267 |\n  268 |       // Fire the collection / publish step\n  269 |       requestAnimationFrame.step();","start":{"line":266,"column":6,"index":7871}},{"frame":"  273 |         modified: [{ droppableId: scrollableHome.descriptor.id, scroll: origin }],\n  274 |       };\n> 275 |       expect(callbacks.publishWhileDragging).toHaveBeenCalledWith(expected);\n      |      ^ Duplicate Assert\n  276 |     });\n  277 |   });\n  278 |","start":{"line":275,"column":6,"index":8218}},{"frame":"  296 |     // A publish has started\n  297 |     marshal.startPublishing(defaultRequest);\n> 298 |     expect(callbacks.collectionStarting).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  299 |\n  300 |     // additions log a warning\n  301 |     withWarn(() => {","start":{"line":298,"column":4,"index":8964}},{"frame":"  296 |     // A publish has started\n  297 |     marshal.startPublishing(defaultRequest);\n> 298 |     expect(callbacks.collectionStarting).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  299 |\n  300 |     // additions log a warning\n  301 |     withWarn(() => {","start":{"line":298,"column":4,"index":8964}},{"frame":"  320 |\n  321 |     // neither cause a collection to start\n> 322 |     expect(callbacks.collectionStarting).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  323 |   });\n  324 | });\n  325 |","start":{"line":322,"column":4,"index":9604}},{"frame":"  320 |\n  321 |     // neither cause a collection to start\n> 322 |     expect(callbacks.collectionStarting).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  323 |   });\n  324 | });\n  325 |","start":{"line":322,"column":4,"index":9604}},{"frame":"  336 |     // A publish has started\n  337 |     marshal.startPublishing(defaultRequest);\n> 338 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  339 |\n  340 |     registry.draggable.unregister(\n  341 |       registry.draggable.getById(preset.inHome2.descriptor.id),","start":{"line":338,"column":4,"index":10080}},{"frame":"  336 |     // A publish has started\n  337 |     marshal.startPublishing(defaultRequest);\n> 338 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  339 |\n  340 |     registry.draggable.unregister(\n  341 |       registry.draggable.getById(preset.inHome2.descriptor.id),","start":{"line":338,"column":4,"index":10080}},{"frame":"  347 |       registry.draggable.getById(preset.inForeign1.descriptor.id),\n  348 |     );\n> 349 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  350 |\n  351 |     // Fire the collection / publish step\n  352 |     requestAnimationFrame.flush();","start":{"line":349,"column":4,"index":10469}},{"frame":"  347 |       registry.draggable.getById(preset.inForeign1.descriptor.id),\n  348 |     );\n> 349 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  350 |\n  351 |     // Fire the collection / publish step\n  352 |     requestAnimationFrame.flush();","start":{"line":349,"column":4,"index":10469}},{"frame":"  363 |       ],\n  364 |     };\n> 365 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledWith(expected);\n      |    ^ Duplicate Assert\n  366 |   });\n  367 |\n  368 |   it('should do nothing if tying to remove a draggable of a different type', () => {","start":{"line":365,"column":4,"index":10992}},{"frame":"  474 |     // A publish has started\n  475 |     marshal.startPublishing(defaultRequest);\n> 476 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  477 |\n  478 |     registry.draggable.register(\n  479 |       getDraggableEntry({ dimension: beforeInHome2 }),","start":{"line":476,"column":4,"index":14401}},{"frame":"  474 |     // A publish has started\n  475 |     marshal.startPublishing(defaultRequest);\n> 476 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  477 |\n  478 |     registry.draggable.register(\n  479 |       getDraggableEntry({ dimension: beforeInHome2 }),","start":{"line":476,"column":4,"index":14401}},{"frame":"  480 |     );\n  481 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n> 482 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  483 |     expect(watcher.droppable.getScrollWhileDragging).not.toHaveBeenCalled();\n  484 |\n  485 |     // Fire the collection / publish step","start":{"line":482,"column":4,"index":14625}},{"frame":"  480 |     );\n  481 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n> 482 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  483 |     expect(watcher.droppable.getScrollWhileDragging).not.toHaveBeenCalled();\n  484 |\n  485 |     // Fire the collection / publish step","start":{"line":482,"column":4,"index":14625}},{"frame":"  481 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n  482 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n> 483 |     expect(watcher.droppable.getScrollWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  484 |\n  485 |     // Fire the collection / publish step\n  486 |     requestAnimationFrame.flush();","start":{"line":483,"column":4,"index":14692}},{"frame":"  488 |     // not hiding placeholder in home list\n  489 |\n> 490 |     expect(watcher.droppable.getScrollWhileDragging).toHaveBeenCalledWith(\n      |    ^ Duplicate Assert\n  491 |       scrollableHome.descriptor.id,\n  492 |       getFrame(scrollableHome).scroll.current,\n  493 |     );","start":{"line":490,"column":4,"index":14892}},{"frame":"  498 |       modified: [{ droppableId: scrollableHome.descriptor.id, scroll: origin }],\n  499 |     };\n> 500 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledWith(expected);\n      |    ^ Duplicate Assert\n  501 |   });\n  502 |\n  503 |   it('should recollect the scroll from droppables that had draggable removals', () => {","start":{"line":500,"column":4,"index":15234}},{"frame":"  512 |     // A publish has started\n  513 |     marshal.startPublishing(defaultRequest);\n> 514 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  515 |\n  516 |     registry.draggable.unregister(\n  517 |       registry.draggable.getById(preset.inHome2.descriptor.id),","start":{"line":514,"column":4,"index":15758}},{"frame":"  512 |     // A publish has started\n  513 |     marshal.startPublishing(defaultRequest);\n> 514 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  515 |\n  516 |     registry.draggable.unregister(\n  517 |       registry.draggable.getById(preset.inHome2.descriptor.id),","start":{"line":514,"column":4,"index":15758}},{"frame":"  518 |     );\n  519 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n> 520 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  521 |     expect(watcher.droppable.getScrollWhileDragging).not.toHaveBeenCalled();\n  522 |\n  523 |     // Fire the collection / publish step","start":{"line":520,"column":4,"index":15993}},{"frame":"  518 |     );\n  519 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n> 520 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  521 |     expect(watcher.droppable.getScrollWhileDragging).not.toHaveBeenCalled();\n  522 |\n  523 |     // Fire the collection / publish step","start":{"line":520,"column":4,"index":15993}},{"frame":"  519 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n  520 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n> 521 |     expect(watcher.droppable.getScrollWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  522 |\n  523 |     // Fire the collection / publish step\n  524 |     requestAnimationFrame.flush();","start":{"line":521,"column":4,"index":16060}},{"frame":"  526 |     // not hiding placeholder in home list\n  527 |\n> 528 |     expect(watcher.droppable.getScrollWhileDragging).toHaveBeenCalledWith(\n      |    ^ Duplicate Assert\n  529 |       scrollableHome.descriptor.id,\n  530 |       getFrame(scrollableHome).scroll.current,\n  531 |     );","start":{"line":528,"column":4,"index":16260}},{"frame":"  536 |       modified: [{ droppableId: scrollableHome.descriptor.id, scroll: origin }],\n  537 |     };\n> 538 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledWith(expected);\n      |    ^ Duplicate Assert\n  539 |   });\n  540 | });\n  541 |","start":{"line":538,"column":4,"index":16617}},{"frame":"  566 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n  567 |     // no request animation fired yet\n> 568 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  569 |\n  570 |     // marshal told to stop - which should cancel any pending publishes\n  571 |     marshal.stopPublishing();","start":{"line":568,"column":4,"index":17491}},{"frame":"  566 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n  567 |     // no request animation fired yet\n> 568 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  569 |\n  570 |     // marshal told to stop - which should cancel any pending publishes\n  571 |     marshal.stopPublishing();","start":{"line":568,"column":4,"index":17491}},{"frame":"  573 |     // flushing any frames\n  574 |     requestAnimationFrame.flush();\n> 575 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  576 |   });\n  577 | });\n  578 |","start":{"line":575,"column":4,"index":17724}},{"frame":"  573 |     // flushing any frames\n  574 |     requestAnimationFrame.flush();\n> 575 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  576 |   });\n  577 | });\n  578 |","start":{"line":575,"column":4,"index":17724}},{"frame":"  593 |     );\n  594 |     requestAnimationFrame.step();\n> 595 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  596 |     // $FlowFixMe\n  597 |     callbacks.publishWhileDragging.mockReset();\n  598 |","start":{"line":595,"column":4,"index":18319}},{"frame":"  601 |     );\n  602 |     requestAnimationFrame.step();\n> 603 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  604 |   });\n  605 |\n  606 |   it('should allow subsequent publishes between drags', () => {","start":{"line":603,"column":4,"index":18585}},{"frame":"  619 |     );\n  620 |     requestAnimationFrame.step();\n> 621 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  622 |     // $FlowFixMe\n  623 |     callbacks.publishWhileDragging.mockReset();\n  624 |","start":{"line":621,"column":4,"index":19144}},{"frame":"  632 |     );\n  633 |     requestAnimationFrame.step();\n> 634 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  635 |   });\n  636 | });\n  637 |","start":{"line":634,"column":4,"index":19506}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  140 |\n  141 |     registry.draggable.register(\n> 142 |       getDraggableEntry({ dimension: beforeInHome1 }),\n      |      ^ Eager Test\n  143 |     );\n  144 |     registry.draggable.register(\n  145 |       getDraggableEntry({ dimension: beforeInHome2 }),","start":{"line":142,"column":6,"index":3763}},{"frame":"  143 |     );\n  144 |     registry.draggable.register(\n> 145 |       getDraggableEntry({ dimension: beforeInHome2 }),\n      |      ^ Eager Test\n  146 |     );\n  147 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n  148 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();","start":{"line":145,"column":6,"index":3858}},{"frame":"  211 |       // Registering draggables\n  212 |       registry.draggable.register(\n> 213 |         getDraggableEntry({ dimension: beforeInHome2 }),\n      |        ^ Eager Test\n  214 |       );\n  215 |       registry.draggable.register(\n  216 |         getDraggableEntry({ dimension: beforeInHome1 }),","start":{"line":213,"column":8,"index":6131}},{"frame":"  214 |       );\n  215 |       registry.draggable.register(\n> 216 |         getDraggableEntry({ dimension: beforeInHome1 }),\n      |        ^ Eager Test\n  217 |       );\n  218 |       expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n  219 |","start":{"line":216,"column":8,"index":6232}},{"frame":"  259 |       // Registering draggables in reverse order\n  260 |       registry.draggable.register(\n> 261 |         getDraggableEntry({ dimension: beforeInHome1 }),\n      |        ^ Eager Test\n  262 |       );\n  263 |       registry.draggable.register(\n  264 |         getDraggableEntry({ dimension: beforeInHome2 }),","start":{"line":261,"column":8,"index":7706}},{"frame":"  262 |       );\n  263 |       registry.draggable.register(\n> 264 |         getDraggableEntry({ dimension: beforeInHome2 }),\n      |        ^ Eager Test\n  265 |       );\n  266 |       expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();\n  267 |","start":{"line":264,"column":8,"index":7807}},{"frame":"  590 |\n  591 |     registry.draggable.register(\n> 592 |       getDraggableEntry({ dimension: preset.inHome2 }),\n      |      ^ Eager Test\n  593 |     );\n  594 |     requestAnimationFrame.step();\n  595 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledTimes(1);","start":{"line":592,"column":6,"index":18224}},{"frame":"  598 |\n  599 |     registry.draggable.register(\n> 600 |       getDraggableEntry({ dimension: preset.inHome3 }),\n      |      ^ Eager Test\n  601 |     );\n  602 |     requestAnimationFrame.step();\n  603 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledTimes(1);","start":{"line":600,"column":6,"index":18490}},{"frame":"  616 |\n  617 |     registry.draggable.register(\n> 618 |       getDraggableEntry({ dimension: preset.inHome2 }),\n      |      ^ Eager Test\n  619 |     );\n  620 |     requestAnimationFrame.step();\n  621 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledTimes(1);","start":{"line":618,"column":6,"index":19049}},{"frame":"  629 |\n  630 |     registry.draggable.register(\n> 631 |       getDraggableEntry({ dimension: preset.inHome3 }),\n      |      ^ Eager Test\n  632 |     );\n  633 |     requestAnimationFrame.step();\n  634 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledTimes(1);","start":{"line":631,"column":6,"index":19411}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  140 |\n  141 |     registry.draggable.register(\n> 142 |       getDraggableEntry({ dimension: beforeInHome1 }),\n      |      ^ Lazy Test\n  143 |     );\n  144 |     registry.draggable.register(\n  145 |       getDraggableEntry({ dimension: beforeInHome2 }),","start":{"line":142,"column":6,"index":3763}},{"frame":"  174 |\n  175 |     registry.draggable.register(\n> 176 |       getDraggableEntry({ dimension: inAnotherType }),\n      |      ^ Lazy Test\n  177 |     );\n  178 |     expect(callbacks.collectionStarting).not.toHaveBeenCalled();\n  179 |   });","start":{"line":176,"column":6,"index":4997}},{"frame":"  211 |       // Registering draggables\n  212 |       registry.draggable.register(\n> 213 |         getDraggableEntry({ dimension: beforeInHome2 }),\n      |        ^ Lazy Test\n  214 |       );\n  215 |       registry.draggable.register(\n  216 |         getDraggableEntry({ dimension: beforeInHome1 }),","start":{"line":213,"column":8,"index":6131}},{"frame":"  259 |       // Registering draggables in reverse order\n  260 |       registry.draggable.register(\n> 261 |         getDraggableEntry({ dimension: beforeInHome1 }),\n      |        ^ Lazy Test\n  262 |       );\n  263 |       registry.draggable.register(\n  264 |         getDraggableEntry({ dimension: beforeInHome2 }),","start":{"line":261,"column":8,"index":7706}},{"frame":"  309 |       };\n  310 |       registry.draggable.register(\n> 311 |         getDraggableEntry({ dimension: beforeInHome1 }),\n      |        ^ Lazy Test\n  312 |       );\n  313 |     });\n  314 |     // removals log a warning","start":{"line":311,"column":8,"index":9319}},{"frame":"  477 |\n  478 |     registry.draggable.register(\n> 479 |       getDraggableEntry({ dimension: beforeInHome2 }),\n      |      ^ Lazy Test\n  480 |     );\n  481 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n  482 |     expect(callbacks.publishWhileDragging).not.toHaveBeenCalled();","start":{"line":479,"column":6,"index":14504}},{"frame":"  562 |\n  563 |     registry.draggable.register(\n> 564 |       getDraggableEntry({ dimension: preset.inHome2 }),\n      |      ^ Lazy Test\n  565 |     );\n  566 |     expect(callbacks.collectionStarting).toHaveBeenCalled();\n  567 |     // no request animation fired yet","start":{"line":564,"column":6,"index":17331}},{"frame":"  590 |\n  591 |     registry.draggable.register(\n> 592 |       getDraggableEntry({ dimension: preset.inHome2 }),\n      |      ^ Lazy Test\n  593 |     );\n  594 |     requestAnimationFrame.step();\n  595 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledTimes(1);","start":{"line":592,"column":6,"index":18224}},{"frame":"  616 |\n  617 |     registry.draggable.register(\n> 618 |       getDraggableEntry({ dimension: preset.inHome2 }),\n      |      ^ Lazy Test\n  619 |     );\n  620 |     requestAnimationFrame.step();\n  621 |     expect(callbacks.publishWhileDragging).toHaveBeenCalledTimes(1);","start":{"line":618,"column":6,"index":19049}}]}],"metrics":{"aggregate":{"cyclomatic":26,"cyclomaticDensity":5.64,"halstead":{"bugs":4.878,"difficulty":52.732,"effort":771720.872,"length":2068,"time":42873.382,"vocabulary":135,"volume":14634.855,"operands":{"distinct":123,"total":1081,"identifiers":["viewport","Viewport","preset","setViewport","empty","Published","removals","additions","modified","makeVirtual","droppable","DroppableDimension","descriptor","mode","\"virtual\"","scrollableHome","makeScrollable","home","scrollableForeign","foreign","withScrollables","DimensionMap","draggables","dimensions","droppables","id","ofAnotherType","type","\"some rogue type\"","\"another droppable\"","inAnotherType","DraggableDimension","inHome1","droppableId","\"addition!\"","index","0","anotherDroppable","critical","Critical","draggable","justCritical","afterEach","requestAnimationFrame","reset","describe","\"draggable additions\"","it","\"should collect and publish the draggables\"","beforeInHome1","\"addition1\"","beforeInHome2","inHome2","\"addition2\"","1","registry","Registry","createRegistry","callbacks","Callbacks","getCallbacksStub","marshal","DimensionMarshal","createDimensionMarshal","populate","startPublishing","defaultRequest","expect","publishWhileDragging","not","toHaveBeenCalled","register","getDraggableEntry","dimension","collectionStarting","step","expected","scroll","origin","toHaveBeenCalledWith","\"should not do anything if trying to add a draggable that does not have the same type as the dragging item\"","\"ordering of published draggables\"","\"should publish draggables in the order of their index\"","\"b\"","\"a\"","\"should handle publishing when draggables are registered out of order\"","\"should log a warning if trying to add or remove a draggable from a non-virtual list\"","notVirtual","\"standard\"","map","patchDimensionMap","withWarn","unregister","getById","\"draggable removals\"","\"should publish a removal\"","inHome3","inForeign1","flush","\"should do nothing if tying to remove a draggable of a different type\"","\"should do nothing if removing the critical draggable\"","\"droppables\"","\"should not do anything if a droppable is added\"","getDroppableEntry","\"should not do anything if a droppable is removed\"","\"should recollect the scroll from droppables that had draggable additions\"","watcher","DimensionWatcher","getScrollWhileDragging","getFrame","current","\"should recollect the scroll from droppables that had draggable removals\"","\"cancelling mid publish\"","\"should cancel any pending collections\"","result","StartPublishingResult","toEqual","stopPublishing","\"subsequent\"","\"should allow subsequent publishes in the same drag\"","toHaveBeenCalledTimes","mockReset","\"should allow subsequent publishes between drags\""]},"operators":{"distinct":12,"total":987,"identifiers":["const","=",".","()","{}",":","[]","function","return","... (spread)","function=>",","]}},"paramCount":1,"sloc":{"logical":461,"physical":637}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/state/dimension-marshal/dimension-marshal","type":"esm"},{"line":7,"path":"../../../../src/state/dimension-marshal/dimension-marshal-types","type":"esm"},{"line":15,"path":"../../../../src/types","type":"esm"},{"line":16,"path":"../../../util/preset-action-args","type":"esm"},{"line":17,"path":"../../../util/dimension-marshal","type":"esm"},{"line":18,"path":"./util","type":"esm"},{"line":19,"path":"../../../util/dimension","type":"esm"},{"line":20,"path":"../../../util/viewport","type":"esm"},{"line":21,"path":"../../../../src/state/get-frame","type":"esm"},{"line":22,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":23,"path":"../../../../src/state/registry/create-registry","type":"esm"},{"line":29,"path":"../../../util/registry","type":"esm"},{"line":30,"path":"../../../../src/state/position","type":"esm"},{"line":31,"path":"../../../../src/state/patch-dimension-map","type":"esm"},{"line":32,"path":"../../../util/console","type":"esm"}],"errors":[],"lineEnd":637,"lineStart":1,"maintainability":89.2,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.017,"difficulty":3.5,"effort":174.401,"length":15,"time":9.689,"vocabulary":10,"volume":49.829,"operands":{"distinct":5,"total":7,"identifiers":["DroppableDimension","droppable","descriptor","mode","\"virtual\""]},"operators":{"distinct":5,"total":8,"identifiers":["return","{}","... (spread)",":","."]}},"paramCount":1,"sloc":{"logical":3,"physical":9},"errors":[],"lineEnd":51,"lineStart":43,"name":"makeVirtual","paramNames":["droppable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["requestAnimationFrame","reset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":109,"lineStart":107,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.016,"difficulty":1.333,"effort":64,"length":16,"time":3.556,"vocabulary":8,"volume":48,"operands":{"distinct":6,"total":8,"identifiers":["it","\"should collect and publish the draggables\"","\"should not do anything if trying to add a draggable that does not have the same type as the dragging item\"","describe","\"ordering of published draggables\"","\"should log a warning if trying to add or remove a draggable from a non-virtual list\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":214},"errors":[],"lineEnd":324,"lineStart":111,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.778,"halstead":{"bugs":0.327,"difficulty":8.33,"effort":8175.211,"length":169,"time":454.178,"vocabulary":56,"volume":981.443,"operands":{"distinct":47,"total":87,"identifiers":["beforeInHome1","DraggableDimension","preset","inHome1","descriptor","id","\"addition1\"","index","0","beforeInHome2","inHome2","\"addition2\"","1","registry","Registry","createRegistry","callbacks","Callbacks","getCallbacksStub","marshal","DimensionMarshal","createDimensionMarshal","populate","withScrollables","startPublishing","defaultRequest","expect","publishWhileDragging","not","toHaveBeenCalled","draggable","register","getDraggableEntry","dimension","collectionStarting","requestAnimationFrame","step","expected","Published","empty","additions","modified","droppableId","scrollableHome","scroll","origin","toHaveBeenCalledWith"]},"operators":{"distinct":9,"total":82,"identifiers":["const","=","{}","... (spread)",".",":","()","[]",","]}},"paramCount":0,"sloc":{"logical":36,"physical":47},"errors":[],"lineEnd":158,"lineStart":112,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.098,"difficulty":4.5,"effort":1319.619,"length":61,"time":73.312,"vocabulary":28,"volume":293.249,"operands":{"distinct":22,"total":33,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","withScrollables","startPublishing","defaultRequest","expect","collectionStarting","not","toHaveBeenCalled","draggable","register","getDraggableEntry","dimension","inAnotherType"]},"operators":{"distinct":6,"total":28,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":20},"errors":[],"lineEnd":179,"lineStart":160,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should publish draggables in the order of their index\"","\"should handle publishing when draggables are registered out of order\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":97},"errors":[],"lineEnd":277,"lineStart":181,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.31,"difficulty":8.12,"effort":7557.682,"length":161,"time":419.871,"vocabulary":55,"volume":930.799,"operands":{"distinct":46,"total":83,"identifiers":["beforeInHome1","DraggableDimension","preset","inHome1","descriptor","id","\"b\"","index","0","beforeInHome2","inHome2","\"a\"","1","callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","withScrollables","startPublishing","defaultRequest","expect","publishWhileDragging","not","toHaveBeenCalled","draggable","register","getDraggableEntry","dimension","requestAnimationFrame","step","expected","Published","empty","additions","modified","droppableId","scrollableHome","scroll","origin","toHaveBeenCalledWith"]},"operators":{"distinct":9,"total":78,"identifiers":["const","=","{}","... (spread)",".",":","()","[]",","]}},"paramCount":0,"sloc":{"logical":34,"physical":47},"errors":[],"lineEnd":228,"lineStart":182,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.31,"difficulty":8.12,"effort":7557.682,"length":161,"time":419.871,"vocabulary":55,"volume":930.799,"operands":{"distinct":46,"total":83,"identifiers":["beforeInHome1","DraggableDimension","preset","inHome1","descriptor","id","\"b\"","index","0","beforeInHome2","inHome2","\"a\"","1","callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","withScrollables","startPublishing","defaultRequest","expect","publishWhileDragging","not","toHaveBeenCalled","draggable","register","getDraggableEntry","dimension","requestAnimationFrame","step","expected","Published","empty","additions","modified","droppableId","scrollableHome","scroll","origin","toHaveBeenCalledWith"]},"operators":{"distinct":9,"total":78,"identifiers":["const","=","{}","... (spread)",".",":","()","[]",","]}},"paramCount":0,"sloc":{"logical":34,"physical":47},"errors":[],"lineEnd":276,"lineStart":230,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.137,"difficulty":6.222,"effort":2553.243,"length":80,"time":141.847,"vocabulary":35,"volume":410.343,"operands":{"distinct":27,"total":42,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","notVirtual","DroppableDimension","scrollableHome","descriptor","mode","\"standard\"","map","DimensionMap","patchDimensionMap","withScrollables","populate","startPublishing","defaultRequest","expect","collectionStarting","not","toHaveBeenCalled","withWarn"]},"operators":{"distinct":8,"total":38,"identifiers":["const","=","()","{}","... (spread)",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":21,"physical":45},"errors":[],"lineEnd":323,"lineStart":279,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.053,"difficulty":4.5,"effort":711.555,"length":36,"time":39.531,"vocabulary":21,"volume":158.123,"operands":{"distinct":14,"total":18,"identifiers":["beforeInHome1","DraggableDimension","preset","inHome1","descriptor","id","\"b\"","index","0","registry","draggable","register","getDraggableEntry","dimension"]},"operators":{"distinct":7,"total":18,"identifiers":["const","=","{}","... (spread)",".",":","()"]}},"paramCount":0,"sloc":{"logical":7,"physical":13},"errors":[],"lineEnd":313,"lineStart":301,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.021,"difficulty":1.25,"effort":78.896,"length":19,"time":4.383,"vocabulary":10,"volume":63.117,"operands":{"distinct":8,"total":10,"identifiers":["registry","draggable","unregister","getById","preset","inHome2","descriptor","id"]},"operators":{"distinct":2,"total":9,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":5},"errors":[],"lineEnd":319,"lineStart":315,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should publish a removal\"","\"should do nothing if tying to remove a draggable of a different type\"","\"should do nothing if removing the critical draggable\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":89},"errors":[],"lineEnd":414,"lineStart":326,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.331,"difficulty":9.538,"effort":9483.82,"length":179,"time":526.879,"vocabulary":47,"volume":994.271,"operands":{"distinct":39,"total":93,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","withScrollables","startPublishing","defaultRequest","expect","publishWhileDragging","not","toHaveBeenCalled","draggable","unregister","getById","preset","inHome2","descriptor","id","inHome3","inForeign1","requestAnimationFrame","flush","expected","Published","additions","removals","modified","droppableId","scrollableHome","scroll","origin","scrollableForeign","toHaveBeenCalledWith"]},"operators":{"distinct":8,"total":86,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":29,"physical":40},"errors":[],"lineEnd":366,"lineStart":327,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.152,"difficulty":5.875,"effort":2681.974,"length":89,"time":148.999,"vocabulary":35,"volume":456.506,"operands":{"distinct":28,"total":47,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","dimensions","DimensionMap","draggables","withScrollables","inAnotherType","descriptor","id","droppables","ofAnotherType","populate","startPublishing","defaultRequest","draggable","unregister","getById","expect","collectionStarting","not","toHaveBeenCalled"]},"operators":{"distinct":7,"total":42,"identifiers":["const","=","()","{}",":","... (spread)","."]}},"paramCount":0,"sloc":{"logical":17,"physical":28},"errors":[],"lineEnd":395,"lineStart":368,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.088,"difficulty":2.818,"effort":741.815,"length":56,"time":41.212,"vocabulary":26,"volume":263.225,"operands":{"distinct":22,"total":31,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","withScrollables","startPublishing","defaultRequest","draggable","unregister","getById","critical","id","expect","collectionStarting","not","toHaveBeenCalled"]},"operators":{"distinct":4,"total":25,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":12,"physical":17},"errors":[],"lineEnd":413,"lineStart":397,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should not do anything if a droppable is added\"","\"should not do anything if a droppable is removed\"","\"should recollect the scroll from droppables that had draggable additions\"","\"should recollect the scroll from droppables that had draggable removals\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":125},"errors":[],"lineEnd":540,"lineStart":416,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.099,"difficulty":4.304,"effort":1275.537,"length":61,"time":70.863,"vocabulary":29,"volume":296.337,"operands":{"distinct":23,"total":33,"identifiers":["registry","Registry","createRegistry","callbacks","Callbacks","getCallbacksStub","marshal","DimensionMarshal","createDimensionMarshal","populate","withScrollables","startPublishing","defaultRequest","expect","publishWhileDragging","not","toHaveBeenCalled","droppable","register","getDroppableEntry","dimension","anotherDroppable","collectionStarting"]},"operators":{"distinct":6,"total":28,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":19},"errors":[],"lineEnd":435,"lineStart":417,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.106,"difficulty":3,"effort":951.856,"length":66,"time":52.881,"vocabulary":28,"volume":317.285,"operands":{"distinct":24,"total":36,"identifiers":["registry","Registry","createRegistry","callbacks","Callbacks","getCallbacksStub","marshal","DimensionMarshal","createDimensionMarshal","populate","withScrollables","startPublishing","defaultRequest","expect","publishWhileDragging","not","toHaveBeenCalled","droppable","unregister","getById","scrollableForeign","descriptor","id","collectionStarting"]},"operators":{"distinct":4,"total":30,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":14,"physical":19},"errors":[],"lineEnd":455,"lineStart":437,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.778,"halstead":{"bugs":0.331,"difficulty":7.184,"effort":7123.268,"length":170,"time":395.737,"vocabulary":57,"volume":991.591,"operands":{"distinct":49,"total":88,"identifiers":["beforeInHome2","DraggableDimension","preset","inHome2","descriptor","id","\"addition2\"","index","1","callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","watcher","DimensionWatcher","populate","withScrollables","startPublishing","defaultRequest","expect","publishWhileDragging","not","toHaveBeenCalled","draggable","register","getDraggableEntry","dimension","collectionStarting","droppable","getScrollWhileDragging","requestAnimationFrame","flush","toHaveBeenCalledWith","scrollableHome","getFrame","scroll","current","expected","Published","additions","removals","modified","droppableId","origin"]},"operators":{"distinct":8,"total":82,"identifiers":["const","=","{}","... (spread)",".",":","()","[]"]}},"paramCount":0,"sloc":{"logical":36,"physical":45},"errors":[],"lineEnd":501,"lineStart":457,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.299,"difficulty":6.756,"effort":6062.486,"length":159,"time":336.805,"vocabulary":50,"volume":897.373,"operands":{"distinct":43,"total":83,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","watcher","DimensionWatcher","populate","withScrollables","startPublishing","defaultRequest","expect","publishWhileDragging","not","toHaveBeenCalled","draggable","unregister","getById","preset","inHome2","descriptor","id","collectionStarting","droppable","getScrollWhileDragging","requestAnimationFrame","flush","toHaveBeenCalledWith","scrollableHome","getFrame","scroll","current","expected","Published","additions","removals","modified","droppableId","origin"]},"operators":{"distinct":7,"total":76,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":31,"physical":37},"errors":[],"lineEnd":539,"lineStart":503,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should cancel any pending collections\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":36},"errors":[],"lineEnd":577,"lineStart":542,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.181,"difficulty":4.941,"effort":2682.252,"length":102,"time":149.014,"vocabulary":40,"volume":542.837,"operands":{"distinct":34,"total":56,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","justCritical","result","StartPublishingResult","startPublishing","defaultRequest","expected","critical","dimensions","viewport","expect","toEqual","draggable","register","getDraggableEntry","dimension","preset","inHome2","collectionStarting","toHaveBeenCalled","publishWhileDragging","not","stopPublishing","requestAnimationFrame","flush"]},"operators":{"distinct":6,"total":46,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":26,"physical":34},"errors":[],"lineEnd":576,"lineStart":543,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should allow subsequent publishes in the same drag\"","\"should allow subsequent publishes between drags\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":58},"errors":[],"lineEnd":636,"lineStart":579,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.15,"difficulty":5.333,"effort":2394.406,"length":89,"time":133.023,"vocabulary":33,"volume":448.951,"operands":{"distinct":27,"total":48,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","justCritical","startPublishing","defaultRequest","draggable","register","getDraggableEntry","dimension","preset","inHome2","requestAnimationFrame","step","expect","publishWhileDragging","toHaveBeenCalledTimes","1","mockReset","inHome3"]},"operators":{"distinct":6,"total":41,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":21,"physical":25},"errors":[],"lineEnd":604,"lineStart":580,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.166,"difficulty":5.679,"effort":2831.173,"length":98,"time":157.287,"vocabulary":34,"volume":498.571,"operands":{"distinct":28,"total":53,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","justCritical","startPublishing","defaultRequest","draggable","register","getDraggableEntry","dimension","preset","inHome2","requestAnimationFrame","step","expect","publishWhileDragging","toHaveBeenCalledTimes","1","mockReset","stopPublishing","inHome3"]},"operators":{"distinct":6,"total":45,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":23,"physical":30},"errors":[],"lineEnd":635,"lineStart":606,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.217,"halstead":{"bugs":0.188,"difficulty":2.028,"effort":29681.572,"length":79.538,"time":1648.976,"vocabulary":5.192,"volume":562.879,"operands":{"distinct":4.731,"total":41.577},"operators":{"distinct":0.462,"total":37.962}},"paramCount":0.038,"sloc":{"logical":17.731,"physical":24.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":16.392,"halstead":{"bugs":0.129,"difficulty":4.363,"effort":2584.192,"length":73.56,"time":143.566,"vocabulary":27.52,"volume":388.069,"operands":{"distinct":22.28,"total":38.6},"operators":{"distinct":5.24,"total":34.96}},"paramCount":0.04,"sloc":{"logical":16.36,"physical":45.96}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/dimension-marshal/initial-publish.spec.js","testCases":9,"smells":19,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  163 |   const result: StartPublishingResult = marshal.startPublishing(defaultRequest);\n  164 |\n> 165 |   expect(result).toEqual({\n      |  ^ Duplicate Assert\n  166 |     critical,\n  167 |     dimensions: expectedMap,\n  168 |     viewport,","start":{"line":165,"column":2,"index":4818}},{"frame":"  168 |     viewport,\n  169 |   });\n> 170 |   expect(result).not.toEqual({\n      |  ^ Duplicate Assert\n  171 |     critical,\n  172 |     dimensions: preset.dimensions,\n  173 |     viewport,","start":{"line":170,"column":2,"index":4908}},{"frame":"  287 |     };\n  288 |\n> 289 |     expect(start(marshal)).toEqual(expected);\n      |    ^ Duplicate Assert\n  290 |     stop(marshal);\n  291 |     expect(start(marshal)).toEqual(expected);\n  292 |     stop(marshal);","start":{"line":289,"column":4,"index":8408}},{"frame":"  287 |     };\n  288 |\n> 289 |     expect(start(marshal)).toEqual(expected);\n      |    ^ Duplicate Assert\n  290 |     stop(marshal);\n  291 |     expect(start(marshal)).toEqual(expected);\n  292 |     stop(marshal);","start":{"line":289,"column":4,"index":8408}},{"frame":"  289 |     expect(start(marshal)).toEqual(expected);\n  290 |     stop(marshal);\n> 291 |     expect(start(marshal)).toEqual(expected);\n      |    ^ Duplicate Assert\n  292 |     stop(marshal);\n  293 |     expect(start(marshal)).toEqual(expected);\n  294 |     stop(marshal);","start":{"line":291,"column":4,"index":8473}},{"frame":"  289 |     expect(start(marshal)).toEqual(expected);\n  290 |     stop(marshal);\n> 291 |     expect(start(marshal)).toEqual(expected);\n      |    ^ Duplicate Assert\n  292 |     stop(marshal);\n  293 |     expect(start(marshal)).toEqual(expected);\n  294 |     stop(marshal);","start":{"line":291,"column":4,"index":8473}},{"frame":"  291 |     expect(start(marshal)).toEqual(expected);\n  292 |     stop(marshal);\n> 293 |     expect(start(marshal)).toEqual(expected);\n      |    ^ Duplicate Assert\n  294 |     stop(marshal);\n  295 |   });\n  296 |","start":{"line":293,"column":4,"index":8538}},{"frame":"  291 |     expect(start(marshal)).toEqual(expected);\n  292 |     stop(marshal);\n> 293 |     expect(start(marshal)).toEqual(expected);\n      |    ^ Duplicate Assert\n  294 |     stop(marshal);\n  295 |   });\n  296 |","start":{"line":293,"column":4,"index":8538}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  72 |   );\n  73 |\n> 74 |   registry.draggable.register(getDraggableEntry({ dimension: preset.inHome1 }));\n     |                              ^ Eager Test\n  75 |   registry.draggable.register(getDraggableEntry({ dimension: preset.inHome2 }));\n  76 |   registry.droppable.register(getDroppableEntry({ dimension: preset.home }));\n  77 |","start":{"line":74,"column":30,"index":1977}},{"frame":"  73 |\n  74 |   registry.draggable.register(getDraggableEntry({ dimension: preset.inHome1 }));\n> 75 |   registry.draggable.register(getDraggableEntry({ dimension: preset.inHome2 }));\n     |                              ^ Eager Test\n  76 |   registry.droppable.register(getDroppableEntry({ dimension: preset.home }));\n  77 |\n  78 |   const result: StartPublishingResult = marshal.startPublishing(defaultRequest);","start":{"line":75,"column":30,"index":2058}},{"frame":"  74 |   registry.draggable.register(getDraggableEntry({ dimension: preset.inHome1 }));\n  75 |   registry.draggable.register(getDraggableEntry({ dimension: preset.inHome2 }));\n> 76 |   registry.droppable.register(getDroppableEntry({ dimension: preset.home }));\n     |                              ^ Eager Test\n  77 |\n  78 |   const result: StartPublishingResult = marshal.startPublishing(defaultRequest);\n  79 |   const expected: StartPublishingResult = {","start":{"line":76,"column":30,"index":2139}},{"frame":"  229 |     registry.droppable.getById(preset.home.descriptor.id),\n  230 |   );\n> 231 |   registry.droppable.register(getDroppableEntry({ dimension: updatedHome }));\n      |                              ^ Eager Test\n  232 |   delete expected.droppables[preset.home.descriptor.id];\n  233 |   expected.droppables[updatedHome.descriptor.id] = updatedHome;\n  234 |","start":{"line":231,"column":30,"index":6634}},{"frame":"  245 |       draggable.descriptor.id,\n  246 |     );\n> 247 |     const fresh: DraggableEntry = getDraggableEntry({\n      |                                  ^ Eager Test\n  248 |       uniqueId: last.uniqueId,\n  249 |       dimension: updated,\n  250 |     });","start":{"line":247,"column":34,"index":7242}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  72 |   );\n  73 |\n> 74 |   registry.draggable.register(getDraggableEntry({ dimension: preset.inHome1 }));\n     |                              ^ Lazy Test\n  75 |   registry.draggable.register(getDraggableEntry({ dimension: preset.inHome2 }));\n  76 |   registry.droppable.register(getDroppableEntry({ dimension: preset.home }));\n  77 |","start":{"line":74,"column":30,"index":1977}},{"frame":"  74 |   registry.draggable.register(getDraggableEntry({ dimension: preset.inHome1 }));\n  75 |   registry.draggable.register(getDraggableEntry({ dimension: preset.inHome2 }));\n> 76 |   registry.droppable.register(getDroppableEntry({ dimension: preset.home }));\n     |                              ^ Lazy Test\n  77 |\n  78 |   const result: StartPublishingResult = marshal.startPublishing(defaultRequest);\n  79 |   const expected: StartPublishingResult = {","start":{"line":76,"column":30,"index":2139}},{"frame":"  193 |     preset.inHome2.descriptor.id,\n  194 |   );\n> 195 |   const updated: DraggableEntry = getDraggableEntry({\n      |                                  ^ Lazy Test\n  196 |     uniqueId: last.uniqueId,\n  197 |     dimension: updatedInHome2,\n  198 |   });","start":{"line":195,"column":34,"index":5569}},{"frame":"  229 |     registry.droppable.getById(preset.home.descriptor.id),\n  230 |   );\n> 231 |   registry.droppable.register(getDroppableEntry({ dimension: updatedHome }));\n      |                              ^ Lazy Test\n  232 |   delete expected.droppables[preset.home.descriptor.id];\n  233 |   expected.droppables[updatedHome.descriptor.id] = updatedHome;\n  234 |","start":{"line":231,"column":30,"index":6634}},{"frame":"  245 |       draggable.descriptor.id,\n  246 |     );\n> 247 |     const fresh: DraggableEntry = getDraggableEntry({\n      |                                  ^ Lazy Test\n  248 |       uniqueId: last.uniqueId,\n  249 |       dimension: updated,\n  250 |     });","start":{"line":247,"column":34,"index":7242}},{"frame":"  335 |       preset.inHome2.descriptor.id,\n  336 |     );\n> 337 |     const fresh: DraggableEntry = getDraggableEntry({\n      |                                  ^ Lazy Test\n  338 |       uniqueId: last.uniqueId,\n  339 |       dimension: updatedInHome2,\n  340 |     });","start":{"line":337,"column":34,"index":9767}}]}],"metrics":{"aggregate":{"cyclomatic":16,"cyclomaticDensity":5.948,"halstead":{"bugs":2.604,"difficulty":35.444,"effort":276933.643,"length":1176,"time":15385.202,"vocabulary":100,"volume":7813.175,"operands":{"distinct":90,"total":638,"identifiers":["viewport","Viewport","preset","setViewport","defaultRequest","LiftRequest","draggableId","critical","draggable","id","scrollOptions","shouldPublishImmediately","false","foreignWithNewType","DroppableDimension","foreign","descriptor","\"new foreign id\"","type","\"some cool new type\"","inForeignWithNewType","DraggableDimension","inForeign1","\"new in foreign 1 id\"","withNewType","DimensionMap","draggables","dimensions","droppables","it","\"should publish the registered dimensions (simple)\"","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","getCallbacksStub","register","getDraggableEntry","dimension","inHome1","inHome2","droppable","getDroppableEntry","home","result","StartPublishingResult","startPublishing","expected","expect","toEqual","\"should publish the registered dimensions (preset)\"","populate","\"should not publish dimensions that do not have the same type as the critical droppable\"","\"should not publish dimensions that have been unregistered\"","expectedMap","copy","unregister","getById","inForeignList","forEach","not","\"should publish draggables that have been updated (index change)\"","updatedInHome2","index","10000","last","DraggableEntry","updated","uniqueId","update","\"should publish droppables that have been updated (id change)\"","updatedHome","\"some new id\"","inHomeList","droppableId","fresh","wanted","describe","\"subsequent calls\"","start","stop","stopPublishing","\"should return dimensions a subsequent call\"","\"should throw if starting asked to start before stopping\"","toThrow","\"should account for changes after the last call\"","result1","result2"]},"operators":{"distinct":10,"total":538,"identifiers":["const","=",".","()","{}",":","... (spread)","function=>","delete (prefix)","[]"]}},"paramCount":4,"sloc":{"logical":269,"physical":357}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/state/dimension-marshal/dimension-marshal","type":"esm"},{"line":3,"path":"../../../util/dimension-marshal","type":"esm"},{"line":4,"path":"../../../util/preset-action-args","type":"esm"},{"line":8,"path":"../../../../src/state/dimension-marshal/dimension-marshal-types","type":"esm"},{"line":15,"path":"../../../../src/types","type":"esm"},{"line":16,"path":"../../../util/viewport","type":"esm"},{"line":20,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":21,"path":"../../../../src/state/registry/create-registry","type":"esm"},{"line":26,"path":"../../../util/registry","type":"esm"}],"errors":[],"lineEnd":357,"lineStart":1,"maintainability":91.906,"methods":[{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.215,"difficulty":6.29,"effort":4063.374,"length":124,"time":225.743,"vocabulary":37,"volume":645.972,"operands":{"distinct":31,"total":65,"identifiers":["registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","getCallbacksStub","draggable","register","getDraggableEntry","dimension","preset","inHome1","inHome2","droppable","getDroppableEntry","home","result","StartPublishingResult","startPublishing","defaultRequest","expected","critical","viewport","dimensions","draggables","descriptor","id","droppables","expect","toEqual"]},"operators":{"distinct":6,"total":59,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":27,"physical":27},"errors":[],"lineEnd":93,"lineStart":67,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.074,"difficulty":4.421,"effort":985.475,"length":48,"time":54.749,"vocabulary":25,"volume":222.905,"operands":{"distinct":19,"total":28,"identifiers":["registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","getCallbacksStub","populate","result","StartPublishingResult","startPublishing","defaultRequest","expected","critical","dimensions","preset","viewport","expect","toEqual"]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":14,"physical":17},"errors":[],"lineEnd":112,"lineStart":96,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.077,"difficulty":4.35,"effort":1001.899,"length":49,"time":55.661,"vocabulary":26,"volume":230.322,"operands":{"distinct":20,"total":29,"identifiers":["registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","getCallbacksStub","populate","withNewType","result","StartPublishingResult","startPublishing","defaultRequest","expected","critical","dimensions","preset","viewport","expect","toEqual"]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":14,"physical":19},"errors":[],"lineEnd":132,"lineStart":114,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.255,"difficulty":10.324,"effort":7898.567,"length":141,"time":438.809,"vocabulary":43,"volume":765.103,"operands":{"distinct":34,"total":78,"identifiers":["registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","getCallbacksStub","populate","preset","dimensions","expectedMap","DimensionMap","copy","draggable","unregister","getById","inHome2","descriptor","id","draggables","droppable","foreign","droppables","inForeignList","forEach","result","StartPublishingResult","startPublishing","defaultRequest","expect","toEqual","critical","viewport","not"]},"operators":{"distinct":9,"total":63,"identifiers":["const","=","()",".","delete (prefix)","[]","function=>","{}",":"]}},"paramCount":0,"sloc":{"logical":28,"physical":42},"errors":[],"lineEnd":175,"lineStart":134,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.032,"difficulty":3.5,"effort":338.779,"length":27,"time":18.821,"vocabulary":12,"volume":96.794,"operands":{"distinct":8,"total":14,"identifiers":["registry","draggable","unregister","getById","descriptor","id","expectedMap","draggables"]},"operators":{"distinct":4,"total":13,"identifiers":["()",".","delete (prefix)","[]"]}},"paramCount":1,"sloc":{"logical":3,"physical":6},"errors":[],"lineEnd":161,"lineStart":156,"name":"<anon method-5>","paramNames":["draggable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.234,"difficulty":7.368,"effort":5168.891,"length":127,"time":287.161,"vocabulary":46,"volume":701.492,"operands":{"distinct":38,"total":70,"identifiers":["registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","getCallbacksStub","populate","preset","dimensions","updatedInHome2","DraggableDimension","inHome2","descriptor","index","10000","last","DraggableEntry","draggable","getById","id","updated","getDraggableEntry","uniqueId","dimension","update","result","StartPublishingResult","startPublishing","defaultRequest","expected","DimensionMap","copy","draggables","expect","toEqual","critical","viewport"]},"operators":{"distinct":8,"total":57,"identifiers":["const","=","()",".","{}","... (spread)",":","[]"]}},"paramCount":0,"sloc":{"logical":26,"physical":33},"errors":[],"lineEnd":209,"lineStart":177,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.301,"difficulty":10.897,"effort":9850.936,"length":161,"time":547.274,"vocabulary":49,"volume":903.968,"operands":{"distinct":39,"total":85,"identifiers":["registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","getCallbacksStub","populate","preset","dimensions","expected","DimensionMap","copy","updatedHome","DroppableDimension","home","descriptor","id","\"some new id\"","droppable","unregister","getById","register","getDroppableEntry","dimension","droppables","inHomeList","forEach","draggable","result","StartPublishingResult","startPublishing","defaultRequest","wanted","viewport","critical","droppableId","expect","toEqual"]},"operators":{"distinct":10,"total":76,"identifiers":["const","=","()",".","{}","... (spread)",":","delete (prefix)","[]","function=>"]}},"paramCount":0,"sloc":{"logical":31,"physical":59},"errors":[],"lineEnd":269,"lineStart":211,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.11,"difficulty":8.222,"effort":2705.364,"length":70,"time":150.298,"vocabulary":26,"volume":329.031,"operands":{"distinct":18,"total":37,"identifiers":["updated","DraggableDimension","draggable","descriptor","droppableId","updatedHome","id","last","DraggableEntry","registry","getById","fresh","getDraggableEntry","uniqueId","dimension","update","expected","draggables"]},"operators":{"distinct":8,"total":33,"identifiers":["const","=","{}","... (spread)",":",".","()","[]"]}},"paramCount":1,"sloc":{"logical":11,"physical":18},"errors":[],"lineEnd":253,"lineStart":236,"name":"<anon method-8>","paramNames":["draggable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.025,"difficulty":2.857,"effort":217.45,"length":22,"time":12.081,"vocabulary":11,"volume":76.107,"operands":{"distinct":7,"total":10,"identifiers":["start","marshal","stop","it","\"should return dimensions a subsequent call\"","\"should throw if starting asked to start before stopping\"","\"should account for changes after the last call\""]},"operators":{"distinct":4,"total":12,"identifiers":["const","=","function=>","()"]}},"paramCount":0,"sloc":{"logical":10,"physical":86},"errors":[],"lineEnd":356,"lineStart":271,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["marshal","startPublishing","defaultRequest"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":2},"errors":[],"lineEnd":273,"lineStart":272,"name":"<anon method-10>","paramNames":["marshal"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["marshal","stopPublishing"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":274,"lineStart":274,"name":"<anon method-11>","paramNames":["marshal"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.109,"difficulty":7,"effort":2278.726,"length":71,"time":126.596,"vocabulary":24,"volume":325.532,"operands":{"distinct":18,"total":42,"identifiers":["registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","getCallbacksStub","populate","preset","dimensions","expected","StartPublishingResult","critical","viewport","expect","start","toEqual","stop"]},"operators":{"distinct":6,"total":29,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":22,"physical":20},"errors":[],"lineEnd":295,"lineStart":276,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.042,"difficulty":3.077,"effort":384.916,"length":30,"time":21.384,"vocabulary":18,"volume":125.098,"operands":{"distinct":13,"total":16,"identifiers":["registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","getCallbacksStub","populate","preset","dimensions","start","expect","toThrow"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":11},"errors":[],"lineEnd":307,"lineStart":297,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["start","marshal"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":306,"lineStart":306,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.276,"difficulty":8.615,"effort":7130.383,"length":149,"time":396.132,"vocabulary":47,"volume":827.634,"operands":{"distinct":39,"total":84,"identifiers":["registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","getCallbacksStub","populate","preset","dimensions","result1","StartPublishingResult","start","expect","toEqual","critical","viewport","updatedInHome2","DraggableDimension","inHome2","descriptor","index","10000","last","DraggableEntry","draggable","getById","id","fresh","getDraggableEntry","uniqueId","dimension","update","expected","DimensionMap","copy","draggables","stop","result2"]},"operators":{"distinct":8,"total":65,"identifiers":["const","=","()",".","{}",":","... (spread)","[]"]}},"paramCount":0,"sloc":{"logical":34,"physical":47},"errors":[],"lineEnd":355,"lineStart":309,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.372,"halstead":{"bugs":0.163,"difficulty":2.215,"effort":17308.353,"length":73.5,"time":961.575,"vocabulary":6.25,"volume":488.323,"operands":{"distinct":5.625,"total":39.875},"operators":{"distinct":0.625,"total":33.625}},"paramCount":0.25,"sloc":{"logical":16.813,"physical":22.313}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":16.57,"halstead":{"bugs":0.117,"difficulty":5.295,"effort":2803.117,"length":68.733,"time":155.729,"vocabulary":25.067,"volume":351.622,"operands":{"distinct":19.4,"total":37.667},"operators":{"distinct":5.667,"total":31.067}},"paramCount":0.267,"sloc":{"logical":15.733,"physical":25.933}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/dimension-marshal/droppable-passthrough.spec.js","testCases":9,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  26 |     // initial lift\n  27 |     marshal.startPublishing(defaultRequest);\n> 28 |     expect(watcher.droppable.scroll).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  29 |\n  30 |     // scroll\n  31 |     marshal.scrollDroppable(critical.droppable.id, { x: 10, y: 20 });","start":{"line":28,"column":4,"index":1096}},{"frame":"  30 |     // scroll\n  31 |     marshal.scrollDroppable(critical.droppable.id, { x: 10, y: 20 });\n> 32 |     expect(watcher.droppable.scroll).toHaveBeenCalledWith(\n     |    ^ Duplicate Assert\n  33 |       critical.droppable.id,\n  34 |       { x: 10, y: 20 },\n  35 |     );","start":{"line":32,"column":4,"index":1242}},{"frame":"  138 |     // initial lift\n  139 |     marshal.startPublishing(defaultRequest);\n> 140 |     expect(callbacks.updateDroppableIsEnabled).not.toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  141 |\n  142 |     marshal.updateDroppableIsEnabled(critical.droppable.id, false);\n  143 |     expect(callbacks.updateDroppableIsEnabled).toHaveBeenCalledWith({","start":{"line":140,"column":4,"index":4604}},{"frame":"  141 |\n  142 |     marshal.updateDroppableIsEnabled(critical.droppable.id, false);\n> 143 |     expect(callbacks.updateDroppableIsEnabled).toHaveBeenCalledWith({\n      |    ^ Duplicate Assert\n  144 |       id: critical.droppable.id,\n  145 |       isEnabled: false,\n  146 |     });","start":{"line":143,"column":4,"index":4744}}]}],"metrics":{"aggregate":{"cyclomatic":16,"cyclomaticDensity":10.063,"halstead":{"bugs":1.193,"difficulty":22.853,"effort":81795.85,"length":611,"time":4544.214,"vocabulary":58,"volume":3579.226,"operands":{"distinct":51,"total":333,"identifiers":["preset","getPreset","describe","\"force scrolling a droppable\"","it","\"should scroll the droppable\"","registry","Registry","createRegistry","callbacks","Callbacks","getCallbacksStub","marshal","DimensionMarshal","createDimensionMarshal","watcher","DimensionWatcher","populate","startPublishing","defaultRequest","expect","droppable","scroll","not","toHaveBeenCalled","scrollDroppable","critical","id","x","10","y","20","toHaveBeenCalledWith","\"should throw if the droppable cannot be found\"","justCritical","foreign","descriptor","toThrow","\"should not scroll the droppable if no collection is occurring\"","\"responding to scroll changes\"","\"should let consumers know\"","updateDroppableScroll","newScroll","\"Invariant failed: Cannot update the scroll on Droppable foreign as it is not registered\"","\"should not let consumers know if know drag is occurring\"","\"is enabled changes\"","updateDroppableIsEnabled","false","isEnabled","\"Invariant failed: Cannot update is enabled flag of Droppable foreign as it is not registered\"","\"should not let consumers know if no collection is occurring\""]},"operators":{"distinct":7,"total":278,"identifiers":["const","=","()","function=>",".","{}",":"]}},"paramCount":0,"sloc":{"logical":159,"physical":182}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/state/dimension-marshal/dimension-marshal","type":"esm"},{"line":3,"path":"../../../util/dimension","type":"esm"},{"line":7,"path":"../../../../src/state/dimension-marshal/dimension-marshal-types","type":"esm"},{"line":8,"path":"../../../util/dimension-marshal","type":"esm"},{"line":9,"path":"./util","type":"esm"},{"line":10,"path":"../../../../src/state/registry/create-registry","type":"esm"},{"line":11,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":12,"path":"../../../util/registry","type":"esm"}],"errors":[],"lineEnd":182,"lineStart":1,"maintainability":104.595,"methods":[{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should scroll the droppable\"","\"should throw if the droppable cannot be found\"","\"should not scroll the droppable if no collection is occurring\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":53},"errors":[],"lineEnd":68,"lineStart":16,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.138,"difficulty":5,"effort":2068.202,"length":82,"time":114.9,"vocabulary":33,"volume":413.64,"operands":{"distinct":27,"total":45,"identifiers":["registry","Registry","createRegistry","callbacks","Callbacks","getCallbacksStub","marshal","DimensionMarshal","createDimensionMarshal","watcher","DimensionWatcher","populate","startPublishing","defaultRequest","expect","droppable","scroll","not","toHaveBeenCalled","scrollDroppable","critical","id","x","10","y","20","toHaveBeenCalledWith"]},"operators":{"distinct":6,"total":37,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":18,"physical":20},"errors":[],"lineEnd":36,"lineStart":17,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.05,"difficulty":3.167,"effort":479.014,"length":35,"time":26.612,"vocabulary":20,"volume":151.267,"operands":{"distinct":15,"total":19,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","justCritical","startPublishing","defaultRequest","expect","toThrow"]},"operators":{"distinct":5,"total":16,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":17},"errors":[],"lineEnd":54,"lineStart":38,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.023,"difficulty":2,"effort":137.065,"length":18,"time":7.615,"vocabulary":14,"volume":68.532,"operands":{"distinct":10,"total":10,"identifiers":["marshal","scrollDroppable","preset","foreign","descriptor","id","x","10","y","20"]},"operators":{"distinct":4,"total":8,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":53,"lineStart":51,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.09,"difficulty":3.75,"effort":1012.046,"length":55,"time":56.225,"vocabulary":30,"volume":269.879,"operands":{"distinct":24,"total":30,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","watcher","DimensionWatcher","populate","scrollDroppable","critical","droppable","id","x","10","y","20","expect","scroll","not","toHaveBeenCalled"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":13,"physical":12},"errors":[],"lineEnd":67,"lineStart":56,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should let consumers know\"","\"should throw if the droppable cannot be found\"","\"should not let consumers know if know drag is occurring\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":57},"errors":[],"lineEnd":126,"lineStart":70,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.144,"difficulty":4.929,"effort":2131.284,"length":85,"time":118.405,"vocabulary":34,"volume":432.434,"operands":{"distinct":28,"total":46,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","watcher","DimensionWatcher","populate","startPublishing","defaultRequest","expect","droppable","scroll","not","toHaveBeenCalled","updateDroppableScroll","critical","id","x","10","y","20","toHaveBeenCalledWith","newScroll"]},"operators":{"distinct":6,"total":39,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":20,"physical":19},"errors":[],"lineEnd":89,"lineStart":71,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.07,"difficulty":3.289,"effort":693.777,"length":46,"time":38.543,"vocabulary":24,"volume":210.908,"operands":{"distinct":19,"total":25,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","justCritical","startPublishing","defaultRequest","expect","updateDroppableScroll","not","toHaveBeenCalled","toThrow","\"Invariant failed: Cannot update the scroll on Droppable foreign as it is not registered\""]},"operators":{"distinct":5,"total":21,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":22},"errors":[],"lineEnd":112,"lineStart":91,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.023,"difficulty":2,"effort":137.065,"length":18,"time":7.615,"vocabulary":14,"volume":68.532,"operands":{"distinct":10,"total":10,"identifiers":["marshal","updateDroppableScroll","preset","foreign","descriptor","id","x","10","y","20"]},"operators":{"distinct":4,"total":8,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":6},"errors":[],"lineEnd":109,"lineStart":104,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.08,"difficulty":3.818,"effort":917.768,"length":50,"time":50.987,"vocabulary":28,"volume":240.368,"operands":{"distinct":22,"total":28,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","justCritical","updateDroppableScroll","critical","droppable","id","x","10","y","20","expect","not","toHaveBeenCalled"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":12,"physical":12},"errors":[],"lineEnd":125,"lineStart":114,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should let consumers know\"","\"should throw if the droppable cannot be found\"","\"should not let consumers know if no collection is occurring\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":54},"errors":[],"lineEnd":181,"lineStart":128,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.107,"difficulty":5.045,"effort":1625.104,"length":67,"time":90.284,"vocabulary":28,"volume":322.093,"operands":{"distinct":22,"total":37,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","startPublishing","defaultRequest","expect","updateDroppableIsEnabled","not","toHaveBeenCalled","critical","droppable","id","false","toHaveBeenCalledWith","isEnabled"]},"operators":{"distinct":6,"total":30,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":19},"errors":[],"lineEnd":147,"lineStart":129,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.07,"difficulty":3.289,"effort":693.777,"length":46,"time":38.543,"vocabulary":24,"volume":210.908,"operands":{"distinct":19,"total":25,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","justCritical","startPublishing","defaultRequest","expect","updateDroppableIsEnabled","not","toHaveBeenCalled","toThrow","\"Invariant failed: Cannot update is enabled flag of Droppable foreign as it is not registered\""]},"operators":{"distinct":5,"total":21,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":19},"errors":[],"lineEnd":167,"lineStart":149,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.013,"difficulty":1,"effort":38.039,"length":12,"time":2.113,"vocabulary":9,"volume":38.039,"operands":{"distinct":7,"total":7,"identifiers":["marshal","updateDroppableIsEnabled","preset","foreign","descriptor","id","false"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":2},"errors":[],"lineEnd":163,"lineStart":162,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.066,"difficulty":2.632,"effort":523.781,"length":44,"time":29.099,"vocabulary":23,"volume":199.037,"operands":{"distinct":19,"total":25,"identifiers":["callbacks","Callbacks","getCallbacksStub","registry","Registry","createRegistry","marshal","DimensionMarshal","createDimensionMarshal","populate","justCritical","updateDroppableIsEnabled","critical","droppable","id","false","expect","not","toHaveBeenCalled"]},"operators":{"distinct":4,"total":19,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":12},"errors":[],"lineEnd":180,"lineStart":169,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.629,"halstead":{"bugs":0.075,"difficulty":1.428,"effort":5112.241,"length":38.188,"time":284.013,"vocabulary":3.625,"volume":223.702,"operands":{"distinct":3.188,"total":20.813},"operators":{"distinct":0.438,"total":17.375}},"paramCount":0,"sloc":{"logical":9.938,"physical":11.375}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":15.626,"halstead":{"bugs":0.06,"difficulty":2.961,"effort":706.434,"length":39.6,"time":39.246,"vocabulary":19.933,"volume":181.246,"operands":{"distinct":15.6,"total":21.667},"operators":{"distinct":4.333,"total":17.933}},"paramCount":0,"sloc":{"logical":10.067,"physical":21.8}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/connected-droppable/post-drop.spec.js","testCases":5,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  176 |       shouldAnimatePlaceholder: false,\n  177 |     };\n> 178 |     expect(postDrop).toBe(atRest);\n      |    ^ Duplicate Assert\n  179 |     expect(postDrop).toEqual(expected);\n  180 |   });\n  181 |","start":{"line":178,"column":4,"index":5124}},{"frame":"  177 |     };\n  178 |     expect(postDrop).toBe(atRest);\n> 179 |     expect(postDrop).toEqual(expected);\n      |    ^ Duplicate Assert\n  180 |   });\n  181 |\n  182 |   it('should cut animation in a list that was not animating', () => {","start":{"line":179,"column":4,"index":5159}},{"frame":"  196 |       shouldAnimatePlaceholder: false,\n  197 |     };\n> 198 |     expect(postDrop).toBe(atRest);\n      |    ^ Duplicate Assert\n  199 |     expect(postDrop).toEqual(expected);\n  200 |   });\n  201 | });","start":{"line":198,"column":4,"index":5769}},{"frame":"  197 |     };\n  198 |     expect(postDrop).toBe(atRest);\n> 199 |     expect(postDrop).toEqual(expected);\n      |    ^ Duplicate Assert\n  200 |   });\n  201 | });\n  202 |","start":{"line":199,"column":4,"index":5804}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":6.173,"halstead":{"bugs":1.393,"difficulty":21.101,"effort":88202.932,"length":667,"time":4900.163,"vocabulary":77,"volume":4179.947,"operands":{"distinct":69,"total":364,"identifiers":["preset","getPreset","state","getStatePreset","isOverHomeMapProps","MapProps","placeholder","inHome1","shouldAnimatePlaceholder","false","snapshot","isDraggingOver","true","draggingOverWith","descriptor","id","draggingFromThisWith","isUsingPlaceholder","useClone","null","describe","\"was over - reordering\"","it","\"should immediately remove a placeholder\"","ownProps","OwnProps","getOwnProps","home","selector","Selector","makeMapStateToProps","atRest","idle","expect","toBe","dropping","DropAnimatingState","dropAnimating","whileDropping","toEqual","IdleState","phase","\"IDLE\"","completed","shouldFlush","postDrop","\"was over - merging\"","\"should animate a placeholder closed\"","combine","Combine","draggableId","inHome2","droppableId","base","combineImpact","DragImpact","impact","at","type","\"COMBINE\"","result","destination","expected","\"was not over\"","foreign","\"flushed\"","\"should cut an animation\"","withFlush","\"should cut animation in a list that was not animating\""]},"operators":{"distinct":8,"total":303,"identifiers":["const","=","()","{}",":",".","function=>","... (spread)"]}},"paramCount":0,"sloc":{"logical":162,"physical":202}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":7,"path":"../../../../src/types","type":"esm"},{"line":12,"path":"../../../../src/view/droppable/droppable-types","type":"esm"},{"line":13,"path":"../../../../src/view/droppable/connected-droppable","type":"esm"},{"line":14,"path":"../../../util/dimension","type":"esm"},{"line":15,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":16,"path":"./util/get-own-props","type":"esm"}],"errors":[],"lineEnd":202,"lineStart":1,"maintainability":94.813,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should immediately remove a placeholder\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":25},"errors":[],"lineEnd":57,"lineStart":33,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.165,"difficulty":5.226,"effort":2586.242,"length":95,"time":143.68,"vocabulary":37,"volume":494.898,"operands":{"distinct":31,"total":54,"identifiers":["ownProps","OwnProps","getOwnProps","preset","home","selector","Selector","makeMapStateToProps","atRest","MapProps","state","idle","expect","shouldAnimatePlaceholder","toBe","false","dropping","DropAnimatingState","dropAnimating","inHome1","descriptor","id","whileDropping","toEqual","isOverHomeMapProps","IdleState","phase","\"IDLE\"","completed","shouldFlush","postDrop"]},"operators":{"distinct":6,"total":41,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":22,"physical":23},"errors":[],"lineEnd":56,"lineStart":34,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should animate a placeholder closed\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":49},"errors":[],"lineEnd":107,"lineStart":59,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.309,"difficulty":6.696,"effort":6213.05,"length":162,"time":345.169,"vocabulary":53,"volume":927.923,"operands":{"distinct":46,"total":88,"identifiers":["ownProps","OwnProps","getOwnProps","preset","home","selector","Selector","makeMapStateToProps","atRest","MapProps","state","idle","combine","Combine","draggableId","inHome2","descriptor","id","droppableId","base","DropAnimatingState","dropAnimating","combineImpact","DragImpact","completed","impact","at","type","\"COMBINE\"","dropping","result","destination","null","whileDropping","expect","toEqual","isOverHomeMapProps","IdleState","phase","\"IDLE\"","shouldFlush","false","postDrop","expected","shouldAnimatePlaceholder","true"]},"operators":{"distinct":7,"total":74,"identifiers":["const","=","()",".","{}",":","... (spread)"]}},"paramCount":0,"sloc":{"logical":35,"physical":47},"errors":[],"lineEnd":106,"lineStart":60,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should animate a placeholder closed\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":25},"errors":[],"lineEnd":133,"lineStart":109,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.153,"difficulty":6.034,"effort":2776.606,"length":89,"time":154.256,"vocabulary":36,"volume":460.123,"operands":{"distinct":29,"total":50,"identifiers":["ownProps","OwnProps","getOwnProps","preset","foreign","selector","Selector","makeMapStateToProps","atRest","MapProps","state","idle","dropping","DropAnimatingState","dropAnimating","whileDropping","expected","shouldAnimatePlaceholder","true","expect","toEqual","IdleState","phase","\"IDLE\"","completed","shouldFlush","false","postDrop","toBe"]},"operators":{"distinct":7,"total":39,"identifiers":["const","=","()",".","{}","... (spread)",":"]}},"paramCount":0,"sloc":{"logical":22,"physical":23},"errors":[],"lineEnd":132,"lineStart":110,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should cut an animation\"","\"should cut animation in a list that was not animating\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":67},"errors":[],"lineEnd":201,"lineStart":135,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.03,"halstead":{"bugs":0.294,"difficulty":6.315,"effort":5570.652,"length":154,"time":309.481,"vocabulary":53,"volume":882.1,"operands":{"distinct":46,"total":83,"identifiers":["ownProps","OwnProps","getOwnProps","preset","home","selector","Selector","makeMapStateToProps","atRest","MapProps","state","idle","combine","Combine","draggableId","inHome2","descriptor","id","droppableId","base","DropAnimatingState","dropAnimating","combineImpact","DragImpact","completed","impact","at","type","\"COMBINE\"","dropping","result","destination","null","withFlush","IdleState","phase","\"IDLE\"","shouldFlush","true","postDrop","expected","shouldAnimatePlaceholder","false","expect","toBe","toEqual"]},"operators":{"distinct":7,"total":71,"identifiers":["const","=","()",".","{}",":","... (spread)"]}},"paramCount":0,"sloc":{"logical":33,"physical":45},"errors":[],"lineEnd":180,"lineStart":136,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.129,"difficulty":5.444,"effort":2105.079,"length":76,"time":116.949,"vocabulary":34,"volume":386.647,"operands":{"distinct":27,"total":42,"identifiers":["ownProps","OwnProps","getOwnProps","preset","foreign","selector","Selector","makeMapStateToProps","atRest","MapProps","state","idle","withFlush","IdleState","phase","\"IDLE\"","completed","dropAnimating","shouldFlush","true","postDrop","expected","shouldAnimatePlaceholder","false","expect","toBe","toEqual"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()",".","{}",":","... (spread)"]}},"paramCount":0,"sloc":{"logical":19,"physical":19},"errors":[],"lineEnd":200,"lineStart":182,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.617,"halstead":{"bugs":0.139,"difficulty":2.11,"effort":8820.293,"length":66.7,"time":490.016,"vocabulary":7.7,"volume":417.995,"operands":{"distinct":6.9,"total":36.4},"operators":{"distinct":0.8,"total":30.3}},"paramCount":0,"sloc":{"logical":16.2,"physical":20.2}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":21.694,"halstead":{"bugs":0.118,"difficulty":3.783,"effort":2144.488,"length":66.222,"time":119.138,"vocabulary":25.556,"volume":354.919,"operands":{"distinct":20.889,"total":36.333},"operators":{"distinct":4.667,"total":29.889}},"paramCount":0,"sloc":{"logical":15.667,"physical":35.889}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/connected-droppable/dropping.spec.js","testCases":5,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  42 |       const whileDropping: MapProps = selector(state.dropAnimating(), ownProps);\n  43 |\n> 44 |       expect(whileDragging).toEqual(isOverMapProps);\n     |      ^ Duplicate Assert\n  45 |       // referential equality: memoization check\n  46 |       expect(whileDragging).toBe(whileDropping);\n  47 |     });","start":{"line":44,"column":6,"index":1511}},{"frame":"  44 |       expect(whileDragging).toEqual(isOverMapProps);\n  45 |       // referential equality: memoization check\n> 46 |       expect(whileDragging).toBe(whileDropping);\n     |      ^ Duplicate Assert\n  47 |     });\n  48 |\n  49 |     it('should not break memoization from a combine', () => {","start":{"line":46,"column":6,"index":1613}},{"frame":"  75 |       const whileDropping: MapProps = selector(droppingState, ownProps);\n  76 |\n> 77 |       expect(whileDragging).toEqual(isOverMapProps);\n     |      ^ Duplicate Assert\n  78 |       // referential equality: memoization check\n  79 |       expect(whileDragging).toBe(whileDropping);\n  80 |     });","start":{"line":77,"column":6,"index":2557}},{"frame":"  77 |       expect(whileDragging).toEqual(isOverMapProps);\n  78 |       // referential equality: memoization check\n> 79 |       expect(whileDragging).toBe(whileDropping);\n     |      ^ Duplicate Assert\n  80 |     });\n  81 |\n  82 |     it('should use the completed.result and not the completed.impact for determining if over', () => {","start":{"line":79,"column":6,"index":2659}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":6.081,"halstead":{"bugs":1.233,"difficulty":17.444,"effort":64515.276,"length":585,"time":3584.182,"vocabulary":80,"volume":3698.328,"operands":{"distinct":72,"total":314,"identifiers":["state","getStatePreset","preset","describe","\"home list\"","\"was being dragged over\"","isOverMapProps","MapProps","placeholder","inHome1","shouldAnimatePlaceholder","false","snapshot","isDraggingOver","true","draggingOverWith","descriptor","id","draggingFromThisWith","isUsingPlaceholder","useClone","null","it","\"should not break memoization from a reorder\"","ownProps","OwnProps","getOwnProps","home","selector","Selector","makeMapStateToProps","whileDragging","dragging","whileDropping","dropAnimating","expect","toEqual","toBe","\"should not break memoization from a combine\"","combine","DragImpact","impact","at","type","\"COMBINE\"","draggableId","inHome2","droppableId","base","DropAnimatingState","droppingState","completed","withImpact","\"should use the completed.result and not the completed.impact for determining if over\"","stateWhenDropping","userCancel","tryGetDestination","toBeTruthy","result","destination","expected","\"was not being dragged over\"","\"should maintain a placeholder and not break memoization\"","isHomeButNotOver","DraggingState","cloneImpact","noImpact","first","\"should return the dragging props for every dragging phase for a foreign list\"","foreign","defaultProps","idle"]},"operators":{"distinct":8,"total":271,"identifiers":["const","=","()",".","function=>","{}",":","... (spread)"]}},"paramCount":0,"sloc":{"logical":148,"physical":174}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":6,"path":"../../../../src/types","type":"esm"},{"line":11,"path":"../../../../src/view/droppable/droppable-types","type":"esm"},{"line":12,"path":"../../../../src/view/droppable/connected-droppable","type":"esm"},{"line":13,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":14,"path":"./util/get-own-props","type":"esm"},{"line":15,"path":"../../../util/dragging-state","type":"esm"},{"line":16,"path":"../../../../src/state/no-impact","type":"esm"},{"line":17,"path":"../../../util/clone-impact","type":"esm"},{"line":18,"path":"../../../../src/state/get-impact-location","type":"esm"}],"errors":[],"lineEnd":174,"lineStart":1,"maintainability":95.279,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"was being dragged over\"","\"was not being dragged over\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":134},"errors":[],"lineEnd":156,"lineStart":23,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.091,"difficulty":5.167,"effort":1415.766,"length":57,"time":78.654,"vocabulary":28,"volume":274.019,"operands":{"distinct":21,"total":31,"identifiers":["isOverMapProps","MapProps","placeholder","preset","inHome1","shouldAnimatePlaceholder","false","snapshot","isDraggingOver","true","draggingOverWith","descriptor","id","draggingFromThisWith","isUsingPlaceholder","useClone","null","it","\"should not break memoization from a reorder\"","\"should not break memoization from a combine\"","\"should use the completed.result and not the completed.impact for determining if over\""]},"operators":{"distinct":7,"total":26,"identifiers":["const","=","{}",":",".","()","function=>"]}},"paramCount":0,"sloc":{"logical":15,"physical":89},"errors":[],"lineEnd":112,"lineStart":24,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.076,"difficulty":3.111,"effort":707.563,"length":51,"time":39.309,"vocabulary":22,"volume":227.431,"operands":{"distinct":18,"total":28,"identifiers":["ownProps","OwnProps","getOwnProps","preset","home","selector","Selector","makeMapStateToProps","whileDragging","MapProps","state","dragging","whileDropping","dropAnimating","expect","toEqual","isOverMapProps","toBe"]},"operators":{"distinct":4,"total":23,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":14,"physical":11},"errors":[],"lineEnd":47,"lineStart":37,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.205,"difficulty":6.176,"effort":3805.438,"length":115,"time":211.413,"vocabulary":41,"volume":616.118,"operands":{"distinct":34,"total":60,"identifiers":["ownProps","OwnProps","getOwnProps","preset","home","selector","Selector","makeMapStateToProps","combine","DragImpact","state","dragging","impact","at","type","\"COMBINE\"","draggableId","inHome2","descriptor","id","droppableId","base","DropAnimatingState","dropAnimating","droppingState","completed","whileDragging","MapProps","withImpact","whileDropping","expect","toEqual","isOverMapProps","toBe"]},"operators":{"distinct":7,"total":55,"identifiers":["const","=","()",".","{}","... (spread)",":"]}},"paramCount":0,"sloc":{"logical":26,"physical":32},"errors":[],"lineEnd":80,"lineStart":49,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.186,"difficulty":4.421,"effort":2461.916,"length":102,"time":136.773,"vocabulary":44,"volume":556.862,"operands":{"distinct":38,"total":56,"identifiers":["ownProps","OwnProps","getOwnProps","preset","home","selector","Selector","makeMapStateToProps","stateWhenDropping","DropAnimatingState","state","userCancel","expect","tryGetDestination","completed","impact","toBeTruthy","result","destination","toBe","null","whileDropping","MapProps","expected","placeholder","inHome1","shouldAnimatePlaceholder","false","snapshot","isUsingPlaceholder","true","draggingFromThisWith","descriptor","id","isDraggingOver","draggingOverWith","useClone","toEqual"]},"operators":{"distinct":6,"total":46,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":24,"physical":30},"errors":[],"lineEnd":111,"lineStart":82,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should maintain a placeholder and not break memoization\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":42},"errors":[],"lineEnd":155,"lineStart":114,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.281,"difficulty":6.75,"effort":5684.894,"length":150,"time":315.827,"vocabulary":49,"volume":842.206,"operands":{"distinct":42,"total":81,"identifiers":["ownProps","OwnProps","getOwnProps","preset","home","selector","Selector","makeMapStateToProps","isHomeButNotOver","MapProps","placeholder","inHome1","shouldAnimatePlaceholder","false","snapshot","isDraggingOver","draggingOverWith","null","draggingFromThisWith","descriptor","id","isUsingPlaceholder","true","useClone","whileDragging","DraggingState","state","dragging","impact","cloneImpact","noImpact","base","DropAnimatingState","dropAnimating","whileDropping","completed","result","destination","first","expect","toEqual","toBe"]},"operators":{"distinct":7,"total":69,"identifiers":["const","=","()",".","{}",":","... (spread)"]}},"paramCount":0,"sloc":{"logical":35,"physical":40},"errors":[],"lineEnd":154,"lineStart":115,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.127,"difficulty":7.167,"effort":2721.764,"length":79,"time":151.209,"vocabulary":28,"volume":379.781,"operands":{"distinct":21,"total":43,"identifiers":["ownProps","OwnProps","getOwnProps","preset","foreign","selector","Selector","makeMapStateToProps","defaultProps","MapProps","state","idle","dragging","expected","shouldAnimatePlaceholder","true","expect","toEqual","dropAnimating","toBe","userCancel"]},"operators":{"distinct":7,"total":36,"identifiers":["const","=","()",".","{}","... (spread)",":"]}},"paramCount":0,"sloc":{"logical":21,"physical":16},"errors":[],"lineEnd":173,"lineStart":158,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.676,"halstead":{"bugs":0.137,"difficulty":1.938,"effort":7168.364,"length":65,"time":398.242,"vocabulary":8.889,"volume":410.925,"operands":{"distinct":8,"total":34.889},"operators":{"distinct":0.889,"total":30.111}},"paramCount":0,"sloc":{"logical":16.444,"physical":19.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":13.055,"halstead":{"bugs":0.122,"difficulty":4.391,"effort":2103.764,"length":70.75,"time":116.876,"vocabulary":27.625,"volume":365.374,"operands":{"distinct":22.375,"total":38.125},"operators":{"distinct":5.25,"total":32.625}},"paramCount":0,"sloc":{"logical":17.625,"physical":49.25}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/connected-droppable/dragging.spec.js","testCases":10,"smells":12,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  130 |       expect(first).toEqual(isHomeButNotOver);\n  131 |\n> 132 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(\n      |      ^ Duplicate Assert\n  133 |         first,\n  134 |       );\n  135 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(","start":{"line":132,"column":6,"index":4349}},{"frame":"  130 |       expect(first).toEqual(isHomeButNotOver);\n  131 |\n> 132 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(\n      |      ^ Duplicate Assert\n  133 |         first,\n  134 |       );\n  135 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(","start":{"line":132,"column":6,"index":4349}},{"frame":"  133 |         first,\n  134 |       );\n> 135 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(\n      |      ^ Duplicate Assert\n  136 |         first,\n  137 |       );\n  138 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(","start":{"line":135,"column":6,"index":4448}},{"frame":"  133 |         first,\n  134 |       );\n> 135 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(\n      |      ^ Duplicate Assert\n  136 |         first,\n  137 |       );\n  138 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(","start":{"line":135,"column":6,"index":4448}},{"frame":"  136 |         first,\n  137 |       );\n> 138 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(\n      |      ^ Duplicate Assert\n  139 |         first,\n  140 |       );\n  141 |       const combine: Combine = {","start":{"line":138,"column":6,"index":4547}},{"frame":"  136 |         first,\n  137 |       );\n> 138 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(\n      |      ^ Duplicate Assert\n  139 |         first,\n  140 |       );\n  141 |       const combine: Combine = {","start":{"line":138,"column":6,"index":4547}},{"frame":"  255 |       expect(first).toEqual(isNotOver);\n  256 |\n> 257 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(\n      |      ^ Duplicate Assert\n  258 |         first,\n  259 |       );\n  260 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(","start":{"line":257,"column":6,"index":8397}},{"frame":"  255 |       expect(first).toEqual(isNotOver);\n  256 |\n> 257 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(\n      |      ^ Duplicate Assert\n  258 |         first,\n  259 |       );\n  260 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(","start":{"line":257,"column":6,"index":8397}},{"frame":"  258 |         first,\n  259 |       );\n> 260 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(\n      |      ^ Duplicate Assert\n  261 |         first,\n  262 |       );\n  263 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(","start":{"line":260,"column":6,"index":8496}},{"frame":"  258 |         first,\n  259 |       );\n> 260 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(\n      |      ^ Duplicate Assert\n  261 |         first,\n  262 |       );\n  263 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(","start":{"line":260,"column":6,"index":8496}},{"frame":"  261 |         first,\n  262 |       );\n> 263 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(\n      |      ^ Duplicate Assert\n  264 |         first,\n  265 |       );\n  266 |     });","start":{"line":263,"column":6,"index":8595}},{"frame":"  261 |         first,\n  262 |       );\n> 263 |       expect(selector(move(getNoWhere(), { x: 1, y: 1 }), ownProps)).toBe(\n      |      ^ Duplicate Assert\n  264 |         first,\n  265 |       );\n  266 |     });","start":{"line":263,"column":6,"index":8595}}]}],"metrics":{"aggregate":{"cyclomatic":19,"cyclomaticDensity":6.762,"halstead":{"bugs":2.351,"difficulty":29.1,"effort":205260.791,"length":1064,"time":11403.377,"vocabulary":99,"volume":7053.635,"operands":{"distinct":90,"total":582,"identifiers":["preset","getPreset","state","getStatePreset","describe","\"home list\"","ownProps","OwnProps","getOwnProps","home","isOverMapProps","MapProps","placeholder","inHome1","shouldAnimatePlaceholder","false","snapshot","isDraggingOver","true","draggingOverWith","descriptor","id","draggingFromThisWith","isUsingPlaceholder","useClone","null","\"is dragging over\"","it","\"should indicate that it is being dragged over\"","selector","Selector","makeMapStateToProps","props","dragging","expect","toEqual","\"should indicate that it is being combined over\"","base","IsDraggingState","combine","Combine","draggableId","inHome2","droppableId","withCombine","withImpact","withCombineImpact","impact","\"should not break memoization between moves\"","DraggingState","first","move","x","1","y","second","0","third","fourth","props1","props2","props3","props4","toBe","\"is not dragging over\"","getNoWhere","noImpact","isHomeButNotOver","\"should indicate that it is not being dragged over\"","inForeign1","foreign","\"foreign list\"","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","overForeign","DragImpact","displaced","emptyGroups","at","type","\"REORDER\"","destination","index","isOverForeignMapProps","current","isNotOver","restingProps"]},"operators":{"distinct":9,"total":482,"identifiers":["const","=","()","function=>",".","{}",":","- (prefix)","... (spread)"]}},"paramCount":0,"sloc":{"logical":281,"physical":269}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":3,"path":"../../../../src/view/droppable/connected-droppable","type":"esm"},{"line":9,"path":"../../../../src/types","type":"esm"},{"line":14,"path":"../../../../src/view/droppable/droppable-types","type":"esm"},{"line":15,"path":"./util/get-own-props","type":"esm"},{"line":16,"path":"../../../util/dimension","type":"esm"},{"line":21,"path":"../../../util/dragging-state","type":"esm"},{"line":22,"path":"../../../../src/state/no-impact","type":"esm"},{"line":23,"path":"../../../../src/state/get-displaced-by","type":"esm"},{"line":24,"path":"./util/with-combine-impact","type":"esm"},{"line":25,"path":"./util/resting-props","type":"esm"}],"errors":[],"lineEnd":269,"lineStart":1,"maintainability":95.595,"methods":[{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.102,"difficulty":4.958,"effort":1523.003,"length":62,"time":84.611,"vocabulary":31,"volume":307.16,"operands":{"distinct":24,"total":34,"identifiers":["ownProps","OwnProps","getOwnProps","preset","home","isOverMapProps","MapProps","placeholder","inHome1","shouldAnimatePlaceholder","false","snapshot","isDraggingOver","true","draggingOverWith","descriptor","id","draggingFromThisWith","isUsingPlaceholder","useClone","null","describe","\"is dragging over\"","\"is not dragging over\""]},"operators":{"distinct":7,"total":28,"identifiers":["const","=","()",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":15,"physical":123},"errors":[],"lineEnd":152,"lineStart":30,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should indicate that it is being dragged over\"","\"should indicate that it is being combined over\"","\"should not break memoization between moves\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":56},"errors":[],"lineEnd":99,"lineStart":44,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.044,"difficulty":2.267,"effort":298.488,"length":31,"time":16.583,"vocabulary":19,"volume":131.686,"operands":{"distinct":15,"total":17,"identifiers":["selector","Selector","makeMapStateToProps","props","MapProps","state","dragging","preset","inHome1","descriptor","id","ownProps","expect","toEqual","isOverMapProps"]},"operators":{"distinct":4,"total":14,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":9},"errors":[],"lineEnd":53,"lineStart":45,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.121,"difficulty":4.444,"effort":1614.206,"length":72,"time":89.678,"vocabulary":33,"volume":363.196,"operands":{"distinct":27,"total":40,"identifiers":["selector","Selector","makeMapStateToProps","base","IsDraggingState","state","dragging","preset","inHome1","descriptor","id","combine","Combine","draggableId","inHome2","droppableId","home","withCombine","withImpact","withCombineImpact","impact","props","MapProps","ownProps","expect","toEqual","isOverMapProps"]},"operators":{"distinct":6,"total":32,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":14,"physical":17},"errors":[],"lineEnd":71,"lineStart":55,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.296,"difficulty":7.962,"effort":7076.546,"length":160,"time":393.141,"vocabulary":47,"volume":888.734,"operands":{"distinct":40,"total":91,"identifiers":["selector","Selector","makeMapStateToProps","base","DraggingState","state","dragging","preset","inHome1","descriptor","id","first","IsDraggingState","move","x","1","y","second","0","third","combine","Combine","draggableId","inHome2","droppableId","home","fourth","withImpact","withCombineImpact","impact","props1","MapProps","ownProps","props2","props3","props4","expect","toEqual","isOverMapProps","toBe"]},"operators":{"distinct":7,"total":69,"identifiers":["const","=","()",".","{}",":","- (prefix)"]}},"paramCount":0,"sloc":{"logical":38,"physical":26},"errors":[],"lineEnd":98,"lineStart":73,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.082,"difficulty":4.5,"effort":1103.288,"length":51,"time":61.294,"vocabulary":28,"volume":245.175,"operands":{"distinct":21,"total":27,"identifiers":["getNoWhere","isHomeButNotOver","MapProps","placeholder","preset","inHome1","shouldAnimatePlaceholder","false","snapshot","isDraggingOver","draggingOverWith","null","draggingFromThisWith","descriptor","id","isUsingPlaceholder","true","useClone","it","\"should indicate that it is not being dragged over\"","\"should not break memoization between moves\""]},"operators":{"distinct":7,"total":24,"identifiers":["const","=","function=>","{}",":",".","()"]}},"paramCount":0,"sloc":{"logical":15,"physical":51},"errors":[],"lineEnd":151,"lineStart":101,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.024,"difficulty":2.5,"effort":180.849,"length":19,"time":10.047,"vocabulary":14,"volume":72.34,"operands":{"distinct":9,"total":9,"identifiers":["DraggingState","state","dragging","preset","inHome1","descriptor","id","impact","noImpact"]},"operators":{"distinct":5,"total":10,"identifiers":["{}","... (spread)","()",".",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":105,"lineStart":102,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.028,"difficulty":2.4,"effort":201.028,"length":22,"time":11.168,"vocabulary":14,"volume":83.762,"operands":{"distinct":10,"total":12,"identifiers":["selector","Selector","makeMapStateToProps","first","MapProps","getNoWhere","ownProps","expect","toEqual","isHomeButNotOver"]},"operators":{"distinct":4,"total":10,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":6},"errors":[],"lineEnd":124,"lineStart":119,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.233,"difficulty":7.065,"effort":4931.504,"length":134,"time":273.972,"vocabulary":37,"volume":698.067,"operands":{"distinct":31,"total":73,"identifiers":["selector","Selector","makeMapStateToProps","first","MapProps","getNoWhere","ownProps","expect","toEqual","isHomeButNotOver","move","x","1","y","toBe","combine","Combine","draggableId","preset","inForeign1","descriptor","id","droppableId","foreign","withCombine","IsDraggingState","withImpact","state","dragging","withCombineImpact","impact"]},"operators":{"distinct":6,"total":61,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":39,"physical":25},"errors":[],"lineEnd":150,"lineStart":126,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.021,"difficulty":2.813,"effort":176.927,"length":17,"time":9.829,"vocabulary":13,"volume":62.907,"operands":{"distinct":8,"total":9,"identifiers":["ownProps","OwnProps","getOwnProps","preset","foreign","describe","\"is dragging over\"","\"is not dragging over\""]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":115},"errors":[],"lineEnd":268,"lineStart":154,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.178,"difficulty":5.108,"effort":2732.962,"length":98,"time":151.831,"vocabulary":44,"volume":535.024,"operands":{"distinct":37,"total":54,"identifiers":["displacedBy","DisplacedBy","getDisplacedBy","preset","foreign","axis","inHome1","displaceBy","overForeign","DragImpact","displaced","emptyGroups","at","type","\"REORDER\"","destination","index","0","droppableId","descriptor","id","isOverForeignMapProps","MapProps","placeholder","shouldAnimatePlaceholder","true","snapshot","isDraggingOver","draggingFromThisWith","null","draggingOverWith","isUsingPlaceholder","useClone","it","\"should indicate that it is being dragged over\"","\"should indicate that it is being combined over\"","\"should not break memoization between moves\""]},"operators":{"distinct":7,"total":44,"identifiers":["const","=","()",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":25,"physical":75},"errors":[],"lineEnd":231,"lineStart":157,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.059,"difficulty":2.316,"effort":408.549,"length":39,"time":22.697,"vocabulary":23,"volume":176.419,"operands":{"distinct":19,"total":22,"identifiers":["selector","Selector","makeMapStateToProps","current","IsDraggingState","withImpact","state","dragging","preset","inHome1","descriptor","id","overForeign","props","MapProps","ownProps","expect","toEqual","isOverForeignMapProps"]},"operators":{"distinct":4,"total":17,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":10},"errors":[],"lineEnd":195,"lineStart":186,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.121,"difficulty":4.444,"effort":1614.206,"length":72,"time":89.678,"vocabulary":33,"volume":363.196,"operands":{"distinct":27,"total":40,"identifiers":["selector","Selector","makeMapStateToProps","base","IsDraggingState","state","dragging","preset","inHome1","descriptor","id","combine","Combine","draggableId","inForeign1","droppableId","foreign","withCombine","withImpact","withCombineImpact","impact","props","MapProps","ownProps","expect","toEqual","isOverForeignMapProps"]},"operators":{"distinct":6,"total":32,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":14,"physical":16},"errors":[],"lineEnd":211,"lineStart":196,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.194,"difficulty":7.467,"effort":4356.492,"length":112,"time":242.027,"vocabulary":37,"volume":583.459,"operands":{"distinct":30,"total":64,"identifiers":["selector","Selector","makeMapStateToProps","base","IsDraggingState","withImpact","state","dragging","preset","inHome1","descriptor","id","overForeign","first","move","x","1","y","second","0","third","props1","MapProps","ownProps","props2","props3","expect","toEqual","isOverForeignMapProps","toBe"]},"operators":{"distinct":7,"total":48,"identifiers":["const","=","()",".","{}",":","- (prefix)"]}},"paramCount":0,"sloc":{"logical":29,"physical":18},"errors":[],"lineEnd":230,"lineStart":213,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.029,"difficulty":3.889,"effort":342.222,"length":22,"time":19.012,"vocabulary":16,"volume":88,"operands":{"distinct":9,"total":10,"identifiers":["getNoWhere","isNotOver","MapProps","restingProps","shouldAnimatePlaceholder","true","it","\"should indicate that it is not being dragged over\"","\"should not break memoization between moves\""]},"operators":{"distinct":7,"total":12,"identifiers":["const","=","function=>","{}","... (spread)",":","()"]}},"paramCount":0,"sloc":{"logical":8,"physical":35},"errors":[],"lineEnd":267,"lineStart":233,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.024,"difficulty":2.5,"effort":180.849,"length":19,"time":10.047,"vocabulary":14,"volume":72.34,"operands":{"distinct":9,"total":9,"identifiers":["DraggingState","state","dragging","preset","inHome1","descriptor","id","impact","noImpact"]},"operators":{"distinct":5,"total":10,"identifiers":["{}","... (spread)","()",".",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":237,"lineStart":234,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.028,"difficulty":2.4,"effort":201.028,"length":22,"time":11.168,"vocabulary":14,"volume":83.762,"operands":{"distinct":10,"total":12,"identifiers":["selector","Selector","makeMapStateToProps","first","MapProps","getNoWhere","ownProps","expect","toEqual","isNotOver"]},"operators":{"distinct":4,"total":10,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":6},"errors":[],"lineEnd":249,"lineStart":244,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.12,"difficulty":9,"effort":3241.53,"length":82,"time":180.085,"vocabulary":21,"volume":360.17,"operands":{"distinct":15,"total":45,"identifiers":["selector","Selector","makeMapStateToProps","first","MapProps","getNoWhere","ownProps","expect","toEqual","isNotOver","move","x","1","y","toBe"]},"operators":{"distinct":6,"total":37,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":28,"physical":16},"errors":[],"lineEnd":266,"lineStart":251,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.356,"halstead":{"bugs":0.124,"difficulty":1.532,"effort":10803.2,"length":56,"time":600.178,"vocabulary":5.211,"volume":371.244,"operands":{"distinct":4.737,"total":30.632},"operators":{"distinct":0.474,"total":25.368}},"paramCount":0,"sloc":{"logical":14.789,"physical":14.158}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":11.683,"halstead":{"bugs":0.095,"difficulty":4.307,"effort":1679.456,"length":58.111,"time":93.303,"vocabulary":24.667,"volume":285.912,"operands":{"distinct":19.167,"total":31.889},"operators":{"distinct":5.5,"total":26.222}},"paramCount":0,"sloc":{"logical":15.167,"physical":34}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/connected-droppable/disabled.spec.js","testCases":3,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  54 |\n  55 |     // memoization\n> 56 |     expect(selector(getNoWhere(), ownProps)).toBe(result);\n     |    ^ Duplicate Assert\n  57 |     expect(selector(getNoWhere(), ownProps)).toBe(result);\n  58 |   });\n  59 | });","start":{"line":56,"column":4,"index":1959}},{"frame":"  54 |\n  55 |     // memoization\n> 56 |     expect(selector(getNoWhere(), ownProps)).toBe(result);\n     |    ^ Duplicate Assert\n  57 |     expect(selector(getNoWhere(), ownProps)).toBe(result);\n  58 |   });\n  59 | });","start":{"line":56,"column":4,"index":1959}},{"frame":"  55 |     // memoization\n  56 |     expect(selector(getNoWhere(), ownProps)).toBe(result);\n> 57 |     expect(selector(getNoWhere(), ownProps)).toBe(result);\n     |    ^ Duplicate Assert\n  58 |   });\n  59 | });\n  60 |","start":{"line":57,"column":4,"index":2018}},{"frame":"  55 |     // memoization\n  56 |     expect(selector(getNoWhere(), ownProps)).toBe(result);\n> 57 |     expect(selector(getNoWhere(), ownProps)).toBe(result);\n     |    ^ Duplicate Assert\n  58 |   });\n  59 | });\n  60 |","start":{"line":57,"column":4,"index":2018}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":12.329,"halstead":{"bugs":0.528,"difficulty":12.368,"effort":19582.294,"length":261,"time":1087.905,"vocabulary":67,"volume":1583.249,"operands":{"distinct":57,"total":141,"identifiers":["preset","getPreset","state","getStatePreset","describe","\"home list\"","ownProps","OwnProps","getOwnProps","home","isDropDisabled","true","selector","Selector","makeMapStateToProps","it","\"should have the expected disabled props while resting\"","defaultDisabledProps","MapProps","idle","expect","toEqual","resting","\"should display a placeholder even when disabled\"","base","DraggingState","dragging","inHome1","descriptor","id","getNoWhere","dimensions","patchDimensionMap","disableDroppable","impact","cloneImpact","noImpact","isHomeButNotOver","placeholder","shouldAnimatePlaceholder","false","snapshot","isDraggingOver","draggingOverWith","null","draggingFromThisWith","isUsingPlaceholder","useClone","result","toBe","\"in foreign list\"","foreign","allPhases","forEach","current","phase","should return disabled map props when in phase "]},"operators":{"distinct":10,"total":120,"identifiers":["const","=","()","function=>",".","{}","... (spread)",":","``","${}"]}},"paramCount":1,"sloc":{"logical":73,"physical":80}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":3,"path":"../../../../src/view/droppable/connected-droppable","type":"esm"},{"line":4,"path":"../../../../src/types","type":"esm"},{"line":9,"path":"../../../../src/view/droppable/droppable-types","type":"esm"},{"line":10,"path":"./util/get-own-props","type":"esm"},{"line":11,"path":"../../../util/dimension","type":"esm"},{"line":12,"path":"./util/resting-props","type":"esm"},{"line":13,"path":"../../../../src/state/no-impact","type":"esm"},{"line":14,"path":"../../../util/clone-impact","type":"esm"},{"line":15,"path":"../../../../src/state/patch-dimension-map","type":"esm"}],"errors":[],"lineEnd":80,"lineStart":1,"maintainability":110.806,"methods":[{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.039,"difficulty":2.885,"effort":336.802,"length":28,"time":18.711,"vocabulary":18,"volume":116.758,"operands":{"distinct":13,"total":15,"identifiers":["ownProps","OwnProps","getOwnProps","preset","home","isDropDisabled","true","selector","Selector","makeMapStateToProps","it","\"should have the expected disabled props while resting\"","\"should display a placeholder even when disabled\""]},"operators":{"distinct":5,"total":13,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":40},"errors":[],"lineEnd":59,"lineStart":20,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.021,"difficulty":2.222,"effort":139.794,"length":17,"time":7.766,"vocabulary":13,"volume":62.907,"operands":{"distinct":9,"total":10,"identifiers":["defaultDisabledProps","MapProps","selector","state","idle","ownProps","expect","toEqual","resting"]},"operators":{"distinct":4,"total":7,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":28,"lineStart":25,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.164,"difficulty":6.5,"effort":3200.673,"length":96,"time":177.815,"vocabulary":35,"volume":492.411,"operands":{"distinct":28,"total":52,"identifiers":["base","DraggingState","state","dragging","preset","inHome1","descriptor","id","getNoWhere","isHomeButNotOver","MapProps","placeholder","shouldAnimatePlaceholder","false","snapshot","isDraggingOver","draggingOverWith","null","draggingFromThisWith","isUsingPlaceholder","true","useClone","result","selector","ownProps","expect","toEqual","toBe"]},"operators":{"distinct":7,"total":44,"identifiers":["const","=","()",".","function=>","{}",":"]}},"paramCount":0,"sloc":{"logical":26,"physical":29},"errors":[],"lineEnd":58,"lineStart":30,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":3,"effort":246.134,"length":21,"time":13.674,"vocabulary":15,"volume":82.045,"operands":{"distinct":10,"total":12,"identifiers":["DraggingState","base","dimensions","patchDimensionMap","disableDroppable","preset","home","impact","cloneImpact","noImpact"]},"operators":{"distinct":5,"total":9,"identifiers":["{}","... (spread)",":","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":8},"errors":[],"lineEnd":39,"lineStart":32,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.079,"difficulty":3.068,"effort":729.443,"length":50,"time":40.525,"vocabulary":27,"volume":237.744,"operands":{"distinct":22,"total":27,"identifiers":["ownProps","OwnProps","getOwnProps","preset","foreign","isDropDisabled","true","selector","Selector","makeMapStateToProps","defaultDisabledProps","MapProps","state","idle","it","\"should have the expected disabled props while resting\"","allPhases","inHome1","descriptor","id","forEach","current"]},"operators":{"distinct":5,"total":23,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":19},"errors":[],"lineEnd":79,"lineStart":61,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["expect","defaultDisabledProps","toEqual","resting"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":69,"lineStart":67,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["it","current","phase","should return disabled map props when in phase "]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":7},"errors":[],"lineEnd":78,"lineStart":72,"name":"<anon method-7>","paramNames":["current"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.018,"difficulty":2.25,"effort":120.992,"length":15,"time":6.722,"vocabulary":12,"volume":53.774,"operands":{"distinct":8,"total":9,"identifiers":["result","MapProps","selector","current","ownProps","expect","toBe","defaultDisabledProps"]},"operators":{"distinct":4,"total":6,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":77,"lineStart":73,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.37,"halstead":{"bugs":0.059,"difficulty":1.374,"effort":2175.81,"length":29,"time":120.878,"vocabulary":7.444,"volume":175.917,"operands":{"distinct":6.333,"total":15.667},"operators":{"distinct":1.111,"total":13.333}},"paramCount":0.111,"sloc":{"logical":8.111,"physical":8.889}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":23.745,"halstead":{"bugs":0.046,"difficulty":2.928,"effort":607.907,"length":30.375,"time":33.773,"vocabulary":16.875,"volume":136.533,"operands":{"distinct":12.25,"total":16.625},"operators":{"distinct":4.625,"total":13.75}},"paramCount":0.125,"sloc":{"logical":8.125,"physical":14.375}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/connected-draggable/something-else-is-dragging.spec.js","testCases":9,"smells":12,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  191 |         expect(first).toEqual(expected);\n  192 |\n> 193 |         expect(\n      |        ^ Duplicate Assert\n  194 |           selector(withImpact(current, cloneImpact(impact)), ownProps),\n  195 |         ).toBe(first);\n  196 |         expect(","start":{"line":193,"column":8,"index":6328}},{"frame":"  191 |         expect(first).toEqual(expected);\n  192 |\n> 193 |         expect(\n      |        ^ Duplicate Assert\n  194 |           selector(withImpact(current, cloneImpact(impact)), ownProps),\n  195 |         ).toBe(first);\n  196 |         expect(","start":{"line":193,"column":8,"index":6328}},{"frame":"  194 |           selector(withImpact(current, cloneImpact(impact)), ownProps),\n  195 |         ).toBe(first);\n> 196 |         expect(\n      |        ^ Duplicate Assert\n  197 |           selector(withImpact(current, cloneImpact(impact)), ownProps),\n  198 |         ).toBe(first);\n  199 |         expect(","start":{"line":196,"column":8,"index":6439}},{"frame":"  194 |           selector(withImpact(current, cloneImpact(impact)), ownProps),\n  195 |         ).toBe(first);\n> 196 |         expect(\n      |        ^ Duplicate Assert\n  197 |           selector(withImpact(current, cloneImpact(impact)), ownProps),\n  198 |         ).toBe(first);\n  199 |         expect(","start":{"line":196,"column":8,"index":6439}},{"frame":"  197 |           selector(withImpact(current, cloneImpact(impact)), ownProps),\n  198 |         ).toBe(first);\n> 199 |         expect(\n      |        ^ Duplicate Assert\n  200 |           selector(withImpact(current, cloneImpact(impact)), ownProps),\n  201 |         ).toBe(first);\n  202 |       });","start":{"line":199,"column":8,"index":6550}},{"frame":"  197 |           selector(withImpact(current, cloneImpact(impact)), ownProps),\n  198 |         ).toBe(first);\n> 199 |         expect(\n      |        ^ Duplicate Assert\n  200 |           selector(withImpact(current, cloneImpact(impact)), ownProps),\n  201 |         ).toBe(first);\n  202 |       });","start":{"line":199,"column":8,"index":6550}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  79 |         const selector: Selector = makeMapStateToProps();\n  80 |         const impact: DragImpact = {\n> 81 |           displaced: getForcedDisplacement({\n     |                     ^ Lazy Test\n  82 |             visible: [\n  83 |               { dimension: preset.inHome2, shouldAnimate: false },\n  84 |               { dimension: preset.inHome3, shouldAnimate: false },","start":{"line":81,"column":21,"index":2571}},{"frame":"  111 |         const selector: Selector = makeMapStateToProps();\n  112 |         const impact: DragImpact = {\n> 113 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  114 |             visible: [\n  115 |               { dimension: preset.inHome2, shouldAnimate: true },\n  116 |               { dimension: preset.inHome3, shouldAnimate: true },","start":{"line":113,"column":21,"index":3641}},{"frame":"  145 |\n  146 |         const impact: DragImpact = {\n> 147 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  148 |             invisible: [preset.inHome2, preset.inHome3, preset.inHome4],\n  149 |           }),\n  150 |           displacedBy,","start":{"line":147,"column":21,"index":4812}},{"frame":"  163 |         const selector: Selector = makeMapStateToProps();\n  164 |         const impact: DragImpact = {\n> 165 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  166 |             visible: [\n  167 |               { dimension: preset.inHome2, shouldAnimate: true },\n  168 |               { dimension: preset.inHome3, shouldAnimate: true },","start":{"line":165,"column":21,"index":5457}},{"frame":"  205 |         const selector: Selector = makeMapStateToProps();\n  206 |         const impact: DragImpact = {\n> 207 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  208 |             visible: [\n  209 |               { dimension: preset.inHome2, shouldAnimate: false },\n  210 |               { dimension: preset.inHome3, shouldAnimate: false },","start":{"line":207,"column":21,"index":6870}},{"frame":"  257 |   const selector: Selector = makeMapStateToProps();\n  258 |   const impact: DragImpact = {\n> 259 |     displaced: getForcedDisplacement({\n      |               ^ Lazy Test\n  260 |       visible: [\n  261 |         { dimension: preset.inHome2, shouldAnimate: false },\n  262 |         { dimension: preset.inHome3, shouldAnimate: false },","start":{"line":259,"column":15,"index":8530}}]}],"metrics":{"aggregate":{"cyclomatic":13,"cyclomaticDensity":4.545,"halstead":{"bugs":2.207,"difficulty":32.103,"effort":212511.886,"length":990,"time":11806.216,"vocabulary":103,"volume":6619.636,"operands":{"distinct":92,"total":537,"identifiers":["preset","getPreset","state","getStatePreset","ownProps","OwnProps","getOwnProps","inHome2","axis","Axis","home","inHome1Location","DraggableLocation","getHomeLocation","inHome1","descriptor","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","it","\"should not break memoization on multiple calls\"","selector","Selector","makeMapStateToProps","defaultMapProps","MapProps","idle","expect","withImpact","move","dragging","x","1","y","2","noImpact","toBe","3","4","draggingStates","forEach","current","describe","phase","in phase: ","\"should return the default props if not impacted by the drag\"","\"being displaced by drag\"","\"should move out of the way (no animation)\"","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","shouldAnimate","false","inHome3","inHome4","at","type","\"REORDER\"","destination","impacted","IsDraggingState","expected","mapped","\"SECONDARY\"","shouldAnimateDisplacement","offset","point","combineTargetFor","null","snapshot","getSecondarySnapshot","toEqual","\"should move out of the way (with animation)\"","true","\"should not move if displacement is not visible, and not break memoization\"","invisible","first","cloneImpact","\"should not break memoization moving between different dragging phases\"","second","collecting","third","dropPending","\"should not break memoization moving between different dragging phases (no impact)\"","\"should not break memoization moving between different dragging phases (something else impacted)\"","unrelatedToDrag","inForeign1","unrelatedDefault"]},"operators":{"distinct":11,"total":453,"identifiers":["const","=","()",".","function=>","{}",":","``","${}","[]",","]}},"paramCount":1,"sloc":{"logical":286,"physical":293}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/view/draggable/connected-draggable","type":"esm"},{"line":3,"path":"../../../util/dimension","type":"esm"},{"line":4,"path":"../../../../src/state/no-impact","type":"esm"},{"line":5,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":11,"path":"../../../util/dragging-state","type":"esm"},{"line":12,"path":"./util/get-own-props","type":"esm"},{"line":17,"path":"../../../../src/view/draggable/draggable-types","type":"esm"},{"line":23,"path":"../../../../src/types","type":"esm"},{"line":24,"path":"../../../../src/state/get-displaced-by","type":"esm"},{"line":25,"path":"../../../../src/state/get-home-location","type":"esm"},{"line":26,"path":"../../../util/clone-impact","type":"esm"},{"line":27,"path":"./util/get-snapshot","type":"esm"},{"line":28,"path":"../../../util/impact","type":"esm"}],"errors":[],"lineEnd":293,"lineStart":1,"maintainability":87.745,"methods":[{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.143,"difficulty":7.65,"effort":3272.211,"length":91,"time":181.79,"vocabulary":26,"volume":427.74,"operands":{"distinct":20,"total":51,"identifiers":["selector","Selector","makeMapStateToProps","defaultMapProps","MapProps","state","idle","ownProps","expect","withImpact","move","dragging","x","1","y","2","noImpact","toBe","3","4"]},"operators":{"distinct":6,"total":40,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":28,"physical":23},"errors":[],"lineEnd":64,"lineStart":42,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["describe","current","phase","in phase: "]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":174},"errors":[],"lineEnd":239,"lineStart":66,"name":"<anon method-2>","paramNames":["current"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.007,"difficulty":1,"effort":20.68,"length":8,"time":1.149,"vocabulary":6,"volume":20.68,"operands":{"distinct":4,"total":4,"identifiers":["it","\"should return the default props if not impacted by the drag\"","describe","\"being displaced by drag\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":172},"errors":[],"lineEnd":238,"lineStart":67,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.044,"difficulty":2.769,"effort":362.212,"length":32,"time":20.123,"vocabulary":17,"volume":130.799,"operands":{"distinct":13,"total":18,"identifiers":["selector","Selector","makeMapStateToProps","defaultMapProps","MapProps","state","idle","ownProps","expect","withImpact","dragging","noImpact","toBe"]},"operators":{"distinct":4,"total":14,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":8},"errors":[],"lineEnd":75,"lineStart":68,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.02,"difficulty":1.667,"effort":100,"length":20,"time":5.556,"vocabulary":8,"volume":60,"operands":{"distinct":6,"total":10,"identifiers":["it","\"should move out of the way (no animation)\"","\"should move out of the way (with animation)\"","\"should not move if displacement is not visible, and not break memoization\"","\"should not break memoization on multiple calls\"","\"should not break memoization moving between different dragging phases\""]},"operators":{"distinct":2,"total":10,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":161},"errors":[],"lineEnd":237,"lineStart":77,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.198,"difficulty":5.846,"effort":3474.609,"length":107,"time":193.034,"vocabulary":47,"volume":594.341,"operands":{"distinct":39,"total":57,"identifiers":["selector","Selector","makeMapStateToProps","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome2","shouldAnimate","false","inHome3","inHome4","displacedBy","at","type","\"REORDER\"","destination","inHome1Location","impacted","IsDraggingState","withImpact","current","expected","MapProps","mapped","\"SECONDARY\"","shouldAnimateDisplacement","offset","point","combineTargetFor","null","snapshot","getSecondarySnapshot","expect","ownProps","toEqual"]},"operators":{"distinct":8,"total":50,"identifiers":["const","=","()","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":30,"physical":31},"errors":[],"lineEnd":108,"lineStart":78,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.198,"difficulty":5.846,"effort":3474.609,"length":107,"time":193.034,"vocabulary":47,"volume":594.341,"operands":{"distinct":39,"total":57,"identifiers":["selector","Selector","makeMapStateToProps","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome2","shouldAnimate","true","inHome3","inHome4","displacedBy","at","type","\"REORDER\"","destination","inHome1Location","impacted","IsDraggingState","withImpact","current","expected","MapProps","mapped","\"SECONDARY\"","shouldAnimateDisplacement","offset","point","combineTargetFor","null","snapshot","getSecondarySnapshot","expect","ownProps","toEqual"]},"operators":{"distinct":8,"total":50,"identifiers":["const","=","()","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":30,"physical":31},"errors":[],"lineEnd":140,"lineStart":110,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.12,"difficulty":5.241,"effort":1884.026,"length":69,"time":104.668,"vocabulary":37,"volume":359.452,"operands":{"distinct":29,"total":38,"identifiers":["selector","Selector","makeMapStateToProps","defaultMapProps","MapProps","state","idle","ownProps","impact","DragImpact","displaced","getForcedDisplacement","invisible","preset","inHome2","inHome3","inHome4","displacedBy","at","type","\"REORDER\"","destination","inHome1Location","impacted","IsDraggingState","withImpact","current","expect","toBe"]},"operators":{"distinct":8,"total":31,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":19},"errors":[],"lineEnd":160,"lineStart":142,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.222,"halstead":{"bugs":0.283,"difficulty":8.4,"effort":7130.88,"length":152,"time":396.16,"vocabulary":48,"volume":848.914,"operands":{"distinct":40,"total":84,"identifiers":["selector","Selector","makeMapStateToProps","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome2","shouldAnimate","true","inHome3","inHome4","displacedBy","at","type","\"REORDER\"","destination","inHome1Location","first","MapProps","withImpact","current","ownProps","expected","mapped","\"SECONDARY\"","offset","point","shouldAnimateDisplacement","combineTargetFor","null","snapshot","getSecondarySnapshot","expect","toEqual","cloneImpact","toBe"]},"operators":{"distinct":8,"total":68,"identifiers":["const","=","()","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":45,"physical":41},"errors":[],"lineEnd":202,"lineStart":162,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.217,"difficulty":7.647,"effort":4989.48,"length":121,"time":277.193,"vocabulary":42,"volume":652.47,"operands":{"distinct":34,"total":65,"identifiers":["selector","Selector","makeMapStateToProps","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome2","shouldAnimate","false","inHome3","inHome4","displacedBy","at","type","\"REORDER\"","destination","inHome1Location","first","MapProps","withImpact","state","dragging","cloneImpact","ownProps","second","collecting","third","dropPending","expect","toBe"]},"operators":{"distinct":8,"total":56,"identifiers":["const","=","()","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":35,"physical":33},"errors":[],"lineEnd":236,"lineStart":204,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.091,"difficulty":4.8,"effort":1304.963,"length":64,"time":72.498,"vocabulary":19,"volume":271.867,"operands":{"distinct":15,"total":36,"identifiers":["selector","Selector","makeMapStateToProps","defaultMapProps","MapProps","state","idle","ownProps","expect","withImpact","dragging","noImpact","toBe","collecting","dropPending"]},"operators":{"distinct":4,"total":28,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":19,"physical":14},"errors":[],"lineEnd":254,"lineStart":241,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.26,"difficulty":8.105,"effort":6312.559,"length":141,"time":350.698,"vocabulary":46,"volume":778.822,"operands":{"distinct":38,"total":77,"identifiers":["selector","Selector","makeMapStateToProps","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome2","shouldAnimate","false","inHome3","inHome4","displacedBy","at","type","\"REORDER\"","destination","inHome1Location","unrelatedToDrag","OwnProps","getOwnProps","inForeign1","unrelatedDefault","MapProps","state","idle","first","withImpact","dragging","second","collecting","third","dropPending","expect","toBe"]},"operators":{"distinct":8,"total":64,"identifiers":["const","=","()","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":38,"physical":37},"errors":[],"lineEnd":292,"lineStart":256,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.35,"halstead":{"bugs":0.17,"difficulty":2.469,"effort":16347.068,"length":76.154,"time":908.17,"vocabulary":7.923,"volume":509.203,"operands":{"distinct":7.077,"total":41.308},"operators":{"distinct":0.846,"total":34.846}},"paramCount":0.077,"sloc":{"logical":22,"physical":22.538}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":10.434,"halstead":{"bugs":0.132,"difficulty":5.123,"effort":2699.796,"length":76.75,"time":149.989,"vocabulary":29.333,"volume":397.33,"operands":{"distinct":23.417,"total":41.75},"operators":{"distinct":5.917,"total":35}},"paramCount":0.083,"sloc":{"logical":22.25,"physical":62}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/connected-draggable/something-else-dragging-in-virtual.spec.js","testCases":4,"smells":2,"smellInfo":[{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  45 |     ): any);\n  46 |     const impact: DragImpact = {\n> 47 |       displaced: getForcedDisplacement({\n     |                 ^ Lazy Test\n  48 |         visible: [\n  49 |           { dimension: preset.inHome2, shouldAnimate: false },\n  50 |           { dimension: preset.inHome3, shouldAnimate: false },","start":{"line":47,"column":17,"index":2081}},{"frame":"  70 |     ): any);\n  71 |     const impact: DragImpact = {\n> 72 |       displaced: getForcedDisplacement({\n     |                 ^ Lazy Test\n  73 |         visible: [\n  74 |           { dimension: preset.inHome3, shouldAnimate: false },\n  75 |           { dimension: preset.inHome4, shouldAnimate: false },","start":{"line":72,"column":17,"index":3038}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":6.667,"halstead":{"bugs":0.87,"difficulty":14.271,"effort":37245.078,"length":414,"time":2069.171,"vocabulary":79,"volume":2609.765,"operands":{"distinct":70,"total":222,"identifiers":["preset","getPreset","state","getStatePreset","ownProps","OwnProps","getOwnProps","inHome2","describe","\"before critical\"","it","\"should return the default props if not impacted by the drag and before critical in virtual list\"","selector","Selector","makeMapStateToProps","defaultMapProps","MapProps","idle","current","DraggingState","withVirtuals","dragging","inHome3","descriptor","id","expect","toBe","\"after critical\"","\"should stay in the original visual spot when displaced\"","inHome1","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","shouldAnimate","false","inHome4","displacedBy","getDisplacedBy","home","axis","displaceBy","at","type","\"REORDER\"","destination","getHomeLocation","impacted","IsDraggingState","withImpact","\"should return the resting props if currently invisible\"","invisible","\"should animate backwards to close the gap when moving out of a list\"","noImpact","offset","Position","negate","point","expected","mapped","\"SECONDARY\"","shouldAnimateDisplacement","true","combineTargetFor","null","snapshot","getSecondarySnapshot","toEqual"]},"operators":{"distinct":9,"total":192,"identifiers":["const","=","()",".","function=>","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":105,"physical":117}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":7,"path":"../../../../src/view/draggable/draggable-types","type":"esm"},{"line":8,"path":"../../../../src/types","type":"esm"},{"line":9,"path":"../../../../src/state/get-displaced-by","type":"esm"},{"line":10,"path":"../../../../src/state/get-home-location","type":"esm"},{"line":11,"path":"../../../../src/view/draggable/connected-draggable","type":"esm"},{"line":12,"path":"../../../util/dimension","type":"esm"},{"line":13,"path":"../../../util/dragging-state","type":"esm"},{"line":14,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":15,"path":"../../../util/impact","type":"esm"},{"line":16,"path":"../../state/publish-while-dragging/util","type":"esm"},{"line":17,"path":"./util/get-own-props","type":"esm"},{"line":18,"path":"./util/get-snapshot","type":"esm"},{"line":19,"path":"../../../../src/state/no-impact","type":"esm"},{"line":20,"path":"../../../../src/state/position","type":"esm"}],"errors":[],"lineEnd":117,"lineStart":1,"maintainability":97.788,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should return the default props if not impacted by the drag and before critical in virtual list\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":12},"errors":[],"lineEnd":37,"lineStart":26,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.064,"difficulty":2.667,"effort":511.348,"length":43,"time":28.408,"vocabulary":22,"volume":191.756,"operands":{"distinct":18,"total":24,"identifiers":["selector","Selector","makeMapStateToProps","defaultMapProps","MapProps","state","idle","ownProps","current","DraggingState","withVirtuals","dragging","preset","inHome3","descriptor","id","expect","toBe"]},"operators":{"distinct":4,"total":19,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":10},"errors":[],"lineEnd":36,"lineStart":27,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should stay in the original visual spot when displaced\"","\"should return the resting props if currently invisible\"","\"should animate backwards to close the gap when moving out of a list\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":78},"errors":[],"lineEnd":116,"lineStart":39,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.23,"difficulty":6.19,"effort":4262.455,"length":122,"time":236.803,"vocabulary":50,"volume":688.55,"operands":{"distinct":42,"total":65,"identifiers":["selector","Selector","makeMapStateToProps","defaultMapProps","MapProps","state","idle","ownProps","current","DraggingState","withVirtuals","dragging","preset","inHome1","descriptor","id","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome2","shouldAnimate","false","inHome3","inHome4","displacedBy","getDisplacedBy","home","axis","displaceBy","at","type","\"REORDER\"","destination","getHomeLocation","impacted","IsDraggingState","withImpact","expect","toBe"]},"operators":{"distinct":8,"total":57,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":28,"physical":24},"errors":[],"lineEnd":63,"lineStart":40,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.223,"difficulty":5.86,"effort":3922.68,"length":118,"time":217.927,"vocabulary":51,"volume":669.346,"operands":{"distinct":43,"total":63,"identifiers":["selector","Selector","makeMapStateToProps","defaultMapProps","MapProps","state","idle","ownProps","current","DraggingState","withVirtuals","dragging","preset","inHome1","descriptor","id","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome3","shouldAnimate","false","inHome4","invisible","inHome2","displacedBy","getDisplacedBy","home","axis","displaceBy","at","type","\"REORDER\"","destination","getHomeLocation","impacted","IsDraggingState","withImpact","expect","toBe"]},"operators":{"distinct":8,"total":55,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":27,"physical":24},"errors":[],"lineEnd":88,"lineStart":65,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.16,"difficulty":3.868,"effort":1858.505,"length":88,"time":103.25,"vocabulary":44,"volume":480.43,"operands":{"distinct":38,"total":49,"identifiers":["selector","Selector","makeMapStateToProps","current","DraggingState","withVirtuals","state","dragging","preset","inHome1","descriptor","id","impacted","IsDraggingState","withImpact","noImpact","offset","Position","negate","getDisplacedBy","home","axis","displaceBy","point","expected","MapProps","mapped","type","\"SECONDARY\"","shouldAnimateDisplacement","true","combineTargetFor","null","snapshot","getSecondarySnapshot","expect","ownProps","toEqual"]},"operators":{"distinct":6,"total":39,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":22,"physical":26},"errors":[],"lineEnd":115,"lineStart":90,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.952,"halstead":{"bugs":0.124,"difficulty":2.039,"effort":5320.725,"length":59.143,"time":295.596,"vocabulary":11.286,"volume":372.824,"operands":{"distinct":10,"total":31.714},"operators":{"distinct":1.286,"total":27.429}},"paramCount":0,"sloc":{"logical":15,"physical":16.714}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.748,"halstead":{"bugs":0.115,"difficulty":3.514,"effort":1768.253,"length":64.5,"time":98.236,"vocabulary":29.5,"volume":344.85,"operands":{"distinct":24.5,"total":34.833},"operators":{"distinct":5,"total":29.667}},"paramCount":0,"sloc":{"logical":15.833,"physical":29}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/connected-draggable/dragging.spec.js","testCases":6,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  118 |       );\n  119 |\n> 120 |       expect(result1).toBe(result2);\n      |      ^ Duplicate Assert\n  121 |\n  122 |       // also checking with new top level reference\n  123 |       const newCurrent: IsDraggingState = ({ ...current }: any);","start":{"line":120,"column":6,"index":3715}},{"frame":"  127 |       );\n  128 |\n> 129 |       expect(result1).toBe(result3);\n      |      ^ Duplicate Assert\n  130 |     });\n  131 |\n  132 |     it('should break memoization on multiple calls if moving to a new offset', () => {","start":{"line":129,"column":6,"index":3986}},{"frame":"  142 |       );\n  143 |\n> 144 |       expect(result1).not.toBe(result2);\n      |      ^ Duplicate Assert\n  145 |       expect(result1).not.toEqual(result2);\n  146 |     });\n  147 |   });","start":{"line":144,"column":6,"index":4401}},{"frame":"  143 |\n  144 |       expect(result1).not.toBe(result2);\n> 145 |       expect(result1).not.toEqual(result2);\n      |      ^ Duplicate Assert\n  146 |     });\n  147 |   });\n  148 | });","start":{"line":145,"column":6,"index":4442}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":6.294,"halstead":{"bugs":1.12,"difficulty":16.092,"effort":54058.596,"length":509,"time":3003.255,"vocabulary":97,"volume":3359.356,"operands":{"distinct":87,"total":280,"identifiers":["preset","getPreset","state","getStatePreset","ownProps","OwnProps","getOwnProps","inHome1","draggingStates","forEach","current","describe","phase","in phase: ","it","\"should move the dragging item to the current offset\"","selector","Selector","makeMapStateToProps","result","MapProps","move","x","20","y","30","expected","mapped","type","\"DRAGGING\"","offset","mode","\"FLUID\"","dimension","draggingOver","home","descriptor","id","dropping","null","combineWith","forceShouldAnimate","snapshot","getDraggingSnapshot","expect","toEqual","\"should allow force control of drag animation\"","getDraggingMapProps","toBe","withAnimation","IsDraggingState","true","withoutAnimation","false","\"should indicate when over a droppable\"","impact","homeImpact","getLiftEffect","draggable","draggables","viewport","inHome","withImpact","overHome","DraggingMapProps","noWhere","noImpact","overNothing","critical","droppable","\"should not break memoization on multiple calls to the same offset\"","result1","100","200","result2","newCurrent","result3","\"should break memoization on multiple calls if moving to a new offset\"","101","not","\"should not break memoization when moving between dragging phases\"","first","dragging","second","collecting","third","dropPending"]},"operators":{"distinct":10,"total":229,"identifiers":["const","=","()",".","function=>","``","${}","{}",":","... (spread)"]}},"paramCount":1,"sloc":{"logical":143,"physical":160}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/view/draggable/connected-draggable","type":"esm"},{"line":3,"path":"../../../util/dimension","type":"esm"},{"line":4,"path":"../../../../src/state/no-impact","type":"esm"},{"line":5,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":11,"path":"../../../../src/view/draggable/draggable-types","type":"esm"},{"line":17,"path":"../../../util/dragging-state","type":"esm"},{"line":18,"path":"./util/get-own-props","type":"esm"},{"line":19,"path":"./util/get-dragging-map-props","type":"esm"},{"line":20,"path":"../../../../src/state/get-lift-effect","type":"esm"},{"line":21,"path":"./util/get-snapshot","type":"esm"}],"errors":[],"lineEnd":160,"lineStart":1,"maintainability":96.441,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["describe","current","phase","in phase: "]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":122},"errors":[],"lineEnd":148,"lineStart":27,"name":"<anon method-1>","paramNames":["current"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.02,"difficulty":1.667,"effort":100,"length":20,"time":5.556,"vocabulary":8,"volume":60,"operands":{"distinct":6,"total":10,"identifiers":["it","\"should move the dragging item to the current offset\"","\"should allow force control of drag animation\"","\"should indicate when over a droppable\"","\"should not break memoization on multiple calls to the same offset\"","\"should break memoization on multiple calls if moving to a new offset\""]},"operators":{"distinct":2,"total":10,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":120},"errors":[],"lineEnd":147,"lineStart":28,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.176,"difficulty":4.941,"effort":2603.362,"length":99,"time":144.631,"vocabulary":40,"volume":526.871,"operands":{"distinct":34,"total":56,"identifiers":["selector","Selector","makeMapStateToProps","result","MapProps","move","current","x","20","y","30","ownProps","expected","mapped","type","\"DRAGGING\"","offset","mode","\"FLUID\"","dimension","preset","inHome1","draggingOver","home","descriptor","id","dropping","null","combineWith","forceShouldAnimate","snapshot","getDraggingSnapshot","expect","toEqual"]},"operators":{"distinct":6,"total":43,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":27,"physical":28},"errors":[],"lineEnd":56,"lineStart":29,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.101,"difficulty":8.633,"effort":2617.984,"length":68,"time":145.444,"vocabulary":22,"volume":303.241,"operands":{"distinct":15,"total":37,"identifiers":["selector","Selector","makeMapStateToProps","expect","getDraggingMapProps","current","ownProps","forceShouldAnimate","toBe","null","withAnimation","IsDraggingState","true","withoutAnimation","false"]},"operators":{"distinct":7,"total":31,"identifiers":["const","=","()",".","{}","... (spread)",":"]}},"paramCount":0,"sloc":{"logical":18,"physical":27},"errors":[],"lineEnd":84,"lineStart":58,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.165,"difficulty":5.129,"effort":2538.348,"length":95,"time":141.019,"vocabulary":37,"volume":494.898,"operands":{"distinct":31,"total":53,"identifiers":["selector","Selector","makeMapStateToProps","impact","homeImpact","getLiftEffect","draggable","preset","inHome1","draggables","viewport","home","inHome","IsDraggingState","withImpact","current","overHome","DraggingMapProps","getDraggingMapProps","ownProps","noWhere","noImpact","overNothing","expect","draggingOver","toBe","state","critical","droppable","id","null"]},"operators":{"distinct":6,"total":42,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":23,"physical":21},"errors":[],"lineEnd":106,"lineStart":86,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.121,"difficulty":8.556,"effort":3099,"length":78,"time":172.167,"vocabulary":25,"volume":362.221,"operands":{"distinct":18,"total":44,"identifiers":["selector","Selector","makeMapStateToProps","result1","MapProps","move","current","x","100","y","200","ownProps","result2","expect","toBe","newCurrent","IsDraggingState","result3"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",":",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":22,"physical":23},"errors":[],"lineEnd":130,"lineStart":108,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.089,"difficulty":5.5,"effort":1462.603,"length":58,"time":81.256,"vocabulary":24,"volume":265.928,"operands":{"distinct":18,"total":33,"identifiers":["selector","Selector","makeMapStateToProps","result1","MapProps","move","current","x","100","y","200","ownProps","result2","101","expect","not","toBe","toEqual"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":16,"physical":15},"errors":[],"lineEnd":146,"lineStart":132,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.074,"difficulty":4.143,"effort":915.596,"length":53,"time":50.866,"vocabulary":18,"volume":221.006,"operands":{"distinct":14,"total":29,"identifiers":["selector","Selector","makeMapStateToProps","first","MapProps","state","dragging","ownProps","second","collecting","third","dropPending","expect","toBe"]},"operators":{"distinct":4,"total":24,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":15,"physical":10},"errors":[],"lineEnd":159,"lineStart":150,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.699,"halstead":{"bugs":0.124,"difficulty":1.788,"effort":6006.511,"length":56.556,"time":333.695,"vocabulary":10.778,"volume":373.262,"operands":{"distinct":9.667,"total":31.111},"operators":{"distinct":1.111,"total":25.444}},"paramCount":0.111,"sloc":{"logical":15.889,"physical":17.778}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":11.384,"halstead":{"bugs":0.094,"difficulty":5.134,"effort":1676.027,"length":60,"time":93.113,"vocabulary":22.875,"volume":282.837,"operands":{"distinct":17.5,"total":33.25},"operators":{"distinct":5.375,"total":26.75}},"paramCount":0.125,"sloc":{"logical":16.625,"physical":45.75}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/connected-draggable/combine-with.spec.js","testCases":3,"smells":2,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  105 |       const result2: MapProps = selector(withoutMerge, ownProps);\n  106 |\n> 107 |       expect(result1).not.toBe(result2);\n      |      ^ Duplicate Assert\n  108 |       expect(result1).not.toEqual(result2);\n  109 |     });\n  110 |   });","start":{"line":107,"column":6,"index":3314}},{"frame":"  106 |\n  107 |       expect(result1).not.toBe(result2);\n> 108 |       expect(result1).not.toEqual(result2);\n      |      ^ Duplicate Assert\n  109 |     });\n  110 |   });\n  111 | });","start":{"line":108,"column":6,"index":3355}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":6.742,"halstead":{"bugs":0.76,"difficulty":15.44,"effort":35215.583,"length":354,"time":1956.421,"vocabulary":87,"volume":2280.802,"operands":{"distinct":75,"total":193,"identifiers":["preset","getPreset","ownProps","OwnProps","getOwnProps","inHome1","axis","Axis","home","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome2","shouldAnimate","false","inHome3","inHome4","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","draggingStates","forEach","withoutMerge","describe","phase","in phase: ","withMerge","IsDraggingState","withImpact","it","\"should move the dragging item to the current offset and update combineWith\"","selector","Selector","makeMapStateToProps","result","MapProps","move","x","1","y","2","expected","mapped","\"DRAGGING\"","offset","mode","\"FLUID\"","draggingOver","combineWith","dropping","null","forceShouldAnimate","snapshot","getDraggingSnapshot","expect","toEqual","\"should not break memoization on multiple calls to the same offset\"","result1","newReference","result2","toBe","\"should break memoization on multiple calls if changing combine\"","not"]},"operators":{"distinct":12,"total":161,"identifiers":["const","=","()",".","{}",":","[]",",","function=>","``","${}","... (spread)"]}},"paramCount":1,"sloc":{"logical":89,"physical":112}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/view/draggable/connected-draggable","type":"esm"},{"line":3,"path":"../../../../src/types","type":"esm"},{"line":8,"path":"../../../../src/view/draggable/draggable-types","type":"esm"},{"line":9,"path":"../../../util/dimension","type":"esm"},{"line":15,"path":"../../../util/dragging-state","type":"esm"},{"line":16,"path":"./util/get-own-props","type":"esm"},{"line":17,"path":"../../../../src/state/get-displaced-by","type":"esm"},{"line":18,"path":"./util/get-snapshot","type":"esm"},{"line":19,"path":"../../../util/impact","type":"esm"}],"errors":[],"lineEnd":112,"lineStart":1,"maintainability":97.634,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["describe","withoutMerge","phase","in phase: "]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":66},"errors":[],"lineEnd":111,"lineStart":46,"name":"<anon method-1>","paramNames":["withoutMerge"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":2.444,"effort":180.91,"length":20,"time":10.051,"vocabulary":13,"volume":74.009,"operands":{"distinct":9,"total":11,"identifiers":["withMerge","IsDraggingState","withImpact","withoutMerge","impact","it","\"should move the dragging item to the current offset and update combineWith\"","\"should not break memoization on multiple calls to the same offset\"","\"should break memoization on multiple calls if changing combine\""]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":64},"errors":[],"lineEnd":110,"lineStart":47,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.198,"difficulty":5.314,"effort":3160.343,"length":111,"time":175.575,"vocabulary":41,"volume":594.688,"operands":{"distinct":35,"total":62,"identifiers":["selector","Selector","makeMapStateToProps","result","MapProps","move","withMerge","x","1","y","2","ownProps","expected","mapped","type","\"DRAGGING\"","offset","mode","\"FLUID\"","dimension","preset","inHome1","draggingOver","home","descriptor","id","combineWith","inHome2","dropping","null","forceShouldAnimate","snapshot","getDraggingSnapshot","expect","toEqual"]},"operators":{"distinct":6,"total":49,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":27,"physical":29},"errors":[],"lineEnd":78,"lineStart":50,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.097,"difficulty":6.447,"effort":1878.939,"length":62,"time":104.385,"vocabulary":26,"volume":291.427,"operands":{"distinct":19,"total":35,"identifiers":["selector","Selector","makeMapStateToProps","result1","MapProps","move","withMerge","x","1","y","2","ownProps","newReference","IsDraggingState","phase","\"DRAGGING\"","result2","expect","toBe"]},"operators":{"distinct":7,"total":27,"identifiers":["const","=","()","{}",":","... (spread)","."]}},"paramCount":0,"sloc":{"logical":17,"physical":20},"errors":[],"lineEnd":99,"lineStart":80,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.054,"difficulty":3.538,"effort":578.533,"length":40,"time":32.141,"vocabulary":17,"volume":163.499,"operands":{"distinct":13,"total":23,"identifiers":["selector","Selector","makeMapStateToProps","result1","MapProps","withMerge","ownProps","result2","withoutMerge","expect","not","toBe","toEqual"]},"operators":{"distinct":4,"total":17,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":9},"errors":[],"lineEnd":109,"lineStart":101,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.124,"halstead":{"bugs":0.127,"difficulty":2.573,"effort":5869.264,"length":59,"time":326.07,"vocabulary":14.5,"volume":380.134,"operands":{"distinct":12.5,"total":32.167},"operators":{"distinct":2,"total":26.833}},"paramCount":0.167,"sloc":{"logical":14.833,"physical":18.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":16.417,"halstead":{"bugs":0.077,"difficulty":4.049,"effort":1174.01,"length":48.4,"time":65.223,"vocabulary":21.2,"volume":230.43,"operands":{"distinct":16,"total":27},"operators":{"distinct":5.2,"total":21.4}},"paramCount":0.2,"sloc":{"logical":12.8,"physical":37.6}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/connected-draggable/combine-target-for.spec.js","testCases":4,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  81 |       );\n  82 |\n> 83 |       expect(result1).toEqual(expected);\n     |      ^ Duplicate Assert\n  84 |       expect(result1).toBe(result2);\n  85 |     });\n  86 |","start":{"line":83,"column":6,"index":2743}},{"frame":"  82 |\n  83 |       expect(result1).toEqual(expected);\n> 84 |       expect(result1).toBe(result2);\n     |      ^ Duplicate Assert\n  85 |     });\n  86 |\n  87 |     it('should break memoization on multiple calls if changing combine', () => {","start":{"line":84,"column":6,"index":2784}},{"frame":"  91 |       const result2: MapProps = selector(withoutMerge, ownProps);\n  92 |\n> 93 |       expect(result1).not.toBe(result2);\n     |      ^ Duplicate Assert\n  94 |       expect(result1).not.toEqual(result2);\n  95 |     });\n  96 |   });","start":{"line":93,"column":6,"index":3098}},{"frame":"  92 |\n  93 |       expect(result1).not.toBe(result2);\n> 94 |       expect(result1).not.toEqual(result2);\n     |      ^ Duplicate Assert\n  95 |     });\n  96 |   });\n  97 | });","start":{"line":94,"column":6,"index":3139}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":8.75,"halstead":{"bugs":0.652,"difficulty":14.661,"effort":28658.298,"length":320,"time":1592.128,"vocabulary":69,"volume":1954.728,"operands":{"distinct":59,"total":173,"identifiers":["preset","getPreset","ownProps","OwnProps","getOwnProps","inHome2","draggingStates","forEach","withoutMerge","describe","phase","in phase: ","impact","DragImpact","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","withMerge","IsDraggingState","withImpact","it","\"should indicate that it is a combine target\"","selector","Selector","makeMapStateToProps","result","MapProps","expected","mapped","\"SECONDARY\"","offset","displacedBy","point","shouldAnimateDisplacement","false","combineTargetFor","inHome1","snapshot","getSecondarySnapshot","expect","toEqual","\"should give resting props if not the combine target\"","unrelatedOwnProps","inForeign1","atRest","toBe","\"should not break memoization on multiple calls with the same impact\"","result1","result2","JSON","parse","stringify","\"should break memoization on multiple calls if changing combine\"","not"]},"operators":{"distinct":10,"total":147,"identifiers":["const","=","()",".","function=>","``","${}","{}","... (spread)",":"]}},"paramCount":1,"sloc":{"logical":80,"physical":98}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/types","type":"esm"},{"line":7,"path":"../../../../src/view/draggable/draggable-types","type":"esm"},{"line":8,"path":"../../../../src/view/draggable/connected-draggable","type":"esm"},{"line":9,"path":"../../../util/dimension","type":"esm"},{"line":14,"path":"../../../util/dragging-state","type":"esm"},{"line":15,"path":"./util/get-own-props","type":"esm"},{"line":16,"path":"./util/get-snapshot","type":"esm"}],"errors":[],"lineEnd":98,"lineStart":1,"maintainability":103.09,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["describe","withoutMerge","phase","in phase: "]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":77},"errors":[],"lineEnd":97,"lineStart":21,"name":"<anon method-1>","paramNames":["withoutMerge"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.097,"difficulty":5.905,"effort":1721.113,"length":60,"time":95.617,"vocabulary":29,"volume":291.479,"operands":{"distinct":21,"total":31,"identifiers":["impact","DragImpact","withoutMerge","at","type","\"COMBINE\"","combine","draggableId","preset","inHome2","descriptor","id","droppableId","withMerge","IsDraggingState","withImpact","it","\"should indicate that it is a combine target\"","\"should give resting props if not the combine target\"","\"should not break memoization on multiple calls with the same impact\"","\"should break memoization on multiple calls if changing combine\""]},"operators":{"distinct":8,"total":29,"identifiers":["const","=","{}","... (spread)",".",":","()","function=>"]}},"paramCount":0,"sloc":{"logical":16,"physical":75},"errors":[],"lineEnd":96,"lineStart":22,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.108,"difficulty":4.038,"effort":1312.5,"length":65,"time":72.917,"vocabulary":32,"volume":325,"operands":{"distinct":26,"total":35,"identifiers":["selector","Selector","makeMapStateToProps","result","MapProps","withMerge","ownProps","expected","mapped","type","\"SECONDARY\"","offset","impact","displacedBy","point","shouldAnimateDisplacement","false","combineTargetFor","preset","inHome1","descriptor","id","snapshot","getSecondarySnapshot","expect","toEqual"]},"operators":{"distinct":6,"total":30,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":15,"physical":17},"errors":[],"lineEnd":52,"lineStart":36,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.054,"difficulty":2.933,"effort":473.502,"length":38,"time":26.306,"vocabulary":19,"volume":161.421,"operands":{"distinct":15,"total":22,"identifiers":["selector","Selector","makeMapStateToProps","unrelatedOwnProps","OwnProps","getOwnProps","preset","inForeign1","atRest","MapProps","withoutMerge","result","withMerge","expect","toBe"]},"operators":{"distinct":4,"total":16,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":8},"errors":[],"lineEnd":61,"lineStart":54,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.153,"difficulty":4.645,"effort":2129.49,"length":88,"time":118.305,"vocabulary":37,"volume":458.432,"operands":{"distinct":31,"total":48,"identifiers":["selector","Selector","makeMapStateToProps","expected","MapProps","mapped","type","\"SECONDARY\"","offset","impact","displacedBy","point","shouldAnimateDisplacement","false","combineTargetFor","preset","inHome1","descriptor","id","snapshot","getSecondarySnapshot","result1","withMerge","ownProps","result2","JSON","parse","stringify","expect","toEqual","toBe"]},"operators":{"distinct":6,"total":40,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":21,"physical":23},"errors":[],"lineEnd":85,"lineStart":63,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.054,"difficulty":3.538,"effort":578.533,"length":40,"time":32.141,"vocabulary":17,"volume":163.499,"operands":{"distinct":13,"total":23,"identifiers":["selector","Selector","makeMapStateToProps","result1","MapProps","withMerge","ownProps","result2","withoutMerge","expect","not","toBe","toEqual"]},"operators":{"distinct":4,"total":17,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":9},"errors":[],"lineEnd":95,"lineStart":87,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.25,"halstead":{"bugs":0.093,"difficulty":2.094,"effort":4094.043,"length":45.714,"time":227.447,"vocabulary":9.857,"volume":279.247,"operands":{"distinct":8.429,"total":24.714},"operators":{"distinct":1.429,"total":21}},"paramCount":0.143,"sloc":{"logical":11.429,"physical":14}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.613,"halstead":{"bugs":0.079,"difficulty":3.927,"effort":1047.744,"length":50,"time":58.208,"vocabulary":23.833,"volume":238.06,"operands":{"distinct":18.333,"total":27.167},"operators":{"distinct":5.5,"total":22.833}},"paramCount":0.167,"sloc":{"logical":12.333,"physical":34.833}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/connected-draggable/child-render-behaviour.spec.js","testCases":3,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  68 |   // $FlowFixMe: not sure why flow is complaining about only this usage\n  69 |   const { container, rerender } = render(<App currentUser=\"Jake\">{child}</App>);\n> 70 |   expect(child).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  71 |\n  72 |   rerender(<App currentUser=\"Jake\">{child}</App>);\n  73 |   expect(child).toHaveBeenCalledTimes(2);","start":{"line":70,"column":2,"index":2139}},{"frame":"  71 |\n  72 |   rerender(<App currentUser=\"Jake\">{child}</App>);\n> 73 |   expect(child).toHaveBeenCalledTimes(2);\n     |  ^ Duplicate Assert\n  74 |\n  75 |   expect(container.textContent).toBe('Jake');\n  76 | });","start":{"line":73,"column":2,"index":2233}},{"frame":"  79 |   const child = getMock();\n  80 |   const { container, rerender } = render(<App currentUser=\"Jake\">{child}</App>);\n> 81 |   expect(child).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  82 |\n  83 |   rerender(<App currentUser=\"Finn\">{child}</App>);\n  84 |   expect(child).toHaveBeenCalledTimes(2);","start":{"line":81,"column":2,"index":2536}},{"frame":"  82 |\n  83 |   rerender(<App currentUser=\"Finn\">{child}</App>);\n> 84 |   expect(child).toHaveBeenCalledTimes(2);\n     |  ^ Duplicate Assert\n  85 |\n  86 |   expect(container.textContent).toBe('Finn');\n  87 | });","start":{"line":84,"column":2,"index":2630}}]}],"metrics":{"aggregate":{"cyclomatic":11,"cyclomaticDensity":16.418,"halstead":{"bugs":0.447,"difficulty":16.5,"effort":22124.259,"length":227,"time":1229.125,"vocabulary":60,"volume":1340.864,"operands":{"distinct":48,"total":132,"identifiers":["preset","getPreset","droppableContext","DroppableContextValue","type","home","descriptor","droppableId","id","isUsingCloneFor","null","Person","Component","name","provided","Provided","render","props","ref","innerRef","draggableProps","dragHandleProps","Props","currentUser","children","dragProvided","Node","App","\"drag-1\"","0","getMock","jest","fn","it","\"should render the child function when the parent renders\"","child","container","\"Jake\"","expect","toHaveBeenCalledTimes","1","textContent","toBe","\"should render the child function when the parent re-renders\"","rerender","2","\"should render the child function when the parents props changes that cause a re-render\"","\"Finn\""]},"operators":{"distinct":12,"total":95,"identifiers":["const","=","()","{}",":",".","class","extends","this","return","function=>","function"]}},"paramCount":6,"sloc":{"logical":67,"physical":88}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[{"aggregate":{"cyclomatic":2,"cyclomaticDensity":25,"halstead":{"bugs":0.04,"difficulty":8,"effort":948.291,"length":29,"time":52.683,"vocabulary":17,"volume":118.536,"operands":{"distinct":9,"total":18,"identifiers":["name","provided","Provided","render","props","ref","innerRef","draggableProps","dragHandleProps"]},"operators":{"distinct":8,"total":11,"identifiers":["const","=","{}",".","this","return","function=>","()"]}},"paramCount":1,"sloc":{"logical":8,"physical":14}},"errors":[],"lineEnd":33,"lineStart":20,"methods":[{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.025,"difficulty":6.417,"effort":474.89,"length":20,"time":26.383,"vocabulary":13,"volume":74.009,"operands":{"distinct":6,"total":11,"identifiers":["provided","name","props","ref","draggableProps","dragHandleProps"]},"operators":{"distinct":7,"total":9,"identifiers":["const","=","{}",".","this","return","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":12},"errors":[],"lineEnd":32,"lineStart":21,"name":"render","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["provided","innerRef","ref"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":25,"lineStart":25,"name":"<anon method-1>","paramNames":["ref"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":0.667,"cyclomaticDensity":8.333,"halstead":{"bugs":0.013,"difficulty":2.667,"effort":316.097,"length":9.667,"time":17.561,"vocabulary":5.667,"volume":39.512,"operands":{"distinct":3,"total":6},"operators":{"distinct":2.667,"total":3.667}},"paramCount":0.333,"sloc":{"logical":2.667,"physical":4.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":35,"halstead":{"bugs":0.014,"difficulty":3.708,"effort":243.25,"length":12.5,"time":13.514,"vocabulary":9,"volume":42.809,"operands":{"distinct":4.5,"total":7},"operators":{"distinct":4.5,"total":5.5}},"paramCount":0.5,"sloc":{"logical":3.5,"physical":6.5}},"name":"Person","superClassName":"Component","maintainability":131.915}],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../src","type":"esm"},{"line":5,"path":"../../../util/dimension","type":"esm"},{"line":6,"path":"../../../../src/view/draggable/connected-draggable","type":"esm"},{"line":7,"path":"../../../../src/view/draggable/draggable-types","type":"esm"},{"line":10,"path":"../../../../src/view/context/droppable-context","type":"esm"}],"errors":[],"lineEnd":88,"lineStart":1,"maintainability":115.716,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["droppableContext","\"drag-1\"","0","dragProvided"]},"operators":{"distinct":2,"total":3,"identifiers":["return","function=>"]}},"paramCount":2,"sloc":{"logical":3,"physical":11},"errors":[],"lineEnd":50,"lineStart":40,"name":"App","paramNames":["currentUser","children"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":42,"lineStart":42,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":0.5,"effort":4,"length":4,"time":0.222,"vocabulary":4,"volume":8,"operands":{"distinct":3,"total":3,"identifiers":["children","currentUser","dragProvided"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":45,"lineStart":45,"name":"<anon method-3>","paramNames":["dragProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.008,"difficulty":2,"effort":48,"length":8,"time":2.667,"vocabulary":8,"volume":24,"operands":{"distinct":4,"total":4,"identifiers":["jest","fn","currentUser","provided"]},"operators":{"distinct":4,"total":4,"identifiers":["return","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":56,"lineStart":52,"name":"getMock","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["currentUser","provided"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":2,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":55,"lineStart":53,"name":"<anon method-4>","paramNames":["currentUser","provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.039,"difficulty":4,"effort":468.827,"length":30,"time":26.046,"vocabulary":15,"volume":117.207,"operands":{"distinct":10,"total":16,"identifiers":["child","getMock","container","render","\"Jake\"","expect","toHaveBeenCalledTimes","1","textContent","toBe"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","()","{}","."]}},"paramCount":0,"sloc":{"logical":9,"physical":7},"errors":[],"lineEnd":64,"lineStart":58,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.059,"difficulty":5.208,"effort":915.421,"length":43,"time":50.857,"vocabulary":17,"volume":175.761,"operands":{"distinct":12,"total":25,"identifiers":["child","getMock","container","rerender","render","\"Jake\"","expect","toHaveBeenCalledTimes","1","2","textContent","toBe"]},"operators":{"distinct":5,"total":18,"identifiers":["const","=","()","{}","."]}},"paramCount":0,"sloc":{"logical":13,"physical":11},"errors":[],"lineEnd":76,"lineStart":66,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.06,"difficulty":4.808,"effort":862.052,"length":43,"time":47.892,"vocabulary":18,"volume":179.307,"operands":{"distinct":13,"total":25,"identifiers":["child","getMock","container","rerender","render","\"Jake\"","expect","toHaveBeenCalledTimes","1","\"Finn\"","2","textContent","toBe"]},"operators":{"distinct":5,"total":18,"identifiers":["const","=","()","{}","."]}},"paramCount":0,"sloc":{"logical":13,"physical":10},"errors":[],"lineEnd":87,"lineStart":78,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.493,"halstead":{"bugs":0.041,"difficulty":1.5,"effort":2011.296,"length":20.636,"time":111.739,"vocabulary":5.455,"volume":121.897,"operands":{"distinct":4.364,"total":12},"operators":{"distinct":1.091,"total":8.636}},"paramCount":0.545,"sloc":{"logical":6.091,"physical":8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":31.316,"halstead":{"bugs":0.02,"difficulty":2.493,"effort":280.289,"length":16.2,"time":15.572,"vocabulary":8.8,"volume":60.999,"operands":{"distinct":5.7,"total":9.3},"operators":{"distinct":3.1,"total":6.9}},"paramCount":0.6,"sloc":{"logical":5.1,"physical":6.2}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/animate-in-out/child-rendering.spec.js","testCases":3,"smells":6,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  34 |     );\n  35 |\n> 36 |     expect(container.innerHTML).toEqual('');\n     |    ^ Duplicate Assert\n  37 |     unmount();\n  38 |   }\n  39 |   // initial animation set to true","start":{"line":36,"column":4,"index":900}},{"frame":"  34 |     );\n  35 |\n> 36 |     expect(container.innerHTML).toEqual('');\n     |    ^ Duplicate Assert\n  37 |     unmount();\n  38 |   }\n  39 |   // initial animation set to true","start":{"line":36,"column":4,"index":900}},{"frame":"  45 |     );\n  46 |\n> 47 |     expect(container.innerHTML).toEqual('');\n     |    ^ Duplicate Assert\n  48 |     unmount();\n  49 |   }\n  50 | });","start":{"line":47,"column":4,"index":1193}},{"frame":"  45 |     );\n  46 |\n> 47 |     expect(container.innerHTML).toEqual('');\n     |    ^ Duplicate Assert\n  48 |     unmount();\n  49 |   }\n  50 | });","start":{"line":47,"column":4,"index":1193}},{"frame":"  70 |\n  71 |   const { rerender, container } = render(<App on=\"hey\" shouldAnimate />);\n> 72 |   expect(container.textContent).toEqual('open');\n     |  ^ Duplicate Assert\n  73 |\n  74 |   // data is gone - will animate closed\n  75 |   rerender(<App on={null} shouldAnimate />);","start":{"line":72,"column":2,"index":1824}},{"frame":"  74 |   // data is gone - will animate closed\n  75 |   rerender(<App on={null} shouldAnimate />);\n> 76 |   expect(container.textContent).toEqual('close');\n     |  ^ Duplicate Assert\n  77 |\n  78 |   // letting animate-in-out know that the animation is finished\n  79 |   act(() => {","start":{"line":76,"column":2,"index":1959}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":20.339,"halstead":{"bugs":0.373,"difficulty":15.955,"effort":17867.733,"length":192,"time":992.652,"vocabulary":57,"volume":1119.915,"operands":{"distinct":44,"total":108,"identifiers":["ChildProps","provided","AnimateProvided","Child","React","Component","render","props","animate","it","\"should render children\"","getByText","\"hey\"","false","expect","\"none\"","toBeTruthy","\"should allow children not to be rendered\"","unmount","container","null","innerHTML","toEqual","\"\"","\"should allow children not to be rendered after a close animation\"","child","jest","fn","mockImplementation","Props","on","shouldAnimate","App","rerender","textContent","\"open\"","\"close\"","act","mock","calls","length","1","0","onClose"]},"operators":{"distinct":13,"total":84,"identifiers":["class","extends",".","return","this","()","function=>","const","=","{}","function","[]","-"]}},"paramCount":7,"sloc":{"logical":59,"physical":85}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[{"aggregate":{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["ChildProps","render","props","provided","animate"]},"operators":{"distinct":3,"total":5,"identifiers":["return",".","this"]}},"paramCount":0,"sloc":{"logical":2,"physical":5}},"errors":[],"lineEnd":16,"lineStart":12,"methods":[{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":31.02,"length":8,"time":1.723,"vocabulary":6,"volume":20.68,"operands":{"distinct":3,"total":3,"identifiers":["props","provided","animate"]},"operators":{"distinct":3,"total":5,"identifiers":["return",".","this"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"render","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":0.5,"cyclomaticDensity":25,"halstead":{"bugs":0.005,"difficulty":0.75,"effort":22.5,"length":5,"time":1.25,"vocabulary":4,"volume":15,"operands":{"distinct":2.5,"total":2.5},"operators":{"distinct":1.5,"total":2.5}},"paramCount":0,"sloc":{"logical":1,"physical":2.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":31.02,"length":8,"time":1.723,"vocabulary":6,"volume":20.68,"operands":{"distinct":3,"total":3},"operators":{"distinct":3,"total":5}},"paramCount":0,"sloc":{"logical":1,"physical":3}},"name":"Child","superClassName":"<computed~React.Component>","maintainability":159.254}],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":6,"path":"../../../../src/view/animate-in-out/animate-in-out","type":"esm"}],"errors":[],"lineEnd":85,"lineStart":1,"maintainability":120.213,"methods":[{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.024,"difficulty":3.75,"effort":271.274,"length":19,"time":15.071,"vocabulary":14,"volume":72.34,"operands":{"distinct":8,"total":10,"identifiers":["getByText","render","\"hey\"","false","provided","expect","\"none\"","toBeTruthy"]},"operators":{"distinct":6,"total":9,"identifiers":["const","=","{}","()","function=>","."]}},"paramCount":0,"sloc":{"logical":7,"physical":9},"errors":[],"lineEnd":26,"lineStart":18,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["provided"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":21,"lineStart":21,"name":"<anon method-2>","paramNames":["provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.063,"difficulty":8.1,"effort":1522.8,"length":47,"time":84.6,"vocabulary":16,"volume":188,"operands":{"distinct":10,"total":27,"identifiers":["unmount","container","render","null","false","provided","expect","innerHTML","toEqual","\"\""]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","{}","()","function=>","."]}},"paramCount":0,"sloc":{"logical":16,"physical":23},"errors":[],"lineEnd":50,"lineStart":28,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["provided"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":32,"lineStart":32,"name":"<anon method-4>","paramNames":["provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["provided"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":43,"lineStart":43,"name":"<anon method-5>","paramNames":["provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.102,"difficulty":5.568,"effort":1704.158,"length":63,"time":94.675,"vocabulary":29,"volume":306.053,"operands":{"distinct":22,"total":35,"identifiers":["child","jest","fn","mockImplementation","provided","Props","on","shouldAnimate","App","rerender","container","render","\"hey\"","expect","textContent","toEqual","\"open\"","null","\"close\"","act","innerHTML","\"\""]},"operators":{"distinct":7,"total":28,"identifiers":["const","=","()",".","function=>","function","{}"]}},"paramCount":0,"sloc":{"logical":18,"physical":33},"errors":[],"lineEnd":84,"lineStart":52,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["provided"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":57,"lineStart":55,"name":"<anon method-7>","paramNames":["provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["on","shouldAnimate","provided"]},"operators":{"distinct":2,"total":2,"identifiers":["return","function=>"]}},"paramCount":2,"sloc":{"logical":2,"physical":7},"errors":[],"lineEnd":69,"lineStart":63,"name":"App","paramNames":["on","shouldAnimate"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["child","provided"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":66,"lineStart":66,"name":"<anon method-8>","paramNames":["provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.023,"difficulty":2.857,"effort":197.682,"length":20,"time":10.982,"vocabulary":11,"volume":69.189,"operands":{"distinct":7,"total":10,"identifiers":["child","mock","calls","length","1","0","onClose"]},"operators":{"distinct":4,"total":10,"identifiers":["()",".","[]","-"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":81,"lineStart":79,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.695,"halstead":{"bugs":0.031,"difficulty":1.33,"effort":1488.978,"length":16,"time":82.721,"vocabulary":4.75,"volume":93.326,"operands":{"distinct":3.667,"total":9},"operators":{"distinct":1.083,"total":7}},"paramCount":0.583,"sloc":{"logical":4.917,"physical":7.083}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":66.008,"halstead":{"bugs":0.02,"difficulty":2.116,"effort":340.084,"length":15.364,"time":18.894,"vocabulary":8,"volume":61.148,"operands":{"distinct":5.364,"total":8.545},"operators":{"distinct":2.636,"total":6.818}},"paramCount":0.636,"sloc":{"logical":4.636,"physical":7.727}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/view/animate-in-out/animate-in-out.spec.js","testCases":7,"smells":10,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  108 |     onClose: expect.any(Function),\n  109 |   };\n> 110 |   expect(child).toHaveBeenCalledWith(initial);\n      |  ^ Duplicate Assert\n  111 |   expect(container.innerHTML).toEqual('<div>hi</div>');\n  112 |   child.mockClear();\n  113 |","start":{"line":110,"column":2,"index":2714}},{"frame":"  109 |   };\n  110 |   expect(child).toHaveBeenCalledWith(initial);\n> 111 |   expect(container.innerHTML).toEqual('<div>hi</div>');\n      |  ^ Duplicate Assert\n  112 |   child.mockClear();\n  113 |\n  114 |   // start closing","start":{"line":111,"column":2,"index":2761}},{"frame":"  115 |   // data is gone! this should trigger a close\n  116 |   rerender(<App value={null} />);\n> 117 |   expect(container.innerHTML).toEqual('');\n      |  ^ Duplicate Assert\n  118 |   expect(child).not.toHaveBeenCalled();\n  119 | });\n  120 |","start":{"line":117,"column":2,"index":2939}},{"frame":"  116 |   rerender(<App value={null} />);\n  117 |   expect(container.innerHTML).toEqual('');\n> 118 |   expect(child).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  119 | });\n  120 |\n  121 | it('should animate closed if required', () => {","start":{"line":118,"column":2,"index":2982}},{"frame":"  146 |     onClose: expect.any(Function),\n  147 |   };\n> 148 |   expect(child).toHaveBeenCalledWith(initial);\n      |  ^ Duplicate Assert\n  149 |   expect(child).toHaveBeenCalledTimes(1);\n  150 |   expect(container.innerHTML).toEqual('<div>hi</div>');\n  151 |   child.mockClear();","start":{"line":148,"column":2,"index":3654}},{"frame":"  147 |   };\n  148 |   expect(child).toHaveBeenCalledWith(initial);\n> 149 |   expect(child).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  150 |   expect(container.innerHTML).toEqual('<div>hi</div>');\n  151 |   child.mockClear();\n  152 |","start":{"line":149,"column":2,"index":3701}},{"frame":"  148 |   expect(child).toHaveBeenCalledWith(initial);\n  149 |   expect(child).toHaveBeenCalledTimes(1);\n> 150 |   expect(container.innerHTML).toEqual('<div>hi</div>');\n      |  ^ Duplicate Assert\n  151 |   child.mockClear();\n  152 |\n  153 |   // start closing","start":{"line":150,"column":2,"index":3743}},{"frame":"  163 |     onClose: expect.any(Function),\n  164 |   };\n> 165 |   expect(child).toHaveBeenCalledWith(second);\n      |  ^ Duplicate Assert\n  166 |\n  167 |   // telling AnimateInOut that the animation is finished\n  168 |   const provided: AnimateProvided = child.mock.calls[0][0];","start":{"line":165,"column":2,"index":4170}},{"frame":"  171 |   provided.onClose();\n  172 |\n> 173 |   expect(container.innerHTML).toEqual('');\n      |  ^ Duplicate Assert\n  174 |   expect(child).not.toHaveBeenCalled();\n  175 | });\n  176 |","start":{"line":173,"column":2,"index":4447}},{"frame":"  172 |\n  173 |   expect(container.innerHTML).toEqual('');\n> 174 |   expect(child).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  175 | });\n  176 |","start":{"line":174,"column":2,"index":4490}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":7.299,"halstead":{"bugs":0.953,"difficulty":25,"effort":71450.356,"length":480,"time":3969.464,"vocabulary":62,"volume":2858.014,"operands":{"distinct":52,"total":260,"identifiers":["it","\"should allow children not to be rendered (no animation allowed)\"","child","jest","fn","mockReturnValue","container","render","null","false","expect","innerHTML","toBe","\"\"","not","toHaveBeenCalled","\"should allow children not to be rendered (even when animation is allowed)\"","\"should pass data through to children\"","data","hello","\"world\"","expected","AnimateProvided","animate","\"none\"","onClose","any","Function","toHaveBeenCalledWith","\"should open instantly if required\"","\"should animate open if requested\"","\"open\"","\"should close instantly if required\"","App","value","rerender","initial","toEqual","\"<div>hi</div>\"","mockClear","\"should animate closed if required\"","Props","Object","shouldAnimate","toHaveBeenCalledTimes","1","second","\"close\"","provided","mock","calls","0"]},"operators":{"distinct":10,"total":220,"identifiers":["()","function=>","const","=",".","{}",":","function","return","[]"]}},"paramCount":3,"sloc":{"logical":137,"physical":176}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":6,"path":"../../../../src/view/animate-in-out/animate-in-out","type":"esm"}],"errors":[],"lineEnd":176,"lineStart":1,"maintainability":98.249,"methods":[{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.052,"difficulty":3.393,"effort":533.267,"length":37,"time":29.626,"vocabulary":19,"volume":157.173,"operands":{"distinct":14,"total":19,"identifiers":["child","jest","fn","mockReturnValue","container","render","null","false","expect","innerHTML","toBe","\"\"","not","toHaveBeenCalled"]},"operators":{"distinct":5,"total":18,"identifiers":["const","=","()",".","{}"]}},"paramCount":0,"sloc":{"logical":10,"physical":12},"errors":[],"lineEnd":19,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.05,"difficulty":3.462,"effort":519.637,"length":36,"time":28.869,"vocabulary":18,"volume":150.117,"operands":{"distinct":13,"total":18,"identifiers":["child","jest","fn","mockReturnValue","container","render","null","expect","innerHTML","toBe","\"\"","not","toHaveBeenCalled"]},"operators":{"distinct":5,"total":18,"identifiers":["const","=","()",".","{}"]}},"paramCount":0,"sloc":{"logical":10,"physical":12},"errors":[],"lineEnd":32,"lineStart":21,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.07,"difficulty":4.167,"effort":878.784,"length":46,"time":48.821,"vocabulary":24,"volume":210.908,"operands":{"distinct":18,"total":25,"identifiers":["child","jest","fn","mockReturnValue","data","hello","\"world\"","render","false","expected","AnimateProvided","animate","\"none\"","onClose","expect","any","Function","toHaveBeenCalledWith"]},"operators":{"distinct":6,"total":21,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":13,"physical":18},"errors":[],"lineEnd":51,"lineStart":34,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.07,"difficulty":4.167,"effort":878.784,"length":46,"time":48.821,"vocabulary":24,"volume":210.908,"operands":{"distinct":18,"total":25,"identifiers":["child","jest","fn","mockReturnValue","data","hello","\"world\"","render","false","expected","AnimateProvided","animate","\"none\"","onClose","expect","any","Function","toHaveBeenCalledWith"]},"operators":{"distinct":6,"total":21,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":13,"physical":18},"errors":[],"lineEnd":70,"lineStart":53,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.068,"difficulty":4.235,"effort":862.138,"length":45,"time":47.897,"vocabulary":23,"volume":203.56,"operands":{"distinct":17,"total":24,"identifiers":["child","jest","fn","mockReturnValue","data","hello","\"world\"","render","expected","AnimateProvided","animate","\"open\"","onClose","expect","any","Function","toHaveBeenCalledWith"]},"operators":{"distinct":6,"total":21,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":13,"physical":18},"errors":[],"lineEnd":89,"lineStart":72,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.152,"difficulty":5.672,"effort":2580.684,"length":88,"time":143.371,"vocabulary":36,"volume":454.953,"operands":{"distinct":29,"total":47,"identifiers":["child","jest","fn","mockReturnValue","data","hello","\"world\"","App","value","rerender","container","render","initial","AnimateProvided","animate","\"none\"","onClose","expect","any","Function","toHaveBeenCalledWith","innerHTML","toEqual","\"<div>hi</div>\"","mockClear","null","\"\"","not","toHaveBeenCalled"]},"operators":{"distinct":7,"total":41,"identifiers":["const","=","()",".","{}",":","function"]}},"paramCount":0,"sloc":{"logical":25,"physical":29},"errors":[],"lineEnd":119,"lineStart":91,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":0.5,"effort":4,"length":4,"time":0.222,"vocabulary":4,"volume":8,"operands":{"distinct":3,"total":3,"identifiers":["value","false","child"]},"operators":{"distinct":1,"total":1,"identifiers":["return"]}},"paramCount":1,"sloc":{"logical":1,"physical":7},"errors":[],"lineEnd":100,"lineStart":94,"name":"App","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.703,"halstead":{"bugs":0.273,"difficulty":8,"effort":6557.981,"length":146,"time":364.332,"vocabulary":49,"volume":819.748,"operands":{"distinct":41,"total":82,"identifiers":["child","jest","fn","mockReturnValue","data","hello","\"world\"","Props","value","Object","shouldAnimate","App","container","rerender","render","false","initial","AnimateProvided","animate","\"none\"","onClose","expect","any","Function","toHaveBeenCalledWith","toHaveBeenCalledTimes","1","innerHTML","toEqual","\"<div>hi</div>\"","mockClear","null","second","\"close\"","provided","mock","calls","0","\"\"","not","toHaveBeenCalled"]},"operators":{"distinct":8,"total":64,"identifiers":["const","=","()",".","{}",":","function","[]"]}},"paramCount":0,"sloc":{"logical":37,"physical":55},"errors":[],"lineEnd":175,"lineStart":121,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":0.5,"effort":4,"length":4,"time":0.222,"vocabulary":4,"volume":8,"operands":{"distinct":3,"total":3,"identifiers":["value","shouldAnimate","child"]},"operators":{"distinct":1,"total":1,"identifiers":["return"]}},"paramCount":2,"sloc":{"logical":1,"physical":7},"errors":[],"lineEnd":136,"lineStart":130,"name":"App","paramNames":["value","shouldAnimate"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.73,"halstead":{"bugs":0.095,"difficulty":2.5,"effort":7145.036,"length":48,"time":396.946,"vocabulary":6.2,"volume":285.801,"operands":{"distinct":5.2,"total":26},"operators":{"distinct":1,"total":22}},"paramCount":0.3,"sloc":{"logical":13.7,"physical":17.6}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":27.753,"halstead":{"bugs":0.082,"difficulty":3.788,"effort":1424.364,"length":50.222,"time":79.131,"vocabulary":22.333,"volume":247.041,"operands":{"distinct":17.333,"total":27.333},"operators":{"distinct":5,"total":22.889}},"paramCount":0.333,"sloc":{"logical":13.667,"physical":19.556}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/scroll-viewport.spec.js","testCases":3,"smells":4,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  78 |   let runCount: number = 0;\n  79 |\n> 80 |   while (lastScroll.y < max.y && lastScroll.x < max.x) {\n     |  ^ Conditional Test Logic\n  81 |     const newScroll: Position = add(lastScroll, { x: 10, y: 20 });\n  82 |     const updated: Viewport = scrollViewport(lastViewport, newScroll);\n  83 |","start":{"line":80,"column":2,"index":1764}},{"frame":"  132 |   let lastScroll: Position = max;\n  133 |   let runCount: number = 0;\n> 134 |   while (lastScroll.y > 0 && lastScroll.x > 0) {\n      |  ^ Conditional Test Logic\n  135 |     const newScroll: Position = subtract(lastScroll, { x: 10, y: 20 });\n  136 |     const updated: Viewport = scrollViewport(lastViewport, newScroll);\n  137 |","start":{"line":134,"column":2,"index":3061}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  104 |\n  105 |   // Simply asserting our loop ran a few times\n> 106 |   expect(runCount).toBeGreaterThan(2);\n      |                                   ^ Magic Number\n  107 | });\n  108 |\n  109 | it('should correctly update scroll across multiple movements (backwards)', () => {","start":{"line":106,"column":35,"index":2552}},{"frame":"  160 |\n  161 |   // Simply asserting our loop ran a few times\n> 162 |   expect(runCount).toBeGreaterThan(2);\n      |                                   ^ Magic Number\n  163 | });\n  164 |","start":{"line":162,"column":35,"index":3911}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":5.298,"halstead":{"bugs":1.049,"difficulty":41.351,"effort":130188.56,"length":533,"time":7232.698,"vocabulary":60,"volume":3148.373,"operands":{"distinct":47,"total":299,"identifiers":["origin","Position","x","0","y","it","\"should update the window details scroll\"","original","Viewport","frame","getRect","top","left","right","100","bottom","scroll","initial","current","max","1000","diff","value","displacement","newScroll","50","expected","150","200","negate","updated","scrollViewport","expect","toEqual","\"should correctly update scroll across multiple movements (forwards)\"","Rect","lastViewport","lastScroll","runCount","add","10","20","offsetByPosition","toBeGreaterThan","2","\"should correctly update scroll across multiple movements (backwards)\"","subtract"]},"operators":{"distinct":13,"total":234,"identifiers":["const","=","{}",":","()","function=>",".","let","while","&&","<","++ (postfix)",">"]}},"paramCount":0,"sloc":{"logical":151,"physical":164}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../src/types","type":"esm"},{"line":4,"path":"../../../src/state/position","type":"esm"},{"line":5,"path":"../../../src/state/scroll-viewport","type":"esm"},{"line":6,"path":"../../../src/state/spacing","type":"esm"}],"errors":[],"lineEnd":164,"lineStart":1,"maintainability":75.95,"methods":[{"cyclomatic":1,"cyclomaticDensity":2.5,"halstead":{"bugs":0.22,"difficulty":6.563,"effort":4339.38,"length":126,"time":241.077,"vocabulary":38,"volume":661.239,"operands":{"distinct":32,"total":70,"identifiers":["original","Viewport","frame","getRect","top","0","left","right","100","bottom","scroll","initial","origin","current","max","x","1000","y","diff","value","displacement","newScroll","Position","50","expected","150","200","negate","updated","scrollViewport","expect","toEqual"]},"operators":{"distinct":6,"total":56,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":40,"physical":43},"errors":[],"lineEnd":52,"lineStart":10,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":3,"cyclomaticDensity":6,"halstead":{"bugs":0.354,"difficulty":14.949,"effort":15861.262,"length":188,"time":881.181,"vocabulary":50,"volume":1061.045,"operands":{"distinct":39,"total":106,"identifiers":["original","Rect","getRect","top","0","left","right","100","bottom","max","Position","x","200","y","lastViewport","Viewport","frame","scroll","initial","origin","current","diff","value","displacement","lastScroll","runCount","newScroll","add","10","20","updated","scrollViewport","expected","offsetByPosition","negate","expect","toEqual","toBeGreaterThan","2"]},"operators":{"distinct":11,"total":82,"identifiers":["const","=","()","{}",":","let","while","&&","<",".","++ (postfix)"]}},"paramCount":0,"sloc":{"logical":50,"physical":54},"errors":[],"lineEnd":107,"lineStart":54,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":3,"cyclomaticDensity":5.769,"halstead":{"bugs":0.369,"difficulty":15.654,"effort":17316.219,"length":196,"time":962.012,"vocabulary":50,"volume":1106.196,"operands":{"distinct":39,"total":111,"identifiers":["original","Rect","getRect","top","0","left","right","100","bottom","max","Position","x","200","y","lastViewport","Viewport","frame","scroll","initial","current","diff","value","origin","displacement","lastScroll","runCount","newScroll","subtract","10","20","updated","scrollViewport","expected","offsetByPosition","negate","expect","toEqual","toBeGreaterThan","2"]},"operators":{"distinct":11,"total":85,"identifiers":["const","=","()","{}",":","let","while","&&",">",".","++ (postfix)"]}},"paramCount":0,"sloc":{"logical":52,"physical":55},"errors":[],"lineEnd":163,"lineStart":109,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":2,"cyclomaticDensity":1.325,"halstead":{"bugs":0.262,"difficulty":10.338,"effort":32547.14,"length":133.25,"time":1808.174,"vocabulary":15,"volume":787.093,"operands":{"distinct":11.75,"total":74.75},"operators":{"distinct":3.25,"total":58.5}},"paramCount":0,"sloc":{"logical":37.75,"physical":41}},"methodAverage":{"cyclomatic":2.333,"cyclomaticDensity":4.756,"halstead":{"bugs":0.314,"difficulty":12.388,"effort":12505.62,"length":170,"time":694.757,"vocabulary":46,"volume":942.827,"operands":{"distinct":36.667,"total":95.667},"operators":{"distinct":9.333,"total":74.333}},"paramCount":0,"sloc":{"logical":47.333,"physical":50.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/recompute-placeholders.spec.js","testCases":4,"smells":7,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  17 | import { getForcedDisplacement } from '../../util/impact';\n  18 |\n> 19 | [horizontal, vertical].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  20 |   describe(`on ${axis.direction} axis`, () => {\n  21 |     const preset = getPreset(axis);\n  22 |     const { impact: homeImpact } = getLiftEffect({","start":{"line":19,"column":23,"index":747}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  91 |       });\n  92 |\n> 93 |       expect(first).not.toEqual(preset.droppables);\n     |      ^ Duplicate Assert\n  94 |       const withPlaceholder: DroppableDimension = addPlaceholder(\n  95 |         preset.foreign,\n  96 |         preset.inHome1,","start":{"line":93,"column":6,"index":3108}},{"frame":"   97 |         preset.draggables,\n   98 |       );\n>  99 |       expect(first).toEqual(\n      |      ^ Duplicate Assert\n  100 |         patchDroppableMap(preset.droppables, withPlaceholder),\n  101 |       );\n  102 |","start":{"line":99,"column":6,"index":3310}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  65 |       );\n  66 |       const overForeign: DragImpact = {\n> 67 |         displaced: getForcedDisplacement({\n     |                   ^ Eager Test\n  68 |           visible: [\n  69 |             { dimension: preset.inForeign1 },\n  70 |             { dimension: preset.inForeign2 },","start":{"line":67,"column":19,"index":2361}},{"frame":"  102 |\n  103 |       const overForeign2: DragImpact = {\n> 104 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  105 |           // now moving forward (should not add another placeholder)\n  106 |           visible: [\n  107 |             { dimension: preset.inForeign2 },","start":{"line":104,"column":19,"index":3466}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  65 |       );\n  66 |       const overForeign: DragImpact = {\n> 67 |         displaced: getForcedDisplacement({\n     |                   ^ Lazy Test\n  68 |           visible: [\n  69 |             { dimension: preset.inForeign1 },\n  70 |             { dimension: preset.inForeign2 },","start":{"line":67,"column":19,"index":2361}},{"frame":"  137 |       );\n  138 |       const overForeign: DragImpact = {\n> 139 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  140 |           visible: [\n  141 |             { dimension: preset.inForeign1 },\n  142 |             { dimension: preset.inForeign2 },","start":{"line":139,"column":19,"index":4572}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":4.795,"halstead":{"bugs":1.357,"difficulty":27.261,"effort":110987.77,"length":644,"time":6165.987,"vocabulary":80,"volume":4071.322,"operands":{"distinct":69,"total":342,"identifiers":["horizontal","vertical","forEach","axis","describe","direction","on "," axis","preset","getPreset","impact","homeImpact","getLiftEffect","draggable","inHome1","draggables","home","viewport","it","\"should not do anything if there is no destination change\"","result","DroppableDimensionMap","recomputePlaceholders","droppables","previousImpact","expect","toEqual","\"should not do anything if there is no destination\"","result1","noImpact","result2","\"should add a placeholder if moving to a foreign list\"","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","overForeign","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign1","inForeign2","inForeign3","inForeign4","at","type","\"REORDER\"","destination","index","descriptor","droppableId","foreign","id","first","not","withPlaceholder","DroppableDimension","addPlaceholder","patchDroppableMap","overForeign2","second","\"should remove a placeholder if moving from a foreign list\"","toForeign","subject","toBeTruthy","toHome","toNoWhere"]},"operators":{"distinct":11,"total":302,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":146,"physical":200}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":8,"path":"../../../src/types","type":"esm"},{"line":9,"path":"../../util/dimension","type":"esm"},{"line":10,"path":"../../../src/state/get-displaced-by","type":"esm"},{"line":11,"path":"../../../src/state/axis","type":"esm"},{"line":12,"path":"../../../src/state/recompute-placeholders","type":"esm"},{"line":13,"path":"../../../src/state/no-impact","type":"esm"},{"line":14,"path":"../../../src/state/droppable/with-placeholder","type":"esm"},{"line":15,"path":"../../../src/state/patch-droppable-map","type":"esm"},{"line":16,"path":"../../../src/state/get-lift-effect","type":"esm"},{"line":17,"path":"../../util/impact","type":"esm"}],"errors":[],"lineEnd":200,"lineStart":1,"maintainability":88.714,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":181},"errors":[],"lineEnd":199,"lineStart":19,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.077,"difficulty":5.688,"effort":1312.116,"length":51,"time":72.895,"vocabulary":23,"volume":230.702,"operands":{"distinct":16,"total":26,"identifiers":["preset","getPreset","axis","impact","homeImpact","getLiftEffect","draggable","inHome1","draggables","home","viewport","it","\"should not do anything if there is no destination change\"","\"should not do anything if there is no destination\"","\"should add a placeholder if moving to a foreign list\"","\"should remove a placeholder if moving from a foreign list\""]},"operators":{"distinct":7,"total":25,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":17,"physical":179},"errors":[],"lineEnd":198,"lineStart":20,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.052,"difficulty":4.846,"effort":761.686,"length":37,"time":42.316,"vocabulary":19,"volume":157.173,"operands":{"distinct":13,"total":21,"identifiers":["result","DroppableDimensionMap","recomputePlaceholders","draggable","preset","inHome1","draggables","droppables","impact","homeImpact","previousImpact","expect","toEqual"]},"operators":{"distinct":6,"total":16,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":9,"physical":11},"errors":[],"lineEnd":39,"lineStart":29,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.108,"difficulty":8.4,"effort":2730.265,"length":74,"time":151.681,"vocabulary":21,"volume":325.031,"operands":{"distinct":15,"total":42,"identifiers":["result1","DroppableDimensionMap","recomputePlaceholders","previousImpact","homeImpact","impact","noImpact","draggable","preset","inHome1","draggables","droppables","result2","expect","toEqual"]},"operators":{"distinct":6,"total":32,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":18,"physical":19},"errors":[],"lineEnd":59,"lineStart":41,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.887,"halstead":{"bugs":0.477,"difficulty":11.909,"effort":17039.651,"length":251,"time":946.647,"vocabulary":52,"volume":1430.81,"operands":{"distinct":44,"total":131,"identifiers":["displacedBy","DisplacedBy","getDisplacedBy","axis","preset","inHome1","displaceBy","overForeign","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign1","inForeign2","inForeign3","inForeign4","at","type","\"REORDER\"","destination","index","descriptor","droppableId","foreign","id","first","DroppableDimensionMap","recomputePlaceholders","draggables","droppables","previousImpact","homeImpact","impact","draggable","expect","not","toEqual","withPlaceholder","DroppableDimension","addPlaceholder","patchDroppableMap","overForeign2","second"]},"operators":{"distinct":8,"total":120,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":53,"physical":71},"errors":[],"lineEnd":131,"lineStart":61,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.222,"halstead":{"bugs":0.403,"difficulty":10.273,"effort":12414.521,"length":212,"time":689.696,"vocabulary":52,"volume":1208.493,"operands":{"distinct":44,"total":113,"identifiers":["displacedBy","DisplacedBy","getDisplacedBy","axis","preset","inHome1","displaceBy","overForeign","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign1","inForeign2","inForeign3","inForeign4","at","type","\"REORDER\"","destination","index","descriptor","droppableId","foreign","id","toForeign","DroppableDimensionMap","recomputePlaceholders","draggables","droppables","previousImpact","homeImpact","impact","draggable","expect","not","toEqual","subject","withPlaceholder","toBeTruthy","toHome","toNoWhere","noImpact"]},"operators":{"distinct":8,"total":99,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":45,"physical":65},"errors":[],"lineEnd":197,"lineStart":133,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.685,"halstead":{"bugs":0.194,"difficulty":3.894,"effort":15855.396,"length":92,"time":880.855,"vocabulary":11.429,"volume":581.617,"operands":{"distinct":9.857,"total":48.857},"operators":{"distinct":1.571,"total":43.143}},"paramCount":0.143,"sloc":{"logical":20.857,"physical":28.571}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":12.776,"halstead":{"bugs":0.188,"difficulty":7.269,"effort":5723.548,"length":105.833,"time":317.975,"vocabulary":29.5,"volume":564.238,"operands":{"distinct":22.833,"total":56.333},"operators":{"distinct":6.667,"total":49.5}},"paramCount":0.167,"sloc":{"logical":24,"physical":87.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/position.spec.js","testCases":18,"smells":5,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  90 |         const a = { x: 0, y: 2 };\n  91 |         const b = { x: 0, y: 5 };\n> 92 |         expect(distance(a, b)).toEqual(3);\n     |                                       ^ Magic Number\n  93 |       });\n  94 |\n  95 |       it('should return the distance between two negative values', () => {","start":{"line":92,"column":39,"index":2466}},{"frame":"   96 |         const a = { x: 0, y: -2 };\n   97 |         const b = { x: 0, y: -5 };\n>  98 |         expect(distance(a, b)).toEqual(3);\n      |                                       ^ Magic Number\n   99 |       });\n  100 |\n  101 |       it('should return the distance between a positive and negative value', () => {","start":{"line":98,"column":39,"index":2665}},{"frame":"  102 |         const a = { x: 0, y: -2 };\n  103 |         const b = { x: 0, y: 3 };\n> 104 |         expect(distance(a, b)).toEqual(5);\n      |                                       ^ Magic Number\n  105 |       });\n  106 |     });\n  107 |","start":{"line":104,"column":39,"index":2873}},{"frame":"  111 |         // https://www.mathsisfun.com/pythagoras.html\n  112 |         const target = { x: 3, y: 4 };\n> 113 |         expect(distance(origin, target)).toEqual(5);\n      |                                                 ^ Magic Number\n  114 |       });\n  115 |\n  116 |       it('should account for a negative shift in plane', () => {","start":{"line":113,"column":49,"index":3166}},{"frame":"  118 |         const customOrigin = { x: -1, y: -1 };\n  119 |         const target = { x: -4, y: -5 };\n> 120 |         expect(distance(customOrigin, target)).toEqual(5);\n      |                                                       ^ Magic Number\n  121 |       });\n  122 |     });\n  123 |   });","start":{"line":120,"column":55,"index":3454}}]}],"metrics":{"aggregate":{"cyclomatic":31,"cyclomaticDensity":16.23,"halstead":{"bugs":1.233,"difficulty":24.986,"effort":92404.804,"length":577,"time":5133.6,"vocabulary":85,"volume":3698.219,"operands":{"distinct":73,"total":304,"identifiers":["point1","Position","x","10","y","5","point2","2","1","origin","0","describe","\"position\"","\"add\"","it","\"should add two points together\"","expected","12","6","expect","add","toEqual","\"subtract\"","\"should subtract two points together\"","8","4","subtract","\"is equal\"","\"should return true when two objects are the same\"","isEqual","toBe","true","\"should return true when two objects share the same value\"","copy","\"should return false when two objects have different values\"","false","\"should return true when -origin is compared with +origin\"","\"negate\"","\"should return the inverse of the provided point\"","negate","\"should not negate 0 to -0\"","original","\"patch\"","\"should patch position with a y value\"","patch","\"x\"","\"should patch a position with a x value\"","\"y\"","\"should allow patching of the non primary line\"","\"distance\"","\"on the same axis\"","\"should return the distance between two positive values\"","a","b","distance","3","\"should return the distance between two negative values\"","\"should return the distance between a positive and negative value\"","\"with axis shift\"","\"should account for a shift in plane\"","target","\"should account for a negative shift in plane\"","customOrigin","\"closest\"","\"should return the closest distance from a series of options\"","option1","option2","closest","\"apply\"","\"should apply the function to both values\"","add1","apply","value"]},"operators":{"distinct":12,"total":273,"identifiers":["const","=","{}",":","()","function=>",".","... (spread)","- (prefix)","[]",",","+"]}},"paramCount":1,"sloc":{"logical":191,"physical":144}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":12,"path":"../../../src/state/position","type":"esm"}],"errors":[],"lineEnd":144,"lineStart":1,"maintainability":114.184,"methods":[{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.037,"difficulty":1.778,"effort":196.803,"length":32,"time":10.934,"vocabulary":11,"volume":110.702,"operands":{"distinct":9,"total":16,"identifiers":["describe","\"add\"","\"subtract\"","\"is equal\"","\"negate\"","\"patch\"","\"distance\"","\"closest\"","\"apply\""]},"operators":{"distinct":2,"total":16,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":16,"physical":120},"errors":[],"lineEnd":143,"lineStart":24,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should add two points together\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":6},"errors":[],"lineEnd":30,"lineStart":25,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.029,"difficulty":3.273,"effort":280.92,"length":21,"time":15.607,"vocabulary":17,"volume":85.837,"operands":{"distinct":11,"total":12,"identifiers":["expected","Position","x","12","y","6","expect","add","point1","point2","toEqual"]},"operators":{"distinct":6,"total":9,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":29,"lineStart":26,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should subtract two points together\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":6},"errors":[],"lineEnd":37,"lineStart":32,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.029,"difficulty":3.273,"effort":280.92,"length":21,"time":15.607,"vocabulary":17,"volume":85.837,"operands":{"distinct":11,"total":12,"identifiers":["expected","Position","x","8","y","4","expect","subtract","point1","point2","toEqual"]},"operators":{"distinct":6,"total":9,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":36,"lineStart":33,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should return true when two objects are the same\"","\"should return true when two objects share the same value\"","\"should return false when two objects have different values\"","\"should return true when -origin is compared with +origin\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":20},"errors":[],"lineEnd":58,"lineStart":39,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":1.2,"effort":33.688,"length":10,"time":1.872,"vocabulary":7,"volume":28.074,"operands":{"distinct":5,"total":6,"identifiers":["expect","isEqual","point1","toBe","true"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":42,"lineStart":40,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.019,"difficulty":4,"effort":229.438,"length":16,"time":12.747,"vocabulary":12,"volume":57.359,"operands":{"distinct":6,"total":8,"identifiers":["copy","point1","expect","isEqual","toBe","true"]},"operators":{"distinct":6,"total":8,"identifiers":["const","=","{}","... (spread)","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":6},"errors":[],"lineEnd":49,"lineStart":44,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1,"effort":30,"length":10,"time":1.667,"vocabulary":8,"volume":30,"operands":{"distinct":6,"total":6,"identifiers":["expect","isEqual","point1","point2","toBe","false"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":53,"lineStart":51,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.029,"difficulty":4.286,"effort":368.739,"length":24,"time":20.486,"vocabulary":12,"volume":86.039,"operands":{"distinct":7,"total":12,"identifiers":["expect","isEqual","x","0","y","toBe","true"]},"operators":{"distinct":5,"total":12,"identifiers":["()",".","{}",":","- (prefix)"]}},"paramCount":0,"sloc":{"logical":7,"physical":3},"errors":[],"lineEnd":57,"lineStart":55,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should return the inverse of the provided point\"","\"should not negate 0 to -0\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":11},"errors":[],"lineEnd":70,"lineStart":60,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.034,"difficulty":5.688,"effort":577.731,"length":26,"time":32.096,"vocabulary":15,"volume":101.579,"operands":{"distinct":8,"total":13,"identifiers":["expected","Position","x","point1","y","expect","negate","toEqual"]},"operators":{"distinct":7,"total":13,"identifiers":["const","=","{}",":","- (prefix)",".","()"]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":64,"lineStart":61,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.025,"difficulty":4.125,"effort":314.107,"length":20,"time":17.45,"vocabulary":14,"volume":76.147,"operands":{"distinct":8,"total":11,"identifiers":["original","Position","x","0","y","expect","negate","toEqual"]},"operators":{"distinct":6,"total":9,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":69,"lineStart":66,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should patch position with a y value\"","\"should patch a position with a x value\"","\"should allow patching of the non primary line\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":14},"errors":[],"lineEnd":85,"lineStart":72,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.019,"difficulty":2.25,"effort":129.059,"length":16,"time":7.17,"vocabulary":12,"volume":57.359,"operands":{"distinct":8,"total":9,"identifiers":["expect","patch","\"x\"","5","toEqual","x","y","0"]},"operators":{"distinct":4,"total":7,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":5,"physical":3},"errors":[],"lineEnd":75,"lineStart":73,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.019,"difficulty":2.25,"effort":129.059,"length":16,"time":7.17,"vocabulary":12,"volume":57.359,"operands":{"distinct":8,"total":9,"identifiers":["expect","patch","\"y\"","5","toEqual","x","0","y"]},"operators":{"distinct":4,"total":7,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":5,"physical":3},"errors":[],"lineEnd":79,"lineStart":77,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.042,"difficulty":4.444,"effort":559.178,"length":34,"time":31.065,"vocabulary":13,"volume":125.815,"operands":{"distinct":9,"total":20,"identifiers":["expect","patch","\"x\"","5","1","toEqual","x","y","\"y\""]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":10,"physical":4},"errors":[],"lineEnd":84,"lineStart":81,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"on the same axis\"","\"with axis shift\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":37},"errors":[],"lineEnd":123,"lineStart":87,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should return the distance between two positive values\"","\"should return the distance between two negative values\"","\"should return the distance between a positive and negative value\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":19},"errors":[],"lineEnd":106,"lineStart":88,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.041,"difficulty":4.364,"effort":535.086,"length":30,"time":29.727,"vocabulary":17,"volume":122.624,"operands":{"distinct":11,"total":16,"identifiers":["a","x","0","y","2","b","5","expect","distance","toEqual","3"]},"operators":{"distinct":6,"total":14,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":5},"errors":[],"lineEnd":93,"lineStart":89,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.044,"difficulty":5.091,"effort":679.319,"length":32,"time":37.74,"vocabulary":18,"volume":133.438,"operands":{"distinct":11,"total":16,"identifiers":["a","x","0","y","2","b","5","expect","distance","toEqual","3"]},"operators":{"distinct":7,"total":16,"identifiers":["const","=","{}",":","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":5},"errors":[],"lineEnd":99,"lineStart":95,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.043,"difficulty":5.091,"effort":658.09,"length":31,"time":36.561,"vocabulary":18,"volume":129.268,"operands":{"distinct":11,"total":16,"identifiers":["a","x","0","y","2","b","3","expect","distance","toEqual","5"]},"operators":{"distinct":7,"total":15,"identifiers":["const","=","{}",":","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":5},"errors":[],"lineEnd":105,"lineStart":101,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should account for a shift in plane\"","\"should account for a negative shift in plane\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":15},"errors":[],"lineEnd":122,"lineStart":108,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":3.3,"effort":264,"length":20,"time":14.667,"vocabulary":16,"volume":80,"operands":{"distinct":10,"total":11,"identifiers":["target","x","3","y","4","expect","distance","origin","toEqual","5"]},"operators":{"distinct":6,"total":9,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":6},"errors":[],"lineEnd":114,"lineStart":109,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.046,"difficulty":5.6,"effort":778.253,"length":34,"time":43.236,"vocabulary":17,"volume":138.974,"operands":{"distinct":10,"total":16,"identifiers":["customOrigin","x","1","y","target","4","5","expect","distance","toEqual"]},"operators":{"distinct":7,"total":18,"identifiers":["const","=","{}",":","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":6},"errors":[],"lineEnd":121,"lineStart":116,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should return the closest distance from a series of options\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":10},"errors":[],"lineEnd":134,"lineStart":125,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.051,"difficulty":6.909,"effort":1056.575,"length":36,"time":58.699,"vocabulary":19,"volume":152.925,"operands":{"distinct":11,"total":19,"identifiers":["option1","x","1","y","option2","2","expect","closest","origin","toEqual","distance"]},"operators":{"distinct":8,"total":17,"identifiers":["const","=","{}",":","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":10,"physical":8},"errors":[],"lineEnd":133,"lineStart":126,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should apply the function to both values\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":7},"errors":[],"lineEnd":142,"lineStart":136,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.038,"difficulty":4.9,"effort":560.8,"length":28,"time":31.156,"vocabulary":17,"volume":114.449,"operands":{"distinct":10,"total":14,"identifiers":["add1","apply","value","expect","x","1","y","2","toEqual","3"]},"operators":{"distinct":7,"total":14,"identifiers":["const","=","()","function=>",".","{}",":"]}},"paramCount":0,"sloc":{"logical":10,"physical":5},"errors":[],"lineEnd":141,"lineStart":137,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["value","1"]},"operators":{"distinct":1,"total":1,"identifiers":["+"]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":138,"lineStart":138,"name":"<anon method-30>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.524,"halstead":{"bugs":0.04,"difficulty":0.806,"effort":2980.8,"length":18.613,"time":165.6,"vocabulary":2.742,"volume":119.297,"operands":{"distinct":2.355,"total":9.806},"operators":{"distinct":0.387,"total":8.806}},"paramCount":0.032,"sloc":{"logical":6.161,"physical":4.645}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":24.36,"halstead":{"bugs":0.022,"difficulty":2.864,"effort":264.512,"length":18,"time":14.695,"vocabulary":10.833,"volume":65.774,"operands":{"distinct":6.733,"total":9.467},"operators":{"distinct":4.1,"total":8.533}},"paramCount":0.033,"sloc":{"logical":6,"physical":11.567}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/visibility/is-totally-visible-on-axis.spec.js","testCases":2,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  24 | };\n  25 |\n> 26 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  27 |   describe(`on the ${axis.direction} axis`, () => {\n  28 |     const destination: DroppableDimension = getDroppableDimension({\n  29 |       descriptor: {","start":{"line":26,"column":23,"index":735}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":12.281,"halstead":{"bugs":0.387,"difficulty":13.592,"effort":15799.484,"length":196,"time":877.749,"vocabulary":61,"volume":1162.425,"operands":{"distinct":49,"total":111,"identifiers":["viewport","Rect","getRect","right","1000","top","0","left","bottom","inViewport","Spacing","10","100","vertical","horizontal","forEach","axis","describe","direction","on the "," axis","destination","DroppableDimension","getDroppableDimension","descriptor","id","\"subset\"","type","\"TYPE\"","mode","\"standard\"","borderBox","it","\"should return true when visible on the main axis, even if not on the cross axis\"","targets","offsetByPosition","patch","crossAxisLine","1","target","isVisible","isTotallyVisibleOnAxis","withDroppableDisplacement","true","expect","toBe","\"should return false when visible on the main axis, even if visible on the main axis\"","line","false"]},"operators":{"distinct":12,"total":85,"identifiers":["const","=","()","{}",":",".","[]",",","function=>","``","${}","- (prefix)"]}},"paramCount":3,"sloc":{"logical":57,"physical":77}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../src/types","type":"esm"},{"line":4,"path":"../../../../src/state/visibility/is-visible","type":"esm"},{"line":5,"path":"../../../util/dimension","type":"esm"},{"line":6,"path":"../../../../src/state/axis","type":"esm"},{"line":7,"path":"../../../../src/state/spacing","type":"esm"},{"line":8,"path":"../../../../src/state/position","type":"esm"}],"errors":[],"lineEnd":77,"lineStart":1,"maintainability":110.618,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on the "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":51},"errors":[],"lineEnd":76,"lineStart":26,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.053,"difficulty":3.912,"effort":627.735,"length":35,"time":34.874,"vocabulary":24,"volume":160.474,"operands":{"distinct":17,"total":19,"identifiers":["destination","DroppableDimension","getDroppableDimension","descriptor","id","\"subset\"","type","\"TYPE\"","mode","\"standard\"","borderBox","inViewport","direction","axis","it","\"should return true when visible on the main axis, even if not on the cross axis\"","\"should return false when visible on the main axis, even if visible on the main axis\""]},"operators":{"distinct":7,"total":16,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":49},"errors":[],"lineEnd":75,"lineStart":27,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.043,"difficulty":6.8,"effort":879.02,"length":31,"time":48.834,"vocabulary":18,"volume":129.268,"operands":{"distinct":10,"total":17,"identifiers":["targets","Spacing","offsetByPosition","inViewport","patch","axis","crossAxisLine","1","forEach","target"]},"operators":{"distinct":8,"total":14,"identifiers":["const","=","[]",",","()",".","- (prefix)","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":18},"errors":[],"lineEnd":55,"lineStart":38,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.029,"difficulty":4.667,"effort":401.107,"length":22,"time":22.284,"vocabulary":15,"volume":85.952,"operands":{"distinct":9,"total":14,"identifiers":["isVisible","isTotallyVisibleOnAxis","withDroppableDisplacement","true","target","destination","viewport","expect","toBe"]},"operators":{"distinct":6,"total":8,"identifiers":["const","=","()","{}",":","."]}},"paramCount":1,"sloc":{"logical":8,"physical":9},"errors":[],"lineEnd":54,"lineStart":46,"name":"<anon method-4>","paramNames":["target"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.043,"difficulty":6.8,"effort":879.02,"length":31,"time":48.834,"vocabulary":18,"volume":129.268,"operands":{"distinct":10,"total":17,"identifiers":["targets","Spacing","offsetByPosition","inViewport","patch","axis","line","1","forEach","target"]},"operators":{"distinct":8,"total":14,"identifiers":["const","=","[]",",","()",".","- (prefix)","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":18},"errors":[],"lineEnd":74,"lineStart":57,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.029,"difficulty":4.2,"effort":369.6,"length":22,"time":20.533,"vocabulary":16,"volume":88,"operands":{"distinct":10,"total":14,"identifiers":["isVisible","isTotallyVisibleOnAxis","withDroppableDisplacement","true","target","destination","viewport","expect","toBe","false"]},"operators":{"distinct":6,"total":8,"identifiers":["const","=","()","{}",":","."]}},"paramCount":1,"sloc":{"logical":8,"physical":9},"errors":[],"lineEnd":73,"lineStart":65,"name":"<anon method-6>","paramNames":["target"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.754,"halstead":{"bugs":0.055,"difficulty":1.942,"effort":2257.069,"length":28,"time":125.393,"vocabulary":8.714,"volume":166.061,"operands":{"distinct":7,"total":15.857},"operators":{"distinct":1.714,"total":12.143}},"paramCount":0.429,"sloc":{"logical":8.143,"physical":11}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":18.651,"halstead":{"bugs":0.035,"difficulty":4.813,"effort":539.922,"length":25.167,"time":29.996,"vocabulary":16.833,"volume":104.363,"operands":{"distinct":10.167,"total":14.333},"operators":{"distinct":6.667,"total":10.833}},"paramCount":0.5,"sloc":{"logical":7.333,"physical":25.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/update-displacement-visibility/speculative-displacement.spec.js","testCases":3,"smells":7,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  28 | import { getForcedDisplacement } from '../../../util/impact';\n  29 |\n> 30 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  31 |   describe(`on ${axis.direction} axis`, () => {\n  32 |     it('should do nothing when there is no displacement', () => {\n  33 |       const preset = getPreset(axis);","start":{"line":30,"column":23,"index":1083}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  251 |\n  252 |       const previousImpact: DragImpact = {\n> 253 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  254 |           // would normally be visible in viewport\n  255 |           visible: [{ dimension: inForeign2 }],\n  256 |           // normally not visible in viewport","start":{"line":253,"column":19,"index":8033}},{"frame":"  278 |         // unchanged locations\n  279 |         ...previousImpact,\n> 280 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  281 |           visible: [\n  282 |             // already visibly displaced: inside viewport\n  283 |             { dimension: inForeign2, shouldAnimate: true },","start":{"line":280,"column":19,"index":8825}},{"frame":"  388 |\n  389 |       const previousImpact: DragImpact = {\n> 390 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  391 |           // would normally be visible in viewport\n  392 |           visible: [{ dimension: inForeign2 }],\n  393 |           // normally not visible in viewport","start":{"line":390,"column":19,"index":12452}},{"frame":"  415 |         // unchanged locations\n  416 |         ...previousImpact,\n> 417 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  418 |           visible: [\n  419 |             // already visibly displaced\n  420 |             { dimension: inForeign2, shouldAnimate: true },","start":{"line":417,"column":19,"index":13244}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  251 |\n  252 |       const previousImpact: DragImpact = {\n> 253 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  254 |           // would normally be visible in viewport\n  255 |           visible: [{ dimension: inForeign2 }],\n  256 |           // normally not visible in viewport","start":{"line":253,"column":19,"index":8033}},{"frame":"  388 |\n  389 |       const previousImpact: DragImpact = {\n> 390 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  391 |           // would normally be visible in viewport\n  392 |           visible: [{ dimension: inForeign2 }],\n  393 |           // normally not visible in viewport","start":{"line":390,"column":19,"index":12452}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":1.802,"halstead":{"bugs":3.232,"difficulty":41.831,"effort":405591.08,"length":1364,"time":22532.838,"vocabulary":138,"volume":9696.027,"operands":{"distinct":124,"total":741,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","it","\"should do nothing when there is no displacement\"","preset","getPreset","impact","homeImpact","getLiftEffect","draggable","inHome1","draggables","home","viewport","impact1","DragImpact","speculativelyIncrease","destination","maxScrollChange","x","1000","y","expect","toEqual","impact2","noImpact","foreignId","DroppableId","\"foreign\"","typeId","TypeId","\"our-type\"","homeCrossAxisStart","0","homeCrossAxisEnd","100","foreignCrossAxisStart","foreignCrossAxisEnd","200","itemSize","50","DroppableDimension","getDroppableDimension","descriptor","id","\"home\"","type","mode","\"standard\"","borderBox","crossAxisStart","crossAxisEnd","start","end","10000","DraggableDimension","getDraggableDimension","\"inhome1\"","droppableId","index","inForeign1","\"inForeign1\"","inForeign2","\"inForeign2\"","1","page","inForeign3","\"inForeign3\"","2","inForeign4","\"inForeign4\"","3","inForeign5","\"inForeign5\"","4","DraggableDimensionMap","toDraggableMap","\"should increase the visible displacement in the window by the amount of the max scroll change\"","foreign","\"huge\"","sizeOfViewport","Viewport","createViewport","frame","getRect","scroll","origin","scrollHeight","20000","scrollWidth","isPartiallyVisible","target","withDroppableDisplacement","true","toBe","false","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","previousImpact","displaced","getForcedDisplacement","visible","dimension","invisible","at","\"REORDER\"","result","patch","line","expected","shouldAnimate","\"should increase the visible displacement in the droppable by the amount of the max scroll change\"","sizeOfDroppable","closest","shouldClipSubject","scrollSize"]},"operators":{"distinct":14,"total":623,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":","+","-","... (spread)"]}},"paramCount":1,"sloc":{"logical":333,"physical":433}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":13,"path":"../../../../src/types","type":"esm"},{"line":18,"path":"../../../util/dimension","type":"esm"},{"line":19,"path":"../../../../src/state/update-displacement-visibility/speculatively-increase","type":"esm"},{"line":20,"path":"../../../../src/state/no-impact","type":"esm"},{"line":21,"path":"../../../util/viewport","type":"esm"},{"line":22,"path":"../../../../src/state/position","type":"esm"},{"line":23,"path":"../../../../src/state/axis","type":"esm"},{"line":24,"path":"../../../../src/state/dimension-structures","type":"esm"},{"line":25,"path":"../../../../src/state/get-displaced-by","type":"esm"},{"line":26,"path":"../../../../src/state/visibility/is-visible","type":"esm"},{"line":27,"path":"../../../../src/state/get-lift-effect","type":"esm"},{"line":28,"path":"../../../util/impact","type":"esm"}],"errors":[],"lineEnd":433,"lineStart":1,"maintainability":67.9,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":403},"errors":[],"lineEnd":432,"lineStart":30,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.01,"halstead":{"bugs":0.934,"difficulty":20.583,"effort":57655.611,"length":457,"time":3203.09,"vocabulary":70,"volume":2801.082,"operands":{"distinct":60,"total":247,"identifiers":["it","\"should do nothing when there is no displacement\"","foreignId","DroppableId","\"foreign\"","typeId","TypeId","\"our-type\"","homeCrossAxisStart","0","homeCrossAxisEnd","100","foreignCrossAxisStart","foreignCrossAxisEnd","200","itemSize","50","home","DroppableDimension","getDroppableDimension","descriptor","id","\"home\"","type","mode","\"standard\"","direction","axis","borderBox","crossAxisStart","crossAxisEnd","start","end","10000","inHome1","DraggableDimension","getDraggableDimension","\"inhome1\"","droppableId","index","inForeign1","\"inForeign1\"","inForeign2","\"inForeign2\"","1","page","inForeign3","\"inForeign3\"","2","inForeign4","\"inForeign4\"","3","inForeign5","\"inForeign5\"","4","draggables","DraggableDimensionMap","toDraggableMap","\"should increase the visible displacement in the window by the amount of the max scroll change\"","\"should increase the visible displacement in the droppable by the amount of the max scroll change\""]},"operators":{"distinct":10,"total":210,"identifiers":["()","function=>","const","=","{}",":",".","[]","+",","]}},"paramCount":0,"sloc":{"logical":99,"physical":401},"errors":[],"lineEnd":431,"lineStart":31,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.189,"difficulty":8.348,"effort":4744.769,"length":117,"time":263.598,"vocabulary":29,"volume":568.384,"operands":{"distinct":23,"total":64,"identifiers":["preset","getPreset","axis","impact","homeImpact","getLiftEffect","draggable","inHome1","draggables","home","viewport","impact1","DragImpact","speculativelyIncrease","destination","maxScrollChange","x","1000","y","expect","toEqual","impact2","noImpact"]},"operators":{"distinct":6,"total":53,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":31,"physical":27},"errors":[],"lineEnd":58,"lineStart":32,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.064,"halstead":{"bugs":0.78,"difficulty":14.791,"effort":34601.4,"length":365,"time":1922.3,"vocabulary":85,"volume":2339.428,"operands":{"distinct":74,"total":199,"identifiers":["foreign","DroppableDimension","getDroppableDimension","descriptor","id","foreignId","type","\"huge\"","mode","\"standard\"","direction","axis","borderBox","crossAxisStart","foreignCrossAxisStart","crossAxisEnd","foreignCrossAxisEnd","start","0","end","10000","sizeOfViewport","itemSize","1","viewport","Viewport","createViewport","frame","getRect","scroll","origin","scrollHeight","20000","scrollWidth","expect","isPartiallyVisible","target","inForeign1","page","destination","withDroppableDisplacement","true","toBe","inForeign2","inForeign3","false","inForeign4","inForeign5","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","previousImpact","DragImpact","displaced","getForcedDisplacement","visible","dimension","invisible","at","\"REORDER\"","droppableId","index","result","speculativelyIncrease","impact","draggables","maxScrollChange","patch","line","expected","shouldAnimate","toEqual"]},"operators":{"distinct":11,"total":166,"identifiers":["const","=","()","{}",":",".","-","+","[]",",","... (spread)"]}},"paramCount":0,"sloc":{"logical":94,"physical":119},"errors":[],"lineEnd":293,"lineStart":175,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0.952,"halstead":{"bugs":0.872,"difficulty":16.066,"effort":42025.455,"length":406,"time":2334.748,"vocabulary":87,"volume":2615.835,"operands":{"distinct":76,"total":222,"identifiers":["sizeOfDroppable","itemSize","1","foreign","DroppableDimension","getDroppableDimension","descriptor","id","foreignId","type","\"huge\"","mode","\"standard\"","direction","axis","borderBox","crossAxisStart","foreignCrossAxisStart","crossAxisEnd","foreignCrossAxisEnd","start","0","end","10000","closest","shouldClipSubject","true","scroll","origin","scrollSize","scrollHeight","scrollWidth","viewport","Viewport","createViewport","frame","getRect","expect","isPartiallyVisible","target","inForeign1","page","destination","withDroppableDisplacement","toBe","inForeign2","inForeign3","false","inForeign4","inForeign5","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","previousImpact","DragImpact","displaced","getForcedDisplacement","visible","dimension","invisible","at","\"REORDER\"","droppableId","index","result","speculativelyIncrease","impact","draggables","maxScrollChange","patch","line","expected","shouldAnimate","toEqual"]},"operators":{"distinct":11,"total":184,"identifiers":["const","=","-","+","()","{}",":",".","[]",",","... (spread)"]}},"paramCount":0,"sloc":{"logical":105,"physical":136},"errors":[],"lineEnd":430,"lineStart":295,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.3,"halstead":{"bugs":0.539,"difficulty":6.972,"effort":67598.513,"length":227.333,"time":3755.473,"vocabulary":23,"volume":1616.005,"operands":{"distinct":20.667,"total":123.5},"operators":{"distinct":2.333,"total":103.833}},"paramCount":0.167,"sloc":{"logical":55.5,"physical":72.167}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":11.25,"halstead":{"bugs":0.557,"difficulty":12.457,"effort":27822.057,"length":271,"time":1545.67,"vocabulary":56.2,"volume":1671.59,"operands":{"distinct":47.6,"total":147.4},"operators":{"distinct":8.6,"total":123.6}},"paramCount":0.2,"sloc":{"logical":66.2,"physical":217.2}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/update-displacement-visibility/recompute.spec.js","testCases":2,"smells":3,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"   7 | import { getForcedDisplacement } from '../../../util/impact';\n   8 |\n>  9 | [horizontal, vertical].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  10 |   describe(`on ${axis.direction} axis`, () => {\n  11 |     const preset = getPreset(axis);\n  12 |     const displacedBy: DisplacedBy = getDisplacedBy(","start":{"line":9,"column":23,"index":448}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  40 |       const expected: DragImpact = {\n  41 |         ...impact,\n> 42 |         displaced: getForcedDisplacement({\n     |                   ^ Lazy Test\n  43 |           // visibility recalculated\n  44 |           visible: [\n  45 |             // not animated as previously invisible","start":{"line":42,"column":19,"index":1422}},{"frame":"  63 |       const expected: DragImpact = {\n  64 |         ...impact,\n> 65 |         displaced: getForcedDisplacement({\n     |                   ^ Lazy Test\n  66 |           // visibility recalculated\n  67 |           visible: [\n  68 |             // forced animation","start":{"line":65,"column":19,"index":2137}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":9.091,"halstead":{"bugs":0.445,"difficulty":15.064,"effort":20115.635,"length":227,"time":1117.535,"vocabulary":59,"volume":1335.36,"operands":{"distinct":47,"total":118,"identifiers":["horizontal","vertical","forEach","axis","describe","direction","on "," axis","preset","getPreset","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","impact","DragImpact","displaced","getForcedDisplacement","invisible","inHome2","inHome3","at","type","\"REORDER\"","destination","droppableId","home","descriptor","id","index","it","\"should recompute a displacement\"","recomputed","recompute","viewport","draggables","expected","visible","dimension","shouldAnimate","false","expect","toEqual","\"should allow the displacement animation to be forced\"","forceShouldAnimate","true"]},"operators":{"distinct":12,"total":109,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":","... (spread)"]}},"paramCount":1,"sloc":{"logical":55,"physical":78}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/types","type":"esm"},{"line":3,"path":"../../../util/dimension","type":"esm"},{"line":4,"path":"../../../../src/state/get-displaced-by","type":"esm"},{"line":5,"path":"../../../../src/state/update-displacement-visibility/recompute","type":"esm"},{"line":6,"path":"../../../../src/state/axis","type":"esm"},{"line":7,"path":"../../../util/impact","type":"esm"}],"errors":[],"lineEnd":78,"lineStart":1,"maintainability":103.769,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":69},"errors":[],"lineEnd":77,"lineStart":9,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.129,"difficulty":6.5,"effort":2520.338,"length":75,"time":140.019,"vocabulary":36,"volume":387.744,"operands":{"distinct":27,"total":39,"identifiers":["preset","getPreset","axis","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","impact","DragImpact","displaced","getForcedDisplacement","invisible","inHome2","inHome3","at","type","\"REORDER\"","destination","droppableId","home","descriptor","id","index","it","\"should recompute a displacement\"","\"should allow the displacement animation to be forced\""]},"operators":{"distinct":9,"total":36,"identifiers":["const","=","()",".","{}",":","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":18,"physical":67},"errors":[],"lineEnd":76,"lineStart":10,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.105,"difficulty":7.65,"effort":2415.631,"length":65,"time":134.202,"vocabulary":29,"volume":315.769,"operands":{"distinct":20,"total":34,"identifiers":["recomputed","DragImpact","recompute","impact","viewport","preset","destination","home","draggables","expected","displaced","getForcedDisplacement","visible","dimension","inHome2","shouldAnimate","false","inHome3","expect","toEqual"]},"operators":{"distinct":9,"total":31,"identifiers":["const","=","()","{}",":",".","... (spread)","[]",","]}},"paramCount":0,"sloc":{"logical":16,"physical":21},"errors":[],"lineEnd":52,"lineStart":32,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.111,"difficulty":7.714,"effort":2574.015,"length":68,"time":143.001,"vocabulary":30,"volume":333.669,"operands":{"distinct":21,"total":36,"identifiers":["recomputed","DragImpact","recompute","impact","viewport","preset","destination","home","draggables","forceShouldAnimate","true","expected","displaced","getForcedDisplacement","visible","dimension","inHome2","shouldAnimate","inHome3","expect","toEqual"]},"operators":{"distinct":9,"total":32,"identifiers":["const","=","()","{}",":",".","... (spread)","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":22},"errors":[],"lineEnd":75,"lineStart":54,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.818,"halstead":{"bugs":0.089,"difficulty":3.013,"effort":4023.127,"length":45.4,"time":223.507,"vocabulary":11.8,"volume":267.072,"operands":{"distinct":9.4,"total":23.6},"operators":{"distinct":2.4,"total":21.8}},"paramCount":0.2,"sloc":{"logical":11,"physical":15.6}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":16.922,"halstead":{"bugs":0.089,"difficulty":6.091,"effort":1898.258,"length":54.5,"time":105.459,"vocabulary":26.25,"volume":267.6,"operands":{"distinct":18.25,"total":28.5},"operators":{"distinct":8,"total":26}},"paramCount":0.25,"sloc":{"logical":13.25,"physical":44.75}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/registry/use-registry.spec.js","testCases":1,"smells":7,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  31 |   // initial registration\n  32 |   registry.draggable.register(entry);\n> 33 |   expect(registry.draggable.exists(id)).toBe(true);\n     |  ^ Duplicate Assert\n  34 |\n  35 |   // still available after a unmount\n  36 |   unmount();","start":{"line":33,"column":2,"index":948}},{"frame":"  31 |   // initial registration\n  32 |   registry.draggable.register(entry);\n> 33 |   expect(registry.draggable.exists(id)).toBe(true);\n     |  ^ Duplicate Assert\n  34 |\n  35 |   // still available after a unmount\n  36 |   unmount();","start":{"line":33,"column":2,"index":948}},{"frame":"  35 |   // still available after a unmount\n  36 |   unmount();\n> 37 |   expect(registry.draggable.exists(id)).toBe(true);\n     |  ^ Duplicate Assert\n  38 |\n  39 |   // cleared after frame\n  40 |   requestAnimationFrame.step();","start":{"line":37,"column":2,"index":1051}},{"frame":"  35 |   // still available after a unmount\n  36 |   unmount();\n> 37 |   expect(registry.draggable.exists(id)).toBe(true);\n     |  ^ Duplicate Assert\n  38 |\n  39 |   // cleared after frame\n  40 |   requestAnimationFrame.step();","start":{"line":37,"column":2,"index":1051}},{"frame":"  39 |   // cleared after frame\n  40 |   requestAnimationFrame.step();\n> 41 |   expect(registry.draggable.exists(id)).toBe(false);\n     |  ^ Duplicate Assert\n  42 | });\n  43 |","start":{"line":41,"column":2,"index":1161}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  16 | it('should remove any registrations', () => {\n  17 |   let registry: Registry;\n> 18 |   const entry: DraggableEntry = getDraggableEntry({\n     |                                ^ Eager Test\n  19 |     uniqueId: '1',\n  20 |     dimension: preset.inHome1,\n  21 |   });","start":{"line":18,"column":32,"index":616}},{"frame":"  27 |\n  28 |   const { unmount } = render(<App />);\n> 29 |   invariant(registry);\n     |  ^ Eager Test\n  30 |\n  31 |   // initial registration\n  32 |   registry.draggable.register(entry);","start":{"line":29,"column":2,"index":860}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":10,"halstead":{"bugs":0.193,"difficulty":9.194,"effort":5319.531,"length":108,"time":295.529,"vocabulary":41,"volume":578.616,"operands":{"distinct":31,"total":57,"identifiers":["preset","getPreset","it","\"should remove any registrations\"","registry","Registry","entry","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","inHome1","id","DraggableId","descriptor","App","useRegistry","null","unmount","render","invariant","draggable","register","expect","exists","toBe","true","requestAnimationFrame","step","false"]},"operators":{"distinct":10,"total":51,"identifiers":["const","=","()","function=>","let","{}",":",".","function","return"]}},"paramCount":0,"sloc":{"logical":30,"physical":43}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":7,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":8,"path":"../../../../src/types","type":"esm"},{"line":9,"path":"../../../../src/invariant","type":"esm"},{"line":10,"path":"../../../util/dimension","type":"esm"},{"line":11,"path":"../../../util/registry","type":"esm"},{"line":12,"path":"../../../../src/state/registry/use-registry","type":"esm"}],"errors":[],"lineEnd":43,"lineStart":1,"maintainability":108.115,"methods":[{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.158,"difficulty":7.692,"effort":3639.493,"length":93,"time":202.194,"vocabulary":34,"volume":473.134,"operands":{"distinct":26,"total":50,"identifiers":["registry","Registry","entry","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","id","DraggableId","descriptor","App","unmount","render","invariant","draggable","register","expect","exists","toBe","true","requestAnimationFrame","step","false"]},"operators":{"distinct":8,"total":43,"identifiers":["let","const","=","()","{}",":",".","function"]}},"paramCount":0,"sloc":{"logical":23,"physical":27},"errors":[],"lineEnd":42,"lineStart":16,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["registry","useRegistry","null"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","return"]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":26,"lineStart":23,"name":"App","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.064,"difficulty":3.065,"effort":1773.177,"length":36,"time":98.51,"vocabulary":13.667,"volume":192.872,"operands":{"distinct":10.333,"total":19},"operators":{"distinct":3.333,"total":17}},"paramCount":0,"sloc":{"logical":10,"physical":14.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":18.841,"halstead":{"bugs":0.081,"difficulty":4.596,"effort":1831.379,"length":49.5,"time":101.743,"vocabulary":20,"volume":244.322,"operands":{"distinct":14.5,"total":26.5},"operators":{"distinct":5.5,"total":23}},"paramCount":0,"sloc":{"logical":13,"physical":15.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/registry/queries.spec.js","testCases":14,"smells":2,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  33 |     },\n  34 |   });\n> 35 |   [inHome1, inHome2, ofAnotherType].forEach((entry: DraggableEntry) => {\n     |                                    ^ Conditional Test Logic\n  36 |     registry.draggable.register(entry);\n  37 |   });\n  38 |","start":{"line":35,"column":36,"index":992}},{"frame":"   97 |     },\n   98 |   });\n>  99 |   [home, foreign, ofAnotherType].forEach((entry: DroppableEntry) => {\n      |                                 ^ Conditional Test Logic\n  100 |     registry.droppable.register(entry);\n  101 |   });\n  102 |","start":{"line":99,"column":33,"index":2891}}]}],"metrics":{"aggregate":{"cyclomatic":29,"cyclomaticDensity":20.863,"halstead":{"bugs":1.044,"difficulty":20.635,"effort":64629.628,"length":506,"time":3590.535,"vocabulary":73,"volume":3132.051,"operands":{"distinct":63,"total":260,"identifiers":["preset","getPreset","describe","\"draggable\"","registry","Registry","createRegistry","inHome1","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","inHome2","\"2\"","ofAnotherType","\"3\"","inHome3","descriptor","id","\"of another type\"","type","\"some other type\"","index","1","droppableId","\"some other droppable id\"","forEach","entry","draggable","register","\"getById\"","it","\"should return an item\"","expect","getById","toBe","\"should throw if no item exists\"","\"some unknown id\"","toThrow","\"findById\"","\"should return an item if it exists\"","findById","\"should return null if an item does not exist\"","\"unknown id\"","null","\"exists\"","\"should return true if an item exists\"","exists","true","false","\"getAllByType\"","\"should only return items of the correct type\"","getAllByType","toEqual","\"droppable\"","home","DroppableEntry","getDroppableEntry","foreign","mode","\"standard\"","droppable"]},"operators":{"distinct":10,"total":246,"identifiers":["const","=","()","function=>","{}",":",".","... (spread)","[]",","]}},"paramCount":2,"sloc":{"logical":139,"physical":135}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":6,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":7,"path":"../../../../src/state/registry/create-registry","type":"esm"},{"line":8,"path":"../../../util/dimension","type":"esm"},{"line":9,"path":"../../../util/registry","type":"esm"}],"errors":[],"lineEnd":135,"lineStart":1,"maintainability":119.246,"methods":[{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.17,"difficulty":7.903,"effort":4022.485,"length":95,"time":223.471,"vocabulary":41,"volume":508.967,"operands":{"distinct":31,"total":49,"identifiers":["registry","Registry","createRegistry","inHome1","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome2","\"2\"","ofAnotherType","\"3\"","inHome3","descriptor","id","\"of another type\"","type","\"some other type\"","index","1","droppableId","\"some other droppable id\"","forEach","entry","describe","\"getById\"","\"findById\"","\"exists\"","\"getAllByType\""]},"operators":{"distinct":10,"total":46,"identifiers":["const","=","()","{}",":",".","... (spread)","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":29,"physical":64},"errors":[],"lineEnd":76,"lineStart":13,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["registry","draggable","register","entry"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":37,"lineStart":35,"name":"<anon method-2>","paramNames":["entry"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should return an item\"","\"should throw if no item exists\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":10},"errors":[],"lineEnd":48,"lineStart":39,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.022,"difficulty":1.111,"effort":73.032,"length":19,"time":4.057,"vocabulary":11,"volume":65.729,"operands":{"distinct":9,"total":10,"identifiers":["expect","registry","draggable","getById","preset","inHome1","descriptor","id","toBe"]},"operators":{"distinct":2,"total":9,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":44,"lineStart":40,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":20.897,"length":6,"time":1.161,"vocabulary":5,"volume":13.932,"operands":{"distinct":2,"total":2,"identifiers":["expect","toThrow"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":47,"lineStart":45,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["registry","draggable","getById","\"some unknown id\""]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":46,"lineStart":46,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should return an item if it exists\"","\"should return null if an item does not exist\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":10},"errors":[],"lineEnd":58,"lineStart":49,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.022,"difficulty":1.111,"effort":73.032,"length":19,"time":4.057,"vocabulary":11,"volume":65.729,"operands":{"distinct":9,"total":10,"identifiers":["expect","registry","draggable","findById","preset","inHome1","descriptor","id","toBe"]},"operators":{"distinct":2,"total":9,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":54,"lineStart":50,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.014,"difficulty":1,"effort":41.209,"length":13,"time":2.289,"vocabulary":9,"volume":41.209,"operands":{"distinct":7,"total":7,"identifiers":["expect","registry","draggable","findById","\"unknown id\"","toBe","null"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":57,"lineStart":55,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should return true if an item exists\"","\"should return null if an item does not exist\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":10},"errors":[],"lineEnd":68,"lineStart":59,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.023,"difficulty":1,"effort":68.114,"length":19,"time":3.784,"vocabulary":12,"volume":68.114,"operands":{"distinct":10,"total":10,"identifiers":["expect","registry","draggable","exists","preset","inHome1","descriptor","id","toBe","true"]},"operators":{"distinct":2,"total":9,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":64,"lineStart":60,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.014,"difficulty":1,"effort":41.209,"length":13,"time":2.289,"vocabulary":9,"volume":41.209,"operands":{"distinct":7,"total":7,"identifiers":["expect","registry","draggable","exists","\"unknown id\"","toBe","false"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":67,"lineStart":65,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should only return items of the correct type\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":7},"errors":[],"lineEnd":75,"lineStart":69,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.028,"difficulty":2.2,"effort":184.276,"length":22,"time":10.238,"vocabulary":14,"volume":83.762,"operands":{"distinct":10,"total":11,"identifiers":["expect","registry","draggable","getAllByType","preset","inHome1","descriptor","type","toEqual","inHome2"]},"operators":{"distinct":4,"total":11,"identifiers":["()",".","[]",","]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":74,"lineStart":70,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.161,"difficulty":8.393,"effort":4052.15,"length":92,"time":225.119,"vocabulary":38,"volume":482.809,"operands":{"distinct":28,"total":47,"identifiers":["registry","Registry","createRegistry","home","DroppableEntry","getDroppableEntry","uniqueId","\"1\"","dimension","preset","foreign","\"2\"","ofAnotherType","\"3\"","descriptor","id","\"of another type\"","type","\"some other type\"","mode","\"standard\"","forEach","entry","describe","\"getById\"","\"findById\"","\"exists\"","\"getAllByType\""]},"operators":{"distinct":10,"total":45,"identifiers":["const","=","()","{}",":",".","... (spread)","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":28,"physical":57},"errors":[],"lineEnd":134,"lineStart":78,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["registry","droppable","register","entry"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":101,"lineStart":99,"name":"<anon method-16>","paramNames":["entry"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should return an item\"","\"should throw if no item exists\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":8},"errors":[],"lineEnd":110,"lineStart":103,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.022,"difficulty":1.111,"effort":73.032,"length":19,"time":4.057,"vocabulary":11,"volume":65.729,"operands":{"distinct":9,"total":10,"identifiers":["expect","registry","droppable","getById","preset","home","descriptor","id","toBe"]},"operators":{"distinct":2,"total":9,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":106,"lineStart":104,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":20.897,"length":6,"time":1.161,"vocabulary":5,"volume":13.932,"operands":{"distinct":2,"total":2,"identifiers":["expect","toThrow"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":109,"lineStart":107,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["registry","droppable","getById","\"some unknown id\""]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":108,"lineStart":108,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should return an item if it exists\"","\"should return null if an item does not exist\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":8},"errors":[],"lineEnd":118,"lineStart":111,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.022,"difficulty":1.111,"effort":73.032,"length":19,"time":4.057,"vocabulary":11,"volume":65.729,"operands":{"distinct":9,"total":10,"identifiers":["expect","registry","droppable","findById","preset","home","descriptor","id","toBe"]},"operators":{"distinct":2,"total":9,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":114,"lineStart":112,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.014,"difficulty":1,"effort":41.209,"length":13,"time":2.289,"vocabulary":9,"volume":41.209,"operands":{"distinct":7,"total":7,"identifiers":["expect","registry","droppable","findById","\"unknown id\"","toBe","null"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":117,"lineStart":115,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should return true if an item exists\"","\"should return null if an item does not exist\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":8},"errors":[],"lineEnd":126,"lineStart":119,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.023,"difficulty":1,"effort":68.114,"length":19,"time":3.784,"vocabulary":12,"volume":68.114,"operands":{"distinct":10,"total":10,"identifiers":["expect","registry","droppable","exists","preset","home","descriptor","id","toBe","true"]},"operators":{"distinct":2,"total":9,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":122,"lineStart":120,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.014,"difficulty":1,"effort":41.209,"length":13,"time":2.289,"vocabulary":9,"volume":41.209,"operands":{"distinct":7,"total":7,"identifiers":["expect","registry","droppable","exists","\"unknown id\"","toBe","false"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":125,"lineStart":123,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should only return items of the correct type\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":7},"errors":[],"lineEnd":133,"lineStart":127,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.028,"difficulty":2.2,"effort":184.276,"length":22,"time":10.238,"vocabulary":14,"volume":83.762,"operands":{"distinct":10,"total":11,"identifiers":["expect","registry","droppable","getAllByType","preset","home","descriptor","type","toEqual","foreign"]},"operators":{"distinct":4,"total":11,"identifiers":["()",".","[]",","]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":132,"lineStart":128,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.719,"halstead":{"bugs":0.036,"difficulty":0.712,"effort":2228.608,"length":17.448,"time":123.812,"vocabulary":2.517,"volume":108.002,"operands":{"distinct":2.172,"total":8.966},"operators":{"distinct":0.345,"total":8.483}},"paramCount":0.069,"sloc":{"logical":4.793,"physical":4.655}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":36.56,"halstead":{"bugs":0.023,"difficulty":1.719,"effort":332.684,"length":17.607,"time":18.482,"vocabulary":10.107,"volume":69.678,"operands":{"distinct":7.321,"total":9.071},"operators":{"distinct":2.786,"total":8.536}},"paramCount":0.071,"sloc":{"logical":4.75,"physical":8.893}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/registry/event-listeners.spec.js","testCases":3,"smells":3,"smellInfo":[{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  18 |   registry.subscribe(listener2);\n  19 |\n> 20 |   const entry: DraggableEntry = getDraggableEntry({\n     |                                ^ Lazy Test\n  21 |     uniqueId: '1',\n  22 |     dimension: preset.inHome1,\n  23 |   });","start":{"line":20,"column":32,"index":588}},{"frame":"  38 |   unsubscribe();\n  39 |\n> 40 |   const entry: DraggableEntry = getDraggableEntry({\n     |                                ^ Lazy Test\n  41 |     uniqueId: '1',\n  42 |     dimension: preset.inHome1,\n  43 |   });","start":{"line":40,"column":32,"index":1169}},{"frame":"  60 |   unsubscribe();\n  61 |\n> 62 |   const entry: DraggableEntry = getDraggableEntry({\n     |                                ^ Lazy Test\n  63 |     uniqueId: '1',\n  64 |     dimension: preset.inHome1,\n  65 |   });","start":{"line":62,"column":32,"index":1756}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":5.479,"halstead":{"bugs":0.452,"difficulty":13.894,"effort":18855.349,"length":255,"time":1047.519,"vocabulary":40,"volume":1357.092,"operands":{"distinct":33,"total":131,"identifiers":["preset","getPreset","it","\"should allow adding event listeners\"","listener1","jest","fn","listener2","registry","Registry","createRegistry","subscribe","entry","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","inHome1","draggable","register","expect","toHaveBeenCalledWith","type","\"ADDITION\"","value","\"should allow removing event listeners\"","toBeRemoved","persistent","unsubscribe","not","toHaveBeenCalled","\"should not error on a double unsubscribe\""]},"operators":{"distinct":7,"total":124,"identifiers":["const","=","()","function=>",".","{}",":"]}},"paramCount":0,"sloc":{"logical":73,"physical":73}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":5,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":6,"path":"../../../../src/state/registry/create-registry","type":"esm"},{"line":7,"path":"../../../util/dimension","type":"esm"},{"line":8,"path":"../../../util/registry","type":"esm"}],"errors":[],"lineEnd":73,"lineStart":1,"maintainability":95.025,"methods":[{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.126,"difficulty":5.348,"effort":2026.412,"length":78,"time":112.578,"vocabulary":29,"volume":378.923,"operands":{"distinct":23,"total":41,"identifiers":["listener1","jest","fn","listener2","registry","Registry","createRegistry","subscribe","entry","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","draggable","register","expect","toHaveBeenCalledWith","type","\"ADDITION\"","value"]},"operators":{"distinct":6,"total":37,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":21,"physical":17},"errors":[],"lineEnd":28,"lineStart":12,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.13,"difficulty":4.615,"effort":1800,"length":78,"time":100,"vocabulary":32,"volume":390,"operands":{"distinct":26,"total":40,"identifiers":["toBeRemoved","jest","fn","persistent","registry","Registry","createRegistry","unsubscribe","subscribe","entry","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","draggable","register","expect","not","toHaveBeenCalled","toHaveBeenCalledWith","type","\"ADDITION\"","value"]},"operators":{"distinct":6,"total":38,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":21,"physical":19},"errors":[],"lineEnd":48,"lineStart":30,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.137,"difficulty":4.846,"effort":1986.923,"length":82,"time":110.385,"vocabulary":32,"volume":410,"operands":{"distinct":26,"total":42,"identifiers":["toBeRemoved","jest","fn","persistent","registry","Registry","createRegistry","unsubscribe","subscribe","entry","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","draggable","register","expect","not","toHaveBeenCalled","toHaveBeenCalledWith","type","\"ADDITION\"","value"]},"operators":{"distinct":6,"total":40,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":23,"physical":23},"errors":[],"lineEnd":72,"lineStart":50,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.37,"halstead":{"bugs":0.113,"difficulty":3.473,"effort":4713.837,"length":63.75,"time":261.88,"vocabulary":10,"volume":339.273,"operands":{"distinct":8.25,"total":32.75},"operators":{"distinct":1.75,"total":31}},"paramCount":0,"sloc":{"logical":18.25,"physical":18.25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":4.624,"halstead":{"bugs":0.131,"difficulty":4.936,"effort":1937.778,"length":79.333,"time":107.654,"vocabulary":31,"volume":392.974,"operands":{"distinct":25,"total":41},"operators":{"distinct":6,"total":38.333}},"paramCount":0,"sloc":{"logical":21.667,"physical":19.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/registry/droppable-registration.spec.js","testCases":5,"smells":13,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  69 |\n  70 |   // overwritten entry1\n> 71 |   expect(registry.droppable.findById(entry1.descriptor.id)).toBe(entry2);\n     |  ^ Duplicate Assert\n  72 |\n  73 |   // entry1 is now outdated, so entry2 won't be removed\n  74 |   registry.droppable.unregister(entry1);","start":{"line":71,"column":2,"index":1952}},{"frame":"  69 |\n  70 |   // overwritten entry1\n> 71 |   expect(registry.droppable.findById(entry1.descriptor.id)).toBe(entry2);\n     |  ^ Duplicate Assert\n  72 |\n  73 |   // entry1 is now outdated, so entry2 won't be removed\n  74 |   registry.droppable.unregister(entry1);","start":{"line":71,"column":2,"index":1952}},{"frame":"  73 |   // entry1 is now outdated, so entry2 won't be removed\n  74 |   registry.droppable.unregister(entry1);\n> 75 |   expect(registry.droppable.findById(entry1.descriptor.id)).toBe(entry2);\n     |  ^ Duplicate Assert\n  76 | });\n  77 |\n  78 | it('should allow unregistrations when there is no entry', () => {","start":{"line":75,"column":2,"index":2124}},{"frame":"  73 |   // entry1 is now outdated, so entry2 won't be removed\n  74 |   registry.droppable.unregister(entry1);\n> 75 |   expect(registry.droppable.findById(entry1.descriptor.id)).toBe(entry2);\n     |  ^ Duplicate Assert\n  76 | });\n  77 |\n  78 | it('should allow unregistrations when there is no entry', () => {","start":{"line":75,"column":2,"index":2124}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  37 | it('should allow for entry overwriting', () => {\n  38 |   const registry: Registry = createRegistry();\n> 39 |   const entry1: DroppableEntry = getDroppableEntry({\n     |                                 ^ Eager Test\n  40 |     uniqueId: '1',\n  41 |     dimension: preset.home,\n  42 |   });","start":{"line":39,"column":33,"index":1117}},{"frame":"  41 |     dimension: preset.home,\n  42 |   });\n> 43 |   const entry2: DroppableEntry = getDroppableEntry({\n     |                                 ^ Eager Test\n  44 |     uniqueId: '1',\n  45 |     dimension: preset.home,\n  46 |   });","start":{"line":43,"column":33,"index":1223}},{"frame":"  55 | it('should not unregister with an outdated uniqueId', () => {\n  56 |   const registry: Registry = createRegistry();\n> 57 |   const entry1: DroppableEntry = getDroppableEntry({\n     |                                 ^ Eager Test\n  58 |     uniqueId: '1',\n  59 |     dimension: preset.home,\n  60 |   });","start":{"line":57,"column":33,"index":1622}},{"frame":"  59 |     dimension: preset.home,\n  60 |   });\n> 61 |   const entry2: DroppableEntry = getDroppableEntry({\n     |                                 ^ Eager Test\n  62 |     uniqueId: '2',\n  63 |     dimension: preset.home,\n  64 |   });","start":{"line":61,"column":33,"index":1728}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  12 | it('should allow registration', () => {\n  13 |   const registry: Registry = createRegistry();\n> 14 |   const entry: DroppableEntry = getDroppableEntry({\n     |                                ^ Lazy Test\n  15 |     uniqueId: '1',\n  16 |     dimension: preset.home,\n  17 |   });","start":{"line":14,"column":32,"index":448}},{"frame":"  24 | it('should allow unregistration', () => {\n  25 |   const registry: Registry = createRegistry();\n> 26 |   const entry: DroppableEntry = getDroppableEntry({\n     |                                ^ Lazy Test\n  27 |     uniqueId: '1',\n  28 |     dimension: preset.home,\n  29 |   });","start":{"line":26,"column":32,"index":759}},{"frame":"  37 | it('should allow for entry overwriting', () => {\n  38 |   const registry: Registry = createRegistry();\n> 39 |   const entry1: DroppableEntry = getDroppableEntry({\n     |                                 ^ Lazy Test\n  40 |     uniqueId: '1',\n  41 |     dimension: preset.home,\n  42 |   });","start":{"line":39,"column":33,"index":1117}},{"frame":"  55 | it('should not unregister with an outdated uniqueId', () => {\n  56 |   const registry: Registry = createRegistry();\n> 57 |   const entry1: DroppableEntry = getDroppableEntry({\n     |                                 ^ Lazy Test\n  58 |     uniqueId: '1',\n  59 |     dimension: preset.home,\n  60 |   });","start":{"line":57,"column":33,"index":1622}},{"frame":"  78 | it('should allow unregistrations when there is no entry', () => {\n  79 |   const registry: Registry = createRegistry();\n> 80 |   const entry1: DroppableEntry = getDroppableEntry({\n     |                                 ^ Lazy Test\n  81 |     uniqueId: '1',\n  82 |     dimension: preset.home,\n  83 |   });","start":{"line":80,"column":33,"index":2347}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":8.75,"halstead":{"bugs":0.587,"difficulty":19.25,"effort":33880.75,"length":333,"time":1882.264,"vocabulary":39,"volume":1760.039,"operands":{"distinct":32,"total":176,"identifiers":["preset","getPreset","it","\"should allow registration\"","registry","Registry","createRegistry","entry","DroppableEntry","getDroppableEntry","uniqueId","\"1\"","dimension","home","droppable","register","expect","findById","descriptor","id","toBe","\"should allow unregistration\"","unregister","null","\"should allow for entry overwriting\"","entry1","entry2","\"should not unregister with an outdated uniqueId\"","\"2\"","\"should allow unregistrations when there is no entry\"","not","toThrow"]},"operators":{"distinct":7,"total":157,"identifiers":["const","=","()","function=>","{}",":","."]}},"paramCount":0,"sloc":{"logical":80,"physical":92}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":5,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":6,"path":"../../../../src/state/registry/create-registry","type":"esm"},{"line":7,"path":"../../../util/dimension","type":"esm"},{"line":8,"path":"../../../util/registry","type":"esm"}],"errors":[],"lineEnd":92,"lineStart":1,"maintainability":102.517,"methods":[{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.069,"difficulty":4,"effort":825.293,"length":45,"time":45.85,"vocabulary":24,"volume":206.323,"operands":{"distinct":18,"total":24,"identifiers":["registry","Registry","createRegistry","entry","DroppableEntry","getDroppableEntry","uniqueId","\"1\"","dimension","preset","home","droppable","register","expect","findById","descriptor","id","toBe"]},"operators":{"distinct":6,"total":21,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":10,"physical":11},"errors":[],"lineEnd":22,"lineStart":12,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.081,"difficulty":4.2,"effort":1026.576,"length":52,"time":57.032,"vocabulary":26,"volume":244.423,"operands":{"distinct":20,"total":28,"identifiers":["registry","Registry","createRegistry","entry","DroppableEntry","getDroppableEntry","uniqueId","\"1\"","dimension","preset","home","droppable","register","unregister","expect","findById","descriptor","id","toBe","null"]},"operators":{"distinct":6,"total":24,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":11,"physical":12},"errors":[],"lineEnd":35,"lineStart":24,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.104,"difficulty":5.684,"effort":1768.576,"length":67,"time":98.254,"vocabulary":25,"volume":311.138,"operands":{"distinct":19,"total":36,"identifiers":["registry","Registry","createRegistry","entry1","DroppableEntry","getDroppableEntry","uniqueId","\"1\"","dimension","preset","home","entry2","droppable","register","expect","findById","descriptor","id","toBe"]},"operators":{"distinct":6,"total":31,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":15,"physical":17},"errors":[],"lineEnd":53,"lineStart":37,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.144,"difficulty":7,"effort":3028.863,"length":91,"time":168.27,"vocabulary":27,"volume":432.695,"operands":{"distinct":21,"total":49,"identifiers":["registry","Registry","createRegistry","entry1","DroppableEntry","getDroppableEntry","uniqueId","\"1\"","dimension","preset","home","entry2","\"2\"","droppable","register","expect","findById","descriptor","id","toBe","unregister"]},"operators":{"distinct":6,"total":42,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":19,"physical":22},"errors":[],"lineEnd":76,"lineStart":55,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.073,"difficulty":4.025,"effort":880.367,"length":46,"time":48.909,"vocabulary":27,"volume":218.725,"operands":{"distinct":20,"total":23,"identifiers":["registry","Registry","createRegistry","entry1","DroppableEntry","getDroppableEntry","uniqueId","\"1\"","dimension","preset","home","expect","droppable","findById","descriptor","id","toBe","null","not","toThrow"]},"operators":{"distinct":7,"total":23,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":14},"errors":[],"lineEnd":91,"lineStart":78,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["registry","droppable","unregister","entry1"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":90,"lineStart":88,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.25,"halstead":{"bugs":0.084,"difficulty":2.75,"effort":4840.107,"length":47.571,"time":268.895,"vocabulary":5.571,"volume":251.434,"operands":{"distinct":4.571,"total":25.143},"operators":{"distinct":1,"total":22.429}},"paramCount":0,"sloc":{"logical":11.429,"physical":13.143}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":23.226,"halstead":{"bugs":0.08,"difficulty":4.318,"effort":1257.962,"length":51.333,"time":69.887,"vocabulary":22.5,"volume":238.566,"operands":{"distinct":17,"total":27.333},"operators":{"distinct":5.5,"total":24}},"paramCount":0,"sloc":{"logical":11.333,"physical":13.167}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/registry/draggable-registration.spec.js","testCases":7,"smells":15,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  118 |   // overwritten entry 1\n  119 |\n> 120 |   expect(registry.draggable.findById(entry1.descriptor.id)).toBe(entry2);\n      |  ^ Duplicate Assert\n  121 |\n  122 |   // entry 1 is now outdated, so this won't be removed\n  123 |   registry.draggable.unregister(entry1);","start":{"line":120,"column":2,"index":3303}},{"frame":"  118 |   // overwritten entry 1\n  119 |\n> 120 |   expect(registry.draggable.findById(entry1.descriptor.id)).toBe(entry2);\n      |  ^ Duplicate Assert\n  121 |\n  122 |   // entry 1 is now outdated, so this won't be removed\n  123 |   registry.draggable.unregister(entry1);","start":{"line":120,"column":2,"index":3303}},{"frame":"  122 |   // entry 1 is now outdated, so this won't be removed\n  123 |   registry.draggable.unregister(entry1);\n> 124 |   expect(registry.draggable.findById(entry1.descriptor.id)).toBe(entry2);\n      |  ^ Duplicate Assert\n  125 | });\n  126 |\n  127 | it('should allow unregistrations when there is no entry', () => {","start":{"line":124,"column":2,"index":3474}},{"frame":"  122 |   // entry 1 is now outdated, so this won't be removed\n  123 |   registry.draggable.unregister(entry1);\n> 124 |   expect(registry.draggable.findById(entry1.descriptor.id)).toBe(entry2);\n      |  ^ Duplicate Assert\n  125 | });\n  126 |\n  127 | it('should allow unregistrations when there is no entry', () => {","start":{"line":124,"column":2,"index":3474}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  86 | it('should allow for entry overwriting', () => {\n  87 |   const registry: Registry = createRegistry();\n> 88 |   const entry1: DraggableEntry = getDraggableEntry({\n     |                                 ^ Eager Test\n  89 |     uniqueId: '1',\n  90 |     dimension: preset.inHome1,\n  91 |   });","start":{"line":88,"column":33,"index":2499}},{"frame":"  90 |     dimension: preset.inHome1,\n  91 |   });\n> 92 |   const entry2: DraggableEntry = getDraggableEntry({\n     |                                 ^ Eager Test\n  93 |     uniqueId: '1',\n  94 |     dimension: preset.inHome1,\n  95 |   });","start":{"line":92,"column":33,"index":2608}},{"frame":"  104 | it('should not unregister with an outdated uniqueId', () => {\n  105 |   const registry: Registry = createRegistry();\n> 106 |   const entry1: DraggableEntry = getDraggableEntry({\n      |                                 ^ Eager Test\n  107 |     uniqueId: '1',\n  108 |     dimension: preset.inHome1,\n  109 |   });","start":{"line":106,"column":33,"index":3010}},{"frame":"  108 |     dimension: preset.inHome1,\n  109 |   });\n> 110 |   const entry2: DraggableEntry = getDraggableEntry({\n      |                                 ^ Eager Test\n  111 |     uniqueId: '2',\n  112 |     dimension: preset.inHome1,\n  113 |   });","start":{"line":110,"column":33,"index":3119}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  12 | it('should allow registration', () => {\n  13 |   const registry: Registry = createRegistry();\n> 14 |   const entry: DraggableEntry = getDraggableEntry({\n     |                                ^ Lazy Test\n  15 |     uniqueId: '1',\n  16 |     dimension: preset.inHome1,\n  17 |   });","start":{"line":14,"column":32,"index":448}},{"frame":"  24 | it('should allow unregistration', () => {\n  25 |   const registry: Registry = createRegistry();\n> 26 |   const entry: DraggableEntry = getDraggableEntry({\n     |                                ^ Lazy Test\n  27 |     uniqueId: '1',\n  28 |     dimension: preset.inHome1,\n  29 |   });","start":{"line":26,"column":32,"index":762}},{"frame":"  37 | it('should allow for updating existing entries', () => {\n  38 |   const registry: Registry = createRegistry();\n> 39 |   const initial: DraggableEntry = getDraggableEntry({\n     |                                  ^ Lazy Test\n  40 |     uniqueId: '1',\n  41 |     dimension: preset.inHome1,\n  42 |   });","start":{"line":39,"column":34,"index":1132}},{"frame":"  61 | it('should throw away updates if the uniqueId is outdated', () => {\n  62 |   const registry: Registry = createRegistry();\n> 63 |   const initial: DraggableEntry = getDraggableEntry({\n     |                                  ^ Lazy Test\n  64 |     uniqueId: '1',\n  65 |     dimension: preset.inHome1,\n  66 |   });","start":{"line":63,"column":34,"index":1822}},{"frame":"  86 | it('should allow for entry overwriting', () => {\n  87 |   const registry: Registry = createRegistry();\n> 88 |   const entry1: DraggableEntry = getDraggableEntry({\n     |                                 ^ Lazy Test\n  89 |     uniqueId: '1',\n  90 |     dimension: preset.inHome1,\n  91 |   });","start":{"line":88,"column":33,"index":2499}},{"frame":"  104 | it('should not unregister with an outdated uniqueId', () => {\n  105 |   const registry: Registry = createRegistry();\n> 106 |   const entry1: DraggableEntry = getDraggableEntry({\n      |                                 ^ Lazy Test\n  107 |     uniqueId: '1',\n  108 |     dimension: preset.inHome1,\n  109 |   });","start":{"line":106,"column":33,"index":3010}},{"frame":"  128 |   // this can happen if an unregistration occurs after a .clean\n  129 |   const registry: Registry = createRegistry();\n> 130 |   const entry1: DraggableEntry = getDraggableEntry({\n      |                                 ^ Lazy Test\n  131 |     uniqueId: '1',\n  132 |     dimension: preset.inHome1,\n  133 |   });","start":{"line":130,"column":33,"index":3761}}]}],"metrics":{"aggregate":{"cyclomatic":11,"cyclomaticDensity":8.73,"halstead":{"bugs":0.969,"difficulty":22.384,"effort":65060.208,"length":515,"time":3614.456,"vocabulary":50,"volume":2906.586,"operands":{"distinct":43,"total":275,"identifiers":["preset","getPreset","it","\"should allow registration\"","registry","Registry","createRegistry","entry","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","inHome1","draggable","register","expect","findById","descriptor","id","toBe","\"should allow unregistration\"","unregister","null","\"should allow for updating existing entries\"","initial","updated","options","canDragInteractiveElements","true","shouldRespectForcePress","isEnabled","getDimension","update","\"should throw away updates if the uniqueId is outdated\"","\"2\"","\"should allow for entry overwriting\"","entry1","entry2","\"should not unregister with an outdated uniqueId\"","\"should allow unregistrations when there is no entry\"","not","toThrow"]},"operators":{"distinct":7,"total":240,"identifiers":["const","=","()","function=>","{}",":","."]}},"paramCount":0,"sloc":{"logical":126,"physical":142}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":5,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":6,"path":"../../../../src/state/registry/create-registry","type":"esm"},{"line":7,"path":"../../../util/dimension","type":"esm"},{"line":8,"path":"../../../util/registry","type":"esm"}],"errors":[],"lineEnd":142,"lineStart":1,"maintainability":101.795,"methods":[{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.069,"difficulty":4,"effort":825.293,"length":45,"time":45.85,"vocabulary":24,"volume":206.323,"operands":{"distinct":18,"total":24,"identifiers":["registry","Registry","createRegistry","entry","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","draggable","register","expect","findById","descriptor","id","toBe"]},"operators":{"distinct":6,"total":21,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":10,"physical":11},"errors":[],"lineEnd":22,"lineStart":12,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.081,"difficulty":4.2,"effort":1026.576,"length":52,"time":57.032,"vocabulary":26,"volume":244.423,"operands":{"distinct":20,"total":28,"identifiers":["registry","Registry","createRegistry","entry","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","draggable","register","unregister","expect","findById","descriptor","id","toBe","null"]},"operators":{"distinct":6,"total":24,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":11,"physical":12},"errors":[],"lineEnd":35,"lineStart":24,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.143,"difficulty":6.192,"effort":2655.097,"length":85,"time":147.505,"vocabulary":33,"volume":428.774,"operands":{"distinct":26,"total":46,"identifiers":["registry","Registry","createRegistry","initial","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","updated","descriptor","options","canDragInteractiveElements","true","shouldRespectForcePress","isEnabled","getDimension","draggable","register","update","expect","findById","id","toBe"]},"operators":{"distinct":7,"total":39,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":20,"physical":23},"errors":[],"lineEnd":59,"lineStart":37,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["preset","inHome1"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":52,"lineStart":52,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.141,"difficulty":5.833,"effort":2463.18,"length":83,"time":136.843,"vocabulary":34,"volume":422.259,"operands":{"distinct":27,"total":45,"identifiers":["registry","Registry","createRegistry","initial","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","updated","\"2\"","descriptor","options","canDragInteractiveElements","true","shouldRespectForcePress","isEnabled","getDimension","draggable","register","update","expect","findById","id","toBe"]},"operators":{"distinct":7,"total":38,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":20,"physical":24},"errors":[],"lineEnd":84,"lineStart":61,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["preset","inHome1"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":77,"lineStart":77,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.104,"difficulty":5.684,"effort":1768.576,"length":67,"time":98.254,"vocabulary":25,"volume":311.138,"operands":{"distinct":19,"total":36,"identifiers":["registry","Registry","createRegistry","entry1","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","entry2","draggable","register","expect","findById","descriptor","id","toBe"]},"operators":{"distinct":6,"total":31,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":15,"physical":17},"errors":[],"lineEnd":102,"lineStart":86,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.144,"difficulty":7,"effort":3028.863,"length":91,"time":168.27,"vocabulary":27,"volume":432.695,"operands":{"distinct":21,"total":49,"identifiers":["registry","Registry","createRegistry","entry1","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","entry2","\"2\"","draggable","register","expect","findById","descriptor","id","toBe","unregister"]},"operators":{"distinct":6,"total":42,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":19,"physical":22},"errors":[],"lineEnd":125,"lineStart":104,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.073,"difficulty":4.025,"effort":880.367,"length":46,"time":48.909,"vocabulary":27,"volume":218.725,"operands":{"distinct":20,"total":23,"identifiers":["registry","Registry","createRegistry","entry1","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","expect","draggable","findById","descriptor","id","toBe","null","not","toThrow"]},"operators":{"distinct":7,"total":23,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":15},"errors":[],"lineEnd":141,"lineStart":127,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["registry","draggable","unregister","entry1"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":140,"lineStart":138,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.794,"halstead":{"bugs":0.088,"difficulty":2.035,"effort":5914.564,"length":46.818,"time":328.587,"vocabulary":4.545,"volume":264.235,"operands":{"distinct":3.909,"total":25},"operators":{"distinct":0.636,"total":21.818}},"paramCount":0,"sloc":{"logical":11.455,"physical":12.909}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":34.935,"halstead":{"bugs":0.076,"difficulty":3.893,"effort":1267.08,"length":48.2,"time":70.393,"vocabulary":20.8,"volume":229.194,"operands":{"distinct":15.9,"total":25.9},"operators":{"distinct":4.9,"total":22.3}},"paramCount":0,"sloc":{"logical":11,"physical":12.9}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/registry/cleanup.spec.js","testCases":2,"smells":8,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  19 |     getDroppableEntry({ uniqueId: '1', dimension: preset.home }),\n  20 |   );\n> 21 |   expect(registry.draggable.exists(preset.inHome1.descriptor.id)).toBe(true);\n     |  ^ Duplicate Assert\n  22 |   expect(registry.droppable.exists(preset.home.descriptor.id)).toBe(true);\n  23 |\n  24 |   registry.clean();","start":{"line":21,"column":2,"index":651}},{"frame":"  20 |   );\n  21 |   expect(registry.draggable.exists(preset.inHome1.descriptor.id)).toBe(true);\n> 22 |   expect(registry.droppable.exists(preset.home.descriptor.id)).toBe(true);\n     |  ^ Duplicate Assert\n  23 |\n  24 |   registry.clean();\n  25 |","start":{"line":22,"column":2,"index":729}},{"frame":"  25 |\n  26 |   // now cannot find entries\n> 27 |   expect(registry.draggable.exists(preset.inHome1.descriptor.id)).toBe(false);\n     |  ^ Duplicate Assert\n  28 |   expect(registry.droppable.exists(preset.home.descriptor.id)).toBe(false);\n  29 | });\n  30 |","start":{"line":27,"column":2,"index":855}},{"frame":"  26 |   // now cannot find entries\n  27 |   expect(registry.draggable.exists(preset.inHome1.descriptor.id)).toBe(false);\n> 28 |   expect(registry.droppable.exists(preset.home.descriptor.id)).toBe(false);\n     |  ^ Duplicate Assert\n  29 | });\n  30 |\n  31 | it('should remove unsubscribe any event listeners', () => {","start":{"line":28,"column":2,"index":934}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  14 |\n  15 |   registry.draggable.register(\n> 16 |     getDraggableEntry({ uniqueId: '1', dimension: preset.inHome1 }),\n     |    ^ Eager Test\n  17 |   );\n  18 |   registry.droppable.register(\n  19 |     getDroppableEntry({ uniqueId: '1', dimension: preset.home }),","start":{"line":16,"column":4,"index":477}},{"frame":"  17 |   );\n  18 |   registry.droppable.register(\n> 19 |     getDroppableEntry({ uniqueId: '1', dimension: preset.home }),\n     |    ^ Eager Test\n  20 |   );\n  21 |   expect(registry.draggable.exists(preset.inHome1.descriptor.id)).toBe(true);\n  22 |   expect(registry.droppable.exists(preset.home.descriptor.id)).toBe(true);","start":{"line":19,"column":4,"index":582}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  14 |\n  15 |   registry.draggable.register(\n> 16 |     getDraggableEntry({ uniqueId: '1', dimension: preset.inHome1 }),\n     |    ^ Lazy Test\n  17 |   );\n  18 |   registry.droppable.register(\n  19 |     getDroppableEntry({ uniqueId: '1', dimension: preset.home }),","start":{"line":16,"column":4,"index":477}},{"frame":"  39 |   registry.clean();\n  40 |\n> 41 |   const entry: DraggableEntry = getDraggableEntry({\n     |                                ^ Lazy Test\n  42 |     uniqueId: '1',\n  43 |     dimension: preset.inHome1,\n  44 |   });","start":{"line":41,"column":32,"index":1345}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":7.407,"halstead":{"bugs":0.408,"difficulty":10.408,"effort":12746.374,"length":223,"time":708.132,"vocabulary":45,"volume":1224.683,"operands":{"distinct":38,"total":113,"identifiers":["preset","getPreset","it","\"should remove any registrations\"","registry","Registry","createRegistry","draggable","register","getDraggableEntry","uniqueId","\"1\"","dimension","inHome1","droppable","getDroppableEntry","home","expect","exists","descriptor","id","toBe","true","clean","false","\"should remove unsubscribe any event listeners\"","listener1","jest","fn","listener2","unsubscribe1","subscribe","unsubscribe2","entry","DraggableEntry","not","toHaveBeenCalled","toThrow"]},"operators":{"distinct":7,"total":110,"identifiers":["const","=","()","function=>",".","{}",":"]}},"paramCount":0,"sloc":{"logical":54,"physical":56}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":5,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":6,"path":"../../../../src/state/registry/create-registry","type":"esm"},{"line":7,"path":"../../../util/dimension","type":"esm"},{"line":8,"path":"../../../util/registry","type":"esm"}],"errors":[],"lineEnd":56,"lineStart":1,"maintainability":101.248,"methods":[{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.192,"difficulty":8.591,"effort":4955.946,"length":120,"time":275.33,"vocabulary":28,"volume":576.883,"operands":{"distinct":22,"total":63,"identifiers":["registry","Registry","createRegistry","draggable","register","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","droppable","getDroppableEntry","home","expect","exists","descriptor","id","toBe","true","clean","false"]},"operators":{"distinct":6,"total":57,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":23,"physical":18},"errors":[],"lineEnd":29,"lineStart":12,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.143,"difficulty":5.88,"effort":2528.4,"length":86,"time":140.467,"vocabulary":32,"volume":430,"operands":{"distinct":25,"total":42,"identifiers":["listener1","jest","fn","listener2","registry","Registry","createRegistry","unsubscribe1","subscribe","unsubscribe2","clean","entry","DraggableEntry","getDraggableEntry","uniqueId","\"1\"","dimension","preset","inHome1","draggable","register","expect","not","toHaveBeenCalled","toThrow"]},"operators":{"distinct":7,"total":44,"identifiers":["const","=","()",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":23,"physical":25},"errors":[],"lineEnd":55,"lineStart":31,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":3.17,"length":4,"time":0.176,"vocabulary":3,"volume":6.34,"operands":{"distinct":2,"total":2,"identifiers":["unsubscribe1","unsubscribe2"]},"operators":{"distinct":1,"total":2,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":54,"lineStart":51,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.852,"halstead":{"bugs":0.102,"difficulty":2.602,"effort":3186.594,"length":55.75,"time":177.033,"vocabulary":11.25,"volume":306.171,"operands":{"distinct":9.5,"total":28.25},"operators":{"distinct":1.75,"total":27.5}},"paramCount":0,"sloc":{"logical":13.5,"physical":14}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":19.565,"halstead":{"bugs":0.113,"difficulty":4.99,"effort":2495.839,"length":70,"time":138.658,"vocabulary":21,"volume":337.741,"operands":{"distinct":16.333,"total":35.667},"operators":{"distinct":4.667,"total":34.333}},"paramCount":0,"sloc":{"logical":16,"physical":15.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/publish-while-dragging/recompute-after-critical.spec.js","testCases":2,"smells":8,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  49 |   });\n  50 |\n> 51 |   invariant(result.phase === 'DRAGGING');\n     |  ^ Eager Test\n  52 |\n  53 |   {\n  54 |     const expected: LiftEffect = {","start":{"line":51,"column":2,"index":1530}},{"frame":"  69 |\n  70 |   {\n> 71 |     const displaced: DisplacementGroups = getForcedDisplacement({\n     |                                          ^ Eager Test\n  72 |       visible: [\n  73 |         { dimension: preset.inHome2, shouldAnimate: false },\n  74 |         { dimension: preset.inHome3, shouldAnimate: false },","start":{"line":71,"column":42,"index":2025}},{"frame":"  103 |   });\n  104 |\n> 105 |   invariant(result.phase === 'DRAGGING');\n      |  ^ Eager Test\n  106 |\n  107 |   {\n  108 |     const expected: LiftEffect = {","start":{"line":105,"column":2,"index":3017}},{"frame":"  120 |\n  121 |   {\n> 122 |     const displaced: DisplacementGroups = getForcedDisplacement({\n      |                                          ^ Eager Test\n  123 |       visible: [\n  124 |         { dimension: preset.inHome2, shouldAnimate: false },\n  125 |         { dimension: preset.inHome3, shouldAnimate: false },","start":{"line":122,"column":42,"index":3407}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  49 |   });\n  50 |\n> 51 |   invariant(result.phase === 'DRAGGING');\n     |  ^ Lazy Test\n  52 |\n  53 |   {\n  54 |     const expected: LiftEffect = {","start":{"line":51,"column":2,"index":1530}},{"frame":"  69 |\n  70 |   {\n> 71 |     const displaced: DisplacementGroups = getForcedDisplacement({\n     |                                          ^ Lazy Test\n  72 |       visible: [\n  73 |         { dimension: preset.inHome2, shouldAnimate: false },\n  74 |         { dimension: preset.inHome3, shouldAnimate: false },","start":{"line":71,"column":42,"index":2025}},{"frame":"  103 |   });\n  104 |\n> 105 |   invariant(result.phase === 'DRAGGING');\n      |  ^ Lazy Test\n  106 |\n  107 |   {\n  108 |     const expected: LiftEffect = {","start":{"line":105,"column":2,"index":3017}},{"frame":"  120 |\n  121 |   {\n> 122 |     const displaced: DisplacementGroups = getForcedDisplacement({\n      |                                          ^ Lazy Test\n  123 |       visible: [\n  124 |         { dimension: preset.inHome2, shouldAnimate: false },\n  125 |         { dimension: preset.inHome3, shouldAnimate: false },","start":{"line":122,"column":42,"index":3407}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":3.297,"halstead":{"bugs":0.857,"difficulty":21.29,"effort":54731.324,"length":414,"time":3040.629,"vocabulary":74,"volume":2570.714,"operands":{"distinct":62,"total":220,"identifiers":["state","getStatePreset","preset","getPreset","vertical","it","\"should recalculate after critical (something added)\"","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","added","DraggableDimension","inHome4","descriptor","index","1","id","\"added\"","published","Published","empty","additions","modified","droppableId","virtualHome","scroll","origin","original","CollectingState","withVirtuals","collecting","result","DraggingState","DropPendingState","publish","invariant","phase","\"DRAGGING\"","expected","LiftEffect","inVirtualList","true","effected","inHome2","inHome3","expect","afterCritical","toEqual","displaced","DisplacementGroups","getForcedDisplacement","visible","dimension","shouldAnimate","false","DragImpact","at","onLiftImpact","\"should recalculate after critical (something removed)\"","removals"]},"operators":{"distinct":12,"total":194,"identifiers":["const","=","()","function=>",".","{}","... (spread)",":","+","[]","===",","]}},"paramCount":0,"sloc":{"logical":91,"physical":136}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/invariant","type":"esm"},{"line":3,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":14,"path":"../../../../src/types","type":"esm"},{"line":15,"path":"../../../../src/state/publish-while-dragging-in-virtual","type":"esm"},{"line":16,"path":"../../../util/dimension","type":"esm"},{"line":17,"path":"./util","type":"esm"},{"line":18,"path":"../../../../src/state/get-displaced-by","type":"esm"},{"line":19,"path":"../../../../src/state/axis","type":"esm"},{"line":20,"path":"../../../../src/state/position","type":"esm"},{"line":21,"path":"../../../util/impact","type":"esm"}],"errors":[],"lineEnd":136,"lineStart":1,"maintainability":82.166,"methods":[{"cyclomatic":1,"cyclomaticDensity":2.174,"halstead":{"bugs":0.459,"difficulty":11.884,"effort":16364.196,"length":227,"time":909.122,"vocabulary":67,"volume":1377.002,"operands":{"distinct":56,"total":121,"identifiers":["displacedBy","DisplacedBy","getDisplacedBy","vertical","preset","inHome1","displaceBy","added","DraggableDimension","inHome4","descriptor","index","1","id","\"added\"","published","Published","empty","additions","modified","droppableId","virtualHome","scroll","origin","original","CollectingState","withVirtuals","state","collecting","result","DraggingState","DropPendingState","publish","invariant","phase","\"DRAGGING\"","expected","LiftEffect","inVirtualList","true","effected","inHome2","inHome3","expect","afterCritical","toEqual","displaced","DisplacementGroups","getForcedDisplacement","visible","dimension","shouldAnimate","false","DragImpact","at","onLiftImpact"]},"operators":{"distinct":11,"total":106,"identifiers":["const","=","()",".","{}","... (spread)",":","+","[]","===",","]}},"paramCount":0,"sloc":{"logical":46,"physical":61},"errors":[],"lineEnd":86,"lineStart":26,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.703,"halstead":{"bugs":0.331,"difficulty":7.941,"effort":7880.487,"length":168,"time":437.805,"vocabulary":60,"volume":992.358,"operands":{"distinct":51,"total":90,"identifiers":["displacedBy","DisplacedBy","getDisplacedBy","vertical","preset","inHome1","displaceBy","published","Published","removals","inHome4","descriptor","id","additions","modified","droppableId","virtualHome","scroll","origin","original","CollectingState","withVirtuals","state","collecting","result","DraggingState","DropPendingState","publish","invariant","phase","\"DRAGGING\"","expected","LiftEffect","inVirtualList","true","effected","inHome2","inHome3","expect","afterCritical","toEqual","displaced","DisplacementGroups","getForcedDisplacement","visible","dimension","shouldAnimate","false","DragImpact","at","onLiftImpact"]},"operators":{"distinct":9,"total":78,"identifiers":["const","=","()",".","{}",":","[]","===",","]}},"paramCount":0,"sloc":{"logical":37,"physical":48},"errors":[],"lineEnd":135,"lineStart":88,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.099,"halstead":{"bugs":0.286,"difficulty":7.097,"effort":18243.775,"length":138,"time":1013.543,"vocabulary":24.667,"volume":856.905,"operands":{"distinct":20.667,"total":73.333},"operators":{"distinct":4,"total":64.667}},"paramCount":0,"sloc":{"logical":30.333,"physical":45.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":2.438,"halstead":{"bugs":0.395,"difficulty":9.913,"effort":12122.342,"length":197.5,"time":673.463,"vocabulary":63.5,"volume":1184.68,"operands":{"distinct":53.5,"total":105.5},"operators":{"distinct":10,"total":92}},"paramCount":0,"sloc":{"logical":41.5,"physical":54.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/publish-while-dragging/displacement-animation.spec.js","testCases":1,"smells":4,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  38 |     type: 'MOVE_RIGHT',\n  39 |   });\n> 40 |   invariant(moveToForeign);\n     |  ^ Eager Test\n  41 |   const inForeignImpact: DragImpact = moveToForeign.impact;\n  42 |   // validation\n  43 |   {","start":{"line":40,"column":2,"index":1464}},{"frame":"  42 |   // validation\n  43 |   {\n> 44 |     const displaced: DisplacementGroups = getForcedDisplacement({\n     |                                          ^ Eager Test\n  45 |       visible: [\n  46 |         // initial movement goes after inForeign1\n  47 |         { dimension: preset.inForeign2, shouldAnimate: true },","start":{"line":44,"column":42,"index":1612}},{"frame":"   96 |     published,\n   97 |   });\n>  98 |   invariant(result.phase === 'DRAGGING');\n      |  ^ Eager Test\n   99 |\n  100 |   const displaced: DisplacementGroups = getForcedDisplacement({\n  101 |     visible: [","start":{"line":98,"column":2,"index":3167}},{"frame":"   98 |   invariant(result.phase === 'DRAGGING');\n   99 |\n> 100 |   const displaced: DisplacementGroups = getForcedDisplacement({\n      |                                        ^ Eager Test\n  101 |     visible: [\n  102 |       // original animation unchanged\n  103 |       { dimension: preset.inForeign2, shouldAnimate: true },","start":{"line":100,"column":40,"index":3248}}]}],"metrics":{"aggregate":{"cyclomatic":2,"cyclomaticDensity":2.778,"halstead":{"bugs":0.66,"difficulty":14.471,"effort":28633.872,"length":313,"time":1590.771,"vocabulary":80,"volume":1978.763,"operands":{"distinct":68,"total":164,"identifiers":["preset","getPreset","vertical","state","getSimpleStatePreset","it","\"should not animate any displacement\"","inHomeState","DraggingState","addDroppable","dragging","virtualForeign","moveToForeign","PublicResult","moveInDirection","type","\"MOVE_RIGHT\"","invariant","inForeignImpact","DragImpact","impact","displaced","DisplacementGroups","getForcedDisplacement","visible","dimension","inForeign2","shouldAnimate","true","inForeign3","inForeign4","displacedBy","getDisplacedBy","inHome1","displaceBy","at","\"REORDER\"","destination","index","descriptor","droppableId","foreign","id","expect","toEqual","inForeignState","update","clientSelection","added","DraggableDimension","1","\"added\"","collectingState","CollectingState","phase","\"COLLECTING\"","published","Published","empty","additions","modified","scroll","origin","result","DropPendingState","publish","\"DRAGGING\"","expected"]},"operators":{"distinct":12,"total":149,"identifiers":["const","=","()","function=>",".","{}",":","[]",",","... (spread)","+","==="]}},"paramCount":0,"sloc":{"logical":72,"physical":117}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/invariant","type":"esm"},{"line":3,"path":"../../../util/dimension","type":"esm"},{"line":12,"path":"../../../../src/types","type":"esm"},{"line":13,"path":"./util","type":"esm"},{"line":14,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":15,"path":"../../../../src/state/publish-while-dragging-in-virtual","type":"esm"},{"line":16,"path":"../../../../src/state/get-displaced-by","type":"esm"},{"line":17,"path":"../../../../src/state/axis","type":"esm"},{"line":18,"path":"../../../../src/state/move-in-direction/move-in-direction-types","type":"esm"},{"line":19,"path":"../../../../src/state/move-in-direction","type":"esm"},{"line":20,"path":"../../../../src/state/post-reducer/when-moving/update","type":"esm"},{"line":21,"path":"../../../util/impact","type":"esm"},{"line":22,"path":"../../../../src/state/position","type":"esm"}],"errors":[],"lineEnd":117,"lineStart":1,"maintainability":80.22,"methods":[{"cyclomatic":1,"cyclomaticDensity":1.515,"halstead":{"bugs":0.617,"difficulty":13.406,"effort":24801.015,"length":297,"time":1377.834,"vocabulary":75,"volume":1849.959,"operands":{"distinct":64,"total":156,"identifiers":["inHomeState","DraggingState","addDroppable","state","dragging","virtualForeign","moveToForeign","PublicResult","moveInDirection","type","\"MOVE_RIGHT\"","invariant","inForeignImpact","DragImpact","impact","displaced","DisplacementGroups","getForcedDisplacement","visible","dimension","preset","inForeign2","shouldAnimate","true","inForeign3","inForeign4","displacedBy","getDisplacedBy","vertical","inHome1","displaceBy","at","\"REORDER\"","destination","index","descriptor","droppableId","foreign","id","expect","toEqual","inForeignState","update","clientSelection","added","DraggableDimension","1","\"added\"","collectingState","CollectingState","phase","\"COLLECTING\"","published","Published","empty","additions","modified","scroll","origin","result","DropPendingState","publish","\"DRAGGING\"","expected"]},"operators":{"distinct":11,"total":141,"identifiers":["const","=","()",".","{}",":","[]",",","... (spread)","+","==="]}},"paramCount":0,"sloc":{"logical":66,"physical":90},"errors":[],"lineEnd":116,"lineStart":27,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.389,"halstead":{"bugs":0.33,"difficulty":7.235,"effort":14316.936,"length":156.5,"time":795.385,"vocabulary":40,"volume":989.382,"operands":{"distinct":34,"total":82},"operators":{"distinct":6,"total":74.5}},"paramCount":0,"sloc":{"logical":36,"physical":58.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":1.515,"halstead":{"bugs":0.617,"difficulty":13.406,"effort":24801.015,"length":297,"time":1377.834,"vocabulary":75,"volume":1849.959,"operands":{"distinct":64,"total":156},"operators":{"distinct":11,"total":141}},"paramCount":0,"sloc":{"logical":66,"physical":90}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/publish-while-dragging/adjust-additions-for-scroll-change.spec.js","testCases":2,"smells":2,"smellInfo":[{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  70 |   });\n  71 |\n> 72 |   invariant(result.phase === 'DRAGGING');\n     |  ^ Lazy Test\n  73 |   expect(result.dimensions.draggables[added.descriptor.id]).toEqual(unshifted);\n  74 | });\n  75 |","start":{"line":72,"column":2,"index":2454}},{"frame":"  121 |   });\n  122 |\n> 123 |   invariant(result.phase === 'DRAGGING');\n      |  ^ Lazy Test\n  124 |   expect(result.dimensions.draggables[added.descriptor.id]).toEqual(unshifted);\n  125 | });\n  126 |","start":{"line":123,"column":2,"index":4168}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":3.261,"halstead":{"bugs":0.936,"difficulty":17.286,"effort":48519.895,"length":444,"time":2695.55,"vocabulary":80,"volume":2806.936,"operands":{"distinct":70,"total":242,"identifiers":["state","getStatePreset","preset","getPreset","it","\"should shift added draggables to account for change in page scroll since start of drag\"","scrollChange","Position","x","20","y","40","scrollDisplacement","negate","newScroll","add","viewport","scroll","initial","scrolledViewport","Viewport","scrollViewport","added","DraggableDimension","getDraggableDimension","descriptor","index","0","id","\"added\"","droppableId","home","type","borderBox","offset","inHome1","client","windowScroll","unshifted","published","Published","empty","additions","modified","virtualHome","origin","original","CollectingState","withVirtuals","collecting","center","result","DraggingState","DropPendingState","publish","invariant","phase","\"DRAGGING\"","expect","dimensions","draggables","toEqual","\"should shift added draggables to account for change in droppable scroll since start of drag\"","getFrame","scrolled","DroppableDimension","scrollDroppable","current","withScrolled","addDroppable"]},"operators":{"distinct":10,"total":202,"identifiers":["const","=","()","function=>","{}",":",".","... (spread)","[]","==="]}},"paramCount":0,"sloc":{"logical":92,"physical":126}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":11,"path":"../../../../src/types","type":"esm"},{"line":12,"path":"../../../../src/invariant","type":"esm"},{"line":13,"path":"../../../../src/state/publish-while-dragging-in-virtual","type":"esm"},{"line":19,"path":"../../../util/dimension","type":"esm"},{"line":20,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":21,"path":"./util","type":"esm"},{"line":22,"path":"../../../../src/state/position","type":"esm"},{"line":23,"path":"../../../../src/state/scroll-viewport","type":"esm"},{"line":24,"path":"../../../../src/state/droppable/scroll-droppable","type":"esm"}],"errors":[],"lineEnd":126,"lineStart":1,"maintainability":82.401,"methods":[{"cyclomatic":1,"cyclomaticDensity":2.5,"halstead":{"bugs":0.427,"difficulty":9,"effort":11519.503,"length":211,"time":639.972,"vocabulary":67,"volume":1279.945,"operands":{"distinct":58,"total":116,"identifiers":["scrollChange","Position","x","20","y","40","scrollDisplacement","negate","newScroll","add","preset","viewport","scroll","initial","scrolledViewport","Viewport","scrollViewport","added","DraggableDimension","getDraggableDimension","descriptor","index","0","id","\"added\"","droppableId","home","type","borderBox","offset","inHome1","client","windowScroll","unshifted","published","Published","empty","additions","modified","virtualHome","origin","original","CollectingState","withVirtuals","state","collecting","center","result","DraggingState","DropPendingState","publish","invariant","phase","\"DRAGGING\"","expect","dimensions","draggables","toEqual"]},"operators":{"distinct":9,"total":95,"identifiers":["const","=","{}",":","()",".","... (spread)","[]","==="]}},"paramCount":0,"sloc":{"logical":40,"physical":46},"errors":[],"lineEnd":74,"lineStart":29,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.273,"halstead":{"bugs":0.435,"difficulty":9.155,"effort":11940.26,"length":215,"time":663.348,"vocabulary":67,"volume":1304.209,"operands":{"distinct":58,"total":118,"identifiers":["scrollChange","Position","x","20","y","40","scrollDisplacement","negate","newScroll","add","getFrame","virtualHome","scroll","initial","scrolled","DroppableDimension","scrollDroppable","expect","current","toEqual","added","DraggableDimension","getDraggableDimension","descriptor","index","0","id","\"added\"","droppableId","preset","home","type","borderBox","offset","inHome1","client","windowScroll","unshifted","published","Published","empty","additions","modified","original","CollectingState","state","collecting","withScrolled","addDroppable","result","DraggingState","DropPendingState","publish","invariant","phase","\"DRAGGING\"","dimensions","draggables"]},"operators":{"distinct":9,"total":97,"identifiers":["const","=","{}",":","()",".","... (spread)","[]","==="]}},"paramCount":0,"sloc":{"logical":44,"physical":50},"errors":[],"lineEnd":125,"lineStart":76,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.087,"halstead":{"bugs":0.312,"difficulty":5.762,"effort":16173.298,"length":148,"time":898.517,"vocabulary":26.667,"volume":935.645,"operands":{"distinct":23.333,"total":80.667},"operators":{"distinct":3.333,"total":67.333}},"paramCount":0,"sloc":{"logical":30.667,"physical":42}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":2.386,"halstead":{"bugs":0.431,"difficulty":9.078,"effort":11729.882,"length":213,"time":651.66,"vocabulary":67,"volume":1292.077,"operands":{"distinct":58,"total":117},"operators":{"distinct":9,"total":96}},"paramCount":0,"sloc":{"logical":42,"physical":48}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-in-direction.spec.js","testCases":9,"smells":37,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  136 | });\n  137 |\n> 138 | [vertical, horizontal].forEach((axis: Axis) => {\n      |                       ^ Conditional Test Logic\n  139 |   const state = getStatePreset(axis);\n  140 |   const preset = getPreset(axis);\n  141 |","start":{"line":138,"column":23,"index":4243}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  24 |     });\n  25 |\n> 26 |     invariant(result, 'expected a result');\n     |    ^ Eager Test\n  27 |     const expected: DraggableLocation = {\n  28 |       droppableId: preset.home.descriptor.id,\n  29 |       index: 1,","start":{"line":26,"column":4,"index":930}},{"frame":"  29 |       index: 1,\n  30 |     };\n> 31 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n     |           ^ Eager Test\n  32 |   });\n  33 |\n  34 |   it('should move backwards on a MOVE_UP', () => {","start":{"line":31,"column":11,"index":1092}},{"frame":"  38 |     });\n  39 |\n> 40 |     invariant(result, 'expected a result');\n     |    ^ Eager Test\n  41 |     const expected: DraggableLocation = {\n  42 |       droppableId: preset.home.descriptor.id,\n  43 |       index: 0,","start":{"line":40,"column":4,"index":1350}},{"frame":"  43 |       index: 0,\n  44 |     };\n> 45 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n     |           ^ Eager Test\n  46 |   });\n  47 |\n  48 |   it('should move cross axis forwards on a MOVE_RIGHT', () => {","start":{"line":45,"column":11,"index":1512}},{"frame":"  52 |     });\n  53 |\n> 54 |     invariant(result, 'expected a result');\n     |    ^ Eager Test\n  55 |     const expected: DraggableLocation = {\n  56 |       droppableId: preset.foreign.descriptor.id,\n  57 |       index: 1,","start":{"line":54,"column":4,"index":1758}},{"frame":"  57 |       index: 1,\n  58 |     };\n> 59 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n     |           ^ Eager Test\n  60 |   });\n  61 |\n  62 |   it('should move cross axis backwards on a MOVE_LEFT', () => {","start":{"line":59,"column":11,"index":1923}},{"frame":"  66 |     });\n  67 |\n> 68 |     invariant(result, 'expected a result');\n     |    ^ Eager Test\n  69 |     const expected: DraggableLocation = {\n  70 |       droppableId: preset.home.descriptor.id,\n  71 |       index: 0,","start":{"line":68,"column":4,"index":2199}},{"frame":"  71 |       index: 0,\n  72 |     };\n> 73 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n     |           ^ Eager Test\n  74 |   });\n  75 | });\n  76 |","start":{"line":73,"column":11,"index":2361}},{"frame":"  85 |     });\n  86 |\n> 87 |     invariant(result, 'expected a result');\n     |    ^ Eager Test\n  88 |     const expected: DraggableLocation = {\n  89 |       droppableId: preset.home.descriptor.id,\n  90 |       index: 1,","start":{"line":87,"column":4,"index":2727}},{"frame":"  90 |       index: 1,\n  91 |     };\n> 92 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n     |           ^ Eager Test\n  93 |   });\n  94 |\n  95 |   it('should move backwards on a MOVE_LEFT', () => {","start":{"line":92,"column":11,"index":2889}},{"frame":"   99 |     });\n  100 |\n> 101 |     invariant(result, 'expected a result');\n      |    ^ Eager Test\n  102 |     const expected: DraggableLocation = {\n  103 |       droppableId: preset.home.descriptor.id,\n  104 |       index: 0,","start":{"line":101,"column":4,"index":3151}},{"frame":"  104 |       index: 0,\n  105 |     };\n> 106 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n      |           ^ Eager Test\n  107 |   });\n  108 |\n  109 |   it('should move cross axis forwards on a MOVE_DOWN', () => {","start":{"line":106,"column":11,"index":3313}},{"frame":"  113 |     });\n  114 |\n> 115 |     invariant(result, 'expected a result');\n      |    ^ Eager Test\n  116 |     const expected: DraggableLocation = {\n  117 |       droppableId: preset.foreign.descriptor.id,\n  118 |       index: 1,","start":{"line":115,"column":4,"index":3557}},{"frame":"  118 |       index: 1,\n  119 |     };\n> 120 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n      |           ^ Eager Test\n  121 |   });\n  122 |\n  123 |   it('should move cross axis backwards on a MOVE_UP', () => {","start":{"line":120,"column":11,"index":3722}},{"frame":"  127 |     });\n  128 |\n> 129 |     invariant(result, 'expected a result');\n      |    ^ Eager Test\n  130 |     const expected: DraggableLocation = {\n  131 |       droppableId: preset.home.descriptor.id,\n  132 |       index: 0,","start":{"line":129,"column":4,"index":3994}},{"frame":"  132 |       index: 0,\n  133 |     };\n> 134 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n      |           ^ Eager Test\n  135 |   });\n  136 | });\n  137 |","start":{"line":134,"column":11,"index":4156}},{"frame":"  178 |       });\n  179 |\n> 180 |       invariant(result, 'expected a result');\n      |      ^ Eager Test\n  181 |       const expected: DraggableLocation = {\n  182 |         droppableId: preset.foreign.descriptor.id,\n  183 |         index: 1,","start":{"line":180,"column":6,"index":5653}},{"frame":"  183 |         index: 1,\n  184 |       };\n> 185 |       expect(tryGetDestination(result.impact)).toEqual(expected);\n      |             ^ Eager Test\n  186 |     });\n  187 |   });\n  188 | });","start":{"line":185,"column":13,"index":5828}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  24 |     });\n  25 |\n> 26 |     invariant(result, 'expected a result');\n     |    ^ Lazy Test\n  27 |     const expected: DraggableLocation = {\n  28 |       droppableId: preset.home.descriptor.id,\n  29 |       index: 1,","start":{"line":26,"column":4,"index":930}},{"frame":"  29 |       index: 1,\n  30 |     };\n> 31 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n     |           ^ Lazy Test\n  32 |   });\n  33 |\n  34 |   it('should move backwards on a MOVE_UP', () => {","start":{"line":31,"column":11,"index":1092}},{"frame":"  38 |     });\n  39 |\n> 40 |     invariant(result, 'expected a result');\n     |    ^ Lazy Test\n  41 |     const expected: DraggableLocation = {\n  42 |       droppableId: preset.home.descriptor.id,\n  43 |       index: 0,","start":{"line":40,"column":4,"index":1350}},{"frame":"  43 |       index: 0,\n  44 |     };\n> 45 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n     |           ^ Lazy Test\n  46 |   });\n  47 |\n  48 |   it('should move cross axis forwards on a MOVE_RIGHT', () => {","start":{"line":45,"column":11,"index":1512}},{"frame":"  52 |     });\n  53 |\n> 54 |     invariant(result, 'expected a result');\n     |    ^ Lazy Test\n  55 |     const expected: DraggableLocation = {\n  56 |       droppableId: preset.foreign.descriptor.id,\n  57 |       index: 1,","start":{"line":54,"column":4,"index":1758}},{"frame":"  57 |       index: 1,\n  58 |     };\n> 59 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n     |           ^ Lazy Test\n  60 |   });\n  61 |\n  62 |   it('should move cross axis backwards on a MOVE_LEFT', () => {","start":{"line":59,"column":11,"index":1923}},{"frame":"  66 |     });\n  67 |\n> 68 |     invariant(result, 'expected a result');\n     |    ^ Lazy Test\n  69 |     const expected: DraggableLocation = {\n  70 |       droppableId: preset.home.descriptor.id,\n  71 |       index: 0,","start":{"line":68,"column":4,"index":2199}},{"frame":"  71 |       index: 0,\n  72 |     };\n> 73 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n     |           ^ Lazy Test\n  74 |   });\n  75 | });\n  76 |","start":{"line":73,"column":11,"index":2361}},{"frame":"  85 |     });\n  86 |\n> 87 |     invariant(result, 'expected a result');\n     |    ^ Lazy Test\n  88 |     const expected: DraggableLocation = {\n  89 |       droppableId: preset.home.descriptor.id,\n  90 |       index: 1,","start":{"line":87,"column":4,"index":2727}},{"frame":"  90 |       index: 1,\n  91 |     };\n> 92 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n     |           ^ Lazy Test\n  93 |   });\n  94 |\n  95 |   it('should move backwards on a MOVE_LEFT', () => {","start":{"line":92,"column":11,"index":2889}},{"frame":"   99 |     });\n  100 |\n> 101 |     invariant(result, 'expected a result');\n      |    ^ Lazy Test\n  102 |     const expected: DraggableLocation = {\n  103 |       droppableId: preset.home.descriptor.id,\n  104 |       index: 0,","start":{"line":101,"column":4,"index":3151}},{"frame":"  104 |       index: 0,\n  105 |     };\n> 106 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n      |           ^ Lazy Test\n  107 |   });\n  108 |\n  109 |   it('should move cross axis forwards on a MOVE_DOWN', () => {","start":{"line":106,"column":11,"index":3313}},{"frame":"  113 |     });\n  114 |\n> 115 |     invariant(result, 'expected a result');\n      |    ^ Lazy Test\n  116 |     const expected: DraggableLocation = {\n  117 |       droppableId: preset.foreign.descriptor.id,\n  118 |       index: 1,","start":{"line":115,"column":4,"index":3557}},{"frame":"  118 |       index: 1,\n  119 |     };\n> 120 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n      |           ^ Lazy Test\n  121 |   });\n  122 |\n  123 |   it('should move cross axis backwards on a MOVE_UP', () => {","start":{"line":120,"column":11,"index":3722}},{"frame":"  127 |     });\n  128 |\n> 129 |     invariant(result, 'expected a result');\n      |    ^ Lazy Test\n  130 |     const expected: DraggableLocation = {\n  131 |       droppableId: preset.home.descriptor.id,\n  132 |       index: 0,","start":{"line":129,"column":4,"index":3994}},{"frame":"  132 |       index: 0,\n  133 |     };\n> 134 |     expect(tryGetDestination(result.impact)).toEqual(expected);\n      |           ^ Lazy Test\n  135 |   });\n  136 | });\n  137 |","start":{"line":134,"column":11,"index":4156}},{"frame":"  178 |       });\n  179 |\n> 180 |       invariant(result, 'expected a result');\n      |      ^ Lazy Test\n  181 |       const expected: DraggableLocation = {\n  182 |         droppableId: preset.foreign.descriptor.id,\n  183 |         index: 1,","start":{"line":180,"column":6,"index":5653}},{"frame":"  183 |         index: 1,\n  184 |       };\n> 185 |       expect(tryGetDestination(result.impact)).toEqual(expected);\n      |             ^ Lazy Test\n  186 |     });\n  187 |   });\n  188 | });","start":{"line":185,"column":13,"index":5828}}]}],"metrics":{"aggregate":{"cyclomatic":17,"cyclomaticDensity":10.303,"halstead":{"bugs":1.41,"difficulty":35.356,"effort":149550.369,"length":671,"time":8308.354,"vocabulary":79,"volume":4229.837,"operands":{"distinct":66,"total":359,"identifiers":["describe","\"on the vertical axis\"","preset","getPreset","vertical","state","getStatePreset","it","\"should move forward on a MOVE_DOWN\"","result","PublicResult","moveInDirection","dragging","type","\"MOVE_DOWN\"","invariant","\"expected a result\"","expected","DraggableLocation","droppableId","home","descriptor","id","index","1","expect","tryGetDestination","impact","toEqual","\"should move backwards on a MOVE_UP\"","inHome2","\"MOVE_UP\"","0","\"should move cross axis forwards on a MOVE_RIGHT\"","\"MOVE_RIGHT\"","foreign","\"should move cross axis backwards on a MOVE_LEFT\"","inForeign1","\"MOVE_LEFT\"","\"on the horizontal axis\"","horizontal","\"should move forward on a MOVE_RIGHT\"","\"should move backwards on a MOVE_LEFT\"","\"should move cross axis forwards on a MOVE_DOWN\"","\"should move cross axis backwards on a MOVE_UP\"","forEach","axis","direction","main axis blocking in the "," direction","\"should not allow movement on the main axis if lifting in a disabled droppable\"","custom","DraggingState","at","null","critical","DroppableDimension","dimensions","droppables","droppable","disableDroppable","forward","\"vertical\"","backward","toBe","crossAxisForward"]},"operators":{"distinct":13,"total":312,"identifiers":["()","function=>","const","=","{}",":",".","[]",",","``","${}",":?","==="]}},"paramCount":1,"sloc":{"logical":165,"physical":189}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":7,"path":"../../../../src/types","type":"esm"},{"line":8,"path":"../../../../src/invariant","type":"esm"},{"line":9,"path":"../../../../src/state/move-in-direction/move-in-direction-types","type":"esm"},{"line":10,"path":"../../../../src/state/move-in-direction","type":"esm"},{"line":11,"path":"../../../../src/state/axis","type":"esm"},{"line":12,"path":"../../../util/dimension","type":"esm"},{"line":13,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":14,"path":"../../../../src/state/get-impact-location","type":"esm"}],"errors":[],"lineEnd":189,"lineStart":1,"maintainability":99.117,"methods":[{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.036,"difficulty":2.8,"effort":298.497,"length":28,"time":16.583,"vocabulary":14,"volume":106.606,"operands":{"distinct":10,"total":14,"identifiers":["preset","getPreset","vertical","state","getStatePreset","it","\"should move forward on a MOVE_DOWN\"","\"should move backwards on a MOVE_UP\"","\"should move cross axis forwards on a MOVE_RIGHT\"","\"should move cross axis backwards on a MOVE_LEFT\""]},"operators":{"distinct":4,"total":14,"identifiers":["const","=","()","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":60},"errors":[],"lineEnd":75,"lineStart":16,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.077,"difficulty":3.545,"effort":818.124,"length":48,"time":45.451,"vocabulary":28,"volume":230.753,"operands":{"distinct":22,"total":26,"identifiers":["result","PublicResult","moveInDirection","state","dragging","type","\"MOVE_DOWN\"","invariant","\"expected a result\"","expected","DraggableLocation","droppableId","preset","home","descriptor","id","index","1","expect","tryGetDestination","impact","toEqual"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":13},"errors":[],"lineEnd":32,"lineStart":20,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.089,"difficulty":3.913,"effort":1045.522,"length":55,"time":58.085,"vocabulary":29,"volume":267.189,"operands":{"distinct":23,"total":30,"identifiers":["result","PublicResult","moveInDirection","state","dragging","preset","inHome2","descriptor","id","type","\"MOVE_UP\"","invariant","\"expected a result\"","expected","DraggableLocation","droppableId","home","index","0","expect","tryGetDestination","impact","toEqual"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":13},"errors":[],"lineEnd":46,"lineStart":34,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.077,"difficulty":3.545,"effort":818.124,"length":48,"time":45.451,"vocabulary":28,"volume":230.753,"operands":{"distinct":22,"total":26,"identifiers":["result","PublicResult","moveInDirection","state","dragging","type","\"MOVE_RIGHT\"","invariant","\"expected a result\"","expected","DraggableLocation","droppableId","preset","foreign","descriptor","id","index","1","expect","tryGetDestination","impact","toEqual"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":13},"errors":[],"lineEnd":60,"lineStart":48,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.089,"difficulty":3.913,"effort":1045.522,"length":55,"time":58.085,"vocabulary":29,"volume":267.189,"operands":{"distinct":23,"total":30,"identifiers":["result","PublicResult","moveInDirection","state","dragging","preset","inForeign1","descriptor","id","type","\"MOVE_LEFT\"","invariant","\"expected a result\"","expected","DraggableLocation","droppableId","home","index","0","expect","tryGetDestination","impact","toEqual"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":13},"errors":[],"lineEnd":74,"lineStart":62,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.036,"difficulty":2.8,"effort":298.497,"length":28,"time":16.583,"vocabulary":14,"volume":106.606,"operands":{"distinct":10,"total":14,"identifiers":["preset","getPreset","horizontal","state","getStatePreset","it","\"should move forward on a MOVE_RIGHT\"","\"should move backwards on a MOVE_LEFT\"","\"should move cross axis forwards on a MOVE_DOWN\"","\"should move cross axis backwards on a MOVE_UP\""]},"operators":{"distinct":4,"total":14,"identifiers":["const","=","()","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":60},"errors":[],"lineEnd":136,"lineStart":77,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.077,"difficulty":3.545,"effort":818.124,"length":48,"time":45.451,"vocabulary":28,"volume":230.753,"operands":{"distinct":22,"total":26,"identifiers":["result","PublicResult","moveInDirection","state","dragging","type","\"MOVE_RIGHT\"","invariant","\"expected a result\"","expected","DraggableLocation","droppableId","preset","home","descriptor","id","index","1","expect","tryGetDestination","impact","toEqual"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":13},"errors":[],"lineEnd":93,"lineStart":81,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.089,"difficulty":3.913,"effort":1045.522,"length":55,"time":58.085,"vocabulary":29,"volume":267.189,"operands":{"distinct":23,"total":30,"identifiers":["result","PublicResult","moveInDirection","state","dragging","preset","inHome2","descriptor","id","type","\"MOVE_LEFT\"","invariant","\"expected a result\"","expected","DraggableLocation","droppableId","home","index","0","expect","tryGetDestination","impact","toEqual"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":13},"errors":[],"lineEnd":107,"lineStart":95,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.077,"difficulty":3.545,"effort":818.124,"length":48,"time":45.451,"vocabulary":28,"volume":230.753,"operands":{"distinct":22,"total":26,"identifiers":["result","PublicResult","moveInDirection","state","dragging","type","\"MOVE_DOWN\"","invariant","\"expected a result\"","expected","DraggableLocation","droppableId","preset","foreign","descriptor","id","index","1","expect","tryGetDestination","impact","toEqual"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":13},"errors":[],"lineEnd":121,"lineStart":109,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.089,"difficulty":3.913,"effort":1045.522,"length":55,"time":58.085,"vocabulary":29,"volume":267.189,"operands":{"distinct":23,"total":30,"identifiers":["result","PublicResult","moveInDirection","state","dragging","preset","inForeign1","descriptor","id","type","\"MOVE_UP\"","invariant","\"expected a result\"","expected","DraggableLocation","droppableId","home","index","0","expect","tryGetDestination","impact","toEqual"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":13},"errors":[],"lineEnd":135,"lineStart":123,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.029,"difficulty":4.278,"effort":376.444,"length":22,"time":20.914,"vocabulary":16,"volume":88,"operands":{"distinct":9,"total":11,"identifiers":["state","getStatePreset","axis","preset","getPreset","describe","direction","main axis blocking in the "," direction"]},"operators":{"distinct":7,"total":11,"identifiers":["const","=","()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":6,"physical":51},"errors":[],"lineEnd":188,"lineStart":138,"name":"<anon method-11>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should not allow movement on the main axis if lifting in a disabled droppable\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":46},"errors":[],"lineEnd":187,"lineStart":142,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":4,"cyclomaticDensity":12.903,"halstead":{"bugs":0.303,"difficulty":9.214,"effort":8362.776,"length":160,"time":464.599,"vocabulary":51,"volume":907.588,"operands":{"distinct":42,"total":86,"identifiers":["custom","DraggingState","state","dragging","impact","at","null","critical","DroppableDimension","dimensions","droppables","droppable","id","disableDroppable","forward","axis","direction","\"vertical\"","\"MOVE_DOWN\"","\"MOVE_LEFT\"","backward","\"MOVE_UP\"","\"MOVE_RIGHT\"","expect","moveInDirection","type","toBe","crossAxisForward","result","PublicResult","invariant","\"expected a result\"","expected","DraggableLocation","droppableId","preset","foreign","descriptor","index","1","tryGetDestination","toEqual"]},"operators":{"distinct":9,"total":74,"identifiers":["const","=","()",".","[]",":?","===","{}",":"]}},"paramCount":0,"sloc":{"logical":31,"physical":44},"errors":[],"lineEnd":186,"lineStart":143,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.214,"cyclomaticDensity":0.736,"halstead":{"bugs":0.101,"difficulty":2.525,"effort":10682.169,"length":47.929,"time":593.454,"vocabulary":5.643,"volume":302.131,"operands":{"distinct":4.714,"total":25.643},"operators":{"distinct":0.929,"total":22.286}},"paramCount":0.071,"sloc":{"logical":11.786,"physical":13.5}},"methodAverage":{"cyclomatic":1.231,"cyclomaticDensity":12.531,"halstead":{"bugs":0.082,"difficulty":3.84,"effort":1292.215,"length":50.308,"time":71.79,"vocabulary":25.154,"volume":246.813,"operands":{"distinct":19.462,"total":27},"operators":{"distinct":5.692,"total":23.308}},"paramCount":0.077,"sloc":{"logical":12.231,"physical":28.077}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-to-next-place/moving-to-invisible-place/not-visible-in-viewport.spec.js","testCases":4,"smells":9,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  33 | import { emptyGroups } from '../../../../../../src/state/no-impact';\n  34 |\n> 35 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  36 |   const viewport: Viewport = createViewport({\n  37 |     frame: getRect({\n  38 |       top: 0,","start":{"line":35,"column":23,"index":1697}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  148 |\n  149 |         const previousImpact: DragImpact = {\n> 150 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  151 |             visible: [{ dimension: inForeign }],\n  152 |           }),\n  153 |           displacedBy,","start":{"line":150,"column":21,"index":4768}},{"frame":"  172 |           afterCritical,\n  173 |         });\n> 174 |         invariant(result);\n      |        ^ Eager Test\n  175 |\n  176 |         const expectedImpact: DragImpact = {\n  177 |           displaced: emptyGroups,","start":{"line":174,"column":8,"index":5426}},{"frame":"  295 |           afterCritical,\n  296 |         });\n> 297 |         invariant(result);\n      |        ^ Eager Test\n  298 |\n  299 |         const expectedImpact: DragImpact = {\n  300 |           displaced: getForcedDisplacement({","start":{"line":297,"column":8,"index":9495}},{"frame":"  298 |\n  299 |         const expectedImpact: DragImpact = {\n> 300 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  301 |             // Even though the item started in an invisible place we force\n  302 |             // the displacement to be visible.\n  303 |             visible: [{ dimension: inForeign, shouldAnimate: false }],","start":{"line":300,"column":21,"index":9581}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  148 |\n  149 |         const previousImpact: DragImpact = {\n> 150 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  151 |             visible: [{ dimension: inForeign }],\n  152 |           }),\n  153 |           displacedBy,","start":{"line":150,"column":21,"index":4768}},{"frame":"  172 |           afterCritical,\n  173 |         });\n> 174 |         invariant(result);\n      |        ^ Lazy Test\n  175 |\n  176 |         const expectedImpact: DragImpact = {\n  177 |           displaced: emptyGroups,","start":{"line":174,"column":8,"index":5426}},{"frame":"  295 |           afterCritical,\n  296 |         });\n> 297 |         invariant(result);\n      |        ^ Lazy Test\n  298 |\n  299 |         const expectedImpact: DragImpact = {\n  300 |           displaced: getForcedDisplacement({","start":{"line":297,"column":8,"index":9495}},{"frame":"  298 |\n  299 |         const expectedImpact: DragImpact = {\n> 300 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  301 |             // Even though the item started in an invisible place we force\n  302 |             // the displacement to be visible.\n  303 |             visible: [{ dimension: inForeign, shouldAnimate: false }],","start":{"line":300,"column":21,"index":9581}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":3.782,"halstead":{"bugs":1.998,"difficulty":25.789,"effort":154568.784,"length":859,"time":8587.155,"vocabulary":126,"volume":5993.483,"operands":{"distinct":114,"total":490,"identifiers":["vertical","horizontal","forEach","axis","viewport","Viewport","createViewport","frame","getRect","top","0","left","bottom","1000","right","scroll","origin","scrollHeight","2000","scrollWidth","home","DroppableDimension","getDroppableDimension","descriptor","id","\"home - much bigger than viewport\"","type","\"huge\"","mode","\"standard\"","direction","borderBox","10000","foreign","\"foreign - much bigger than viewport\"","inHome","DraggableDimension","getDraggableDimension","\"in-home\"","index","droppableId","inForeign","\"in-foreign\"","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","draggables","DraggableDimensionMap","toDraggableMap","afterCritical","getLiftEffect","draggable","describe","on "," axis","\"moving forward\"","it","\"should be setup correctly\"","expect","isTotallyVisible","target","page","withDroppableDisplacement","true","destination","toBe","displaced","BoxModel","offset","client","point","false","\"should request a jump scroll for movement that is outside of the viewport\"","previousPageBorderBoxCenter","Position","center","previousClientSelection","previousImpact","DragImpact","getForcedDisplacement","visible","dimension","at","\"REORDER\"","result","PublicResult","moveToNextPlace","isMovingForward","invariant","expectedImpact","emptyGroups","1","nonVisibleCenter","getPageBorderBoxCenter","impact","droppable","expectedScrollJump","subtract","expected","clientSelection","scrollJumpRequest","toEqual","\"moving backward\"","newScroll","patch","line","end","scrolled","scrollViewport","isPartiallyVisible","getClientFromPageBorderBoxCenter","pageBorderBoxCenter","shouldAnimate"]},"operators":{"distinct":12,"total":369,"identifiers":["()",".","[]",",","function=>","const","=","{}",":","``","${}","+"]}},"paramCount":1,"sloc":{"logical":238,"physical":337}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":11,"path":"../../../../../../src/types","type":"esm"},{"line":12,"path":"../../../../../../src/invariant","type":"esm"},{"line":13,"path":"../../../../../../src/state/axis","type":"esm"},{"line":17,"path":"../../../../../util/dimension","type":"esm"},{"line":18,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":19,"path":"../../../../../util/viewport","type":"esm"},{"line":20,"path":"../../../../../../src/state/move-in-direction/move-to-next-place","type":"esm"},{"line":21,"path":"../../../../../../src/state/move-in-direction/move-in-direction-types","type":"esm"},{"line":22,"path":"../../../../../../src/state/position","type":"esm"},{"line":23,"path":"../../../../../../src/state/get-center-from-impact/get-page-border-box-center","type":"esm"},{"line":24,"path":"../../../../../../src/state/scroll-viewport","type":"esm"},{"line":28,"path":"../../../../../../src/state/visibility/is-visible","type":"esm"},{"line":29,"path":"../../../../../../src/state/dimension-structures","type":"esm"},{"line":30,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":31,"path":"../../../../../../src/state/get-center-from-impact/get-client-border-box-center/get-client-from-page-border-box-center","type":"esm"},{"line":32,"path":"../../../../../util/impact","type":"esm"},{"line":33,"path":"../../../../../../src/state/no-impact","type":"esm"}],"errors":[],"lineEnd":337,"lineStart":1,"maintainability":84.595,"methods":[{"cyclomatic":1,"cyclomaticDensity":1.563,"halstead":{"bugs":0.456,"difficulty":13.283,"effort":18171.17,"length":228,"time":1009.509,"vocabulary":64,"volume":1368,"operands":{"distinct":53,"total":128,"identifiers":["viewport","Viewport","createViewport","frame","getRect","top","0","left","bottom","1000","right","scroll","origin","scrollHeight","2000","scrollWidth","home","DroppableDimension","getDroppableDimension","descriptor","id","\"home - much bigger than viewport\"","type","\"huge\"","mode","\"standard\"","direction","axis","borderBox","10000","foreign","\"foreign - much bigger than viewport\"","inHome","DraggableDimension","getDraggableDimension","\"in-home\"","index","droppableId","inForeign","\"in-foreign\"","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","draggables","DraggableDimensionMap","toDraggableMap","afterCritical","getLiftEffect","draggable","describe","on "," axis"]},"operators":{"distinct":11,"total":100,"identifiers":["const","=","()","{}",":",".","[]",",","``","${}","function=>"]}},"paramCount":1,"sloc":{"logical":64,"physical":302},"errors":[],"lineEnd":336,"lineStart":35,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"moving forward\"","\"moving backward\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":230},"errors":[],"lineEnd":335,"lineStart":106,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should be setup correctly\"","\"should request a jump scroll for movement that is outside of the viewport\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":100},"errors":[],"lineEnd":206,"lineStart":107,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.157,"difficulty":6.75,"effort":3179.665,"length":96,"time":176.648,"vocabulary":30,"volume":471.061,"operands":{"distinct":24,"total":54,"identifiers":["expect","isTotallyVisible","target","inHome","page","borderBox","viewport","frame","withDroppableDisplacement","true","destination","home","toBe","inForeign","foreign","displaced","BoxModel","offset","client","getDisplacedBy","vertical","displaceBy","point","false"]},"operators":{"distinct":6,"total":42,"identifiers":["()",".","{}",":","const","="]}},"paramCount":0,"sloc":{"logical":24,"physical":34},"errors":[],"lineEnd":141,"lineStart":108,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.083,"halstead":{"bugs":0.346,"difficulty":8.49,"effort":8814.568,"length":178,"time":489.698,"vocabulary":57,"volume":1038.254,"operands":{"distinct":49,"total":104,"identifiers":["previousPageBorderBoxCenter","Position","inHome","page","borderBox","center","previousClientSelection","client","previousImpact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign","displacedBy","at","type","\"REORDER\"","destination","droppableId","foreign","descriptor","id","index","result","PublicResult","moveToNextPlace","isMovingForward","true","draggable","draggables","viewport","afterCritical","invariant","expectedImpact","emptyGroups","1","nonVisibleCenter","getPageBorderBoxCenter","impact","droppable","expectedScrollJump","subtract","expected","clientSelection","scrollJumpRequest","expect","toEqual"]},"operators":{"distinct":8,"total":74,"identifiers":["const","=",".","{}",":","()","[]","+"]}},"paramCount":0,"sloc":{"logical":48,"physical":63},"errors":[],"lineEnd":205,"lineStart":143,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.051,"difficulty":4.433,"effort":672.185,"length":34,"time":37.344,"vocabulary":22,"volume":151.621,"operands":{"distinct":15,"total":19,"identifiers":["newScroll","Position","patch","axis","line","viewport","frame","end","1","scrolled","Viewport","scrollViewport","it","\"should be setup correctly\"","\"should request a jump scroll for movement that is outside of the viewport\""]},"operators":{"distinct":7,"total":15,"identifiers":["const","=","()",".","+","[]","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":127},"errors":[],"lineEnd":334,"lineStart":208,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.159,"difficulty":6.48,"effort":3081.906,"length":96,"time":171.217,"vocabulary":31,"volume":475.603,"operands":{"distinct":25,"total":54,"identifiers":["expect","isTotallyVisible","target","inForeign","page","borderBox","viewport","scrolled","frame","withDroppableDisplacement","true","destination","foreign","toBe","false","isPartiallyVisible","displaced","BoxModel","offset","client","getDisplacedBy","axis","inHome","displaceBy","point"]},"operators":{"distinct":6,"total":42,"identifiers":["()",".","{}",":","const","="]}},"paramCount":0,"sloc":{"logical":24,"physical":35},"errors":[],"lineEnd":250,"lineStart":216,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.667,"halstead":{"bugs":0.398,"difficulty":9.154,"effort":10922.295,"length":202,"time":606.794,"vocabulary":60,"volume":1193.192,"operands":{"distinct":52,"total":119,"identifiers":["previousImpact","DragImpact","displaced","emptyGroups","displacedBy","getDisplacedBy","axis","inHome","displaceBy","at","type","\"REORDER\"","destination","droppableId","foreign","descriptor","id","index","inForeign","1","previousPageBorderBoxCenter","Position","getPageBorderBoxCenter","impact","afterCritical","draggable","droppable","draggables","previousClientSelection","getClientFromPageBorderBoxCenter","pageBorderBoxCenter","viewport","scrolled","result","PublicResult","moveToNextPlace","isMovingForward","false","invariant","expectedImpact","getForcedDisplacement","visible","dimension","shouldAnimate","nonVisibleCenter","expectedScrollJump","subtract","expected","clientSelection","scrollJumpRequest","expect","toEqual"]},"operators":{"distinct":8,"total":83,"identifiers":["const","=","{}",":","()",".","+","[]"]}},"paramCount":0,"sloc":{"logical":60,"physical":82},"errors":[],"lineEnd":333,"lineStart":252,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.42,"halstead":{"bugs":0.222,"difficulty":2.865,"effort":17174.309,"length":95.444,"time":954.128,"vocabulary":14,"volume":665.943,"operands":{"distinct":12.667,"total":54.444},"operators":{"distinct":1.333,"total":41}},"paramCount":0.111,"sloc":{"logical":26.444,"physical":37.444}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":9.518,"halstead":{"bugs":0.197,"difficulty":6.407,"effort":5611.416,"length":106.25,"time":311.745,"vocabulary":34.25,"volume":591.86,"operands":{"distinct":28,"total":60.75},"operators":{"distinct":6.25,"total":45.5}},"paramCount":0.125,"sloc":{"logical":29.5,"physical":121.625}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-to-next-place/moving-to-invisible-place/not-visible-in-droppable.spec.js","testCases":4,"smells":9,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  40 | import { emptyGroups } from '../../../../../../src/state/no-impact';\n  41 |\n> 42 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  43 |   const viewport: Viewport = createViewport({\n  44 |     frame: getRect({\n  45 |       top: 0,","start":{"line":42,"column":23,"index":1743}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  169 |           inHome.client.borderBox.center;\n  170 |         const previousImpact: DragImpact = {\n> 171 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  172 |             visible: [{ dimension: inForeign }],\n  173 |           }),\n  174 |           displacedBy,","start":{"line":171,"column":21,"index":5202}},{"frame":"  193 |           afterCritical,\n  194 |         });\n> 195 |         invariant(result);\n      |        ^ Eager Test\n  196 |\n  197 |         const expectedImpact: DragImpact = {\n  198 |           displaced: emptyGroups,","start":{"line":195,"column":8,"index":5860}},{"frame":"  312 |           afterCritical,\n  313 |         });\n> 314 |         invariant(result);\n      |        ^ Eager Test\n  315 |\n  316 |         const expectedImpact: DragImpact = {\n  317 |           displaced: getForcedDisplacement({","start":{"line":314,"column":8,"index":9690}},{"frame":"  315 |\n  316 |         const expectedImpact: DragImpact = {\n> 317 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  318 |             // Even though the item started in an invisible place we force\n  319 |             // the displacement to be visible.\n  320 |             visible: [{ dimension: inForeign, shouldAnimate: false }],","start":{"line":317,"column":21,"index":9776}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  169 |           inHome.client.borderBox.center;\n  170 |         const previousImpact: DragImpact = {\n> 171 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  172 |             visible: [{ dimension: inForeign }],\n  173 |           }),\n  174 |           displacedBy,","start":{"line":171,"column":21,"index":5202}},{"frame":"  193 |           afterCritical,\n  194 |         });\n> 195 |         invariant(result);\n      |        ^ Lazy Test\n  196 |\n  197 |         const expectedImpact: DragImpact = {\n  198 |           displaced: emptyGroups,","start":{"line":195,"column":8,"index":5860}},{"frame":"  312 |           afterCritical,\n  313 |         });\n> 314 |         invariant(result);\n      |        ^ Lazy Test\n  315 |\n  316 |         const expectedImpact: DragImpact = {\n  317 |           displaced: getForcedDisplacement({","start":{"line":314,"column":8,"index":9690}},{"frame":"  315 |\n  316 |         const expectedImpact: DragImpact = {\n> 317 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  318 |             // Even though the item started in an invisible place we force\n  319 |             // the displacement to be visible.\n  320 |             visible: [{ dimension: inForeign, shouldAnimate: false }],","start":{"line":317,"column":21,"index":9776}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":3.586,"halstead":{"bugs":2.105,"difficulty":25.388,"effort":160314.676,"length":895,"time":8906.371,"vocabulary":133,"volume":6314.478,"operands":{"distinct":121,"total":512,"identifiers":["vertical","horizontal","forEach","axis","viewport","Viewport","createViewport","frame","getRect","top","0","left","bottom","10000","right","scroll","origin","scrollHeight","scrollWidth","home","DroppableDimension","getDroppableDimension","descriptor","id","\"home\"","type","\"droppable\"","mode","\"standard\"","direction","borderBox","foreign","\"scrollable foriegn\"","closest","1000","shouldClipSubject","true","scrollSize","2000","frameBorderBox","Rect","getFrame","frameClient","inHome","DraggableDimension","getDraggableDimension","\"in-home\"","index","droppableId","inForeign","\"in-foreign\"","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","draggables","DraggableDimensionMap","toDraggableMap","afterCritical","getLiftEffect","draggable","describe","on "," axis","\"moving forward\"","it","\"should be setup correctly\"","expect","isTotallyVisible","target","page","withDroppableDisplacement","destination","toBe","displaced","BoxModel","offset","client","point","false","\"should request a jump scroll for movement that is outside of the viewport\"","previousPageBorderBoxCenter","Position","center","previousClientSelection","previousImpact","DragImpact","getForcedDisplacement","visible","dimension","at","\"REORDER\"","result","PublicResult","moveToNextPlace","isMovingForward","invariant","expectedImpact","emptyGroups","1","nonVisibleCenter","getPageBorderBoxCenter","impact","droppable","expectedScrollJump","subtract","expected","clientSelection","scrollJumpRequest","toEqual","\"moving backward\"","newScroll","patch","line","end","scrolled","scrollDroppable","isPartiallyVisible","getClientFromPageBorderBoxCenter","pageBorderBoxCenter","shouldAnimate"]},"operators":{"distinct":12,"total":383,"identifiers":["()",".","[]",",","function=>","const","=","{}",":","``","${}","+"]}},"paramCount":1,"sloc":{"logical":251,"physical":354}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":8,"path":"css-box-model","type":"esm"},{"line":17,"path":"../../../../../../src/types","type":"esm"},{"line":18,"path":"../../../../../../src/invariant","type":"esm"},{"line":19,"path":"../../../../../../src/state/axis","type":"esm"},{"line":24,"path":"../../../../../util/dimension","type":"esm"},{"line":25,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":26,"path":"../../../../../util/viewport","type":"esm"},{"line":27,"path":"../../../../../../src/state/move-in-direction/move-to-next-place","type":"esm"},{"line":28,"path":"../../../../../../src/state/move-in-direction/move-in-direction-types","type":"esm"},{"line":29,"path":"../../../../../../src/state/position","type":"esm"},{"line":30,"path":"../../../../../../src/state/get-center-from-impact/get-page-border-box-center","type":"esm"},{"line":34,"path":"../../../../../../src/state/visibility/is-visible","type":"esm"},{"line":35,"path":"../../../../../../src/state/dimension-structures","type":"esm"},{"line":36,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":37,"path":"../../../../../../src/state/get-center-from-impact/get-client-border-box-center/get-client-from-page-border-box-center","type":"esm"},{"line":38,"path":"../../../../../../src/state/droppable/scroll-droppable","type":"esm"},{"line":39,"path":"../../../../../util/impact","type":"esm"},{"line":40,"path":"../../../../../../src/state/no-impact","type":"esm"}],"errors":[],"lineEnd":354,"lineStart":1,"maintainability":83.609,"methods":[{"cyclomatic":1,"cyclomaticDensity":1.299,"halstead":{"bugs":0.551,"difficulty":13.615,"effort":22512.539,"length":268,"time":1250.697,"vocabulary":72,"volume":1653.54,"operands":{"distinct":61,"total":151,"identifiers":["viewport","Viewport","createViewport","frame","getRect","top","0","left","bottom","10000","right","scroll","origin","scrollHeight","scrollWidth","home","DroppableDimension","getDroppableDimension","descriptor","id","\"home\"","type","\"droppable\"","mode","\"standard\"","direction","axis","borderBox","foreign","\"scrollable foriegn\"","closest","1000","shouldClipSubject","true","scrollSize","2000","frameBorderBox","Rect","getFrame","frameClient","inHome","DraggableDimension","getDraggableDimension","\"in-home\"","index","droppableId","inForeign","\"in-foreign\"","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","draggables","DraggableDimensionMap","toDraggableMap","afterCritical","getLiftEffect","draggable","describe","on "," axis"]},"operators":{"distinct":11,"total":117,"identifiers":["const","=","()","{}",":",".","[]",",","``","${}","function=>"]}},"paramCount":1,"sloc":{"logical":77,"physical":312},"errors":[],"lineEnd":353,"lineStart":42,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"moving forward\"","\"moving backward\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":225},"errors":[],"lineEnd":352,"lineStart":128,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should be setup correctly\"","\"should request a jump scroll for movement that is outside of the viewport\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":99},"errors":[],"lineEnd":227,"lineStart":129,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.157,"difficulty":6.75,"effort":3179.665,"length":96,"time":176.648,"vocabulary":30,"volume":471.061,"operands":{"distinct":24,"total":54,"identifiers":["expect","isTotallyVisible","target","inHome","page","borderBox","viewport","frame","withDroppableDisplacement","true","destination","home","toBe","inForeign","foreign","displaced","BoxModel","offset","client","getDisplacedBy","vertical","displaceBy","point","false"]},"operators":{"distinct":6,"total":42,"identifiers":["()",".","{}",":","const","="]}},"paramCount":0,"sloc":{"logical":24,"physical":34},"errors":[],"lineEnd":163,"lineStart":130,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.083,"halstead":{"bugs":0.346,"difficulty":8.49,"effort":8814.568,"length":178,"time":489.698,"vocabulary":57,"volume":1038.254,"operands":{"distinct":49,"total":104,"identifiers":["previousPageBorderBoxCenter","Position","inHome","page","borderBox","center","previousClientSelection","client","previousImpact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign","displacedBy","at","type","\"REORDER\"","destination","droppableId","foreign","descriptor","id","index","result","PublicResult","moveToNextPlace","isMovingForward","true","draggable","draggables","viewport","afterCritical","invariant","expectedImpact","emptyGroups","1","nonVisibleCenter","getPageBorderBoxCenter","impact","droppable","expectedScrollJump","subtract","expected","clientSelection","scrollJumpRequest","expect","toEqual"]},"operators":{"distinct":8,"total":74,"identifiers":["const","=",".","{}",":","()","[]","+"]}},"paramCount":0,"sloc":{"logical":48,"physical":62},"errors":[],"lineEnd":226,"lineStart":165,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.048,"difficulty":4.2,"effort":599.348,"length":32,"time":33.297,"vocabulary":22,"volume":142.702,"operands":{"distinct":15,"total":18,"identifiers":["newScroll","Position","patch","axis","line","frameBorderBox","end","1","scrolled","DroppableDimension","scrollDroppable","foreign","it","\"should be setup correctly\"","\"should request a jump scroll for movement that is outside of the viewport\""]},"operators":{"distinct":7,"total":14,"identifiers":["const","=","()",".","+","[]","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":123},"errors":[],"lineEnd":351,"lineStart":229,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.157,"difficulty":6.75,"effort":3179.665,"length":96,"time":176.648,"vocabulary":30,"volume":471.061,"operands":{"distinct":24,"total":54,"identifiers":["expect","isTotallyVisible","target","inForeign","page","borderBox","viewport","frame","withDroppableDisplacement","true","destination","scrolled","toBe","false","isPartiallyVisible","displaced","BoxModel","offset","client","getDisplacedBy","axis","inHome","displaceBy","point"]},"operators":{"distinct":6,"total":42,"identifiers":["()",".","{}",":","const","="]}},"paramCount":0,"sloc":{"logical":24,"physical":35},"errors":[],"lineEnd":271,"lineStart":237,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.667,"halstead":{"bugs":0.394,"difficulty":9.154,"effort":10814.154,"length":200,"time":600.786,"vocabulary":60,"volume":1181.378,"operands":{"distinct":52,"total":119,"identifiers":["previousImpact","DragImpact","displaced","emptyGroups","displacedBy","getDisplacedBy","axis","inHome","displaceBy","at","type","\"REORDER\"","destination","droppableId","foreign","descriptor","id","index","inForeign","1","previousPageBorderBoxCenter","Position","getPageBorderBoxCenter","impact","afterCritical","draggable","droppable","scrolled","draggables","previousClientSelection","getClientFromPageBorderBoxCenter","pageBorderBoxCenter","viewport","result","PublicResult","moveToNextPlace","isMovingForward","false","invariant","expectedImpact","getForcedDisplacement","visible","dimension","shouldAnimate","nonVisibleCenter","expectedScrollJump","subtract","expected","clientSelection","scrollJumpRequest","expect","toEqual"]},"operators":{"distinct":8,"total":81,"identifiers":["const","=","{}",":","()",".","+","[]"]}},"paramCount":0,"sloc":{"logical":60,"physical":78},"errors":[],"lineEnd":350,"lineStart":273,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.398,"halstead":{"bugs":0.234,"difficulty":2.821,"effort":17812.742,"length":99.444,"time":989.597,"vocabulary":14.778,"volume":701.609,"operands":{"distinct":13.444,"total":56.889},"operators":{"distinct":1.333,"total":42.556}},"paramCount":0.111,"sloc":{"logical":27.889,"physical":39.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":9.485,"halstead":{"bugs":0.208,"difficulty":6.453,"effort":6143.684,"length":110.75,"time":341.316,"vocabulary":35.125,"volume":624.394,"operands":{"distinct":28.875,"total":63.5},"operators":{"distinct":6.25,"total":47.25}},"paramCount":0.125,"sloc":{"logical":31.125,"physical":121}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-to-next-place/move-to-next-index/from-reorder/in-home-list.spec.js","testCases":2,"smells":23,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  14 | import { emptyGroups } from '../../../../../../../src/state/no-impact';\n  15 |\n> 16 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  17 |   const preset = getPreset(axis);\n  18 |   describe(`on ${axis.direction} axis`, () => {\n  19 |     it('should update the impact when moving with items that started displaced', () => {","start":{"line":16,"column":23,"index":742}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  40 |         viewport: preset.viewport,\n  41 |       });\n> 42 |       invariant(forwardsPastInHome3);\n     |      ^ Eager Test\n  43 |       {\n  44 |         const expected: DragImpact = {\n  45 |           displaced: getForcedDisplacement({","start":{"line":42,"column":6,"index":1655}},{"frame":"  43 |       {\n  44 |         const expected: DragImpact = {\n> 45 |           displaced: getForcedDisplacement({\n     |                     ^ Eager Test\n  46 |             visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  47 |           }),\n  48 |           displacedBy,","start":{"line":45,"column":21,"index":1755}},{"frame":"  68 |         afterCritical,\n  69 |       });\n> 70 |       invariant(forwardsPastInHome4);\n     |      ^ Eager Test\n  71 |       {\n  72 |         const expected: DragImpact = {\n  73 |           displaced: emptyGroups,","start":{"line":70,"column":6,"index":2571}},{"frame":"   95 |         afterCritical,\n   96 |       });\n>  97 |       invariant(backwardsPastInHome4);\n      |      ^ Eager Test\n   98 |       {\n   99 |         const expected: DragImpact = {\n  100 |           displaced: getForcedDisplacement({","start":{"line":97,"column":6,"index":3389}},{"frame":"   98 |       {\n   99 |         const expected: DragImpact = {\n> 100 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  101 |             visible: [{ dimension: preset.inHome4 }],\n  102 |           }),\n  103 |           displacedBy,","start":{"line":100,"column":21,"index":3490}},{"frame":"  124 |         afterCritical,\n  125 |       });\n> 126 |       invariant(backwardsToHome);\n      |      ^ Eager Test\n  127 |       {\n  128 |         const expected: DragImpact = {\n  129 |           displaced: getForcedDisplacement({","start":{"line":126,"column":6,"index":4284}},{"frame":"  127 |       {\n  128 |         const expected: DragImpact = {\n> 129 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  130 |             visible: [\n  131 |               { dimension: preset.inHome3 },\n  132 |               { dimension: preset.inHome4 },","start":{"line":129,"column":21,"index":4380}},{"frame":"  156 |         afterCritical,\n  157 |       });\n> 158 |       invariant(backwardsToHome);\n      |      ^ Eager Test\n  159 |       {\n  160 |         const expected: DragImpact = {\n  161 |           displaced: getForcedDisplacement({","start":{"line":158,"column":6,"index":5240}},{"frame":"  159 |       {\n  160 |         const expected: DragImpact = {\n> 161 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  162 |             visible: [\n  163 |               { dimension: preset.inHome1 },\n  164 |               { dimension: preset.inHome3 },","start":{"line":161,"column":21,"index":5336}},{"frame":"  203 |         afterCritical,\n  204 |       });\n> 205 |       invariant(backwardsPastInHome2);\n      |      ^ Eager Test\n  206 |       {\n  207 |         const expected: DragImpact = {\n  208 |           displaced: getForcedDisplacement({","start":{"line":205,"column":6,"index":6728}},{"frame":"  206 |       {\n  207 |         const expected: DragImpact = {\n> 208 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  209 |             visible: [\n  210 |               { dimension: preset.inHome2, shouldAnimate: true },\n  211 |               // initial displacement not animated","start":{"line":208,"column":21,"index":6829}},{"frame":"  237 |         afterCritical,\n  238 |       });\n> 239 |       invariant(backwardsPastInHome1);\n      |      ^ Eager Test\n  240 |       {\n  241 |         const expected: DragImpact = {\n  242 |           displaced: getForcedDisplacement({","start":{"line":239,"column":6,"index":7826}},{"frame":"  240 |       {\n  241 |         const expected: DragImpact = {\n> 242 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  243 |             // ordered by closest displaced\n  244 |             visible: [\n  245 |               {","start":{"line":242,"column":21,"index":7927}},{"frame":"  282 |         afterCritical,\n  283 |       });\n> 284 |       invariant(forwardsPastInHome1);\n      |      ^ Eager Test\n  285 |       {\n  286 |         const expected: DragImpact = {\n  287 |           displaced: getForcedDisplacement({","start":{"line":284,"column":6,"index":9168}},{"frame":"  285 |       {\n  286 |         const expected: DragImpact = {\n> 287 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  288 |             visible: [\n  289 |               {\n  290 |                 dimension: preset.inHome2,","start":{"line":287,"column":21,"index":9268}},{"frame":"  321 |         afterCritical,\n  322 |       });\n> 323 |       invariant(forwardsToHome);\n      |      ^ Eager Test\n  324 |       {\n  325 |         const expected: DragImpact = {\n  326 |           displaced: getForcedDisplacement({","start":{"line":323,"column":6,"index":10322}},{"frame":"  324 |       {\n  325 |         const expected: DragImpact = {\n> 326 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  327 |             visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  328 |           }),\n  329 |           displacedBy,","start":{"line":326,"column":21,"index":10417}},{"frame":"  349 |         afterCritical,\n  350 |       });\n> 351 |       invariant(forwardsPastHome);\n      |      ^ Eager Test\n  352 |       {\n  353 |         const expected: DragImpact = {\n  354 |           displaced: emptyGroups,","start":{"line":351,"column":6,"index":11220}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  40 |         viewport: preset.viewport,\n  41 |       });\n> 42 |       invariant(forwardsPastInHome3);\n     |      ^ Lazy Test\n  43 |       {\n  44 |         const expected: DragImpact = {\n  45 |           displaced: getForcedDisplacement({","start":{"line":42,"column":6,"index":1655}},{"frame":"  43 |       {\n  44 |         const expected: DragImpact = {\n> 45 |           displaced: getForcedDisplacement({\n     |                     ^ Lazy Test\n  46 |             visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  47 |           }),\n  48 |           displacedBy,","start":{"line":45,"column":21,"index":1755}},{"frame":"  203 |         afterCritical,\n  204 |       });\n> 205 |       invariant(backwardsPastInHome2);\n      |      ^ Lazy Test\n  206 |       {\n  207 |         const expected: DragImpact = {\n  208 |           displaced: getForcedDisplacement({","start":{"line":205,"column":6,"index":6728}},{"frame":"  206 |       {\n  207 |         const expected: DragImpact = {\n> 208 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  209 |             visible: [\n  210 |               { dimension: preset.inHome2, shouldAnimate: true },\n  211 |               // initial displacement not animated","start":{"line":208,"column":21,"index":6829}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":1.724,"halstead":{"bugs":2.471,"difficulty":54.583,"effort":404659.463,"length":1183,"time":22481.081,"vocabulary":77,"volume":7413.608,"operands":{"distinct":66,"total":655,"identifiers":["vertical","horizontal","forEach","axis","preset","getPreset","describe","direction","on "," axis","it","\"should update the impact when moving with items that started displaced\"","displacedBy","DisplacedBy","getDisplacedBy","inHome2","displaceBy","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","viewport","forwardsPastInHome3","DragImpact","moveToNextIndex","isMovingForward","true","isInHomeList","destination","insideDestination","inHomeList","previousImpact","invariant","expected","displaced","getForcedDisplacement","visible","dimension","inHome4","shouldAnimate","false","at","type","\"REORDER\"","index","inHome3","descriptor","droppableId","id","expect","toEqual","forwardsPastInHome4","emptyGroups","backwardsPastInHome4","backwardsToHome","backwardsPastHome","inHome1","\"should update the impact when moving with items that did not start displaced\"","backwardsPastInHome2","backwardsPastInHome1","forwardsPastInHome1","forwardsToHome","forwardsPastHome"]},"operators":{"distinct":11,"total":528,"identifiers":["()",".","[]",",","function=>","const","=","``","${}","{}",":"]}},"paramCount":1,"sloc":{"logical":290,"physical":369}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":6,"path":"../../../../../../../src/types","type":"esm"},{"line":7,"path":"../../../../../../../src/invariant","type":"esm"},{"line":8,"path":"../../../../../../../src/state/axis","type":"esm"},{"line":9,"path":"../../../../../../util/dimension","type":"esm"},{"line":10,"path":"../../../../../../../src/state/move-in-direction/move-to-next-place/move-to-next-index","type":"esm"},{"line":11,"path":"../../../../../../../src/state/get-displaced-by","type":"esm"},{"line":12,"path":"../../../../../../../src/state/get-lift-effect","type":"esm"},{"line":13,"path":"../../../../../../util/impact","type":"esm"},{"line":14,"path":"../../../../../../../src/state/no-impact","type":"esm"}],"errors":[],"lineEnd":369,"lineStart":1,"maintainability":66.57,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.02,"difficulty":4,"effort":243.671,"length":16,"time":13.537,"vocabulary":14,"volume":60.918,"operands":{"distinct":7,"total":8,"identifiers":["preset","getPreset","axis","describe","direction","on "," axis"]},"operators":{"distinct":7,"total":8,"identifiers":["const","=","()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":4,"physical":353},"errors":[],"lineEnd":368,"lineStart":16,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should update the impact when moving with items that started displaced\"","\"should update the impact when moving with items that did not start displaced\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":350},"errors":[],"lineEnd":367,"lineStart":18,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0.735,"halstead":{"bugs":1.095,"difficulty":24.88,"effort":81763.824,"length":561,"time":4542.435,"vocabulary":58,"volume":3286.327,"operands":{"distinct":50,"total":311,"identifiers":["displacedBy","DisplacedBy","getDisplacedBy","axis","preset","inHome2","displaceBy","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","viewport","forwardsPastInHome3","DragImpact","moveToNextIndex","isMovingForward","true","isInHomeList","destination","insideDestination","inHomeList","previousImpact","invariant","expected","displaced","getForcedDisplacement","visible","dimension","inHome4","shouldAnimate","false","at","type","\"REORDER\"","index","inHome3","descriptor","droppableId","id","expect","toEqual","forwardsPastInHome4","emptyGroups","backwardsPastInHome4","backwardsToHome","backwardsPastHome","inHome1"]},"operators":{"distinct":8,"total":250,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":136,"physical":161},"errors":[],"lineEnd":179,"lineStart":19,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0.694,"halstead":{"bugs":1.15,"difficulty":26.24,"effort":90537.205,"length":589,"time":5029.845,"vocabulary":58,"volume":3450.351,"operands":{"distinct":50,"total":328,"identifiers":["displacedBy","DisplacedBy","getDisplacedBy","axis","preset","inHome3","displaceBy","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","viewport","backwardsPastInHome2","DragImpact","moveToNextIndex","isMovingForward","false","isInHomeList","true","destination","insideDestination","inHomeList","previousImpact","invariant","expected","displaced","getForcedDisplacement","visible","dimension","inHome2","shouldAnimate","inHome4","at","type","\"REORDER\"","droppableId","descriptor","id","index","expect","toEqual","backwardsPastInHome1","inHome1","forwardsPastInHome1","forwardsToHome","forwardsPastHome","emptyGroups"]},"operators":{"distinct":8,"total":261,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":144,"physical":186},"errors":[],"lineEnd":366,"lineStart":181,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.345,"halstead":{"bugs":0.494,"difficulty":10.917,"effort":80931.893,"length":236.6,"time":4496.216,"vocabulary":15.4,"volume":1482.722,"operands":{"distinct":13.2,"total":131},"operators":{"distinct":2.2,"total":105.6}},"paramCount":0.2,"sloc":{"logical":58,"physical":73.8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":12.857,"halstead":{"bugs":0.568,"difficulty":14.113,"effort":43142.367,"length":293.5,"time":2396.798,"vocabulary":33.75,"volume":1704.043,"operands":{"distinct":27.5,"total":162.75},"operators":{"distinct":6.25,"total":130.75}},"paramCount":0.25,"sloc":{"logical":72,"physical":262.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-to-next-place/move-to-next-index/from-reorder/in-foreign-list.spec.js","testCases":6,"smells":33,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  14 | import { emptyGroups } from '../../../../../../../src/state/no-impact';\n  15 |\n> 16 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  17 |   const preset = getPreset(axis);\n  18 |   const displacedBy: DisplacedBy = getDisplacedBy(\n  19 |     axis,","start":{"line":16,"column":23,"index":742}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  180 |           },\n  181 |         };\n> 182 |         expect(fourth).toEqual(expected);\n      |        ^ Duplicate Assert\n  183 |         // also now back where we started\n  184 |         expect(fourth).toEqual(crossAxisMove);\n  185 |       }","start":{"line":182,"column":8,"index":5803}},{"frame":"  182 |         expect(fourth).toEqual(expected);\n  183 |         // also now back where we started\n> 184 |         expect(fourth).toEqual(crossAxisMove);\n      |        ^ Duplicate Assert\n  185 |       }\n  186 |     });\n  187 |","start":{"line":184,"column":8,"index":5887}},{"frame":"  342 |           },\n  343 |         };\n> 344 |         expect(fourth).toEqual(expected);\n      |        ^ Duplicate Assert\n  345 |         // also now back where we started\n  346 |         expect(fourth).toEqual(crossAxisMove);\n  347 |       }","start":{"line":344,"column":8,"index":10739}},{"frame":"  344 |         expect(fourth).toEqual(expected);\n  345 |         // also now back where we started\n> 346 |         expect(fourth).toEqual(crossAxisMove);\n      |        ^ Duplicate Assert\n  347 |       }\n  348 |     });\n  349 |","start":{"line":346,"column":8,"index":10823}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  34 |\n  35 |       const crossAxisMove: DragImpact = {\n> 36 |         displaced: getForcedDisplacement({\n     |                   ^ Eager Test\n  37 |           visible: [\n  38 |             { dimension: preset.inForeign2 },\n  39 |             { dimension: preset.inForeign3 },","start":{"line":36,"column":19,"index":1501}},{"frame":"  63 |         viewport: preset.viewport,\n  64 |       });\n> 65 |       invariant(first);\n     |      ^ Eager Test\n  66 |       {\n  67 |         const expected: DragImpact = {\n  68 |           displaced: getForcedDisplacement({","start":{"line":65,"column":6,"index":2348}},{"frame":"  66 |       {\n  67 |         const expected: DragImpact = {\n> 68 |           displaced: getForcedDisplacement({\n     |                     ^ Eager Test\n  69 |             visible: [\n  70 |               { dimension: preset.inForeign3 },\n  71 |               { dimension: preset.inForeign4 },","start":{"line":68,"column":21,"index":2434}},{"frame":"   96 |         viewport: preset.viewport,\n   97 |       });\n>  98 |       invariant(second);\n      |      ^ Eager Test\n   99 |       {\n  100 |         const expected: DragImpact = {\n  101 |           displaced: getForcedDisplacement({","start":{"line":98,"column":6,"index":3311}},{"frame":"   99 |       {\n  100 |         const expected: DragImpact = {\n> 101 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  102 |             visible: [{ dimension: preset.inForeign4 }],\n  103 |           }),\n  104 |           displacedBy,","start":{"line":101,"column":21,"index":3398}},{"frame":"  128 |         viewport: preset.viewport,\n  129 |       });\n> 130 |       invariant(third);\n      |      ^ Eager Test\n  131 |       {\n  132 |         const expected: DragImpact = {\n  133 |           displaced: getForcedDisplacement({","start":{"line":130,"column":6,"index":4272}},{"frame":"  131 |       {\n  132 |         const expected: DragImpact = {\n> 133 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  134 |             visible: [\n  135 |               { dimension: preset.inForeign3 },\n  136 |               { dimension: preset.inForeign4 },","start":{"line":133,"column":21,"index":4358}},{"frame":"  160 |         viewport: preset.viewport,\n  161 |       });\n> 162 |       invariant(fourth);\n      |      ^ Eager Test\n  163 |       {\n  164 |         const expected: DragImpact = {\n  165 |           displaced: getForcedDisplacement({","start":{"line":162,"column":6,"index":5206}},{"frame":"  163 |       {\n  164 |         const expected: DragImpact = {\n> 165 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  166 |             // ordered by closest\n  167 |             visible: [\n  168 |               { dimension: preset.inForeign2 },","start":{"line":165,"column":21,"index":5293}},{"frame":"  189 |       // inHome1 has made its way into index #3 of foreign after a cross axis move\n  190 |       const crossAxisMove: DragImpact = {\n> 191 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  192 |           visible: [\n  193 |             { dimension: preset.inForeign3 },\n  194 |             { dimension: preset.inForeign4 },","start":{"line":191,"column":19,"index":6186}},{"frame":"  217 |         viewport: preset.viewport,\n  218 |       });\n> 219 |       invariant(first);\n      |      ^ Eager Test\n  220 |       {\n  221 |         const expected: DragImpact = {\n  222 |           displaced: getForcedDisplacement({","start":{"line":219,"column":6,"index":6990}},{"frame":"  220 |       {\n  221 |         const expected: DragImpact = {\n> 222 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  223 |             visible: [\n  224 |               { dimension: preset.inForeign2 },\n  225 |               { dimension: preset.inForeign3 },","start":{"line":222,"column":21,"index":7076}},{"frame":"  251 |         viewport: preset.viewport,\n  252 |       });\n> 253 |       invariant(second);\n      |      ^ Eager Test\n  254 |       {\n  255 |         const expected: DragImpact = {\n  256 |           displaced: getForcedDisplacement({","start":{"line":253,"column":6,"index":8004}},{"frame":"  254 |       {\n  255 |         const expected: DragImpact = {\n> 256 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  257 |             visible: [\n  258 |               { dimension: preset.inForeign1 },\n  259 |               { dimension: preset.inForeign2 },","start":{"line":256,"column":21,"index":8091}},{"frame":"  288 |         viewport: preset.viewport,\n  289 |       });\n> 290 |       invariant(third);\n      |      ^ Eager Test\n  291 |       {\n  292 |         const expected: DragImpact = {\n  293 |           displaced: getForcedDisplacement({","start":{"line":290,"column":6,"index":9135}},{"frame":"  291 |       {\n  292 |         const expected: DragImpact = {\n> 293 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  294 |             // ordered by closest impacted\n  295 |             visible: [\n  296 |               { dimension: preset.inForeign2 },","start":{"line":293,"column":21,"index":9221}},{"frame":"  323 |         viewport: preset.viewport,\n  324 |       });\n> 325 |       invariant(fourth);\n      |      ^ Eager Test\n  326 |       {\n  327 |         const expected: DragImpact = {\n  328 |           displaced: getForcedDisplacement({","start":{"line":325,"column":6,"index":10190}},{"frame":"  326 |       {\n  327 |         const expected: DragImpact = {\n> 328 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  329 |             // ordered by closest\n  330 |             visible: [\n  331 |               { dimension: preset.inForeign3 },","start":{"line":328,"column":21,"index":10277}},{"frame":"  388 |       // cross axis move inHome1 before inForeign4\n  389 |       const crossAxisMove: DragImpact = {\n> 390 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  391 |           visible: [{ dimension: preset.inForeign4 }],\n  392 |         }),\n  393 |         displacedBy,","start":{"line":390,"column":19,"index":12151}},{"frame":"  415 |         viewport: preset.viewport,\n  416 |       });\n> 417 |       invariant(impact);\n      |      ^ Eager Test\n  418 |       const expected: DragImpact = {\n  419 |         // nothing is displaced at this point\n  420 |         displaced: emptyGroups,","start":{"line":417,"column":6,"index":12979}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  34 |\n  35 |       const crossAxisMove: DragImpact = {\n> 36 |         displaced: getForcedDisplacement({\n     |                   ^ Lazy Test\n  37 |           visible: [\n  38 |             { dimension: preset.inForeign2 },\n  39 |             { dimension: preset.inForeign3 },","start":{"line":36,"column":19,"index":1501}},{"frame":"  63 |         viewport: preset.viewport,\n  64 |       });\n> 65 |       invariant(first);\n     |      ^ Lazy Test\n  66 |       {\n  67 |         const expected: DragImpact = {\n  68 |           displaced: getForcedDisplacement({","start":{"line":65,"column":6,"index":2348}},{"frame":"  189 |       // inHome1 has made its way into index #3 of foreign after a cross axis move\n  190 |       const crossAxisMove: DragImpact = {\n> 191 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  192 |           visible: [\n  193 |             { dimension: preset.inForeign3 },\n  194 |             { dimension: preset.inForeign4 },","start":{"line":191,"column":19,"index":6186}},{"frame":"  217 |         viewport: preset.viewport,\n  218 |       });\n> 219 |       invariant(first);\n      |      ^ Lazy Test\n  220 |       {\n  221 |         const expected: DragImpact = {\n  222 |           displaced: getForcedDisplacement({","start":{"line":219,"column":6,"index":6990}},{"frame":"  351 |       // cross axis move inHome1 before inForeign1\n  352 |       const crossAxisMove: DragImpact = {\n> 353 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  354 |           visible: [\n  355 |             { dimension: preset.inForeign1 },\n  356 |             { dimension: preset.inForeign2 },","start":{"line":353,"column":19,"index":11065}},{"frame":"  388 |       // cross axis move inHome1 before inForeign4\n  389 |       const crossAxisMove: DragImpact = {\n> 390 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  391 |           visible: [{ dimension: preset.inForeign4 }],\n  392 |         }),\n  393 |         displacedBy,","start":{"line":390,"column":19,"index":12151}},{"frame":"  415 |         viewport: preset.viewport,\n  416 |       });\n> 417 |       invariant(impact);\n      |      ^ Lazy Test\n  418 |       const expected: DragImpact = {\n  419 |         // nothing is displaced at this point\n  420 |         displaced: emptyGroups,","start":{"line":417,"column":6,"index":12979}},{"frame":"  476 |\n  477 |       const expected: DragImpact = {\n> 478 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  479 |           visible: [{ dimension: preset.inForeign4 }],\n  480 |         }),\n  481 |         displacedBy,","start":{"line":478,"column":19,"index":14861}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":2.419,"halstead":{"bugs":3.278,"difficulty":72.783,"effort":715679.205,"length":1551,"time":39759.956,"vocabulary":81,"volume":9833.107,"operands":{"distinct":69,"total":837,"identifiers":["vertical","horizontal","forEach","axis","preset","getPreset","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","afterCritical","getLiftEffect","draggable","home","draggables","viewport","describe","direction","on "," axis","it","\"should update the impact when moving after where we started in the foreign start\"","crossAxisMove","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign2","inForeign3","inForeign4","at","type","\"REORDER\"","destination","droppableId","foreign","descriptor","id","index","first","moveToNextIndex","isMovingForward","true","isInHomeList","false","insideDestination","inForeignList","previousImpact","invariant","expected","expect","toEqual","second","third","fourth","\"should update the impact when moving before where we started in the foreign list\"","inForeign1","\"should not allow displaced before the start of the list\"","impact","toBe","null","\"should allow displaced into a spot after the last item in a list\"","emptyGroups","1","atEndOfForeignList","\"should not allow displaced after it is already after the last item in a list\"","\"should allow displaced back from after the last item in a list\""]},"operators":{"distinct":12,"total":714,"identifiers":["()",".","[]",",","function=>","const","=","{}",":","``","${}","+"]}},"paramCount":1,"sloc":{"logical":372,"physical":495}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":6,"path":"../../../../../../../src/types","type":"esm"},{"line":7,"path":"../../../../../../../src/invariant","type":"esm"},{"line":8,"path":"../../../../../../../src/state/axis","type":"esm"},{"line":9,"path":"../../../../../../util/dimension","type":"esm"},{"line":10,"path":"../../../../../../../src/state/move-in-direction/move-to-next-place/move-to-next-index","type":"esm"},{"line":11,"path":"../../../../../../../src/state/get-displaced-by","type":"esm"},{"line":12,"path":"../../../../../../../src/state/get-lift-effect","type":"esm"},{"line":13,"path":"../../../../../../util/impact","type":"esm"},{"line":14,"path":"../../../../../../../src/state/no-impact","type":"esm"}],"errors":[],"lineEnd":495,"lineStart":1,"maintainability":72.118,"methods":[{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.089,"difficulty":7.5,"effort":1997.053,"length":56,"time":110.947,"vocabulary":27,"volume":266.274,"operands":{"distinct":18,"total":30,"identifiers":["preset","getPreset","axis","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","afterCritical","getLiftEffect","draggable","home","draggables","viewport","describe","direction","on "," axis"]},"operators":{"distinct":9,"total":26,"identifiers":["const","=","()",".","{}",":","``","${}","function=>"]}},"paramCount":1,"sloc":{"logical":13,"physical":479},"errors":[],"lineEnd":494,"lineStart":16,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.105,"difficulty":5.5,"effort":1732.5,"length":63,"time":96.25,"vocabulary":32,"volume":315,"operands":{"distinct":24,"total":33,"identifiers":["it","\"should update the impact when moving after where we started in the foreign start\"","\"should update the impact when moving before where we started in the foreign list\"","\"should not allow displaced before the start of the list\"","\"should allow displaced into a spot after the last item in a list\"","atEndOfForeignList","DragImpact","displaced","emptyGroups","displacedBy","at","type","\"REORDER\"","destination","droppableId","preset","foreign","descriptor","id","index","inForeign4","1","\"should not allow displaced after it is already after the last item in a list\"","\"should allow displaced back from after the last item in a list\""]},"operators":{"distinct":8,"total":30,"identifiers":["()","function=>","const","=","{}",":",".","+"]}},"paramCount":0,"sloc":{"logical":20,"physical":466},"errors":[],"lineEnd":493,"lineStart":28,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0.84,"halstead":{"bugs":0.938,"difficulty":26.341,"effort":74097.737,"length":501,"time":4116.541,"vocabulary":49,"volume":2812.97,"operands":{"distinct":41,"total":270,"identifiers":["crossAxisMove","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inForeign2","inForeign3","inForeign4","displacedBy","at","type","\"REORDER\"","destination","droppableId","foreign","descriptor","id","index","first","moveToNextIndex","isMovingForward","true","isInHomeList","false","draggable","inHome1","draggables","insideDestination","inForeignList","previousImpact","afterCritical","viewport","invariant","expected","expect","toEqual","second","third","fourth"]},"operators":{"distinct":8,"total":231,"identifiers":["const","=","{}",":","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":119,"physical":155},"errors":[],"lineEnd":186,"lineStart":32,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0.82,"halstead":{"bugs":0.982,"difficulty":26.571,"effort":78281.898,"length":522,"time":4348.994,"vocabulary":50,"volume":2946.093,"operands":{"distinct":42,"total":279,"identifiers":["crossAxisMove","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inForeign3","inForeign4","displacedBy","at","type","\"REORDER\"","destination","droppableId","foreign","descriptor","id","index","first","moveToNextIndex","isMovingForward","false","isInHomeList","draggable","inHome1","draggables","insideDestination","inForeignList","previousImpact","afterCritical","viewport","invariant","expected","inForeign2","expect","toEqual","second","inForeign1","third","true","fourth"]},"operators":{"distinct":8,"total":243,"identifiers":["const","=","{}",":","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":122,"physical":161},"errors":[],"lineEnd":348,"lineStart":188,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.205,"difficulty":6.486,"effort":3989.757,"length":112,"time":221.653,"vocabulary":45,"volume":615.088,"operands":{"distinct":37,"total":60,"identifiers":["crossAxisMove","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inForeign1","inForeign2","inForeign3","displacedBy","at","type","\"REORDER\"","destination","droppableId","foreign","descriptor","id","index","impact","moveToNextIndex","isMovingForward","false","isInHomeList","draggable","inHome1","draggables","home","insideDestination","inForeignList","previousImpact","afterCritical","viewport","expect","toBe","null"]},"operators":{"distinct":8,"total":52,"identifiers":["const","=","{}",":","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":26,"physical":36},"errors":[],"lineEnd":385,"lineStart":350,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.03,"halstead":{"bugs":0.258,"difficulty":8.105,"effort":6267.789,"length":140,"time":348.211,"vocabulary":46,"volume":773.299,"operands":{"distinct":38,"total":77,"identifiers":["crossAxisMove","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inForeign4","displacedBy","at","type","\"REORDER\"","destination","droppableId","foreign","descriptor","id","index","impact","moveToNextIndex","isMovingForward","true","isInHomeList","false","draggable","inHome1","draggables","insideDestination","inForeignList","previousImpact","afterCritical","viewport","invariant","expected","emptyGroups","1","expect","toEqual"]},"operators":{"distinct":8,"total":63,"identifiers":["const","=","{}",":","()","[]",".","+"]}},"paramCount":0,"sloc":{"logical":33,"physical":46},"errors":[],"lineEnd":432,"lineStart":387,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.08,"difficulty":4.091,"effort":983.323,"length":50,"time":54.629,"vocabulary":28,"volume":240.368,"operands":{"distinct":22,"total":30,"identifiers":["impact","DragImpact","moveToNextIndex","isMovingForward","true","isInHomeList","false","draggable","preset","inHome1","draggables","destination","foreign","insideDestination","inForeignList","previousImpact","atEndOfForeignList","afterCritical","viewport","expect","toBe","null"]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":13,"physical":15},"errors":[],"lineEnd":462,"lineStart":448,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.175,"difficulty":5.559,"effort":2918.605,"length":98,"time":162.145,"vocabulary":41,"volume":525.04,"operands":{"distinct":34,"total":54,"identifiers":["impact","DragImpact","moveToNextIndex","isMovingForward","false","isInHomeList","draggable","preset","inHome1","draggables","destination","foreign","insideDestination","inForeignList","previousImpact","atEndOfForeignList","afterCritical","viewport","expected","displaced","getForcedDisplacement","visible","dimension","inForeign4","displacedBy","at","type","\"REORDER\"","droppableId","descriptor","id","index","expect","toEqual"]},"operators":{"distinct":7,"total":44,"identifiers":["const","=","()","{}",":",".","[]"]}},"paramCount":0,"sloc":{"logical":24,"physical":29},"errors":[],"lineEnd":492,"lineStart":464,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.269,"halstead":{"bugs":0.364,"difficulty":8.087,"effort":79519.912,"length":172.333,"time":4417.773,"vocabulary":9,"volume":1092.567,"operands":{"distinct":7.667,"total":93},"operators":{"distinct":1.333,"total":79.333}},"paramCount":0.111,"sloc":{"logical":41.333,"physical":55}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":4.136,"halstead":{"bugs":0.354,"difficulty":11.269,"effort":21283.583,"length":192.75,"time":1182.421,"vocabulary":39.75,"volume":1061.766,"operands":{"distinct":32,"total":104.125},"operators":{"distinct":7.75,"total":88.625}},"paramCount":0.125,"sloc":{"logical":46.25,"physical":173.375}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-to-next-place/move-to-next-index/from-combine/started-after-critical.spec.js","testCases":4,"smells":8,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  17 | });\n  18 |\n> 19 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  20 |   const preset = getPreset(axis);\n  21 |   describe(`on ${axis.direction} axis`, () => {\n  22 |     it('should move backward off combining with an item that is displaced', () => {","start":{"line":19,"column":23,"index":746}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  111 |       });\n  112 |       const combining: DragImpact = {\n> 113 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  114 |           // inHome3 now displaced\n  115 |           visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  116 |         }),","start":{"line":113,"column":19,"index":3820}},{"frame":"  139 |       // backwards movement should displace inHome3\n  140 |       const expected: DragImpact = {\n> 141 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  142 |           // inHome3 now displaced\n  143 |           visible: [\n  144 |             { dimension: preset.inHome3, shouldAnimate: true },","start":{"line":141,"column":19,"index":4731}},{"frame":"  168 |\n  169 |       const combining: DragImpact = {\n> 170 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  171 |           // preset.inHome3 is no longer displaced\n  172 |           visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  173 |         }),","start":{"line":170,"column":19,"index":5709}},{"frame":"  196 |       const expected: DragImpact = {\n  197 |         // forwards movement off inHome3. It will leave inHome3 in the same spot and go after it\n> 198 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  199 |           visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  200 |         }),\n  201 |         displacedBy: getDisplacedBy(axis, preset.inHome2.displaceBy),","start":{"line":198,"column":19,"index":6680}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  86 |\n  87 |       const expected: DragImpact = {\n> 88 |         displaced: getForcedDisplacement({\n     |                   ^ Lazy Test\n  89 |           // inHome3 now displaced\n  90 |           visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  91 |         }),","start":{"line":88,"column":19,"index":2931}},{"frame":"  111 |       });\n  112 |       const combining: DragImpact = {\n> 113 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  114 |           // inHome3 now displaced\n  115 |           visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  116 |         }),","start":{"line":113,"column":19,"index":3820}},{"frame":"  168 |\n  169 |       const combining: DragImpact = {\n> 170 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  171 |           // preset.inHome3 is no longer displaced\n  172 |           visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  173 |         }),","start":{"line":170,"column":19,"index":5709}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":4.372,"halstead":{"bugs":1.561,"difficulty":38.381,"effort":179779.131,"length":752,"time":9987.73,"vocabulary":75,"volume":4684.072,"operands":{"distinct":63,"total":403,"identifiers":["enableCombine","droppable","DroppableDimension","isCombineEnabled","true","vertical","horizontal","forEach","axis","preset","getPreset","describe","direction","on "," axis","it","\"should move backward off combining with an item that is displaced\"","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome2","home","draggables","viewport","combining","DragImpact","at","type","\"COMBINE\"","combine","draggableId","inHome3","descriptor","id","droppableId","result","moveToNextIndex","isMovingForward","false","isInHomeList","destination","insideDestination","inHomeList","previousImpact","expect","toEqual","\"should move forward past a combining an item that is displaced\"","expected","displaced","getForcedDisplacement","visible","dimension","inHome4","shouldAnimate","displacedBy","getDisplacedBy","displaceBy","\"REORDER\"","index","\"should move backwards past combining with an item that started displaced - but now is not\"","\"should move forwards past combining with an item that started displaced - but now is not\""]},"operators":{"distinct":12,"total":349,"identifiers":["const","=","function=>","{}","... (spread)",":","()",".","[]",",","``","${}"]}},"paramCount":2,"sloc":{"logical":183,"physical":214}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":6,"path":"../../../../../../../src/types","type":"esm"},{"line":7,"path":"../../../../../../../src/state/axis","type":"esm"},{"line":8,"path":"../../../../../../util/dimension","type":"esm"},{"line":9,"path":"../../../../../../../src/state/move-in-direction/move-to-next-place/move-to-next-index/index","type":"esm"},{"line":10,"path":"../../../../../../../src/state/get-displaced-by","type":"esm"},{"line":11,"path":"../../../../../../../src/state/get-lift-effect","type":"esm"},{"line":12,"path":"../../../../../../util/impact","type":"esm"}],"errors":[],"lineEnd":214,"lineStart":1,"maintainability":86.025,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["DroppableDimension","droppable","isCombineEnabled","true"]},"operators":{"distinct":3,"total":3,"identifiers":["{}","... (spread)",":"]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":17,"lineStart":14,"name":"<anon method-1>","paramNames":["droppable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.02,"difficulty":4,"effort":243.671,"length":16,"time":13.537,"vocabulary":14,"volume":60.918,"operands":{"distinct":7,"total":8,"identifiers":["preset","getPreset","axis","describe","direction","on "," axis"]},"operators":{"distinct":7,"total":8,"identifiers":["const","=","()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":4,"physical":195},"errors":[],"lineEnd":213,"lineStart":19,"name":"<anon method-2>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should move backward off combining with an item that is displaced\"","\"should move forward past a combining an item that is displaced\"","\"should move backwards past combining with an item that started displaced - but now is not\"","\"should move forwards past combining with an item that started displaced - but now is not\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":192},"errors":[],"lineEnd":212,"lineStart":21,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.209,"difficulty":6.691,"effort":4194.254,"length":117,"time":233.014,"vocabulary":41,"volume":626.834,"operands":{"distinct":34,"total":65,"identifiers":["afterCritical","impact","homeImpact","getLiftEffect","draggable","preset","inHome2","home","draggables","viewport","combining","DragImpact","at","type","\"COMBINE\"","combine","draggableId","inHome3","descriptor","id","droppableId","result","moveToNextIndex","isMovingForward","false","isInHomeList","true","destination","enableCombine","insideDestination","inHomeList","previousImpact","expect","toEqual"]},"operators":{"distinct":7,"total":52,"identifiers":["const","=","{}",":","()",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":28,"physical":33},"errors":[],"lineEnd":54,"lineStart":22,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.439,"halstead":{"bugs":0.339,"difficulty":8.085,"effort":8226.752,"length":176,"time":457.042,"vocabulary":55,"volume":1017.519,"operands":{"distinct":47,"total":95,"identifiers":["afterCritical","impact","homeImpact","getLiftEffect","draggable","preset","inHome2","home","draggables","viewport","combining","DragImpact","at","type","\"COMBINE\"","combine","draggableId","inHome3","descriptor","id","droppableId","result","moveToNextIndex","isMovingForward","true","isInHomeList","destination","enableCombine","insideDestination","inHomeList","previousImpact","expected","displaced","getForcedDisplacement","visible","dimension","inHome4","shouldAnimate","false","displacedBy","getDisplacedBy","axis","displaceBy","\"REORDER\"","index","expect","toEqual"]},"operators":{"distinct":8,"total":81,"identifiers":["const","=","{}",":","()",".","... (spread)","[]"]}},"paramCount":0,"sloc":{"logical":41,"physical":47},"errors":[],"lineEnd":102,"lineStart":56,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.041,"halstead":{"bugs":0.397,"difficulty":9.867,"effort":11755.22,"length":208,"time":653.068,"vocabulary":53,"volume":1191.407,"operands":{"distinct":45,"total":111,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome2","home","draggables","viewport","combining","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome4","shouldAnimate","false","displacedBy","getDisplacedBy","axis","displaceBy","at","type","\"COMBINE\"","combine","draggableId","inHome3","descriptor","id","droppableId","result","moveToNextIndex","isMovingForward","isInHomeList","true","destination","enableCombine","insideDestination","inHomeList","previousImpact","expected","\"REORDER\"","index","expect","toEqual"]},"operators":{"distinct":8,"total":97,"identifiers":["const","=","{}","()",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":49,"physical":55},"errors":[],"lineEnd":158,"lineStart":104,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.128,"halstead":{"bugs":0.376,"difficulty":8.244,"effort":9305.398,"length":198,"time":516.967,"vocabulary":52,"volume":1128.687,"operands":{"distinct":45,"total":106,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome2","home","draggables","viewport","combining","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome4","shouldAnimate","false","displacedBy","getDisplacedBy","axis","displaceBy","at","type","\"COMBINE\"","combine","draggableId","inHome3","descriptor","id","droppableId","result","moveToNextIndex","isMovingForward","true","isInHomeList","destination","enableCombine","insideDestination","inHomeList","previousImpact","expected","\"REORDER\"","index","expect","toEqual"]},"operators":{"distinct":7,"total":92,"identifiers":["const","=","{}","()",":",".","[]"]}},"paramCount":0,"sloc":{"logical":47,"physical":52},"errors":[],"lineEnd":211,"lineStart":160,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.546,"halstead":{"bugs":0.195,"difficulty":4.798,"effort":22472.391,"length":94,"time":1248.466,"vocabulary":9.375,"volume":585.509,"operands":{"distinct":7.875,"total":50.375},"operators":{"distinct":1.5,"total":43.625}},"paramCount":0.25,"sloc":{"logical":22.875,"physical":26.75}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":13.954,"halstead":{"bugs":0.195,"difficulty":5.712,"effort":4832.377,"length":105.429,"time":268.465,"vocabulary":32.714,"volume":584.276,"operands":{"distinct":26.714,"total":56.714},"operators":{"distinct":6,"total":48.714}},"paramCount":0.286,"sloc":{"logical":25.571,"physical":82.571}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-to-next-place/move-to-next-index/from-combine/did-not-start-after-critical.spec.js","testCases":4,"smells":11,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  17 | });\n  18 |\n> 19 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  20 |   const preset = getPreset(axis);\n  21 |   describe(`on ${axis.direction} axis`, () => {\n  22 |     it('should move forward off combining with is displaced', () => {","start":{"line":19,"column":23,"index":746}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  30 |       });\n  31 |       const combining: DragImpact = {\n> 32 |         displaced: getForcedDisplacement({\n     |                   ^ Eager Test\n  33 |           visible: [\n  34 |             { dimension: preset.inForeign1 },\n  35 |             { dimension: preset.inForeign2 },","start":{"line":32,"column":19,"index":1345}},{"frame":"  62 |       const expected: DragImpact = {\n  63 |         // inForeign1 no longer displaced\n> 64 |         displaced: getForcedDisplacement({\n     |                   ^ Eager Test\n  65 |           visible: [\n  66 |             { dimension: preset.inForeign2 },\n  67 |             { dimension: preset.inForeign3 },","start":{"line":64,"column":19,"index":2367}},{"frame":"  149 |       });\n  150 |       const combining: DragImpact = {\n> 151 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  152 |           // inForeign1 is not displaced\n  153 |           visible: [\n  154 |             { dimension: preset.inForeign2 },","start":{"line":151,"column":19,"index":5214}},{"frame":"  181 |\n  182 |       const expected: DragImpact = {\n> 183 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  184 |           // inForeign1 still not displaced\n  185 |           visible: [\n  186 |             { dimension: preset.inForeign2 },","start":{"line":183,"column":19,"index":6231}},{"frame":"  217 |       });\n  218 |       const combining: DragImpact = {\n> 219 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  220 |           visible: [\n  221 |             // inForeign1 not displaced\n  222 |             { dimension: preset.inForeign2 },","start":{"line":219,"column":19,"index":7394}},{"frame":"  249 |\n  250 |       const expected: DragImpact = {\n> 251 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  252 |           // inForeign1 now displaced\n  253 |           visible: [\n  254 |             { dimension: preset.inForeign1 },","start":{"line":251,"column":19,"index":8413}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  30 |       });\n  31 |       const combining: DragImpact = {\n> 32 |         displaced: getForcedDisplacement({\n     |                   ^ Lazy Test\n  33 |           visible: [\n  34 |             { dimension: preset.inForeign1 },\n  35 |             { dimension: preset.inForeign2 },","start":{"line":32,"column":19,"index":1345}},{"frame":"  91 |       });\n  92 |       const combining: DragImpact = {\n> 93 |         displaced: getForcedDisplacement({\n     |                   ^ Lazy Test\n  94 |           visible: [\n  95 |             { dimension: preset.inForeign1 },\n  96 |             { dimension: preset.inForeign2 },","start":{"line":93,"column":19,"index":3392}},{"frame":"  149 |       });\n  150 |       const combining: DragImpact = {\n> 151 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  152 |           // inForeign1 is not displaced\n  153 |           visible: [\n  154 |             { dimension: preset.inForeign2 },","start":{"line":151,"column":19,"index":5214}},{"frame":"  217 |       });\n  218 |       const combining: DragImpact = {\n> 219 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  220 |           visible: [\n  221 |             // inForeign1 not displaced\n  222 |             { dimension: preset.inForeign2 },","start":{"line":219,"column":19,"index":7394}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":3.828,"halstead":{"bugs":1.906,"difficulty":45.143,"effort":258129.365,"length":918,"time":14340.52,"vocabulary":75,"volume":5718.056,"operands":{"distinct":63,"total":474,"identifiers":["enableCombine","droppable","DroppableDimension","isCombineEnabled","true","vertical","horizontal","forEach","axis","preset","getPreset","describe","direction","on "," axis","it","\"should move forward off combining with is displaced\"","afterCritical","getLiftEffect","draggable","inHome1","home","draggables","viewport","combining","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign1","inForeign2","inForeign3","inForeign4","displacedBy","getDisplacedBy","displaceBy","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","foreign","result","moveToNextIndex","isMovingForward","isInHomeList","false","destination","insideDestination","inForeignList","previousImpact","expected","\"REORDER\"","index","expect","toEqual","\"should move backward off combining with is displaced\"","\"should move forward off combining with a non-displaced item\"","\"should move backward off combining with a non-displaced item\""]},"operators":{"distinct":12,"total":444,"identifiers":["const","=","function=>","{}","... (spread)",":","()",".","[]",",","``","${}"]}},"paramCount":2,"sloc":{"logical":209,"physical":273}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":6,"path":"../../../../../../../src/types","type":"esm"},{"line":7,"path":"../../../../../../../src/state/axis","type":"esm"},{"line":8,"path":"../../../../../../util/dimension","type":"esm"},{"line":9,"path":"../../../../../../../src/state/move-in-direction/move-to-next-place/move-to-next-index/index","type":"esm"},{"line":10,"path":"../../../../../../../src/state/get-displaced-by","type":"esm"},{"line":11,"path":"../../../../../../../src/state/get-lift-effect","type":"esm"},{"line":12,"path":"../../../../../../util/impact","type":"esm"}],"errors":[],"lineEnd":273,"lineStart":1,"maintainability":82.635,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["DroppableDimension","droppable","isCombineEnabled","true"]},"operators":{"distinct":3,"total":3,"identifiers":["{}","... (spread)",":"]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":17,"lineStart":14,"name":"<anon method-1>","paramNames":["droppable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.02,"difficulty":4,"effort":243.671,"length":16,"time":13.537,"vocabulary":14,"volume":60.918,"operands":{"distinct":7,"total":8,"identifiers":["preset","getPreset","axis","describe","direction","on "," axis"]},"operators":{"distinct":7,"total":8,"identifiers":["const","=","()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":4,"physical":254},"errors":[],"lineEnd":272,"lineStart":19,"name":"<anon method-2>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should move forward off combining with is displaced\"","\"should move backward off combining with is displaced\"","\"should move forward off combining with a non-displaced item\"","\"should move backward off combining with a non-displaced item\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":251},"errors":[],"lineEnd":271,"lineStart":21,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2,"halstead":{"bugs":0.437,"difficulty":9.957,"effort":13067.841,"length":227,"time":725.991,"vocabulary":55,"volume":1312.369,"operands":{"distinct":47,"total":117,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","combining","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign1","inForeign2","inForeign3","inForeign4","displacedBy","getDisplacedBy","axis","displaceBy","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","foreign","result","moveToNextIndex","isMovingForward","true","isInHomeList","false","destination","enableCombine","insideDestination","inForeignList","previousImpact","expected","\"REORDER\"","index","expect","toEqual"]},"operators":{"distinct":8,"total":110,"identifiers":["const","=","{}","()",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":50,"physical":60},"errors":[],"lineEnd":81,"lineStart":22,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.381,"halstead":{"bugs":0.368,"difficulty":9.783,"effort":10802.345,"length":191,"time":600.13,"vocabulary":55,"volume":1104.24,"operands":{"distinct":46,"total":100,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","combining","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign1","inForeign2","inForeign3","inForeign4","displacedBy","getDisplacedBy","axis","displaceBy","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","foreign","result","moveToNextIndex","isMovingForward","false","isInHomeList","destination","enableCombine","insideDestination","inForeignList","previousImpact","expected","\"REORDER\"","index","expect","toEqual"]},"operators":{"distinct":9,"total":91,"identifiers":["const","=","{}","()",":",".","[]",",","... (spread)"]}},"paramCount":0,"sloc":{"logical":42,"physical":52},"errors":[],"lineEnd":134,"lineStart":83,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.041,"halstead":{"bugs":0.424,"difficulty":9.702,"effort":12340.128,"length":220,"time":685.563,"vocabulary":55,"volume":1271.899,"operands":{"distinct":47,"total":114,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","combining","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign2","inForeign3","inForeign4","displacedBy","getDisplacedBy","axis","displaceBy","at","type","\"COMBINE\"","combine","draggableId","inForeign1","descriptor","id","droppableId","foreign","result","moveToNextIndex","isMovingForward","true","isInHomeList","false","destination","enableCombine","insideDestination","inForeignList","previousImpact","expected","\"REORDER\"","index","expect","toEqual"]},"operators":{"distinct":8,"total":106,"identifiers":["const","=","{}","()",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":49,"physical":67},"errors":[],"lineEnd":202,"lineStart":136,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2,"halstead":{"bugs":0.435,"difficulty":10.174,"effort":13290.788,"length":227,"time":738.377,"vocabulary":54,"volume":1306.359,"operands":{"distinct":46,"total":117,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","combining","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign2","inForeign3","inForeign4","displacedBy","getDisplacedBy","axis","displaceBy","at","type","\"COMBINE\"","combine","draggableId","inForeign1","descriptor","id","droppableId","foreign","result","moveToNextIndex","isMovingForward","false","isInHomeList","destination","enableCombine","insideDestination","inForeignList","previousImpact","expected","\"REORDER\"","index","expect","toEqual"]},"operators":{"distinct":8,"total":110,"identifiers":["const","=","{}","()",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":50,"physical":67},"errors":[],"lineEnd":270,"lineStart":204,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.478,"halstead":{"bugs":0.238,"difficulty":5.643,"effort":32266.171,"length":114.75,"time":1792.565,"vocabulary":9.375,"volume":714.757,"operands":{"distinct":7.875,"total":59.25},"operators":{"distinct":1.5,"total":55.5}},"paramCount":0.25,"sloc":{"logical":26.125,"physical":34.125}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":13.703,"halstead":{"bugs":0.244,"difficulty":6.674,"effort":7120.874,"length":129.143,"time":395.604,"vocabulary":35.286,"volume":731.479,"operands":{"distinct":28.857,"total":66.857},"operators":{"distinct":6.429,"total":62.286}},"paramCount":0.286,"sloc":{"logical":29.286,"physical":107.857}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-to-next-place/move-to-next-combine/in-home-list.legacy.spec.js","testCases":6,"smells":11,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  18 | });\n  19 |\n> 20 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  21 |   const preset = getPreset(axis);\n  22 |   describe(`on ${axis.direction} axis`, () => {\n  23 |     it('should move onto an item that started displaced', () => {","start":{"line":20,"column":23,"index":790}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  55 |\n  56 |       const pastInHome3: DragImpact = {\n> 57 |         displaced: getForcedDisplacement({\n     |                   ^ Eager Test\n  58 |           visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  59 |         }),\n  60 |         displacedBy: getDisplacedBy(axis, preset.inHome2.displaceBy),","start":{"line":57,"column":19,"index":1982}},{"frame":"  74 |         previousImpact: pastInHome3,\n  75 |       });\n> 76 |       invariant(moveBackwardsOntoInHome3);\n     |      ^ Eager Test\n  77 |\n  78 |       const expected: DragImpact = {\n  79 |         ...pastInHome3,","start":{"line":76,"column":6,"index":2652}},{"frame":"  124 |\n  125 |       const beforeInHome2: DragImpact = {\n> 126 |         displaced: getForcedDisplacement({\n      |                   ^ Eager Test\n  127 |           visible: [\n  128 |             { dimension: preset.inHome2 },\n  129 |             // originally displaced","start":{"line":126,"column":19,"index":4163}},{"frame":"  148 |         previousImpact: beforeInHome2,\n  149 |       });\n> 150 |       invariant(moveForwardsOntoInHome2);\n      |      ^ Eager Test\n  151 |\n  152 |       const expected: DragImpact = {\n  153 |         ...beforeInHome2,","start":{"line":150,"column":6,"index":4938}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  36 |         previousImpact: homeImpact,\n  37 |       });\n> 38 |       invariant(result);\n     |      ^ Lazy Test\n  39 |\n  40 |       const expected: DragImpact = {\n  41 |         ...homeImpact,","start":{"line":38,"column":6,"index":1431}},{"frame":"  55 |\n  56 |       const pastInHome3: DragImpact = {\n> 57 |         displaced: getForcedDisplacement({\n     |                   ^ Lazy Test\n  58 |           visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  59 |         }),\n  60 |         displacedBy: getDisplacedBy(axis, preset.inHome2.displaceBy),","start":{"line":57,"column":19,"index":1982}},{"frame":"  74 |         previousImpact: pastInHome3,\n  75 |       });\n> 76 |       invariant(moveBackwardsOntoInHome3);\n     |      ^ Lazy Test\n  77 |\n  78 |       const expected: DragImpact = {\n  79 |         ...pastInHome3,","start":{"line":76,"column":6,"index":2652}},{"frame":"  105 |         previousImpact: homeImpact,\n  106 |       });\n> 107 |       invariant(result);\n      |      ^ Lazy Test\n  108 |\n  109 |       const expected: DragImpact = {\n  110 |         ...homeImpact,","start":{"line":107,"column":6,"index":3607}},{"frame":"  124 |\n  125 |       const beforeInHome2: DragImpact = {\n> 126 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  127 |           visible: [\n  128 |             { dimension: preset.inHome2 },\n  129 |             // originally displaced","start":{"line":126,"column":19,"index":4163}},{"frame":"  148 |         previousImpact: beforeInHome2,\n  149 |       });\n> 150 |       invariant(moveForwardsOntoInHome2);\n      |      ^ Lazy Test\n  151 |\n  152 |       const expected: DragImpact = {\n  153 |         ...beforeInHome2,","start":{"line":150,"column":6,"index":4938}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":6.061,"halstead":{"bugs":1.424,"difficulty":30.429,"effort":129999.223,"length":672,"time":7222.179,"vocabulary":82,"volume":4272.275,"operands":{"distinct":70,"total":355,"identifiers":["enableCombine","droppable","DroppableDimension","isCombineEnabled","true","vertical","horizontal","forEach","axis","preset","getPreset","describe","direction","on "," axis","it","\"should move onto an item that started displaced\"","impact","homeImpact","getLiftEffect","draggable","inHome2","draggables","home","viewport","result","DragImpact","moveToNextCombine","isMovingForward","destination","insideDestination","inHomeList","previousImpact","invariant","expected","at","type","\"COMBINE\"","combine","draggableId","inHome3","descriptor","id","droppableId","expect","toEqual","\"should move onto an item that started displaced - but now is not\"","pastInHome3","displaced","getForcedDisplacement","visible","dimension","inHome4","shouldAnimate","false","displacedBy","getDisplacedBy","displaceBy","\"REORDER\"","index","moveBackwardsOntoInHome3","\"should move onto an item that did not start displaced\"","\"should move onto an item that did not start displaced but now is\"","beforeInHome2","moveForwardsOntoInHome2","\"should not allow combining with anything before the first item\"","inHome1","toBe","null","\"should not allow combining with anything after the last item\""]},"operators":{"distinct":12,"total":317,"identifiers":["const","=","function=>","{}","... (spread)",":","()",".","[]",",","``","${}"]}},"paramCount":2,"sloc":{"logical":165,"physical":204}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":6,"path":"../../../../../../src/types","type":"esm"},{"line":7,"path":"../../../../../../src/state/axis","type":"esm"},{"line":8,"path":"../../../../../../src/invariant","type":"esm"},{"line":9,"path":"../../../../../util/dimension","type":"esm"},{"line":10,"path":"../../../../../../src/state/move-in-direction/move-to-next-place/move-to-next-combine/index","type":"esm"},{"line":11,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":12,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":13,"path":"../../../../../util/impact","type":"esm"}],"errors":[],"lineEnd":204,"lineStart":1,"maintainability":93.189,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["DroppableDimension","droppable","isCombineEnabled","true"]},"operators":{"distinct":3,"total":3,"identifiers":["{}","... (spread)",":"]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":18,"lineStart":15,"name":"<anon method-1>","paramNames":["droppable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.02,"difficulty":4,"effort":243.671,"length":16,"time":13.537,"vocabulary":14,"volume":60.918,"operands":{"distinct":7,"total":8,"identifiers":["preset","getPreset","axis","describe","direction","on "," axis"]},"operators":{"distinct":7,"total":8,"identifiers":["const","=","()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":4,"physical":184},"errors":[],"lineEnd":203,"lineStart":20,"name":"<anon method-2>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.025,"difficulty":1.714,"effort":130.42,"length":24,"time":7.246,"vocabulary":9,"volume":76.078,"operands":{"distinct":7,"total":12,"identifiers":["it","\"should move onto an item that started displaced\"","\"should move onto an item that started displaced - but now is not\"","\"should move onto an item that did not start displaced\"","\"should move onto an item that did not start displaced but now is\"","\"should not allow combining with anything before the first item\"","\"should not allow combining with anything after the last item\""]},"operators":{"distinct":2,"total":12,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":181},"errors":[],"lineEnd":202,"lineStart":22,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.181,"difficulty":6.016,"effort":3274.885,"length":103,"time":181.938,"vocabulary":39,"volume":544.396,"operands":{"distinct":32,"total":55,"identifiers":["impact","homeImpact","getLiftEffect","draggable","preset","inHome2","draggables","home","viewport","result","DragImpact","moveToNextCombine","isMovingForward","true","destination","enableCombine","insideDestination","inHomeList","previousImpact","invariant","expected","at","type","\"COMBINE\"","combine","draggableId","inHome3","descriptor","id","droppableId","expect","toEqual"]},"operators":{"distinct":7,"total":48,"identifiers":["const","=","{}",":","()",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":24,"physical":29},"errors":[],"lineEnd":51,"lineStart":23,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.248,"difficulty":7,"effort":5199.6,"length":133,"time":288.867,"vocabulary":48,"volume":742.8,"operands":{"distinct":40,"total":70,"identifiers":["pastInHome3","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome4","shouldAnimate","false","displacedBy","getDisplacedBy","axis","inHome2","displaceBy","at","type","\"REORDER\"","destination","index","inHome3","descriptor","droppableId","home","id","moveBackwardsOntoInHome3","moveToNextCombine","isMovingForward","draggable","enableCombine","insideDestination","inHomeList","previousImpact","invariant","expected","\"COMBINE\"","combine","draggableId","expect","toEqual"]},"operators":{"distinct":8,"total":63,"identifiers":["const","=","{}",":","()","[]",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":30,"physical":37},"errors":[],"lineEnd":89,"lineStart":53,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.181,"difficulty":6.016,"effort":3274.885,"length":103,"time":181.938,"vocabulary":39,"volume":544.396,"operands":{"distinct":32,"total":55,"identifiers":["impact","homeImpact","getLiftEffect","draggable","preset","inHome3","draggables","home","viewport","result","DragImpact","moveToNextCombine","isMovingForward","false","destination","enableCombine","insideDestination","inHomeList","previousImpact","invariant","expected","at","type","\"COMBINE\"","combine","draggableId","inHome2","descriptor","id","droppableId","expect","toEqual"]},"operators":{"distinct":7,"total":48,"identifiers":["const","=","{}",":","()",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":24,"physical":30},"errors":[],"lineEnd":120,"lineStart":91,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.263,"difficulty":8.012,"effort":6330.755,"length":140,"time":351.709,"vocabulary":50,"volume":790.14,"operands":{"distinct":41,"total":73,"identifiers":["beforeInHome2","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome2","inHome4","shouldAnimate","false","displacedBy","getDisplacedBy","axis","inHome3","displaceBy","at","type","\"REORDER\"","destination","index","descriptor","droppableId","home","id","moveForwardsOntoInHome2","moveToNextCombine","isMovingForward","true","draggable","enableCombine","insideDestination","inHomeList","previousImpact","invariant","expected","\"COMBINE\"","combine","draggableId","expect","toEqual"]},"operators":{"distinct":9,"total":67,"identifiers":["const","=","{}",":","()","[]",",",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":31,"physical":42},"errors":[],"lineEnd":163,"lineStart":122,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.106,"difficulty":4.909,"effort":1557.583,"length":66,"time":86.532,"vocabulary":28,"volume":317.285,"operands":{"distinct":22,"total":36,"identifiers":["impact","homeImpact","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","result","DragImpact","moveToNextCombine","isMovingForward","false","destination","enableCombine","insideDestination","inHomeList","previousImpact","expect","toBe","null"]},"operators":{"distinct":6,"total":30,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":17,"physical":18},"errors":[],"lineEnd":182,"lineStart":165,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.107,"difficulty":4.696,"effort":1505.552,"length":66,"time":83.642,"vocabulary":29,"volume":320.627,"operands":{"distinct":23,"total":36,"identifiers":["impact","homeImpact","getLiftEffect","draggable","preset","inHome4","home","draggables","viewport","result","DragImpact","moveToNextCombine","isMovingForward","true","inHome1","destination","enableCombine","insideDestination","inHomeList","previousImpact","expect","toBe","null"]},"operators":{"distinct":6,"total":30,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":17,"physical":18},"errors":[],"lineEnd":201,"lineStart":184,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.606,"halstead":{"bugs":0.142,"difficulty":3.043,"effort":12999.922,"length":67.2,"time":722.218,"vocabulary":8.2,"volume":427.227,"operands":{"distinct":7,"total":35.5},"operators":{"distinct":1.2,"total":31.7}},"paramCount":0.2,"sloc":{"logical":16.5,"physical":20.4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":12.221,"halstead":{"bugs":0.127,"difficulty":4.874,"effort":2394.092,"length":73.111,"time":133.005,"vocabulary":29.222,"volume":379.588,"operands":{"distinct":23.111,"total":38.778},"operators":{"distinct":6.111,"total":34.333}},"paramCount":0.222,"sloc":{"logical":17.889,"physical":60.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-to-next-place/move-to-next-combine/in-foreign-list.legacy.spec.js","testCases":4,"smells":10,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  19 | });\n  20 |\n> 21 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  22 |   const preset = getPreset(axis);\n  23 |\n  24 |   // always displace forward in foreign list","start":{"line":21,"column":23,"index":801}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  33 |       // now moving forward onto inForeign2\n  34 |       const current: DragImpact = {\n> 35 |         displaced: getForcedDisplacement({\n     |                   ^ Eager Test\n  36 |           visible: [\n  37 |             { dimension: preset.inForeign2 },\n  38 |             { dimension: preset.inForeign3 },","start":{"line":35,"column":19,"index":1277}},{"frame":"  57 |         previousImpact: current,\n  58 |       });\n> 59 |       invariant(result);\n     |      ^ Eager Test\n  60 |\n  61 |       const expected: DragImpact = {\n  62 |         ...current,","start":{"line":59,"column":6,"index":1986}},{"frame":"  77 |       // ordered by closest impacted\n  78 |       const current: DragImpact = {\n> 79 |         displaced: getForcedDisplacement({\n     |                   ^ Eager Test\n  80 |           visible: [\n  81 |             { dimension: preset.inForeign3 },\n  82 |             { dimension: preset.inForeign4 },","start":{"line":79,"column":19,"index":2613}},{"frame":"  100 |         previousImpact: current,\n  101 |       });\n> 102 |       invariant(result);\n      |      ^ Eager Test\n  103 |\n  104 |       // no change to displacement\n  105 |       const expected: DragImpact = {","start":{"line":102,"column":6,"index":3277}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  33 |       // now moving forward onto inForeign2\n  34 |       const current: DragImpact = {\n> 35 |         displaced: getForcedDisplacement({\n     |                   ^ Lazy Test\n  36 |           visible: [\n  37 |             { dimension: preset.inForeign2 },\n  38 |             { dimension: preset.inForeign3 },","start":{"line":35,"column":19,"index":1277}},{"frame":"  57 |         previousImpact: current,\n  58 |       });\n> 59 |       invariant(result);\n     |      ^ Lazy Test\n  60 |\n  61 |       const expected: DragImpact = {\n  62 |         ...current,","start":{"line":59,"column":6,"index":1986}},{"frame":"  77 |       // ordered by closest impacted\n  78 |       const current: DragImpact = {\n> 79 |         displaced: getForcedDisplacement({\n     |                   ^ Lazy Test\n  80 |           visible: [\n  81 |             { dimension: preset.inForeign3 },\n  82 |             { dimension: preset.inForeign4 },","start":{"line":79,"column":19,"index":2613}},{"frame":"  100 |         previousImpact: current,\n  101 |       });\n> 102 |       invariant(result);\n      |      ^ Lazy Test\n  103 |\n  104 |       // no change to displacement\n  105 |       const expected: DragImpact = {","start":{"line":102,"column":6,"index":3277}},{"frame":"  118 |     it('should not allow combining with anything before the first item', () => {\n  119 |       const current: DragImpact = {\n> 120 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  121 |           visible: [\n  122 |             { dimension: preset.inForeign1 },\n  123 |             { dimension: preset.inForeign2 },","start":{"line":120,"column":19,"index":3782}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":6.612,"halstead":{"bugs":1.063,"difficulty":27.887,"effort":88936.279,"length":512,"time":4940.904,"vocabulary":75,"volume":3189.155,"operands":{"distinct":62,"total":266,"identifiers":["enableCombine","droppable","DroppableDimension","isCombineEnabled","true","vertical","horizontal","forEach","axis","preset","getPreset","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","describe","direction","on "," axis","it","\"should move onto a displaced item when moving forwards\"","current","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign2","inForeign3","inForeign4","at","type","\"REORDER\"","destination","index","descriptor","droppableId","foreign","id","result","moveToNextCombine","isMovingForward","draggable","insideDestination","inForeignList","previousImpact","invariant","expected","\"COMBINE\"","combine","draggableId","expect","toEqual","\"should move onto a non-displaced item when moving backwards\"","false","\"should not allow combining with anything before the first item\"","inForeign1","null","\"should not allow combining with anything after the last item\"","emptyGroups","1"]},"operators":{"distinct":13,"total":246,"identifiers":["const","=","function=>","{}","... (spread)",":","()",".","[]",",","``","${}","+"]}},"paramCount":2,"sloc":{"logical":121,"physical":177}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":7,"path":"../../../../../../src/types","type":"esm"},{"line":8,"path":"../../../../../../src/invariant","type":"esm"},{"line":9,"path":"../../../../../../src/state/axis","type":"esm"},{"line":10,"path":"../../../../../util/dimension","type":"esm"},{"line":11,"path":"../../../../../../src/state/move-in-direction/move-to-next-place/move-to-next-combine/index","type":"esm"},{"line":12,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":13,"path":"../../../../../util/impact","type":"esm"},{"line":14,"path":"../../../../../../src/state/no-impact","type":"esm"}],"errors":[],"lineEnd":177,"lineStart":1,"maintainability":95.134,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["DroppableDimension","droppable","isCombineEnabled","true"]},"operators":{"distinct":3,"total":3,"identifiers":["{}","... (spread)",":"]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":19,"lineStart":16,"name":"<anon method-1>","paramNames":["droppable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.04,"difficulty":4.375,"effort":520.371,"length":28,"time":28.91,"vocabulary":19,"volume":118.942,"operands":{"distinct":12,"total":15,"identifiers":["preset","getPreset","axis","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","describe","direction","on "," axis"]},"operators":{"distinct":7,"total":13,"identifiers":["const","=","()",".","``","${}","function=>"]}},"paramCount":1,"sloc":{"logical":6,"physical":156},"errors":[],"lineEnd":176,"lineStart":21,"name":"<anon method-2>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should move onto a displaced item when moving forwards\"","\"should move onto a non-displaced item when moving backwards\"","\"should not allow combining with anything before the first item\"","\"should not allow combining with anything after the last item\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":146},"errors":[],"lineEnd":175,"lineStart":30,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.25,"difficulty":8.514,"effort":6395.389,"length":136,"time":355.299,"vocabulary":46,"volume":751.204,"operands":{"distinct":37,"total":70,"identifiers":["current","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inForeign2","inForeign3","inForeign4","displacedBy","at","type","\"REORDER\"","destination","index","descriptor","droppableId","foreign","id","result","moveToNextCombine","isMovingForward","true","draggable","inHome1","enableCombine","insideDestination","inForeignList","previousImpact","invariant","expected","\"COMBINE\"","combine","draggableId","expect","toEqual"]},"operators":{"distinct":9,"total":66,"identifiers":["const","=","{}",":","()","[]",",",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":30,"physical":42},"errors":[],"lineEnd":72,"lineStart":31,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.238,"difficulty":8.149,"effort":5806.234,"length":129,"time":322.569,"vocabulary":46,"volume":712.539,"operands":{"distinct":37,"total":67,"identifiers":["current","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inForeign3","inForeign4","displacedBy","at","type","\"REORDER\"","destination","index","descriptor","droppableId","foreign","id","result","moveToNextCombine","isMovingForward","false","draggable","inHome1","enableCombine","insideDestination","inForeignList","previousImpact","invariant","expected","\"COMBINE\"","combine","draggableId","inForeign2","expect","toEqual"]},"operators":{"distinct":9,"total":62,"identifiers":["const","=","{}",":","()","[]",",",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":29,"physical":43},"errors":[],"lineEnd":116,"lineStart":74,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.191,"difficulty":6.353,"effort":3631.25,"length":106,"time":201.736,"vocabulary":42,"volume":571.586,"operands":{"distinct":34,"total":54,"identifiers":["current","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inForeign1","inForeign2","inForeign3","inForeign4","displacedBy","at","type","\"REORDER\"","destination","index","descriptor","droppableId","foreign","id","result","moveToNextCombine","isMovingForward","false","draggable","inHome1","enableCombine","insideDestination","inForeignList","previousImpact","expect","toEqual","null"]},"operators":{"distinct":8,"total":52,"identifiers":["const","=","{}",":","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":24,"physical":31},"errors":[],"lineEnd":148,"lineStart":118,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.132,"difficulty":4.9,"effort":1940,"length":76,"time":107.778,"vocabulary":37,"volume":395.918,"operands":{"distinct":30,"total":42,"identifiers":["current","DragImpact","displaced","emptyGroups","displacedBy","at","type","\"REORDER\"","destination","index","preset","inForeign4","descriptor","1","droppableId","foreign","id","result","moveToNextCombine","isMovingForward","true","draggable","inHome1","enableCombine","insideDestination","inForeignList","previousImpact","expect","toEqual","null"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","{}",":","+",".","()"]}},"paramCount":0,"sloc":{"logical":18,"physical":25},"errors":[],"lineEnd":174,"lineStart":150,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.826,"halstead":{"bugs":0.133,"difficulty":3.486,"effort":11117.035,"length":64,"time":617.613,"vocabulary":9.375,"volume":398.644,"operands":{"distinct":7.75,"total":33.25},"operators":{"distinct":1.625,"total":30.75}},"paramCount":0.25,"sloc":{"logical":15.125,"physical":22.125}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":13.667,"halstead":{"bugs":0.125,"difficulty":5.056,"effort":2627.799,"length":71.143,"time":145.989,"vocabulary":29.143,"volume":373.537,"operands":{"distinct":22.714,"total":37.143},"operators":{"distinct":6.429,"total":34}},"paramCount":0.286,"sloc":{"logical":16.714,"physical":63.857}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-cross-axis/move-to-new-droppable/to-home-list.spec.js","testCases":4,"smells":10,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  18 | const dontCare: Position = { x: 0, y: 0 };\n  19 |\n> 20 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  21 |   describe(`on ${axis.direction} axis`, () => {\n  22 |     const preset = getPreset(axis);\n  23 |     const viewport: Viewport = preset.viewport;","start":{"line":20,"column":23,"index":821}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  69 |           afterCritical,\n  70 |         });\n> 71 |         invariant(result);\n     |        ^ Eager Test\n  72 |\n  73 |         const expected: DragImpact = {\n  74 |           displaced: getForcedDisplacement({","start":{"line":71,"column":8,"index":2539}},{"frame":"  72 |\n  73 |         const expected: DragImpact = {\n> 74 |           displaced: getForcedDisplacement({\n     |                     ^ Eager Test\n  75 |             // unlike the original displacement, this will be animated\n  76 |             visible: [\n  77 |               { dimension: preset.inHome3 },","start":{"line":74,"column":21,"index":2619}},{"frame":"  116 |           afterCritical,\n  117 |         });\n> 118 |         invariant(result);\n      |        ^ Eager Test\n  119 |\n  120 |         const expected: DragImpact = {\n  121 |           displaced: getForcedDisplacement({","start":{"line":118,"column":8,"index":4063}},{"frame":"  119 |\n  120 |         const expected: DragImpact = {\n> 121 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  122 |             visible: [\n  123 |               { dimension: preset.inHome2 },\n  124 |               { dimension: preset.inHome3 },","start":{"line":121,"column":21,"index":4143}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  69 |           afterCritical,\n  70 |         });\n> 71 |         invariant(result);\n     |        ^ Lazy Test\n  72 |\n  73 |         const expected: DragImpact = {\n  74 |           displaced: getForcedDisplacement({","start":{"line":71,"column":8,"index":2539}},{"frame":"  72 |\n  73 |         const expected: DragImpact = {\n> 74 |           displaced: getForcedDisplacement({\n     |                     ^ Lazy Test\n  75 |             // unlike the original displacement, this will be animated\n  76 |             visible: [\n  77 |               { dimension: preset.inHome3 },","start":{"line":74,"column":21,"index":2619}},{"frame":"  116 |           afterCritical,\n  117 |         });\n> 118 |         invariant(result);\n      |        ^ Lazy Test\n  119 |\n  120 |         const expected: DragImpact = {\n  121 |           displaced: getForcedDisplacement({","start":{"line":118,"column":8,"index":4063}},{"frame":"  119 |\n  120 |         const expected: DragImpact = {\n> 121 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  122 |             visible: [\n  123 |               { dimension: preset.inHome2 },\n  124 |               { dimension: preset.inHome3 },","start":{"line":121,"column":21,"index":4143}},{"frame":"  162 |           afterCritical,\n  163 |         });\n> 164 |         invariant(result);\n      |        ^ Lazy Test\n  165 |\n  166 |         const expected: DragImpact = {\n  167 |           displaced: emptyGroups,","start":{"line":164,"column":8,"index":5549}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":7.143,"halstead":{"bugs":1.146,"difficulty":26.211,"effort":90121.274,"length":552,"time":5006.737,"vocabulary":75,"volume":3438.308,"operands":{"distinct":64,"total":305,"identifiers":["dontCare","Position","x","0","y","vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","viewport","Viewport","it","\"should not to anything if there is not target (can happen if invisible)\"","afterCritical","getLiftEffect","draggable","inHome2","home","draggables","expect","moveToNewDroppable","previousPageBorderBoxCenter","destination","insideDestination","inHomeList","inHome1","moveRelativeTo","null","toBe","\"moving back into original index\"","\"should return a home impact with the original location\"","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","result","DragImpact","invariant","expected","displaced","getForcedDisplacement","visible","dimension","inHome3","inHome4","at","type","\"REORDER\"","droppableId","descriptor","id","index","toEqual","\"moving before the original index\"","\"should move the everything after the target index forward\"","\"moving after the original index\"","\"should move the everything from the target index to the original index forward\"","emptyGroups"]},"operators":{"distinct":11,"total":247,"identifiers":["const","=","{}",":","()",".","[]",",","function=>","``","${}"]}},"paramCount":1,"sloc":{"logical":140,"physical":182}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../../src/invariant","type":"esm"},{"line":10,"path":"../../../../../../src/state/axis","type":"esm"},{"line":11,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":12,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":13,"path":"../../../../../../src/state/move-in-direction/move-cross-axis/move-to-new-droppable","type":"esm"},{"line":14,"path":"../../../../../util/dimension","type":"esm"},{"line":15,"path":"../../../../../util/impact","type":"esm"},{"line":16,"path":"../../../../../../src/state/no-impact","type":"esm"}],"errors":[],"lineEnd":182,"lineStart":1,"maintainability":97.104,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":162},"errors":[],"lineEnd":181,"lineStart":20,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.039,"difficulty":3.409,"effort":395.455,"length":29,"time":21.97,"vocabulary":16,"volume":116,"operands":{"distinct":11,"total":15,"identifiers":["preset","getPreset","axis","viewport","Viewport","it","\"should not to anything if there is not target (can happen if invisible)\"","describe","\"moving back into original index\"","\"moving before the original index\"","\"moving after the original index\""]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":160},"errors":[],"lineEnd":180,"lineStart":21,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.104,"difficulty":6.158,"effort":1915.957,"length":67,"time":106.442,"vocabulary":25,"volume":311.138,"operands":{"distinct":19,"total":39,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome2","home","draggables","viewport","expect","moveToNewDroppable","previousPageBorderBoxCenter","dontCare","destination","insideDestination","inHomeList","inHome1","moveRelativeTo","null","toBe"]},"operators":{"distinct":6,"total":28,"identifiers":["const","=","{}","()",":","."]}},"paramCount":0,"sloc":{"logical":18,"physical":21},"errors":[],"lineEnd":45,"lineStart":25,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should return a home impact with the original location\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":46},"errors":[],"lineEnd":92,"lineStart":47,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.267,"difficulty":8.103,"effort":6480.923,"length":144,"time":360.051,"vocabulary":47,"volume":799.861,"operands":{"distinct":39,"total":79,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome2","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","result","DragImpact","moveToNewDroppable","previousPageBorderBoxCenter","dontCare","moveRelativeTo","destination","insideDestination","inHomeList","invariant","expected","displaced","getForcedDisplacement","visible","dimension","inHome3","inHome4","at","type","\"REORDER\"","droppableId","descriptor","id","index","expect","toEqual"]},"operators":{"distinct":8,"total":65,"identifiers":["const","=","{}","()",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":34,"physical":44},"errors":[],"lineEnd":91,"lineStart":48,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should move the everything after the target index forward\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":46},"errors":[],"lineEnd":139,"lineStart":94,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.267,"difficulty":8.103,"effort":6480.923,"length":144,"time":360.051,"vocabulary":47,"volume":799.861,"operands":{"distinct":39,"total":79,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome4","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","result","DragImpact","moveToNewDroppable","previousPageBorderBoxCenter","dontCare","moveRelativeTo","inHome2","destination","insideDestination","inHomeList","invariant","expected","displaced","getForcedDisplacement","visible","dimension","inHome3","at","type","\"REORDER\"","droppableId","descriptor","id","index","expect","toEqual"]},"operators":{"distinct":8,"total":65,"identifiers":["const","=","{}","()",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":34,"physical":44},"errors":[],"lineEnd":138,"lineStart":95,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should move the everything from the target index to the original index forward\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":39},"errors":[],"lineEnd":179,"lineStart":141,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.226,"difficulty":6,"effort":4076.592,"length":126,"time":226.477,"vocabulary":42,"volume":679.432,"operands":{"distinct":36,"total":72,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","result","DragImpact","moveToNewDroppable","previousPageBorderBoxCenter","dontCare","moveRelativeTo","inHome4","destination","insideDestination","inHomeList","invariant","expected","displaced","emptyGroups","at","type","\"REORDER\"","droppableId","descriptor","id","index","expect","toEqual"]},"operators":{"distinct":6,"total":54,"identifiers":["const","=","{}","()",":","."]}},"paramCount":0,"sloc":{"logical":30,"physical":37},"errors":[],"lineEnd":178,"lineStart":142,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.714,"halstead":{"bugs":0.115,"difficulty":2.621,"effort":9012.127,"length":55.2,"time":500.674,"vocabulary":7.5,"volume":343.831,"operands":{"distinct":6.4,"total":30.5},"operators":{"distinct":1.1,"total":24.7}},"paramCount":0.1,"sloc":{"logical":14,"physical":18.2}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":24.874,"halstead":{"bugs":0.102,"difficulty":4.141,"effort":2161.878,"length":59.111,"time":120.104,"vocabulary":22.111,"volume":307.057,"operands":{"distinct":17.222,"total":32.778},"operators":{"distinct":4.889,"total":26.333}},"paramCount":0.111,"sloc":{"logical":15,"physical":66.556}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-cross-axis/move-to-new-droppable/to-foreign-list.spec.js","testCases":7,"smells":19,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  34 | } from '../../../../../../src/state/no-impact';\n  35 |\n> 36 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  37 |   describe(`on ${axis.direction} axis`, () => {\n  38 |     const preset = getPreset(axis);\n  39 |     const viewport: Viewport = preset.viewport;","start":{"line":36,"column":23,"index":1309}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  119 |               afterCritical,\n  120 |             });\n> 121 |             expect(result).toBeTruthy();\n      |            ^ Duplicate Assert\n  122 |           }\n  123 |\n  124 |           // center on visible edge = can move","start":{"line":121,"column":12,"index":4351}},{"frame":"  119 |               afterCritical,\n  120 |             });\n> 121 |             expect(result).toBeTruthy();\n      |            ^ Duplicate Assert\n  122 |           }\n  123 |\n  124 |           // center on visible edge = can move","start":{"line":121,"column":12,"index":4351}},{"frame":"  143 |               afterCritical,\n  144 |             });\n> 145 |             expect(result).toBeTruthy();\n      |            ^ Duplicate Assert\n  146 |           }\n  147 |           // center past visible edge = cannot move\n  148 |           {","start":{"line":145,"column":12,"index":5170}},{"frame":"  143 |               afterCritical,\n  144 |             });\n> 145 |             expect(result).toBeTruthy();\n      |            ^ Duplicate Assert\n  146 |           }\n  147 |           // center past visible edge = cannot move\n  148 |           {","start":{"line":145,"column":12,"index":5170}},{"frame":"  166 |             });\n  167 |\n> 168 |             expect(result).toBe(null);\n      |            ^ Duplicate Assert\n  169 |           }\n  170 |         });\n  171 |","start":{"line":168,"column":12,"index":6006}},{"frame":"  200 |             });\n  201 |\n> 202 |             expect(result).toBeTruthy();\n      |            ^ Duplicate Assert\n  203 |           }\n  204 |           // center on visible edge = can move\n  205 |           {","start":{"line":202,"column":12,"index":7295}},{"frame":"  200 |             });\n  201 |\n> 202 |             expect(result).toBeTruthy();\n      |            ^ Duplicate Assert\n  203 |           }\n  204 |           // center on visible edge = can move\n  205 |           {","start":{"line":202,"column":12,"index":7295}},{"frame":"  220 |             });\n  221 |\n> 222 |             expect(result).toBeTruthy();\n      |            ^ Duplicate Assert\n  223 |           }\n  224 |           // start is no longer visible = cannot move\n  225 |           {","start":{"line":222,"column":12,"index":7965}},{"frame":"  220 |             });\n  221 |\n> 222 |             expect(result).toBeTruthy();\n      |            ^ Duplicate Assert\n  223 |           }\n  224 |           // start is no longer visible = cannot move\n  225 |           {","start":{"line":222,"column":12,"index":7965}},{"frame":"  240 |             });\n  241 |\n> 242 |             expect(result).toBe(null);\n      |            ^ Duplicate Assert\n  243 |           }\n  244 |         });\n  245 |","start":{"line":242,"column":12,"index":8644}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  306 |           afterCritical,\n  307 |         });\n> 308 |         invariant(result);\n      |        ^ Eager Test\n  309 |\n  310 |         const expected: DragImpact = {\n  311 |           displaced: getForcedDisplacement({","start":{"line":308,"column":8,"index":10855}},{"frame":"  309 |\n  310 |         const expected: DragImpact = {\n> 311 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  312 |             // ordered by closest impacted\n  313 |             visible: [\n  314 |               { dimension: preset.inForeign2 },","start":{"line":311,"column":21,"index":10935}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  58 |           afterCritical,\n  59 |         });\n> 60 |         invariant(result);\n     |        ^ Lazy Test\n  61 |\n  62 |         const expected: DragImpact = {\n  63 |           displaced: emptyGroups,","start":{"line":60,"column":8,"index":2173}},{"frame":"   95 |             totalShift,\n   96 |           );\n>  97 |           invariant(preset.emptyForeign.subject.active);\n      |          ^ Lazy Test\n   98 |           const maxAllowableScroll: Position = negate(\n   99 |             subtract(\n  100 |               patch(axis.line, preset.emptyForeign.subject.active[axis.start]),","start":{"line":97,"column":10,"index":3431}},{"frame":"  306 |           afterCritical,\n  307 |         });\n> 308 |         invariant(result);\n      |        ^ Lazy Test\n  309 |\n  310 |         const expected: DragImpact = {\n  311 |           displaced: getForcedDisplacement({","start":{"line":308,"column":8,"index":10855}},{"frame":"  309 |\n  310 |         const expected: DragImpact = {\n> 311 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  312 |             // ordered by closest impacted\n  313 |             visible: [\n  314 |               { dimension: preset.inForeign2 },","start":{"line":311,"column":21,"index":10935}},{"frame":"  358 |\n  359 |         const expected: DragImpact = {\n> 360 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  361 |             // everything after inForeign1\n  362 |             // ordered by closest impacted\n  363 |             visible: [","start":{"line":360,"column":21,"index":12581}},{"frame":"  406 |           afterCritical,\n  407 |         });\n> 408 |         invariant(result);\n      |        ^ Lazy Test\n  409 |\n  410 |         const expected: DragImpact = {\n  411 |           displaced: emptyGroups,","start":{"line":408,"column":8,"index":14260}}]}],"metrics":{"aggregate":{"cyclomatic":16,"cyclomaticDensity":5.387,"halstead":{"bugs":3.093,"difficulty":36.149,"effort":335377.224,"length":1315,"time":18632.068,"vocabulary":133,"volume":9277.696,"operands":{"distinct":121,"total":729,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","viewport","Viewport","\"moving into an unpopulated list\"","afterCritical","getLiftEffect","draggable","inHome1","home","draggables","it","\"should move into the first position of the list\"","result","DragImpact","moveToNewDroppable","previousPageBorderBoxCenter","page","borderBox","center","moveRelativeTo","null","destination","emptyForeign","insideDestination","invariant","expected","displaced","emptyGroups","displacedBy","noDisplacedBy","at","type","\"REORDER\"","droppableId","descriptor","id","index","0","expect","toEqual","\"only move into first position if it is visible\"","distanceToContentBoxStart","box","margin","start","border","padding","\"should not move into the start of list if the position is not visible due to droppable scroll\"","whatNewCenterWouldBeWithoutScroll","Position","goIntoStart","moveInto","isMoving","totalShift","subtract","shiftedInHome1Page","Spacing","offsetByPosition","subject","active","maxAllowableScroll","negate","patch","line","pastMaxAllowableScroll","add","1","toBeTruthy","scrollable","DroppableDimension","makeScrollable","foreign","scrolled","scrollDroppable","toBe","\"should not move into the start of list if the position is not visible due to page scroll\"","emptyForeignPageBox","BoxModel","distanceToStartOfDroppableContextBox","marginBox","onVisibleStartEdge","pastVisibleStartEdge","scrollViewport","\"should allow a big item to move into a smaller list\"","crossAxisStart","client","crossAxisEnd","smallDroppable","getDroppableDimension","\"small\"","mode","\"standard\"","end","windowScroll","\"is going before a target\"","DisplacedBy","getDisplacedBy","displaceBy","\"should move the target and everything below it forward\"","inForeign2","inForeignList","getForcedDisplacement","visible","dimension","inForeign3","inForeign4","\"is going after a target\"","inHome3","inForeign1","\"is moving after the last position of a list\"","\"should go after the non-displaced last item in the list\"","inHome4"]},"operators":{"distinct":12,"total":586,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":","+"]}},"paramCount":2,"sloc":{"logical":297,"physical":426}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":9,"path":"../../../../../../src/types","type":"esm"},{"line":10,"path":"../../../../../../src/invariant","type":"esm"},{"line":11,"path":"../../../../../../src/state/axis","type":"esm"},{"line":12,"path":"../../../../../../src/state/droppable/scroll-droppable","type":"esm"},{"line":13,"path":"../../../../../../src/state/get-center-from-impact/move-relative-to","type":"esm"},{"line":14,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":15,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":16,"path":"../../../../../../src/state/move-in-direction/move-cross-axis/move-to-new-droppable","type":"esm"},{"line":22,"path":"../../../../../../src/state/position","type":"esm"},{"line":23,"path":"../../../../../../src/state/scroll-viewport","type":"esm"},{"line":24,"path":"../../../../../../src/state/spacing","type":"esm"},{"line":29,"path":"../../../../../util/dimension","type":"esm"},{"line":30,"path":"../../../../../util/impact","type":"esm"},{"line":34,"path":"../../../../../../src/state/no-impact","type":"esm"}],"errors":[],"lineEnd":426,"lineStart":1,"maintainability":89.647,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":390},"errors":[],"lineEnd":425,"lineStart":36,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.038,"difficulty":3.75,"effort":424.874,"length":29,"time":23.604,"vocabulary":15,"volume":113.3,"operands":{"distinct":10,"total":15,"identifiers":["preset","getPreset","axis","viewport","Viewport","describe","\"moving into an unpopulated list\"","\"is going before a target\"","\"is going after a target\"","\"is moving after the last position of a list\""]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":388},"errors":[],"lineEnd":424,"lineStart":37,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.051,"difficulty":5.542,"effort":847.462,"length":36,"time":47.081,"vocabulary":19,"volume":152.925,"operands":{"distinct":12,"total":19,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","it","\"should move into the first position of the list\"","describe","\"only move into first position if it is visible\""]},"operators":{"distinct":7,"total":17,"identifiers":["const","=","{}","()",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":240},"errors":[],"lineEnd":280,"lineStart":41,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.152,"difficulty":4.941,"effort":2250.172,"length":85,"time":125.01,"vocabulary":41,"volume":455.392,"operands":{"distinct":34,"total":48,"identifiers":["result","DragImpact","moveToNewDroppable","previousPageBorderBoxCenter","preset","inHome1","page","borderBox","center","draggable","draggables","moveRelativeTo","null","destination","emptyForeign","insideDestination","viewport","afterCritical","invariant","expected","displaced","emptyGroups","displacedBy","noDisplacedBy","at","type","\"REORDER\"","droppableId","descriptor","id","index","0","expect","toEqual"]},"operators":{"distinct":7,"total":37,"identifiers":["const","=","()","{}",":",".","[]"]}},"paramCount":0,"sloc":{"logical":21,"physical":27},"errors":[],"lineEnd":75,"lineStart":49,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.019,"difficulty":2.667,"effort":150.594,"length":17,"time":8.366,"vocabulary":10,"volume":56.473,"operands":{"distinct":6,"total":8,"identifiers":["distanceToContentBoxStart","box","it","\"should not move into the start of list if the position is not visible due to droppable scroll\"","\"should not move into the start of list if the position is not visible due to page scroll\"","\"should allow a big item to move into a smaller list\""]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","function=>","()"]}},"paramCount":0,"sloc":{"logical":8,"physical":203},"errors":[],"lineEnd":279,"lineStart":77,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.024,"difficulty":3,"effort":218.725,"length":23,"time":12.151,"vocabulary":9,"volume":72.908,"operands":{"distinct":6,"total":12,"identifiers":["box","margin","axis","start","border","padding"]},"operators":{"distinct":3,"total":11,"identifiers":["+","[]","."]}},"paramCount":1,"sloc":{"logical":1,"physical":4},"errors":[],"lineEnd":81,"lineStart":78,"name":"<anon method-6>","paramNames":["box"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.613,"halstead":{"bugs":0.575,"difficulty":12.214,"effort":21067.01,"length":297,"time":1170.389,"vocabulary":56,"volume":1724.784,"operands":{"distinct":49,"total":171,"identifiers":["whatNewCenterWouldBeWithoutScroll","Position","goIntoStart","axis","moveInto","preset","emptyForeign","page","isMoving","inHome1","totalShift","subtract","borderBox","center","shiftedInHome1Page","Spacing","offsetByPosition","invariant","subject","active","maxAllowableScroll","negate","patch","line","start","pastMaxAllowableScroll","add","1","result","DragImpact","moveToNewDroppable","previousPageBorderBoxCenter","draggable","draggables","moveRelativeTo","null","destination","insideDestination","viewport","afterCritical","expect","toBeTruthy","scrollable","DroppableDimension","makeScrollable","foreign","scrolled","scrollDroppable","toBe"]},"operators":{"distinct":7,"total":126,"identifiers":["const","=","()","{}",":",".","[]"]}},"paramCount":0,"sloc":{"logical":62,"physical":88},"errors":[],"lineEnd":170,"lineStart":83,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.083,"halstead":{"bugs":0.415,"difficulty":13.026,"effort":16206.866,"length":224,"time":900.381,"vocabulary":47,"volume":1244.228,"operands":{"distinct":39,"total":127,"identifiers":["emptyForeignPageBox","BoxModel","preset","emptyForeign","page","distanceToStartOfDroppableContextBox","marginBox","axis","start","distanceToContentBoxStart","onVisibleStartEdge","Position","patch","line","inHome1","margin","pastVisibleStartEdge","add","1","result","DragImpact","moveToNewDroppable","previousPageBorderBoxCenter","borderBox","center","draggable","draggables","destination","moveRelativeTo","null","insideDestination","viewport","afterCritical","expect","toBeTruthy","scrolled","Viewport","scrollViewport","toBe"]},"operators":{"distinct":8,"total":97,"identifiers":["const","=",".","+","[]","()","{}",":"]}},"paramCount":0,"sloc":{"logical":48,"physical":73},"errors":[],"lineEnd":244,"lineStart":172,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.225,"difficulty":6.7,"effort":4527.729,"length":121,"time":251.541,"vocabulary":48,"volume":675.78,"operands":{"distinct":40,"total":67,"identifiers":["crossAxisStart","preset","home","client","marginBox","axis","crossAxisEnd","1","smallDroppable","DroppableDimension","getDroppableDimension","descriptor","id","\"small\"","type","mode","\"standard\"","borderBox","start","0","end","direction","windowScroll","result","DragImpact","moveToNewDroppable","previousPageBorderBoxCenter","inHome1","page","center","draggable","draggables","moveRelativeTo","null","destination","insideDestination","viewport","afterCritical","expect","toBeTruthy"]},"operators":{"distinct":8,"total":54,"identifiers":["const","=","+","[]",".","()","{}",":"]}},"paramCount":0,"sloc":{"logical":26,"physical":33},"errors":[],"lineEnd":278,"lineStart":246,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.065,"difficulty":5.6,"effort":1098.804,"length":44,"time":61.045,"vocabulary":22,"volume":196.215,"operands":{"distinct":15,"total":24,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","it","\"should move the target and everything below it forward\""]},"operators":{"distinct":7,"total":20,"identifiers":["const","=","{}","()",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":50},"errors":[],"lineEnd":331,"lineStart":282,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.218,"difficulty":6.919,"effort":4521.725,"length":119,"time":251.207,"vocabulary":45,"volume":653.531,"operands":{"distinct":37,"total":64,"identifiers":["result","DragImpact","moveToNewDroppable","previousPageBorderBoxCenter","preset","inHome1","page","borderBox","center","draggable","draggables","moveRelativeTo","inForeign2","destination","foreign","insideDestination","inForeignList","viewport","afterCritical","invariant","expected","displaced","getForcedDisplacement","visible","dimension","inForeign3","inForeign4","displacedBy","at","type","\"REORDER\"","droppableId","descriptor","id","index","expect","toEqual"]},"operators":{"distinct":8,"total":55,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":26,"physical":37},"errors":[],"lineEnd":330,"lineStart":294,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should move the target and everything below it forward\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":48},"errors":[],"lineEnd":380,"lineStart":333,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.296,"difficulty":7.636,"effort":6790.778,"length":156,"time":377.265,"vocabulary":52,"volume":889.269,"operands":{"distinct":44,"total":84,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","inHome3","displaceBy","result","DragImpact","moveToNewDroppable","previousPageBorderBoxCenter","page","borderBox","center","moveRelativeTo","inForeign1","destination","foreign","insideDestination","inForeignList","expected","displaced","getForcedDisplacement","visible","dimension","inForeign2","inForeign3","inForeign4","at","type","\"REORDER\"","droppableId","descriptor","id","index","expect","toEqual"]},"operators":{"distinct":8,"total":72,"identifiers":["const","=","{}","()",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":34,"physical":46},"errors":[],"lineEnd":379,"lineStart":334,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should go after the non-displaced last item in the list\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":42},"errors":[],"lineEnd":423,"lineStart":382,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.255,"difficulty":7.7,"effort":5891.577,"length":137,"time":327.31,"vocabulary":48,"volume":765.14,"operands":{"distinct":40,"total":77,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome4","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","result","DragImpact","moveToNewDroppable","previousPageBorderBoxCenter","inHome1","page","borderBox","center","moveRelativeTo","inForeign1","destination","foreign","insideDestination","invariant","expected","displaced","emptyGroups","at","type","\"REORDER\"","droppableId","descriptor","id","index","1","expect","toEqual"]},"operators":{"distinct":8,"total":60,"identifiers":["const","=","{}","()",":",".","[]","+"]}},"paramCount":0,"sloc":{"logical":30,"physical":40},"errors":[],"lineEnd":422,"lineStart":383,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.337,"halstead":{"bugs":0.193,"difficulty":2.259,"effort":20961.076,"length":82.188,"time":1164.504,"vocabulary":8.313,"volume":579.856,"operands":{"distinct":7.563,"total":45.563},"operators":{"distinct":0.75,"total":36.625}},"paramCount":0.125,"sloc":{"logical":18.563,"physical":26.625}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":20.813,"halstead":{"bugs":0.157,"difficulty":5.613,"effort":4273.024,"length":87.067,"time":237.39,"vocabulary":28.667,"volume":469.944,"operands":{"distinct":22.733,"total":48.333},"operators":{"distinct":5.933,"total":38.733}},"paramCount":0.133,"sloc":{"logical":19.667,"physical":113.933}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-cross-axis/get-closest-draggable/without-starting-displacement.spec.js","testCases":10,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  22 | const viewport: Viewport = getViewport();\n  23 |\n> 24 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  25 |   describe(`on the ${axis.direction} axis`, () => {\n  26 |     const start: number = 0;\n  27 |     const end: number = 100;","start":{"line":24,"column":23,"index":955}}]}],"metrics":{"aggregate":{"cyclomatic":14,"cyclomaticDensity":4.575,"halstead":{"bugs":2.912,"difficulty":43.735,"effort":382058.404,"length":1250,"time":21225.467,"vocabulary":127,"volume":8735.856,"operands":{"distinct":113,"total":706,"identifiers":["viewport","Viewport","getViewport","vertical","horizontal","forEach","axis","describe","direction","on the "," axis","start","0","end","100","crossAxisStart","crossAxisEnd","20","borderBox","Rect","getRect","droppable","DroppableDimension","getDroppableDimension","descriptor","id","\"droppable\"","type","\"TYPE\"","mode","\"standard\"","withAssortedSpacing","hiddenBackwards","DraggableDimension","getDraggableDimension","\"hiddenBackwards\"","droppableId","index","30","10","partiallyHiddenBackwards","\"partialHiddenBackwards\"","1","visible1","\"visible1\"","2","40","visible2","\"visible2\"","3","60","partiallyHiddenForwards","\"partiallyHiddenForwards\"","4","120","hiddenForwards","\"hiddenForwards\"","5","140","outOfViewport","\"hidden\"","6","frame","insideDestination","it","\"should return the closest draggable\"","center1","Position","patch","line","page","center","result1","getClosestDraggable","pageBorderBoxCenter","destination","afterCritical","noAfterCritical","expect","toBe","center2","result2","\"should return null if there are no draggables in the droppable\"","x","y","result","null","\"should take into account the change in droppable scroll\"","scrollable","closest","expandByPosition","scrollSize","scrollHeight","width","scrollWidth","height","scroll","shouldClipSubject","true","scrolled","scrollDroppable","\"removal of draggables that are visible\"","\"should ignore draggables backward that have no total visiblity\"","\"should ignore draggables that have backwards partial visiblility\"","\"should ignore draggables that have forward partial visiblility\"","\"should ignore draggables forward that have no visiblity\"","\"should ignore draggables that are outside of the viewport\"","\"should return null if there are no visible targets\"","notVisible","\"should return the draggable that is first on the main axis in the event of a tie\"","distance","toEqual","add"]},"operators":{"distinct":14,"total":544,"identifiers":["const","=","()",".","[]",",","function=>","``","${}","{}",":","... (spread)","- (prefix)","+"]}},"paramCount":1,"sloc":{"logical":306,"physical":421}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../../src/state/move-in-direction/move-cross-axis/get-closest-draggable","type":"esm"},{"line":10,"path":"../../../../../../src/state/droppable/scroll-droppable","type":"esm"},{"line":11,"path":"../../../../../../src/state/position","type":"esm"},{"line":16,"path":"../../../../../util/dimension","type":"esm"},{"line":17,"path":"../../../../../../src/state/spacing","type":"esm"},{"line":18,"path":"../../../../../../src/state/axis","type":"esm"},{"line":19,"path":"../../../../../../src/view/window/get-viewport","type":"esm"},{"line":20,"path":"../../../../../../src/state/no-impact","type":"esm"}],"errors":[],"lineEnd":421,"lineStart":1,"maintainability":86.098,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on the "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":397},"errors":[],"lineEnd":420,"lineStart":24,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0.826,"halstead":{"bugs":1.082,"difficulty":26.286,"effort":85302.782,"length":521,"time":4739.043,"vocabulary":75,"volume":3245.215,"operands":{"distinct":63,"total":276,"identifiers":["start","0","end","100","crossAxisStart","crossAxisEnd","20","borderBox","Rect","getRect","axis","droppable","DroppableDimension","getDroppableDimension","descriptor","id","\"droppable\"","type","\"TYPE\"","mode","\"standard\"","direction","withAssortedSpacing","hiddenBackwards","DraggableDimension","getDraggableDimension","\"hiddenBackwards\"","droppableId","index","30","10","partiallyHiddenBackwards","\"partialHiddenBackwards\"","1","visible1","\"visible1\"","2","40","visible2","\"visible2\"","3","60","partiallyHiddenForwards","\"partiallyHiddenForwards\"","4","120","hiddenForwards","\"hiddenForwards\"","5","140","outOfViewport","\"hidden\"","6","viewport","frame","insideDestination","it","\"should return the closest draggable\"","\"should return null if there are no draggables in the droppable\"","\"should take into account the change in droppable scroll\"","describe","\"removal of draggables that are visible\"","\"should return the draggable that is first on the main axis in the event of a tie\""]},"operators":{"distinct":12,"total":245,"identifiers":["const","=","()","{}",":",".","... (spread)","- (prefix)","+","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":121,"physical":395},"errors":[],"lineEnd":419,"lineStart":25,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.16,"difficulty":8.12,"effort":3897.6,"length":96,"time":216.533,"vocabulary":32,"volume":480,"operands":{"distinct":25,"total":58,"identifiers":["center1","Position","patch","axis","line","visible1","page","borderBox","center","100","result1","DraggableDimension","getClosestDraggable","pageBorderBoxCenter","destination","droppable","insideDestination","viewport","afterCritical","noAfterCritical","expect","toBe","center2","visible2","result2"]},"operators":{"distinct":7,"total":38,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":22,"physical":31},"errors":[],"lineEnd":204,"lineStart":174,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.06,"difficulty":4.278,"effort":774.75,"length":39,"time":43.042,"vocabulary":25,"volume":181.11,"operands":{"distinct":18,"total":22,"identifiers":["center","Position","x","100","y","result","DraggableDimension","getClosestDraggable","pageBorderBoxCenter","destination","droppable","insideDestination","viewport","afterCritical","noAfterCritical","expect","toBe","null"]},"operators":{"distinct":7,"total":17,"identifiers":["const","=","{}",":","()","[]","."]}},"paramCount":0,"sloc":{"logical":12,"physical":16},"errors":[],"lineEnd":221,"lineStart":206,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.285,"difficulty":8.091,"effort":6918.261,"length":150,"time":384.348,"vocabulary":52,"volume":855.066,"operands":{"distinct":44,"total":89,"identifiers":["scrollable","DroppableDimension","getDroppableDimension","descriptor","droppable","direction","axis","borderBox","closest","expandByPosition","patch","line","100","scrollSize","scrollHeight","width","scrollWidth","height","scroll","x","0","y","shouldClipSubject","true","scrolled","scrollDroppable","20","center","Position","visible1","page","result","DraggableDimension","getClosestDraggable","pageBorderBoxCenter","destination","insideDestination","viewport","afterCritical","noAfterCritical","expect","toBe","visible2","result1"]},"operators":{"distinct":8,"total":61,"identifiers":["const","=","()","{}",":",".","+","[]"]}},"paramCount":0,"sloc":{"logical":39,"physical":45},"errors":[],"lineEnd":267,"lineStart":223,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.025,"difficulty":1.714,"effort":130.42,"length":24,"time":7.246,"vocabulary":9,"volume":76.078,"operands":{"distinct":7,"total":12,"identifiers":["it","\"should ignore draggables backward that have no total visiblity\"","\"should ignore draggables that have backwards partial visiblility\"","\"should ignore draggables that have forward partial visiblility\"","\"should ignore draggables forward that have no visiblity\"","\"should ignore draggables that are outside of the viewport\"","\"should return null if there are no visible targets\""]},"operators":{"distinct":2,"total":12,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":113},"errors":[],"lineEnd":381,"lineStart":269,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.078,"difficulty":4.614,"effort":1075.822,"length":48,"time":59.768,"vocabulary":29,"volume":233.183,"operands":{"distinct":22,"total":29,"identifiers":["center","Position","patch","axis","line","hiddenBackwards","page","borderBox","100","result","DraggableDimension","getClosestDraggable","pageBorderBoxCenter","destination","droppable","insideDestination","viewport","afterCritical","noAfterCritical","expect","toBe","visible1"]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":11,"physical":17},"errors":[],"lineEnd":286,"lineStart":270,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.078,"difficulty":4.614,"effort":1075.822,"length":48,"time":59.768,"vocabulary":29,"volume":233.183,"operands":{"distinct":22,"total":29,"identifiers":["center","Position","patch","axis","line","partiallyHiddenBackwards","page","borderBox","100","result","DraggableDimension","getClosestDraggable","pageBorderBoxCenter","destination","droppable","insideDestination","viewport","afterCritical","noAfterCritical","expect","toBe","visible1"]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":11,"physical":17},"errors":[],"lineEnd":304,"lineStart":288,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.078,"difficulty":4.614,"effort":1075.822,"length":48,"time":59.768,"vocabulary":29,"volume":233.183,"operands":{"distinct":22,"total":29,"identifiers":["center","Position","patch","axis","line","partiallyHiddenForwards","page","borderBox","100","result","DraggableDimension","getClosestDraggable","pageBorderBoxCenter","destination","droppable","insideDestination","viewport","afterCritical","noAfterCritical","expect","toBe","visible2"]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":11,"physical":17},"errors":[],"lineEnd":322,"lineStart":306,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.078,"difficulty":4.614,"effort":1075.822,"length":48,"time":59.768,"vocabulary":29,"volume":233.183,"operands":{"distinct":22,"total":29,"identifiers":["center","Position","patch","axis","line","hiddenForwards","page","borderBox","100","result","DraggableDimension","getClosestDraggable","pageBorderBoxCenter","destination","droppable","insideDestination","viewport","afterCritical","noAfterCritical","expect","toBe","visible2"]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":11,"physical":17},"errors":[],"lineEnd":340,"lineStart":324,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.078,"difficulty":4.614,"effort":1075.822,"length":48,"time":59.768,"vocabulary":29,"volume":233.183,"operands":{"distinct":22,"total":29,"identifiers":["center","Position","patch","axis","line","outOfViewport","page","borderBox","100","result","DraggableDimension","getClosestDraggable","pageBorderBoxCenter","destination","droppable","insideDestination","viewport","afterCritical","noAfterCritical","expect","toBe","visible2"]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":11,"physical":17},"errors":[],"lineEnd":358,"lineStart":342,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.08,"difficulty":5.091,"effort":1224.046,"length":49,"time":68.003,"vocabulary":30,"volume":240.438,"operands":{"distinct":22,"total":28,"identifiers":["notVisible","DraggableDimension","hiddenBackwards","hiddenForwards","outOfViewport","center","Position","x","0","y","result","getClosestDraggable","pageBorderBoxCenter","destination","droppable","insideDestination","viewport","afterCritical","noAfterCritical","expect","toBe","null"]},"operators":{"distinct":8,"total":21,"identifiers":["const","=","[]",",","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":13,"physical":21},"errors":[],"lineEnd":380,"lineStart":360,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.181,"difficulty":8,"effort":4349.632,"length":106,"time":241.646,"vocabulary":35,"volume":543.704,"operands":{"distinct":28,"total":64,"identifiers":["center","Position","patch","axis","line","visible2","page","borderBox","start","100","result","DraggableDimension","getClosestDraggable","pageBorderBoxCenter","destination","droppable","insideDestination","viewport","afterCritical","noAfterCritical","expect","toBe","visible1","distance","toEqual","result2","add","1"]},"operators":{"distinct":7,"total":42,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":26,"physical":36},"errors":[],"lineEnd":418,"lineStart":383,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.327,"halstead":{"bugs":0.208,"difficulty":3.124,"effort":27289.886,"length":89.286,"time":1516.105,"vocabulary":9.071,"volume":623.99,"operands":{"distinct":8.071,"total":50.429},"operators":{"distinct":1,"total":38.857}},"paramCount":0.071,"sloc":{"logical":21.857,"physical":30.071}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":10.123,"halstead":{"bugs":0.175,"difficulty":6.704,"effort":8312.281,"length":95,"time":461.793,"vocabulary":31.769,"volume":524.673,"operands":{"distinct":24.769,"total":53.769},"operators":{"distinct":7,"total":41.231}},"paramCount":0.077,"sloc":{"logical":23.231,"physical":87.615}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/move-in-direction/move-cross-axis/get-closest-draggable/with-starting-displacement.spec.js","testCases":2,"smells":3,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  25 |\n  26 | // Not covering all cases. Full coverage in without-starting-displacement.spec\n> 27 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  28 |   describe(`on the ${axis.direction} axis`, () => {\n  29 |     const start: number = 0;\n  30 |     const end: number = 100;","start":{"line":27,"column":23,"index":1248}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  118 |           afterCritical,\n  119 |         });\n> 120 |         expect(result).toEqual(inHome3);\n      |        ^ Duplicate Assert\n  121 |       }\n  122 |       // validation: without initial displacement it would have been inHome2\n  123 |       {","start":{"line":120,"column":8,"index":3772}},{"frame":"  129 |           afterCritical: noAfterCritical,\n  130 |         });\n> 131 |         expect(result).toEqual(inHome2);\n      |        ^ Duplicate Assert\n  132 |       }\n  133 |     });\n  134 |","start":{"line":131,"column":8,"index":4143}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":3.571,"halstead":{"bugs":1.19,"difficulty":20.726,"effort":73998.317,"length":546,"time":4111.018,"vocabulary":93,"volume":3570.381,"operands":{"distinct":82,"total":309,"identifiers":["viewport","Viewport","getViewport","vertical","horizontal","forEach","axis","describe","direction","on the "," axis","start","0","end","100","crossAxisStart","crossAxisEnd","20","borderBox","Rect","getRect","home","DroppableDimension","getDroppableDimension","descriptor","id","\"home\"","type","\"TYPE\"","mode","\"standard\"","inHome1","DraggableDimension","getDraggableDimension","\"inHome1\"","droppableId","index","2","inHome2","\"inHome2\"","40","inHome3","\"inHome3\"","60","insideDestination","afterCritical","getLiftEffect","draggable","draggables","toDraggableMap","it","\"should find the closest draggable based on the items visible position (without initial displacement)\"","center","Position","patch","line","page","result","getClosestDraggable","pageBorderBoxCenter","destination","expect","toEqual","noAfterCritical","\"should ignore draggables backward that have no total visibility\"","scrolled","scrollViewport","1","isTotallyVisible","target","frame","withDroppableDisplacement","true","toBe","inVisibleLocation","Spacing","offsetByPosition","negate","displacedBy","point","false","validate"]},"operators":{"distinct":11,"total":237,"identifiers":["const","=","()",".","[]",",","function=>","``","${}","{}",":"]}},"paramCount":1,"sloc":{"logical":140,"physical":202}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../../src/state/axis","type":"esm"},{"line":10,"path":"../../../../../../src/state/dimension-structures","type":"esm"},{"line":11,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":12,"path":"../../../../../../src/state/move-in-direction/move-cross-axis/get-closest-draggable","type":"esm"},{"line":13,"path":"../../../../../../src/state/position","type":"esm"},{"line":14,"path":"../../../../../../src/state/scroll-viewport","type":"esm"},{"line":15,"path":"../../../../../../src/state/spacing","type":"esm"},{"line":16,"path":"../../../../../../src/state/visibility/is-visible","type":"esm"},{"line":17,"path":"../../../../../../src/view/window/get-viewport","type":"esm"},{"line":21,"path":"../../../../../util/dimension","type":"esm"},{"line":22,"path":"../../../../../../src/state/no-impact","type":"esm"}],"errors":[],"lineEnd":202,"lineStart":1,"maintainability":84.178,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on the "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":175},"errors":[],"lineEnd":201,"lineStart":27,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.493,"halstead":{"bugs":0.51,"difficulty":14.6,"effort":22349.681,"length":266,"time":1241.649,"vocabulary":54,"volume":1530.8,"operands":{"distinct":45,"total":146,"identifiers":["start","0","end","100","crossAxisStart","crossAxisEnd","20","borderBox","Rect","getRect","axis","home","DroppableDimension","getDroppableDimension","descriptor","id","\"home\"","type","\"TYPE\"","mode","\"standard\"","direction","inHome1","DraggableDimension","getDraggableDimension","\"inHome1\"","droppableId","index","2","inHome2","\"inHome2\"","40","inHome3","\"inHome3\"","60","insideDestination","afterCritical","getLiftEffect","draggable","viewport","draggables","toDraggableMap","it","\"should find the closest draggable based on the items visible position (without initial displacement)\"","\"should ignore draggables backward that have no total visibility\""]},"operators":{"distinct":9,"total":120,"identifiers":["const","=","()","{}",":",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":67,"physical":173},"errors":[],"lineEnd":200,"lineStart":28,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.12,"difficulty":7.318,"effort":2630.818,"length":74,"time":146.157,"vocabulary":29,"volume":359.491,"operands":{"distinct":22,"total":46,"identifiers":["center","Position","patch","axis","line","inHome2","page","borderBox","100","result","DraggableDimension","getClosestDraggable","pageBorderBoxCenter","destination","home","insideDestination","viewport","afterCritical","expect","toEqual","inHome3","noAfterCritical"]},"operators":{"distinct":7,"total":28,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":20,"physical":29},"errors":[],"lineEnd":133,"lineStart":105,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.128,"halstead":{"bugs":0.335,"difficulty":9.188,"effort":9236.934,"length":181,"time":513.163,"vocabulary":47,"volume":1005.381,"operands":{"distinct":40,"total":105,"identifiers":["center","Position","patch","axis","line","inHome1","page","borderBox","100","scrolled","Viewport","scrollViewport","viewport","1","result","DraggableDimension","getClosestDraggable","pageBorderBoxCenter","destination","home","insideDestination","afterCritical","noAfterCritical","expect","toEqual","inHome2","isTotallyVisible","target","frame","withDroppableDisplacement","true","toBe","inVisibleLocation","Spacing","offsetByPosition","negate","displacedBy","point","false","validate"]},"operators":{"distinct":7,"total":76,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":47,"physical":65},"errors":[],"lineEnd":199,"lineStart":135,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.714,"halstead":{"bugs":0.238,"difficulty":4.145,"effort":14799.663,"length":109.2,"time":822.204,"vocabulary":18.6,"volume":714.076,"operands":{"distinct":16.4,"total":61.8},"operators":{"distinct":2.2,"total":47.4}},"paramCount":0.2,"sloc":{"logical":28,"physical":40.4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.655,"halstead":{"bugs":0.244,"difficulty":8.401,"effort":8575.12,"length":132.75,"time":476.396,"vocabulary":35,"volume":732.223,"operands":{"distinct":28,"total":75.5},"operators":{"distinct":7,"total":57.25}},"paramCount":0.25,"sloc":{"logical":34,"physical":110.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/validate-indexes.spec.js","testCases":2,"smells":10,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  72 |   // first lift is preparing\n  73 |   store.dispatch(lift(liftArgs));\n> 74 |   expect(mock).toHaveBeenCalledWith(lift(liftArgs));\n     |  ^ Duplicate Assert\n  75 |   expect(mock).toHaveBeenCalledWith(flush());\n  76 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n  77 |   expect(mock).toHaveBeenCalledWith(initialPublish(initial));","start":{"line":74,"column":2,"index":2346}},{"frame":"  73 |   store.dispatch(lift(liftArgs));\n  74 |   expect(mock).toHaveBeenCalledWith(lift(liftArgs));\n> 75 |   expect(mock).toHaveBeenCalledWith(flush());\n     |  ^ Duplicate Assert\n  76 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n  77 |   expect(mock).toHaveBeenCalledWith(initialPublish(initial));\n  78 |   expect(mock).toHaveBeenCalledTimes(4);","start":{"line":75,"column":2,"index":2399}},{"frame":"  74 |   expect(mock).toHaveBeenCalledWith(lift(liftArgs));\n  75 |   expect(mock).toHaveBeenCalledWith(flush());\n> 76 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n     |  ^ Duplicate Assert\n  77 |   expect(mock).toHaveBeenCalledWith(initialPublish(initial));\n  78 |   expect(mock).toHaveBeenCalledTimes(4);\n  79 |   expect(store.getState().phase).toBe('DRAGGING');","start":{"line":76,"column":2,"index":2445}},{"frame":"  75 |   expect(mock).toHaveBeenCalledWith(flush());\n  76 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n> 77 |   expect(mock).toHaveBeenCalledWith(initialPublish(initial));\n     |  ^ Duplicate Assert\n  78 |   expect(mock).toHaveBeenCalledTimes(4);\n  79 |   expect(store.getState().phase).toBe('DRAGGING');\n  80 |","start":{"line":77,"column":2,"index":2523}},{"frame":"  76 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n  77 |   expect(mock).toHaveBeenCalledWith(initialPublish(initial));\n> 78 |   expect(mock).toHaveBeenCalledTimes(4);\n     |  ^ Duplicate Assert\n  79 |   expect(store.getState().phase).toBe('DRAGGING');\n  80 |\n  81 |   // a warning is logged","start":{"line":78,"column":2,"index":2585}},{"frame":"  123 |   // first lift is preparing\n  124 |   store.dispatch(lift(liftArgs));\n> 125 |   expect(mock).toHaveBeenCalledWith(lift(liftArgs));\n      |  ^ Duplicate Assert\n  126 |   expect(mock).toHaveBeenCalledWith(flush());\n  127 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n  128 |   expect(mock).toHaveBeenCalledWith(initialPublish(initial));","start":{"line":125,"column":2,"index":4014}},{"frame":"  124 |   store.dispatch(lift(liftArgs));\n  125 |   expect(mock).toHaveBeenCalledWith(lift(liftArgs));\n> 126 |   expect(mock).toHaveBeenCalledWith(flush());\n      |  ^ Duplicate Assert\n  127 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n  128 |   expect(mock).toHaveBeenCalledWith(initialPublish(initial));\n  129 |   expect(mock).toHaveBeenCalledTimes(4);","start":{"line":126,"column":2,"index":4067}},{"frame":"  125 |   expect(mock).toHaveBeenCalledWith(lift(liftArgs));\n  126 |   expect(mock).toHaveBeenCalledWith(flush());\n> 127 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n      |  ^ Duplicate Assert\n  128 |   expect(mock).toHaveBeenCalledWith(initialPublish(initial));\n  129 |   expect(mock).toHaveBeenCalledTimes(4);\n  130 |   expect(store.getState().phase).toBe('DRAGGING');","start":{"line":127,"column":2,"index":4113}},{"frame":"  126 |   expect(mock).toHaveBeenCalledWith(flush());\n  127 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n> 128 |   expect(mock).toHaveBeenCalledWith(initialPublish(initial));\n      |  ^ Duplicate Assert\n  129 |   expect(mock).toHaveBeenCalledTimes(4);\n  130 |   expect(store.getState().phase).toBe('DRAGGING');\n  131 |","start":{"line":128,"column":2,"index":4191}},{"frame":"  127 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n  128 |   expect(mock).toHaveBeenCalledWith(initialPublish(initial));\n> 129 |   expect(mock).toHaveBeenCalledTimes(4);\n      |  ^ Duplicate Assert\n  130 |   expect(store.getState().phase).toBe('DRAGGING');\n  131 |\n  132 |   // a warning is logged","start":{"line":129,"column":2,"index":4253}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":8.547,"halstead":{"bugs":0.96,"difficulty":18.64,"effort":53683.121,"length":447,"time":2982.396,"vocabulary":87,"volume":2879.996,"operands":{"distinct":75,"total":233,"identifiers":["getPopulatedRegistry","dimensions","Registry","registry","createRegistry","populate","beforeEach","setViewport","preset","viewport","jest","useFakeTimers","afterEach","resetViewport","clearAllTimers","useRealTimers","it","\"should log a warning if items are added that do not have consecutive indexes\"","warn","spyOn","console","\"warn\"","mockImplementation","mock","fn","customInHome2","DraggableDimension","inHome2","descriptor","index","5","copied","DimensionMap","copy","draggables","id","marshal","DimensionMarshal","createMarshal","action","store","dispatch","Store","createStore","passThrough","middleware","initial","InitialPublishArgs","initialPublishArgs","lift","liftArgs","expect","toHaveBeenCalledWith","flush","beforeInitialCapture","beforeCaptureArgs","initialPublish","toHaveBeenCalledTimes","4","getState","phase","toBe","\"DRAGGING\"","toHaveBeenCalled","calls","0","toEqual","stringContaining","0, [🔥2], 3, [🔥6]","mockRestore","\"should log a warning if items are added have duplicate indexes\"","customInHome4","inHome4","inHome3","\"0, 1, [🔥2], [🔥2]\""]},"operators":{"distinct":12,"total":214,"identifiers":["const","=","function=>","()","return",".","{}","... (spread)",":","+","[]","``"]}},"paramCount":3,"sloc":{"logical":117,"physical":140}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/types","type":"esm"},{"line":3,"path":"../../../../src/state/store-types","type":"esm"},{"line":4,"path":"../../../../src/state/dimension-marshal/dimension-marshal-types","type":"esm"},{"line":11,"path":"../../../../src/state/action-creators","type":"esm"},{"line":12,"path":"../../../../src/state/middleware/lift","type":"esm"},{"line":13,"path":"../../../../src/state/registry/create-registry","type":"esm"},{"line":14,"path":"../../../util/dimension-marshal","type":"esm"},{"line":21,"path":"../../../util/preset-action-args","type":"esm"},{"line":22,"path":"../../../util/registry","type":"esm"},{"line":23,"path":"../../../util/viewport","type":"esm"},{"line":24,"path":"./util/create-store","type":"esm"},{"line":25,"path":"./util/pass-through-middleware","type":"esm"},{"line":26,"path":"../../../../src/state/registry/registry-types","type":"esm"}],"errors":[],"lineEnd":140,"lineStart":1,"maintainability":101.783,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.014,"difficulty":3.2,"effort":131.869,"length":13,"time":7.326,"vocabulary":9,"volume":41.209,"operands":{"distinct":5,"total":8,"identifiers":["Registry","registry","createRegistry","populate","dimensions"]},"operators":{"distinct":4,"total":5,"identifiers":["const","=","()","return"]}},"paramCount":1,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":32,"lineStart":28,"name":"<anon method-1>","paramNames":["dimensions"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1,"effort":25.266,"length":9,"time":1.404,"vocabulary":7,"volume":25.266,"operands":{"distinct":5,"total":5,"identifiers":["setViewport","preset","viewport","jest","useFakeTimers"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":37,"lineStart":34,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":1.25,"effort":32.312,"length":10,"time":1.795,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":5,"identifiers":["resetViewport","jest","clearAllTimers","useRealTimers"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":43,"lineStart":39,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.128,"halstead":{"bugs":0.394,"difficulty":9.92,"effort":11733.82,"length":195,"time":651.879,"vocabulary":67,"volume":1182.887,"operands":{"distinct":56,"total":101,"identifiers":["warn","jest","spyOn","console","\"warn\"","mockImplementation","mock","fn","customInHome2","DraggableDimension","preset","inHome2","descriptor","index","5","copied","DimensionMap","copy","dimensions","draggables","id","marshal","DimensionMarshal","createMarshal","getPopulatedRegistry","action","store","Store","createStore","passThrough","middleware","initial","InitialPublishArgs","initialPublishArgs","dispatch","lift","liftArgs","expect","toHaveBeenCalledWith","flush","beforeInitialCapture","beforeCaptureArgs","initialPublish","toHaveBeenCalledTimes","4","getState","phase","toBe","\"DRAGGING\"","toHaveBeenCalled","calls","0","toEqual","stringContaining","0, [🔥2], 3, [🔥6]","mockRestore"]},"operators":{"distinct":11,"total":94,"identifiers":["const","=","()",".","function=>","{}","... (spread)",":","+","[]","``"]}},"paramCount":0,"sloc":{"logical":47,"physical":49},"errors":[],"lineEnd":93,"lineStart":45,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":46,"lineStart":46,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["store","dispatch","action"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":64,"lineStart":62,"name":"<anon method-6>","paramNames":["action"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.128,"halstead":{"bugs":0.382,"difficulty":8.182,"effort":9376.364,"length":191,"time":520.909,"vocabulary":64,"volume":1146,"operands":{"distinct":55,"total":100,"identifiers":["warn","jest","spyOn","console","\"warn\"","mockImplementation","mock","fn","customInHome4","DraggableDimension","preset","inHome4","descriptor","index","inHome3","dimensions","DimensionMap","copy","draggables","id","marshal","DimensionMarshal","createMarshal","getPopulatedRegistry","action","store","Store","createStore","passThrough","middleware","initial","InitialPublishArgs","initialPublishArgs","dispatch","lift","liftArgs","expect","toHaveBeenCalledWith","flush","beforeInitialCapture","beforeCaptureArgs","initialPublish","toHaveBeenCalledTimes","4","getState","phase","toBe","\"DRAGGING\"","toHaveBeenCalled","calls","0","toEqual","stringContaining","\"0, 1, [🔥2], [🔥2]\"","mockRestore"]},"operators":{"distinct":9,"total":91,"identifiers":["const","=","()",".","function=>","{}","... (spread)",":","[]"]}},"paramCount":0,"sloc":{"logical":47,"physical":45},"errors":[],"lineEnd":139,"lineStart":95,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":96,"lineStart":96,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["store","dispatch","action"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":115,"lineStart":113,"name":"<anon method-9>","paramNames":["action"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.855,"halstead":{"bugs":0.096,"difficulty":1.864,"effort":5368.312,"length":44.7,"time":298.24,"vocabulary":8.7,"volume":288,"operands":{"distinct":7.5,"total":23.3},"operators":{"distinct":1.2,"total":21.4}},"paramCount":0.3,"sloc":{"logical":11.7,"physical":14}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":23.621,"halstead":{"bugs":0.091,"difficulty":2.839,"effort":2369.206,"length":47.556,"time":131.623,"vocabulary":18.111,"volume":271.604,"operands":{"distinct":14.556,"total":25},"operators":{"distinct":3.556,"total":22.556}},"paramCount":0.333,"sloc":{"logical":11.889,"physical":12.889}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/style.spec.js","testCases":4,"smells":5,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  45 |\n  46 | it('should use the resting styles when a drop completes', () => {\n> 47 |   ['DROP', 'CANCEL'].forEach((reason: DropReason) => {\n     |                     ^ Conditional Test Logic\n  48 |     const marshal: StyleMarshal = getMarshalStub();\n  49 |     const store: Store = createStore(middleware(marshal));\n  50 |","start":{"line":47,"column":21,"index":1435}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  51 |     store.dispatch(initialPublish(initialPublishArgs));\n  52 |\n> 53 |     expect(marshal.resting).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  54 |     store.dispatch(completeDrop(getCompletedArgs(reason)));\n  55 |\n  56 |     expect(marshal.resting).toHaveBeenCalled();","start":{"line":53,"column":4,"index":1642}},{"frame":"  54 |     store.dispatch(completeDrop(getCompletedArgs(reason)));\n  55 |\n> 56 |     expect(marshal.resting).toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  57 |   });\n  58 | });\n  59 |","start":{"line":56,"column":4,"index":1755}},{"frame":"  64 |   store.dispatch(initialPublish(initialPublishArgs));\n  65 |\n> 66 |   expect(marshal.resting).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  67 |   store.dispatch(flush());\n  68 |\n  69 |   expect(marshal.resting).toHaveBeenCalled();","start":{"line":66,"column":2,"index":2033}},{"frame":"  67 |   store.dispatch(flush());\n  68 |\n> 69 |   expect(marshal.resting).toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  70 | });\n  71 |","start":{"line":69,"column":2,"index":2111}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":10.606,"halstead":{"bugs":0.397,"difficulty":14.529,"effort":17291.268,"length":218,"time":960.626,"vocabulary":44,"volume":1190.156,"operands":{"distinct":35,"total":113,"identifiers":["getMarshalStub","StyleMarshal","dragging","jest","fn","dropping","resting","it","\"should use the dragging styles on an initial publish\"","marshal","store","Store","createStore","middleware","dispatch","initialPublish","initialPublishArgs","expect","toHaveBeenCalled","\"should use the dropping styles when drop animating\"","animateDrop","animateDropArgs","toHaveBeenCalledWith","completed","result","reason","\"should use the resting styles when a drop completes\"","\"DROP\"","\"CANCEL\"","forEach","not","completeDrop","getCompletedArgs","\"should use the resting styles when aborting\"","flush"]},"operators":{"distinct":9,"total":105,"identifiers":["const","=","function=>","{}",":","()",".","[]",","]}},"paramCount":1,"sloc":{"logical":66,"physical":71}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/state/middleware/style","type":"esm"},{"line":3,"path":"../../../../src/view/use-style-marshal/style-marshal-types","type":"esm"},{"line":4,"path":"../../../../src/types","type":"esm"},{"line":5,"path":"../../../../src/state/store-types","type":"esm"},{"line":6,"path":"./util/create-store","type":"esm"},{"line":12,"path":"../../../../src/state/action-creators","type":"esm"},{"line":17,"path":"../../../util/preset-action-args","type":"esm"}],"errors":[],"lineEnd":71,"lineStart":1,"maintainability":107.934,"methods":[{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.022,"difficulty":3.333,"effort":221.462,"length":20,"time":12.303,"vocabulary":10,"volume":66.439,"operands":{"distinct":6,"total":10,"identifiers":["StyleMarshal","dragging","jest","fn","dropping","resting"]},"operators":{"distinct":4,"total":10,"identifiers":["{}",":","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":23,"lineStart":19,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.041,"difficulty":2.462,"effort":301.843,"length":30,"time":16.769,"vocabulary":17,"volume":122.624,"operands":{"distinct":13,"total":16,"identifiers":["marshal","StyleMarshal","getMarshalStub","store","Store","createStore","middleware","dispatch","initialPublish","initialPublishArgs","expect","dragging","toHaveBeenCalled"]},"operators":{"distinct":4,"total":14,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":8},"errors":[],"lineEnd":32,"lineStart":25,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.065,"difficulty":2.667,"effort":523.24,"length":44,"time":29.069,"vocabulary":22,"volume":196.215,"operands":{"distinct":18,"total":24,"identifiers":["marshal","StyleMarshal","getMarshalStub","store","Store","createStore","middleware","dispatch","initialPublish","initialPublishArgs","animateDrop","animateDropArgs","expect","dropping","toHaveBeenCalledWith","completed","result","reason"]},"operators":{"distinct":4,"total":20,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":11},"errors":[],"lineEnd":44,"lineStart":34,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["\"DROP\"","\"CANCEL\"","forEach","reason"]},"operators":{"distinct":5,"total":5,"identifiers":["()",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":13},"errors":[],"lineEnd":58,"lineStart":46,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.072,"difficulty":3.059,"effort":658.331,"length":49,"time":36.574,"vocabulary":21,"volume":215.224,"operands":{"distinct":17,"total":26,"identifiers":["marshal","StyleMarshal","getMarshalStub","store","Store","createStore","middleware","dispatch","initialPublish","initialPublishArgs","expect","resting","not","toHaveBeenCalled","completeDrop","getCompletedArgs","reason"]},"operators":{"distinct":4,"total":23,"identifiers":["const","=","()","."]}},"paramCount":1,"sloc":{"logical":14,"physical":11},"errors":[],"lineEnd":57,"lineStart":47,"name":"<anon method-5>","paramNames":["reason"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.065,"difficulty":3.2,"effort":625.295,"length":46,"time":34.739,"vocabulary":19,"volume":195.405,"operands":{"distinct":15,"total":24,"identifiers":["marshal","StyleMarshal","getMarshalStub","store","Store","createStore","middleware","dispatch","initialPublish","initialPublishArgs","expect","resting","not","toHaveBeenCalled","flush"]},"operators":{"distinct":4,"total":22,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":13,"physical":11},"errors":[],"lineEnd":70,"lineStart":60,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.515,"halstead":{"bugs":0.057,"difficulty":2.076,"effort":2470.181,"length":31.143,"time":137.232,"vocabulary":6.286,"volume":170.022,"operands":{"distinct":5,"total":16.143},"operators":{"distinct":1.286,"total":15}},"paramCount":0.143,"sloc":{"logical":9.429,"physical":10.143}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":16.554,"halstead":{"bugs":0.046,"difficulty":2.87,"effort":400.249,"length":33,"time":22.236,"vocabulary":16.333,"volume":137.406,"operands":{"distinct":12.167,"total":17.333},"operators":{"distinct":4.167,"total":15.667}},"paramCount":0.167,"sloc":{"logical":9.333,"physical":9.833}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/pending-drop.spec.js","testCases":2,"smells":5,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  43 |   store.dispatch(publishWhileDragging(publishAdditionArgs));\n  44 |\n> 45 |   expect(mock).toHaveBeenCalledWith(drop({ reason: 'DROP' }));\n     |  ^ Duplicate Assert\n  46 |\n  47 |   expect(mock).toHaveBeenCalledWith(\n  48 |     // $ExpectError - this calculation is not completed by this module and it is non trival","start":{"line":45,"column":2,"index":1400}},{"frame":"  45 |   expect(mock).toHaveBeenCalledWith(drop({ reason: 'DROP' }));\n  46 |\n> 47 |   expect(mock).toHaveBeenCalledWith(\n     |  ^ Duplicate Assert\n  48 |     // $ExpectError - this calculation is not completed by this module and it is non trival\n  49 |     completeDrop({\n  50 |       completed: expect.any(Object),","start":{"line":47,"column":2,"index":1464}},{"frame":"  51 |     }),\n  52 |   );\n> 53 |   expect(mock).toHaveBeenCalledTimes(3);\n     |  ^ Duplicate Assert\n  54 |   expect(store.getState().phase).toBe('IDLE');\n  55 | });\n  56 |","start":{"line":53,"column":2,"index":1662}},{"frame":"  70 |   store.dispatch(publishWhileDragging(publishAdditionArgs));\n  71 |\n> 72 |   expect(mock).toHaveBeenCalledWith(publishWhileDragging(publishAdditionArgs));\n     |  ^ Duplicate Assert\n  73 |   expect(mock).toHaveBeenCalledTimes(1);\n  74 | });\n  75 |","start":{"line":72,"column":2,"index":2189}},{"frame":"  71 |\n  72 |   expect(mock).toHaveBeenCalledWith(publishWhileDragging(publishAdditionArgs));\n> 73 |   expect(mock).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  74 | });\n  75 |","start":{"line":73,"column":2,"index":2269}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":5.455,"halstead":{"bugs":0.371,"difficulty":12.381,"effort":13762.49,"length":195,"time":764.583,"vocabulary":52,"volume":1111.586,"operands":{"distinct":42,"total":104,"identifiers":["it","\"should trigger a drop on a dynamic publish if a drop pending is waiting\"","mock","jest","fn","store","Store","createStore","passThrough","dropMiddleware","middleware","dispatch","initialPublish","initialPublishWithScrollables","collectionStarting","drop","reason","\"DROP\"","postDrop","State","getState","invariant","phase","\"DROP_PENDING\"","Incorrect phase : ","expect","isWaiting","toBe","true","mockReset","publishWhileDragging","publishAdditionArgs","toHaveBeenCalledWith","completeDrop","completed","any","Object","toHaveBeenCalledTimes","3","\"IDLE\"","\"should not trigger a drop on a publish if a drop is not pending\"","1"]},"operators":{"distinct":10,"total":91,"identifiers":["()","function=>","const","=",".","{}",":","===","``","${}"]}},"paramCount":0,"sloc":{"logical":55,"physical":75}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/types","type":"esm"},{"line":3,"path":"../../../../src/state/store-types","type":"esm"},{"line":4,"path":"../../../../src/invariant","type":"esm"},{"line":11,"path":"../../../../src/state/action-creators","type":"esm"},{"line":12,"path":"../../../../src/state/middleware/drop/drop-middleware","type":"esm"},{"line":13,"path":"../../../../src/state/middleware/pending-drop","type":"esm"},{"line":17,"path":"../../../util/preset-action-args","type":"esm"},{"line":18,"path":"./util/create-store","type":"esm"},{"line":19,"path":"./util/pass-through-middleware","type":"esm"}],"errors":[],"lineEnd":75,"lineStart":1,"maintainability":95.044,"methods":[{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.239,"difficulty":8.053,"effort":5770.048,"length":129,"time":320.558,"vocabulary":47,"volume":716.542,"operands":{"distinct":38,"total":68,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","dropMiddleware","middleware","dispatch","initialPublish","initialPublishWithScrollables","collectionStarting","drop","reason","\"DROP\"","postDrop","State","getState","invariant","phase","\"DROP_PENDING\"","Incorrect phase : ","expect","isWaiting","toBe","true","mockReset","publishWhileDragging","publishAdditionArgs","toHaveBeenCalledWith","completeDrop","completed","any","Object","toHaveBeenCalledTimes","3","\"IDLE\""]},"operators":{"distinct":9,"total":61,"identifiers":["const","=","()",".","{}",":","===","``","${}"]}},"paramCount":0,"sloc":{"logical":34,"physical":35},"errors":[],"lineEnd":55,"lineStart":21,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.089,"difficulty":3.2,"effort":850.969,"length":58,"time":47.276,"vocabulary":24,"volume":265.928,"operands":{"distinct":20,"total":32,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","dropMiddleware","middleware","dispatch","initialPublish","initialPublishWithScrollables","collectionStarting","mockReset","publishWhileDragging","publishAdditionArgs","expect","toHaveBeenCalledWith","toHaveBeenCalledTimes","1"]},"operators":{"distinct":4,"total":26,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":17,"physical":18},"errors":[],"lineEnd":74,"lineStart":57,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.818,"halstead":{"bugs":0.124,"difficulty":4.127,"effort":4587.497,"length":65,"time":254.861,"vocabulary":17.333,"volume":370.529,"operands":{"distinct":14,"total":34.667},"operators":{"distinct":3.333,"total":30.333}},"paramCount":0,"sloc":{"logical":18.333,"physical":25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":4.412,"halstead":{"bugs":0.164,"difficulty":5.626,"effort":3310.509,"length":93.5,"time":183.917,"vocabulary":35.5,"volume":491.235,"operands":{"distinct":29,"total":50},"operators":{"distinct":6.5,"total":43.5}},"paramCount":0,"sloc":{"logical":25.5,"physical":26.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/lift.spec.js","testCases":3,"smells":12,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  82 |   // start a drag\n  83 |   store.dispatch(initialPublish(initialPublishArgs));\n> 84 |   expect(store.getState().phase).toBe('DRAGGING');\n     |  ^ Duplicate Assert\n  85 |\n  86 |   const completed: CompletedDrag = getCompletedArgs('DROP').completed;\n  87 |","start":{"line":84,"column":2,"index":2447}},{"frame":"  93 |   };\n  94 |   store.dispatch(animateDrop(args));\n> 95 |   expect(store.getState().phase).toBe('DROP_ANIMATING');\n     |  ^ Duplicate Assert\n  96 |\n  97 |   // while drop animating a lift occurs\n  98 |   mock.mockReset();","start":{"line":95,"column":2,"index":2744}},{"frame":"   98 |   mock.mockReset();\n   99 |   store.dispatch(lift(liftArgs));\n> 100 |   expect(mock).toHaveBeenCalledWith(lift(liftArgs));\n      |  ^ Duplicate Assert\n  101 |   // the previous drag is flushed\n  102 |   expect(mock).toHaveBeenCalledWith(completeDrop({ completed }));\n  103 |   // any animations are flushed","start":{"line":100,"column":2,"index":2896}},{"frame":"  100 |   expect(mock).toHaveBeenCalledWith(lift(liftArgs));\n  101 |   // the previous drag is flushed\n> 102 |   expect(mock).toHaveBeenCalledWith(completeDrop({ completed }));\n      |  ^ Duplicate Assert\n  103 |   // any animations are flushed\n  104 |   expect(mock).toHaveBeenCalledWith(flush());\n  105 |   // a before capture is fired","start":{"line":102,"column":2,"index":2983}},{"frame":"  102 |   expect(mock).toHaveBeenCalledWith(completeDrop({ completed }));\n  103 |   // any animations are flushed\n> 104 |   expect(mock).toHaveBeenCalledWith(flush());\n      |  ^ Duplicate Assert\n  105 |   // a before capture is fired\n  106 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n  107 |   // the new lift continues","start":{"line":104,"column":2,"index":3081}},{"frame":"  104 |   expect(mock).toHaveBeenCalledWith(flush());\n  105 |   // a before capture is fired\n> 106 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n      |  ^ Duplicate Assert\n  107 |   // the new lift continues\n  108 |   expect(mock).toHaveBeenCalledTimes(5);\n  109 | });","start":{"line":106,"column":2,"index":3158}},{"frame":"  106 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n  107 |   // the new lift continues\n> 108 |   expect(mock).toHaveBeenCalledTimes(5);\n      |  ^ Duplicate Assert\n  109 | });\n  110 |\n  111 | it('should publish the initial dimensions when lifting', () => {","start":{"line":108,"column":2,"index":3264}},{"frame":"  122 |   // first lift is preparing\n  123 |   store.dispatch(lift(liftArgs));\n> 124 |   expect(mock).toHaveBeenCalledWith(lift(liftArgs));\n      |  ^ Duplicate Assert\n  125 |   // last drag flushed\n  126 |   expect(mock).toHaveBeenCalledWith(flush());\n  127 |   expect(mock).toHaveBeenCalledWith(initialPublish(initialPublishArgs));","start":{"line":124,"column":2,"index":3638}},{"frame":"  124 |   expect(mock).toHaveBeenCalledWith(lift(liftArgs));\n  125 |   // last drag flushed\n> 126 |   expect(mock).toHaveBeenCalledWith(flush());\n      |  ^ Duplicate Assert\n  127 |   expect(mock).toHaveBeenCalledWith(initialPublish(initialPublishArgs));\n  128 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n  129 |   expect(mock).toHaveBeenCalledTimes(4);","start":{"line":126,"column":2,"index":3714}},{"frame":"  125 |   // last drag flushed\n  126 |   expect(mock).toHaveBeenCalledWith(flush());\n> 127 |   expect(mock).toHaveBeenCalledWith(initialPublish(initialPublishArgs));\n      |  ^ Duplicate Assert\n  128 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n  129 |   expect(mock).toHaveBeenCalledTimes(4);\n  130 |   expect(store.getState().phase).toBe('DRAGGING');","start":{"line":127,"column":2,"index":3760}},{"frame":"  126 |   expect(mock).toHaveBeenCalledWith(flush());\n  127 |   expect(mock).toHaveBeenCalledWith(initialPublish(initialPublishArgs));\n> 128 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n      |  ^ Duplicate Assert\n  129 |   expect(mock).toHaveBeenCalledTimes(4);\n  130 |   expect(store.getState().phase).toBe('DRAGGING');\n  131 | });","start":{"line":128,"column":2,"index":3833}},{"frame":"  127 |   expect(mock).toHaveBeenCalledWith(initialPublish(initialPublishArgs));\n  128 |   expect(mock).toHaveBeenCalledWith(beforeInitialCapture(beforeCaptureArgs));\n> 129 |   expect(mock).toHaveBeenCalledTimes(4);\n      |  ^ Duplicate Assert\n  130 |   expect(store.getState().phase).toBe('DRAGGING');\n  131 | });\n  132 |","start":{"line":129,"column":2,"index":3911}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":9.836,"halstead":{"bugs":0.77,"difficulty":13.781,"effort":31818.213,"length":373,"time":1767.678,"vocabulary":73,"volume":2308.805,"operands":{"distinct":64,"total":196,"identifiers":["getPopulatedRegistry","dimensions","Registry","registry","createRegistry","populate","getBasicMarshal","dispatch","DimensionMarshal","createMarshal","beforeEach","setViewport","preset","viewport","jest","useFakeTimers","afterEach","resetViewport","clearAllTimers","useRealTimers","it","\"should throw if a drag cannot be started when a lift action occurs\"","mock","fn","store","Store","createStore","passThrough","middleware","action","lift","liftArgs","expect","toHaveBeenCalledWith","getState","phase","toBe","\"DRAGGING\"","toThrow","\"should flush any animating drops\"","initialPublish","initialPublishArgs","completed","CompletedDrag","getCompletedArgs","\"DROP\"","args","AnimateDropArgs","newHomeClientOffset","x","1","y","dropDuration","animateDrop","\"DROP_ANIMATING\"","mockReset","completeDrop","flush","beforeInitialCapture","beforeCaptureArgs","toHaveBeenCalledTimes","5","\"should publish the initial dimensions when lifting\"","4"]},"operators":{"distinct":9,"total":177,"identifiers":["const","=","function=>","()","return",".","{}",":","- (prefix)"]}},"paramCount":5,"sloc":{"logical":122,"physical":132}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/types","type":"esm"},{"line":3,"path":"../../../../src/state/store-types","type":"esm"},{"line":4,"path":"../../../../src/state/dimension-marshal/dimension-marshal-types","type":"esm"},{"line":5,"path":"../../../../src/state/middleware/lift","type":"esm"},{"line":6,"path":"./util/create-store","type":"esm"},{"line":7,"path":"./util/pass-through-middleware","type":"esm"},{"line":8,"path":"../../../util/viewport","type":"esm"},{"line":17,"path":"../../../../src/state/action-creators","type":"esm"},{"line":18,"path":"../../../util/dimension-marshal","type":"esm"},{"line":25,"path":"../../../util/preset-action-args","type":"esm"},{"line":26,"path":"../../../util/registry","type":"esm"},{"line":27,"path":"../../../../src/state/registry/registry-types","type":"esm"},{"line":28,"path":"../../../../src/state/registry/create-registry","type":"esm"}],"errors":[],"lineEnd":132,"lineStart":1,"maintainability":106.471,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.014,"difficulty":3.2,"effort":131.869,"length":13,"time":7.326,"vocabulary":9,"volume":41.209,"operands":{"distinct":5,"total":8,"identifiers":["Registry","registry","createRegistry","populate","dimensions"]},"operators":{"distinct":4,"total":5,"identifiers":["const","=","()","return"]}},"paramCount":1,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":34,"lineStart":30,"name":"<anon method-1>","paramNames":["dimensions"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["DimensionMarshal","createMarshal","getPopulatedRegistry","dispatch"]},"operators":{"distinct":2,"total":3,"identifiers":["return","()"]}},"paramCount":1,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":38,"lineStart":36,"name":"<anon method-2>","paramNames":["dispatch"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1,"effort":25.266,"length":9,"time":1.404,"vocabulary":7,"volume":25.266,"operands":{"distinct":5,"total":5,"identifiers":["setViewport","preset","viewport","jest","useFakeTimers"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":43,"lineStart":40,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":1.25,"effort":32.312,"length":10,"time":1.795,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":5,"identifiers":["resetViewport","jest","clearAllTimers","useRealTimers"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":49,"lineStart":45,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.087,"difficulty":3.5,"effort":910.196,"length":56,"time":50.566,"vocabulary":25,"volume":260.056,"operands":{"distinct":20,"total":28,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","middleware","getBasicMarshal","action","dispatch","lift","liftArgs","expect","toHaveBeenCalledWith","getState","phase","toBe","\"DRAGGING\"","toThrow"]},"operators":{"distinct":5,"total":28,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":19,"physical":19},"errors":[],"lineEnd":69,"lineStart":51,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["store","dispatch","action"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":58,"lineStart":56,"name":"<anon method-6>","paramNames":["action"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["store","dispatch","lift","liftArgs"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":68,"lineStart":68,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.273,"halstead":{"bugs":0.271,"difficulty":7.512,"effort":6115.925,"length":145,"time":339.774,"vocabulary":49,"volume":814.133,"operands":{"distinct":41,"total":77,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","middleware","getBasicMarshal","action","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","completed","CompletedDrag","getCompletedArgs","\"DROP\"","args","AnimateDropArgs","newHomeClientOffset","x","1","y","dropDuration","animateDrop","\"DROP_ANIMATING\"","mockReset","lift","liftArgs","toHaveBeenCalledWith","completeDrop","flush","beforeInitialCapture","beforeCaptureArgs","toHaveBeenCalledTimes","5"]},"operators":{"distinct":8,"total":68,"identifiers":["const","=","()",".","function=>","{}",":","- (prefix)"]}},"paramCount":0,"sloc":{"logical":44,"physical":39},"errors":[],"lineEnd":109,"lineStart":71,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["store","dispatch","action"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":78,"lineStart":76,"name":"<anon method-9>","paramNames":["action"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.137,"difficulty":4.231,"effort":1739.685,"length":83,"time":96.649,"vocabulary":31,"volume":411.198,"operands":{"distinct":26,"total":44,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","middleware","getBasicMarshal","action","dispatch","lift","liftArgs","expect","toHaveBeenCalledWith","flush","initialPublish","initialPublishArgs","beforeInitialCapture","beforeCaptureArgs","toHaveBeenCalledTimes","4","getState","phase","toBe","\"DRAGGING\""]},"operators":{"distinct":5,"total":39,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":27,"physical":21},"errors":[],"lineEnd":131,"lineStart":111,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["store","dispatch","action"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":118,"lineStart":116,"name":"<anon method-11>","paramNames":["action"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.82,"halstead":{"bugs":0.064,"difficulty":1.148,"effort":2651.518,"length":31.083,"time":147.307,"vocabulary":6.083,"volume":192.4,"operands":{"distinct":5.333,"total":16.333},"operators":{"distinct":0.75,"total":14.75}},"paramCount":0.417,"sloc":{"logical":10.167,"physical":11}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":44.204,"halstead":{"bugs":0.05,"difficulty":2.336,"effort":820.57,"length":31.364,"time":45.587,"vocabulary":14,"volume":149.885,"operands":{"distinct":10.727,"total":16.727},"operators":{"distinct":3.273,"total":14.636}},"paramCount":0.455,"sloc":{"logical":9.818,"physical":9.636}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/dimension-marshal-stopper.spec.js","testCases":4,"smells":13,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  33 |   store.dispatch(initialPublish(initialPublishArgs));\n  34 |\n> 35 |   expect(stopPublishing).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  36 |   store.dispatch(flush());\n  37 |   expect(stopPublishing).toHaveBeenCalledTimes(1);\n  38 | });","start":{"line":35,"column":2,"index":1038}},{"frame":"  35 |   expect(stopPublishing).not.toHaveBeenCalled();\n  36 |   store.dispatch(flush());\n> 37 |   expect(stopPublishing).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  38 | });\n  39 |\n  40 | it('should not stop a collection if a drop is pending', () => {","start":{"line":37,"column":2,"index":1114}},{"frame":"  47 |\n  48 |   store.dispatch(initialPublish(initialPublishArgs));\n> 49 |   expect(store.getState().phase).toBe('DRAGGING');\n     |  ^ Duplicate Assert\n  50 |   store.dispatch(collectionStarting());\n  51 |   expect(store.getState().phase).toBe('COLLECTING');\n  52 |   expect(stopPublishing).not.toHaveBeenCalled();","start":{"line":49,"column":2,"index":1479}},{"frame":"  49 |   expect(store.getState().phase).toBe('DRAGGING');\n  50 |   store.dispatch(collectionStarting());\n> 51 |   expect(store.getState().phase).toBe('COLLECTING');\n     |  ^ Duplicate Assert\n  52 |   expect(stopPublishing).not.toHaveBeenCalled();\n  53 |\n  54 |   // dropping","start":{"line":51,"column":2,"index":1570}},{"frame":"  50 |   store.dispatch(collectionStarting());\n  51 |   expect(store.getState().phase).toBe('COLLECTING');\n> 52 |   expect(stopPublishing).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  53 |\n  54 |   // dropping\n  55 |   store.dispatch(drop({ reason: 'DROP' }));","start":{"line":52,"column":2,"index":1623}},{"frame":"  50 |   store.dispatch(collectionStarting());\n  51 |   expect(store.getState().phase).toBe('COLLECTING');\n> 52 |   expect(stopPublishing).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  53 |\n  54 |   // dropping\n  55 |   store.dispatch(drop({ reason: 'DROP' }));","start":{"line":52,"column":2,"index":1623}},{"frame":"  54 |   // dropping\n  55 |   store.dispatch(drop({ reason: 'DROP' }));\n> 56 |   expect(store.getState().phase).toBe('DROP_PENDING');\n     |  ^ Duplicate Assert\n  57 |   expect(stopPublishing).not.toHaveBeenCalled();\n  58 | });\n  59 |","start":{"line":56,"column":2,"index":1731}},{"frame":"  55 |   store.dispatch(drop({ reason: 'DROP' }));\n  56 |   expect(store.getState().phase).toBe('DROP_PENDING');\n> 57 |   expect(stopPublishing).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  58 | });\n  59 |\n  60 | it('should stop a collection if a drag is complete', () => {","start":{"line":57,"column":2,"index":1786}},{"frame":"  55 |   store.dispatch(drop({ reason: 'DROP' }));\n  56 |   expect(store.getState().phase).toBe('DROP_PENDING');\n> 57 |   expect(stopPublishing).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  58 | });\n  59 |\n  60 | it('should stop a collection if a drag is complete', () => {","start":{"line":57,"column":2,"index":1786}},{"frame":"  68 |   store.dispatch(initialPublish(initialPublishArgs));\n  69 |   expect(store.getState().phase).toBe('DRAGGING');\n> 70 |   expect(stopPublishing).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  71 |\n  72 |   // complete drop\n  73 |   store.dispatch(completeDrop(getCompletedArgs('DROP')));","start":{"line":70,"column":2,"index":2197}},{"frame":"  73 |   store.dispatch(completeDrop(getCompletedArgs('DROP')));\n  74 |\n> 75 |   expect(stopPublishing).toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  76 | });\n  77 |\n  78 | it('should stop a collection if a drop animation starts', () => {","start":{"line":75,"column":2,"index":2325}},{"frame":"  86 |   store.dispatch(initialPublish(initialPublishArgs));\n  87 |   expect(store.getState().phase).toBe('DRAGGING');\n> 88 |   expect(stopPublishing).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  89 |\n  90 |   store.dispatch(animateDrop(userCancelArgs));\n  91 |","start":{"line":88,"column":2,"index":2737}},{"frame":"  90 |   store.dispatch(animateDrop(userCancelArgs));\n  91 |\n> 92 |   expect(stopPublishing).toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  93 | });\n  94 |","start":{"line":92,"column":2,"index":2835}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":6.818,"halstead":{"bugs":0.539,"difficulty":15.487,"effort":25033.25,"length":291,"time":1390.736,"vocabulary":47,"volume":1616.385,"operands":{"distinct":39,"total":151,"identifiers":["getMarshal","stopPublishing","DimensionMarshal","fake","it","\"should stop a collection if a drag is aborted\"","jest","fn","store","Store","createStore","middleware","dispatch","initialPublish","initialPublishArgs","expect","not","toHaveBeenCalled","flush","toHaveBeenCalledTimes","1","\"should not stop a collection if a drop is pending\"","dropMiddleware","getState","phase","toBe","\"DRAGGING\"","collectionStarting","\"COLLECTING\"","drop","reason","\"DROP\"","\"DROP_PENDING\"","\"should stop a collection if a drag is complete\"","completeDrop","getCompletedArgs","\"should stop a collection if a drop animation starts\"","animateDrop","userCancelArgs"]},"operators":{"distinct":8,"total":140,"identifiers":["const","=","function=>","{}","return","()",".",":"]}},"paramCount":1,"sloc":{"logical":88,"physical":94}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/state/store-types","type":"esm"},{"line":3,"path":"../../../../src/state/dimension-marshal/dimension-marshal-types","type":"esm"},{"line":4,"path":"../../../../src/state/middleware/dimension-marshal-stopper","type":"esm"},{"line":5,"path":"../../../../src/state/middleware/drop/drop-middleware","type":"esm"},{"line":6,"path":"./util/create-store","type":"esm"},{"line":14,"path":"../../../../src/state/action-creators","type":"esm"},{"line":19,"path":"../../../util/preset-action-args","type":"esm"}],"errors":[],"lineEnd":94,"lineStart":1,"maintainability":98.984,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":4,"effort":112.294,"length":10,"time":6.239,"vocabulary":7,"volume":28.074,"operands":{"distinct":3,"total":6,"identifiers":["DimensionMarshal","fake","stopPublishing"]},"operators":{"distinct":4,"total":4,"identifiers":["const","=","{}","return"]}},"paramCount":1,"sloc":{"logical":3,"physical":7},"errors":[],"lineEnd":27,"lineStart":21,"name":"<anon method-1>","paramNames":["stopPublishing"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.067,"difficulty":2.824,"effort":570.485,"length":46,"time":31.694,"vocabulary":21,"volume":202.047,"operands":{"distinct":17,"total":24,"identifiers":["stopPublishing","jest","fn","store","Store","createStore","middleware","getMarshal","dispatch","initialPublish","initialPublishArgs","expect","not","toHaveBeenCalled","flush","toHaveBeenCalledTimes","1"]},"operators":{"distinct":4,"total":22,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":14,"physical":10},"errors":[],"lineEnd":38,"lineStart":29,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.155,"difficulty":5.76,"effort":2682.4,"length":94,"time":149.022,"vocabulary":31,"volume":465.694,"operands":{"distinct":25,"total":48,"identifiers":["stopPublishing","jest","fn","store","Store","createStore","middleware","getMarshal","dropMiddleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","collectionStarting","\"COLLECTING\"","not","toHaveBeenCalled","drop","reason","\"DROP\"","\"DROP_PENDING\""]},"operators":{"distinct":6,"total":46,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":26,"physical":19},"errors":[],"lineEnd":58,"lineStart":40,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.096,"difficulty":2.909,"effort":834.114,"length":61,"time":46.34,"vocabulary":26,"volume":286.727,"operands":{"distinct":22,"total":32,"identifiers":["stopPublishing","jest","fn","store","Store","createStore","middleware","getMarshal","dropMiddleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","not","toHaveBeenCalled","completeDrop","getCompletedArgs","\"DROP\""]},"operators":{"distinct":4,"total":29,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":18,"physical":17},"errors":[],"lineEnd":76,"lineStart":60,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.091,"difficulty":2.952,"effort":808.916,"length":59,"time":44.94,"vocabulary":25,"volume":273.988,"operands":{"distinct":21,"total":31,"identifiers":["stopPublishing","jest","fn","store","Store","createStore","middleware","getMarshal","dropMiddleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","not","toHaveBeenCalled","animateDrop","userCancelArgs"]},"operators":{"distinct":4,"total":28,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":17,"physical":16},"errors":[],"lineEnd":93,"lineStart":78,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.136,"halstead":{"bugs":0.09,"difficulty":2.581,"effort":4172.208,"length":48.5,"time":231.789,"vocabulary":7.833,"volume":269.398,"operands":{"distinct":6.5,"total":25.167},"operators":{"distinct":1.333,"total":23.333}},"paramCount":0.167,"sloc":{"logical":14.667,"physical":15.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":11.152,"halstead":{"bugs":0.084,"difficulty":3.689,"effort":1001.642,"length":54,"time":55.647,"vocabulary":22,"volume":251.306,"operands":{"distinct":17.6,"total":28.2},"operators":{"distinct":4.4,"total":25.8}},"paramCount":0.2,"sloc":{"logical":15.6,"physical":13.8}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/auto-scroll.spec.js","testCases":1,"smells":2,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  53 |   expect(scroller.start).toHaveBeenCalledWith(store.getState());\n  54 |\n> 55 |   expect(scroller.scroll).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  56 |   store.dispatch(moveDown());\n  57 |   expect(scroller.scroll).toHaveBeenCalledWith(store.getState());\n  58 | });","start":{"line":55,"column":2,"index":1625}},{"frame":"  55 |   expect(scroller.scroll).not.toHaveBeenCalled();\n  56 |   store.dispatch(moveDown());\n> 57 |   expect(scroller.scroll).toHaveBeenCalledWith(store.getState());\n     |  ^ Duplicate Assert\n  58 | });\n  59 |","start":{"line":57,"column":2,"index":1705}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":9.091,"halstead":{"bugs":0.357,"difficulty":12.744,"effort":13657.419,"length":188,"time":758.746,"vocabulary":52,"volume":1071.683,"operands":{"distinct":41,"total":95,"identifiers":["shouldStop","Action","animateDrop","animateDropArgs","userCancelArgs","completeDrop","getCompletedArgs","\"CANCEL\"","\"DROP\"","flush","getScrollerStub","AutoScroller","start","jest","fn","stop","scroll","forEach","action","it","type","should stop the auto scroller when a "," is fired","scroller","store","Store","createStore","middleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","toHaveBeenCalled","\"should fire a scroll when there is an update\"","toHaveBeenCalledWith","not","moveDown"]},"operators":{"distinct":11,"total":93,"identifiers":["const","=","[]",",","()","function=>","{}",":",".","``","${}"]}},"paramCount":1,"sloc":{"logical":55,"physical":59}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../src/state/store-types","type":"esm"},{"line":3,"path":"../../../../src/state/auto-scroller/auto-scroller-types","type":"esm"},{"line":4,"path":"./util/create-store","type":"esm"},{"line":5,"path":"../../../../src/state/middleware/auto-scroll","type":"esm"},{"line":11,"path":"../../../util/preset-action-args","type":"esm"},{"line":18,"path":"../../../../src/state/action-creators","type":"esm"}],"errors":[],"lineEnd":59,"lineStart":1,"maintainability":105.093,"methods":[{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.022,"difficulty":3.333,"effort":221.462,"length":20,"time":12.303,"vocabulary":10,"volume":66.439,"operands":{"distinct":6,"total":10,"identifiers":["AutoScroller","start","jest","fn","stop","scroll"]},"operators":{"distinct":4,"total":10,"identifiers":["{}",":","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":32,"lineStart":28,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["it","action","type","should stop the auto scroller when a "," is fired"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":13},"errors":[],"lineEnd":46,"lineStart":34,"name":"<anon method-2>","paramNames":["action"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.083,"difficulty":3.053,"effort":759.482,"length":55,"time":42.193,"vocabulary":23,"volume":248.796,"operands":{"distinct":19,"total":29,"identifiers":["scroller","AutoScroller","getScrollerStub","store","Store","createStore","middleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","start","toHaveBeenCalled","action","stop"]},"operators":{"distinct":4,"total":26,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":15,"physical":11},"errors":[],"lineEnd":45,"lineStart":35,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.092,"difficulty":3.556,"effort":983.057,"length":62,"time":54.614,"vocabulary":22,"volume":276.485,"operands":{"distinct":18,"total":32,"identifiers":["scroller","AutoScroller","getScrollerStub","store","Store","createStore","middleware","dispatch","initialPublish","initialPublishArgs","expect","start","toHaveBeenCalledWith","getState","scroll","not","toHaveBeenCalled","moveDown"]},"operators":{"distinct":4,"total":30,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":17,"physical":11},"errors":[],"lineEnd":58,"lineStart":48,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.818,"halstead":{"bugs":0.071,"difficulty":2.549,"effort":2731.484,"length":37.6,"time":151.749,"vocabulary":10.4,"volume":214.337,"operands":{"distinct":8.2,"total":19},"operators":{"distinct":2.2,"total":18.6}},"paramCount":0.2,"sloc":{"logical":11,"physical":11.8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":19.209,"halstead":{"bugs":0.052,"difficulty":3.11,"effort":511.762,"length":36.75,"time":28.431,"vocabulary":16.25,"volume":156.235,"operands":{"distinct":12,"total":19},"operators":{"distinct":4.25,"total":17.75}},"paramCount":0.25,"sloc":{"logical":10.25,"physical":10}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/responders/update.spec.js","testCases":2,"smells":11,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  32 |   start(store.dispatch);\n  33 |   expect(responders.onDragStart).toHaveBeenCalledTimes(1);\n> 34 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  35 |\n  36 |   // Okay let's move it\n  37 |   store.dispatch(moveDown());","start":{"line":34,"column":2,"index":1163}},{"frame":"  32 |   start(store.dispatch);\n  33 |   expect(responders.onDragStart).toHaveBeenCalledTimes(1);\n> 34 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  35 |\n  36 |   // Okay let's move it\n  37 |   store.dispatch(moveDown());","start":{"line":34,"column":2,"index":1163}},{"frame":"  37 |   store.dispatch(moveDown());\n  38 |   // not called until next cycle\n> 39 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  40 |\n  41 |   jest.runOnlyPendingTimers();\n  42 |   const update: DragUpdate = {","start":{"line":39,"column":2,"index":1309}},{"frame":"  37 |   store.dispatch(moveDown());\n  38 |   // not called until next cycle\n> 39 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  40 |\n  41 |   jest.runOnlyPendingTimers();\n  42 |   const update: DragUpdate = {","start":{"line":39,"column":2,"index":1309}},{"frame":"  48 |     },\n  49 |   };\n> 50 |   expect(responders.onDragUpdate).toHaveBeenCalledWith(\n     |  ^ Duplicate Assert\n  51 |     update,\n  52 |     expect.any(Object),\n  53 |   );","start":{"line":50,"column":2,"index":1626}},{"frame":"  63 |   // onDragUpdate not called yet\n  64 |   jest.runOnlyPendingTimers();\n> 65 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  66 |\n  67 |   // A movement to the same index is not causing an update\n  68 |   const moveArgs: MoveArgs = {","start":{"line":65,"column":2,"index":2100}},{"frame":"  63 |   // onDragUpdate not called yet\n  64 |   jest.runOnlyPendingTimers();\n> 65 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  66 |\n  67 |   // A movement to the same index is not causing an update\n  68 |   const moveArgs: MoveArgs = {","start":{"line":65,"column":2,"index":2100}},{"frame":"  74 |   // update not called after flushing\n  75 |   jest.runOnlyPendingTimers();\n> 76 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  77 |\n  78 |   // Triggering an actual movement\n  79 |   store.dispatch(moveDown());","start":{"line":76,"column":2,"index":2446}},{"frame":"  74 |   // update not called after flushing\n  75 |   jest.runOnlyPendingTimers();\n> 76 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  77 |\n  78 |   // Triggering an actual movement\n  79 |   store.dispatch(moveDown());","start":{"line":76,"column":2,"index":2446}},{"frame":"  79 |   store.dispatch(moveDown());\n  80 |   jest.runOnlyPendingTimers();\n> 81 |   expect(responders.onDragUpdate).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  82 |\n  83 |   const state: State = store.getState();\n  84 |   invariant(","start":{"line":81,"column":2,"index":2601}},{"frame":"  95 |\n  96 |   jest.runOnlyPendingTimers();\n> 97 |   expect(responders.onDragUpdate).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  98 | });\n  99 |","start":{"line":97,"column":2,"index":3008}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":7.692,"halstead":{"bugs":0.605,"difficulty":14.603,"effort":26494.04,"length":297,"time":1471.891,"vocabulary":69,"volume":1814.232,"operands":{"distinct":58,"total":154,"identifiers":["jest","useFakeTimers","start","dispatch","initialPublish","initialPublishArgs","runOnlyPendingTimers","it","\"should call onDragUpdate if the position has changed on move\"","responders","Responders","createResponders","store","Store","createStore","middleware","getAnnounce","expect","onDragStart","toHaveBeenCalledTimes","1","onDragUpdate","not","toHaveBeenCalled","moveDown","update","DragUpdate","getDragStart","combine","null","destination","droppableId","critical","droppable","id","index","draggable","toHaveBeenCalledWith","any","Object","\"should not call onDragUpdate if there is no movement from the last update\"","moveArgs","MoveArgs","client","add","clientSelection","x","y","move","state","State","getState","invariant","phase","\"DRAGGING\"","\"Expecting state to be in dragging phase\"","current","selection"]},"operators":{"distinct":11,"total":143,"identifiers":["()",".","const","=","function=>","{}","... (spread)",":","+","===","- (prefix)"]}},"paramCount":1,"sloc":{"logical":78,"physical":99}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../../src/invariant","type":"esm"},{"line":8,"path":"../../../../../src/state/action-creators","type":"esm"},{"line":9,"path":"../../../../../src/state/middleware/responders","type":"esm"},{"line":10,"path":"../../../../../src/state/position","type":"esm"},{"line":14,"path":"../../../../util/preset-action-args","type":"esm"},{"line":15,"path":"../util/create-store","type":"esm"},{"line":16,"path":"./util/get-announce-stub","type":"esm"},{"line":17,"path":"./util/get-responders-stub","type":"esm"},{"line":18,"path":"../../../../../src/types","type":"esm"},{"line":19,"path":"../../../../../src/state/store-types","type":"esm"}],"errors":[],"lineEnd":99,"lineStart":1,"maintainability":100.744,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.008,"difficulty":1,"effort":25.266,"length":9,"time":1.404,"vocabulary":7,"volume":25.266,"operands":{"distinct":5,"total":5,"identifiers":["dispatch","initialPublish","initialPublishArgs","jest","runOnlyPendingTimers"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":26,"lineStart":23,"name":"<anon method-1>","paramNames":["dispatch"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.2,"difficulty":7,"effort":4190.284,"length":109,"time":232.794,"vocabulary":45,"volume":598.612,"operands":{"distinct":36,"total":56,"identifiers":["responders","Responders","createResponders","store","Store","createStore","middleware","getAnnounce","start","dispatch","expect","onDragStart","toHaveBeenCalledTimes","1","onDragUpdate","not","toHaveBeenCalled","moveDown","jest","runOnlyPendingTimers","update","DragUpdate","getDragStart","combine","null","destination","droppableId","initialPublishArgs","critical","droppable","id","index","draggable","toHaveBeenCalledWith","any","Object"]},"operators":{"distinct":9,"total":53,"identifiers":["const","=","()","function=>",".","{}","... (spread)",":","+"]}},"paramCount":0,"sloc":{"logical":26,"physical":27},"errors":[],"lineEnd":54,"lineStart":28,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":30,"lineStart":30,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.5,"halstead":{"bugs":0.296,"difficulty":9.829,"effort":8735.322,"length":160,"time":485.296,"vocabulary":47,"volume":888.734,"operands":{"distinct":38,"total":83,"identifiers":["responders","Responders","createResponders","store","Store","createStore","middleware","getAnnounce","start","dispatch","expect","onDragStart","toHaveBeenCalledTimes","1","jest","runOnlyPendingTimers","onDragUpdate","not","toHaveBeenCalled","moveArgs","MoveArgs","client","add","initialPublishArgs","clientSelection","x","y","move","moveDown","state","State","getState","invariant","phase","\"DRAGGING\"","\"Expecting state to be in dragging phase\"","current","selection"]},"operators":{"distinct":9,"total":77,"identifiers":["const","=","()","function=>",".","{}",":","===","- (prefix)"]}},"paramCount":0,"sloc":{"logical":40,"physical":43},"errors":[],"lineEnd":98,"lineStart":56,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":58,"lineStart":58,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.282,"halstead":{"bugs":0.101,"difficulty":2.434,"effort":4415.673,"length":49.5,"time":245.315,"vocabulary":11.5,"volume":302.372,"operands":{"distinct":9.667,"total":25.667},"operators":{"distinct":1.833,"total":23.833}},"paramCount":0.167,"sloc":{"logical":13,"physical":16.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":47.936,"halstead":{"bugs":0.101,"difficulty":3.566,"effort":2590.174,"length":56,"time":143.899,"vocabulary":20.2,"volume":302.522,"operands":{"distinct":16.2,"total":29.2},"operators":{"distinct":4,"total":26.8}},"paramCount":0.2,"sloc":{"logical":14.2,"physical":15.2}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/responders/start.spec.js","testCases":3,"smells":8,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  21 |\n  22 |   // prepare step should not trigger responder\n> 23 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  24 |\n  25 |   // first initial publish\n  26 |   store.dispatch(initialPublish(initialPublishArgs));","start":{"line":23,"column":2,"index":945}},{"frame":"  21 |\n  22 |   // prepare step should not trigger responder\n> 23 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  24 |\n  25 |   // first initial publish\n  26 |   store.dispatch(initialPublish(initialPublishArgs));","start":{"line":23,"column":2,"index":945}},{"frame":"  25 |   // first initial publish\n  26 |   store.dispatch(initialPublish(initialPublishArgs));\n> 27 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  28 |\n  29 |   // flushing onDragStart\n  30 |   jest.runOnlyPendingTimers();","start":{"line":27,"column":2,"index":1084}},{"frame":"  25 |   // first initial publish\n  26 |   store.dispatch(initialPublish(initialPublishArgs));\n> 27 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  28 |\n  29 |   // flushing onDragStart\n  30 |   jest.runOnlyPendingTimers();","start":{"line":27,"column":2,"index":1084}},{"frame":"  29 |   // flushing onDragStart\n  30 |   jest.runOnlyPendingTimers();\n> 31 |   expect(responders.onDragStart).toHaveBeenCalledWith(\n     |  ^ Duplicate Assert\n  32 |     getDragStart(),\n  33 |     expect.any(Object),\n  34 |   );","start":{"line":31,"column":2,"index":1199}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  63 |\n  64 |   // checking the order\n> 65 |   invariant(onBeforeDragStartCalled);\n     |  ^ Eager Test\n  66 |   invariant(mockCalled);\n  67 |   invariant(onDragStartCalled);\n  68 |   expect(mock).toHaveBeenCalledTimes(1);","start":{"line":65,"column":2,"index":2329}},{"frame":"  64 |   // checking the order\n  65 |   invariant(onBeforeDragStartCalled);\n> 66 |   invariant(mockCalled);\n     |  ^ Eager Test\n  67 |   invariant(onDragStartCalled);\n  68 |   expect(mock).toHaveBeenCalledTimes(1);\n  69 |   expect(onBeforeDragStartCalled).toBeLessThan(mockCalled);","start":{"line":66,"column":2,"index":2367}},{"frame":"  65 |   invariant(onBeforeDragStartCalled);\n  66 |   invariant(mockCalled);\n> 67 |   invariant(onDragStartCalled);\n     |  ^ Eager Test\n  68 |   expect(mock).toHaveBeenCalledTimes(1);\n  69 |   expect(onBeforeDragStartCalled).toBeLessThan(mockCalled);\n  70 |   expect(mockCalled).toBeLessThan(onDragStartCalled);","start":{"line":67,"column":2,"index":2392}}]}],"metrics":{"aggregate":{"cyclomatic":11,"cyclomaticDensity":12.941,"halstead":{"bugs":0.479,"difficulty":9.07,"effort":13036.573,"length":256,"time":724.254,"vocabulary":49,"volume":1437.366,"operands":{"distinct":43,"total":130,"identifiers":["jest","useFakeTimers","it","\"should call the onDragStart responder when a initial publish occurs\"","responders","Responders","getRespondersStub","store","Store","createStore","middleware","getAnnounce","expect","onDragStart","not","toHaveBeenCalled","dispatch","initialPublish","initialPublishArgs","runOnlyPendingTimers","toHaveBeenCalledWith","getDragStart","any","Object","\"should call the onBeforeDragState and onDragStart in the correct order\"","mockCalled","null","onBeforeDragStartCalled","onDragStartCalled","mock","fn","mockImplementation","performance","now","onBeforeDragStart","passThrough","invariant","toHaveBeenCalledTimes","1","toBeLessThan","\"should throw an exception if an initial publish is called before a drag ends\"","start","toThrow"]},"operators":{"distinct":6,"total":126,"identifiers":["()",".","function=>","const","=","let"]}},"paramCount":0,"sloc":{"logical":85,"physical":88}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../../src/invariant","type":"esm"},{"line":3,"path":"../../../../../src/state/action-creators","type":"esm"},{"line":4,"path":"../../../../../src/state/middleware/responders","type":"esm"},{"line":8,"path":"../../../../util/preset-action-args","type":"esm"},{"line":9,"path":"../util/create-store","type":"esm"},{"line":10,"path":"../util/pass-through-middleware","type":"esm"},{"line":11,"path":"../../../../../src/types","type":"esm"},{"line":12,"path":"../../../../../src/state/store-types","type":"esm"},{"line":13,"path":"./util/get-responders-stub","type":"esm"},{"line":14,"path":"./util/get-announce-stub","type":"esm"}],"errors":[],"lineEnd":88,"lineStart":1,"maintainability":113.669,"methods":[{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.099,"difficulty":3.81,"effort":1128.106,"length":63,"time":62.673,"vocabulary":26,"volume":296.128,"operands":{"distinct":21,"total":32,"identifiers":["responders","Responders","getRespondersStub","store","Store","createStore","middleware","getAnnounce","expect","onDragStart","not","toHaveBeenCalled","dispatch","initialPublish","initialPublishArgs","jest","runOnlyPendingTimers","toHaveBeenCalledWith","getDragStart","any","Object"]},"operators":{"distinct":5,"total":31,"identifiers":["const","=","()","function=>","."]}},"paramCount":0,"sloc":{"logical":18,"physical":18},"errors":[],"lineEnd":35,"lineStart":18,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":20,"lineStart":20,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.186,"difficulty":5.5,"effort":3070.935,"length":108,"time":170.608,"vocabulary":36,"volume":558.352,"operands":{"distinct":30,"total":55,"identifiers":["mockCalled","null","onBeforeDragStartCalled","onDragStartCalled","mock","jest","fn","mockImplementation","responders","Responders","getRespondersStub","onBeforeDragStart","onDragStart","store","Store","createStore","middleware","getAnnounce","passThrough","dispatch","initialPublish","initialPublishArgs","expect","toHaveBeenCalledWith","getDragStart","runOnlyPendingTimers","invariant","toHaveBeenCalledTimes","1","toBeLessThan"]},"operators":{"distinct":6,"total":53,"identifiers":["let","=","const","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":34,"physical":35},"errors":[],"lineEnd":71,"lineStart":37,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["mockCalled","performance","now"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":43,"lineStart":41,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["onBeforeDragStartCalled","performance","now"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":48,"lineStart":46,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["onDragStartCalled","performance","now"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":52,"lineStart":50,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":54,"lineStart":54,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.051,"difficulty":3.269,"effort":504.401,"length":37,"time":28.022,"vocabulary":18,"volume":154.287,"operands":{"distinct":13,"total":17,"identifiers":["responders","Responders","getRespondersStub","store","Store","createStore","middleware","getAnnounce","start","expect","onDragStart","toHaveBeenCalled","toThrow"]},"operators":{"distinct":5,"total":20,"identifiers":["const","=","()","function=>","."]}},"paramCount":0,"sloc":{"logical":14,"physical":15},"errors":[],"lineEnd":87,"lineStart":73,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":75,"lineStart":75,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.011,"difficulty":1,"effort":33,"length":11,"time":1.833,"vocabulary":8,"volume":33,"operands":{"distinct":6,"total":6,"identifiers":["store","dispatch","initialPublish","initialPublishArgs","jest","runOnlyPendingTimers"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":80,"lineStart":77,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.176,"halstead":{"bugs":0.044,"difficulty":0.825,"effort":1185.143,"length":23.273,"time":65.841,"vocabulary":4.455,"volume":130.67,"operands":{"distinct":3.909,"total":11.818},"operators":{"distinct":0.545,"total":11.455}},"paramCount":0,"sloc":{"logical":7.727,"physical":8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":49.897,"halstead":{"bugs":0.036,"difficulty":1.808,"effort":480.624,"length":24,"time":26.701,"vocabulary":10.9,"volume":108.83,"operands":{"distinct":8.2,"total":12.2},"operators":{"distinct":2.7,"total":11.8}},"paramCount":0,"sloc":{"logical":7.8,"physical":8.4}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/responders/repeated-use.spec.js","testCases":1,"smells":6,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  30 |     store.dispatch(initialPublish(initialPublishArgs));\n  31 |     jest.runOnlyPendingTimers();\n> 32 |     expect(responders.onDragStart).toHaveBeenCalledWith(\n     |    ^ Duplicate Assert\n  33 |       getDragStart(),\n  34 |       expect.any(Object),\n  35 |     );","start":{"line":32,"column":4,"index":972}},{"frame":"  34 |       expect.any(Object),\n  35 |     );\n> 36 |     expect(responders.onDragStart).toHaveBeenCalledTimes(1);\n     |    ^ Duplicate Assert\n  37 |\n  38 |     // update\n  39 |     const update: DragUpdate = {","start":{"line":36,"column":4,"index":1084}},{"frame":"  48 |     // flush responder call\n  49 |     jest.runOnlyPendingTimers();\n> 50 |     expect(responders.onDragUpdate).toHaveBeenCalledWith(\n     |    ^ Duplicate Assert\n  51 |       update,\n  52 |       expect.any(Object),\n  53 |     );","start":{"line":50,"column":4,"index":1496}},{"frame":"  52 |       expect.any(Object),\n  53 |     );\n> 54 |     expect(responders.onDragUpdate).toHaveBeenCalledTimes(1);\n     |    ^ Duplicate Assert\n  55 |\n  56 |     // drop\n  57 |     const result: DropResult = {","start":{"line":54,"column":4,"index":1601}},{"frame":"  64 |       }),\n  65 |     );\n> 66 |     expect(responders.onDragEnd).toHaveBeenCalledWith(\n     |    ^ Duplicate Assert\n  67 |       result,\n  68 |       expect.any(Object),\n  69 |     );","start":{"line":66,"column":4,"index":1882}},{"frame":"  68 |       expect.any(Object),\n  69 |     );\n> 70 |     expect(responders.onDragEnd).toHaveBeenCalledTimes(1);\n     |    ^ Duplicate Assert\n  71 |\n  72 |     // cleanup\n  73 |     store.dispatch(flush());","start":{"line":70,"column":4,"index":1984}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":7.273,"halstead":{"bugs":0.419,"difficulty":9.433,"effort":11859.878,"length":212,"time":658.882,"vocabulary":61,"volume":1257.316,"operands":{"distinct":52,"total":109,"identifiers":["jest","useFakeTimers","it","\"should behave correctly across multiple drags\"","responders","Responders","createResponders","store","createStore","middleware","getAnnounce","Array","from","length","4","forEach","dispatch","initialPublish","initialPublishArgs","runOnlyPendingTimers","expect","onDragStart","toHaveBeenCalledWith","getDragStart","any","Object","toHaveBeenCalledTimes","1","update","DragUpdate","destination","droppableId","critical","droppable","id","index","draggable","combine","null","moveDown","onDragUpdate","result","DropResult","reason","\"DROP\"","completeDrop","completed","getCompletedWithResult","getState","onDragEnd","flush","mockReset"]},"operators":{"distinct":9,"total":103,"identifiers":["()",".","function=>","const","=","{}",":","... (spread)","+"]}},"paramCount":0,"sloc":{"logical":55,"physical":82}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":7,"path":"../../../../../src/state/action-creators","type":"esm"},{"line":8,"path":"../../../../../src/state/middleware/responders","type":"esm"},{"line":12,"path":"../../../../util/preset-action-args","type":"esm"},{"line":13,"path":"../util/create-store","type":"esm"},{"line":18,"path":"../../../../../src/types","type":"esm"},{"line":19,"path":"./util/get-responders-stub","type":"esm"},{"line":20,"path":"./util/get-announce-stub","type":"esm"},{"line":21,"path":"./util/get-completed-with-result","type":"esm"}],"errors":[],"lineEnd":82,"lineStart":1,"maintainability":101.198,"methods":[{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.04,"difficulty":3.5,"effort":416.297,"length":28,"time":23.128,"vocabulary":19,"volume":118.942,"operands":{"distinct":12,"total":12,"identifiers":["responders","Responders","createResponders","store","createStore","middleware","getAnnounce","Array","from","length","4","forEach"]},"operators":{"distinct":7,"total":16,"identifiers":["const","=","()","function=>",".","{}",":"]}},"paramCount":0,"sloc":{"logical":11,"physical":57},"errors":[],"lineEnd":81,"lineStart":25,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":27,"lineStart":27,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.5,"halstead":{"bugs":0.324,"difficulty":9.436,"effort":9172.193,"length":175,"time":509.566,"vocabulary":47,"volume":972.053,"operands":{"distinct":39,"total":92,"identifiers":["store","dispatch","initialPublish","initialPublishArgs","jest","runOnlyPendingTimers","expect","responders","onDragStart","toHaveBeenCalledWith","getDragStart","any","Object","toHaveBeenCalledTimes","1","update","DragUpdate","destination","droppableId","critical","droppable","id","index","draggable","combine","null","moveDown","onDragUpdate","result","DropResult","reason","\"DROP\"","completeDrop","completed","getCompletedWithResult","getState","onDragEnd","flush","mockReset"]},"operators":{"distinct":8,"total":83,"identifiers":["()",".","const","=","{}","... (spread)",":","+"]}},"paramCount":0,"sloc":{"logical":40,"physical":53},"errors":[],"lineEnd":80,"lineStart":28,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.818,"halstead":{"bugs":0.105,"difficulty":2.358,"effort":2964.969,"length":53,"time":164.721,"vocabulary":15.25,"volume":314.329,"operands":{"distinct":13,"total":27.25},"operators":{"distinct":2.25,"total":25.75}},"paramCount":0,"sloc":{"logical":13.75,"physical":20.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":37.197,"halstead":{"bugs":0.121,"difficulty":4.312,"effort":3196.163,"length":68,"time":177.565,"vocabulary":22.333,"volume":363.665,"operands":{"distinct":17.333,"total":35},"operators":{"distinct":5,"total":33}},"paramCount":0,"sloc":{"logical":17.333,"physical":37}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/responders/flushing.spec.js","testCases":4,"smells":28,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  35 |\n  36 |   store.dispatch(initialPublish(initialPublishArgs));\n> 37 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  38 |\n  39 |   jest.runOnlyPendingTimers();\n  40 |   expect(responders.onDragStart).toHaveBeenCalledTimes(1);","start":{"line":37,"column":2,"index":1123}},{"frame":"  38 |\n  39 |   jest.runOnlyPendingTimers();\n> 40 |   expect(responders.onDragStart).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  41 | });\n  42 |\n  43 | it('should queue a drag start if an action comes in while the timeout is pending', () => {","start":{"line":40,"column":2,"index":1212}},{"frame":"  46 |\n  47 |   store.dispatch(initialPublish(initialPublishArgs));\n> 48 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  49 |\n  50 |   store.dispatch(moveDown());\n  51 |   expect(responders.onDragStart).not.toHaveBeenCalled();","start":{"line":48,"column":2,"index":1553}},{"frame":"  46 |\n  47 |   store.dispatch(initialPublish(initialPublishArgs));\n> 48 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  49 |\n  50 |   store.dispatch(moveDown());\n  51 |   expect(responders.onDragStart).not.toHaveBeenCalled();","start":{"line":48,"column":2,"index":1553}},{"frame":"  49 |\n  50 |   store.dispatch(moveDown());\n> 51 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  52 |\n  53 |   jest.runOnlyPendingTimers();\n  54 |","start":{"line":51,"column":2,"index":1641}},{"frame":"  49 |\n  50 |   store.dispatch(moveDown());\n> 51 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  52 |\n  53 |   jest.runOnlyPendingTimers();\n  54 |","start":{"line":51,"column":2,"index":1641}},{"frame":"  53 |   jest.runOnlyPendingTimers();\n  54 |\n> 55 |   expect(responders.onDragStart).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  56 |   expect(responders.onDragUpdate).toHaveBeenCalledTimes(1);\n  57 | });\n  58 |","start":{"line":55,"column":2,"index":1731}},{"frame":"  62 |\n  63 |   store.dispatch(initialPublish(initialPublishArgs));\n> 64 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  65 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n  66 |\n  67 |   store.dispatch(moveDown());","start":{"line":64,"column":2,"index":2108}},{"frame":"  62 |\n  63 |   store.dispatch(initialPublish(initialPublishArgs));\n> 64 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  65 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n  66 |\n  67 |   store.dispatch(moveDown());","start":{"line":64,"column":2,"index":2108}},{"frame":"  63 |   store.dispatch(initialPublish(initialPublishArgs));\n  64 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n> 65 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  66 |\n  67 |   store.dispatch(moveDown());\n  68 |   expect(responders.onDragStart).not.toHaveBeenCalled();","start":{"line":65,"column":2,"index":2165}},{"frame":"  63 |   store.dispatch(initialPublish(initialPublishArgs));\n  64 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n> 65 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  66 |\n  67 |   store.dispatch(moveDown());\n  68 |   expect(responders.onDragStart).not.toHaveBeenCalled();","start":{"line":65,"column":2,"index":2165}},{"frame":"  66 |\n  67 |   store.dispatch(moveDown());\n> 68 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  69 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n  70 |\n  71 |   store.dispatch(moveUp());","start":{"line":68,"column":2,"index":2254}},{"frame":"  66 |\n  67 |   store.dispatch(moveDown());\n> 68 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  69 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n  70 |\n  71 |   store.dispatch(moveUp());","start":{"line":68,"column":2,"index":2254}},{"frame":"  67 |   store.dispatch(moveDown());\n  68 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n> 69 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  70 |\n  71 |   store.dispatch(moveUp());\n  72 |   expect(responders.onDragStart).not.toHaveBeenCalled();","start":{"line":69,"column":2,"index":2311}},{"frame":"  67 |   store.dispatch(moveDown());\n  68 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n> 69 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  70 |\n  71 |   store.dispatch(moveUp());\n  72 |   expect(responders.onDragStart).not.toHaveBeenCalled();","start":{"line":69,"column":2,"index":2311}},{"frame":"  70 |\n  71 |   store.dispatch(moveUp());\n> 72 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  73 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n  74 |\n  75 |   store.dispatch(","start":{"line":72,"column":2,"index":2398}},{"frame":"  70 |\n  71 |   store.dispatch(moveUp());\n> 72 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  73 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n  74 |\n  75 |   store.dispatch(","start":{"line":72,"column":2,"index":2398}},{"frame":"  71 |   store.dispatch(moveUp());\n  72 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n> 73 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  74 |\n  75 |   store.dispatch(\n  76 |     completeDrop({","start":{"line":73,"column":2,"index":2455}},{"frame":"  71 |   store.dispatch(moveUp());\n  72 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n> 73 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  74 |\n  75 |   store.dispatch(\n  76 |     completeDrop({","start":{"line":73,"column":2,"index":2455}},{"frame":"  78 |     }),\n  79 |   );\n> 80 |   expect(responders.onDragStart).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  81 |   expect(responders.onDragUpdate).toHaveBeenCalledTimes(2);\n  82 |   expect(responders.onDragEnd).toHaveBeenCalledWith(result, expect.any(Object));\n  83 | });","start":{"line":80,"column":2,"index":2631}},{"frame":"  79 |   );\n  80 |   expect(responders.onDragStart).toHaveBeenCalledTimes(1);\n> 81 |   expect(responders.onDragUpdate).toHaveBeenCalledTimes(2);\n     |  ^ Duplicate Assert\n  82 |   expect(responders.onDragEnd).toHaveBeenCalledWith(result, expect.any(Object));\n  83 | });\n  84 |","start":{"line":81,"column":2,"index":2690}},{"frame":"  89 |     store.dispatch(initialPublish(initialPublishArgs));\n  90 |     expect(responders.onBeforeDragStart).toHaveBeenCalled();\n> 91 |     expect(responders.onDragStart).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  92 |\n  93 |     store.dispatch(moveDown());\n  94 |     expect(responders.onDragStart).not.toHaveBeenCalled();","start":{"line":91,"column":4,"index":3178}},{"frame":"  89 |     store.dispatch(initialPublish(initialPublishArgs));\n  90 |     expect(responders.onBeforeDragStart).toHaveBeenCalled();\n> 91 |     expect(responders.onDragStart).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  92 |\n  93 |     store.dispatch(moveDown());\n  94 |     expect(responders.onDragStart).not.toHaveBeenCalled();","start":{"line":91,"column":4,"index":3178}},{"frame":"  92 |\n  93 |     store.dispatch(moveDown());\n> 94 |     expect(responders.onDragStart).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  95 |     expect(responders.onDragUpdate).not.toHaveBeenCalled();\n  96 |\n  97 |     store.dispatch(","start":{"line":94,"column":4,"index":3270}},{"frame":"  92 |\n  93 |     store.dispatch(moveDown());\n> 94 |     expect(responders.onDragStart).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  95 |     expect(responders.onDragUpdate).not.toHaveBeenCalled();\n  96 |\n  97 |     store.dispatch(","start":{"line":94,"column":4,"index":3270}},{"frame":"  93 |     store.dispatch(moveDown());\n  94 |     expect(responders.onDragStart).not.toHaveBeenCalled();\n> 95 |     expect(responders.onDragUpdate).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  96 |\n  97 |     store.dispatch(\n  98 |       completeDrop({","start":{"line":95,"column":4,"index":3329}},{"frame":"  100 |       }),\n  101 |     );\n> 102 |     expect(responders.onDragStart).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  103 |     expect(responders.onDragUpdate).toHaveBeenCalledTimes(1);\n  104 |     expect(responders.onDragEnd).toHaveBeenCalledWith(\n  105 |       result,","start":{"line":102,"column":4,"index":3517}},{"frame":"  101 |     );\n  102 |     expect(responders.onDragStart).toHaveBeenCalledTimes(1);\n> 103 |     expect(responders.onDragUpdate).toHaveBeenCalledTimes(1);\n      |    ^ Duplicate Assert\n  104 |     expect(responders.onDragEnd).toHaveBeenCalledWith(\n  105 |       result,\n  106 |       expect.any(Object),","start":{"line":103,"column":4,"index":3578}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":7.752,"halstead":{"bugs":0.927,"difficulty":16.702,"effort":46469.858,"length":462,"time":2581.659,"vocabulary":65,"volume":2782.334,"operands":{"distinct":57,"total":238,"identifiers":["result","DropResult","getDragStart","destination","droppableId","initialPublishArgs","critical","droppable","id","index","2","combine","null","reason","\"DROP\"","jest","useFakeTimers","it","\"should trigger an on drag start after in the next cycle\"","responders","Responders","getResponders","store","Store","createStore","middleware","getAnnounce","dispatch","initialPublish","expect","onDragStart","not","toHaveBeenCalled","runOnlyPendingTimers","toHaveBeenCalledTimes","1","\"should queue a drag start if an action comes in while the timeout is pending\"","moveDown","onDragUpdate","\"should flush any pending responders if a drop occurs\"","moveUp","completeDrop","completed","getCompletedWithResult","getState","onDragEnd","toHaveBeenCalledWith","any","Object","\"should work across multiple drags\"","Array","from","length","4","forEach","onBeforeDragStart","mockReset"]},"operators":{"distinct":8,"total":224,"identifiers":["const","=","{}","... (spread)","()",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":129,"physical":117}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../../src/state/middleware/responders","type":"esm"},{"line":3,"path":"../util/create-store","type":"esm"},{"line":4,"path":"../../../../../src/types","type":"esm"},{"line":8,"path":"../../../../util/preset-action-args","type":"esm"},{"line":14,"path":"../../../../../src/state/action-creators","type":"esm"},{"line":15,"path":"../../../../../src/state/store-types","type":"esm"},{"line":16,"path":"./util/get-responders-stub","type":"esm"},{"line":17,"path":"./util/get-announce-stub","type":"esm"},{"line":18,"path":"./util/get-completed-with-result","type":"esm"}],"errors":[],"lineEnd":117,"lineStart":1,"maintainability":100.695,"methods":[{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.072,"difficulty":3.158,"effort":680.505,"length":47,"time":37.806,"vocabulary":24,"volume":215.493,"operands":{"distinct":19,"total":24,"identifiers":["responders","Responders","getResponders","store","Store","createStore","middleware","getAnnounce","dispatch","initialPublish","initialPublishArgs","expect","onDragStart","not","toHaveBeenCalled","jest","runOnlyPendingTimers","toHaveBeenCalledTimes","1"]},"operators":{"distinct":5,"total":23,"identifiers":["const","=","()","function=>","."]}},"paramCount":0,"sloc":{"logical":14,"physical":10},"errors":[],"lineEnd":41,"lineStart":32,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":34,"lineStart":34,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.113,"difficulty":4.405,"effort":1490.711,"length":72,"time":82.817,"vocabulary":26,"volume":338.432,"operands":{"distinct":21,"total":37,"identifiers":["responders","Responders","getResponders","store","Store","createStore","middleware","getAnnounce","dispatch","initialPublish","initialPublishArgs","expect","onDragStart","not","toHaveBeenCalled","moveDown","jest","runOnlyPendingTimers","toHaveBeenCalledTimes","1","onDragUpdate"]},"operators":{"distinct":5,"total":35,"identifiers":["const","=","()","function=>","."]}},"paramCount":0,"sloc":{"logical":20,"physical":15},"errors":[],"lineEnd":57,"lineStart":43,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":45,"lineStart":45,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.703,"halstead":{"bugs":0.25,"difficulty":8.633,"effort":6476.392,"length":144,"time":359.8,"vocabulary":37,"volume":750.161,"operands":{"distinct":30,"total":74,"identifiers":["responders","Responders","getResponders","store","Store","createStore","middleware","getAnnounce","dispatch","initialPublish","initialPublishArgs","expect","onDragStart","not","toHaveBeenCalled","onDragUpdate","moveDown","moveUp","completeDrop","completed","getCompletedWithResult","result","getState","toHaveBeenCalledTimes","1","2","onDragEnd","toHaveBeenCalledWith","any","Object"]},"operators":{"distinct":7,"total":70,"identifiers":["const","=","()","function=>",".","{}",":"]}},"paramCount":0,"sloc":{"logical":37,"physical":25},"errors":[],"lineEnd":83,"lineStart":59,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":61,"lineStart":61,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.042,"difficulty":3.5,"effort":438.676,"length":29,"time":24.371,"vocabulary":20,"volume":125.336,"operands":{"distinct":13,"total":13,"identifiers":["responders","Responders","getResponders","store","Store","createStore","middleware","getAnnounce","Array","from","length","4","forEach"]},"operators":{"distinct":7,"total":16,"identifiers":["const","=","()","function=>",".","{}",":"]}},"paramCount":0,"sloc":{"logical":11,"physical":32},"errors":[],"lineEnd":116,"lineStart":85,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":87,"lineStart":87,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.187,"difficulty":5.083,"effort":2859.174,"length":117,"time":158.843,"vocabulary":28,"volume":562.461,"operands":{"distinct":24,"total":61,"identifiers":["store","dispatch","initialPublish","initialPublishArgs","expect","responders","onBeforeDragStart","toHaveBeenCalled","onDragStart","not","moveDown","onDragUpdate","completeDrop","completed","getCompletedWithResult","result","getState","toHaveBeenCalledTimes","1","onDragEnd","toHaveBeenCalledWith","any","Object","mockReset"]},"operators":{"distinct":4,"total":56,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":27,"physical":28},"errors":[],"lineEnd":115,"lineStart":88,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.775,"halstead":{"bugs":0.093,"difficulty":1.67,"effort":4646.986,"length":46.2,"time":258.166,"vocabulary":6.5,"volume":278.233,"operands":{"distinct":5.7,"total":23.8},"operators":{"distinct":0.8,"total":22.4}},"paramCount":0,"sloc":{"logical":12.9,"physical":11.7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":47.516,"halstead":{"bugs":0.074,"difficulty":2.753,"effort":1327.273,"length":45.889,"time":73.737,"vocabulary":15.444,"volume":221.32,"operands":{"distinct":12.333,"total":23.667},"operators":{"distinct":3.111,"total":22.222}},"paramCount":0,"sloc":{"logical":12.556,"physical":12.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/responders/drop.spec.js","testCases":3,"smells":3,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  79 |\n  80 |   const state: State = store.getState();\n> 81 |   invariant(state.phase === 'DRAGGING');\n     |  ^ Eager Test\n  82 |   const destination: ?DraggableLocation = tryGetDestination(state.impact);\n  83 |   invariant(destination);\n  84 |   const fakeResult: DropResult = {","start":{"line":81,"column":2,"index":2551}},{"frame":"  80 |   const state: State = store.getState();\n  81 |   invariant(state.phase === 'DRAGGING');\n> 82 |   const destination: ?DraggableLocation = tryGetDestination(state.impact);\n     |                                          ^ Eager Test\n  83 |   invariant(destination);\n  84 |   const fakeResult: DropResult = {\n  85 |     ...getDragStart(),","start":{"line":82,"column":42,"index":2632}},{"frame":"  81 |   invariant(state.phase === 'DRAGGING');\n  82 |   const destination: ?DraggableLocation = tryGetDestination(state.impact);\n> 83 |   invariant(destination);\n     |  ^ Eager Test\n  84 |   const fakeResult: DropResult = {\n  85 |     ...getDragStart(),\n  86 |     // ensuring the destination is different to the current impact to ensure","start":{"line":83,"column":2,"index":2667}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":9.195,"halstead":{"bugs":0.576,"difficulty":12.458,"effort":21535.655,"length":283,"time":1196.425,"vocabulary":69,"volume":1728.712,"operands":{"distinct":59,"total":147,"identifiers":["result","DropResult","getDragStart","destination","droppableId","initialPublishArgs","critical","droppable","id","index","2","combine","null","reason","\"DROP\"","jest","useFakeTimers","it","\"should call the onDragEnd responder when a DROP_COMPLETE action occurs\"","responders","Responders","getResponders","store","Store","createStore","middleware","getAnnounce","dispatch","initialPublish","runOnlyPendingTimers","expect","onDragStart","toHaveBeenCalledTimes","1","completeDrop","completed","getCompletedWithResult","getState","onDragEnd","toHaveBeenCalledWith","any","Object","\"should throw an exception if there was no drag start published\"","borrowed","CompletedDrag","getSimpleStatePreset","dropAnimating","toThrow","\"Can only flush responders while dragging\"","\"should use the drop result and not the final impact\"","state","State","invariant","phase","\"DRAGGING\"","DraggableLocation","tryGetDestination","impact","fakeResult"]},"operators":{"distinct":10,"total":136,"identifiers":["const","=","{}","... (spread)","()",":",".","function=>","===","+"]}},"paramCount":0,"sloc":{"logical":87,"physical":106}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":8,"path":"../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../src/invariant","type":"esm"},{"line":10,"path":"../../../../../src/state/store-types","type":"esm"},{"line":11,"path":"../../../../../src/state/middleware/responders","type":"esm"},{"line":12,"path":"../util/create-store","type":"esm"},{"line":16,"path":"../../../../util/preset-action-args","type":"esm"},{"line":20,"path":"../../../../../src/state/action-creators","type":"esm"},{"line":21,"path":"./util/get-responders-stub","type":"esm"},{"line":22,"path":"./util/get-announce-stub","type":"esm"},{"line":23,"path":"./util/get-completed-with-result","type":"esm"},{"line":24,"path":"../../../../util/get-simple-state-preset","type":"esm"},{"line":25,"path":"../../../../../src/state/get-impact-location","type":"esm"}],"errors":[],"lineEnd":106,"lineStart":1,"maintainability":105.328,"methods":[{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.113,"difficulty":4.712,"effort":1592.379,"length":67,"time":88.466,"vocabulary":33,"volume":337.974,"operands":{"distinct":26,"total":35,"identifiers":["responders","Responders","getResponders","store","Store","createStore","middleware","getAnnounce","dispatch","initialPublish","initialPublishArgs","jest","runOnlyPendingTimers","expect","onDragStart","toHaveBeenCalledTimes","1","completeDrop","completed","getCompletedWithResult","result","getState","onDragEnd","toHaveBeenCalledWith","any","Object"]},"operators":{"distinct":7,"total":32,"identifiers":["const","=","()","function=>",".","{}",":"]}},"paramCount":0,"sloc":{"logical":20,"physical":15},"errors":[],"lineEnd":53,"lineStart":39,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":41,"lineStart":41,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.051,"difficulty":2.5,"effort":384.328,"length":35,"time":21.352,"vocabulary":21,"volume":153.731,"operands":{"distinct":16,"total":16,"identifiers":["responders","Responders","getResponders","store","Store","createStore","middleware","getAnnounce","borrowed","CompletedDrag","getSimpleStatePreset","dropAnimating","completed","expect","toThrow","\"Can only flush responders while dragging\""]},"operators":{"distinct":5,"total":19,"identifiers":["const","=","()","function=>","."]}},"paramCount":0,"sloc":{"logical":13,"physical":16},"errors":[],"lineEnd":70,"lineStart":55,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":57,"lineStart":57,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.011,"difficulty":2,"effort":63.399,"length":10,"time":3.522,"vocabulary":9,"volume":31.699,"operands":{"distinct":5,"total":5,"identifiers":["store","dispatch","completeDrop","completed","borrowed"]},"operators":{"distinct":4,"total":5,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":4,"physical":6},"errors":[],"lineEnd":68,"lineStart":63,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.03,"halstead":{"bugs":0.235,"difficulty":7.558,"effort":5324.968,"length":123,"time":295.832,"vocabulary":53,"volume":704.534,"operands":{"distinct":43,"total":65,"identifiers":["responders","Responders","getResponders","store","Store","createStore","middleware","getAnnounce","dispatch","initialPublish","initialPublishArgs","jest","runOnlyPendingTimers","expect","onDragStart","toHaveBeenCalledTimes","1","state","State","getState","invariant","phase","\"DRAGGING\"","destination","DraggableLocation","tryGetDestination","impact","fakeResult","DropResult","getDragStart","droppableId","index","combine","null","reason","\"DROP\"","completeDrop","completed","getCompletedWithResult","onDragEnd","toHaveBeenCalledWith","any","Object"]},"operators":{"distinct":10,"total":58,"identifiers":["const","=","()","function=>",".","===","{}","... (spread)",":","+"]}},"paramCount":0,"sloc":{"logical":33,"physical":34},"errors":[],"lineEnd":105,"lineStart":72,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":74,"lineStart":74,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.149,"halstead":{"bugs":0.072,"difficulty":1.557,"effort":2691.957,"length":35.375,"time":149.553,"vocabulary":8.625,"volume":216.089,"operands":{"distinct":7.375,"total":18.375},"operators":{"distinct":1.25,"total":17}},"paramCount":0,"sloc":{"logical":10.875,"physical":13.25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":48.675,"halstead":{"bugs":0.058,"difficulty":2.396,"effort":1052.153,"length":34,"time":58.453,"vocabulary":17,"volume":175.42,"operands":{"distinct":13.286,"total":17.714},"operators":{"distinct":3.714,"total":16.286}},"paramCount":0,"sloc":{"logical":10.429,"physical":10.571}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/responders/announcements.spec.js","testCases":5,"smells":15,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  141 |     it('should announce with the default message if no responder is provided', () => {\n  142 |       // This test is not relevant for onDragEnd as it must always be provided\n> 143 |       if (current.responder === 'onDragEnd') {\n      |      ^ Conditional Test Logic\n  144 |         expect(true).toBe(true);\n  145 |         return;\n  146 |       }","start":{"line":143,"column":6,"index":3774}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  161 |           announce.mockReset();\n  162 |           provided.announce('hello');\n> 163 |           expect(announce).toHaveBeenCalledWith('hello');\n      |          ^ Duplicate Assert\n  164 |           // asserting there was no double call\n  165 |           expect(announce).toHaveBeenCalledTimes(1);\n  166 |         },","start":{"line":163,"column":10,"index":4524}},{"frame":"  163 |           expect(announce).toHaveBeenCalledWith('hello');\n  164 |           // asserting there was no double call\n> 165 |           expect(announce).toHaveBeenCalledTimes(1);\n      |          ^ Duplicate Assert\n  166 |         },\n  167 |       );\n  168 |","start":{"line":165,"column":10,"index":4630}},{"frame":"  184 |\n  185 |       // We did not announce so it would have been called with the default message\n> 186 |       expect(announce).toHaveBeenCalledWith(current.defaultMessage);\n      |      ^ Duplicate Assert\n  187 |       expect(announce).toHaveBeenCalledTimes(1);\n  188 |       expect(warn).not.toHaveBeenCalled();\n  189 |       announce.mockReset();","start":{"line":186,"column":6,"index":5208}},{"frame":"  185 |       // We did not announce so it would have been called with the default message\n  186 |       expect(announce).toHaveBeenCalledWith(current.defaultMessage);\n> 187 |       expect(announce).toHaveBeenCalledTimes(1);\n      |      ^ Duplicate Assert\n  188 |       expect(warn).not.toHaveBeenCalled();\n  189 |       announce.mockReset();\n  190 |","start":{"line":187,"column":6,"index":5277}},{"frame":"  186 |       expect(announce).toHaveBeenCalledWith(current.defaultMessage);\n  187 |       expect(announce).toHaveBeenCalledTimes(1);\n> 188 |       expect(warn).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  189 |       announce.mockReset();\n  190 |\n  191 |       // perform an async message","start":{"line":188,"column":6,"index":5326}},{"frame":"  193 |       jest.runOnlyPendingTimers();\n  194 |\n> 195 |       expect(announce).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  196 |       expect(warn).toHaveBeenCalled();\n  197 |\n  198 |       // cleanup","start":{"line":195,"column":6,"index":5528}},{"frame":"  194 |\n  195 |       expect(announce).not.toHaveBeenCalled();\n> 196 |       expect(warn).toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  197 |\n  198 |       // cleanup\n  199 |       warn.mockRestore();","start":{"line":196,"column":6,"index":5575}},{"frame":"  214 |       current.execute(store);\n  215 |\n> 216 |       expect(announce).toHaveBeenCalledWith('hello');\n      |      ^ Duplicate Assert\n  217 |       expect(announce).toHaveBeenCalledTimes(1);\n  218 |       expect(warn).not.toHaveBeenCalled();\n  219 |       announce.mockReset();","start":{"line":216,"column":6,"index":6115}},{"frame":"  215 |\n  216 |       expect(announce).toHaveBeenCalledWith('hello');\n> 217 |       expect(announce).toHaveBeenCalledTimes(1);\n      |      ^ Duplicate Assert\n  218 |       expect(warn).not.toHaveBeenCalled();\n  219 |       announce.mockReset();\n  220 |","start":{"line":217,"column":6,"index":6169}},{"frame":"  216 |       expect(announce).toHaveBeenCalledWith('hello');\n  217 |       expect(announce).toHaveBeenCalledTimes(1);\n> 218 |       expect(warn).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  219 |       announce.mockReset();\n  220 |\n  221 |       // perform another announcement","start":{"line":218,"column":6,"index":6218}},{"frame":"  223 |       provided.announce('another one');\n  224 |\n> 225 |       expect(announce).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  226 |       expect(warn).toHaveBeenCalled();\n  227 |\n  228 |       warn.mockRestore();","start":{"line":225,"column":6,"index":6419}},{"frame":"  224 |\n  225 |       expect(announce).not.toHaveBeenCalled();\n> 226 |       expect(warn).toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  227 |\n  228 |       warn.mockRestore();\n  229 |     });","start":{"line":226,"column":6,"index":6466}}]},{"name":"Redundant Assertion","packageName":"redundantAssertion","items":[{"frame":"  142 |       // This test is not relevant for onDragEnd as it must always be provided\n  143 |       if (current.responder === 'onDragEnd') {\n> 144 |         expect(true).toBe(true);\n      |        ^ Redundant Assertion\n  145 |         return;\n  146 |       }\n  147 |       // unsetting responder","start":{"column":8,"line":144}}]},{"name":"Sleepy Test","packageName":"sleepyTest","items":[{"frame":"  190 |\n  191 |       // perform an async message\n> 192 |       setTimeout(() => provided.announce('async message'));\n      |      ^ Sleepy Test\n  193 |       jest.runOnlyPendingTimers();\n  194 |\n  195 |       expect(announce).not.toHaveBeenCalled();","start":{"line":192,"column":6,"index":5432}}]}],"metrics":{"aggregate":{"cyclomatic":25,"cyclomaticDensity":14.535,"halstead":{"bugs":1.464,"difficulty":29.824,"effort":131008.276,"length":636,"time":7278.238,"vocabulary":120,"volume":4392.782,"operands":{"distinct":102,"total":338,"identifiers":["jest","useFakeTimers","Case","responder","description","execute","store","Store","defaultMessage","moveForwardUpdate","DragUpdate","getDragStart","destination","droppableId","initialPublishArgs","critical","droppable","id","index","draggable","1","combine","null","combineUpdate","draggableId","preset","inHome2","descriptor","start","dispatch","initialPublish","runOnlyPendingTimers","update","moveDown","end","result","DropResult","reason","\"DROP\"","completeDrop","completed","getCompletedWithResult","getState","cases","\"onDragStart\"","messagePreset","onDragStart","\"onDragUpdate\"","\"a reorder update\"","onDragUpdate","\"a combine update\"","updateDroppableIsCombineEnabled","isCombineEnabled","true","\"onDragEnd\"","onDragEnd","forEach","current","describe",": ","\"\"","for responder: ","responders","Responders","announce","JestMockFn","beforeEach","createResponders","getAnnounce","createStore","middleware","it","\"should announce with the default message if no responder is provided\"","expect","toBe","undefined","toHaveBeenCalledWith","\"should announce with the default message if the responder does not announce\"","\"should not announce twice if the responder makes an announcement\"","fn","data","provided","mockReset","\"hello\"","toHaveBeenCalledTimes","\"should prevent async announcements\"","warn","spyOn","console","\"warn\"","mockImplementation","ResponderProvided","supplied","not","toHaveBeenCalled","setTimeout","\"async message\"","mockRestore","\"should prevent multiple announcement calls from a consumer\"","invariant","\"provided is not set\"","\"another one\""]},"operators":{"distinct":18,"total":298,"identifiers":["()",".","const","=","{}","... (spread)",":","+","function=>","[]",",","``","${}",":?","let","if","===","return"]}},"paramCount":14,"sloc":{"logical":172,"physical":232}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../../src/invariant","type":"esm"},{"line":8,"path":"../../../../../src/state/action-creators","type":"esm"},{"line":9,"path":"../../../../../src/state/middleware/responders","type":"esm"},{"line":10,"path":"../../../../../src/screen-reader-message-preset","type":"esm"},{"line":15,"path":"../../../../util/preset-action-args","type":"esm"},{"line":16,"path":"../util/create-store","type":"esm"},{"line":22,"path":"../../../../../src/types","type":"esm"},{"line":23,"path":"../../../../../src/state/store-types","type":"esm"},{"line":24,"path":"./util/get-responders-stub","type":"esm"},{"line":25,"path":"./util/get-announce-stub","type":"esm"},{"line":26,"path":"./util/get-completed-with-result","type":"esm"}],"errors":[],"lineEnd":232,"lineStart":1,"maintainability":108.748,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.008,"difficulty":1,"effort":25.266,"length":9,"time":1.404,"vocabulary":7,"volume":25.266,"operands":{"distinct":5,"total":5,"identifiers":["dispatch","initialPublish","initialPublishArgs","jest","runOnlyPendingTimers"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":59,"lineStart":55,"name":"<anon method-1>","paramNames":["dispatch"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.007,"difficulty":1,"effort":20.68,"length":8,"time":1.149,"vocabulary":6,"volume":20.68,"operands":{"distinct":4,"total":4,"identifiers":["dispatch","moveDown","jest","runOnlyPendingTimers"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":65,"lineStart":61,"name":"<anon method-2>","paramNames":["dispatch"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.036,"difficulty":4.136,"effort":448.456,"length":26,"time":24.914,"vocabulary":18,"volume":108.418,"operands":{"distinct":11,"total":13,"identifiers":["result","DropResult","moveForwardUpdate","reason","\"DROP\"","store","dispatch","completeDrop","completed","getCompletedWithResult","getState"]},"operators":{"distinct":7,"total":13,"identifiers":["const","=","{}","... (spread)",":","()","."]}},"paramCount":1,"sloc":{"logical":7,"physical":11},"errors":[],"lineEnd":77,"lineStart":67,"name":"<anon method-3>","paramNames":["store"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["start","store","dispatch"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":84,"lineStart":82,"name":"<anon method-4>","paramNames":["store"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":38.774,"length":10,"time":2.154,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":6,"identifiers":["start","store","dispatch","update"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":94,"lineStart":91,"name":"<anon method-5>","paramNames":["store"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.038,"difficulty":2.909,"effort":329.599,"length":29,"time":18.311,"vocabulary":15,"volume":113.3,"operands":{"distinct":11,"total":16,"identifiers":["start","store","dispatch","updateDroppableIsCombineEnabled","id","initialPublishArgs","critical","droppable","isCombineEnabled","true","update"]},"operators":{"distinct":4,"total":13,"identifiers":["()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":6,"physical":10},"errors":[],"lineEnd":110,"lineStart":101,"name":"<anon method-6>","paramNames":["store"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.012,"difficulty":1.6,"effort":58.393,"length":13,"time":3.244,"vocabulary":7,"volume":36.496,"operands":{"distinct":5,"total":8,"identifiers":["start","store","dispatch","update","end"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":119,"lineStart":115,"name":"<anon method-7>","paramNames":["store"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":100,"halstead":{"bugs":0.026,"difficulty":4.286,"effort":333.04,"length":21,"time":18.502,"vocabulary":13,"volume":77.709,"operands":{"distinct":7,"total":10,"identifiers":["describe","current","responder","description",": ","\"\"","for responder: "]},"operators":{"distinct":6,"total":11,"identifiers":["()","``","${}",".",":?","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":105},"errors":[],"lineEnd":231,"lineStart":127,"name":"<anon method-8>","paramNames":["current"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.043,"difficulty":1.962,"effort":251.077,"length":32,"time":13.949,"vocabulary":16,"volume":128,"operands":{"distinct":13,"total":17,"identifiers":["responders","Responders","announce","JestMockFn","store","Store","beforeEach","it","\"should announce with the default message if no responder is provided\"","\"should announce with the default message if the responder does not announce\"","\"should not announce twice if the responder makes an announcement\"","\"should prevent async announcements\"","\"should prevent multiple announcement calls from a consumer\""]},"operators":{"distinct":3,"total":15,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":15,"physical":101},"errors":[],"lineEnd":230,"lineStart":130,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.018,"difficulty":1.714,"effort":91.116,"length":16,"time":5.062,"vocabulary":10,"volume":53.151,"operands":{"distinct":7,"total":8,"identifiers":["responders","createResponders","announce","getAnnounce","store","createStore","middleware"]},"operators":{"distinct":3,"total":8,"identifiers":["=","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":139,"lineStart":135,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":138,"lineStart":138,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":25,"halstead":{"bugs":0.05,"difficulty":5.115,"effort":773.791,"length":35,"time":42.988,"vocabulary":20,"volume":151.267,"operands":{"distinct":13,"total":19,"identifiers":["current","responder","\"onDragEnd\"","expect","true","toBe","responders","undefined","execute","store","announce","toHaveBeenCalledWith","defaultMessage"]},"operators":{"distinct":7,"total":16,"identifiers":["if","===",".","()","return","=","[]"]}},"paramCount":0,"sloc":{"logical":8,"physical":11},"errors":[],"lineEnd":151,"lineStart":141,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.015,"difficulty":1.143,"effort":50.719,"length":14,"time":2.818,"vocabulary":9,"volume":44.379,"operands":{"distinct":7,"total":8,"identifiers":["current","execute","store","expect","announce","toHaveBeenCalledWith","defaultMessage"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":156,"lineStart":153,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.023,"difficulty":2.778,"effort":190.368,"length":18,"time":10.576,"vocabulary":14,"volume":68.532,"operands":{"distinct":9,"total":10,"identifiers":["responders","current","responder","jest","fn","data","provided","execute","store"]},"operators":{"distinct":5,"total":8,"identifiers":["=","[]",".","()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":13},"errors":[],"lineEnd":170,"lineStart":158,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.025,"difficulty":1.625,"effort":124.157,"length":23,"time":6.898,"vocabulary":10,"volume":76.404,"operands":{"distinct":8,"total":13,"identifiers":["announce","mockReset","provided","\"hello\"","expect","toHaveBeenCalledWith","toHaveBeenCalledTimes","1"]},"operators":{"distinct":2,"total":10,"identifiers":["()","."]}},"paramCount":2,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":166,"lineStart":160,"name":"<anon method-15>","paramNames":["data","provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.149,"difficulty":5.625,"effort":2510.143,"length":87,"time":139.452,"vocabulary":35,"volume":446.248,"operands":{"distinct":28,"total":45,"identifiers":["warn","jest","spyOn","console","\"warn\"","mockImplementation","provided","ResponderProvided","responders","current","responder","fn","data","supplied","execute","store","expect","announce","toHaveBeenCalledWith","defaultMessage","toHaveBeenCalledTimes","1","not","toHaveBeenCalled","mockReset","setTimeout","runOnlyPendingTimers","mockRestore"]},"operators":{"distinct":7,"total":42,"identifiers":["const","=","()",".","function=>","let","[]"]}},"paramCount":0,"sloc":{"logical":24,"physical":29},"errors":[],"lineEnd":200,"lineStart":172,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":173,"lineStart":173,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["announce","mockReset","provided","supplied"]},"operators":{"distinct":3,"total":3,"identifiers":["()",".","="]}},"paramCount":2,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":180,"lineStart":177,"name":"<anon method-18>","paramNames":["data","supplied"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["provided","announce","\"async message\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":192,"lineStart":192,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.15,"difficulty":5.672,"effort":2551.358,"length":87,"time":141.742,"vocabulary":36,"volume":449.783,"operands":{"distinct":29,"total":47,"identifiers":["warn","jest","spyOn","console","\"warn\"","mockImplementation","provided","ResponderProvided","responders","current","responder","fn","data","supplied","execute","store","expect","announce","toHaveBeenCalledWith","\"hello\"","toHaveBeenCalledTimes","1","not","toHaveBeenCalled","mockReset","invariant","\"provided is not set\"","\"another one\"","mockRestore"]},"operators":{"distinct":7,"total":40,"identifiers":["const","=","()",".","function=>","let","[]"]}},"paramCount":0,"sloc":{"logical":23,"physical":28},"errors":[],"lineEnd":229,"lineStart":202,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":203,"lineStart":203,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.012,"difficulty":2.1,"effort":75.6,"length":12,"time":4.2,"vocabulary":8,"volume":36,"operands":{"distinct":5,"total":7,"identifiers":["announce","mockReset","provided","supplied","\"hello\""]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","="]}},"paramCount":2,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":211,"lineStart":207,"name":"<anon method-22>","paramNames":["data","supplied"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.087,"cyclomaticDensity":0.632,"halstead":{"bugs":0.064,"difficulty":1.297,"effort":5696.012,"length":27.652,"time":316.445,"vocabulary":5.217,"volume":190.991,"operands":{"distinct":4.435,"total":14.696},"operators":{"distinct":0.783,"total":12.957}},"paramCount":0.609,"sloc":{"logical":7.478,"physical":10.087}},"methodAverage":{"cyclomatic":1.091,"cyclomaticDensity":33.726,"halstead":{"bugs":0.029,"difficulty":2.167,"effort":360.238,"length":20.818,"time":20.013,"vocabulary":11.273,"volume":86.562,"operands":{"distinct":8.045,"total":11.227},"operators":{"distinct":3.227,"total":9.591}},"paramCount":0.636,"sloc":{"logical":5.727,"physical":16.318}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/responders/abort.spec.js","testCases":4,"smells":6,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  101 |     }),\n  102 |   );\n> 103 |   expect(responders.onDragEnd).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  104 |   // $ExpectError - mock\n  105 |   responders.onDragEnd.mockReset();\n  106 |","start":{"line":103,"column":2,"index":3075}},{"frame":"  107 |   // abort\n  108 |   store.dispatch(flush());\n> 109 |   expect(responders.onDragEnd).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  110 | });\n  111 |\n  112 | it('should publish an on drag end if aborted before the publish of an onDragStart', () => {","start":{"line":109,"column":2,"index":3232}},{"frame":"  118 |   store.dispatch(initialPublish(initialPublishArgs));\n  119 |   // onDragStart not flushed yet\n> 120 |   expect(responders.onDragStart).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  121 |\n  122 |   // drop\n  123 |   const result: DropResult = {","start":{"line":120,"column":2,"index":3643}},{"frame":"  135 |\n  136 |   // validation - onDragStart has been flushed\n> 137 |   expect(responders.onDragStart).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  138 | });\n  139 |","start":{"line":137,"column":2,"index":4056}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  57 |\n  58 |   const state: State = store.getState();\n> 59 |   invariant(state.phase === 'DRAGGING');\n     |  ^ Eager Test\n  60 |   // in home location\n  61 |   const home: DraggableLocation = {\n  62 |     droppableId: initialPublishArgs.critical.droppable.id,","start":{"line":59,"column":2,"index":1878}},{"frame":"  63 |     index: initialPublishArgs.critical.draggable.index,\n  64 |   };\n> 65 |   expect(tryGetDestination(state.impact)).toEqual(home);\n     |         ^ Eager Test\n  66 |\n  67 |   store.dispatch(flush());\n  68 |   const expected: DropResult = {","start":{"line":65,"column":9,"index":2104}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":7.143,"halstead":{"bugs":0.857,"difficulty":16.5,"effort":42432.865,"length":421,"time":2357.381,"vocabulary":69,"volume":2571.689,"operands":{"distinct":60,"total":220,"identifiers":["jest","useFakeTimers","it","\"should call onDragEnd with the last published critical descriptor\"","responders","Responders","createResponders","store","Store","createStore","middleware","getAnnounce","dispatch","flush","initialPublish","initialPublishArgs","runOnlyPendingTimers","expect","onDragStart","toHaveBeenCalledTimes","1","expected","DropResult","getDragStart","destination","null","combine","reason","\"CANCEL\"","onDragEnd","toHaveBeenCalledWith","any","Object","\"should publish an onDragEnd with no destination even if there is a current destination\"","state","State","getState","invariant","phase","\"DRAGGING\"","home","DraggableLocation","droppableId","critical","droppable","id","index","draggable","tryGetDestination","impact","toEqual","\"should not publish an onDragEnd if aborted after a drop\"","toHaveBeenCalled","result","completeDrop","completed","getCompletedWithResult","mockReset","not","\"should publish an on drag end if aborted before the publish of an onDragStart\""]},"operators":{"distinct":9,"total":201,"identifiers":["()",".","function=>","const","=","{}","... (spread)",":","==="]}},"paramCount":0,"sloc":{"logical":126,"physical":139}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":7,"path":"../../../../../src/types","type":"esm"},{"line":8,"path":"../../../../../src/invariant","type":"esm"},{"line":9,"path":"../../../../../src/state/store-types","type":"esm"},{"line":14,"path":"../../../../../src/state/action-creators","type":"esm"},{"line":15,"path":"../../../../../src/state/middleware/responders","type":"esm"},{"line":19,"path":"../../../../util/preset-action-args","type":"esm"},{"line":20,"path":"../util/create-store","type":"esm"},{"line":21,"path":"./util/get-announce-stub","type":"esm"},{"line":22,"path":"./util/get-responders-stub","type":"esm"},{"line":23,"path":"./util/get-completed-with-result","type":"esm"},{"line":24,"path":"../../../../../src/state/get-impact-location","type":"esm"}],"errors":[],"lineEnd":139,"lineStart":1,"maintainability":99.319,"methods":[{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.14,"difficulty":5.6,"effort":2351.072,"length":80,"time":130.615,"vocabulary":38,"volume":419.834,"operands":{"distinct":30,"total":42,"identifiers":["responders","Responders","createResponders","store","Store","createStore","middleware","getAnnounce","dispatch","flush","initialPublish","initialPublishArgs","jest","runOnlyPendingTimers","expect","onDragStart","toHaveBeenCalledTimes","1","expected","DropResult","getDragStart","destination","null","combine","reason","\"CANCEL\"","onDragEnd","toHaveBeenCalledWith","any","Object"]},"operators":{"distinct":8,"total":38,"identifiers":["const","=","()","function=>",".","{}","... (spread)",":"]}},"paramCount":0,"sloc":{"logical":24,"physical":21},"errors":[],"lineEnd":48,"lineStart":28,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":30,"lineStart":30,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.229,"difficulty":6.443,"effort":4428.724,"length":120,"time":246.04,"vocabulary":53,"volume":687.35,"operands":{"distinct":44,"total":63,"identifiers":["responders","Responders","createResponders","store","Store","createStore","middleware","getAnnounce","dispatch","flush","initialPublish","initialPublishArgs","jest","runOnlyPendingTimers","state","State","getState","invariant","phase","\"DRAGGING\"","home","DraggableLocation","droppableId","critical","droppable","id","index","draggable","expect","tryGetDestination","impact","toEqual","expected","DropResult","getDragStart","destination","null","combine","reason","\"CANCEL\"","onDragEnd","toHaveBeenCalledWith","any","Object"]},"operators":{"distinct":9,"total":57,"identifiers":["const","=","()","function=>",".","===","{}",":","... (spread)"]}},"paramCount":0,"sloc":{"logical":31,"physical":30},"errors":[],"lineEnd":79,"lineStart":50,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":52,"lineStart":52,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.191,"difficulty":6.353,"effort":3631.25,"length":106,"time":201.736,"vocabulary":42,"volume":571.586,"operands":{"distinct":34,"total":54,"identifiers":["responders","Responders","createResponders","store","Store","createStore","middleware","getAnnounce","dispatch","flush","initialPublish","initialPublishArgs","jest","runOnlyPendingTimers","expect","onDragStart","toHaveBeenCalled","result","DropResult","getDragStart","destination","null","combine","reason","\"CANCEL\"","completeDrop","completed","getCompletedWithResult","getState","onDragEnd","toHaveBeenCalledTimes","1","mockReset","not"]},"operators":{"distinct":8,"total":52,"identifiers":["const","=","()","function=>",".","{}","... (spread)",":"]}},"paramCount":0,"sloc":{"logical":31,"physical":30},"errors":[],"lineEnd":110,"lineStart":81,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":83,"lineStart":83,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.16,"difficulty":6.065,"effort":2916.86,"length":91,"time":162.048,"vocabulary":39,"volume":480.972,"operands":{"distinct":31,"total":47,"identifiers":["responders","Responders","createResponders","store","Store","createStore","middleware","getAnnounce","dispatch","flush","initialPublish","initialPublishArgs","expect","onDragStart","not","toHaveBeenCalled","result","DropResult","getDragStart","destination","null","combine","reason","\"CANCEL\"","completeDrop","completed","getCompletedWithResult","getState","onDragEnd","toHaveBeenCalledTimes","1"]},"operators":{"distinct":8,"total":44,"identifiers":["const","=","()","function=>",".","{}","... (spread)",":"]}},"paramCount":0,"sloc":{"logical":27,"physical":27},"errors":[],"lineEnd":138,"lineStart":112,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["responders"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":114,"lineStart":114,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.794,"halstead":{"bugs":0.095,"difficulty":1.833,"effort":4714.763,"length":46.778,"time":261.931,"vocabulary":7.667,"volume":285.743,"operands":{"distinct":6.667,"total":24.444},"operators":{"distinct":1,"total":22.333}},"paramCount":0,"sloc":{"logical":14,"physical":15.444}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":51.79,"halstead":{"bugs":0.09,"difficulty":3.058,"effort":1665.988,"length":50.125,"time":92.555,"vocabulary":22,"volume":269.968,"operands":{"distinct":17.875,"total":26.25},"operators":{"distinct":4.125,"total":23.875}},"paramCount":0,"sloc":{"logical":14.625,"physical":14}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/drop/timing.spec.js","testCases":3,"smells":8,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  29 |   store.dispatch(flush());\n  30 |   store.dispatch(initialPublish(initialPublishArgs));\n> 31 |   expect(store.getState().phase).toBe('DRAGGING');\n     |  ^ Duplicate Assert\n  32 |\n  33 |   // moving a little bit so that a drop animation will be needed\n  34 |   store.dispatch(","start":{"line":31,"column":2,"index":1073}},{"frame":"  39 |\n  40 |   store.dispatch(drop({ reason: 'DROP' }));\n> 41 |   expect(store.getState().phase).toBe('DROP_ANIMATING');\n     |  ^ Duplicate Assert\n  42 |\n  43 |   expect(() => store.dispatch(drop({ reason: 'DROP' }))).toThrow();\n  44 | });","start":{"line":41,"column":2,"index":1348}},{"frame":"  49 |\n  50 |   store.dispatch(initialPublish(initialPublishArgs));\n> 51 |   expect(store.getState().phase).toBe('DRAGGING');\n     |  ^ Duplicate Assert\n  52 |   store.dispatch(collectionStarting());\n  53 |\n  54 |   // now in the bulk collecting phase","start":{"line":51,"column":2,"index":1693}},{"frame":"  53 |\n  54 |   // now in the bulk collecting phase\n> 55 |   expect(store.getState().phase).toBe('COLLECTING');\n     |  ^ Duplicate Assert\n  56 |   mock.mockReset();\n  57 |\n  58 |   // drop","start":{"line":55,"column":2,"index":1823}},{"frame":"  59 |   store.dispatch(drop({ reason: 'DROP' }));\n  60 |\n> 61 |   expect(mock).toHaveBeenCalledWith(drop({ reason: 'DROP' }));\n     |  ^ Duplicate Assert\n  62 |   expect(mock).toHaveBeenCalledWith(dropPending({ reason: 'DROP' }));\n  63 |   expect(mock).toHaveBeenCalledTimes(2);\n  64 |   expect(store.getState().phase).toBe('DROP_PENDING');","start":{"line":61,"column":2,"index":1952}},{"frame":"  60 |\n  61 |   expect(mock).toHaveBeenCalledWith(drop({ reason: 'DROP' }));\n> 62 |   expect(mock).toHaveBeenCalledWith(dropPending({ reason: 'DROP' }));\n     |  ^ Duplicate Assert\n  63 |   expect(mock).toHaveBeenCalledTimes(2);\n  64 |   expect(store.getState().phase).toBe('DROP_PENDING');\n  65 | });","start":{"line":62,"column":2,"index":2015}},{"frame":"  61 |   expect(mock).toHaveBeenCalledWith(drop({ reason: 'DROP' }));\n  62 |   expect(mock).toHaveBeenCalledWith(dropPending({ reason: 'DROP' }));\n> 63 |   expect(mock).toHaveBeenCalledTimes(2);\n     |  ^ Duplicate Assert\n  64 |   expect(store.getState().phase).toBe('DROP_PENDING');\n  65 | });\n  66 |","start":{"line":63,"column":2,"index":2085}},{"frame":"  62 |   expect(mock).toHaveBeenCalledWith(dropPending({ reason: 'DROP' }));\n  63 |   expect(mock).toHaveBeenCalledTimes(2);\n> 64 |   expect(store.getState().phase).toBe('DROP_PENDING');\n     |  ^ Duplicate Assert\n  65 | });\n  66 |\n  67 | it('should throw if a drop action is fired and there is DROP_PENDING and it is waiting for a publish', () => {","start":{"line":64,"column":2,"index":2126}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":6.731,"halstead":{"bugs":0.665,"difficulty":14.204,"effort":28334.989,"length":342,"time":1574.166,"vocabulary":57,"volume":1994.848,"operands":{"distinct":49,"total":174,"identifiers":["it","\"should throw an error if a drop action occurs while not in a phase where you can drop\"","store","Store","createStore","middleware","expect","dispatch","drop","reason","\"DROP\"","not","toThrow","flush","initialPublish","initialPublishArgs","getState","phase","toBe","\"DRAGGING\"","move","client","add","clientSelection","x","1","y","\"DROP_ANIMATING\"","\"should dispatch a DROP_PENDING action if COLLECTING\"","mock","jest","fn","passThrough","collectionStarting","\"COLLECTING\"","mockReset","toHaveBeenCalledWith","dropPending","toHaveBeenCalledTimes","2","\"DROP_PENDING\"","\"should throw if a drop action is fired and there is DROP_PENDING and it is waiting for a publish\"","state","State","invariant","\"invalid phase\"","isWaiting","true","\"A DROP action occurred while DROP_PENDING and still waiting\""]},"operators":{"distinct":8,"total":168,"identifiers":["()","function=>","const","=",".","{}",":","==="]}},"paramCount":0,"sloc":{"logical":104,"physical":93}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../../src/invariant","type":"esm"},{"line":10,"path":"../../../../../src/state/action-creators","type":"esm"},{"line":11,"path":"../../../../../src/state/middleware/drop","type":"esm"},{"line":12,"path":"../../../../../src/state/position","type":"esm"},{"line":13,"path":"../../../../util/preset-action-args","type":"esm"},{"line":14,"path":"../util/create-store","type":"esm"},{"line":15,"path":"../util/pass-through-middleware","type":"esm"},{"line":16,"path":"../../../../../src/types","type":"esm"},{"line":17,"path":"../../../../../src/state/store-types","type":"esm"}],"errors":[],"lineEnd":93,"lineStart":1,"maintainability":98.878,"methods":[{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.15,"difficulty":5.923,"effort":2659.172,"length":89,"time":147.732,"vocabulary":33,"volume":448.951,"operands":{"distinct":26,"total":44,"identifiers":["store","Store","createStore","middleware","expect","not","toThrow","dispatch","flush","initialPublish","initialPublishArgs","getState","phase","toBe","\"DRAGGING\"","move","client","add","clientSelection","x","1","y","drop","reason","\"DROP\"","\"DROP_ANIMATING\""]},"operators":{"distinct":7,"total":45,"identifiers":["const","=","()",".","function=>","{}",":"]}},"paramCount":0,"sloc":{"logical":27,"physical":26},"errors":[],"lineEnd":44,"lineStart":19,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.011,"difficulty":2,"effort":63.399,"length":10,"time":3.522,"vocabulary":9,"volume":31.699,"operands":{"distinct":5,"total":5,"identifiers":["store","dispatch","drop","reason","\"DROP\""]},"operators":{"distinct":4,"total":5,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":26,"lineStart":24,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.011,"difficulty":2,"effort":63.399,"length":10,"time":3.522,"vocabulary":9,"volume":31.699,"operands":{"distinct":5,"total":5,"identifiers":["store","dispatch","drop","reason","\"DROP\""]},"operators":{"distinct":4,"total":5,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":4,"physical":1},"errors":[],"lineEnd":43,"lineStart":43,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.187,"difficulty":6.333,"effort":3546.209,"length":111,"time":197.012,"vocabulary":33,"volume":559.928,"operands":{"distinct":27,"total":57,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","middleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","collectionStarting","\"COLLECTING\"","mockReset","drop","reason","\"DROP\"","toHaveBeenCalledWith","dropPending","toHaveBeenCalledTimes","2","\"DROP_PENDING\""]},"operators":{"distinct":6,"total":54,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":32,"physical":20},"errors":[],"lineEnd":65,"lineStart":46,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.177,"difficulty":6.5,"effort":3459.253,"length":100,"time":192.181,"vocabulary":40,"volume":532.193,"operands":{"distinct":32,"total":52,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","middleware","dispatch","initialPublish","initialPublishArgs","collectionStarting","expect","getState","phase","toBe","\"COLLECTING\"","mockReset","drop","reason","\"DROP\"","toHaveBeenCalledWith","dropPending","state","State","invariant","\"DROP_PENDING\"","\"invalid phase\"","isWaiting","true","toThrow","\"A DROP action occurred while DROP_PENDING and still waiting\""]},"operators":{"distinct":8,"total":48,"identifiers":["const","=","()",".","{}",":","===","function=>"]}},"paramCount":0,"sloc":{"logical":28,"physical":26},"errors":[],"lineEnd":92,"lineStart":67,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.011,"difficulty":2,"effort":63.399,"length":10,"time":3.522,"vocabulary":9,"volume":31.699,"operands":{"distinct":5,"total":5,"identifiers":["store","dispatch","drop","reason","\"DROP\""]},"operators":{"distinct":4,"total":5,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":4,"physical":1},"errors":[],"lineEnd":89,"lineStart":89,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.962,"halstead":{"bugs":0.095,"difficulty":2.029,"effort":4047.856,"length":48.857,"time":224.881,"vocabulary":8.143,"volume":284.978,"operands":{"distinct":7,"total":24.857},"operators":{"distinct":1.143,"total":24}},"paramCount":0,"sloc":{"logical":14.857,"physical":13.286}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":15.622,"halstead":{"bugs":0.091,"difficulty":4.126,"effort":1642.472,"length":55,"time":91.248,"vocabulary":22.167,"volume":272.695,"operands":{"distinct":16.667,"total":28},"operators":{"distinct":5.5,"total":27}},"paramCount":0,"sloc":{"logical":16.333,"physical":12.833}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/drop/result-impact-mismatch.spec.js","testCases":3,"smells":26,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  27 |   expect(store.getState().phase).toBe('DRAGGING');\n  28 |   const initial: State = store.getState();\n> 29 |   invariant(initial.phase === 'DRAGGING');\n     |  ^ Eager Test\n  30 |   invariant(tryGetDestination !== null);\n  31 |\n  32 |   // no destination","start":{"line":29,"column":2,"index":1085}},{"frame":"  28 |   const initial: State = store.getState();\n  29 |   invariant(initial.phase === 'DRAGGING');\n> 30 |   invariant(tryGetDestination !== null);\n     |  ^ Eager Test\n  31 |\n  32 |   // no destination\n  33 |   store.dispatch(move({ client: { x: 10000, y: 10000 } }));","start":{"line":30,"column":2,"index":1128}},{"frame":"  34 |   {\n  35 |     const current: State = store.getState();\n> 36 |     invariant(current.phase === 'DRAGGING');\n     |    ^ Eager Test\n  37 |     expect(tryGetDestination(current.impact)).toBe(null);\n  38 |   }\n  39 |","start":{"line":36,"column":4,"index":1301}},{"frame":"  35 |     const current: State = store.getState();\n  36 |     invariant(current.phase === 'DRAGGING');\n> 37 |     expect(tryGetDestination(current.impact)).toBe(null);\n     |           ^ Eager Test\n  38 |   }\n  39 |\n  40 |   // drop","start":{"line":37,"column":11,"index":1353}},{"frame":"  46 |\n  47 |   // the impact has the home destination for animation\n> 48 |   expect(tryGetDestination(completed.impact)).toBe(\n     |         ^ Eager Test\n  49 |     tryGetDestination(initial.impact),\n  50 |   );\n  51 |   // but the consumer will be told that there was no destination","start":{"line":48,"column":9,"index":1668}},{"frame":"  47 |   // the impact has the home destination for animation\n  48 |   expect(tryGetDestination(completed.impact)).toBe(\n> 49 |     tryGetDestination(initial.impact),\n     |    ^ Eager Test\n  50 |   );\n  51 |   // but the consumer will be told that there was no destination\n  52 |   expect(completed.result.destination).toBe(null);","start":{"line":49,"column":4,"index":1715}},{"frame":"  60 |   expect(store.getState().phase).toBe('DRAGGING');\n  61 |   const initial: State = store.getState();\n> 62 |   invariant(initial.phase === 'DRAGGING');\n     |  ^ Eager Test\n  63 |   invariant(tryGetDestination(initial.impact) !== null);\n  64 |\n  65 |   // cancel","start":{"line":62,"column":2,"index":2193}},{"frame":"  61 |   const initial: State = store.getState();\n  62 |   invariant(initial.phase === 'DRAGGING');\n> 63 |   invariant(tryGetDestination(initial.impact) !== null);\n     |  ^ Eager Test\n  64 |\n  65 |   // cancel\n  66 |   store.dispatch(drop({ reason: 'CANCEL' }));","start":{"line":63,"column":2,"index":2236}},{"frame":"  61 |   const initial: State = store.getState();\n  62 |   invariant(initial.phase === 'DRAGGING');\n> 63 |   invariant(tryGetDestination(initial.impact) !== null);\n     |            ^ Eager Test\n  64 |\n  65 |   // cancel\n  66 |   store.dispatch(drop({ reason: 'CANCEL' }));","start":{"line":63,"column":12,"index":2246}},{"frame":"  71 |\n  72 |   // the impact has the home destination for animation\n> 73 |   expect(tryGetDestination(completed.impact)).toBe(\n     |         ^ Eager Test\n  74 |     tryGetDestination(initial.impact),\n  75 |   );\n  76 |   // but the consumer will be told that there was no destination","start":{"line":73,"column":9,"index":2559}},{"frame":"  72 |   // the impact has the home destination for animation\n  73 |   expect(tryGetDestination(completed.impact)).toBe(\n> 74 |     tryGetDestination(initial.impact),\n     |    ^ Eager Test\n  75 |   );\n  76 |   // but the consumer will be told that there was no destination\n  77 |   expect(completed.result.destination).toBe(null);","start":{"line":74,"column":4,"index":2606}},{"frame":"  94 |   expect(store.getState().phase).toBe('DRAGGING');\n  95 |   const initial: State = store.getState();\n> 96 |   invariant(initial.phase === 'DRAGGING');\n     |  ^ Eager Test\n  97 |   invariant(tryGetDestination(initial.impact) !== null);\n  98 |\n  99 |   // moving onto a combine","start":{"line":96,"column":2,"index":3309}},{"frame":"   95 |   const initial: State = store.getState();\n   96 |   invariant(initial.phase === 'DRAGGING');\n>  97 |   invariant(tryGetDestination(initial.impact) !== null);\n      |  ^ Eager Test\n   98 |\n   99 |   // moving onto a combine\n  100 |   store.dispatch(moveDown());","start":{"line":97,"column":2,"index":3352}},{"frame":"   95 |   const initial: State = store.getState();\n   96 |   invariant(initial.phase === 'DRAGGING');\n>  97 |   invariant(tryGetDestination(initial.impact) !== null);\n      |            ^ Eager Test\n   98 |\n   99 |   // moving onto a combine\n  100 |   store.dispatch(moveDown());","start":{"line":97,"column":12,"index":3362}},{"frame":"  101 |   {\n  102 |     const current: State = store.getState();\n> 103 |     invariant(current.phase === 'DRAGGING');\n      |    ^ Eager Test\n  104 |     expect(tryGetDestination(current.impact)).toBe(null);\n  105 |     expect(tryGetCombine(current.impact)).toBeTruthy();\n  106 |   }","start":{"line":103,"column":4,"index":3518}},{"frame":"  102 |     const current: State = store.getState();\n  103 |     invariant(current.phase === 'DRAGGING');\n> 104 |     expect(tryGetDestination(current.impact)).toBe(null);\n      |           ^ Eager Test\n  105 |     expect(tryGetCombine(current.impact)).toBeTruthy();\n  106 |   }\n  107 |","start":{"line":104,"column":11,"index":3570}},{"frame":"  103 |     invariant(current.phase === 'DRAGGING');\n  104 |     expect(tryGetDestination(current.impact)).toBe(null);\n> 105 |     expect(tryGetCombine(current.impact)).toBeTruthy();\n      |           ^ Eager Test\n  106 |   }\n  107 |\n  108 |   // drop","start":{"line":105,"column":11,"index":3628}},{"frame":"  114 |\n  115 |   // the combine has been removed\n> 116 |   expect(tryGetCombine(completed.impact)).toBe(null);\n      |         ^ Eager Test\n  117 |   // for animation purposes it has a final impact of moving back to the starting position\n  118 |   expect(tryGetDestination(completed.impact)).toBe(\n  119 |     tryGetDestination(initial.impact),","start":{"line":116,"column":9,"index":3922}},{"frame":"  116 |   expect(tryGetCombine(completed.impact)).toBe(null);\n  117 |   // for animation purposes it has a final impact of moving back to the starting position\n> 118 |   expect(tryGetDestination(completed.impact)).toBe(\n      |         ^ Eager Test\n  119 |     tryGetDestination(initial.impact),\n  120 |   );\n  121 |   // the consumer will be told that there was no combine","start":{"line":118,"column":9,"index":4066}},{"frame":"  117 |   // for animation purposes it has a final impact of moving back to the starting position\n  118 |   expect(tryGetDestination(completed.impact)).toBe(\n> 119 |     tryGetDestination(initial.impact),\n      |    ^ Eager Test\n  120 |   );\n  121 |   // the consumer will be told that there was no combine\n  122 |   expect(completed.result.combine).toBe(null);","start":{"line":119,"column":4,"index":4113}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  27 |   expect(store.getState().phase).toBe('DRAGGING');\n  28 |   const initial: State = store.getState();\n> 29 |   invariant(initial.phase === 'DRAGGING');\n     |  ^ Lazy Test\n  30 |   invariant(tryGetDestination !== null);\n  31 |\n  32 |   // no destination","start":{"line":29,"column":2,"index":1085}},{"frame":"  35 |     const current: State = store.getState();\n  36 |     invariant(current.phase === 'DRAGGING');\n> 37 |     expect(tryGetDestination(current.impact)).toBe(null);\n     |           ^ Lazy Test\n  38 |   }\n  39 |\n  40 |   // drop","start":{"line":37,"column":11,"index":1353}},{"frame":"  60 |   expect(store.getState().phase).toBe('DRAGGING');\n  61 |   const initial: State = store.getState();\n> 62 |   invariant(initial.phase === 'DRAGGING');\n     |  ^ Lazy Test\n  63 |   invariant(tryGetDestination(initial.impact) !== null);\n  64 |\n  65 |   // cancel","start":{"line":62,"column":2,"index":2193}},{"frame":"  61 |   const initial: State = store.getState();\n  62 |   invariant(initial.phase === 'DRAGGING');\n> 63 |   invariant(tryGetDestination(initial.impact) !== null);\n     |            ^ Lazy Test\n  64 |\n  65 |   // cancel\n  66 |   store.dispatch(drop({ reason: 'CANCEL' }));","start":{"line":63,"column":12,"index":2246}},{"frame":"  94 |   expect(store.getState().phase).toBe('DRAGGING');\n  95 |   const initial: State = store.getState();\n> 96 |   invariant(initial.phase === 'DRAGGING');\n     |  ^ Lazy Test\n  97 |   invariant(tryGetDestination(initial.impact) !== null);\n  98 |\n  99 |   // moving onto a combine","start":{"line":96,"column":2,"index":3309}},{"frame":"   95 |   const initial: State = store.getState();\n   96 |   invariant(initial.phase === 'DRAGGING');\n>  97 |   invariant(tryGetDestination(initial.impact) !== null);\n      |            ^ Lazy Test\n   98 |\n   99 |   // moving onto a combine\n  100 |   store.dispatch(moveDown());","start":{"line":97,"column":12,"index":3362}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":3.54,"halstead":{"bugs":1.028,"difficulty":28.105,"effort":86699.252,"length":505,"time":4816.625,"vocabulary":69,"volume":3084.805,"operands":{"distinct":57,"total":267,"identifiers":["it","\"should clear any destination from a final impact if not dropping on a droppable\"","mock","jest","fn","store","Store","createStore","passThrough","middleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","initial","State","invariant","tryGetDestination","null","move","client","x","10000","y","current","impact","drop","reason","\"DROP\"","args","AnimateDropArgs","calls","length","1","0","payload","completed","CompletedDrag","result","destination","\"should clear any destination from a final impact canceling\"","\"CANCEL\"","\"should clear any combine from a final impact if cancelling\"","dimensions","draggables","droppables","enableCombining","movementMode","\"SNAP\"","moveDown","tryGetCombine","toBeTruthy","combine"]},"operators":{"distinct":12,"total":238,"identifiers":["()","function=>","const","=",".","===","!==","{}",":","[]","-","... (spread)"]}},"paramCount":0,"sloc":{"logical":113,"physical":124}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":8,"path":"../../../../../src/state/action-creators","type":"esm"},{"line":9,"path":"../../../../../src/invariant","type":"esm"},{"line":10,"path":"../../../../../src/state/middleware/drop","type":"esm"},{"line":11,"path":"../../../../util/dimension","type":"esm"},{"line":12,"path":"../../../../util/preset-action-args","type":"esm"},{"line":13,"path":"../util/create-store","type":"esm"},{"line":14,"path":"../util/pass-through-middleware","type":"esm"},{"line":15,"path":"../../../../../src/types","type":"esm"},{"line":16,"path":"../../../../../src/state/store-types","type":"esm"},{"line":20,"path":"../../../../../src/state/get-impact-location","type":"esm"}],"errors":[],"lineEnd":124,"lineStart":1,"maintainability":82.729,"methods":[{"cyclomatic":1,"cyclomaticDensity":2.778,"halstead":{"bugs":0.312,"difficulty":10.357,"effort":9682.604,"length":164,"time":537.922,"vocabulary":52,"volume":934.872,"operands":{"distinct":42,"total":87,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","middleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","initial","State","invariant","tryGetDestination","null","move","client","x","10000","y","current","impact","drop","reason","\"DROP\"","args","AnimateDropArgs","calls","length","1","0","payload","completed","CompletedDrag","result","destination"]},"operators":{"distinct":10,"total":77,"identifiers":["const","=","()",".","===","!==","{}",":","[]","-"]}},"paramCount":0,"sloc":{"logical":36,"physical":32},"errors":[],"lineEnd":53,"lineStart":22,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.232,"difficulty":9.306,"effort":6476.376,"length":126,"time":359.799,"vocabulary":46,"volume":695.969,"operands":{"distinct":36,"total":67,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","middleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","initial","State","invariant","tryGetDestination","impact","null","drop","reason","\"CANCEL\"","args","AnimateDropArgs","calls","length","1","0","payload","completed","CompletedDrag","result","destination"]},"operators":{"distinct":10,"total":59,"identifiers":["const","=","()",".","===","!==","{}",":","[]","-"]}},"paramCount":0,"sloc":{"logical":26,"physical":24},"errors":[],"lineEnd":78,"lineStart":55,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.222,"halstead":{"bugs":0.395,"difficulty":12.793,"effort":15148.459,"length":203,"time":841.581,"vocabulary":57,"volume":1184.077,"operands":{"distinct":46,"total":107,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","middleware","dispatch","initialPublish","initialPublishArgs","dimensions","draggables","droppables","enableCombining","movementMode","\"SNAP\"","expect","getState","phase","toBe","\"DRAGGING\"","initial","State","invariant","tryGetDestination","impact","null","moveDown","current","tryGetCombine","toBeTruthy","drop","reason","\"CANCEL\"","args","AnimateDropArgs","calls","length","1","0","payload","completed","CompletedDrag","result","combine"]},"operators":{"distinct":11,"total":96,"identifiers":["const","=","()",".","{}","... (spread)",":","===","!==","[]","-"]}},"paramCount":0,"sloc":{"logical":45,"physical":44},"errors":[],"lineEnd":123,"lineStart":80,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.885,"halstead":{"bugs":0.257,"difficulty":7.026,"effort":21674.813,"length":126.25,"time":1204.156,"vocabulary":17.25,"volume":771.201,"operands":{"distinct":14.25,"total":66.75},"operators":{"distinct":3,"total":59.5}},"paramCount":0,"sloc":{"logical":28.25,"physical":31}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":2.949,"halstead":{"bugs":0.313,"difficulty":10.819,"effort":10435.813,"length":164.333,"time":579.767,"vocabulary":51.667,"volume":938.306,"operands":{"distinct":41.333,"total":87},"operators":{"distinct":10.333,"total":77.333}},"paramCount":0,"sloc":{"logical":35.667,"physical":33.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/drop/get-drop-duration.spec.js","testCases":3,"smells":2,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  15 |   });\n  16 |\n> 17 |   expect(noWhere).toEqual(expect.any(Number));\n     |  ^ Duplicate Assert\n  18 |   expect(noWhere).toBeLessThan(further);\n  19 | });\n  20 |","start":{"line":17,"column":2,"index":492}},{"frame":"  16 |\n  17 |   expect(noWhere).toEqual(expect.any(Number));\n> 18 |   expect(noWhere).toBeLessThan(further);\n     |  ^ Duplicate Assert\n  19 | });\n  20 |\n  21 | it('should return higher drop times the further away you are', () => {","start":{"line":18,"column":2,"index":539}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":5.97,"halstead":{"bugs":0.339,"difficulty":14,"effort":14244.896,"length":200,"time":791.383,"vocabulary":34,"volume":1017.493,"operands":{"distinct":27,"total":108,"identifiers":["it","\"should return the a small amount if not moving anywhere\"","noWhere","getDropDuration","current","x","10","y","destination","reason","\"DROP\"","further","1","100","expect","toEqual","any","Number","toBeLessThan","\"should return higher drop times the further away you are\"","closer","5","\"should return faster drop times if cancelling\"","Position","cancel","\"CANCEL\"","drop"]},"operators":{"distinct":7,"total":92,"identifiers":["()","function=>","const","=","{}",":","."]}},"paramCount":0,"sloc":{"logical":67,"physical":52}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../../src/state/middleware/drop/get-drop-duration","type":"esm"}],"errors":[],"lineEnd":52,"lineStart":1,"maintainability":97.374,"methods":[{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.109,"difficulty":6.706,"effort":2184.082,"length":72,"time":121.338,"vocabulary":23,"volume":325.696,"operands":{"distinct":17,"total":38,"identifiers":["noWhere","getDropDuration","current","x","10","y","destination","reason","\"DROP\"","further","1","100","expect","toEqual","any","Number","toBeLessThan"]},"operators":{"distinct":6,"total":34,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":23,"physical":15},"errors":[],"lineEnd":19,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.088,"difficulty":6.857,"effort":1807.801,"length":61,"time":100.433,"vocabulary":20,"volume":263.638,"operands":{"distinct":14,"total":32,"identifiers":["closer","getDropDuration","current","x","1","y","destination","5","reason","\"DROP\"","further","100","expect","toBeLessThan"]},"operators":{"distinct":6,"total":29,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":20,"physical":14},"errors":[],"lineEnd":34,"lineStart":21,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.081,"difficulty":6.4,"effort":1546.096,"length":55,"time":85.894,"vocabulary":21,"volume":241.577,"operands":{"distinct":15,"total":32,"identifiers":["current","Position","x","1","y","destination","10","cancel","getDropDuration","reason","\"CANCEL\"","drop","\"DROP\"","expect","toBeLessThan"]},"operators":{"distinct":6,"total":23,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":18,"physical":16},"errors":[],"lineEnd":51,"lineStart":36,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.493,"halstead":{"bugs":0.085,"difficulty":3.5,"effort":3561.224,"length":50,"time":197.846,"vocabulary":8.5,"volume":254.373,"operands":{"distinct":6.75,"total":27},"operators":{"distinct":1.75,"total":23}},"paramCount":0,"sloc":{"logical":16.75,"physical":13}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":4.968,"halstead":{"bugs":0.092,"difficulty":6.654,"effort":1845.993,"length":62.667,"time":102.555,"vocabulary":21.333,"volume":276.971,"operands":{"distinct":15.333,"total":34},"operators":{"distinct":6,"total":28.667}},"paramCount":0,"sloc":{"logical":20.333,"physical":15}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/drop/drop-position.spec.js","testCases":4,"smells":3,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  20 | import { getForcedDisplacement } from '../../../../util/impact';\n  21 |\n> 22 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  23 |   describe(`on ${axis.direction} axis`, () => {\n  24 |     const preset = getPreset(axis);\n  25 |     const { afterCritical, impact: homeImpact } = getLiftEffect({","start":{"line":22,"column":23,"index":1074}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  49 |       // inHome1 in inHome2 position\n  50 |       const pastInHome2: DragImpact = {\n> 51 |         displaced: getForcedDisplacement({\n     |                   ^ Lazy Test\n  52 |           visible: [\n  53 |             { dimension: preset.inHome3, shouldAnimate: false },\n  54 |             { dimension: preset.inHome4, shouldAnimate: false },","start":{"line":51,"column":19,"index":2035}},{"frame":"  93 |       const mergingWithInHome3: DragImpact = {\n  94 |         displacedBy,\n> 95 |         displaced: getForcedDisplacement({\n     |                   ^ Lazy Test\n  96 |           // inHome2 is no longer displaced\n  97 |           visible: [\n  98 |             { dimension: preset.inHome3, shouldAnimate: false },","start":{"line":95,"column":19,"index":3425}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":5.469,"halstead":{"bugs":1.133,"difficulty":18.635,"effort":63319.76,"length":516,"time":3517.764,"vocabulary":96,"volume":3397.841,"operands":{"distinct":85,"total":288,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","draggables","home","viewport","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","it","\"should return nothing if already over the home\"","offset","Position","getNewHomeClientOffset","dimensions","expect","toEqual","origin","\"should return the difference between the current client position and where it needs to be\"","pastInHome2","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome3","shouldAnimate","false","inHome4","at","type","\"REORDER\"","destination","index","inHome2","descriptor","droppableId","id","currentClientCenter","getClientBorderBoxCenter","droppable","offsetFromHome","diff","subtract","client","borderBox","center","\"should account for a collapsing home draggable when merging\"","mergingWithInHome3","\"COMBINE\"","combine","draggableId","\"should account for the scroll of your home list if you are not over any list\"","scrollableHome","DroppableDimension","makeScrollable","scroll","x","10","y","15","displacement","negate","scrolled","scrollDroppable","withScrolledHome","DimensionMap","patchDimensionMap","withScroll","noImpact","withoutScroll"]},"operators":{"distinct":11,"total":228,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":128,"physical":169}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":9,"path":"../../../../../src/types","type":"esm"},{"line":10,"path":"../../../../../src/state/axis","type":"esm"},{"line":11,"path":"../../../../../src/state/position","type":"esm"},{"line":12,"path":"../../../../../src/state/droppable/scroll-droppable","type":"esm"},{"line":13,"path":"../../../../util/dimension","type":"esm"},{"line":14,"path":"../../../../../src/state/get-center-from-impact/get-client-border-box-center","type":"esm"},{"line":15,"path":"../../../../../src/state/get-displaced-by","type":"esm"},{"line":16,"path":"../../../../../src/state/no-impact","type":"esm"},{"line":17,"path":"../../../../../src/state/get-lift-effect","type":"esm"},{"line":18,"path":"../../../../../src/state/middleware/drop/get-new-home-client-offset","type":"esm"},{"line":19,"path":"../../../../../src/state/patch-dimension-map","type":"esm"},{"line":20,"path":"../../../../util/impact","type":"esm"}],"errors":[],"lineEnd":169,"lineStart":1,"maintainability":92.765,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":147},"errors":[],"lineEnd":168,"lineStart":22,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.104,"difficulty":5.833,"effort":1822.789,"length":65,"time":101.266,"vocabulary":28,"volume":312.478,"operands":{"distinct":21,"total":35,"identifiers":["preset","getPreset","axis","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","draggables","home","viewport","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","it","\"should return nothing if already over the home\"","\"should return the difference between the current client position and where it needs to be\"","\"should account for a collapsing home draggable when merging\"","\"should account for the scroll of your home list if you are not over any list\""]},"operators":{"distinct":7,"total":30,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":20,"physical":145},"errors":[],"lineEnd":167,"lineStart":23,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.049,"difficulty":4.286,"effort":629.767,"length":34,"time":34.987,"vocabulary":20,"volume":146.946,"operands":{"distinct":14,"total":20,"identifiers":["offset","Position","getNewHomeClientOffset","impact","homeImpact","draggable","preset","inHome1","dimensions","viewport","afterCritical","expect","toEqual","origin"]},"operators":{"distinct":6,"total":14,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":9,"physical":11},"errors":[],"lineEnd":46,"lineStart":36,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.03,"halstead":{"bugs":0.269,"difficulty":7.524,"effort":6072.252,"length":143,"time":337.347,"vocabulary":50,"volume":807.071,"operands":{"distinct":42,"total":79,"identifiers":["pastInHome2","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome3","shouldAnimate","false","inHome4","displacedBy","at","type","\"REORDER\"","destination","index","inHome2","descriptor","droppableId","home","id","currentClientCenter","Position","getClientBorderBoxCenter","impact","draggable","inHome1","draggables","afterCritical","droppable","viewport","offsetFromHome","getNewHomeClientOffset","dimensions","diff","subtract","client","borderBox","center","expect","toEqual"]},"operators":{"distinct":8,"total":64,"identifiers":["const","=","{}",":","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":33,"physical":41},"errors":[],"lineEnd":88,"lineStart":48,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.03,"halstead":{"bugs":0.268,"difficulty":7.707,"effort":6188.232,"length":143,"time":343.791,"vocabulary":49,"volume":802.904,"operands":{"distinct":41,"total":79,"identifiers":["mergingWithInHome3","DragImpact","displacedBy","displaced","getForcedDisplacement","visible","dimension","preset","inHome3","shouldAnimate","false","inHome4","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","home","currentClientCenter","Position","getClientBorderBoxCenter","impact","draggable","inHome1","draggables","afterCritical","droppable","viewport","offsetFromHome","getNewHomeClientOffset","dimensions","offset","subtract","client","borderBox","center","expect","toEqual"]},"operators":{"distinct":8,"total":64,"identifiers":["const","=","{}",":","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":33,"physical":43},"errors":[],"lineEnd":132,"lineStart":90,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.196,"difficulty":6.188,"effort":3636.814,"length":112,"time":202.045,"vocabulary":38,"volume":587.768,"operands":{"distinct":32,"total":66,"identifiers":["scrollableHome","DroppableDimension","makeScrollable","preset","home","scroll","Position","x","10","y","15","displacement","negate","scrolled","scrollDroppable","withScrolledHome","DimensionMap","patchDimensionMap","dimensions","withScroll","getNewHomeClientOffset","impact","noImpact","draggable","inHome1","viewport","afterCritical","withoutScroll","diff","subtract","expect","toEqual"]},"operators":{"distinct":6,"total":46,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":29,"physical":33},"errors":[],"lineEnd":166,"lineStart":134,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.781,"halstead":{"bugs":0.162,"difficulty":2.662,"effort":9045.68,"length":73.714,"time":502.538,"vocabulary":13.714,"volume":485.406,"operands":{"distinct":12.143,"total":41.143},"operators":{"distinct":1.571,"total":32.571}},"paramCount":0.143,"sloc":{"logical":18.286,"physical":24.143}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":12.603,"halstead":{"bugs":0.149,"difficulty":5.673,"effort":3072.15,"length":84.5,"time":170.675,"vocabulary":32.5,"volume":448.398,"operands":{"distinct":25.833,"total":47.333},"operators":{"distinct":6.667,"total":37.167}},"paramCount":0.167,"sloc":{"logical":21,"physical":70}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/drop/drop-impact.spec.js","testCases":4,"smells":2,"smellInfo":[{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  78 |   // inHome1 moved into position of inHome2\n  79 |   const lastImpact: DragImpact = {\n> 80 |     displaced: getForcedDisplacement({\n     |               ^ Lazy Test\n  81 |       // initial displacement is not animated\n  82 |       visible: [\n  83 |         { dimension: preset.inHome3, shouldAnimate: false },","start":{"line":80,"column":15,"index":2313}},{"frame":"  116 |   // inHome2 has been moved past\n  117 |   const lastImpact: DragImpact = {\n> 118 |     displaced: getForcedDisplacement({\n      |               ^ Lazy Test\n  119 |       visible: [\n  120 |         // initial displacement is not animated\n  121 |         { dimension: preset.inHome3, shouldAnimate: false },","start":{"line":118,"column":15,"index":3294}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":4.348,"halstead":{"bugs":0.892,"difficulty":20.339,"effort":54417.635,"length":438,"time":3023.202,"vocabulary":69,"volume":2675.534,"operands":{"distinct":59,"total":240,"identifiers":["preset","getPreset","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","draggables","home","viewport","displacedBy","DisplacedBy","getDisplacedBy","vertical","displaceBy","recomputedHomeImpact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome2","inHome3","inHome4","at","it","\"should recompute the home impact when not dropped in a list\"","result","Result","getDropImpact","reason","\"DROP\"","lastImpact","noImpact","onLiftImpact","expected","didDropInsideDroppable","false","expect","toEqual","\"should recompute the home impact when the drag is cancelled\"","\"CANCEL\"","\"should use the existing impact when reordering\"","shouldAnimate","type","\"REORDER\"","destination","index","descriptor","droppableId","id","true","\"should remove any movement when merging so items will collapse\"","\"COMBINE\"","combine","draggableId","newImpact","emptyGroups"]},"operators":{"distinct":10,"total":198,"identifiers":["const","=","()","{}",":",".","[]",",","function=>","... (spread)"]}},"paramCount":0,"sloc":{"logical":115,"physical":155}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../../src/types","type":"esm"},{"line":5,"path":"../../../../../src/state/middleware/drop/get-drop-impact","type":"esm"},{"line":6,"path":"../../../../../src/state/no-impact","type":"esm"},{"line":7,"path":"../../../../../src/state/get-lift-effect","type":"esm"},{"line":8,"path":"../../../../util/dimension","type":"esm"},{"line":9,"path":"../../../../../src/state/get-displaced-by","type":"esm"},{"line":10,"path":"../../../../../src/state/axis","type":"esm"},{"line":11,"path":"../../../../util/impact","type":"esm"}],"errors":[],"lineEnd":155,"lineStart":1,"maintainability":88.416,"methods":[{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.081,"difficulty":4.286,"effort":1039.283,"length":51,"time":57.738,"vocabulary":27,"volume":242.499,"operands":{"distinct":21,"total":30,"identifiers":["result","Result","getDropImpact","reason","\"DROP\"","lastImpact","noImpact","home","preset","viewport","draggables","onLiftImpact","homeImpact","afterCritical","expected","impact","recomputedHomeImpact","didDropInsideDroppable","false","expect","toEqual"]},"operators":{"distinct":6,"total":21,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":14,"physical":17},"errors":[],"lineEnd":56,"lineStart":40,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.08,"difficulty":4.5,"effort":1078.751,"length":51,"time":59.931,"vocabulary":26,"volume":239.722,"operands":{"distinct":20,"total":30,"identifiers":["result","Result","getDropImpact","reason","\"CANCEL\"","lastImpact","homeImpact","home","preset","viewport","draggables","onLiftImpact","afterCritical","expected","impact","recomputedHomeImpact","didDropInsideDroppable","false","expect","toEqual"]},"operators":{"distinct":6,"total":21,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":14,"physical":18},"errors":[],"lineEnd":75,"lineStart":58,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.204,"difficulty":6.421,"effort":3936.846,"length":111,"time":218.714,"vocabulary":46,"volume":613.115,"operands":{"distinct":38,"total":61,"identifiers":["lastImpact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome3","shouldAnimate","false","inHome4","displacedBy","at","type","\"REORDER\"","destination","index","inHome2","descriptor","droppableId","home","id","result","Result","getDropImpact","reason","\"DROP\"","viewport","draggables","onLiftImpact","homeImpact","afterCritical","expected","impact","didDropInsideDroppable","true","expect","toEqual"]},"operators":{"distinct":8,"total":50,"identifiers":["const","=","{}",":","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":28,"physical":36},"errors":[],"lineEnd":112,"lineStart":77,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.225,"difficulty":7.615,"effort":5146.328,"length":121,"time":285.907,"vocabulary":48,"volume":675.78,"operands":{"distinct":39,"total":66,"identifiers":["lastImpact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome3","shouldAnimate","false","inHome4","displacedBy","at","type","\"COMBINE\"","combine","droppableId","home","descriptor","id","draggableId","result","Result","getDropImpact","reason","\"DROP\"","viewport","draggables","onLiftImpact","homeImpact","afterCritical","newImpact","emptyGroups","expected","impact","didDropInsideDroppable","true","expect","toEqual"]},"operators":{"distinct":9,"total":55,"identifiers":["const","=","{}",":","()","[]",",",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":30,"physical":41},"errors":[],"lineEnd":154,"lineStart":114,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.87,"halstead":{"bugs":0.178,"difficulty":4.068,"effort":10883.527,"length":87.6,"time":604.64,"vocabulary":13.8,"volume":535.107,"operands":{"distinct":11.8,"total":48},"operators":{"distinct":2,"total":39.6}},"paramCount":0,"sloc":{"logical":23,"physical":31}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":5.298,"halstead":{"bugs":0.148,"difficulty":5.706,"effort":2800.302,"length":83.5,"time":155.572,"vocabulary":36.75,"volume":442.779,"operands":{"distinct":29.5,"total":46.75},"operators":{"distinct":7.25,"total":36.75}},"paramCount":0,"sloc":{"logical":21.5,"physical":28}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/drop/drop-animation-flush-on-scroll-middleware.spec.js","testCases":3,"smells":6,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  88 |     completeDrop(getCompletedArgs('DROP')),\n  89 |     dropAnimationFinished(),\n> 90 |   ].forEach((action: Action) => {\n     |    ^ Conditional Test Logic\n  91 |     const mock = jest.fn();\n  92 |     const store: Store = getToDropAnimation(mock);\n  93 |","start":{"line":90,"column":4,"index":2625}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  58 |   // waiting for an animation frame before any scroll events would cancel a drag\n  59 |   window.dispatchEvent(new Event('scroll'));\n> 60 |   expect(mock).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  61 |\n  62 |   // after an animation frame, we should be in business\n  63 |   requestAnimationFrame.step();","start":{"line":60,"column":2,"index":1767}},{"frame":"  64 |   window.dispatchEvent(new Event('scroll'));\n  65 |\n> 66 |   expect(mock).toHaveBeenCalledWith(dropAnimationFinished());\n     |  ^ Duplicate Assert\n  67 |   expect(mock).toHaveBeenCalledTimes(1);\n  68 | });\n  69 |","start":{"line":66,"column":2,"index":1941}},{"frame":"  65 |\n  66 |   expect(mock).toHaveBeenCalledWith(dropAnimationFinished());\n> 67 |   expect(mock).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  68 | });\n  69 |\n  70 | it('should only try to clear once', () => {","start":{"line":67,"column":2,"index":2003}},{"frame":"  79 |   window.dispatchEvent(new Event('scroll'));\n  80 |\n> 81 |   expect(mock).toHaveBeenCalledWith(dropAnimationFinished());\n     |  ^ Duplicate Assert\n  82 |   expect(mock).toHaveBeenCalledTimes(1);\n  83 | });\n  84 |","start":{"line":81,"column":2,"index":2348}},{"frame":"  80 |\n  81 |   expect(mock).toHaveBeenCalledWith(dropAnimationFinished());\n> 82 |   expect(mock).toHaveBeenCalledTimes(1);\n     |  ^ Duplicate Assert\n  83 | });\n  84 |\n  85 | it('should not try to cancel a drop animation if the drop finished', () => {","start":{"line":82,"column":2,"index":2410}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":8.571,"halstead":{"bugs":0.533,"difficulty":18.682,"effort":29886.105,"length":261,"time":1660.339,"vocabulary":70,"volume":1599.743,"operands":{"distinct":55,"total":137,"identifiers":["getToDropAnimation","mock","Store","store","createStore","passThrough","dropMiddleware","middleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","move","client","add","clientSelection","x","1","y","drop","reason","\"DROP\"","state","State","invariant","\"DROP_ANIMATING\"","Incorrect phase: ","it","\"should clear any running drop is a scroll event occurs\"","jest","fn","mockReset","window","dispatchEvent","Event","\"scroll\"","not","toHaveBeenCalled","requestAnimationFrame","step","toHaveBeenCalledWith","dropAnimationFinished","toHaveBeenCalledTimes","\"should only try to clear once\"","\"should not try to cancel a drop animation if the drop finished\"","flush","completeDrop","getCompletedArgs","forEach","action","mockClear"]},"operators":{"distinct":15,"total":124,"identifiers":["function","const","=","()",".","{}",":","===","``","${}","return","function=>","new","[]",","]}},"paramCount":2,"sloc":{"logical":70,"physical":104}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../../src/types","type":"esm"},{"line":3,"path":"../../../../../src/state/store-types","type":"esm"},{"line":4,"path":"../../../../../src/invariant","type":"esm"},{"line":5,"path":"../../../../../src/state/middleware/drop/drop-animation-flush-on-scroll-middleware","type":"esm"},{"line":6,"path":"../../../../../src/state/middleware/drop/drop-middleware","type":"esm"},{"line":7,"path":"../util/create-store","type":"esm"},{"line":8,"path":"../util/pass-through-middleware","type":"esm"},{"line":9,"path":"../../../../../src/state/position","type":"esm"},{"line":18,"path":"../../../../../src/state/action-creators","type":"esm"},{"line":22,"path":"../../../../util/preset-action-args","type":"esm"}],"errors":[],"lineEnd":104,"lineStart":1,"maintainability":102.085,"methods":[{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.151,"difficulty":7.667,"effort":3468.123,"length":85,"time":192.674,"vocabulary":40,"volume":452.364,"operands":{"distinct":30,"total":46,"identifiers":["Store","store","createStore","passThrough","mock","dropMiddleware","middleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","move","client","add","clientSelection","x","1","y","drop","reason","\"DROP\"","state","State","invariant","\"DROP_ANIMATING\"","Incorrect phase: "]},"operators":{"distinct":10,"total":39,"identifiers":["const","=","()",".","{}",":","===","``","${}","return"]}},"paramCount":1,"sloc":{"logical":21,"physical":28},"errors":[],"lineEnd":51,"lineStart":24,"name":"getToDropAnimation","paramNames":["mock"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.083,"difficulty":4.028,"effort":1002.095,"length":55,"time":55.672,"vocabulary":23,"volume":248.796,"operands":{"distinct":18,"total":29,"identifiers":["mock","jest","fn","getToDropAnimation","mockReset","window","dispatchEvent","Event","\"scroll\"","expect","not","toHaveBeenCalled","requestAnimationFrame","step","toHaveBeenCalledWith","dropAnimationFinished","toHaveBeenCalledTimes","1"]},"operators":{"distinct":5,"total":26,"identifiers":["const","=","()",".","new"]}},"paramCount":0,"sloc":{"logical":14,"physical":16},"errors":[],"lineEnd":68,"lineStart":53,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.069,"difficulty":3.906,"effort":806.402,"length":47,"time":44.8,"vocabulary":21,"volume":206.439,"operands":{"distinct":16,"total":25,"identifiers":["mock","jest","fn","getToDropAnimation","mockReset","requestAnimationFrame","step","window","dispatchEvent","Event","\"scroll\"","expect","toHaveBeenCalledWith","dropAnimationFinished","toHaveBeenCalledTimes","1"]},"operators":{"distinct":5,"total":22,"identifiers":["const","=","()",".","new"]}},"paramCount":0,"sloc":{"logical":12,"physical":14},"errors":[],"lineEnd":83,"lineStart":70,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.02,"difficulty":2.5,"effort":152.361,"length":17,"time":8.464,"vocabulary":12,"volume":60.944,"operands":{"distinct":7,"total":7,"identifiers":["flush","completeDrop","getCompletedArgs","\"DROP\"","dropAnimationFinished","forEach","action"]},"operators":{"distinct":5,"total":10,"identifiers":["()",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":19},"errors":[],"lineEnd":103,"lineStart":85,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.063,"difficulty":3.056,"effort":580.524,"length":42,"time":32.251,"vocabulary":23,"volume":189.99,"operands":{"distinct":18,"total":22,"identifiers":["mock","jest","fn","store","Store","getToDropAnimation","dispatch","action","mockClear","requestAnimationFrame","step","window","dispatchEvent","Event","\"scroll\"","expect","not","toHaveBeenCalled"]},"operators":{"distinct":5,"total":20,"identifiers":["const","=","()",".","new"]}},"paramCount":1,"sloc":{"logical":10,"physical":13},"errors":[],"lineEnd":102,"lineStart":90,"name":"<anon method-4>","paramNames":["action"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.429,"halstead":{"bugs":0.089,"difficulty":3.114,"effort":4981.018,"length":43.5,"time":276.723,"vocabulary":11.667,"volume":266.624,"operands":{"distinct":9.167,"total":22.833},"operators":{"distinct":2.5,"total":20.667}},"paramCount":0.333,"sloc":{"logical":11.667,"physical":17.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":9.381,"halstead":{"bugs":0.077,"difficulty":4.231,"effort":1201.901,"length":49.2,"time":66.772,"vocabulary":23.8,"volume":231.707,"operands":{"distinct":17.8,"total":25.8},"operators":{"distinct":6,"total":23.4}},"paramCount":0.4,"sloc":{"logical":12.6,"physical":18}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/drop/drop-animation-finish-middleware.spec.js","testCases":2,"smells":3,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  50 |   mock.mockReset();\n  51 |   store.dispatch(dropAnimationFinished());\n> 52 |   expect(mock).toHaveBeenCalledWith(dropAnimationFinished());\n     |  ^ Duplicate Assert\n  53 |\n  54 |   expect(mock).toHaveBeenCalledWith(completeDrop(getCompletedArgs('DROP')));\n  55 |   expect(mock).toHaveBeenCalledTimes(2);","start":{"line":52,"column":2,"index":1568}},{"frame":"  52 |   expect(mock).toHaveBeenCalledWith(dropAnimationFinished());\n  53 |\n> 54 |   expect(mock).toHaveBeenCalledWith(completeDrop(getCompletedArgs('DROP')));\n     |  ^ Duplicate Assert\n  55 |   expect(mock).toHaveBeenCalledTimes(2);\n  56 | });\n  57 |","start":{"line":54,"column":2,"index":1631}},{"frame":"  53 |\n  54 |   expect(mock).toHaveBeenCalledWith(completeDrop(getCompletedArgs('DROP')));\n> 55 |   expect(mock).toHaveBeenCalledTimes(2);\n     |  ^ Duplicate Assert\n  56 | });\n  57 |\n  58 | it('should throw if a drop animation finished action occurs while not in the drop animating phase', () => {","start":{"line":55,"column":2,"index":1708}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":8.696,"halstead":{"bugs":0.29,"difficulty":9.186,"effort":7997.775,"length":152,"time":444.321,"vocabulary":53,"volume":870.644,"operands":{"distinct":43,"total":79,"identifiers":["it","\"should fire a complete drop action when a drop animation finish action is fired\"","mock","jest","fn","store","Store","createStore","passThrough","dropMiddleware","middleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","move","client","add","clientSelection","x","1","y","drop","reason","\"DROP\"","state","State","invariant","\"DROP_ANIMATING\"","Incorrect phase: ","mockReset","dropAnimationFinished","toHaveBeenCalledWith","completeDrop","getCompletedArgs","toHaveBeenCalledTimes","2","\"should throw if a drop animation finished action occurs while not in the drop animating phase\"","toThrow"]},"operators":{"distinct":10,"total":73,"identifiers":["()","function=>","const","=",".","{}",":","===","``","${}"]}},"paramCount":0,"sloc":{"logical":46,"physical":63}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../../src/types","type":"esm"},{"line":3,"path":"../../../../../src/state/store-types","type":"esm"},{"line":4,"path":"../../../../../src/invariant","type":"esm"},{"line":5,"path":"../../../../../src/state/middleware/drop/drop-animation-finish-middleware","type":"esm"},{"line":6,"path":"../../../../../src/state/middleware/drop/drop-middleware","type":"esm"},{"line":7,"path":"../util/create-store","type":"esm"},{"line":8,"path":"../util/pass-through-middleware","type":"esm"},{"line":9,"path":"../../../../../src/state/position","type":"esm"},{"line":16,"path":"../../../../../src/state/action-creators","type":"esm"},{"line":20,"path":"../../../../util/preset-action-args","type":"esm"}],"errors":[],"lineEnd":63,"lineStart":1,"maintainability":105.44,"methods":[{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.233,"difficulty":7.615,"effort":5316.455,"length":125,"time":295.359,"vocabulary":48,"volume":698.12,"operands":{"distinct":39,"total":66,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","dropMiddleware","middleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","move","client","add","clientSelection","x","1","y","drop","reason","\"DROP\"","state","State","invariant","\"DROP_ANIMATING\"","Incorrect phase: ","mockReset","dropAnimationFinished","toHaveBeenCalledWith","completeDrop","getCompletedArgs","toHaveBeenCalledTimes","2"]},"operators":{"distinct":9,"total":59,"identifiers":["const","=","()",".","{}",":","===","``","${}"]}},"paramCount":0,"sloc":{"logical":34,"physical":35},"errors":[],"lineEnd":56,"lineStart":22,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.015,"difficulty":2.5,"effort":112.432,"length":13,"time":6.246,"vocabulary":11,"volume":44.973,"operands":{"distinct":6,"total":6,"identifiers":["store","Store","createStore","middleware","expect","toThrow"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":62,"lineStart":58,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.005,"difficulty":1,"effort":13.932,"length":6,"time":0.774,"vocabulary":5,"volume":13.932,"operands":{"distinct":3,"total":3,"identifiers":["store","dispatch","dropAnimationFinished"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":61,"lineStart":61,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.174,"halstead":{"bugs":0.073,"difficulty":2.297,"effort":1999.444,"length":38,"time":111.08,"vocabulary":13.25,"volume":217.661,"operands":{"distinct":10.75,"total":19.75},"operators":{"distinct":2.5,"total":18.25}},"paramCount":0,"sloc":{"logical":11.5,"physical":15.75}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":18.758,"halstead":{"bugs":0.084,"difficulty":3.705,"effort":1814.273,"length":48,"time":100.793,"vocabulary":21.333,"volume":252.341,"operands":{"distinct":16,"total":25},"operators":{"distinct":5.333,"total":23}},"paramCount":0,"sloc":{"logical":14,"physical":13.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/middleware/drop/conditionally-animate-drop.spec.js","testCases":3,"smells":22,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  44 | import { tryGetCombine } from '../../../../../src/state/get-impact-location';\n  45 |\n> 46 | ['DROP', 'CANCEL'].forEach((reason: DropReason) => {\n     |                   ^ Conditional Test Logic\n  47 |   describe(`with drop reason: ${reason}`, () => {\n  48 |     it('should fire a complete drop action is no drop animation is required', () => {\n  49 |       const mock = jest.fn();","start":{"line":46,"column":19,"index":1383}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  52 |       store.dispatch(flush());\n  53 |       store.dispatch(initialPublish(initialPublishArgs));\n> 54 |       expect(store.getState().phase).toBe('DRAGGING');\n     |      ^ Duplicate Assert\n  55 |\n  56 |       // no movement yet\n  57 |       mock.mockReset();","start":{"line":54,"column":6,"index":1750}},{"frame":"  58 |       store.dispatch(drop({ reason }));\n  59 |\n> 60 |       expect(mock).toHaveBeenCalledWith(drop({ reason }));\n     |      ^ Duplicate Assert\n  61 |       expect(mock).toHaveBeenCalledWith(completeDrop(getCompletedArgs(reason)));\n  62 |       expect(mock).toHaveBeenCalledTimes(2);\n  63 |","start":{"line":60,"column":6,"index":1896}},{"frame":"  59 |\n  60 |       expect(mock).toHaveBeenCalledWith(drop({ reason }));\n> 61 |       expect(mock).toHaveBeenCalledWith(completeDrop(getCompletedArgs(reason)));\n     |      ^ Duplicate Assert\n  62 |       expect(mock).toHaveBeenCalledTimes(2);\n  63 |\n  64 |       // reset to initial phase","start":{"line":61,"column":6,"index":1955}},{"frame":"  60 |       expect(mock).toHaveBeenCalledWith(drop({ reason }));\n  61 |       expect(mock).toHaveBeenCalledWith(completeDrop(getCompletedArgs(reason)));\n> 62 |       expect(mock).toHaveBeenCalledTimes(2);\n     |      ^ Duplicate Assert\n  63 |\n  64 |       // reset to initial phase\n  65 |       expect(store.getState().phase).toBe('IDLE');","start":{"line":62,"column":6,"index":2036}},{"frame":"  63 |\n  64 |       // reset to initial phase\n> 65 |       expect(store.getState().phase).toBe('IDLE');\n     |      ^ Duplicate Assert\n  66 |     });\n  67 |\n  68 |     it('should fire an animate drop action if a drop animation movement is required', () => {","start":{"line":65,"column":6,"index":2114}},{"frame":"  71 |\n  72 |       store.dispatch(initialPublish(initialPublishArgs));\n> 73 |       expect(store.getState().phase).toBe('DRAGGING');\n     |      ^ Duplicate Assert\n  74 |\n  75 |       // moving a little bit so that a drop animation will be needed\n  76 |       const shift: Position = { x: 1, y: 1 };","start":{"line":73,"column":6,"index":2428}},{"frame":"  110 |         }),\n  111 |       };\n> 112 |       expect(mock).toHaveBeenCalledWith(drop({ reason }));\n      |      ^ Duplicate Assert\n  113 |       expect(mock).toHaveBeenCalledWith(animateDrop(args));\n  114 |       expect(mock).toHaveBeenCalledTimes(2);\n  115 |       expect(store.getState().phase).toBe('DROP_ANIMATING');","start":{"line":112,"column":6,"index":3536}},{"frame":"  111 |       };\n  112 |       expect(mock).toHaveBeenCalledWith(drop({ reason }));\n> 113 |       expect(mock).toHaveBeenCalledWith(animateDrop(args));\n      |      ^ Duplicate Assert\n  114 |       expect(mock).toHaveBeenCalledTimes(2);\n  115 |       expect(store.getState().phase).toBe('DROP_ANIMATING');\n  116 |     });","start":{"line":113,"column":6,"index":3595}},{"frame":"  112 |       expect(mock).toHaveBeenCalledWith(drop({ reason }));\n  113 |       expect(mock).toHaveBeenCalledWith(animateDrop(args));\n> 114 |       expect(mock).toHaveBeenCalledTimes(2);\n      |      ^ Duplicate Assert\n  115 |       expect(store.getState().phase).toBe('DROP_ANIMATING');\n  116 |     });\n  117 |","start":{"line":114,"column":6,"index":3655}},{"frame":"  113 |       expect(mock).toHaveBeenCalledWith(animateDrop(args));\n  114 |       expect(mock).toHaveBeenCalledTimes(2);\n> 115 |       expect(store.getState().phase).toBe('DROP_ANIMATING');\n      |      ^ Duplicate Assert\n  116 |     });\n  117 |\n  118 |     it('should fire an animate drop action if combining', () => {","start":{"line":115,"column":6,"index":3700}},{"frame":"  197 |         dropDuration: expect.any(Number),\n  198 |       };\n> 199 |       expect(mock).toHaveBeenCalledWith(drop({ reason }));\n      |      ^ Duplicate Assert\n  200 |       expect(mock).toHaveBeenCalledWith(animateDrop(args));\n  201 |       expect(mock).toHaveBeenCalledTimes(2);\n  202 |       expect(store.getState().phase).toBe('DROP_ANIMATING');","start":{"line":199,"column":6,"index":6284}},{"frame":"  198 |       };\n  199 |       expect(mock).toHaveBeenCalledWith(drop({ reason }));\n> 200 |       expect(mock).toHaveBeenCalledWith(animateDrop(args));\n      |      ^ Duplicate Assert\n  201 |       expect(mock).toHaveBeenCalledTimes(2);\n  202 |       expect(store.getState().phase).toBe('DROP_ANIMATING');\n  203 |     });","start":{"line":200,"column":6,"index":6343}},{"frame":"  199 |       expect(mock).toHaveBeenCalledWith(drop({ reason }));\n  200 |       expect(mock).toHaveBeenCalledWith(animateDrop(args));\n> 201 |       expect(mock).toHaveBeenCalledTimes(2);\n      |      ^ Duplicate Assert\n  202 |       expect(store.getState().phase).toBe('DROP_ANIMATING');\n  203 |     });\n  204 |   });","start":{"line":201,"column":6,"index":6403}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  133 |       {\n  134 |         const current: State = store.getState();\n> 135 |         invariant(current.phase === 'DRAGGING');\n      |        ^ Eager Test\n  136 |         invariant(current.movementMode === 'SNAP');\n  137 |         invariant(\n  138 |           current.dimensions.droppables[inSnapMode.critical.droppable.id]","start":{"line":135,"column":8,"index":4331}},{"frame":"  134 |         const current: State = store.getState();\n  135 |         invariant(current.phase === 'DRAGGING');\n> 136 |         invariant(current.movementMode === 'SNAP');\n      |        ^ Eager Test\n  137 |         invariant(\n  138 |           current.dimensions.droppables[inSnapMode.critical.droppable.id]\n  139 |             .isCombineEnabled,","start":{"line":136,"column":8,"index":4380}},{"frame":"  135 |         invariant(current.phase === 'DRAGGING');\n  136 |         invariant(current.movementMode === 'SNAP');\n> 137 |         invariant(\n      |        ^ Eager Test\n  138 |           current.dimensions.droppables[inSnapMode.critical.droppable.id]\n  139 |             .isCombineEnabled,\n  140 |         );","start":{"line":137,"column":8,"index":4432}},{"frame":"  149 |\n  150 |       const current: State = store.getState();\n> 151 |       invariant(current.isDragging);\n      |      ^ Eager Test\n  152 |\n  153 |       // if (reason === 'DROP') {\n  154 |       const combine: ?Combine = tryGetCombine(current.impact);","start":{"line":151,"column":6,"index":4847}},{"frame":"  152 |\n  153 |       // if (reason === 'DROP') {\n> 154 |       const combine: ?Combine = tryGetCombine(current.impact);\n      |                                ^ Eager Test\n  155 |       invariant(combine);\n  156 |       // moved forwards past in home2, and then backwards onto it\n  157 |       expect(combine).toEqual({","start":{"line":154,"column":32,"index":4945}},{"frame":"  153 |       // if (reason === 'DROP') {\n  154 |       const combine: ?Combine = tryGetCombine(current.impact);\n> 155 |       invariant(combine);\n      |      ^ Eager Test\n  156 |       // moved forwards past in home2, and then backwards onto it\n  157 |       expect(combine).toEqual({\n  158 |         draggableId: preset.inHome2.descriptor.id,","start":{"line":155,"column":6,"index":4982}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  81 |       );\n  82 |       const current: State = store.getState();\n> 83 |       invariant(current.isDragging);\n     |      ^ Lazy Test\n  84 |       // impact is cleared when cancelling\n  85 |       const destination: ?DraggableLocation =\n  86 |         reason === 'DROP' ? getDragStart().source : null;","start":{"line":83,"column":6,"index":2770}},{"frame":"  133 |       {\n  134 |         const current: State = store.getState();\n> 135 |         invariant(current.phase === 'DRAGGING');\n      |        ^ Lazy Test\n  136 |         invariant(current.movementMode === 'SNAP');\n  137 |         invariant(\n  138 |           current.dimensions.droppables[inSnapMode.critical.droppable.id]","start":{"line":135,"column":8,"index":4331}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":4.545,"halstead":{"bugs":1.471,"difficulty":23.245,"effort":102593.128,"length":639,"time":5699.618,"vocabulary":120,"volume":4413.503,"operands":{"distinct":106,"total":352,"identifiers":["\"DROP\"","\"CANCEL\"","forEach","reason","describe","with drop reason: ","it","\"should fire a complete drop action is no drop animation is required\"","mock","jest","fn","store","Store","createStore","passThrough","middleware","dispatch","flush","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","mockReset","drop","toHaveBeenCalledWith","completeDrop","getCompletedArgs","toHaveBeenCalledTimes","2","\"IDLE\"","\"should fire an animate drop action if a drop animation movement is required\"","shift","Position","x","1","y","move","client","add","clientSelection","current","State","invariant","isDragging","destination","DraggableLocation","getDragStart","source","null","result","DropResult","combine","completed","CompletedDrag","impact","getDropImpactForReason","critical","afterCritical","args","AnimateDropArgs","newHomeClientOffset","origin","dropDuration","getDropDuration","animateDrop","\"DROP_ANIMATING\"","\"should fire an animate drop action if combining\"","inSnapMode","InitialPublishArgs","movementMode","\"SNAP\"","updateDroppableIsCombineEnabled","id","droppable","isCombineEnabled","true","dimensions","droppables","moveDown","moveUp","Combine","tryGetCombine","toEqual","draggableId","preset","inHome2","descriptor","droppableId","home","combineDropImpact","DragImpact","getDropImpact","draggables","lastImpact","viewport","onLiftImpact","homeImpact","mode","getNewHomeClientOffset","draggable","inHome1","any","Number"]},"operators":{"distinct":14,"total":287,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":",":?","===","... (spread)"]}},"paramCount":1,"sloc":{"logical":176,"physical":206}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../../src/invariant","type":"esm"},{"line":16,"path":"../../../../../src/state/action-creators","type":"esm"},{"line":17,"path":"../../../../../src/state/store-types","type":"esm"},{"line":18,"path":"../../../../../src/state/middleware/drop","type":"esm"},{"line":19,"path":"../../../../../src/state/middleware/drop/get-drop-duration","type":"esm"},{"line":20,"path":"../../../../../src/state/position","type":"esm"},{"line":30,"path":"../../../../util/preset-action-args","type":"esm"},{"line":31,"path":"../util/create-store","type":"esm"},{"line":32,"path":"../util/pass-through-middleware","type":"esm"},{"line":41,"path":"../../../../../src/types","type":"esm"},{"line":42,"path":"../../../../../src/state/middleware/drop/get-drop-impact","type":"esm"},{"line":43,"path":"../../../../../src/state/middleware/drop/get-new-home-client-offset","type":"esm"},{"line":44,"path":"../../../../../src/state/get-impact-location","type":"esm"}],"errors":[],"lineEnd":206,"lineStart":1,"maintainability":82.643,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":2,"effort":39.303,"length":7,"time":2.183,"vocabulary":7,"volume":19.651,"operands":{"distinct":3,"total":3,"identifiers":["describe","reason","with drop reason: "]},"operators":{"distinct":4,"total":4,"identifiers":["()","``","${}","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":160},"errors":[],"lineEnd":205,"lineStart":46,"name":"<anon method-1>","paramNames":["reason"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should fire a complete drop action is no drop animation is required\"","\"should fire an animate drop action if a drop animation movement is required\"","\"should fire an animate drop action if combining\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":158},"errors":[],"lineEnd":204,"lineStart":47,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.159,"difficulty":4.904,"effort":2332.283,"length":96,"time":129.571,"vocabulary":31,"volume":475.603,"operands":{"distinct":26,"total":51,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","middleware","dispatch","flush","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","mockReset","drop","reason","toHaveBeenCalledWith","completeDrop","getCompletedArgs","toHaveBeenCalledTimes","2","\"IDLE\""]},"operators":{"distinct":5,"total":45,"identifiers":["const","=","()",".","{}"]}},"paramCount":0,"sloc":{"logical":29,"physical":19},"errors":[],"lineEnd":66,"lineStart":48,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":3.509,"halstead":{"bugs":0.392,"difficulty":8.457,"effort":9952.256,"length":194,"time":552.903,"vocabulary":67,"volume":1176.821,"operands":{"distinct":58,"total":109,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","middleware","dispatch","initialPublish","initialPublishArgs","expect","getState","phase","toBe","\"DRAGGING\"","shift","Position","x","1","y","move","client","add","clientSelection","current","State","invariant","isDragging","destination","DraggableLocation","reason","\"DROP\"","getDragStart","source","null","mockReset","drop","result","DropResult","combine","completed","CompletedDrag","impact","getDropImpactForReason","critical","afterCritical","args","AnimateDropArgs","newHomeClientOffset","origin","dropDuration","getDropDuration","toHaveBeenCalledWith","animateDrop","toHaveBeenCalledTimes","2","\"DROP_ANIMATING\""]},"operators":{"distinct":9,"total":85,"identifiers":["const","=","()",".","{}",":",":?","===","... (spread)"]}},"paramCount":0,"sloc":{"logical":57,"physical":49},"errors":[],"lineEnd":116,"lineStart":68,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":2.5,"halstead":{"bugs":0.693,"difficulty":11.329,"effort":23549.947,"length":321,"time":1308.33,"vocabulary":89,"volume":2078.71,"operands":{"distinct":79,"total":179,"identifiers":["mock","jest","fn","store","Store","createStore","passThrough","middleware","inSnapMode","InitialPublishArgs","initialPublishArgs","movementMode","\"SNAP\"","dispatch","initialPublish","updateDroppableIsCombineEnabled","id","critical","droppable","isCombineEnabled","true","current","State","getState","invariant","phase","\"DRAGGING\"","dimensions","droppables","moveDown","moveUp","mockReset","isDragging","combine","Combine","tryGetCombine","impact","expect","toEqual","draggableId","preset","inHome2","descriptor","droppableId","home","drop","reason","combineDropImpact","DragImpact","getDropImpact","draggables","lastImpact","viewport","onLiftImpact","homeImpact","afterCritical","completed","CompletedDrag","result","getDragStart","mode","destination","null","\"DROP\"","args","AnimateDropArgs","newHomeClientOffset","getNewHomeClientOffset","draggable","inHome1","dropDuration","any","Number","toHaveBeenCalledWith","animateDrop","toHaveBeenCalledTimes","2","toBe","\"DROP_ANIMATING\""]},"operators":{"distinct":10,"total":142,"identifiers":["const","=","()",".","{}","... (spread)",":","===","[]",":?"]}},"paramCount":0,"sloc":{"logical":80,"physical":86},"errors":[],"lineEnd":203,"lineStart":118,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.333,"cyclomaticDensity":0.758,"halstead":{"bugs":0.245,"difficulty":3.874,"effort":17098.855,"length":106.5,"time":949.936,"vocabulary":20,"volume":735.584,"operands":{"distinct":17.667,"total":58.667},"operators":{"distinct":2.333,"total":47.833}},"paramCount":0.167,"sloc":{"logical":29.333,"physical":34.333}},"methodAverage":{"cyclomatic":1.4,"cyclomaticDensity":15.225,"halstead":{"bugs":0.252,"difficulty":5.638,"effort":7184.064,"length":126,"time":399.115,"vocabulary":40,"volume":756.361,"operands":{"distinct":34,"total":69.6},"operators":{"distinct":6,"total":56.4}},"paramCount":0.2,"sloc":{"logical":34.8,"physical":94.4}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-lift-effect/get-lift-effect.spec.js","testCases":1,"smells":3,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  38 |     const expected: LiftEffect = {\n  39 |       inVirtualList: false,\n> 40 |       effected: getDraggableIdMap(getDraggableIds(all)),\n     |                ^ Eager Test\n  41 |       displacedBy,\n  42 |     };\n  43 |     expect(afterCritical).toEqual(expected);","start":{"line":40,"column":16,"index":1077}},{"frame":"  38 |     const expected: LiftEffect = {\n  39 |       inVirtualList: false,\n> 40 |       effected: getDraggableIdMap(getDraggableIds(all)),\n     |                                  ^ Eager Test\n  41 |       displacedBy,\n  42 |     };\n  43 |     expect(afterCritical).toEqual(expected);","start":{"line":40,"column":34,"index":1095}},{"frame":"  45 |   {\n  46 |     const expected: DragImpact = {\n> 47 |       displaced: getForcedDisplacement({\n     |                 ^ Eager Test\n  48 |         visible: all.map((dimension) => ({ dimension, shouldAnimate: false })),\n  49 |       }),\n  50 |       displacedBy,","start":{"line":47,"column":17,"index":1249}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":7.692,"halstead":{"bugs":0.264,"difficulty":7.953,"effort":6302.035,"length":139,"time":350.113,"vocabulary":52,"volume":792.361,"operands":{"distinct":43,"total":76,"identifiers":["preset","getPreset","it","\"should mark everything after the critical \"","impact","afterCritical","getLiftEffect","draggable","inHome2","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","all","DraggableDimension","inHome3","inHome4","expected","LiftEffect","inVirtualList","false","effected","getDraggableIdMap","getDraggableIds","expect","toEqual","DragImpact","displaced","getForcedDisplacement","visible","map","dimension","shouldAnimate","at","type","\"REORDER\"","destination","getHomeLocation","descriptor"]},"operators":{"distinct":9,"total":63,"identifiers":["const","=","()","function=>","{}",":",".","[]",","]}},"paramCount":1,"sloc":{"logical":39,"physical":59}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":7,"path":"../../../../src/types","type":"esm"},{"line":8,"path":"../../../../src/state/get-lift-effect","type":"esm"},{"line":9,"path":"../../../util/dimension","type":"esm"},{"line":10,"path":"../../../../src/state/get-displaced-by","type":"esm"},{"line":11,"path":"../../../../src/state/get-home-location","type":"esm"},{"line":16,"path":"../../../util/impact","type":"esm"}],"errors":[],"lineEnd":59,"lineStart":1,"maintainability":103.285,"methods":[{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.231,"difficulty":7.846,"effort":5433.739,"length":124,"time":301.874,"vocabulary":48,"volume":692.535,"operands":{"distinct":39,"total":68,"identifiers":["impact","afterCritical","getLiftEffect","draggable","preset","inHome2","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","all","DraggableDimension","inHome3","inHome4","expected","LiftEffect","inVirtualList","false","effected","getDraggableIdMap","getDraggableIds","expect","toEqual","DragImpact","displaced","getForcedDisplacement","visible","map","dimension","at","type","\"REORDER\"","destination","getHomeLocation","descriptor"]},"operators":{"distinct":9,"total":56,"identifiers":["const","=","{}","()",":",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":32,"physical":39},"errors":[],"lineEnd":58,"lineStart":20,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.005,"difficulty":1.333,"effort":18.575,"length":6,"time":1.032,"vocabulary":5,"volume":13.932,"operands":{"distinct":3,"total":4,"identifiers":["dimension","shouldAnimate","false"]},"operators":{"distinct":2,"total":2,"identifiers":["{}",":"]}},"paramCount":1,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":48,"lineStart":48,"name":"<anon method-2>","paramNames":["dimension"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.088,"difficulty":2.651,"effort":2100.678,"length":46.333,"time":116.704,"vocabulary":17.333,"volume":264.12,"operands":{"distinct":14.333,"total":25.333},"operators":{"distinct":3,"total":21}},"paramCount":0.333,"sloc":{"logical":13,"physical":19.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":18.229,"halstead":{"bugs":0.118,"difficulty":4.59,"effort":2726.157,"length":65,"time":151.453,"vocabulary":26.5,"volume":353.233,"operands":{"distinct":21,"total":36},"operators":{"distinct":5.5,"total":29}},"paramCount":0.5,"sloc":{"logical":17.5,"physical":20}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-droppable-over/preferencing.spec.js","testCases":2,"smells":8,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  87 |  */\n  88 | it('should prefer the furthest away droppable when multiple lists are hit', () => {\n> 89 |   const offset = getOffsetForCrossAxisEndEdge({\n     |                 ^ Eager Test\n  90 |     crossAxisEndEdgeOn: droppableThird.page.borderBox.center,\n  91 |     dragging: draggable.page.borderBox,\n  92 |     axis: droppableThird.axis,","start":{"line":89,"column":17,"index":2142}},{"frame":"   95 |   const pageBorderBox: Rect = offsetRectByPosition(\n   96 |     draggable.page.borderBox,\n>  97 |     afterCrossAxisPoint(droppableThird.axis, offset),\n      |    ^ Eager Test\n   98 |   );\n   99 |\n  100 |   const result = getDroppableOver({","start":{"line":97,"column":4,"index":2399}},{"frame":"  117 |  */\n  118 | it('should prefer the second furthest away droppable when multiple lists are hit', () => {\n> 119 |   const offset = getOffsetForCrossAxisEndEdge({\n      |                 ^ Eager Test\n  120 |     crossAxisEndEdgeOn: droppableSecond.page.borderBox.center,\n  121 |     dragging: draggable.page.borderBox,\n  122 |     axis: droppableSecond.axis,","start":{"line":119,"column":17,"index":3011}},{"frame":"  125 |   const pageBorderBox: Rect = offsetRectByPosition(\n  126 |     draggable.page.borderBox,\n> 127 |     afterCrossAxisPoint(droppableSecond.axis, offset),\n      |    ^ Eager Test\n  128 |   );\n  129 |\n  130 |   const result = getDroppableOver({","start":{"line":127,"column":4,"index":3270}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  87 |  */\n  88 | it('should prefer the furthest away droppable when multiple lists are hit', () => {\n> 89 |   const offset = getOffsetForCrossAxisEndEdge({\n     |                 ^ Lazy Test\n  90 |     crossAxisEndEdgeOn: droppableThird.page.borderBox.center,\n  91 |     dragging: draggable.page.borderBox,\n  92 |     axis: droppableThird.axis,","start":{"line":89,"column":17,"index":2142}},{"frame":"   95 |   const pageBorderBox: Rect = offsetRectByPosition(\n   96 |     draggable.page.borderBox,\n>  97 |     afterCrossAxisPoint(droppableThird.axis, offset),\n      |    ^ Lazy Test\n   98 |   );\n   99 |\n  100 |   const result = getDroppableOver({","start":{"line":97,"column":4,"index":2399}},{"frame":"  117 |  */\n  118 | it('should prefer the second furthest away droppable when multiple lists are hit', () => {\n> 119 |   const offset = getOffsetForCrossAxisEndEdge({\n      |                 ^ Lazy Test\n  120 |     crossAxisEndEdgeOn: droppableSecond.page.borderBox.center,\n  121 |     dragging: draggable.page.borderBox,\n  122 |     axis: droppableSecond.axis,","start":{"line":119,"column":17,"index":3011}},{"frame":"  125 |   const pageBorderBox: Rect = offsetRectByPosition(\n  126 |     draggable.page.borderBox,\n> 127 |     afterCrossAxisPoint(droppableSecond.axis, offset),\n      |    ^ Lazy Test\n  128 |   );\n  129 |\n  130 |   const result = getDroppableOver({","start":{"line":127,"column":4,"index":3270}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":3.409,"halstead":{"bugs":0.672,"difficulty":14.786,"effort":29830.078,"length":335,"time":1657.227,"vocabulary":65,"volume":2017.493,"operands":{"distinct":56,"total":184,"identifiers":["droppableOrigin","DroppableDimension","getDroppableDimension","descriptor","id","\"large\"","type","\"standard\"","mode","borderBox","top","0","left","right","600","bottom","droppableFirst","\"small\"","1000","1100","droppableSecond","\"secondary\"","1200","1300","8000","droppableThird","\"tertiary\"","1400","1500","draggable","DraggableDimension","getDraggableDimension","\"my draggable\"","index","droppableId","client","it","\"should prefer the furthest away droppable when multiple lists are hit\"","offset","getOffsetForCrossAxisEndEdge","crossAxisEndEdgeOn","page","center","dragging","axis","pageBorderBox","Rect","offsetRectByPosition","afterCrossAxisPoint","result","getDroppableOver","droppables","toDroppableMap","expect","toEqual","\"should prefer the second furthest away droppable when multiple lists are hit\""]},"operators":{"distinct":9,"total":151,"identifiers":["const","=","()","{}",":",".","function=>","[]",","]}},"paramCount":0,"sloc":{"logical":88,"physical":143}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":6,"path":"../../../util/dimension","type":"esm"},{"line":10,"path":"../../../../src/types","type":"esm"},{"line":11,"path":"../get-drag-impact/util/get-offset-for-edge","type":"esm"},{"line":12,"path":"../../../../src/state/rect","type":"esm"},{"line":13,"path":"../../../../src/state/get-droppable-over","type":"esm"},{"line":14,"path":"../../../../src/state/dimension-structures","type":"esm"},{"line":15,"path":"../../../util/after-point","type":"esm"}],"errors":[],"lineEnd":143,"lineStart":1,"maintainability":84.785,"methods":[{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.129,"difficulty":6.72,"effort":2610.171,"length":77,"time":145.01,"vocabulary":33,"volume":388.418,"operands":{"distinct":25,"total":42,"identifiers":["offset","getOffsetForCrossAxisEndEdge","crossAxisEndEdgeOn","droppableThird","page","borderBox","center","dragging","draggable","axis","pageBorderBox","Rect","offsetRectByPosition","afterCrossAxisPoint","result","getDroppableOver","droppables","toDroppableMap","droppableOrigin","droppableFirst","droppableSecond","expect","toEqual","descriptor","id"]},"operators":{"distinct":8,"total":35,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":16,"physical":25},"errors":[],"lineEnd":112,"lineStart":88,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.129,"difficulty":6.72,"effort":2610.171,"length":77,"time":145.01,"vocabulary":33,"volume":388.418,"operands":{"distinct":25,"total":42,"identifiers":["offset","getOffsetForCrossAxisEndEdge","crossAxisEndEdgeOn","droppableSecond","page","borderBox","center","dragging","draggable","axis","pageBorderBox","Rect","offsetRectByPosition","afterCrossAxisPoint","result","getDroppableOver","droppables","toDroppableMap","droppableOrigin","droppableFirst","droppableThird","expect","toEqual","descriptor","id"]},"operators":{"distinct":8,"total":35,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":16,"physical":25},"errors":[],"lineEnd":142,"lineStart":118,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.136,"halstead":{"bugs":0.224,"difficulty":4.929,"effort":9943.359,"length":111.667,"time":552.409,"vocabulary":21.667,"volume":672.498,"operands":{"distinct":18.667,"total":61.333},"operators":{"distinct":3,"total":50.333}},"paramCount":0,"sloc":{"logical":29.333,"physical":47.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.129,"difficulty":6.72,"effort":2610.171,"length":77,"time":145.01,"vocabulary":33,"volume":388.418,"operands":{"distinct":25,"total":42},"operators":{"distinct":8,"total":35}},"paramCount":0,"sloc":{"logical":16,"physical":25}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-droppable-over/item-is-totally-over.spec.js","testCases":2,"smells":8,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  86 |     });\n  87 |\n> 88 |     expect(result).toEqual(null);\n     |    ^ Duplicate Assert\n  89 |   }\n  90 |\n  91 |   // we have overlap","start":{"line":88,"column":4,"index":2264}},{"frame":"  102 |     });\n  103 |\n> 104 |     expect(result).toEqual(droppableSmall.descriptor.id);\n      |    ^ Duplicate Assert\n  105 |   }\n  106 | });\n  107 |","start":{"line":104,"column":4,"index":2631}},{"frame":"  132 |     });\n  133 |\n> 134 |     expect(result).toEqual(null);\n      |    ^ Duplicate Assert\n  135 |   }\n  136 |\n  137 |   // we have overlap","start":{"line":134,"column":4,"index":3417}},{"frame":"  148 |     });\n  149 |\n> 150 |     expect(result).toEqual(droppableSmall.descriptor.id);\n      |    ^ Duplicate Assert\n  151 |   }\n  152 | });\n  153 |","start":{"line":150,"column":4,"index":3785}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  67 |   );\n  68 |\n> 69 |   const offset = getOffsetForCrossAxisEndEdge({\n     |                 ^ Eager Test\n  70 |     crossAxisEndEdgeOn: endEdge,\n  71 |     dragging: draggable.page.borderBox,\n  72 |     axis: droppableSmall.axis,","start":{"line":69,"column":17,"index":1821}},{"frame":"  93 |     const pageBorderBox: Rect = offsetRectByPosition(\n  94 |       draggable.page.borderBox,\n> 95 |       afterCrossAxisPoint(droppableSmall.axis, offset),\n     |      ^ Eager Test\n  96 |     );\n  97 |\n  98 |     const result = getDroppableOver({","start":{"line":95,"column":6,"index":2416}},{"frame":"  113 |   );\n  114 |\n> 115 |   const offset = getOffsetForCrossAxisStartEdge({\n      |                 ^ Eager Test\n  116 |     crossAxisStartEdgeOn: startEdge,\n  117 |     dragging: draggable.page.borderBox,\n  118 |     axis: droppableSmall.axis,","start":{"line":115,"column":17,"index":2968}},{"frame":"  139 |     const pageBorderBox: Rect = offsetRectByPosition(\n  140 |       draggable.page.borderBox,\n> 141 |       beforeCrossAxisPoint(droppableSmall.axis, offset),\n      |      ^ Eager Test\n  142 |     );\n  143 |\n  144 |     const result = getDroppableOver({","start":{"line":141,"column":6,"index":3569}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":3.297,"halstead":{"bugs":0.778,"difficulty":16.526,"effort":38595.231,"length":385,"time":2144.18,"vocabulary":67,"volume":2335.444,"operands":{"distinct":58,"total":213,"identifiers":["droppableLarge","DroppableDimension","getDroppableDimension","descriptor","id","\"large\"","type","\"standard\"","mode","borderBox","top","0","left","right","600","bottom","droppableSmall","\"small\"","1000","1100","axis","draggable","DraggableDimension","getDraggableDimension","\"my draggable\"","index","droppableId","client","it","\"should hit when dragging element completely covers the list (end edge +1)\"","endEdge","Position","patch","line","page","crossAxisEnd","center","offset","getOffsetForCrossAxisEndEdge","crossAxisEndEdgeOn","dragging","pageBorderBox","Rect","offsetRectByPosition","result","getDroppableOver","droppables","toDroppableMap","expect","toEqual","null","afterCrossAxisPoint","\"should hit when dragging element completely covers the list (start edge -1)\"","startEdge","crossAxisStart","getOffsetForCrossAxisStartEdge","crossAxisStartEdgeOn","beforeCrossAxisPoint"]},"operators":{"distinct":9,"total":172,"identifiers":["const","=","()","{}",":",".","function=>","[]",","]}},"paramCount":0,"sloc":{"logical":91,"physical":153}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":6,"path":"../../../util/dimension","type":"esm"},{"line":7,"path":"../../../../src/state/position","type":"esm"},{"line":8,"path":"../../../../src/state/rect","type":"esm"},{"line":12,"path":"../../../../src/types","type":"esm"},{"line":13,"path":"../../../../src/state/get-droppable-over","type":"esm"},{"line":17,"path":"../get-drag-impact/util/get-offset-for-edge","type":"esm"},{"line":18,"path":"../../../../src/state/dimension-structures","type":"esm"},{"line":19,"path":"../../../util/before-point","type":"esm"},{"line":20,"path":"../../../util/after-point","type":"esm"}],"errors":[],"lineEnd":153,"lineStart":1,"maintainability":83.361,"methods":[{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.231,"difficulty":10.207,"effort":7071.923,"length":133,"time":392.885,"vocabulary":37,"volume":692.857,"operands":{"distinct":29,"total":74,"identifiers":["endEdge","Position","patch","axis","line","droppableSmall","page","borderBox","crossAxisEnd","center","offset","getOffsetForCrossAxisEndEdge","crossAxisEndEdgeOn","dragging","draggable","pageBorderBox","Rect","offsetRectByPosition","result","getDroppableOver","droppables","toDroppableMap","droppableLarge","expect","toEqual","null","afterCrossAxisPoint","descriptor","id"]},"operators":{"distinct":8,"total":59,"identifiers":["const","=","()",".","[]","{}",":",","]}},"paramCount":0,"sloc":{"logical":28,"physical":45},"errors":[],"lineEnd":106,"lineStart":62,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.231,"difficulty":10.207,"effort":7071.923,"length":133,"time":392.885,"vocabulary":37,"volume":692.857,"operands":{"distinct":29,"total":74,"identifiers":["startEdge","Position","patch","axis","line","droppableSmall","page","borderBox","crossAxisStart","center","offset","getOffsetForCrossAxisStartEdge","crossAxisStartEdgeOn","dragging","draggable","pageBorderBox","Rect","offsetRectByPosition","result","getDroppableOver","droppables","toDroppableMap","droppableLarge","expect","toEqual","null","beforeCrossAxisPoint","descriptor","id"]},"operators":{"distinct":8,"total":59,"identifiers":["const","=","()",".","[]","{}",":",","]}},"paramCount":0,"sloc":{"logical":28,"physical":45},"errors":[],"lineEnd":152,"lineStart":108,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.099,"halstead":{"bugs":0.259,"difficulty":5.509,"effort":12865.077,"length":128.333,"time":714.727,"vocabulary":22.333,"volume":778.481,"operands":{"distinct":19.333,"total":71},"operators":{"distinct":3,"total":57.333}},"paramCount":0,"sloc":{"logical":30.333,"physical":51}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.231,"difficulty":10.207,"effort":7071.923,"length":133,"time":392.885,"vocabulary":37,"volume":692.857,"operands":{"distinct":29,"total":74},"operators":{"distinct":8,"total":59}},"paramCount":0,"sloc":{"logical":28,"physical":45}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-droppable-over/item-edge-is-over-list-center.spec.js","testCases":2,"smells":8,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  77 |     });\n  78 |\n> 79 |     expect(result).toEqual(null);\n     |    ^ Duplicate Assert\n  80 |   }\n  81 |\n  82 |   {","start":{"line":79,"column":4,"index":1988}},{"frame":"  92 |     });\n  93 |\n> 94 |     expect(result).toEqual(droppableSmall.descriptor.id);\n     |    ^ Duplicate Assert\n  95 |   }\n  96 | });\n  97 |","start":{"line":94,"column":4,"index":2334}},{"frame":"  116 |     });\n  117 |\n> 118 |     expect(result).toEqual(null);\n      |    ^ Duplicate Assert\n  119 |   }\n  120 |\n  121 |   {","start":{"line":118,"column":4,"index":3028}},{"frame":"  131 |     });\n  132 |\n> 133 |     expect(result).toEqual(droppableSmall.descriptor.id);\n      |    ^ Duplicate Assert\n  134 |   }\n  135 | });\n  136 |","start":{"line":133,"column":4,"index":3375}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  59 |\n  60 | it('should hit when dragging cross axis end edge is over the list center', () => {\n> 61 |   const offset = getOffsetForCrossAxisEndEdge({\n     |                 ^ Eager Test\n  62 |     crossAxisEndEdgeOn: droppableSmall.page.borderBox.center,\n  63 |     dragging: draggable.page.borderBox,\n  64 |     axis: droppableSmall.axis,","start":{"line":61,"column":17,"index":1548}},{"frame":"  83 |     const pageBorderBox: Rect = offsetRectByPosition(\n  84 |       draggable.page.borderBox,\n> 85 |       afterCrossAxisPoint(droppableSmall.axis, offset),\n     |      ^ Eager Test\n  86 |     );\n  87 |\n  88 |     const result = getDroppableOver({","start":{"line":85,"column":6,"index":2119}},{"frame":"   98 | // For this test we are hitting draggableSmall from the (right side) cross axis side\n   99 | it('should hit when dragging cross axis start edge is over the list center', () => {\n> 100 |   const offset = getOffsetForCrossAxisStartEdge({\n      |                 ^ Eager Test\n  101 |     crossAxisStartEdgeOn: droppableSmall.page.borderBox.center,\n  102 |     dragging: draggable.page.borderBox,\n  103 |     axis: droppableSmall.axis,","start":{"line":100,"column":17,"index":2584}},{"frame":"  122 |     const pageBorderBox: Rect = offsetRectByPosition(\n  123 |       draggable.page.borderBox,\n> 124 |       beforeCrossAxisPoint(droppableSmall.axis, offset),\n      |      ^ Eager Test\n  125 |     );\n  126 |\n  127 |     const result = getDroppableOver({","start":{"line":124,"column":6,"index":3159}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":3.488,"halstead":{"bugs":0.656,"difficulty":16.235,"effort":31934.735,"length":333,"time":1774.152,"vocabulary":60,"volume":1966.995,"operands":{"distinct":51,"total":184,"identifiers":["droppableLarge","DroppableDimension","getDroppableDimension","descriptor","id","\"large\"","type","\"standard\"","mode","borderBox","top","0","left","right","400","bottom","droppableSmall","\"small\"","1000","1100","draggable","DraggableDimension","getDraggableDimension","\"my draggable\"","index","droppableId","client","it","\"should hit when dragging cross axis end edge is over the list center\"","offset","getOffsetForCrossAxisEndEdge","crossAxisEndEdgeOn","page","center","dragging","axis","pageBorderBox","Rect","offsetRectByPosition","result","getDroppableOver","droppables","toDroppableMap","expect","toEqual","null","afterCrossAxisPoint","\"should hit when dragging cross axis start edge is over the list center\"","getOffsetForCrossAxisStartEdge","crossAxisStartEdgeOn","beforeCrossAxisPoint"]},"operators":{"distinct":9,"total":149,"identifiers":["const","=","()","{}",":",".","function=>","[]",","]}},"paramCount":0,"sloc":{"logical":86,"physical":136}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":6,"path":"../../../util/dimension","type":"esm"},{"line":7,"path":"../../../../src/state/rect","type":"esm"},{"line":11,"path":"../../../../src/types","type":"esm"},{"line":13,"path":"../../../../src/state/get-droppable-over","type":"esm"},{"line":17,"path":"../get-drag-impact/util/get-offset-for-edge","type":"esm"},{"line":18,"path":"../../../../src/state/dimension-structures","type":"esm"},{"line":19,"path":"../../../util/before-point","type":"esm"},{"line":20,"path":"../../../util/after-point","type":"esm"}],"errors":[],"lineEnd":136,"lineStart":1,"maintainability":84.924,"methods":[{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.183,"difficulty":10.167,"effort":5591.667,"length":110,"time":310.648,"vocabulary":32,"volume":550,"operands":{"distinct":24,"total":61,"identifiers":["offset","getOffsetForCrossAxisEndEdge","crossAxisEndEdgeOn","droppableSmall","page","borderBox","center","dragging","draggable","axis","pageBorderBox","Rect","offsetRectByPosition","result","getDroppableOver","droppables","toDroppableMap","droppableLarge","expect","toEqual","null","afterCrossAxisPoint","descriptor","id"]},"operators":{"distinct":8,"total":49,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":26,"physical":37},"errors":[],"lineEnd":96,"lineStart":60,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.183,"difficulty":10.167,"effort":5591.667,"length":110,"time":310.648,"vocabulary":32,"volume":550,"operands":{"distinct":24,"total":61,"identifiers":["offset","getOffsetForCrossAxisStartEdge","crossAxisStartEdgeOn","droppableSmall","page","borderBox","center","dragging","draggable","axis","pageBorderBox","Rect","offsetRectByPosition","result","getDroppableOver","droppables","toDroppableMap","droppableLarge","expect","toEqual","null","beforeCrossAxisPoint","descriptor","id"]},"operators":{"distinct":8,"total":49,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":26,"physical":37},"errors":[],"lineEnd":135,"lineStart":99,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.163,"halstead":{"bugs":0.219,"difficulty":5.412,"effort":10644.912,"length":111,"time":591.384,"vocabulary":20,"volume":655.665,"operands":{"distinct":17,"total":61.333},"operators":{"distinct":3,"total":49.667}},"paramCount":0,"sloc":{"logical":28.667,"physical":45.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.183,"difficulty":10.167,"effort":5591.667,"length":110,"time":310.648,"vocabulary":32,"volume":550,"operands":{"distinct":24,"total":61},"operators":{"distinct":8,"total":49}},"paramCount":0,"sloc":{"logical":26,"physical":37}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-droppable-over/center-is-over.spec.js","testCases":2,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  14 | import { offsetRectByPosition } from '../../../../src/state/rect';\n  15 |\n> 16 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  17 |   describe(`on ${axis.direction} axis`, () => {\n  18 |     const preset = getPreset(axis);\n  19 |     const active: ?Rect = preset.home.subject.active;","start":{"line":16,"column":23,"index":636}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":15.556,"halstead":{"bugs":0.377,"difficulty":12.755,"effort":14421.041,"length":193,"time":801.169,"vocabulary":58,"volume":1130.59,"operands":{"distinct":47,"total":109,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","active","Rect","home","subject","invariant","\"expected active\"","draggable","DraggableDimension","inHome1","it","\"should return a list when the center is over the list\"","corners","Position","getCorners","corner","pageOffset","subtract","page","borderBox","center","pageBorderBox","offsetRectByPosition","result","DroppableId","getDroppableOver","droppables","expect","toBe","descriptor","id","\"should not return a match when the center is not over a list (and no other candidate conditions are met)\"","outside","expandByPosition","patch","line","1","null"]},"operators":{"distinct":11,"total":84,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":3,"sloc":{"logical":45,"physical":73}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":7,"path":"../../../../src/types","type":"esm"},{"line":8,"path":"../../../../src/state/axis","type":"esm"},{"line":9,"path":"../../../util/dimension","type":"esm"},{"line":10,"path":"../../../../src/state/spacing","type":"esm"},{"line":11,"path":"../../../../src/state/get-droppable-over","type":"esm"},{"line":12,"path":"../../../../src/invariant","type":"esm"},{"line":13,"path":"../../../../src/state/position","type":"esm"},{"line":14,"path":"../../../../src/state/rect","type":"esm"}],"errors":[],"lineEnd":73,"lineStart":1,"maintainability":114.759,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":57},"errors":[],"lineEnd":72,"lineStart":16,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.052,"difficulty":3.333,"effort":518.631,"length":36,"time":28.813,"vocabulary":20,"volume":155.589,"operands":{"distinct":15,"total":20,"identifiers":["preset","getPreset","axis","active","Rect","home","subject","invariant","\"expected active\"","draggable","DraggableDimension","inHome1","it","\"should return a list when the center is over the list\"","\"should not return a match when the center is not over a list (and no other candidate conditions are met)\""]},"operators":{"distinct":5,"total":16,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":55},"errors":[],"lineEnd":71,"lineStart":17,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.015,"difficulty":2.917,"effort":131.17,"length":13,"time":7.287,"vocabulary":11,"volume":44.973,"operands":{"distinct":6,"total":7,"identifiers":["corners","Position","getCorners","active","forEach","corner"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":22},"errors":[],"lineEnd":44,"lineStart":23,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.087,"difficulty":4.571,"effort":1195.515,"length":55,"time":66.417,"vocabulary":27,"volume":261.519,"operands":{"distinct":21,"total":32,"identifiers":["pageOffset","Position","subtract","corner","draggable","page","borderBox","center","pageBorderBox","Rect","offsetRectByPosition","result","DroppableId","getDroppableOver","droppables","preset","expect","toBe","home","descriptor","id"]},"operators":{"distinct":6,"total":23,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":11,"physical":18},"errors":[],"lineEnd":43,"lineStart":26,"name":"<anon method-4>","paramNames":["corner"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.028,"difficulty":2.727,"effort":229.091,"length":21,"time":12.727,"vocabulary":16,"volume":84,"operands":{"distinct":11,"total":12,"identifiers":["outside","Position","getCorners","expandByPosition","active","patch","axis","line","1","forEach","corner"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":25},"errors":[],"lineEnd":70,"lineStart":46,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.076,"difficulty":4.579,"effort":1041.935,"length":49,"time":57.885,"vocabulary":25,"volume":227.549,"operands":{"distinct":19,"total":29,"identifiers":["pageOffset","Position","subtract","corner","draggable","page","borderBox","center","pageBorderBox","Rect","offsetRectByPosition","result","DroppableId","getDroppableOver","droppables","preset","expect","toBe","null"]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":11,"physical":17},"errors":[],"lineEnd":69,"lineStart":53,"name":"<anon method-6>","paramNames":["corner"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.222,"halstead":{"bugs":0.054,"difficulty":1.822,"effort":2060.149,"length":27.571,"time":114.453,"vocabulary":8.286,"volume":161.513,"operands":{"distinct":6.714,"total":15.571},"operators":{"distinct":1.571,"total":12}},"paramCount":0.429,"sloc":{"logical":6.429,"physical":10.429}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":20.16,"halstead":{"bugs":0.045,"difficulty":3.438,"effort":533.232,"length":30.667,"time":29.624,"vocabulary":18.167,"volume":134.475,"operands":{"distinct":12.833,"total":17.5},"operators":{"distinct":5.333,"total":13.167}},"paramCount":0.5,"sloc":{"logical":7.167,"physical":32.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/over-nothing.spec.js","testCases":1,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"   8 | import getLiftEffect from '../../../../src/state/get-lift-effect';\n   9 |\n> 10 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  11 |   describe(`on ${axis.direction} axis`, () => {\n  12 |     const preset = getPreset(axis);\n  13 |","start":{"line":10,"column":23,"index":453}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":13.333,"halstead":{"bugs":0.207,"difficulty":10.029,"effort":6224.046,"length":113,"time":345.78,"vocabulary":45,"volume":620.579,"operands":{"distinct":34,"total":62,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","it","\"should return no impact when not dragging over anything\"","farAway","Position","x","10000","y","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","home","draggables","viewport","DragImpact","getDragImpact","pageOffset","droppables","previousImpact","expect","toEqual","noImpact"]},"operators":{"distinct":11,"total":51,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":30,"physical":41}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../src/state/axis","type":"esm"},{"line":4,"path":"../../../../src/state/get-drag-impact","type":"esm"},{"line":5,"path":"../../../../src/state/no-impact","type":"esm"},{"line":6,"path":"../../../util/dimension","type":"esm"},{"line":7,"path":"../../../../src/types","type":"esm"},{"line":8,"path":"../../../../src/state/get-lift-effect","type":"esm"}],"errors":[],"lineEnd":41,"lineStart":1,"maintainability":113.222,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":31},"errors":[],"lineEnd":40,"lineStart":10,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.011,"difficulty":2,"effort":63.399,"length":10,"time":3.522,"vocabulary":9,"volume":31.699,"operands":{"distinct":5,"total":5,"identifiers":["preset","getPreset","axis","it","\"should return no impact when not dragging over anything\""]},"operators":{"distinct":4,"total":5,"identifiers":["const","=","()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":29},"errors":[],"lineEnd":39,"lineStart":11,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.136,"difficulty":6.261,"effort":2554.876,"length":84,"time":141.938,"vocabulary":29,"volume":408.07,"operands":{"distinct":23,"total":48,"identifiers":["farAway","Position","x","10000","y","afterCritical","impact","homeImpact","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","DragImpact","getDragImpact","pageOffset","droppables","previousImpact","expect","toEqual","noImpact"]},"operators":{"distinct":6,"total":36,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":22,"physical":25},"errors":[],"lineEnd":38,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.052,"difficulty":2.507,"effort":1556.012,"length":28.25,"time":86.445,"vocabulary":11.25,"volume":155.145,"operands":{"distinct":8.5,"total":15.5},"operators":{"distinct":2.75,"total":12.75}},"paramCount":0.25,"sloc":{"logical":7.5,"physical":10.25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":26.515,"halstead":{"bugs":0.053,"difficulty":3.587,"effort":900.441,"length":34.667,"time":50.024,"vocabulary":16,"volume":157.663,"operands":{"distinct":11,"total":19.333},"operators":{"distinct":5,"total":15.333}},"paramCount":0.333,"sloc":{"logical":9.333,"physical":28.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/is-disabled.spec.js","testCases":2,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  13 | import { origin } from '../../../../src/state/position';\n  14 |\n> 15 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  16 |   describe(`on ${axis.direction} axis`, () => {\n  17 |     const preset = getPreset(axis);\n  18 |","start":{"line":15,"column":23,"index":533}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":10.417,"halstead":{"bugs":0.369,"difficulty":16.05,"effort":17749.459,"length":194,"time":986.081,"vocabulary":52,"volume":1105.885,"operands":{"distinct":40,"total":107,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","home","draggables","viewport","it","\"should return no impact when home is disabled\"","disabled","DroppableDimension","disableDroppable","withDisabled","DroppableDimensionMap","droppables","descriptor","id","DragImpact","getDragImpact","pageOffset","origin","previousImpact","expect","toEqual","noImpact","\"should return no impact when foreign is disabled\"","foreign","inForeign1"]},"operators":{"distinct":12,"total":87,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":","... (spread)"]}},"paramCount":1,"sloc":{"logical":48,"physical":68}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":7,"path":"../../../../src/types","type":"esm"},{"line":8,"path":"../../../../src/state/axis","type":"esm"},{"line":9,"path":"../../../../src/state/get-drag-impact","type":"esm"},{"line":10,"path":"../../../../src/state/no-impact","type":"esm"},{"line":11,"path":"../../../util/dimension","type":"esm"},{"line":12,"path":"../../../../src/state/get-lift-effect","type":"esm"},{"line":13,"path":"../../../../src/state/position","type":"esm"}],"errors":[],"lineEnd":68,"lineStart":1,"maintainability":106.402,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":53},"errors":[],"lineEnd":67,"lineStart":15,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.067,"difficulty":5.6,"effort":1123.777,"length":45,"time":62.432,"vocabulary":22,"volume":200.674,"operands":{"distinct":15,"total":24,"identifiers":["preset","getPreset","axis","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","home","draggables","viewport","it","\"should return no impact when home is disabled\"","\"should return no impact when foreign is disabled\""]},"operators":{"distinct":7,"total":21,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":14,"physical":51},"errors":[],"lineEnd":66,"lineStart":16,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.108,"difficulty":5.18,"effort":1683.5,"length":65,"time":93.528,"vocabulary":32,"volume":325,"operands":{"distinct":25,"total":37,"identifiers":["disabled","DroppableDimension","disableDroppable","preset","home","withDisabled","DroppableDimensionMap","droppables","descriptor","id","impact","DragImpact","getDragImpact","pageOffset","origin","draggable","inHome1","draggables","previousImpact","homeImpact","viewport","afterCritical","expect","toEqual","noImpact"]},"operators":{"distinct":7,"total":28,"identifiers":["const","=","()",".","{}","... (spread)",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":20},"errors":[],"lineEnd":45,"lineStart":26,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.108,"difficulty":5.18,"effort":1683.5,"length":65,"time":93.528,"vocabulary":32,"volume":325,"operands":{"distinct":25,"total":37,"identifiers":["disabled","DroppableDimension","disableDroppable","preset","foreign","withDisabled","DroppableDimensionMap","droppables","descriptor","id","impact","DragImpact","getDragImpact","pageOffset","origin","draggable","inForeign1","draggables","previousImpact","homeImpact","viewport","afterCritical","expect","toEqual","noImpact"]},"operators":{"distinct":7,"total":28,"identifiers":["const","=","()",".","{}","... (spread)",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":19},"errors":[],"lineEnd":65,"lineStart":47,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.083,"halstead":{"bugs":0.074,"difficulty":3.21,"effort":3549.892,"length":38.8,"time":197.216,"vocabulary":10.4,"volume":221.177,"operands":{"distinct":8,"total":21.4},"operators":{"distinct":2.4,"total":17.4}},"paramCount":0.2,"sloc":{"logical":9.6,"physical":13.6}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":17.619,"halstead":{"bugs":0.074,"difficulty":4.615,"effort":1143.456,"length":46.25,"time":63.525,"vocabulary":24,"volume":220.973,"operands":{"distinct":17.5,"total":25.75},"operators":{"distinct":6.5,"total":20.5}},"paramCount":0.25,"sloc":{"logical":11.5,"physical":35.75}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/reorder/over-home-list/with-droppable-scroll.spec.js","testCases":2,"smells":3,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  21 | const viewport: Viewport = getViewport();\n  22 |\n> 23 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  24 |   describe(`on ${axis.direction} axis`, () => {\n  25 |     const preset = getPreset(axis);\n  26 |","start":{"line":23,"column":23,"index":938}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  72 |\n  73 |         const expected: DragImpact = {\n> 74 |           displaced: getForcedDisplacement({\n     |                     ^ Lazy Test\n  75 |             // inHome2 no longer displaced\n  76 |             // originally displaced so not animated\n  77 |             visible: [","start":{"line":74,"column":21,"index":2685}},{"frame":"  137 |\n  138 |         const expected: DragImpact = {\n> 139 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  140 |             visible: [\n  141 |               // ordered by closest to current location\n  142 |               { dimension: preset.inHome2 },","start":{"line":139,"column":21,"index":4906}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":6.863,"halstead":{"bugs":1.008,"difficulty":23.52,"effort":71128.42,"length":467,"time":3951.579,"vocabulary":89,"volume":3024.168,"operands":{"distinct":75,"total":252,"identifiers":["viewport","Viewport","getViewport","vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","scrollableHome","DroppableDimension","makeScrollable","home","withScrollableHome","droppables","descriptor","id","\"moving beyond start position with own scroll\"","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","draggables","it","\"should move past other draggables\"","centerOfInHome2","inHome2","page","borderBox","center","line","distanceNeeded","Position","patch","end","1","scrolledHome","scrollDroppable","updatedDroppables","DroppableDimensionMap","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","DragImpact","getDragImpact","pageOffset","origin","previousImpact","expected","displaced","getForcedDisplacement","visible","dimension","inHome3","shouldAnimate","false","inHome4","at","type","\"REORDER\"","destination","droppableId","index","expect","toEqual","\"moving back past start position with own scroll\"","\"should move back past inHome2\"","start"]},"operators":{"distinct":14,"total":215,"identifiers":["const","=","()",".","[]",",","function=>","``","${}","{}","... (spread)",":","+","-"]}},"paramCount":1,"sloc":{"logical":102,"physical":162}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":10,"path":"../../../../../../src/types","type":"esm"},{"line":11,"path":"../../../../../../src/state/axis","type":"esm"},{"line":12,"path":"../../../../../../src/state/droppable/scroll-droppable","type":"esm"},{"line":13,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":14,"path":"../../../../../../src/state/get-drag-impact","type":"esm"},{"line":15,"path":"../../../../../../src/state/position","type":"esm"},{"line":16,"path":"../../../../../../src/view/window/get-viewport","type":"esm"},{"line":17,"path":"../../../../../util/dimension","type":"esm"},{"line":18,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":19,"path":"../../../../../util/impact","type":"esm"}],"errors":[],"lineEnd":162,"lineStart":1,"maintainability":96.045,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":139},"errors":[],"lineEnd":161,"lineStart":23,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.059,"difficulty":5.714,"effort":1019.299,"length":40,"time":56.628,"vocabulary":22,"volume":178.377,"operands":{"distinct":14,"total":20,"identifiers":["preset","getPreset","axis","scrollableHome","DroppableDimension","makeScrollable","home","withScrollableHome","droppables","descriptor","id","describe","\"moving beyond start position with own scroll\"","\"moving back past start position with own scroll\""]},"operators":{"distinct":8,"total":20,"identifiers":["const","=","()",".","{}","... (spread)",":","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":137},"errors":[],"lineEnd":160,"lineStart":24,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.043,"difficulty":4.577,"effort":593.434,"length":30,"time":32.969,"vocabulary":20,"volume":129.658,"operands":{"distinct":13,"total":17,"identifiers":["afterCritical","impact","homeImpact","getLiftEffect","draggable","preset","inHome1","home","scrollableHome","draggables","viewport","it","\"should move past other draggables\""]},"operators":{"distinct":7,"total":13,"identifiers":["const","=","{}",":","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":61},"errors":[],"lineEnd":94,"lineStart":34,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.353,"difficulty":9.167,"effort":9709.503,"length":174,"time":539.417,"vocabulary":68,"volume":1059.219,"operands":{"distinct":57,"total":95,"identifiers":["centerOfInHome2","preset","inHome2","page","borderBox","center","axis","line","distanceNeeded","Position","patch","inHome1","end","1","scrolledHome","DroppableDimension","scrollDroppable","scrollableHome","updatedDroppables","DroppableDimensionMap","withScrollableHome","home","descriptor","id","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","impact","DragImpact","getDragImpact","pageOffset","origin","draggable","draggables","droppables","previousImpact","homeImpact","viewport","afterCritical","expected","displaced","getForcedDisplacement","visible","dimension","inHome3","shouldAnimate","false","inHome4","at","type","\"REORDER\"","destination","droppableId","index","expect","toEqual"]},"operators":{"distinct":11,"total":79,"identifiers":["const","=","[]",".","()","+","-","{}","... (spread)",":",","]}},"paramCount":0,"sloc":{"logical":34,"physical":52},"errors":[],"lineEnd":93,"lineStart":42,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.065,"difficulty":4.667,"effort":910.196,"length":42,"time":50.566,"vocabulary":25,"volume":195.042,"operands":{"distinct":18,"total":24,"identifiers":["afterCritical","impact","homeImpact","getLiftEffect","draggable","preset","inHome4","home","scrollableHome","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","it","\"should move back past inHome2\""]},"operators":{"distinct":7,"total":18,"identifiers":["const","=","{}",":","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":63},"errors":[],"lineEnd":159,"lineStart":97,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.308,"difficulty":8.235,"effort":7619.253,"length":156,"time":423.292,"vocabulary":61,"volume":925.195,"operands":{"distinct":51,"total":84,"identifiers":["centerOfInHome2","preset","inHome2","page","borderBox","center","axis","line","distanceNeeded","Position","patch","inHome4","start","1","scrolledHome","DroppableDimension","scrollDroppable","scrollableHome","updatedDroppables","DroppableDimensionMap","withScrollableHome","home","descriptor","id","impact","DragImpact","getDragImpact","pageOffset","origin","draggable","draggables","droppables","previousImpact","homeImpact","viewport","afterCritical","expected","displaced","getForcedDisplacement","visible","dimension","inHome3","displacedBy","at","type","\"REORDER\"","destination","droppableId","index","expect","toEqual"]},"operators":{"distinct":10,"total":72,"identifiers":["const","=","[]",".","()","-","{}","... (spread)",":",","]}},"paramCount":0,"sloc":{"logical":30,"physical":50},"errors":[],"lineEnd":158,"lineStart":109,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.98,"halstead":{"bugs":0.144,"difficulty":3.36,"effort":10161.203,"length":66.714,"time":564.511,"vocabulary":12.714,"volume":432.024,"operands":{"distinct":10.714,"total":36},"operators":{"distinct":2,"total":30.714}},"paramCount":0.143,"sloc":{"logical":14.571,"physical":23.143}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.101,"halstead":{"bugs":0.14,"difficulty":5.81,"effort":3322.456,"length":75.333,"time":184.581,"vocabulary":34.333,"volume":420.118,"operands":{"distinct":26.333,"total":40.833},"operators":{"distinct":8,"total":34.5}},"paramCount":0.167,"sloc":{"logical":16.333,"physical":83.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/reorder/over-home-list/started-before-critical.spec.js","testCases":2,"smells":9,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  21 | } from '../../util/get-offset-for-edge';\n  22 |\n> 23 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  24 |   describe(`on ${axis.direction} axis`, () => {\n  25 |     const preset = getPreset(axis);\n  26 |     const viewport: Viewport = preset.viewport;","start":{"line":23,"column":23,"index":878}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  140 |           afterCritical,\n  141 |         });\n> 142 |         expect(impact).toEqual(startBeforeInHome1Center);\n      |        ^ Duplicate Assert\n  143 |       }\n  144 |       // no longer displace as we have moved onto the displaced top edge\n  145 |       {","start":{"line":142,"column":8,"index":4956}},{"frame":"  172 |           },\n  173 |         };\n> 174 |         expect(impact).toEqual(expected);\n      |        ^ Duplicate Assert\n  175 |       }\n  176 |     });\n  177 |   });","start":{"line":174,"column":8,"index":6065}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  67 |\n  68 |         const expected: DragImpact = {\n> 69 |           displaced: getForcedDisplacement({\n     |                     ^ Eager Test\n  70 |             // ordered by closest to current location\n  71 |             visible: [\n  72 |               { dimension: preset.inHome2, shouldAnimate: true },","start":{"line":69,"column":21,"index":2426}},{"frame":"  91 |       {\n  92 |         const expected: DragImpact = {\n> 93 |           displaced: getForcedDisplacement({\n     |                     ^ Eager Test\n  94 |             // ordered by closest to current location\n  95 |             visible: [\n  96 |               { dimension: preset.inHome1 },","start":{"line":93,"column":21,"index":3292}},{"frame":"  121 |       );\n  122 |\n> 123 |       const offsetForEndOnDisplacedInHome1Center: Position = getOffsetForEndEdge(\n      |                                                             ^ Eager Test\n  124 |         {\n  125 |           endEdgeOn: displacedInHome1Center,\n  126 |           dragging: preset.inHome3.page.borderBox,","start":{"line":123,"column":61,"index":4407}},{"frame":"  155 |\n  156 |         const expected: DragImpact = {\n> 157 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  158 |             visible: [\n  159 |               { dimension: preset.inHome2 },\n  160 |               // not displacing inHome3 as it is the dragging item","start":{"line":157,"column":21,"index":5513}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  67 |\n  68 |         const expected: DragImpact = {\n> 69 |           displaced: getForcedDisplacement({\n     |                     ^ Lazy Test\n  70 |             // ordered by closest to current location\n  71 |             visible: [\n  72 |               { dimension: preset.inHome2, shouldAnimate: true },","start":{"line":69,"column":21,"index":2426}},{"frame":"  155 |\n  156 |         const expected: DragImpact = {\n> 157 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  158 |             visible: [\n  159 |               { dimension: preset.inHome2 },\n  160 |               // not displacing inHome3 as it is the dragging item","start":{"line":157,"column":21,"index":5513}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":4.167,"halstead":{"bugs":1.053,"difficulty":21.225,"effort":67065.816,"length":497,"time":3725.879,"vocabulary":82,"volume":3159.703,"operands":{"distinct":71,"total":274,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","viewport","Viewport","displacedBy","DisplacedBy","getDisplacedBy","inHome3","displaceBy","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","offsetForStartOnInHome1Center","Position","getOffsetForStartEdge","startEdgeOn","inHome1","page","borderBox","center","dragging","startBeforeInHome1Center","DragImpact","getDragImpact","pageOffset","beforePoint","droppables","previousImpact","it","\"should displace items forward when the start edge of the dragging item goes backwards past the items center\"","startOnInHome1Center","expected","displaced","getForcedDisplacement","visible","dimension","inHome2","shouldAnimate","true","inHome4","false","at","type","\"REORDER\"","destination","droppableId","descriptor","id","index","expect","toEqual","\"should end displacement if the dragging item bottom edge goes forward past the displaced center\"","displacedInHome1Center","add","point","offsetForEndOnDisplacedInHome1Center","getOffsetForEndEdge","endEdgeOn","afterPoint"]},"operators":{"distinct":11,"total":223,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":120,"physical":179}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../../../src/state/get-drag-impact","type":"esm"},{"line":4,"path":"../../../../../../src/state/position","type":"esm"},{"line":5,"path":"../../../../../../src/state/axis","type":"esm"},{"line":6,"path":"../../../../../util/dimension","type":"esm"},{"line":7,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":13,"path":"../../../../../../src/types","type":"esm"},{"line":14,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":15,"path":"../../../../../util/before-point","type":"esm"},{"line":16,"path":"../../../../../util/after-point","type":"esm"},{"line":17,"path":"../../../../../util/impact","type":"esm"},{"line":21,"path":"../../util/get-offset-for-edge","type":"esm"}],"errors":[],"lineEnd":179,"lineStart":1,"maintainability":87.012,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":156},"errors":[],"lineEnd":178,"lineStart":23,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.232,"difficulty":7.097,"effort":4929.46,"length":128,"time":273.859,"vocabulary":43,"volume":694.562,"operands":{"distinct":36,"total":73,"identifiers":["preset","getPreset","axis","viewport","Viewport","displacedBy","DisplacedBy","getDisplacedBy","inHome3","displaceBy","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","offsetForStartOnInHome1Center","Position","getOffsetForStartEdge","startEdgeOn","inHome1","page","borderBox","center","dragging","startBeforeInHome1Center","DragImpact","getDragImpact","pageOffset","beforePoint","droppables","previousImpact","it","\"should displace items forward when the start edge of the dragging item goes backwards past the items center\"","\"should end displacement if the dragging item bottom edge goes forward past the displaced center\""]},"operators":{"distinct":7,"total":55,"identifiers":["const","=","()",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":32,"physical":154},"errors":[],"lineEnd":177,"lineStart":24,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.439,"halstead":{"bugs":0.317,"difficulty":9.579,"effort":9100.504,"length":172,"time":505.584,"vocabulary":46,"volume":950.053,"operands":{"distinct":38,"total":91,"identifiers":["startOnInHome1Center","DragImpact","getDragImpact","pageOffset","offsetForStartOnInHome1Center","draggable","preset","inHome3","draggables","droppables","previousImpact","homeImpact","viewport","afterCritical","expected","displaced","getForcedDisplacement","visible","dimension","inHome2","shouldAnimate","true","inHome4","false","displacedBy","at","type","\"REORDER\"","destination","droppableId","home","descriptor","id","index","expect","toEqual","inHome1","startBeforeInHome1Center"]},"operators":{"distinct":8,"total":81,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":41,"physical":61},"errors":[],"lineEnd":115,"lineStart":55,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.326,"halstead":{"bugs":0.345,"difficulty":8.417,"effort":8700.386,"length":178,"time":483.355,"vocabulary":56,"volume":1033.709,"operands":{"distinct":48,"total":101,"identifiers":["displacedInHome1Center","Position","add","preset","inHome1","page","borderBox","center","displacedBy","point","offsetForEndOnDisplacedInHome1Center","getOffsetForEndEdge","endEdgeOn","dragging","inHome3","axis","impact","DragImpact","getDragImpact","pageOffset","draggable","draggables","droppables","previousImpact","startBeforeInHome1Center","viewport","afterCritical","expect","toEqual","afterPoint","expected","displaced","getForcedDisplacement","visible","dimension","inHome2","inHome4","shouldAnimate","false","at","type","\"REORDER\"","destination","droppableId","home","descriptor","id","index"]},"operators":{"distinct":8,"total":77,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":43,"physical":60},"errors":[],"lineEnd":176,"lineStart":117,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.833,"halstead":{"bugs":0.211,"difficulty":4.245,"effort":13413.163,"length":99.4,"time":745.176,"vocabulary":16.4,"volume":631.941,"operands":{"distinct":14.2,"total":54.8},"operators":{"distinct":2.2,"total":44.6}},"paramCount":0.2,"sloc":{"logical":24,"physical":35.8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.472,"halstead":{"bugs":0.226,"difficulty":6.898,"effort":5703.35,"length":122,"time":316.853,"vocabulary":38.75,"volume":677.886,"operands":{"distinct":31.75,"total":67.5},"operators":{"distinct":7,"total":54.5}},"paramCount":0.25,"sloc":{"logical":29.5,"physical":107.75}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/reorder/over-home-list/started-after-critical.spec.js","testCases":2,"smells":9,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  22 | } from '../../util/get-offset-for-edge';\n  23 |\n> 24 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  25 |   describe(`on ${axis.direction} axis`, () => {\n  26 |     const preset = getPreset(axis);\n  27 |     const viewport: Viewport = preset.viewport;","start":{"line":24,"column":23,"index":960}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  141 |           afterCritical,\n  142 |         });\n> 143 |         expect(impact).toEqual(endPastInHome3Center);\n      |        ^ Duplicate Assert\n  144 |       }\n  145 |       // no longer displace as we move backwards past the displaced center\n  146 |       {","start":{"line":143,"column":8,"index":4665}},{"frame":"  181 |         };\n  182 |\n> 183 |         expect(impact).toEqual(expected);\n      |        ^ Duplicate Assert\n  184 |       }\n  185 |     });\n  186 |   });","start":{"line":183,"column":8,"index":5953}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  67 |\n  68 |         const expected: DragImpact = {\n> 69 |           displaced: getForcedDisplacement({\n     |                     ^ Eager Test\n  70 |             // inHome4 would have been displaced on lift so it won't be animated\n  71 |             visible: [\n  72 |               {","start":{"line":69,"column":21,"index":2436}},{"frame":"  91 |\n  92 |       const expected: DragImpact = {\n> 93 |         displaced: getForcedDisplacement({\n     |                   ^ Eager Test\n  94 |           // inHome4 would have been displaced on lift so it won't be animated\n  95 |           visible: [\n  96 |             {","start":{"line":93,"column":19,"index":3102}},{"frame":"  122 |       );\n  123 |\n> 124 |       const offsetForStartOnDisplacedInHome2Center: Position = getOffsetForStartEdge(\n      |                                                               ^ Eager Test\n  125 |         {\n  126 |           startEdgeOn: displacedInHome3Center,\n  127 |           dragging: preset.inHome2.page.borderBox,","start":{"line":124,"column":63,"index":4114}},{"frame":"  156 |\n  157 |         const expected: DragImpact = {\n> 158 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  159 |             // inHome4 would have been displaced on lift so it won't be animated\n  160 |             visible: [\n  161 |               // inHome3 is now animated","start":{"line":158,"column":21,"index":5219}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  67 |\n  68 |         const expected: DragImpact = {\n> 69 |           displaced: getForcedDisplacement({\n     |                     ^ Lazy Test\n  70 |             // inHome4 would have been displaced on lift so it won't be animated\n  71 |             visible: [\n  72 |               {","start":{"line":69,"column":21,"index":2436}},{"frame":"  156 |\n  157 |         const expected: DragImpact = {\n> 158 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  159 |             // inHome4 would have been displaced on lift so it won't be animated\n  160 |             visible: [\n  161 |               // inHome3 is now animated","start":{"line":158,"column":21,"index":5219}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":4.237,"halstead":{"bugs":1.004,"difficulty":20.451,"effort":61627.781,"length":474,"time":3423.766,"vocabulary":82,"volume":3013.48,"operands":{"distinct":71,"total":264,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","viewport","Viewport","displacedBy","DisplacedBy","getDisplacedBy","inHome2","displaceBy","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","offsetForEndOnInHome3Center","Position","getOffsetForEndEdge","endEdgeOn","inHome3","page","borderBox","center","dragging","endPastInHome3Center","DragImpact","getDragImpact","pageOffset","afterPoint","droppables","previousImpact","it","\"should displace items backwards when end of dragging item goes past the target center\"","endOnInHome3Center","expected","displaced","getForcedDisplacement","visible","dimension","shouldAnimate","false","inHome4","at","type","\"REORDER\"","destination","getHomeLocation","descriptor","expect","toEqual","droppableId","id","index","\"should end displacement if the start of the dragging item is less than the displaced target center\"","displacedInHome3Center","subtract","point","offsetForStartOnDisplacedInHome2Center","getOffsetForStartEdge","startEdgeOn","beforePoint","true"]},"operators":{"distinct":11,"total":210,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":118,"physical":188}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../../../src/state/get-drag-impact","type":"esm"},{"line":4,"path":"../../../../../../src/state/position","type":"esm"},{"line":5,"path":"../../../../../../src/state/axis","type":"esm"},{"line":6,"path":"../../../../../util/dimension","type":"esm"},{"line":7,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":13,"path":"../../../../../../src/types","type":"esm"},{"line":14,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":15,"path":"../../../../../util/before-point","type":"esm"},{"line":16,"path":"../../../../../util/after-point","type":"esm"},{"line":17,"path":"../../../../../../src/state/get-home-location","type":"esm"},{"line":18,"path":"../../../../../util/impact","type":"esm"},{"line":22,"path":"../../util/get-offset-for-edge","type":"esm"}],"errors":[],"lineEnd":188,"lineStart":1,"maintainability":87.573,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":164},"errors":[],"lineEnd":187,"lineStart":24,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.232,"difficulty":7.097,"effort":4929.46,"length":128,"time":273.859,"vocabulary":43,"volume":694.562,"operands":{"distinct":36,"total":73,"identifiers":["preset","getPreset","axis","viewport","Viewport","displacedBy","DisplacedBy","getDisplacedBy","inHome2","displaceBy","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","offsetForEndOnInHome3Center","Position","getOffsetForEndEdge","endEdgeOn","inHome3","page","borderBox","center","dragging","endPastInHome3Center","DragImpact","getDragImpact","pageOffset","afterPoint","droppables","previousImpact","it","\"should displace items backwards when end of dragging item goes past the target center\"","\"should end displacement if the start of the dragging item is less than the displaced target center\""]},"operators":{"distinct":7,"total":55,"identifiers":["const","=","()",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":32,"physical":162},"errors":[],"lineEnd":186,"lineStart":25,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.267,"difficulty":8.541,"effort":6847.896,"length":146,"time":380.439,"vocabulary":45,"volume":801.811,"operands":{"distinct":37,"total":79,"identifiers":["endOnInHome3Center","DragImpact","getDragImpact","pageOffset","offsetForEndOnInHome3Center","draggable","preset","inHome2","draggables","droppables","previousImpact","homeImpact","viewport","afterCritical","expected","displaced","getForcedDisplacement","visible","dimension","inHome3","shouldAnimate","false","inHome4","displacedBy","at","type","\"REORDER\"","destination","getHomeLocation","descriptor","expect","toEqual","droppableId","home","id","index","endPastInHome3Center"]},"operators":{"distinct":8,"total":67,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":38,"physical":59},"errors":[],"lineEnd":114,"lineStart":56,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.273,"halstead":{"bugs":0.35,"difficulty":8.583,"effort":9022.21,"length":181,"time":501.234,"vocabulary":56,"volume":1051.131,"operands":{"distinct":48,"total":103,"identifiers":["displacedInHome3Center","Position","subtract","preset","inHome3","page","borderBox","center","displacedBy","point","offsetForStartOnDisplacedInHome2Center","getOffsetForStartEdge","startEdgeOn","dragging","inHome2","axis","impact","DragImpact","getDragImpact","pageOffset","draggable","draggables","droppables","previousImpact","endPastInHome3Center","viewport","afterCritical","expect","toEqual","beforePoint","expected","displaced","getForcedDisplacement","visible","dimension","shouldAnimate","true","inHome4","false","at","type","\"REORDER\"","destination","droppableId","home","descriptor","id","index"]},"operators":{"distinct":8,"total":78,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":44,"physical":68},"errors":[],"lineEnd":185,"lineStart":118,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.847,"halstead":{"bugs":0.201,"difficulty":4.09,"effort":12325.556,"length":94.8,"time":684.753,"vocabulary":16.4,"volume":602.696,"operands":{"distinct":14.2,"total":52.8},"operators":{"distinct":2.2,"total":42}},"paramCount":0.2,"sloc":{"logical":23.6,"physical":37.6}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.507,"halstead":{"bugs":0.215,"difficulty":6.68,"effort":5220.653,"length":116.25,"time":290.036,"vocabulary":38.5,"volume":645.181,"operands":{"distinct":31.5,"total":65},"operators":{"distinct":7,"total":51.25}},"paramCount":0.25,"sloc":{"logical":29,"physical":113.25}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/reorder/over-home-list/move-past-last-item.spec.js","testCases":1,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  11 | import { getOffsetForEndEdge } from '../../util/get-offset-for-edge';\n  12 |\n> 13 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  14 |   describe(`on ${axis.direction} axis`, () => {\n  15 |     it('should allow movement past the last item', () => {\n  16 |       const preset = getPreset(axis);","start":{"line":13,"column":23,"index":709}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":9.302,"halstead":{"bugs":0.366,"difficulty":10.481,"effort":11508.283,"length":183,"time":639.349,"vocabulary":64,"volume":1098,"operands":{"distinct":53,"total":101,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","it","\"should allow movement past the last item\"","preset","getPreset","viewport","Viewport","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","home","draggables","offsetForEndOnInHome4Center","Position","getOffsetForEndEdge","endEdgeOn","inHome4","page","borderBox","center","dragging","goingForwards","DragImpact","getDragImpact","pageOffset","afterPoint","droppables","previousImpact","expected","displaced","emptyGroups","displacedBy","getDisplacedBy","displaceBy","at","type","\"REORDER\"","destination","index","descriptor","droppableId","expect","toEqual"]},"operators":{"distinct":11,"total":82,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":43,"physical":56}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../../../src/types","type":"esm"},{"line":4,"path":"../../../../../../src/state/axis","type":"esm"},{"line":5,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":6,"path":"../../../../../../src/state/get-drag-impact","type":"esm"},{"line":7,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":8,"path":"../../../../../util/dimension","type":"esm"},{"line":9,"path":"../../../../../../src/state/no-impact","type":"esm"},{"line":10,"path":"../../../../../util/after-point","type":"esm"},{"line":11,"path":"../../util/get-offset-for-edge","type":"esm"}],"errors":[],"lineEnd":56,"lineStart":1,"maintainability":105.288,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":43},"errors":[],"lineEnd":55,"lineStart":13,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should allow movement past the last item\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":41},"errors":[],"lineEnd":54,"lineStart":14,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.703,"halstead":{"bugs":0.301,"difficulty":6.136,"effort":5541.241,"length":160,"time":307.847,"vocabulary":50,"volume":903.017,"operands":{"distinct":44,"total":90,"identifiers":["preset","getPreset","axis","viewport","Viewport","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","home","draggables","offsetForEndOnInHome4Center","Position","getOffsetForEndEdge","endEdgeOn","inHome4","page","borderBox","center","dragging","goingForwards","DragImpact","getDragImpact","pageOffset","afterPoint","droppables","previousImpact","expected","displaced","emptyGroups","displacedBy","getDisplacedBy","displaceBy","at","type","\"REORDER\"","destination","index","descriptor","droppableId","expect","toEqual"]},"operators":{"distinct":6,"total":70,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":37,"physical":39},"errors":[],"lineEnd":53,"lineStart":15,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.326,"halstead":{"bugs":0.092,"difficulty":2.62,"effort":2877.071,"length":45.75,"time":159.837,"vocabulary":16,"volume":274.5,"operands":{"distinct":13.25,"total":25.25},"operators":{"distinct":2.75,"total":20.5}},"paramCount":0.25,"sloc":{"logical":10.75,"physical":14}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":34.234,"halstead":{"bugs":0.105,"difficulty":3.212,"effort":1877.43,"length":58,"time":104.302,"vocabulary":21.333,"volume":314.745,"operands":{"distinct":17,"total":32.333},"operators":{"distinct":4.333,"total":25.667}},"paramCount":0.333,"sloc":{"logical":13.667,"physical":41}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/reorder/over-home-list/displacement-visibility.spec.js","testCases":2,"smells":3,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  29 | // this is just an application of get-displacement.spec\n  30 |\n> 31 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  32 |   describe(`on ${axis.direction} axis`, () => {\n  33 |     const crossAxisStart: number = 0;\n  34 |     const crossAxisEnd: number = 100;","start":{"line":31,"column":23,"index":1114}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  139 |       );\n  140 |       const expected: DragImpact = {\n> 141 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  142 |           visible: [\n  143 |             {\n  144 |               dimension: visible,","start":{"line":141,"column":19,"index":4746}},{"frame":"  278 |       const expected: DragImpact = {\n  279 |         // no longer the same due to visibility overscanning\n> 280 |         displaced: getForcedDisplacement({\n      |                   ^ Lazy Test\n  281 |           visible: [\n  282 |             {\n  283 |               dimension: partialVisible,","start":{"line":280,"column":19,"index":9328}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":2.193,"halstead":{"bugs":2.385,"difficulty":34.201,"effort":244726.109,"length":1036,"time":13595.895,"vocabulary":120,"volume":7155.539,"operands":{"distinct":107,"total":563,"identifiers":["viewport","Viewport","getViewport","vertical","horizontal","forEach","axis","describe","direction","on "," axis","crossAxisStart","0","crossAxisEnd","100","it","\"should indicate when a displacement is not visible due to being outside of the droppable frame\"","droppable","DroppableDimension","getDroppableDimension","descriptor","id","\"my-custom-droppable\"","type","\"TYPE\"","mode","\"standard\"","borderBox","start","end","200","closest","scrollSize","scrollWidth","scrollHeight","scroll","x","y","shouldClipSubject","true","visible","DraggableDimension","getDraggableDimension","\"visible\"","droppableId","index","90","partialVisible","\"partial-visible\"","1","120","notVisible1","\"not-visible-1\"","2","130","140","notVisible2","\"not-visible-2\"","3","150","170","customDraggables","DraggableDimensionMap","customDroppables","DroppableDimensionMap","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","expected","DragImpact","displaced","getForcedDisplacement","dimension","shouldAnimate","invisible","at","\"REORDER\"","destination","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","Position","offset","subtract","page","center","getDragImpact","pageOffset","droppables","previousImpact","expect","toEqual","\"should indicate when a displacement is not visible due to being outside of the viewport\"","frame","20","10","marginBox","size","crossAxisSize","origin","noImpact","noAfterCritical"]},"operators":{"distinct":13,"total":473,"identifiers":["const","=","()",".","[]",",","function=>","``","${}","{}",":","+","-"]}},"paramCount":1,"sloc":{"logical":228,"physical":317}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../../../src/state/get-drag-impact","type":"esm"},{"line":4,"path":"../../../../../../src/state/no-impact","type":"esm"},{"line":5,"path":"../../../../../../src/state/axis","type":"esm"},{"line":6,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":16,"path":"../../../../../../src/types","type":"esm"},{"line":20,"path":"../../../../../util/dimension","type":"esm"},{"line":21,"path":"../../../../../../src/view/window/get-viewport","type":"esm"},{"line":22,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":23,"path":"../../../../../util/impact","type":"esm"},{"line":24,"path":"../../../../../util/no-after-critical","type":"esm"},{"line":25,"path":"../../../../../../src/state/position","type":"esm"}],"errors":[],"lineEnd":317,"lineStart":1,"maintainability":72.187,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":286},"errors":[],"lineEnd":316,"lineStart":31,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.018,"difficulty":2.286,"effort":126.516,"length":16,"time":7.029,"vocabulary":11,"volume":55.351,"operands":{"distinct":7,"total":8,"identifiers":["crossAxisStart","0","crossAxisEnd","100","it","\"should indicate when a displacement is not visible due to being outside of the droppable frame\"","\"should indicate when a displacement is not visible due to being outside of the viewport\""]},"operators":{"distinct":4,"total":8,"identifiers":["const","=","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":284},"errors":[],"lineEnd":315,"lineStart":32,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0.826,"halstead":{"bugs":1.082,"difficulty":12.552,"effort":40736.73,"length":494,"time":2263.152,"vocabulary":95,"volume":3245.509,"operands":{"distinct":87,"total":273,"identifiers":["droppable","DroppableDimension","getDroppableDimension","descriptor","id","\"my-custom-droppable\"","type","\"TYPE\"","mode","\"standard\"","direction","axis","borderBox","crossAxisStart","crossAxisEnd","start","0","end","200","closest","100","scrollSize","scrollWidth","scrollHeight","scroll","x","y","shouldClipSubject","true","visible","DraggableDimension","getDraggableDimension","\"visible\"","droppableId","index","90","partialVisible","\"partial-visible\"","1","120","notVisible1","\"not-visible-1\"","2","130","140","notVisible2","\"not-visible-2\"","3","150","170","customDraggables","DraggableDimensionMap","customDroppables","DroppableDimensionMap","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","expected","DragImpact","displaced","getForcedDisplacement","dimension","shouldAnimate","invisible","at","\"REORDER\"","destination","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","viewport","Position","offset","subtract","page","center","getDragImpact","pageOffset","droppables","previousImpact","expect","toEqual"]},"operators":{"distinct":8,"total":221,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":121,"physical":152},"errors":[],"lineEnd":187,"lineStart":36,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.053,"halstead":{"bugs":1.068,"difficulty":18.243,"effort":58424.917,"length":501,"time":3245.829,"vocabulary":84,"volume":3202.551,"operands":{"distinct":74,"total":270,"identifiers":["droppable","DroppableDimension","getDroppableDimension","descriptor","id","\"my-custom-droppable\"","type","\"TYPE\"","mode","\"standard\"","direction","axis","borderBox","crossAxisStart","crossAxisEnd","start","0","end","viewport","frame","100","visible","DraggableDimension","getDraggableDimension","\"visible\"","droppableId","index","20","partialVisible","\"partial-visible\"","1","10","notVisible1","\"not-visible-1\"","2","page","marginBox","size","crossAxisSize","notVisible2","\"not-visible-2\"","3","customDraggables","DraggableDimensionMap","customDroppables","DroppableDimensionMap","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","expected","DragImpact","displaced","getForcedDisplacement","dimension","shouldAnimate","true","invisible","at","\"REORDER\"","destination","impact","getDragImpact","pageOffset","origin","draggable","draggables","droppables","previousImpact","noImpact","afterCritical","noAfterCritical","expect","toEqual"]},"operators":{"distinct":10,"total":231,"identifiers":["const","=","()","{}",":",".","+","[]","-",","]}},"paramCount":0,"sloc":{"logical":95,"physical":126},"errors":[],"lineEnd":314,"lineStart":189,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.439,"halstead":{"bugs":0.477,"difficulty":6.84,"effort":48945.222,"length":207.2,"time":2719.179,"vocabulary":24,"volume":1431.108,"operands":{"distinct":21.4,"total":112.6},"operators":{"distinct":2.6,"total":94.6}},"paramCount":0.2,"sloc":{"logical":45.6,"physical":63.4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":17.136,"halstead":{"bugs":0.545,"difficulty":8.895,"effort":24842.803,"length":255.25,"time":1380.156,"vocabulary":50,"volume":1634.157,"operands":{"distinct":43.25,"total":139},"operators":{"distinct":6.75,"total":116.25}},"paramCount":0.25,"sloc":{"logical":56,"physical":212}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/reorder/over-foreign-list/move-past-last-item.spec.js","testCases":1,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  15 | import { getOffsetForStartEdge } from '../../util/get-offset-for-edge';\n  16 |\n> 17 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  18 |   describe(`on ${axis.direction} axis`, () => {\n  19 |     it('should allow movement past the last item', () => {\n  20 |       const preset = getPreset(axis);","start":{"line":17,"column":23,"index":675}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":9.302,"halstead":{"bugs":0.375,"difficulty":11.444,"effort":12866.5,"length":186,"time":714.806,"vocabulary":66,"volume":1124.257,"operands":{"distinct":54,"total":103,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","it","\"should allow movement past the last item\"","preset","getPreset","viewport","Viewport","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","home","draggables","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","offsetForStartOnInForeign4Center","Position","getOffsetForStartEdge","startEdgeOn","inForeign4","page","borderBox","center","dragging","goingForwards","DragImpact","getDragImpact","pageOffset","droppables","previousImpact","expected","displaced","emptyGroups","at","type","\"REORDER\"","destination","index","descriptor","1","droppableId","expect","toEqual"]},"operators":{"distinct":12,"total":83,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":","+"]}},"paramCount":1,"sloc":{"logical":43,"physical":67}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../../src/state/axis","type":"esm"},{"line":10,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":11,"path":"../../../../../../src/state/get-drag-impact","type":"esm"},{"line":12,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":13,"path":"../../../../../util/dimension","type":"esm"},{"line":14,"path":"../../../../../../src/state/no-impact","type":"esm"},{"line":15,"path":"../../util/get-offset-for-edge","type":"esm"}],"errors":[],"lineEnd":67,"lineStart":1,"maintainability":104.906,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":50},"errors":[],"lineEnd":66,"lineStart":17,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should allow movement past the last item\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":48},"errors":[],"lineEnd":65,"lineStart":18,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.703,"halstead":{"bugs":0.31,"difficulty":7.156,"effort":6648.74,"length":163,"time":369.374,"vocabulary":52,"volume":929.172,"operands":{"distinct":45,"total":92,"identifiers":["preset","getPreset","axis","viewport","Viewport","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","home","draggables","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","offsetForStartOnInForeign4Center","Position","getOffsetForStartEdge","startEdgeOn","inForeign4","page","borderBox","center","dragging","goingForwards","DragImpact","getDragImpact","pageOffset","droppables","previousImpact","expected","displaced","emptyGroups","at","type","\"REORDER\"","destination","index","descriptor","1","droppableId","expect","toEqual"]},"operators":{"distinct":7,"total":71,"identifiers":["const","=","()",".","{}",":","+"]}},"paramCount":0,"sloc":{"logical":37,"physical":46},"errors":[],"lineEnd":64,"lineStart":19,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.326,"halstead":{"bugs":0.094,"difficulty":2.861,"effort":3216.625,"length":46.5,"time":178.701,"vocabulary":16.5,"volume":281.064,"operands":{"distinct":13.5,"total":25.75},"operators":{"distinct":3,"total":20.75}},"paramCount":0.25,"sloc":{"logical":10.75,"physical":16.75}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":34.234,"halstead":{"bugs":0.108,"difficulty":3.552,"effort":2246.596,"length":59,"time":124.811,"vocabulary":22,"volume":323.464,"operands":{"distinct":17.333,"total":33},"operators":{"distinct":4.667,"total":26}},"paramCount":0.333,"sloc":{"logical":13.667,"physical":48}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/reorder/over-foreign-list/move-backward-from-last-item.spec.js","testCases":1,"smells":3,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  17 | import { getOffsetForStartEdge } from '../../util/get-offset-for-edge';\n  18 |\n> 19 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  20 |   describe(`on ${axis.direction} axis`, () => {\n  21 |     it('should allow movement past from last item', () => {\n  22 |       const preset = getPreset(axis);","start":{"line":19,"column":23,"index":803}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  46 |       };\n  47 |\n> 48 |       const offsetForEndOnInForeign4Center: Position = getOffsetForStartEdge({\n     |                                                       ^ Eager Test\n  49 |         startEdgeOn: preset.inForeign4.page.borderBox.center,\n  50 |         dragging: preset.inHome1.page.borderBox,\n  51 |         axis,","start":{"line":48,"column":55,"index":1735}},{"frame":"  63 |\n  64 |       const expected: DragImpact = {\n> 65 |         displaced: getForcedDisplacement({\n     |                   ^ Eager Test\n  66 |           visible: [{ dimension: preset.inForeign4 }],\n  67 |         }),\n  68 |         displacedBy,","start":{"line":65,"column":19,"index":2280}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":7.407,"halstead":{"bugs":0.476,"difficulty":13.368,"effort":19108.751,"length":234,"time":1061.597,"vocabulary":69,"volume":1429.395,"operands":{"distinct":57,"total":127,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","it","\"should allow movement past from last item\"","preset","getPreset","viewport","Viewport","afterCritical","getLiftEffect","draggable","inHome1","home","draggables","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","inLastSpot","DragImpact","displaced","emptyGroups","at","type","\"REORDER\"","destination","index","inForeign4","descriptor","1","droppableId","offsetForEndOnInForeign4Center","Position","getOffsetForStartEdge","startEdgeOn","page","borderBox","center","dragging","goingBackwards","getDragImpact","pageOffset","beforePoint","droppables","previousImpact","expected","getForcedDisplacement","visible","dimension","expect","toEqual"]},"operators":{"distinct":12,"total":107,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":","+"]}},"paramCount":1,"sloc":{"logical":54,"physical":82}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../../src/state/axis","type":"esm"},{"line":10,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":11,"path":"../../../../../../src/state/get-drag-impact","type":"esm"},{"line":12,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":13,"path":"../../../../../util/dimension","type":"esm"},{"line":14,"path":"../../../../../../src/state/no-impact","type":"esm"},{"line":15,"path":"../../../../../util/impact","type":"esm"},{"line":16,"path":"../../../../../util/before-point","type":"esm"},{"line":17,"path":"../../util/get-offset-for-edge","type":"esm"}],"errors":[],"lineEnd":82,"lineStart":1,"maintainability":99.864,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":63},"errors":[],"lineEnd":81,"lineStart":19,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should allow movement past from last item\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":61},"errors":[],"lineEnd":80,"lineStart":20,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.083,"halstead":{"bugs":0.408,"difficulty":9.667,"effort":11845.068,"length":211,"time":658.059,"vocabulary":56,"volume":1225.352,"operands":{"distinct":48,"total":116,"identifiers":["preset","getPreset","axis","viewport","Viewport","afterCritical","getLiftEffect","draggable","inHome1","home","draggables","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","inLastSpot","DragImpact","displaced","emptyGroups","at","type","\"REORDER\"","destination","index","inForeign4","descriptor","1","droppableId","offsetForEndOnInForeign4Center","Position","getOffsetForStartEdge","startEdgeOn","page","borderBox","center","dragging","goingBackwards","getDragImpact","pageOffset","beforePoint","droppables","previousImpact","expected","getForcedDisplacement","visible","dimension","expect","toEqual"]},"operators":{"distinct":8,"total":95,"identifiers":["const","=","()",".","{}",":","+","[]"]}},"paramCount":0,"sloc":{"logical":48,"physical":59},"errors":[],"lineEnd":79,"lineStart":21,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.852,"halstead":{"bugs":0.119,"difficulty":3.342,"effort":4777.188,"length":58.5,"time":265.399,"vocabulary":17.25,"volume":357.349,"operands":{"distinct":14.25,"total":31.75},"operators":{"distinct":3,"total":26.75}},"paramCount":0.25,"sloc":{"logical":13.5,"physical":20.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":34.028,"halstead":{"bugs":0.141,"difficulty":4.389,"effort":3978.705,"length":75,"time":221.039,"vocabulary":23.333,"volume":422.19,"operands":{"distinct":18.333,"total":41},"operators":{"distinct":5,"total":34}},"paramCount":0.333,"sloc":{"logical":17.333,"physical":61}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/reorder/over-foreign-list/did-not-start-displaced.spec.js","testCases":2,"smells":9,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  21 | } from '../../util/get-offset-for-edge';\n  22 |\n> 23 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  24 |   describe(`on ${axis.direction} axis`, () => {\n  25 |     const preset = getPreset(axis);\n  26 |     const viewport: Viewport = preset.viewport;","start":{"line":23,"column":23,"index":878}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  132 |           afterCritical,\n  133 |         });\n> 134 |         expect(impact).toEqual(goingBackwards);\n      |        ^ Duplicate Assert\n  135 |       }\n  136 |       // no longer displace as we have moved forwards past the displaced center\n  137 |       {","start":{"line":134,"column":8,"index":4403}},{"frame":"  164 |           },\n  165 |         };\n> 166 |         expect(impact).toEqual(expected);\n      |        ^ Duplicate Assert\n  167 |       }\n  168 |     });\n  169 |   });","start":{"line":166,"column":8,"index":5453}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  66 |\n  67 |         const expected: DragImpact = {\n> 68 |           displaced: getForcedDisplacement({\n     |                     ^ Eager Test\n  69 |             visible: [\n  70 |               // ordered by closest to current location\n  71 |               // animated and visible as it is a foreign list","start":{"line":68,"column":21,"index":2340}},{"frame":"  89 |\n  90 |       const expected: DragImpact = {\n> 91 |         displaced: getForcedDisplacement({\n     |                   ^ Eager Test\n  92 |           // ordered by closest to current location\n  93 |           visible: [\n  94 |             { dimension: preset.inForeign2 },","start":{"line":91,"column":19,"index":3036}},{"frame":"  111 |\n  112 |     it('should end displacement if moving forward over the displaced center', () => {\n> 113 |       const offsetForEndOnInForeign2Center: Position = getOffsetForEndEdge({\n      |                                                       ^ Eager Test\n  114 |         endEdgeOn: preset.inForeign2.page.borderBox.center,\n  115 |         dragging: preset.inHome1.page.borderBox,\n  116 |         axis,","start":{"line":113,"column":55,"index":3784}},{"frame":"  147 |\n  148 |         const expected: DragImpact = {\n> 149 |           displaced: getForcedDisplacement({\n      |                     ^ Eager Test\n  150 |             // ordered by closest impacted\n  151 |             visible: [\n  152 |               { dimension: preset.inForeign3 },","start":{"line":149,"column":21,"index":4920}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  66 |\n  67 |         const expected: DragImpact = {\n> 68 |           displaced: getForcedDisplacement({\n     |                     ^ Lazy Test\n  69 |             visible: [\n  70 |               // ordered by closest to current location\n  71 |               // animated and visible as it is a foreign list","start":{"line":68,"column":21,"index":2340}},{"frame":"  147 |\n  148 |         const expected: DragImpact = {\n> 149 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  150 |             // ordered by closest impacted\n  151 |             visible: [\n  152 |               { dimension: preset.inForeign3 },","start":{"line":149,"column":21,"index":4920}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":4.31,"halstead":{"bugs":1.016,"difficulty":21.836,"effort":66564.755,"length":485,"time":3698.042,"vocabulary":78,"volume":3048.42,"operands":{"distinct":67,"total":266,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","viewport","Viewport","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","offsetForStartOnInForeign2Center","Position","getOffsetForStartEdge","startEdgeOn","inForeign2","page","borderBox","center","dragging","goingBackwards","DragImpact","getDragImpact","pageOffset","beforePoint","droppables","previousImpact","it","\"should displace items when moving backwards past their bottom edge\"","expected","displaced","getForcedDisplacement","visible","dimension","inForeign3","inForeign4","at","type","\"REORDER\"","destination","droppableId","foreign","descriptor","id","index","expect","toEqual","\"should end displacement if moving forward over the displaced center\"","offsetForEndOnInForeign2Center","getOffsetForEndEdge","endEdgeOn","add","point","afterPoint"]},"operators":{"distinct":11,"total":219,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":116,"physical":171}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../../../src/state/get-drag-impact","type":"esm"},{"line":4,"path":"../../../../../../src/state/position","type":"esm"},{"line":5,"path":"../../../../../../src/state/axis","type":"esm"},{"line":6,"path":"../../../../../util/dimension","type":"esm"},{"line":7,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":13,"path":"../../../../../../src/types","type":"esm"},{"line":14,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":15,"path":"../../../../../util/after-point","type":"esm"},{"line":16,"path":"../../../../../util/before-point","type":"esm"},{"line":17,"path":"../../../../../util/impact","type":"esm"},{"line":21,"path":"../../util/get-offset-for-edge","type":"esm"}],"errors":[],"lineEnd":171,"lineStart":1,"maintainability":87.587,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":148},"errors":[],"lineEnd":170,"lineStart":23,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.232,"difficulty":7.097,"effort":4929.46,"length":128,"time":273.859,"vocabulary":43,"volume":694.562,"operands":{"distinct":36,"total":73,"identifiers":["preset","getPreset","axis","viewport","Viewport","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","offsetForStartOnInForeign2Center","Position","getOffsetForStartEdge","startEdgeOn","inForeign2","page","borderBox","center","dragging","goingBackwards","DragImpact","getDragImpact","pageOffset","beforePoint","droppables","previousImpact","it","\"should displace items when moving backwards past their bottom edge\"","\"should end displacement if moving forward over the displaced center\""]},"operators":{"distinct":7,"total":55,"identifiers":["const","=","()",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":32,"physical":146},"errors":[],"lineEnd":169,"lineStart":24,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.295,"difficulty":9.714,"effort":8592.103,"length":163,"time":477.339,"vocabulary":43,"volume":884.481,"operands":{"distinct":35,"total":85,"identifiers":["impact","DragImpact","getDragImpact","pageOffset","offsetForStartOnInForeign2Center","draggable","preset","inHome1","draggables","droppables","previousImpact","homeImpact","viewport","afterCritical","expected","displaced","getForcedDisplacement","visible","dimension","inForeign3","inForeign4","displacedBy","at","type","\"REORDER\"","destination","droppableId","foreign","descriptor","id","index","expect","toEqual","inForeign2","goingBackwards"]},"operators":{"distinct":8,"total":78,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":38,"physical":56},"errors":[],"lineEnd":110,"lineStart":55,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.381,"halstead":{"bugs":0.331,"difficulty":9.209,"effort":9141.839,"length":175,"time":507.88,"vocabulary":51,"volume":992.674,"operands":{"distinct":43,"total":99,"identifiers":["offsetForEndOnInForeign2Center","Position","getOffsetForEndEdge","endEdgeOn","preset","inForeign2","page","borderBox","center","dragging","inHome1","axis","displaced","add","displacedBy","point","impact","DragImpact","getDragImpact","pageOffset","draggable","draggables","droppables","previousImpact","goingBackwards","viewport","afterCritical","expect","toEqual","afterPoint","expected","getForcedDisplacement","visible","dimension","inForeign3","inForeign4","at","type","\"REORDER\"","destination","droppableId","descriptor","index"]},"operators":{"distinct":8,"total":76,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":42,"physical":57},"errors":[],"lineEnd":168,"lineStart":112,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.862,"halstead":{"bugs":0.203,"difficulty":4.367,"effort":13312.951,"length":97,"time":739.608,"vocabulary":15.6,"volume":609.684,"operands":{"distinct":13.4,"total":53.2},"operators":{"distinct":2.2,"total":43.8}},"paramCount":0.2,"sloc":{"logical":23.2,"physical":34.2}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.534,"halstead":{"bugs":0.217,"difficulty":7.13,"effort":5686.612,"length":119,"time":315.923,"vocabulary":36.75,"volume":651.234,"operands":{"distinct":29.75,"total":65.5},"operators":{"distinct":7,"total":53.5}},"paramCount":0.25,"sloc":{"logical":28.5,"physical":101.75}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/combine/with-droppable-scroll.spec.js","testCases":1,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  16 | import { getOffsetForEndEdge } from '../util/get-offset-for-edge';\n  17 |\n> 18 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  19 |   describe(`on ${axis.direction} axis`, () => {\n  20 |     const preset = getPreset(axis);\n  21 |","start":{"line":18,"column":23,"index":756}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":5.797,"halstead":{"bugs":0.701,"difficulty":14.959,"effort":31447.808,"length":328,"time":1747.1,"vocabulary":85,"volume":2102.28,"operands":{"distinct":73,"total":182,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","withCombineEnabled","DroppableDimension","home","isCombineEnabled","true","scrollableHome","makeScrollable","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","draggables","viewport","scroll","Position","patch","line","1","scrolled","scrollDroppable","withoutScrolled","DroppableDimensionMap","droppables","descriptor","id","withScrolled","startOfInHome2","inHome2","page","borderBox","start","center","crossAxisLine","threshold","getThreshold","combineStart","add","offsetForOnCombineStart","getOffsetForEndEdge","endEdgeOn","dragging","it","\"should take into account droppable scroll\"","DragImpact","getDragImpact","pageOffset","previousImpact","expect","at","toHaveProperty","\"type\"","\"REORDER\"","expected","displaced","displacedBy","type","\"COMBINE\"","combine","draggableId","droppableId","toEqual"]},"operators":{"distinct":12,"total":146,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}","... (spread)",":"]}},"paramCount":1,"sloc":{"logical":69,"physical":104}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../src/state/axis","type":"esm"},{"line":10,"path":"../../../../../src/state/droppable/scroll-droppable","type":"esm"},{"line":11,"path":"../../../../../src/state/get-drag-impact","type":"esm"},{"line":12,"path":"../../../../../src/state/get-lift-effect","type":"esm"},{"line":13,"path":"../../../../../src/state/position","type":"esm"},{"line":14,"path":"../../../../util/dimension","type":"esm"},{"line":15,"path":"../util/get-combine-threshold","type":"esm"},{"line":16,"path":"../util/get-offset-for-edge","type":"esm"}],"errors":[],"lineEnd":104,"lineStart":1,"maintainability":94.189,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":86},"errors":[],"lineEnd":103,"lineStart":18,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.358,"difficulty":9.469,"effort":10162.353,"length":184,"time":564.575,"vocabulary":57,"volume":1073.252,"operands":{"distinct":48,"total":101,"identifiers":["preset","getPreset","axis","withCombineEnabled","DroppableDimension","home","isCombineEnabled","true","scrollableHome","makeScrollable","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","draggables","viewport","scroll","Position","patch","line","1","scrolled","scrollDroppable","withoutScrolled","DroppableDimensionMap","droppables","descriptor","id","withScrolled","startOfInHome2","inHome2","page","borderBox","start","center","crossAxisLine","threshold","getThreshold","combineStart","add","offsetForOnCombineStart","getOffsetForEndEdge","endEdgeOn","dragging","it","\"should take into account droppable scroll\""]},"operators":{"distinct":9,"total":83,"identifiers":["const","=","()","{}","... (spread)",".",":","[]","function=>"]}},"paramCount":0,"sloc":{"logical":35,"physical":84},"errors":[],"lineEnd":102,"lineStart":19,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.222,"difficulty":6.353,"effort":4226.237,"length":125,"time":234.791,"vocabulary":40,"volume":665.241,"operands":{"distinct":34,"total":72,"identifiers":["impact","DragImpact","getDragImpact","pageOffset","offsetForOnCombineStart","draggable","preset","inHome1","draggables","droppables","withoutScrolled","previousImpact","homeImpact","viewport","afterCritical","expect","at","toHaveProperty","\"type\"","\"REORDER\"","withScrolled","expected","displaced","displacedBy","type","\"COMBINE\"","combine","draggableId","inHome2","descriptor","id","droppableId","home","toEqual"]},"operators":{"distinct":6,"total":53,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":30,"physical":41},"errors":[],"lineEnd":101,"lineStart":61,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.449,"halstead":{"bugs":0.175,"difficulty":3.74,"effort":7861.952,"length":82,"time":436.775,"vocabulary":21.25,"volume":525.57,"operands":{"distinct":18.25,"total":45.5},"operators":{"distinct":3,"total":36.5}},"paramCount":0.25,"sloc":{"logical":17.25,"physical":26}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":18.73,"halstead":{"bugs":0.197,"difficulty":6.107,"effort":4823.879,"length":106.333,"time":267.993,"vocabulary":35.667,"volume":590.571,"operands":{"distinct":29,"total":59.333},"operators":{"distinct":6.667,"total":47}},"paramCount":0.333,"sloc":{"logical":22.333,"physical":70.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/combine/started-before-critical.spec.js","testCases":4,"smells":19,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  22 | } from '../util/get-offset-for-edge';\n  23 |\n> 24 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  25 |   describe(`on ${axis.direction} axis`, () => {\n  26 |     const preset = getPreset(axis);\n  27 |     const { afterCritical } = getLiftEffect({","start":{"line":24,"column":23,"index":954}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  129 |               afterCritical,\n  130 |             });\n> 131 |             expect(impact).toEqual(whenEnteredForeign);\n      |            ^ Duplicate Assert\n  132 |           }\n  133 |           // it should merge with the item when it goes onto the displaced start\n  134 |           {","start":{"line":131,"column":12,"index":4474}},{"frame":"  142 |               afterCritical,\n  143 |             });\n> 144 |             expect(impact).toEqual(combineWithDisplacedInForeign3);\n      |            ^ Duplicate Assert\n  145 |           }\n  146 |         });\n  147 |","start":{"line":144,"column":12,"index":5021}},{"frame":"  164 |               afterCritical,\n  165 |             });\n> 166 |             expect(impact).toEqual(combineWithDisplacedInForeign3);\n      |            ^ Duplicate Assert\n  167 |           }\n  168 |           {\n  169 |             const impact: DragImpact = getDragImpact({","start":{"line":166,"column":12,"index":5825}},{"frame":"  191 |               },\n  192 |             };\n> 193 |             expect(impact).toEqual(expected);\n      |            ^ Duplicate Assert\n  194 |           }\n  195 |         });\n  196 |       });","start":{"line":193,"column":12,"index":6796}},{"frame":"  247 |             afterCritical,\n  248 |           });\n> 249 |           expect(impact).toEqual(whenEnteredForeign);\n      |          ^ Duplicate Assert\n  250 |         }\n  251 |         // over edge is enough\n  252 |         {","start":{"line":249,"column":10,"index":8703}},{"frame":"  260 |             afterCritical,\n  261 |           });\n> 262 |           expect(impact).toEqual(combineWithInForeign2);\n      |          ^ Duplicate Assert\n  263 |         }\n  264 |       });\n  265 |","start":{"line":262,"column":10,"index":9177}},{"frame":"  281 |             afterCritical,\n  282 |           });\n> 283 |           expect(impact).toEqual(combineWithInForeign2);\n      |          ^ Duplicate Assert\n  284 |         }\n  285 |         // on combine start = stop combining\n  286 |         {","start":{"line":283,"column":10,"index":9935}},{"frame":"  312 |             },\n  313 |           };\n> 314 |           expect(impact).toEqual(expected);\n      |          ^ Duplicate Assert\n  315 |         }\n  316 |       });\n  317 |     });","start":{"line":314,"column":10,"index":10984}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  147 |\n  148 |         it('should no longer merge when moving onto 4/5 of the target', () => {\n> 149 |           const endOnCombineEnd: Position = getOffsetForEndEdge({\n      |                                            ^ Eager Test\n  150 |             endEdgeOn: combineEnd,\n  151 |             dragging: preset.inHome1.page.borderBox,\n  152 |             axis,","start":{"line":149,"column":44,"index":5226}},{"frame":"  178 |\n  179 |             const expected: DragImpact = {\n> 180 |               displaced: getForcedDisplacement({\n      |                         ^ Eager Test\n  181 |                 visible: [{ dimension: preset.inForeign4 }],\n  182 |               }),\n  183 |               displacedBy,","start":{"line":180,"column":25,"index":6340}},{"frame":"  265 |\n  266 |       it('should stop combining when going back onto 2/3 of the size', () => {\n> 267 |         const startOnCombineStart: Position = getOffsetForStartEdge({\n      |                                              ^ Eager Test\n  268 |           startEdgeOn: combineStart,\n  269 |           dragging: preset.inHome1.page.borderBox,\n  270 |           axis,","start":{"line":267,"column":46,"index":9370}},{"frame":"  296 |\n  297 |           const expected: DragImpact = {\n> 298 |             displaced: getForcedDisplacement({\n      |                       ^ Eager Test\n  299 |               visible: [\n  300 |                 { dimension: preset.inForeign2 },\n  301 |                 { dimension: preset.inForeign3 },","start":{"line":298,"column":23,"index":10464}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  112 |\n  113 |         it('should combine when moving forward past the displaced start threshold', () => {\n> 114 |           const endOnCombineStart: Position = getOffsetForEndEdge({\n      |                                              ^ Lazy Test\n  115 |             endEdgeOn: combineStart,\n  116 |             dragging: preset.inHome1.page.borderBox,\n  117 |             axis,","start":{"line":114,"column":46,"index":3887}},{"frame":"  147 |\n  148 |         it('should no longer merge when moving onto 4/5 of the target', () => {\n> 149 |           const endOnCombineEnd: Position = getOffsetForEndEdge({\n      |                                            ^ Lazy Test\n  150 |             endEdgeOn: combineEnd,\n  151 |             dragging: preset.inHome1.page.borderBox,\n  152 |             axis,","start":{"line":149,"column":44,"index":5226}},{"frame":"  178 |\n  179 |             const expected: DragImpact = {\n> 180 |               displaced: getForcedDisplacement({\n      |                         ^ Lazy Test\n  181 |                 visible: [{ dimension: preset.inForeign4 }],\n  182 |               }),\n  183 |               displacedBy,","start":{"line":180,"column":25,"index":6340}},{"frame":"  231 |\n  232 |       it('should combine with an item when moving backwards past 1 / 5 of the items size', () => {\n> 233 |         const startOnCombineEnd: Position = getOffsetForStartEdge({\n      |                                            ^ Lazy Test\n  234 |           startEdgeOn: combineEnd,\n  235 |           dragging: preset.inHome1.page.borderBox,\n  236 |           axis,","start":{"line":233,"column":44,"index":8158}},{"frame":"  265 |\n  266 |       it('should stop combining when going back onto 2/3 of the size', () => {\n> 267 |         const startOnCombineStart: Position = getOffsetForStartEdge({\n      |                                              ^ Lazy Test\n  268 |           startEdgeOn: combineStart,\n  269 |           dragging: preset.inHome1.page.borderBox,\n  270 |           axis,","start":{"line":267,"column":46,"index":9370}},{"frame":"  296 |\n  297 |           const expected: DragImpact = {\n> 298 |             displaced: getForcedDisplacement({\n      |                       ^ Lazy Test\n  299 |               visible: [\n  300 |                 { dimension: preset.inForeign2 },\n  301 |                 { dimension: preset.inForeign3 },","start":{"line":298,"column":23,"index":10464}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":4.348,"halstead":{"bugs":2.199,"difficulty":29.7,"effort":195942.121,"length":971,"time":10885.673,"vocabulary":111,"volume":6597.378,"operands":{"distinct":100,"total":540,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","afterCritical","getLiftEffect","draggable","inHome1","home","draggables","viewport","withCombineEnabled","DroppableDimensionMap","enableCombining","droppables","crossAxisCenter","foreign","page","borderBox","center","crossAxisLine","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","whenEnteredForeign","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign3","shouldAnimate","true","inForeign4","at","type","\"REORDER\"","destination","index","descriptor","droppableId","\"combining with displaced item\"","combineWithDisplacedInForeign3","\"COMBINE\"","combine","draggableId","id","\"item is displaced forward\"","threshold","Position","getThreshold","inHome3","startOfInForeign3","patch","line","start","endOfInForeign3","end","displacedStartOfInForeign3","add","point","displacedEndOfInForeign3","combineStart","combineEnd","subtract","it","\"should combine when moving forward past the displaced start threshold\"","endOnCombineStart","getOffsetForEndEdge","endEdgeOn","dragging","impact","getDragImpact","pageOffset","previousImpact","expect","toEqual","afterPoint","\"should no longer merge when moving onto 4/5 of the target\"","endOnCombineEnd","beforePoint","expected","\"combining with non-displaced item\"","inForeign2","startOfInForeign2","endOfInForeign2","combineWithInForeign2","\"should combine with an item when moving backwards past 1 / 5 of the items size\"","startOnCombineEnd","getOffsetForStartEdge","startEdgeOn","\"should stop combining when going back onto 2/3 of the size\"","startOnCombineStart"]},"operators":{"distinct":11,"total":431,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":230,"physical":320}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../src/state/axis","type":"esm"},{"line":10,"path":"../../../../util/dimension","type":"esm"},{"line":11,"path":"../../../../../src/state/get-drag-impact","type":"esm"},{"line":12,"path":"../../../../../src/state/get-displaced-by","type":"esm"},{"line":13,"path":"../../../../../src/state/position","type":"esm"},{"line":14,"path":"../../../../../src/state/get-lift-effect","type":"esm"},{"line":15,"path":"../../../../util/after-point","type":"esm"},{"line":16,"path":"../../../../util/before-point","type":"esm"},{"line":17,"path":"../../../../util/impact","type":"esm"},{"line":18,"path":"../util/get-combine-threshold","type":"esm"},{"line":22,"path":"../util/get-offset-for-edge","type":"esm"}],"errors":[],"lineEnd":320,"lineStart":1,"maintainability":86.405,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":296},"errors":[],"lineEnd":319,"lineStart":24,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.267,"difficulty":7.466,"effort":5986.979,"length":140,"time":332.61,"vocabulary":53,"volume":801.909,"operands":{"distinct":44,"total":73,"identifiers":["preset","getPreset","axis","afterCritical","getLiftEffect","draggable","inHome1","home","draggables","viewport","withCombineEnabled","DroppableDimensionMap","enableCombining","droppables","crossAxisCenter","foreign","page","borderBox","center","crossAxisLine","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","whenEnteredForeign","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign3","shouldAnimate","true","inForeign4","at","type","\"REORDER\"","destination","index","descriptor","droppableId","describe","\"combining with displaced item\"","\"combining with non-displaced item\""]},"operators":{"distinct":9,"total":67,"identifiers":["const","=","()","{}",":",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":32,"physical":294},"errors":[],"lineEnd":318,"lineStart":25,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.096,"difficulty":6.525,"effort":1870.201,"length":59,"time":103.9,"vocabulary":29,"volume":286.621,"operands":{"distinct":20,"total":29,"identifiers":["combineWithDisplacedInForeign3","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inForeign3","inForeign4","displacedBy","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","describe","\"item is displaced forward\""]},"operators":{"distinct":9,"total":30,"identifiers":["const","=","{}",":","()","[]",",",".","function=>"]}},"paramCount":0,"sloc":{"logical":14,"physical":134},"errors":[],"lineEnd":197,"lineStart":64,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.161,"difficulty":6.222,"effort":3013.185,"length":96,"time":167.399,"vocabulary":33,"volume":484.262,"operands":{"distinct":27,"total":56,"identifiers":["threshold","Position","getThreshold","axis","preset","inHome3","startOfInForeign3","patch","line","inForeign3","page","borderBox","start","crossAxisCenter","endOfInForeign3","end","displacedStartOfInForeign3","add","displacedBy","point","displacedEndOfInForeign3","combineStart","combineEnd","subtract","it","\"should combine when moving forward past the displaced start threshold\"","\"should no longer merge when moving onto 4/5 of the target\""]},"operators":{"distinct":6,"total":40,"identifiers":["const","=","()",".","[]","function=>"]}},"paramCount":0,"sloc":{"logical":18,"physical":113},"errors":[],"lineEnd":196,"lineStart":84,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.175,"difficulty":6.889,"effort":3614.028,"length":104,"time":200.779,"vocabulary":33,"volume":524.617,"operands":{"distinct":27,"total":62,"identifiers":["endOnCombineStart","Position","getOffsetForEndEdge","endEdgeOn","combineStart","dragging","preset","inHome1","page","borderBox","axis","impact","DragImpact","getDragImpact","pageOffset","draggable","draggables","droppables","withCombineEnabled","previousImpact","whenEnteredForeign","viewport","afterCritical","expect","toEqual","afterPoint","combineWithDisplacedInForeign3"]},"operators":{"distinct":6,"total":42,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":28,"physical":34},"errors":[],"lineEnd":146,"lineStart":113,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.283,"difficulty":7.341,"effort":6232.273,"length":152,"time":346.237,"vocabulary":48,"volume":848.914,"operands":{"distinct":41,"total":86,"identifiers":["endOnCombineEnd","Position","getOffsetForEndEdge","endEdgeOn","combineEnd","dragging","preset","inHome1","page","borderBox","axis","impact","DragImpact","getDragImpact","pageOffset","beforePoint","draggable","draggables","droppables","withCombineEnabled","previousImpact","whenEnteredForeign","viewport","afterCritical","expect","toEqual","combineWithDisplacedInForeign3","expected","displaced","getForcedDisplacement","visible","dimension","inForeign4","displacedBy","at","type","\"REORDER\"","destination","index","descriptor","droppableId"]},"operators":{"distinct":7,"total":66,"identifiers":["const","=","()","{}",":",".","[]"]}},"paramCount":0,"sloc":{"logical":39,"physical":48},"errors":[],"lineEnd":195,"lineStart":148,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.244,"difficulty":8.192,"effort":5993.739,"length":131,"time":332.985,"vocabulary":48,"volume":731.63,"operands":{"distinct":39,"total":71,"identifiers":["threshold","Position","getThreshold","axis","preset","inForeign2","startOfInForeign2","patch","line","page","borderBox","start","crossAxisCenter","endOfInForeign2","end","combineStart","add","combineEnd","subtract","combineWithInForeign2","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign3","inForeign4","displacedBy","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","it","\"should combine with an item when moving backwards past 1 / 5 of the items size\"","\"should stop combining when going back onto 2/3 of the size\""]},"operators":{"distinct":9,"total":60,"identifiers":["const","=","()",".","[]","{}",":",",","function=>"]}},"paramCount":0,"sloc":{"logical":26,"physical":118},"errors":[],"lineEnd":317,"lineStart":200,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.175,"difficulty":6.889,"effort":3614.028,"length":104,"time":200.779,"vocabulary":33,"volume":524.617,"operands":{"distinct":27,"total":62,"identifiers":["startOnCombineEnd","Position","getOffsetForStartEdge","startEdgeOn","combineEnd","dragging","preset","inHome1","page","borderBox","axis","impact","DragImpact","getDragImpact","pageOffset","draggable","draggables","droppables","withCombineEnabled","previousImpact","whenEnteredForeign","viewport","afterCritical","expect","toEqual","beforePoint","combineWithInForeign2"]},"operators":{"distinct":6,"total":42,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":28,"physical":33},"errors":[],"lineEnd":264,"lineStart":232,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.439,"halstead":{"bugs":0.314,"difficulty":8.558,"effort":8058.538,"length":166,"time":447.697,"vocabulary":51,"volume":941.623,"operands":{"distinct":43,"total":92,"identifiers":["startOnCombineStart","Position","getOffsetForStartEdge","startEdgeOn","combineStart","dragging","preset","inHome1","page","borderBox","axis","impact","DragImpact","getDragImpact","pageOffset","afterPoint","draggable","draggables","droppables","withCombineEnabled","previousImpact","whenEnteredForeign","viewport","afterCritical","expect","toEqual","combineWithInForeign2","expected","displaced","getForcedDisplacement","visible","dimension","inForeign2","inForeign3","inForeign4","displacedBy","at","type","\"REORDER\"","destination","index","descriptor","droppableId"]},"operators":{"distinct":8,"total":74,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":41,"physical":51},"errors":[],"lineEnd":316,"lineStart":266,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.435,"halstead":{"bugs":0.22,"difficulty":2.97,"effort":19594.212,"length":97.1,"time":1088.567,"vocabulary":11.1,"volume":659.738,"operands":{"distinct":10,"total":54},"operators":{"distinct":1.1,"total":43.1}},"paramCount":0.1,"sloc":{"logical":23,"physical":32}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.192,"difficulty":6.731,"effort":4274.002,"length":106.889,"time":237.445,"vocabulary":37.556,"volume":575.268,"operands":{"distinct":30.333,"total":59.556},"operators":{"distinct":7.222,"total":47.333}},"paramCount":0.111,"sloc":{"logical":25.333,"physical":124.556}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/combine/started-after-critical.spec.js","testCases":5,"smells":14,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  23 | } from '../util/get-offset-for-edge';\n  24 |\n> 25 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  26 |   describe(`on ${axis.direction} axis`, () => {\n  27 |     const preset = getPreset(axis);\n  28 |","start":{"line":25,"column":23,"index":1030}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  94 |           });\n  95 |\n> 96 |           expect(impact).toEqual(homeImpact);\n     |          ^ Duplicate Assert\n  97 |         }\n  98 |         // gone past combine point\n  99 |         {","start":{"line":96,"column":10,"index":3433}},{"frame":"  108 |           });\n  109 |\n> 110 |           expect(impact).toEqual(combineWithInHome3Impact);\n      |          ^ Duplicate Assert\n  111 |         }\n  112 |       });\n  113 |","start":{"line":110,"column":10,"index":3884}},{"frame":"  129 |           });\n  130 |\n> 131 |           expect(impact).toEqual(combineWithInHome3Impact);\n      |          ^ Duplicate Assert\n  132 |         }\n  133 |         {\n  134 |           const impact: DragImpact = getDragImpact({","start":{"line":131,"column":10,"index":4600}},{"frame":"  156 |             },\n  157 |           };\n> 158 |           expect(impact).toEqual(expected);\n      |          ^ Duplicate Assert\n  159 |         }\n  160 |       });\n  161 |     });","start":{"line":158,"column":10,"index":5510}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  113 |\n  114 |       it('should remain displaced until the bottom of the dragging item goes onto the (4/5) mark', () => {\n> 115 |         const offset: Position = getOffsetForEndEdge({\n      |                                 ^ Eager Test\n  116 |           endEdgeOn: combineEnd,\n  117 |           dragging: preset.inHome2.page.borderBox,\n  118 |           axis,","start":{"line":115,"column":33,"index":4095}},{"frame":"  143 |\n  144 |           const expected: DragImpact = {\n> 145 |             displaced: getForcedDisplacement({\n      |                       ^ Eager Test\n  146 |               visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  147 |             }),\n  148 |             displacedBy,","start":{"line":145,"column":23,"index":5066}},{"frame":"  290 |     // TODO: I am not sure this test is asserting the right thing\n  291 |     it('should understand that when re-entering a list, items that started displaced no longer are', () => {\n> 292 |       const inHome4Threshold: Position = getThreshold(axis, preset.inHome4);\n      |                                         ^ Eager Test\n  293 |       const endOfInHome4: Position = patch(\n  294 |         axis.line,\n  295 |         preset.inHome4.page.borderBox[axis.end],","start":{"line":292,"column":41,"index":9860}},{"frame":"  305 |       );\n  306 |\n> 307 |       const offset: Position = getOffsetForStartEdge({\n      |                               ^ Eager Test\n  308 |         startEdgeOn: combineEnd,\n  309 |         dragging: preset.inHome3.page.borderBox,\n  310 |         axis,","start":{"line":307,"column":31,"index":10340}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  76 |\n  77 |       it('should move onto a target once it hits (1/5) of the targets size ', () => {\n> 78 |         const offset: Position = getOffsetForEndEdge({\n     |                                 ^ Lazy Test\n  79 |           endEdgeOn: combineStart,\n  80 |           dragging: preset.inHome2.page.borderBox,\n  81 |           axis,","start":{"line":78,"column":33,"index":2908}},{"frame":"  113 |\n  114 |       it('should remain displaced until the bottom of the dragging item goes onto the (4/5) mark', () => {\n> 115 |         const offset: Position = getOffsetForEndEdge({\n      |                                 ^ Lazy Test\n  116 |           endEdgeOn: combineEnd,\n  117 |           dragging: preset.inHome2.page.borderBox,\n  118 |           axis,","start":{"line":115,"column":33,"index":4095}},{"frame":"  213 |\n  214 |       it('should move backwards onto an item that has shifted backwards', () => {\n> 215 |         const offset: Position = getOffsetForStartEdge({\n      |                                 ^ Lazy Test\n  216 |           startEdgeOn: combineEnd,\n  217 |           dragging: preset.inHome2.page.borderBox,\n  218 |           axis,","start":{"line":215,"column":33,"index":7254}},{"frame":"  249 |\n  250 |       it('should no longer combine with an item once it hits the top threshold', () => {\n> 251 |         const offset: Position = getOffsetForStartEdge({\n      |                                 ^ Lazy Test\n  252 |           startEdgeOn: combineStart,\n  253 |           dragging: preset.inHome2.page.borderBox,\n  254 |           axis,","start":{"line":251,"column":33,"index":8450}},{"frame":"  305 |       );\n  306 |\n> 307 |       const offset: Position = getOffsetForStartEdge({\n      |                               ^ Lazy Test\n  308 |         startEdgeOn: combineEnd,\n  309 |         dragging: preset.inHome3.page.borderBox,\n  310 |         axis,","start":{"line":307,"column":31,"index":10340}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":4.065,"halstead":{"bugs":2.349,"difficulty":32.611,"effort":229772.434,"length":1039,"time":12765.135,"vocabulary":110,"volume":7045.833,"operands":{"distinct":99,"total":587,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome2","home","draggables","viewport","withCombineEnabled","DroppableDimensionMap","enableCombining","droppables","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","combineWithInHome3Impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome3","shouldAnimate","false","inHome4","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","startOfInHome3","Position","patch","line","page","borderBox","start","center","crossAxisLine","endOfInHome3","end","inHome3Threshold","getThreshold","\"moving onto displaced item\"","combineStart","add","combineEnd","subtract","it","\"should move onto a target once it hits (1/5) of the targets size \"","offset","getOffsetForEndEdge","endEdgeOn","dragging","getDragImpact","pageOffset","previousImpact","expect","toEqual","afterPoint","\"should remain displaced until the bottom of the dragging item goes onto the (4/5) mark\"","beforePoint","expected","\"REORDER\"","destination","index","\"moving backwards onto un displaced item\"","displacedStartOfInHome3","point","displacedEndOfInHome3","combineWithDisplacedInHome3Impact","first","\"should move backwards onto an item that has shifted backwards\"","getOffsetForStartEdge","startEdgeOn","toHaveProperty","\"type\"","\"should no longer combine with an item once it hits the top threshold\"","\"should understand that when re-entering a list, items that started displaced no longer are\"","inHome4Threshold","endOfInHome4","displacedEndOfInHome4","noImpact","emptyGroups"]},"operators":{"distinct":11,"total":452,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":246,"physical":339}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../src/state/axis","type":"esm"},{"line":10,"path":"../../../../util/dimension","type":"esm"},{"line":11,"path":"../../../../../src/state/get-drag-impact","type":"esm"},{"line":12,"path":"../../../../../src/state/get-displaced-by","type":"esm"},{"line":13,"path":"../../../../../src/state/position","type":"esm"},{"line":14,"path":"../../../../../src/state/get-lift-effect","type":"esm"},{"line":15,"path":"../../../../util/after-point","type":"esm"},{"line":16,"path":"../../../../util/before-point","type":"esm"},{"line":17,"path":"../../../../util/impact","type":"esm"},{"line":18,"path":"../../../../../src/state/no-impact","type":"esm"},{"line":19,"path":"../util/get-combine-threshold","type":"esm"},{"line":23,"path":"../util/get-offset-for-edge","type":"esm"}],"errors":[],"lineEnd":339,"lineStart":1,"maintainability":84.771,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":314},"errors":[],"lineEnd":338,"lineStart":25,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.5,"halstead":{"bugs":0.416,"difficulty":8.92,"effort":11119.496,"length":207,"time":617.75,"vocabulary":65,"volume":1246.63,"operands":{"distinct":56,"total":111,"identifiers":["preset","getPreset","axis","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome2","home","draggables","viewport","withCombineEnabled","DroppableDimensionMap","enableCombining","droppables","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","combineWithInHome3Impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome3","shouldAnimate","false","inHome4","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","startOfInHome3","Position","patch","line","page","borderBox","start","center","crossAxisLine","endOfInHome3","end","inHome3Threshold","getThreshold","describe","\"moving onto displaced item\"","\"moving backwards onto un displaced item\"","it","\"should understand that when re-entering a list, items that started displaced no longer are\""]},"operators":{"distinct":9,"total":96,"identifiers":["const","=","()","{}",":",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":40,"physical":312},"errors":[],"lineEnd":337,"lineStart":26,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.031,"difficulty":2.545,"effort":238.675,"length":24,"time":13.26,"vocabulary":15,"volume":93.765,"operands":{"distinct":11,"total":14,"identifiers":["combineStart","Position","add","startOfInHome3","inHome3Threshold","combineEnd","subtract","endOfInHome3","it","\"should move onto a target once it hits (1/5) of the targets size \"","\"should remain displaced until the bottom of the dragging item goes onto the (4/5) mark\""]},"operators":{"distinct":4,"total":10,"identifiers":["const","=","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":89},"errors":[],"lineEnd":161,"lineStart":73,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.175,"difficulty":6.889,"effort":3614.028,"length":104,"time":200.779,"vocabulary":33,"volume":524.617,"operands":{"distinct":27,"total":62,"identifiers":["offset","Position","getOffsetForEndEdge","endEdgeOn","combineStart","dragging","preset","inHome2","page","borderBox","axis","impact","DragImpact","getDragImpact","pageOffset","draggable","draggables","droppables","withCombineEnabled","previousImpact","homeImpact","viewport","afterCritical","expect","toEqual","afterPoint","combineWithInHome3Impact"]},"operators":{"distinct":6,"total":42,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":28,"physical":36},"errors":[],"lineEnd":112,"lineStart":77,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.5,"halstead":{"bugs":0.293,"difficulty":7,"effort":6154.581,"length":155,"time":341.921,"vocabulary":51,"volume":879.226,"operands":{"distinct":44,"total":88,"identifiers":["offset","Position","getOffsetForEndEdge","endEdgeOn","combineEnd","dragging","preset","inHome2","page","borderBox","axis","impact","DragImpact","getDragImpact","pageOffset","beforePoint","draggable","draggables","droppables","withCombineEnabled","previousImpact","homeImpact","viewport","afterCritical","expect","toEqual","combineWithInHome3Impact","expected","displaced","getForcedDisplacement","visible","dimension","inHome4","shouldAnimate","false","displacedBy","at","type","\"REORDER\"","destination","index","inHome3","descriptor","droppableId"]},"operators":{"distinct":7,"total":67,"identifiers":["const","=","()","{}",":",".","[]"]}},"paramCount":0,"sloc":{"logical":40,"physical":47},"errors":[],"lineEnd":160,"lineStart":114,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.778,"halstead":{"bugs":0.269,"difficulty":8.211,"effort":6621.297,"length":146,"time":367.85,"vocabulary":46,"volume":806.44,"operands":{"distinct":38,"total":78,"identifiers":["displacedStartOfInHome3","Position","subtract","startOfInHome3","displacedBy","point","displacedEndOfInHome3","endOfInHome3","combineStart","add","inHome3Threshold","combineEnd","combineWithDisplacedInHome3Impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome4","shouldAnimate","false","at","type","\"COMBINE\"","combine","draggableId","inHome3","descriptor","id","droppableId","first","\"REORDER\"","destination","index","it","\"should move backwards onto an item that has shifted backwards\"","\"should no longer combine with an item once it hits the top threshold\""]},"operators":{"distinct":8,"total":68,"identifiers":["const","=","()",".","{}",":","[]","function=>"]}},"paramCount":0,"sloc":{"logical":36,"physical":123},"errors":[],"lineEnd":285,"lineStart":163,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.186,"difficulty":6.194,"effort":3452.355,"length":107,"time":191.798,"vocabulary":37,"volume":557.412,"operands":{"distinct":31,"total":64,"identifiers":["offset","Position","getOffsetForStartEdge","startEdgeOn","combineEnd","dragging","preset","inHome2","page","borderBox","axis","impact","DragImpact","getDragImpact","pageOffset","draggable","draggables","droppables","withCombineEnabled","previousImpact","first","viewport","afterCritical","expect","at","toHaveProperty","\"type\"","\"REORDER\"","beforePoint","toEqual","combineWithDisplacedInHome3Impact"]},"operators":{"distinct":6,"total":43,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":28,"physical":35},"errors":[],"lineEnd":248,"lineStart":214,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.186,"difficulty":6.194,"effort":3452.355,"length":107,"time":191.798,"vocabulary":37,"volume":557.412,"operands":{"distinct":31,"total":64,"identifiers":["offset","Position","getOffsetForStartEdge","startEdgeOn","combineStart","dragging","preset","inHome2","page","borderBox","axis","impact","DragImpact","getDragImpact","pageOffset","afterPoint","draggable","draggables","droppables","withCombineEnabled","previousImpact","first","viewport","afterCritical","expect","toEqual","combineWithDisplacedInHome3Impact","at","toHaveProperty","\"type\"","\"REORDER\""]},"operators":{"distinct":6,"total":43,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":28,"physical":35},"errors":[],"lineEnd":284,"lineStart":250,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.332,"difficulty":6.657,"effort":6629.282,"length":170,"time":368.293,"vocabulary":58,"volume":995.857,"operands":{"distinct":51,"total":97,"identifiers":["inHome4Threshold","Position","getThreshold","axis","preset","inHome4","endOfInHome4","patch","line","page","borderBox","end","center","crossAxisLine","displacedEndOfInHome4","subtract","displacedBy","point","combineEnd","offset","getOffsetForStartEdge","startEdgeOn","dragging","inHome3","impact","DragImpact","getDragImpact","pageOffset","beforePoint","draggable","draggables","droppables","withCombineEnabled","previousImpact","noImpact","viewport","afterCritical","expected","displaced","emptyGroups","getDisplacedBy","displaceBy","at","type","\"REORDER\"","destination","droppableId","descriptor","index","expect","toEqual"]},"operators":{"distinct":7,"total":73,"identifiers":["const","=","()",".","[]","{}",":"]}},"paramCount":0,"sloc":{"logical":34,"physical":46},"errors":[],"lineEnd":336,"lineStart":291,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.407,"halstead":{"bugs":0.235,"difficulty":3.261,"effort":22977.243,"length":103.9,"time":1276.514,"vocabulary":11,"volume":704.583,"operands":{"distinct":9.9,"total":58.7},"operators":{"distinct":1.1,"total":45.2}},"paramCount":0.1,"sloc":{"logical":24.6,"physical":33.9}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":9.326,"halstead":{"bugs":0.211,"difficulty":6.123,"effort":4596.124,"length":114.444,"time":255.34,"vocabulary":39.111,"volume":632.731,"operands":{"distinct":32.667,"total":64.778},"operators":{"distinct":6.444,"total":49.667}},"paramCount":0.111,"sloc":{"logical":27.111,"physical":115.222}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/combine/should-not-combine-with-home-draggable.spec.js","testCases":1,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  11 | import { origin } from '../../../../../src/state/position';\n  12 |\n> 13 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  14 |   describe(`on ${axis.direction} axis`, () => {\n  15 |     const preset = getPreset(axis);\n  16 |","start":{"line":13,"column":23,"index":472}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":13.793,"halstead":{"bugs":0.197,"difficulty":10.313,"effort":6099.461,"length":109,"time":338.859,"vocabulary":43,"volume":591.463,"operands":{"distinct":32,"total":60,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","it","\"should not allow combining with the dragging item\"","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","home","draggables","viewport","withCombineEnabled","DroppableDimensionMap","enableCombining","droppables","DragImpact","getDragImpact","pageOffset","origin","previousImpact","expect","toEqual"]},"operators":{"distinct":11,"total":49,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":29,"physical":43}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":6,"path":"../../../../../src/types","type":"esm"},{"line":7,"path":"../../../../../src/state/axis","type":"esm"},{"line":8,"path":"../../../../../src/state/get-drag-impact","type":"esm"},{"line":9,"path":"../../../../../src/state/get-lift-effect","type":"esm"},{"line":10,"path":"../../../../util/dimension","type":"esm"},{"line":11,"path":"../../../../../src/state/position","type":"esm"}],"errors":[],"lineEnd":43,"lineStart":1,"maintainability":113.84,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":30},"errors":[],"lineEnd":42,"lineStart":13,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.011,"difficulty":2,"effort":63.399,"length":10,"time":3.522,"vocabulary":9,"volume":31.699,"operands":{"distinct":5,"total":5,"identifiers":["preset","getPreset","axis","it","\"should not allow combining with the dragging item\""]},"operators":{"distinct":4,"total":5,"identifiers":["const","=","()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":28},"errors":[],"lineEnd":41,"lineStart":14,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.127,"difficulty":6.571,"effort":2499.712,"length":80,"time":138.873,"vocabulary":27,"volume":380.391,"operands":{"distinct":21,"total":46,"identifiers":["afterCritical","impact","homeImpact","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","withCombineEnabled","DroppableDimensionMap","enableCombining","droppables","DragImpact","getDragImpact","pageOffset","origin","previousImpact","expect","toEqual"]},"operators":{"distinct":6,"total":34,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":21,"physical":24},"errors":[],"lineEnd":40,"lineStart":17,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.049,"difficulty":2.578,"effort":1524.865,"length":27.25,"time":84.715,"vocabulary":10.75,"volume":147.866,"operands":{"distinct":8,"total":15},"operators":{"distinct":2.75,"total":12.25}},"paramCount":0.25,"sloc":{"logical":7.25,"physical":10.75}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":26.587,"halstead":{"bugs":0.049,"difficulty":3.69,"effort":882.053,"length":33.333,"time":49.003,"vocabulary":15.333,"volume":148.437,"operands":{"distinct":10.333,"total":18.667},"operators":{"distinct":5,"total":14.667}},"paramCount":0.333,"sloc":{"logical":9,"physical":27.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-drag-impact/combine/is-combine-disabled.spec.js","testCases":1,"smells":3,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  17 | import { getOffsetForEndEdge } from '../util/get-offset-for-edge';\n  18 |\n> 19 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  20 |   describe(`on ${axis.direction} axis`, () => {\n  21 |     const preset = getPreset(axis);\n  22 |","start":{"line":19,"column":23,"index":844}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  55 |         });\n  56 |\n> 57 |         expect(impact).toEqual(homeImpact);\n     |        ^ Duplicate Assert\n  58 |       }\n  59 |       // would have combined if was enabled (validation)\n  60 |       {","start":{"line":57,"column":8,"index":2167}},{"frame":"  86 |           },\n  87 |         };\n> 88 |         expect(impact).toEqual(expected);\n     |        ^ Duplicate Assert\n  89 |       }\n  90 |     });\n  91 |   });","start":{"line":88,"column":8,"index":3273}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":5.97,"halstead":{"bugs":0.616,"difficulty":13.103,"effort":24201.234,"length":293,"time":1344.513,"vocabulary":79,"volume":1847.008,"operands":{"distinct":68,"total":162,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome2","home","draggables","viewport","withCombineEnabled","DroppableDimensionMap","enableCombining","droppables","startOfInHome3","Position","patch","line","inHome3","page","borderBox","start","center","crossAxisLine","threshold","getThreshold","combineStart","getOffsetForEndEdge","endEdgeOn","add","dragging","it","\"should not create a combine impact when combining is disabled\"","DragImpact","getDragImpact","pageOffset","afterPoint","previousImpact","expect","toEqual","expected","displaced","getForcedDisplacement","visible","dimension","shouldAnimate","false","inHome4","displacedBy","getDisplacedBy","displaceBy","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId"]},"operators":{"distinct":11,"total":131,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":67,"physical":93}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":7,"path":"../../../../../src/types","type":"esm"},{"line":8,"path":"../../../../../src/state/axis","type":"esm"},{"line":9,"path":"../../../../../src/state/get-displaced-by","type":"esm"},{"line":10,"path":"../../../../../src/state/get-drag-impact","type":"esm"},{"line":11,"path":"../../../../../src/state/get-lift-effect","type":"esm"},{"line":12,"path":"../../../../../src/state/position","type":"esm"},{"line":13,"path":"../../../../util/after-point","type":"esm"},{"line":14,"path":"../../../../util/dimension","type":"esm"},{"line":15,"path":"../../../../util/impact","type":"esm"},{"line":16,"path":"../util/get-combine-threshold","type":"esm"},{"line":17,"path":"../util/get-offset-for-edge","type":"esm"}],"errors":[],"lineEnd":93,"lineStart":1,"maintainability":95.561,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":74},"errors":[],"lineEnd":92,"lineStart":19,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.212,"difficulty":7.429,"effort":4716.199,"length":117,"time":262.011,"vocabulary":43,"volume":634.873,"operands":{"distinct":35,"total":65,"identifiers":["preset","getPreset","axis","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome2","home","draggables","viewport","withCombineEnabled","DroppableDimensionMap","enableCombining","droppables","startOfInHome3","Position","patch","line","inHome3","page","borderBox","start","center","crossAxisLine","threshold","getThreshold","combineStart","getOffsetForEndEdge","endEdgeOn","add","dragging","it","\"should not create a combine impact when combining is disabled\""]},"operators":{"distinct":8,"total":52,"identifiers":["const","=","()","{}",":",".","[]","function=>"]}},"paramCount":0,"sloc":{"logical":24,"physical":72},"errors":[],"lineEnd":91,"lineStart":20,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.291,"difficulty":9.026,"effort":7870.995,"length":157,"time":437.277,"vocabulary":47,"volume":872.07,"operands":{"distinct":39,"total":88,"identifiers":["impact","DragImpact","getDragImpact","pageOffset","afterPoint","axis","combineStart","draggable","preset","inHome2","draggables","droppables","previousImpact","homeImpact","viewport","afterCritical","expect","toEqual","withCombineEnabled","expected","displaced","getForcedDisplacement","visible","dimension","inHome3","shouldAnimate","false","inHome4","displacedBy","getDisplacedBy","displaceBy","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId"]},"operators":{"distinct":8,"total":69,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":39,"physical":47},"errors":[],"lineEnd":90,"lineStart":44,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.493,"halstead":{"bugs":0.154,"difficulty":3.276,"effort":6050.309,"length":73.25,"time":336.128,"vocabulary":19.75,"volume":461.752,"operands":{"distinct":17,"total":40.5},"operators":{"distinct":2.75,"total":32.75}},"paramCount":0.25,"sloc":{"logical":16.75,"physical":23.25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":18.91,"halstead":{"bugs":0.171,"difficulty":6.318,"effort":4223.414,"length":94.667,"time":234.634,"vocabulary":33.333,"volume":513.388,"operands":{"distinct":26.333,"total":52.667},"operators":{"distinct":7,"total":42}},"paramCount":0.333,"sloc":{"logical":21.667,"physical":64.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-displacement-groups/use-initial-position-not-displaced.spec.js","testCases":1,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  18 | import { emptyGroups } from '../../../../src/state/no-impact';\n  19 |\n> 20 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  21 |   describe(`on ${axis.direction} axis`, () => {\n  22 |     const preset = getPreset(axis);\n  23 |     const viewport: Viewport = preset.viewport;","start":{"line":20,"column":23,"index":875}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":8.889,"halstead":{"bugs":0.477,"difficulty":11,"effort":15728.344,"length":231,"time":873.797,"vocabulary":73,"volume":1429.849,"operands":{"distinct":62,"total":124,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","viewport","Viewport","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","it","\"should calculate visibility as if in original location\"","onEndOfInHome2","Position","patch","line","inHome2","page","marginBox","end","center","crossAxisLine","endOfInHome2MovedBackwards","subtract","point","newScroll","add","1","scrolled","scrollViewport","expect","isPartiallyVisible","target","offsetByPosition","negate","destination","home","frame","withDroppableDisplacement","true","toBe","false","result","DisplacementGroups","getForcedDisplacement","visible","dimension","inHome3","inHome4","expected","getDisplacementGroups","afterDragging","last","emptyGroups","toEqual"]},"operators":{"distinct":11,"total":107,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":45,"physical":81}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../src/types","type":"esm"},{"line":9,"path":"../../../../src/state/axis","type":"esm"},{"line":10,"path":"../../../../src/state/get-displaced-by","type":"esm"},{"line":11,"path":"../../../../src/state/position","type":"esm"},{"line":12,"path":"../../../../src/state/scroll-viewport","type":"esm"},{"line":13,"path":"../../../../src/state/visibility/is-visible","type":"esm"},{"line":14,"path":"../../../util/dimension","type":"esm"},{"line":15,"path":"../../../../src/state/spacing","type":"esm"},{"line":16,"path":"../../../util/impact","type":"esm"},{"line":17,"path":"../../../../src/state/get-displacement-groups","type":"esm"},{"line":18,"path":"../../../../src/state/no-impact","type":"esm"}],"errors":[],"lineEnd":81,"lineStart":1,"maintainability":103.483,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":61},"errors":[],"lineEnd":80,"lineStart":20,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.04,"difficulty":3.333,"effort":395.121,"length":29,"time":21.951,"vocabulary":17,"volume":118.536,"operands":{"distinct":12,"total":16,"identifiers":["preset","getPreset","axis","viewport","Viewport","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","it","\"should calculate visibility as if in original location\""]},"operators":{"distinct":5,"total":13,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":59},"errors":[],"lineEnd":79,"lineStart":21,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.359,"difficulty":7.765,"effort":8358.89,"length":183,"time":464.383,"vocabulary":59,"volume":1076.524,"operands":{"distinct":51,"total":99,"identifiers":["onEndOfInHome2","Position","patch","axis","line","preset","inHome2","page","marginBox","end","center","crossAxisLine","endOfInHome2MovedBackwards","subtract","displacedBy","point","newScroll","add","1","scrolled","Viewport","scrollViewport","viewport","expect","isPartiallyVisible","target","offsetByPosition","negate","destination","home","frame","withDroppableDisplacement","true","toBe","false","result","DisplacementGroups","getForcedDisplacement","visible","dimension","inHome3","inHome4","expected","getDisplacementGroups","afterDragging","getDisplacedBy","inHome1","displaceBy","last","emptyGroups","toEqual"]},"operators":{"distinct":8,"total":84,"identifiers":["const","=","()",".","[]","{}",":",","]}},"paramCount":0,"sloc":{"logical":34,"physical":49},"errors":[],"lineEnd":78,"lineStart":30,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.222,"halstead":{"bugs":0.119,"difficulty":2.75,"effort":3932.086,"length":57.75,"time":218.449,"vocabulary":18.25,"volume":357.462,"operands":{"distinct":15.5,"total":31},"operators":{"distinct":2.75,"total":26.75}},"paramCount":0.25,"sloc":{"logical":11.25,"physical":20.25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":22.409,"halstead":{"bugs":0.136,"difficulty":4.533,"effort":2945.686,"length":74,"time":163.649,"vocabulary":28.667,"volume":409.426,"operands":{"distinct":22.667,"total":40},"operators":{"distinct":6,"total":34}},"paramCount":0.333,"sloc":{"logical":14.333,"physical":56.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-displacement-groups/get-displacement-groups.spec.js","testCases":6,"smells":8,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  25 | import scrollViewport from '../../../../src/state/scroll-viewport';\n  26 |\n> 27 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  28 |   describe(`on the ${axis.direction} axis`, () => {\n  29 |     const viewport: Viewport = createViewport({\n  30 |       frame: getRect({","start":{"line":27,"column":23,"index":1016}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  213 |\n  214 |     it('should mark an item as not animated when moving from invisible to visible', () => {\n> 215 |       const last: DisplacementGroups = getForcedDisplacement({\n      |                                       ^ Eager Test\n  216 |         visible: [\n  217 |           { dimension: isVisible },\n  218 |           { dimension: isVisibleDueToOverScanning },","start":{"line":215,"column":39,"index":6306}},{"frame":"  231 |       });\n  232 |\n> 233 |       const expected: DisplacementGroups = getForcedDisplacement({\n      |                                           ^ Eager Test\n  234 |         visible: [\n  235 |           { dimension: isVisible },\n  236 |           { dimension: isVisibleDueToOverScanning },","start":{"line":233,"column":43,"index":6873}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  179 |       });\n  180 |\n> 181 |       const expected: DisplacementGroups = getForcedDisplacement({\n      |                                           ^ Lazy Test\n  182 |         visible: [\n  183 |           { dimension: isVisible },\n  184 |           // overscanning","start":{"line":181,"column":43,"index":5270}},{"frame":"  192 |\n  193 |     it('should keep displacement animation consistent between calls', () => {\n> 194 |       const last: DisplacementGroups = getForcedDisplacement({\n      |                                       ^ Lazy Test\n  195 |         visible: [\n  196 |           // forcing this to be difference so we know this is working\n  197 |           { dimension: isVisible, shouldAnimate: false },","start":{"line":194,"column":39,"index":5651}},{"frame":"  213 |\n  214 |     it('should mark an item as not animated when moving from invisible to visible', () => {\n> 215 |       const last: DisplacementGroups = getForcedDisplacement({\n      |                                       ^ Lazy Test\n  216 |         visible: [\n  217 |           { dimension: isVisible },\n  218 |           { dimension: isVisibleDueToOverScanning },","start":{"line":215,"column":39,"index":6306}},{"frame":"  251 |       });\n  252 |\n> 253 |       const expected: DisplacementGroups = getForcedDisplacement({\n      |                                           ^ Lazy Test\n  254 |         // both are animated\n  255 |         visible: [\n  256 |           { dimension: isVisible },","start":{"line":253,"column":43,"index":7481}},{"frame":"  274 |       });\n  275 |\n> 276 |       const expected: DisplacementGroups = getForcedDisplacement({\n      |                                           ^ Lazy Test\n  277 |         visible: [\n  278 |           { dimension: isVisible, shouldAnimate: false },\n  279 |           { dimension: isVisibleDueToOverScanning, shouldAnimate: false },","start":{"line":276,"column":43,"index":8129}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":4.455,"halstead":{"bugs":1.965,"difficulty":31.33,"effort":184683.808,"length":858,"time":10260.212,"vocabulary":117,"volume":5894.773,"operands":{"distinct":103,"total":461,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on the "," axis","viewport","Viewport","createViewport","frame","getRect","top","0","right","1000","left","bottom","scroll","origin","scrollHeight","scrollWidth","homeCrossAxisEnd","crossAxisStart","crossAxisSize","2","home","DroppableDimension","getDroppableDimension","descriptor","id","\"home\"","type","\"TYPE\"","mode","\"standard\"","borderBox","start","end","2000","crossAxisEnd","foreign","\"foreign\"","1","dragging","DraggableDimension","getDraggableDimension","\"in-viewport\"","droppableId","index","200","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","isVisible","\"is-visible\"","isVisibleDueToOverScanning","\"is-visible-due-to-overscanning\"","client","100","isNotVisible","\"is-not-visible\"","marginBox","size","10","draggables","DraggableDimensionMap","toDraggableMap","impact","homeImpact","getLiftEffect","draggable","afterDragging","it","\"should return nothing when nothing is after the dragging item\"","result","DisplacementGroups","getDisplacementGroups","destination","last","displaced","expect","toEqual","emptyGroups","\"should correctly mark item visibility\"","expected","getForcedDisplacement","visible","dimension","invisible","\"should keep displacement animation consistent between calls\"","shouldAnimate","false","\"should mark an item as not animated when moving from invisible to visible\"","scrolled","scrollViewport","patch","line","\"should make displacement animated if being displaced for the first time\"","\"should force the animation value when requested\"","forceShouldAnimate"]},"operators":{"distinct":14,"total":397,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":","+","/","... (spread)"]}},"paramCount":1,"sloc":{"logical":202,"physical":289}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":11,"path":"../../../../src/types","type":"esm"},{"line":12,"path":"../../../../src/state/axis","type":"esm"},{"line":13,"path":"../../../util/viewport","type":"esm"},{"line":14,"path":"../../../../src/state/position","type":"esm"},{"line":18,"path":"../../../util/dimension","type":"esm"},{"line":19,"path":"../../../../src/state/no-impact","type":"esm"},{"line":20,"path":"../../../../src/state/get-displaced-by","type":"esm"},{"line":21,"path":"../../../../src/state/dimension-structures","type":"esm"},{"line":22,"path":"../../../../src/state/get-lift-effect","type":"esm"},{"line":23,"path":"../../../../src/state/get-displacement-groups","type":"esm"},{"line":24,"path":"../../../util/impact","type":"esm"},{"line":25,"path":"../../../../src/state/scroll-viewport","type":"esm"}],"errors":[],"lineEnd":289,"lineStart":1,"maintainability":86.643,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on the "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":262},"errors":[],"lineEnd":288,"lineStart":27,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1,"halstead":{"bugs":1.066,"difficulty":20.921,"effort":66893.364,"length":495,"time":3716.298,"vocabulary":88,"volume":3197.419,"operands":{"distinct":76,"total":265,"identifiers":["viewport","Viewport","createViewport","frame","getRect","top","0","right","1000","left","bottom","scroll","origin","scrollHeight","scrollWidth","homeCrossAxisEnd","axis","crossAxisStart","crossAxisSize","2","home","DroppableDimension","getDroppableDimension","descriptor","id","\"home\"","type","\"TYPE\"","mode","\"standard\"","direction","borderBox","start","end","2000","crossAxisEnd","foreign","\"foreign\"","1","dragging","DraggableDimension","getDraggableDimension","\"in-viewport\"","droppableId","index","200","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","isVisible","\"is-visible\"","isVisibleDueToOverScanning","\"is-visible-due-to-overscanning\"","client","100","isNotVisible","\"is-not-visible\"","marginBox","size","10","draggables","DraggableDimensionMap","toDraggableMap","impact","homeImpact","getLiftEffect","draggable","afterDragging","it","\"should return nothing when nothing is after the dragging item\"","\"should correctly mark item visibility\"","\"should keep displacement animation consistent between calls\"","\"should mark an item as not animated when moving from invisible to visible\"","\"should make displacement animated if being displaced for the first time\"","\"should force the animation value when requested\""]},"operators":{"distinct":12,"total":230,"identifiers":["const","=","()","{}",":","+","[]",".","/","... (spread)",",","function=>"]}},"paramCount":0,"sloc":{"logical":100,"physical":260},"errors":[],"lineEnd":287,"lineStart":28,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.048,"difficulty":4.2,"effort":599.348,"length":32,"time":33.297,"vocabulary":22,"volume":142.702,"operands":{"distinct":15,"total":18,"identifiers":["result","DisplacementGroups","getDisplacementGroups","afterDragging","destination","home","displacedBy","last","homeImpact","displaced","viewport","frame","expect","toEqual","emptyGroups"]},"operators":{"distinct":7,"total":14,"identifiers":["const","=","()","{}",":","[]","."]}},"paramCount":0,"sloc":{"logical":9,"physical":11},"errors":[],"lineEnd":170,"lineStart":160,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.088,"difficulty":5.273,"effort":1397.126,"length":54,"time":77.618,"vocabulary":30,"volume":264.972,"operands":{"distinct":22,"total":29,"identifiers":["result","DisplacementGroups","getDisplacementGroups","afterDragging","destination","foreign","displacedBy","last","homeImpact","displaced","viewport","frame","expected","getForcedDisplacement","visible","dimension","isVisible","isVisibleDueToOverScanning","invisible","isNotVisible","expect","toEqual"]},"operators":{"distinct":8,"total":25,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":15,"physical":20},"errors":[],"lineEnd":191,"lineStart":172,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.087,"difficulty":5.714,"effort":1499.034,"length":54,"time":83.28,"vocabulary":29,"volume":262.331,"operands":{"distinct":21,"total":30,"identifiers":["last","DisplacementGroups","getForcedDisplacement","visible","dimension","isVisible","shouldAnimate","false","isVisibleDueToOverScanning","invisible","isNotVisible","result","getDisplacementGroups","afterDragging","destination","foreign","displacedBy","viewport","frame","expect","toEqual"]},"operators":{"distinct":8,"total":24,"identifiers":["const","=","()","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":16,"physical":20},"errors":[],"lineEnd":212,"lineStart":193,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.158,"difficulty":6.621,"effort":3138.606,"length":91,"time":174.367,"vocabulary":37,"volume":474.06,"operands":{"distinct":29,"total":48,"identifiers":["last","DisplacementGroups","getForcedDisplacement","visible","dimension","isVisible","isVisibleDueToOverScanning","invisible","isNotVisible","scrolled","Viewport","scrollViewport","viewport","patch","axis","line","1","result","getDisplacementGroups","afterDragging","destination","foreign","displacedBy","frame","expected","shouldAnimate","false","expect","toEqual"]},"operators":{"distinct":8,"total":43,"identifiers":["const","=","()","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":25,"physical":29},"errors":[],"lineEnd":242,"lineStart":214,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.084,"difficulty":5.333,"effort":1347.28,"length":52,"time":74.849,"vocabulary":29,"volume":252.615,"operands":{"distinct":21,"total":28,"identifiers":["result","DisplacementGroups","getDisplacementGroups","afterDragging","destination","foreign","displacedBy","last","emptyGroups","viewport","frame","expected","getForcedDisplacement","visible","dimension","isVisible","isVisibleDueToOverScanning","invisible","isNotVisible","expect","toEqual"]},"operators":{"distinct":8,"total":24,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":15,"physical":21},"errors":[],"lineEnd":264,"lineStart":244,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.102,"difficulty":5.667,"effort":1728.333,"length":61,"time":96.019,"vocabulary":32,"volume":305,"operands":{"distinct":24,"total":34,"identifiers":["result","DisplacementGroups","getDisplacementGroups","afterDragging","destination","foreign","displacedBy","last","emptyGroups","viewport","frame","forceShouldAnimate","false","expected","getForcedDisplacement","visible","dimension","isVisible","shouldAnimate","isVisibleDueToOverScanning","invisible","isNotVisible","expect","toEqual"]},"operators":{"distinct":8,"total":27,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":18,"physical":21},"errors":[],"lineEnd":286,"lineStart":266,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.495,"halstead":{"bugs":0.218,"difficulty":3.481,"effort":20520.423,"length":95.333,"time":1140.024,"vocabulary":13,"volume":654.975,"operands":{"distinct":11.444,"total":51.222},"operators":{"distinct":1.556,"total":44.111}},"paramCount":0.111,"sloc":{"logical":22.444,"physical":32.111}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":11.406,"halstead":{"bugs":0.206,"difficulty":7.029,"effort":9585.767,"length":106.125,"time":532.543,"vocabulary":34.625,"volume":616.54,"operands":{"distinct":26.625,"total":57.125},"operators":{"distinct":8,"total":49}},"paramCount":0.125,"sloc":{"logical":25,"physical":80.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-center-from-impact/move-relative-to.spec.js","testCases":3,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  54 |   box.margin[axis.end] + box.borderBox[axis.size] / 2;\n  55 |\n> 56 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  57 |   describe(`on ${axis.direction} axis`, () => {\n  58 |     it('should align before the target', () => {\n  59 |       const newCenter: Position = goBefore({","start":{"line":56,"column":23,"index":1282}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":11.25,"halstead":{"bugs":0.756,"difficulty":29.778,"effort":67531.078,"length":370,"time":3751.727,"vocabulary":70,"volume":2267.835,"operands":{"distinct":54,"total":201,"identifiers":["spacing","1","getAssortedSpacing","Spacing","top","right","bottom","left","moveRelativeTo","BoxModel","createBox","borderBox","0","100","margin","border","padding","isMoving","400","500","distanceFromStartToCenter","axis","box","start","size","2","distanceFromEndToCenter","end","vertical","horizontal","forEach","describe","direction","on "," axis","it","\"should align before the target\"","newCenter","Position","goBefore","expected","patch","line","marginBox","crossAxisStart","crossAxisSize","expect","toEqual","\"should align after the target\"","goAfter","\"should move into the start of the context box of the target\"","goIntoStart","moveInto","contentBox"]},"operators":{"distinct":16,"total":169,"identifiers":["let","=","const","function=>","{}",":","++ (postfix)","()","+","[]",".","/",",","``","${}","-"]}},"paramCount":5,"sloc":{"logical":80,"physical":125}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":7,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../src/types","type":"esm"},{"line":13,"path":"../../../../src/state/get-center-from-impact/move-relative-to","type":"esm"},{"line":14,"path":"../../../../src/state/axis","type":"esm"},{"line":15,"path":"../../../../src/state/position","type":"esm"}],"errors":[],"lineEnd":125,"lineStart":1,"maintainability":105.089,"methods":[{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.019,"difficulty":2.25,"effort":128.382,"length":18,"time":7.132,"vocabulary":9,"volume":57.059,"operands":{"distinct":6,"total":9,"identifiers":["Spacing","top","spacing","right","bottom","left"]},"operators":{"distinct":3,"total":9,"identifiers":["{}",":","++ (postfix)"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":24,"lineStart":19,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.02,"difficulty":2.571,"effort":151.227,"length":17,"time":8.401,"vocabulary":11,"volume":58.81,"operands":{"distinct":7,"total":9,"identifiers":["box","margin","axis","start","borderBox","size","2"]},"operators":{"distinct":4,"total":8,"identifiers":["+","[]",".","/"]}},"paramCount":2,"sloc":{"logical":1,"physical":2},"errors":[],"lineEnd":51,"lineStart":50,"name":"<anon method-2>","paramNames":["axis","box"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.02,"difficulty":2.571,"effort":151.227,"length":17,"time":8.401,"vocabulary":11,"volume":58.81,"operands":{"distinct":7,"total":9,"identifiers":["box","margin","axis","end","borderBox","size","2"]},"operators":{"distinct":4,"total":8,"identifiers":["+","[]",".","/"]}},"paramCount":2,"sloc":{"logical":1,"physical":2},"errors":[],"lineEnd":54,"lineStart":53,"name":"<anon method-3>","paramNames":["axis","box"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":69},"errors":[],"lineEnd":124,"lineStart":56,"name":"<anon method-4>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should align before the target\"","\"should align after the target\"","\"should move into the start of the context box of the target\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":67},"errors":[],"lineEnd":123,"lineStart":57,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.106,"difficulty":9,"effort":2855.569,"length":66,"time":158.643,"vocabulary":28,"volume":317.285,"operands":{"distinct":19,"total":38,"identifiers":["newCenter","Position","goBefore","axis","moveRelativeTo","isMoving","expected","patch","line","marginBox","start","distanceFromEndToCenter","crossAxisStart","margin","borderBox","crossAxisSize","2","expect","toEqual"]},"operators":{"distinct":9,"total":28,"identifiers":["const","=","()","{}",".","-","[]","+","/"]}},"paramCount":0,"sloc":{"logical":10,"physical":21},"errors":[],"lineEnd":78,"lineStart":58,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.105,"difficulty":8,"effort":2510.581,"length":66,"time":139.477,"vocabulary":27,"volume":313.823,"operands":{"distinct":19,"total":38,"identifiers":["newCenter","Position","goAfter","axis","moveRelativeTo","isMoving","expected","patch","line","marginBox","end","distanceFromStartToCenter","crossAxisStart","margin","borderBox","crossAxisSize","2","expect","toEqual"]},"operators":{"distinct":8,"total":28,"identifiers":["const","=","()","{}",".","+","[]","/"]}},"paramCount":0,"sloc":{"logical":10,"physical":21},"errors":[],"lineEnd":100,"lineStart":80,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.108,"difficulty":8.55,"effort":2782.894,"length":67,"time":154.605,"vocabulary":29,"volume":325.485,"operands":{"distinct":20,"total":38,"identifiers":["newCenter","Position","goIntoStart","axis","moveInto","moveRelativeTo","isMoving","expected","patch","line","contentBox","start","distanceFromStartToCenter","crossAxisStart","margin","borderBox","crossAxisSize","2","expect","toEqual"]},"operators":{"distinct":9,"total":29,"identifiers":["const","=","()","{}",":",".","+","[]","/"]}},"paramCount":0,"sloc":{"logical":10,"physical":21},"errors":[],"lineEnd":122,"lineStart":102,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.25,"halstead":{"bugs":0.084,"difficulty":3.309,"effort":7503.453,"length":41.111,"time":416.859,"vocabulary":7.778,"volume":251.982,"operands":{"distinct":6,"total":22.333},"operators":{"distinct":1.778,"total":18.778}},"paramCount":0.556,"sloc":{"logical":8.889,"physical":13.889}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":39.583,"halstead":{"bugs":0.05,"difficulty":4.618,"effort":1088.682,"length":34.125,"time":60.482,"vocabulary":16.375,"volume":149.439,"operands":{"distinct":10.875,"total":19},"operators":{"distinct":5.5,"total":15.125}},"paramCount":0.625,"sloc":{"logical":5.625,"physical":26.125}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-center-from-impact/get-client-border-box-center.spec.js","testCases":3,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  19 | import { getForcedDisplacement } from '../../../util/impact';\n  20 |\n> 21 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  22 |   const preset = getPreset();\n  23 |   const { afterCritical, impact: homeImpact } = getLiftEffect({\n  24 |     draggable: preset.inHome1,","start":{"line":21,"column":23,"index":921}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":4.808,"halstead":{"bugs":0.939,"difficulty":15.288,"effort":43056.129,"length":443,"time":2392.007,"vocabulary":82,"volume":2816.396,"operands":{"distinct":73,"total":248,"identifiers":["vertical","horizontal","forEach","axis","preset","getPreset","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","draggables","home","viewport","it","\"should account for the scroll of the droppable you are over when reordering\"","scrollableHome","DroppableDimension","makeScrollable","scroll","Position","x","10","y","15","displacement","negate","scrolled","scrollDroppable","newClientCenter","getClientBorderBoxCenter","droppable","offset","subtract","client","borderBox","center","expect","toEqual","\"should account for the scroll of the droppable you are over when combining\"","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome2","shouldAnimate","false","inHome3","inHome4","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","expectedCenter","original","centerDiff","expectedOffset","add","\"should account for any changes in the window scroll\"","Viewport","scrollViewport","windowScroll","noImpact"]},"operators":{"distinct":9,"total":195,"identifiers":["()",".","[]",",","function=>","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":104,"physical":140}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":9,"path":"../../../../src/types","type":"esm"},{"line":10,"path":"../../../../src/state/axis","type":"esm"},{"line":11,"path":"../../../../src/state/position","type":"esm"},{"line":12,"path":"../../../../src/state/droppable/scroll-droppable","type":"esm"},{"line":13,"path":"../../../util/dimension","type":"esm"},{"line":14,"path":"../../../../src/state/get-center-from-impact/get-client-border-box-center","type":"esm"},{"line":15,"path":"../../../../src/state/get-displaced-by","type":"esm"},{"line":16,"path":"../../../../src/state/no-impact","type":"esm"},{"line":17,"path":"../../../../src/state/scroll-viewport","type":"esm"},{"line":18,"path":"../../../../src/state/get-lift-effect","type":"esm"},{"line":19,"path":"../../../util/impact","type":"esm"}],"errors":[],"lineEnd":140,"lineStart":1,"maintainability":90.846,"methods":[{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.071,"difficulty":5.833,"effort":1248.641,"length":48,"time":69.369,"vocabulary":22,"volume":214.053,"operands":{"distinct":15,"total":25,"identifiers":["preset","getPreset","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","draggables","home","viewport","it","\"should account for the scroll of the droppable you are over when reordering\"","\"should account for the scroll of the droppable you are over when combining\"","\"should account for any changes in the window scroll\""]},"operators":{"distinct":7,"total":23,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":1,"sloc":{"logical":16,"physical":119},"errors":[],"lineEnd":139,"lineStart":21,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.154,"difficulty":4.781,"effort":2208.066,"length":88,"time":122.67,"vocabulary":38,"volume":461.818,"operands":{"distinct":32,"total":51,"identifiers":["scrollableHome","DroppableDimension","makeScrollable","preset","home","scroll","Position","x","10","y","15","displacement","negate","scrolled","scrollDroppable","newClientCenter","getClientBorderBoxCenter","impact","homeImpact","draggable","inHome1","droppable","draggables","viewport","afterCritical","offset","subtract","client","borderBox","center","expect","toEqual"]},"operators":{"distinct":6,"total":37,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":21,"physical":24},"errors":[],"lineEnd":53,"lineStart":30,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.222,"halstead":{"bugs":0.429,"difficulty":8,"effort":10288.087,"length":212,"time":571.56,"vocabulary":67,"volume":1286.011,"operands":{"distinct":59,"total":118,"identifiers":["scrollableHome","DroppableDimension","makeScrollable","preset","home","scroll","Position","x","10","y","15","displacement","negate","scrolled","scrollDroppable","displacedBy","DisplacedBy","getDisplacedBy","axis","inHome1","displaceBy","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome2","shouldAnimate","false","inHome3","inHome4","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","newClientCenter","getClientBorderBoxCenter","draggable","draggables","droppable","viewport","afterCritical","offset","subtract","client","borderBox","center","expectedCenter","original","centerDiff","expectedOffset","add","expect","toEqual"]},"operators":{"distinct":8,"total":94,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":45,"physical":59},"errors":[],"lineEnd":113,"lineStart":55,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.15,"difficulty":4.688,"effort":2115.571,"length":86,"time":117.532,"vocabulary":38,"volume":451.322,"operands":{"distinct":32,"total":50,"identifiers":["scroll","Position","x","10","y","15","displacement","negate","scrolled","Viewport","scrollViewport","preset","viewport","add","windowScroll","newClientCenter","getClientBorderBoxCenter","impact","noImpact","draggable","inHome1","draggables","droppable","home","afterCritical","offset","subtract","client","borderBox","center","expect","toEqual"]},"operators":{"distinct":6,"total":36,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":20,"physical":24},"errors":[],"lineEnd":138,"lineStart":115,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.962,"halstead":{"bugs":0.188,"difficulty":3.058,"effort":8611.226,"length":88.6,"time":478.401,"vocabulary":16.4,"volume":563.279,"operands":{"distinct":14.6,"total":49.6},"operators":{"distinct":1.8,"total":39}},"paramCount":0.2,"sloc":{"logical":20.8,"physical":28}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":4.559,"halstead":{"bugs":0.201,"difficulty":5.826,"effort":3965.091,"length":108.5,"time":220.283,"vocabulary":41.25,"volume":603.301,"operands":{"distinct":34.5,"total":61},"operators":{"distinct":6.75,"total":47.5}},"paramCount":0.25,"sloc":{"logical":25.5,"physical":56.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-center-from-impact/get-page-border-box-center/over-nothing.spec.js","testCases":1,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"   7 | import type { Axis } from '../../../../../src/types';\n   8 |\n>  9 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  10 |   describe(`on ${axis.direction} axis`, () => {\n  11 |     const preset = getPreset(axis);\n  12 |     const original: Position = preset.inHome1.page.borderBox.center;","start":{"line":9,"column":23,"index":443}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":15.385,"halstead":{"bugs":0.195,"difficulty":9.667,"effort":5646.872,"length":107,"time":313.715,"vocabulary":44,"volume":584.159,"operands":{"distinct":33,"total":58,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","original","Position","inHome1","page","borderBox","center","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","viewport","it","\"should return original center when not over anything\"","result","getPageBorderBoxCenter","droppable","null","dimensions","expect","toEqual"]},"operators":{"distinct":11,"total":49,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":26,"physical":33}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../../src/state/axis","type":"esm"},{"line":4,"path":"../../../../../src/state/get-center-from-impact/get-page-border-box-center","type":"esm"},{"line":5,"path":"../../../../../src/state/get-lift-effect","type":"esm"},{"line":6,"path":"../../../../util/dimension","type":"esm"},{"line":7,"path":"../../../../../src/types","type":"esm"}],"errors":[],"lineEnd":33,"lineStart":1,"maintainability":115.873,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":24},"errors":[],"lineEnd":32,"lineStart":9,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.085,"difficulty":5.342,"effort":1355.953,"length":54,"time":75.331,"vocabulary":26,"volume":253.824,"operands":{"distinct":19,"total":29,"identifiers":["preset","getPreset","axis","original","Position","inHome1","page","borderBox","center","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","viewport","it","\"should return original center when not over anything\""]},"operators":{"distinct":7,"total":25,"identifiers":["const","=","()",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":22},"errors":[],"lineEnd":31,"lineStart":10,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.051,"difficulty":3.75,"effort":568.578,"length":34,"time":31.588,"vocabulary":22,"volume":151.621,"operands":{"distinct":16,"total":20,"identifiers":["result","Position","getPageBorderBoxCenter","impact","homeImpact","draggable","preset","inHome1","droppable","null","draggables","dimensions","afterCritical","expect","toEqual","original"]},"operators":{"distinct":6,"total":14,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":9,"physical":11},"errors":[],"lineEnd":30,"lineStart":20,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.049,"difficulty":2.417,"effort":1411.718,"length":26.75,"time":78.429,"vocabulary":11,"volume":146.04,"operands":{"distinct":8.25,"total":14.5},"operators":{"distinct":2.75,"total":12.25}},"paramCount":0.25,"sloc":{"logical":6.5,"physical":8.25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":22.934,"halstead":{"bugs":0.049,"difficulty":3.864,"effort":669.193,"length":32.667,"time":37.177,"vocabulary":19.333,"volume":146.221,"operands":{"distinct":13.333,"total":18},"operators":{"distinct":6,"total":14.667}},"paramCount":0.333,"sloc":{"logical":8,"physical":19}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-center-from-impact/get-page-border-box-center/in-home-location.spec.js","testCases":1,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"   7 | import type { Axis } from '../../../../../src/types';\n   8 |\n>  9 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  10 |   describe(`on ${axis.direction} axis`, () => {\n  11 |     const preset = getPreset(axis);\n  12 |     const original: Position = preset.inHome1.page.borderBox.center;","start":{"line":9,"column":23,"index":443}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":15.385,"halstead":{"bugs":0.197,"difficulty":10.141,"effort":5997.803,"length":109,"time":333.211,"vocabulary":43,"volume":591.463,"operands":{"distinct":32,"total":59,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","original","Position","inHome1","page","borderBox","center","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","viewport","it","\"should return original center when not over anything\"","result","getPageBorderBoxCenter","droppable","dimensions","expect","toEqual"]},"operators":{"distinct":11,"total":50,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":26,"physical":33}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../../src/state/axis","type":"esm"},{"line":4,"path":"../../../../../src/state/get-center-from-impact/get-page-border-box-center","type":"esm"},{"line":5,"path":"../../../../../src/state/get-lift-effect","type":"esm"},{"line":6,"path":"../../../../util/dimension","type":"esm"},{"line":7,"path":"../../../../../src/types","type":"esm"}],"errors":[],"lineEnd":33,"lineStart":1,"maintainability":115.667,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":24},"errors":[],"lineEnd":32,"lineStart":9,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.085,"difficulty":5.342,"effort":1355.953,"length":54,"time":75.331,"vocabulary":26,"volume":253.824,"operands":{"distinct":19,"total":29,"identifiers":["preset","getPreset","axis","original","Position","inHome1","page","borderBox","center","afterCritical","impact","homeImpact","getLiftEffect","draggable","home","draggables","viewport","it","\"should return original center when not over anything\""]},"operators":{"distinct":7,"total":25,"identifiers":["const","=","()",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":22},"errors":[],"lineEnd":31,"lineStart":10,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.054,"difficulty":3.938,"effort":632.124,"length":36,"time":35.118,"vocabulary":22,"volume":160.54,"operands":{"distinct":16,"total":21,"identifiers":["result","Position","getPageBorderBoxCenter","impact","homeImpact","draggable","preset","inHome1","droppable","home","draggables","dimensions","afterCritical","expect","toEqual","original"]},"operators":{"distinct":6,"total":15,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":9,"physical":11},"errors":[],"lineEnd":30,"lineStart":20,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.049,"difficulty":2.535,"effort":1499.451,"length":27.25,"time":83.303,"vocabulary":10.75,"volume":147.866,"operands":{"distinct":8,"total":14.75},"operators":{"distinct":2.75,"total":12.5}},"paramCount":0.25,"sloc":{"logical":6.5,"physical":8.25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":22.934,"halstead":{"bugs":0.05,"difficulty":3.927,"effort":690.375,"length":33.333,"time":38.354,"vocabulary":19.333,"volume":149.194,"operands":{"distinct":13.333,"total":18.333},"operators":{"distinct":6,"total":15}},"paramCount":0.333,"sloc":{"logical":8,"physical":19}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-center-from-impact/get-page-border-box-center/reorder/with-droppable-scroll.spec.js","testCases":1,"smells":3,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  17 | import { emptyGroups } from '../../../../../../src/state/no-impact';\n  18 |\n> 19 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  20 |   describe(`on ${axis.direction} axis`, () => {\n  21 |     const preset = getPreset(axis);\n  22 |     it('should account for any scroll in the droppable being dropped into (into foreign list)', () => {","start":{"line":19,"column":23,"index":925}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  58 |         });\n  59 |\n> 60 |         expect(result).toEqual(expectedCenter);\n     |        ^ Duplicate Assert\n  61 |       }\n  62 |       // into start of empty foreign list (with scroll)\n  63 |       {","start":{"line":60,"column":8,"index":2234}},{"frame":"  80 |         });\n  81 |\n> 82 |         expect(result).toEqual(add(expectedCenter, displacement));\n     |        ^ Duplicate Assert\n  83 |       }\n  84 |     });\n  85 |   });","start":{"line":82,"column":8,"index":2913}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":6.897,"halstead":{"bugs":0.472,"difficulty":11.444,"effort":16220.885,"length":229,"time":901.16,"vocabulary":73,"volume":1417.47,"operands":{"distinct":62,"total":129,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","it","\"should account for any scroll in the droppable being dropped into (into foreign list)\"","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","afterCritical","getLiftEffect","draggable","home","draggables","viewport","impact","DragImpact","displaced","emptyGroups","at","type","\"REORDER\"","destination","index","0","droppableId","emptyForeign","descriptor","id","expectedCenter","Position","goIntoStart","moveInto","page","isMoving","result","getPageBorderBoxCenter","dimensions","droppable","expect","toEqual","scroll","x","10","y","20","displacement","negate","scrollable","DroppableDimension","makeScrollable","scrolled","scrollDroppable","add"]},"operators":{"distinct":11,"total":100,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":58,"physical":87}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../../src/state/axis","type":"esm"},{"line":10,"path":"../../../../../../src/state/get-center-from-impact/get-page-border-box-center","type":"esm"},{"line":11,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":12,"path":"../../../../../util/dimension","type":"esm"},{"line":13,"path":"../../../../../../src/state/get-center-from-impact/move-relative-to","type":"esm"},{"line":14,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":15,"path":"../../../../../../src/state/position","type":"esm"},{"line":16,"path":"../../../../../../src/state/droppable/scroll-droppable","type":"esm"},{"line":17,"path":"../../../../../../src/state/no-impact","type":"esm"}],"errors":[],"lineEnd":87,"lineStart":1,"maintainability":99.266,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":68},"errors":[],"lineEnd":86,"lineStart":19,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.011,"difficulty":2,"effort":63.399,"length":10,"time":3.522,"vocabulary":9,"volume":31.699,"operands":{"distinct":5,"total":5,"identifiers":["preset","getPreset","axis","it","\"should account for any scroll in the droppable being dropped into (into foreign list)\""]},"operators":{"distinct":4,"total":5,"identifiers":["const","=","()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":66},"errors":[],"lineEnd":85,"lineStart":20,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2,"halstead":{"bugs":0.391,"difficulty":6.635,"effort":7773.09,"length":200,"time":431.838,"vocabulary":58,"volume":1171.596,"operands":{"distinct":52,"total":115,"identifiers":["displacedBy","DisplacedBy","getDisplacedBy","axis","preset","inHome1","displaceBy","afterCritical","getLiftEffect","draggable","home","draggables","viewport","impact","DragImpact","displaced","emptyGroups","at","type","\"REORDER\"","destination","index","0","droppableId","emptyForeign","descriptor","id","expectedCenter","Position","goIntoStart","moveInto","page","isMoving","result","getPageBorderBoxCenter","dimensions","droppable","expect","toEqual","scroll","x","10","y","20","displacement","negate","scrollable","DroppableDimension","makeScrollable","scrolled","scrollDroppable","add"]},"operators":{"distinct":6,"total":85,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":50,"physical":63},"errors":[],"lineEnd":84,"lineStart":22,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.724,"halstead":{"bugs":0.118,"difficulty":2.861,"effort":4055.221,"length":57.25,"time":225.29,"vocabulary":18.25,"volume":354.367,"operands":{"distinct":15.5,"total":32.25},"operators":{"distinct":2.75,"total":25}},"paramCount":0.25,"sloc":{"logical":14.5,"physical":21.75}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":25.667,"halstead":{"bugs":0.137,"difficulty":3.712,"effort":2639.846,"length":73.333,"time":146.658,"vocabulary":25.667,"volume":412.172,"operands":{"distinct":20.667,"total":41.667},"operators":{"distinct":5,"total":31.667}},"paramCount":0.333,"sloc":{"logical":18.667,"physical":65.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-center-from-impact/get-page-border-box-center/reorder/there-is-displacement.spec.js","testCases":2,"smells":3,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  15 | import { getForcedDisplacement } from '../../../../../util/impact';\n  16 |\n> 17 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  18 |   describe(`on ${axis.direction} axis`, () => {\n  19 |     const preset = getPreset(axis);\n  20 |","start":{"line":17,"column":23,"index":769}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  34 |         const impact: DragImpact = {\n  35 |           // moved forward over inHome2\n> 36 |           displaced: getForcedDisplacement({\n     |                     ^ Lazy Test\n  37 |             visible: [\n  38 |               {\n  39 |                 dimension: preset.inHome3,","start":{"line":36,"column":21,"index":1448}},{"frame":"  86 |         // moved into foreign\n  87 |         const impact: DragImpact = {\n> 88 |           displaced: getForcedDisplacement({\n     |                     ^ Lazy Test\n  89 |             visible: [\n  90 |               {\n  91 |                 dimension: preset.inForeign2,","start":{"line":88,"column":21,"index":2999}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":7.692,"halstead":{"bugs":0.761,"difficulty":18.033,"effort":41166.549,"length":370,"time":2287.03,"vocabulary":72,"volume":2282.872,"operands":{"distinct":61,"total":200,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","\"closest displaced started displaced\"","it","\"should go before the visible (displaced) position of the item\"","afterCritical","getLiftEffect","draggable","inHome1","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome3","shouldAnimate","false","inHome4","at","type","\"REORDER\"","destination","index","descriptor","droppableId","id","result","Position","getPageBorderBoxCenter","droppable","expected","goBefore","moveRelativeTo","page","isMoving","expect","toEqual","\"closest displaced did not start displaced\"","\"should go before the displaced position of the item\"","inForeign2","inForeign3","inForeign4","foreign","offset","point"]},"operators":{"distinct":11,"total":170,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":91,"physical":132}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../../src/state/axis","type":"esm"},{"line":10,"path":"../../../../../../src/state/get-center-from-impact/get-page-border-box-center","type":"esm"},{"line":11,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":12,"path":"../../../../../util/dimension","type":"esm"},{"line":13,"path":"../../../../../../src/state/get-center-from-impact/move-relative-to","type":"esm"},{"line":14,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":15,"path":"../../../../../util/impact","type":"esm"}],"errors":[],"lineEnd":132,"lineStart":1,"maintainability":99.764,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":115},"errors":[],"lineEnd":131,"lineStart":17,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.016,"difficulty":2.333,"effort":108.516,"length":14,"time":6.029,"vocabulary":10,"volume":46.507,"operands":{"distinct":6,"total":7,"identifiers":["preset","getPreset","axis","describe","\"closest displaced started displaced\"","\"closest displaced did not start displaced\""]},"operators":{"distinct":4,"total":7,"identifiers":["const","=","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":113},"errors":[],"lineEnd":130,"lineStart":18,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should go before the visible (displaced) position of the item\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":52},"errors":[],"lineEnd":72,"lineStart":21,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.703,"halstead":{"bugs":0.295,"difficulty":8.19,"effort":7257.462,"length":157,"time":403.192,"vocabulary":50,"volume":886.085,"operands":{"distinct":42,"total":86,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome3","shouldAnimate","false","inHome4","at","type","\"REORDER\"","destination","index","descriptor","droppableId","id","result","Position","getPageBorderBoxCenter","droppable","expected","goBefore","moveRelativeTo","page","isMoving","expect","toEqual"]},"operators":{"distinct":8,"total":71,"identifiers":["const","=","{}","()",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":37,"physical":50},"errors":[],"lineEnd":71,"lineStart":22,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should go before the displaced position of the item\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":56},"errors":[],"lineEnd":129,"lineStart":74,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.5,"halstead":{"bugs":0.33,"difficulty":8.174,"effort":8090.871,"length":172,"time":449.493,"vocabulary":54,"volume":989.841,"operands":{"distinct":46,"total":94,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inForeign2","shouldAnimate","false","inForeign3","inForeign4","at","type","\"REORDER\"","destination","index","descriptor","droppableId","id","result","Position","getPageBorderBoxCenter","droppable","foreign","expected","goBefore","moveRelativeTo","offset","page","point","isMoving","expect","toEqual"]},"operators":{"distinct":8,"total":78,"identifiers":["const","=","{}","()",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":40,"physical":54},"errors":[],"lineEnd":128,"lineStart":75,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.099,"halstead":{"bugs":0.109,"difficulty":2.576,"effort":5880.936,"length":52.857,"time":326.719,"vocabulary":10.286,"volume":326.125,"operands":{"distinct":8.714,"total":28.571},"operators":{"distinct":1.571,"total":24.286}},"paramCount":0.143,"sloc":{"logical":13,"physical":18.857}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":28.645,"halstead":{"bugs":0.11,"difficulty":3.866,"effort":2592.65,"length":60.167,"time":144.036,"vocabulary":22,"volume":328.609,"operands":{"distinct":17.167,"total":32.667},"operators":{"distinct":4.833,"total":27.5}},"paramCount":0.167,"sloc":{"logical":14.833,"physical":73.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-center-from-impact/get-page-border-box-center/reorder/nothing-displaced.spec.js","testCases":3,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  15 | import { emptyGroups } from '../../../../../../src/state/no-impact';\n  16 |\n> 17 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  18 |   describe(`on ${axis.direction} axis`, () => {\n  19 |     const preset = getPreset(axis);\n  20 |","start":{"line":17,"column":23,"index":800}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":9.091,"halstead":{"bugs":0.816,"difficulty":22,"effort":53888.125,"length":397,"time":2993.785,"vocabulary":72,"volume":2449.46,"operands":{"distinct":60,"total":220,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","\"last item is the dragging item\"","it","\"should return to the original center\"","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome4","home","draggables","viewport","result","Position","getPageBorderBoxCenter","droppable","expect","toEqual","page","borderBox","center","\"last item started displaced\"","\"should go after the item in its current non-displaced location\"","inHome1","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","DragImpact","displaced","emptyGroups","at","type","\"REORDER\"","destination","index","descriptor","droppableId","id","expected","goAfter","moveRelativeTo","offset","negate","point","isMoving","\"last item did not start displaced\"","inForeign4","1","foreign"]},"operators":{"distinct":12,"total":177,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":","+"]}},"paramCount":1,"sloc":{"logical":99,"physical":127}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":7,"path":"../../../../../../src/types","type":"esm"},{"line":8,"path":"../../../../../../src/state/axis","type":"esm"},{"line":9,"path":"../../../../../../src/state/get-center-from-impact/get-page-border-box-center","type":"esm"},{"line":10,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":11,"path":"../../../../../util/dimension","type":"esm"},{"line":12,"path":"../../../../../../src/state/get-center-from-impact/move-relative-to","type":"esm"},{"line":13,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":14,"path":"../../../../../../src/state/position","type":"esm"},{"line":15,"path":"../../../../../../src/state/no-impact","type":"esm"}],"errors":[],"lineEnd":127,"lineStart":1,"maintainability":102.409,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":110},"errors":[],"lineEnd":126,"lineStart":17,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.021,"difficulty":2.571,"effort":160.122,"length":18,"time":8.896,"vocabulary":11,"volume":62.27,"operands":{"distinct":7,"total":9,"identifiers":["preset","getPreset","axis","describe","\"last item is the dragging item\"","\"last item started displaced\"","\"last item did not start displaced\""]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":108},"errors":[],"lineEnd":125,"lineStart":18,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should return to the original center\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":19},"errors":[],"lineEnd":39,"lineStart":21,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.113,"difficulty":6.474,"effort":2194.589,"length":73,"time":121.922,"vocabulary":25,"volume":339.002,"operands":{"distinct":19,"total":41,"identifiers":["afterCritical","impact","homeImpact","getLiftEffect","draggable","preset","inHome4","home","draggables","viewport","result","Position","getPageBorderBoxCenter","droppable","expect","toEqual","page","borderBox","center"]},"operators":{"distinct":6,"total":32,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":17,"physical":17},"errors":[],"lineEnd":38,"lineStart":22,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should go after the item in its current non-displaced location\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":43},"errors":[],"lineEnd":83,"lineStart":41,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.03,"halstead":{"bugs":0.258,"difficulty":5.925,"effort":4581.795,"length":140,"time":254.544,"vocabulary":46,"volume":773.299,"operands":{"distinct":40,"total":79,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","impact","DragImpact","displaced","emptyGroups","at","type","\"REORDER\"","destination","index","inHome4","descriptor","droppableId","id","result","Position","getPageBorderBoxCenter","droppable","expected","goAfter","moveRelativeTo","offset","page","negate","point","isMoving","expect","toEqual"]},"operators":{"distinct":6,"total":61,"identifiers":["const","=","{}","()",":","."]}},"paramCount":0,"sloc":{"logical":33,"physical":41},"errors":[],"lineEnd":82,"lineStart":42,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should go after the item in its current non-displaced location\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":40},"errors":[],"lineEnd":124,"lineStart":85,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.249,"difficulty":6.821,"effort":5085.926,"length":135,"time":282.551,"vocabulary":46,"volume":745.681,"operands":{"distinct":39,"total":76,"identifiers":["afterCritical","getLiftEffect","draggable","preset","inHome1","home","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","impact","DragImpact","displaced","emptyGroups","at","type","\"REORDER\"","destination","index","inForeign4","descriptor","1","droppableId","id","result","Position","getPageBorderBoxCenter","droppable","foreign","expected","goAfter","moveRelativeTo","page","isMoving","expect","toEqual"]},"operators":{"distinct":7,"total":59,"identifiers":["const","=","{}","()",":",".","+"]}},"paramCount":0,"sloc":{"logical":31,"physical":38},"errors":[],"lineEnd":123,"lineStart":86,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.01,"halstead":{"bugs":0.091,"difficulty":2.444,"effort":5987.569,"length":44.111,"time":332.643,"vocabulary":8,"volume":272.162,"operands":{"distinct":6.667,"total":24.444},"operators":{"distinct":1.333,"total":19.667}},"paramCount":0.111,"sloc":{"logical":11,"physical":14.111}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":28.08,"halstead":{"bugs":0.082,"difficulty":3.411,"effort":1516.185,"length":48.5,"time":84.232,"vocabulary":18.75,"volume":247.184,"operands":{"distinct":14.5,"total":27},"operators":{"distinct":4.25,"total":21.5}},"paramCount":0.125,"sloc":{"logical":12.125,"physical":52}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-center-from-impact/get-page-border-box-center/reorder/in-empty-list.spec.js","testCases":1,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"   8 | import { goIntoStart } from '../../../../../../src/state/get-center-from-impact/move-relative-to';\n   9 |\n> 10 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  11 |   describe(`on ${axis.direction} axis`, () => {\n  12 |     const preset = getPreset(axis);\n  13 |     const { afterCritical, impact: homeImpact } = getLiftEffect({","start":{"line":10,"column":23,"index":557}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":13.333,"halstead":{"bugs":0.213,"difficulty":10.667,"effort":6813.371,"length":117,"time":378.521,"vocabulary":44,"volume":638.753,"operands":{"distinct":33,"total":64,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","home","draggables","viewport","it","\"should move into the start of the list\"","result","Position","getPageBorderBoxCenter","droppable","emptyForeign","expected","goIntoStart","moveInto","page","isMoving","expect","toEqual"]},"operators":{"distinct":11,"total":53,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}",":"]}},"paramCount":1,"sloc":{"logical":30,"physical":38}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../../../src/types","type":"esm"},{"line":4,"path":"../../../../../../src/state/axis","type":"esm"},{"line":5,"path":"../../../../../../src/state/get-center-from-impact/get-page-border-box-center","type":"esm"},{"line":6,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":7,"path":"../../../../../util/dimension","type":"esm"},{"line":8,"path":"../../../../../../src/state/get-center-from-impact/move-relative-to","type":"esm"}],"errors":[],"lineEnd":38,"lineStart":1,"maintainability":112.913,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":28},"errors":[],"lineEnd":37,"lineStart":10,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.06,"difficulty":5.5,"effort":990.468,"length":41,"time":55.026,"vocabulary":21,"volume":180.085,"operands":{"distinct":14,"total":22,"identifiers":["preset","getPreset","axis","afterCritical","impact","homeImpact","getLiftEffect","draggable","inHome1","home","draggables","viewport","it","\"should move into the start of the list\""]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":26},"errors":[],"lineEnd":36,"lineStart":11,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.089,"difficulty":4.95,"effort":1326.229,"length":57,"time":73.679,"vocabulary":26,"volume":267.925,"operands":{"distinct":20,"total":33,"identifiers":["result","Position","getPageBorderBoxCenter","impact","homeImpact","afterCritical","draggable","preset","inHome1","draggables","droppable","emptyForeign","expected","goIntoStart","axis","moveInto","page","isMoving","expect","toEqual"]},"operators":{"distinct":6,"total":24,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":14,"physical":16},"errors":[],"lineEnd":35,"lineStart":20,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.053,"difficulty":2.667,"effort":1703.343,"length":29.25,"time":94.63,"vocabulary":11,"volume":159.688,"operands":{"distinct":8.25,"total":16},"operators":{"distinct":2.75,"total":13.25}},"paramCount":0.25,"sloc":{"logical":7.5,"physical":9.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":21.825,"halstead":{"bugs":0.053,"difficulty":4.317,"effort":799.915,"length":36,"time":44.44,"vocabulary":19,"volume":160.41,"operands":{"distinct":13,"total":20},"operators":{"distinct":6,"total":16}},"paramCount":0.333,"sloc":{"logical":9.333,"physical":23.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-center-from-impact/get-page-border-box-center/combine/with-droppable-scroll.spec.js","testCases":1,"smells":3,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  16 | import { getForcedDisplacement } from '../../../../../util/impact';\n  17 |\n> 18 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  19 |   describe(`on ${axis.direction} axis`, () => {\n  20 |     const preset = getPreset(axis);\n  21 |     const withCombineEnabled: DroppableDimension = {","start":{"line":18,"column":23,"index":825}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  75 |         });\n  76 |\n> 77 |         expect(result).toEqual(inHome2Center);\n     |        ^ Duplicate Assert\n  78 |       }\n  79 |       // into start of empty foreign list (with scroll)\n  80 |       {","start":{"line":77,"column":8,"index":2545}},{"frame":"   97 |         });\n   98 |\n>  99 |         expect(result).toEqual(add(inHome2Center, displacement));\n      |        ^ Duplicate Assert\n  100 |       }\n  101 |     });\n  102 |   });","start":{"line":99,"column":8,"index":3222}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":6.25,"halstead":{"bugs":0.556,"difficulty":12.522,"effort":20878.504,"length":263,"time":1159.917,"vocabulary":81,"volume":1667.381,"operands":{"distinct":69,"total":144,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","withCombineEnabled","DroppableDimension","home","isCombineEnabled","true","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","afterCritical","getLiftEffect","draggable","draggables","viewport","it","\"should account for any scroll in the droppable being dropped into (into foreign list)\"","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome2","shouldAnimate","false","inHome3","inHome4","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","inHome2Center","Position","page","borderBox","center","result","getPageBorderBoxCenter","droppable","expect","toEqual","scroll","x","10","y","20","displacement","negate","scrollable","makeScrollable","scrolled","scrollDroppable","dimensions","add"]},"operators":{"distinct":12,"total":119,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}","... (spread)",":"]}},"paramCount":1,"sloc":{"logical":64,"physical":104}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../../src/state/axis","type":"esm"},{"line":10,"path":"../../../../../../src/state/get-center-from-impact/get-page-border-box-center","type":"esm"},{"line":11,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":12,"path":"../../../../../util/dimension","type":"esm"},{"line":13,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":14,"path":"../../../../../../src/state/position","type":"esm"},{"line":15,"path":"../../../../../../src/state/droppable/scroll-droppable","type":"esm"},{"line":16,"path":"../../../../../util/impact","type":"esm"}],"errors":[],"lineEnd":104,"lineStart":1,"maintainability":96.808,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":86},"errors":[],"lineEnd":103,"lineStart":18,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.096,"difficulty":6.4,"effort":1846.024,"length":60,"time":102.557,"vocabulary":28,"volume":288.441,"operands":{"distinct":20,"total":32,"identifiers":["preset","getPreset","axis","withCombineEnabled","DroppableDimension","home","isCombineEnabled","true","displacedBy","DisplacedBy","getDisplacedBy","inHome1","displaceBy","afterCritical","getLiftEffect","draggable","draggables","viewport","it","\"should account for any scroll in the droppable being dropped into (into foreign list)\""]},"operators":{"distinct":8,"total":28,"identifiers":["const","=","()","{}","... (spread)",".",":","function=>"]}},"paramCount":0,"sloc":{"logical":15,"physical":84},"errors":[],"lineEnd":102,"lineStart":19,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.222,"halstead":{"bugs":0.359,"difficulty":8.24,"effort":8881.636,"length":184,"time":493.424,"vocabulary":58,"volume":1077.869,"operands":{"distinct":50,"total":103,"identifiers":["impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome2","shouldAnimate","false","inHome3","inHome4","displacedBy","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","inHome2Center","Position","page","borderBox","center","result","getPageBorderBoxCenter","afterCritical","draggable","inHome1","draggables","droppable","withCombineEnabled","expect","toEqual","scroll","x","10","y","20","displacement","negate","scrollable","DroppableDimension","makeScrollable","scrolled","scrollDroppable","dimensions","add"]},"operators":{"distinct":8,"total":81,"identifiers":["const","=","{}",":","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":45,"physical":66},"errors":[],"lineEnd":101,"lineStart":36,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.563,"halstead":{"bugs":0.139,"difficulty":3.13,"effort":5219.626,"length":65.75,"time":289.979,"vocabulary":20.25,"volume":416.845,"operands":{"distinct":17.25,"total":36},"operators":{"distinct":3,"total":29.75}},"paramCount":0.25,"sloc":{"logical":16,"physical":26}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":19.63,"halstead":{"bugs":0.156,"difficulty":5.713,"effort":3603.57,"length":84.667,"time":200.198,"vocabulary":32,"volume":466.51,"operands":{"distinct":25,"total":46.667},"operators":{"distinct":7,"total":38}},"paramCount":0.333,"sloc":{"logical":20.667,"physical":78.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/get-center-from-impact/get-page-border-box-center/combine/when-combining.spec.js","testCases":4,"smells":5,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  15 | import { getForcedDisplacement } from '../../../../../util/impact';\n  16 |\n> 17 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  18 |   describe(`on ${axis.direction} axis`, () => {\n  19 |     const preset = getPreset(axis);\n  20 |     const withCombineEnabled: DroppableDimension = {","start":{"line":17,"column":23,"index":725}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  36 |       it('should move onto a displaced center - the initial visible center', () => {\n  37 |         const impact: DragImpact = {\n> 38 |           displaced: getForcedDisplacement({\n     |                     ^ Lazy Test\n  39 |             visible: [\n  40 |               {\n  41 |                 dimension: preset.inHome3,","start":{"line":38,"column":21,"index":1432}},{"frame":"  74 |         // inHome2 would have moved forward and is now moving backwards\n  75 |         const impact: DragImpact = {\n> 76 |           displaced: getForcedDisplacement({\n     |                     ^ Lazy Test\n  77 |             visible: [{ dimension: preset.inHome4, shouldAnimate: false }],\n  78 |           }),\n  79 |           displacedBy,","start":{"line":76,"column":21,"index":2595}},{"frame":"  109 |         // and then moving onto inHome1\n  110 |         const impact: DragImpact = {\n> 111 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  112 |             // inHome2 not displaced as it is the dragging item\n  113 |             visible: [\n  114 |               {","start":{"line":111,"column":21,"index":3719}},{"frame":"  155 |         // moving inHome2 backwards onto inHome1\n  156 |         const impact: DragImpact = {\n> 157 |           displaced: getForcedDisplacement({\n      |                     ^ Lazy Test\n  158 |             // inHome2 not displaced as it is the dragging item\n  159 |             visible: [\n  160 |               {","start":{"line":157,"column":21,"index":5087}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":7.2,"halstead":{"bugs":1.078,"difficulty":26.571,"effort":85898.969,"length":519,"time":4772.165,"vocabulary":75,"volume":3232.757,"operands":{"distinct":63,"total":279,"identifiers":["vertical","horizontal","forEach","axis","describe","direction","on "," axis","preset","getPreset","withCombineEnabled","DroppableDimension","home","isCombineEnabled","true","afterCritical","getLiftEffect","draggable","inHome2","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","\"item started displaced\"","it","\"should move onto a displaced center - the initial visible center\"","impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","inHome3","shouldAnimate","false","inHome4","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","result","Position","getPageBorderBoxCenter","droppable","expect","toEqual","page","borderBox","center","\"should move onto a non-displaced center\"","expected","subtract","point","\"item did not start displaced\"","\"should move onto a displaced center\"","inHome1","add"]},"operators":{"distinct":12,"total":240,"identifiers":["()",".","[]",",","function=>","``","${}","const","=","{}","... (spread)",":"]}},"paramCount":1,"sloc":{"logical":125,"physical":194}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../../../src/types","type":"esm"},{"line":9,"path":"../../../../../../src/state/axis","type":"esm"},{"line":10,"path":"../../../../../../src/state/get-center-from-impact/get-page-border-box-center","type":"esm"},{"line":11,"path":"../../../../../../src/state/get-lift-effect","type":"esm"},{"line":12,"path":"../../../../../util/dimension","type":"esm"},{"line":13,"path":"../../../../../../src/state/get-displaced-by","type":"esm"},{"line":14,"path":"../../../../../../src/state/position","type":"esm"},{"line":15,"path":"../../../../../util/impact","type":"esm"}],"errors":[],"lineEnd":194,"lineStart":1,"maintainability":97.036,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":177},"errors":[],"lineEnd":193,"lineStart":17,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.104,"difficulty":6.476,"effort":2013.517,"length":64,"time":111.862,"vocabulary":29,"volume":310.911,"operands":{"distinct":21,"total":34,"identifiers":["preset","getPreset","axis","withCombineEnabled","DroppableDimension","home","isCombineEnabled","true","afterCritical","getLiftEffect","draggable","inHome2","draggables","viewport","displacedBy","DisplacedBy","getDisplacedBy","displaceBy","describe","\"item started displaced\"","\"item did not start displaced\""]},"operators":{"distinct":8,"total":30,"identifiers":["const","=","()","{}","... (spread)",".",":","function=>"]}},"paramCount":0,"sloc":{"logical":17,"physical":175},"errors":[],"lineEnd":192,"lineStart":18,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should move onto a displaced center - the initial visible center\"","\"should move onto a non-displaced center\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":70},"errors":[],"lineEnd":104,"lineStart":35,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.18,"difficulty":6.353,"effort":3425.708,"length":100,"time":190.317,"vocabulary":42,"volume":539.232,"operands":{"distinct":34,"total":54,"identifiers":["impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome3","shouldAnimate","false","inHome4","displacedBy","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","result","Position","getPageBorderBoxCenter","afterCritical","draggable","inHome2","draggables","droppable","withCombineEnabled","expect","toEqual","page","borderBox","center"]},"operators":{"distinct":8,"total":46,"identifiers":["const","=","{}",":","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":23,"physical":35},"errors":[],"lineEnd":70,"lineStart":36,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.182,"difficulty":5.203,"effort":2840.38,"length":100,"time":157.799,"vocabulary":44,"volume":545.943,"operands":{"distinct":37,"total":55,"identifiers":["impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome4","shouldAnimate","false","displacedBy","at","type","\"COMBINE\"","combine","draggableId","inHome3","descriptor","id","droppableId","result","Position","getPageBorderBoxCenter","afterCritical","draggable","inHome2","draggables","droppable","withCombineEnabled","expected","subtract","page","borderBox","center","point","expect","toEqual"]},"operators":{"distinct":7,"total":45,"identifiers":["const","=","{}",":","()","[]","."]}},"paramCount":0,"sloc":{"logical":23,"physical":32},"errors":[],"lineEnd":103,"lineStart":72,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should move onto a displaced center\"","\"should move onto a non-displaced center\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":86},"errors":[],"lineEnd":191,"lineStart":106,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.222,"difficulty":6.667,"effort":4443.671,"length":120,"time":246.871,"vocabulary":47,"volume":666.551,"operands":{"distinct":39,"total":65,"identifiers":["impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome1","shouldAnimate","true","inHome3","false","inHome4","displacedBy","at","type","\"COMBINE\"","combine","draggableId","descriptor","id","droppableId","result","Position","getPageBorderBoxCenter","afterCritical","draggable","inHome2","draggables","droppable","withCombineEnabled","expected","add","page","borderBox","center","point","expect","toEqual"]},"operators":{"distinct":8,"total":55,"identifiers":["const","=","{}",":","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":27,"physical":46},"errors":[],"lineEnd":152,"lineStart":107,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.181,"difficulty":6.171,"effort":3348.781,"length":100,"time":186.043,"vocabulary":43,"volume":542.626,"operands":{"distinct":35,"total":54,"identifiers":["impact","DragImpact","displaced","getForcedDisplacement","visible","dimension","preset","inHome3","shouldAnimate","false","inHome4","displacedBy","at","type","\"COMBINE\"","combine","draggableId","inHome1","descriptor","id","droppableId","result","Position","getPageBorderBoxCenter","afterCritical","draggable","inHome2","draggables","droppable","withCombineEnabled","expect","toEqual","page","borderBox","center"]},"operators":{"distinct":8,"total":46,"identifiers":["const","=","{}",":","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":23,"physical":37},"errors":[],"lineEnd":190,"lineStart":154,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.8,"halstead":{"bugs":0.12,"difficulty":2.952,"effort":9544.33,"length":57.667,"time":530.241,"vocabulary":8.333,"volume":359.195,"operands":{"distinct":7,"total":31},"operators":{"distinct":1.333,"total":26.667}},"paramCount":0.111,"sloc":{"logical":13.889,"physical":21.556}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":15.329,"halstead":{"bugs":0.111,"difficulty":4.505,"effort":2025.58,"length":63.75,"time":112.532,"vocabulary":28.125,"volume":334.454,"operands":{"distinct":22.125,"total":34.375},"operators":{"distinct":6,"total":29.375}},"paramCount":0.125,"sloc":{"logical":15.375,"physical":82.25}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/droppable/with-placeholder.spec.js","testCases":9,"smells":9,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  31 | const gap: number = 10;\n  32 |\n> 33 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  34 |   describe(`on ${axis.direction} axis`, () => {\n  35 |     const descriptor: DroppableDescriptor = {\n  36 |       id: 'foo',","start":{"line":33,"column":23,"index":1030}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  246 |         const increasedBy: Position = patch(axis.line, excess);\n  247 |         const active: ?Rect = withFrame.subject.active;\n> 248 |         invariant(active);\n      |        ^ Eager Test\n  249 |         const expected: DroppableSubject = {\n  250 |           // unchanged\n  251 |           page: withFrame.subject.page,","start":{"line":248,"column":8,"index":7976}},{"frame":"  265 |         // max scroll change\n  266 |         const newFrame: ?Scrollable = result.frame;\n> 267 |         invariant(newFrame);\n      |        ^ Eager Test\n  268 |         expect(originalFrame.scroll.max).not.toEqual(newFrame.scroll.max);\n  269 |         expect(newFrame.scroll.max).toEqual(\n  270 |           add(originalFrame.scroll.max, increasedBy),","start":{"line":267,"column":8,"index":8592}},{"frame":"  331 |\n  332 |         const active: ?Rect = virtual.subject.active;\n> 333 |         invariant(active);\n      |        ^ Eager Test\n  334 |         const expected: DroppableSubject = {\n  335 |           // unchanged\n  336 |           page: virtual.subject.page,","start":{"line":333,"column":8,"index":10889}},{"frame":"  350 |         // max scroll change\n  351 |         const newFrame: ?Scrollable = result.frame;\n> 352 |         invariant(newFrame);\n      |        ^ Eager Test\n  353 |         expect(originalFrame.scroll.max).not.toEqual(newFrame.scroll.max);\n  354 |         expect(newFrame.scroll.max).toEqual(\n  355 |           add(originalFrame.scroll.max, increasedBy),","start":{"line":352,"column":8,"index":11514}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  149 |\n  150 |           const active: ?Rect = withoutFrame.subject.active;\n> 151 |           invariant(active);\n      |          ^ Lazy Test\n  152 |           const expected: DroppableSubject = {\n  153 |             // unchanged\n  154 |             page: withoutFrame.subject.page,","start":{"line":151,"column":10,"index":4702}},{"frame":"  229 |         // no change in frame or scroll\n  230 |         const newFrame: ?Scrollable = result.frame;\n> 231 |         invariant(newFrame);\n      |        ^ Lazy Test\n  232 |         expect(originalFrame.scroll.max).toEqual(newFrame.scroll.max);\n  233 |         expect(originalFrame).toEqual(newFrame);\n  234 |       });","start":{"line":231,"column":8,"index":7382}},{"frame":"  246 |         const increasedBy: Position = patch(axis.line, excess);\n  247 |         const active: ?Rect = withFrame.subject.active;\n> 248 |         invariant(active);\n      |        ^ Lazy Test\n  249 |         const expected: DroppableSubject = {\n  250 |           // unchanged\n  251 |           page: withFrame.subject.page,","start":{"line":248,"column":8,"index":7976}},{"frame":"  331 |\n  332 |         const active: ?Rect = virtual.subject.active;\n> 333 |         invariant(active);\n      |        ^ Lazy Test\n  334 |         const expected: DroppableSubject = {\n  335 |           // unchanged\n  336 |           page: virtual.subject.page,","start":{"line":333,"column":8,"index":10889}}]}],"metrics":{"aggregate":{"cyclomatic":26,"cyclomaticDensity":9.253,"halstead":{"bugs":2.866,"difficulty":51.769,"effort":445128.979,"length":1215,"time":24729.388,"vocabulary":135,"volume":8598.331,"operands":{"distinct":117,"total":673,"identifiers":["crossAxisStart","0","crossAxisEnd","100","crossAxisSize","droppableSize","200","gap","10","vertical","horizontal","forEach","axis","describe","direction","on "," axis","descriptor","DroppableDescriptor","id","\"foo\"","type","\"TYPE\"","mode","\"standard\"","withoutFrame","DroppableDimension","getDroppableDimension","borderBox","start","end","inForeign1","DraggableDimension","getDraggableDimension","\"in-foreign-1\"","index","droppableId","2","inForeign2","\"in-foreign-2\"","1","getHomeDraggable","borderBoxSize","\"in-foreign-3\"","\"home\"","client","withHomeDraggable","inHome1","DraggableDimensionMap","toDraggableMap","getPlaceholderSize","draggable","Position","patch","line","displaceBy","it","\"should throw an error if trying to add a placeholder to a home list\"","expect","addPlaceholder","toThrow","\"without frame\"","\"adding placeholder\"","\"should not grow the subject if not required\"","inHome","5","result","expected","DroppableSubject","page","subject","active","withPlaceholder","increasedBy","null","oldFrameMaxScroll","placeholderSize","toEqual","\"should grow the subject if required\"","excess","20","Rect","invariant","getRect","\"should restore the subject to its original size when placeholder is no longer needed\"","added","removed","removePlaceholder","\"with frame\"","withFrame","closest","scrollSize","scrollWidth","scrollHeight","scroll","origin","shouldClipSubject","false","originalFrame","Scrollable","frame","isEqual","max","\"expecting no max scroll\"","newFrame","not","add","frameClient","\"should restore the original frame when placeholder is no longer needed\"","\"virtual list\"","virtual","\"virtual\"","\"should always grow the subject required\"","displacedBy","DisplacedBy","getDisplacedBy","value"]},"operators":{"distinct":18,"total":542,"identifiers":["const","=","-","()",".","[]",",","function=>","``","${}","{}",":","/","+","... (spread)",":?","===","&&"]}},"paramCount":4,"sloc":{"logical":281,"physical":377}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"../../../../src/invariant","type":"esm"},{"line":13,"path":"../../../../src/types","type":"esm"},{"line":17,"path":"../../../util/dimension","type":"esm"},{"line":21,"path":"../../../../src/state/droppable/with-placeholder","type":"esm"},{"line":22,"path":"../../../../src/state/dimension-structures","type":"esm"},{"line":23,"path":"../../../../src/state/axis","type":"esm"},{"line":24,"path":"../../../../src/state/position","type":"esm"},{"line":25,"path":"../../../../src/state/get-displaced-by","type":"esm"}],"errors":[],"lineEnd":377,"lineStart":1,"maintainability":93.692,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":344},"errors":[],"lineEnd":376,"lineStart":33,"name":"<anon method-1>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.961,"halstead":{"bugs":0.353,"difficulty":10.465,"effort":11095.972,"length":186,"time":616.443,"vocabulary":52,"volume":1060.282,"operands":{"distinct":43,"total":100,"identifiers":["descriptor","DroppableDescriptor","id","\"foo\"","type","\"TYPE\"","mode","\"standard\"","withoutFrame","DroppableDimension","getDroppableDimension","direction","axis","borderBox","crossAxisStart","crossAxisEnd","start","0","end","droppableSize","inForeign1","DraggableDimension","getDraggableDimension","\"in-foreign-1\"","index","droppableId","2","inForeign2","\"in-foreign-2\"","1","gap","getHomeDraggable","borderBoxSize","withHomeDraggable","inHome1","getPlaceholderSize","draggable","it","\"should throw an error if trying to add a placeholder to a home list\"","describe","\"without frame\"","\"with frame\"","\"virtual list\""]},"operators":{"distinct":9,"total":86,"identifiers":["const","=","{}",":","()",".","/","-","function=>"]}},"paramCount":0,"sloc":{"logical":51,"physical":342},"errors":[],"lineEnd":375,"lineStart":34,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.096,"difficulty":5.368,"effort":1545.671,"length":62,"time":85.871,"vocabulary":25,"volume":287.919,"operands":{"distinct":19,"total":34,"identifiers":["DraggableDimension","getDraggableDimension","descriptor","id","\"in-foreign-3\"","index","2","droppableId","\"home\"","type","borderBox","axis","crossAxisStart","crossAxisEnd","start","inForeign2","client","end","borderBoxSize"]},"operators":{"distinct":6,"total":28,"identifiers":["()","{}",":",".","[]","+"]}},"paramCount":1,"sloc":{"logical":12,"physical":15},"errors":[],"lineEnd":95,"lineStart":81,"name":"<anon method-3>","paramNames":["borderBoxSize"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["DraggableDimensionMap","toDraggableMap","inHome1","inForeign1","inForeign2"]},"operators":{"distinct":3,"total":4,"identifiers":["()","[]",","]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":100,"lineStart":97,"name":"<anon method-4>","paramNames":["inHome1"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.014,"difficulty":2,"effort":82.418,"length":13,"time":4.579,"vocabulary":9,"volume":41.209,"operands":{"distinct":6,"total":8,"identifiers":["Position","patch","axis","line","draggable","displaceBy"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","[]"]}},"paramCount":1,"sloc":{"logical":2,"physical":2},"errors":[],"lineEnd":103,"lineStart":102,"name":"<anon method-5>","paramNames":["draggable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":20.897,"length":6,"time":1.161,"vocabulary":5,"volume":13.932,"operands":{"distinct":2,"total":2,"identifiers":["expect","toThrow"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":9},"errors":[],"lineEnd":113,"lineStart":105,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1.8,"effort":54,"length":10,"time":3,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":6,"identifiers":["addPlaceholder","withoutFrame","inForeign1","toDraggableMap","inForeign2"]},"operators":{"distinct":3,"total":4,"identifiers":["()","[]",","]}},"paramCount":0,"sloc":{"logical":3,"physical":6},"errors":[],"lineEnd":111,"lineStart":106,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.007,"difficulty":1,"effort":20.68,"length":8,"time":1.149,"vocabulary":6,"volume":20.68,"operands":{"distinct":4,"total":4,"identifiers":["describe","\"adding placeholder\"","it","\"should restore the subject to its original size when placeholder is no longer needed\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":70},"errors":[],"lineEnd":184,"lineStart":115,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should not grow the subject if not required\"","\"should grow the subject if required\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":54},"errors":[],"lineEnd":169,"lineStart":116,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.101,"difficulty":5.326,"effort":1620.341,"length":62,"time":90.019,"vocabulary":30,"volume":304.227,"operands":{"distinct":23,"total":35,"identifiers":["inHome","DraggableDimension","getHomeDraggable","gap","5","result","DroppableDimension","addPlaceholder","withoutFrame","withHomeDraggable","expected","DroppableSubject","page","subject","active","withPlaceholder","increasedBy","null","oldFrameMaxScroll","placeholderSize","getPlaceholderSize","expect","toEqual"]},"operators":{"distinct":7,"total":27,"identifiers":["const","=","()","-","{}",":","."]}},"paramCount":0,"sloc":{"logical":15,"physical":22},"errors":[],"lineEnd":138,"lineStart":117,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.167,"difficulty":7.548,"effort":3776.165,"length":94,"time":209.787,"vocabulary":40,"volume":500.261,"operands":{"distinct":31,"total":52,"identifiers":["excess","20","inHome","DraggableDimension","getHomeDraggable","gap","result","DroppableDimension","addPlaceholder","withoutFrame","withHomeDraggable","active","Rect","subject","invariant","expected","DroppableSubject","page","getRect","axis","end","withPlaceholder","increasedBy","patch","line","oldFrameMaxScroll","null","placeholderSize","getPlaceholderSize","expect","toEqual"]},"operators":{"distinct":9,"total":42,"identifiers":["const","=","()","+",".","{}",":","... (spread)","[]"]}},"paramCount":0,"sloc":{"logical":21,"physical":29},"errors":[],"lineEnd":168,"lineStart":140,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.055,"difficulty":3.667,"effort":602.189,"length":38,"time":33.455,"vocabulary":20,"volume":164.233,"operands":{"distinct":15,"total":22,"identifiers":["excess","20","inHome","DraggableDimension","getHomeDraggable","gap","added","DroppableDimension","addPlaceholder","withoutFrame","withHomeDraggable","removed","removePlaceholder","expect","toEqual"]},"operators":{"distinct":5,"total":16,"identifiers":["const","=","()","+","."]}},"paramCount":0,"sloc":{"logical":10,"physical":13},"errors":[],"lineEnd":183,"lineStart":171,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":4,"cyclomaticDensity":19.048,"halstead":{"bugs":0.157,"difficulty":8.065,"effort":3802.134,"length":88,"time":211.23,"vocabulary":41,"volume":471.465,"operands":{"distinct":31,"total":50,"identifiers":["withFrame","DroppableDimension","getDroppableDimension","descriptor","direction","axis","borderBox","withoutFrame","client","closest","scrollSize","scrollWidth","vertical","crossAxisSize","droppableSize","scrollHeight","scroll","origin","shouldClipSubject","false","originalFrame","Scrollable","frame","invariant","isEqual","max","\"expecting no max scroll\"","it","\"should not grow the subject if not required\"","\"should grow the subject if required\"","\"should restore the original frame when placeholder is no longer needed\""]},"operators":{"distinct":10,"total":38,"identifiers":["const","=","()","{}",":",".",":?","===","&&","function=>"]}},"paramCount":0,"sloc":{"logical":21,"physical":104},"errors":[],"lineEnd":289,"lineStart":186,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.17,"difficulty":6.417,"effort":3275.878,"length":98,"time":181.993,"vocabulary":37,"volume":510.526,"operands":{"distinct":30,"total":55,"identifiers":["inHome","DraggableDimension","getHomeDraggable","gap","5","result","DroppableDimension","addPlaceholder","withFrame","withHomeDraggable","expected","DroppableSubject","page","subject","active","withPlaceholder","increasedBy","null","oldFrameMaxScroll","originalFrame","scroll","max","placeholderSize","getPlaceholderSize","expect","toEqual","newFrame","Scrollable","frame","invariant"]},"operators":{"distinct":7,"total":43,"identifiers":["const","=","()","-","{}",":","."]}},"paramCount":0,"sloc":{"logical":21,"physical":28},"errors":[],"lineEnd":234,"lineStart":207,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.296,"difficulty":9.9,"effort":8782.529,"length":158,"time":487.918,"vocabulary":49,"volume":887.124,"operands":{"distinct":40,"total":88,"identifiers":["excess","20","inHome","DraggableDimension","getHomeDraggable","gap","result","DroppableDimension","addPlaceholder","withFrame","withHomeDraggable","increasedBy","Position","patch","axis","line","active","Rect","subject","invariant","expected","DroppableSubject","page","getRect","end","withPlaceholder","oldFrameMaxScroll","originalFrame","scroll","max","placeholderSize","getPlaceholderSize","expect","toEqual","newFrame","Scrollable","frame","not","add","frameClient"]},"operators":{"distinct":9,"total":70,"identifiers":["const","=","()","+",".","{}",":","... (spread)","[]"]}},"paramCount":0,"sloc":{"logical":31,"physical":39},"errors":[],"lineEnd":274,"lineStart":236,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.055,"difficulty":3.667,"effort":602.189,"length":38,"time":33.455,"vocabulary":20,"volume":164.233,"operands":{"distinct":15,"total":22,"identifiers":["excess","20","inHome","DraggableDimension","getHomeDraggable","gap","added","DroppableDimension","addPlaceholder","withFrame","withHomeDraggable","removed","removePlaceholder","expect","toEqual"]},"operators":{"distinct":5,"total":16,"identifiers":["const","=","()","+","."]}},"paramCount":0,"sloc":{"logical":10,"physical":13},"errors":[],"lineEnd":288,"lineStart":276,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":4,"cyclomaticDensity":20,"halstead":{"bugs":0.163,"difficulty":8.594,"effort":4196.877,"length":90,"time":233.16,"vocabulary":43,"volume":488.364,"operands":{"distinct":32,"total":50,"identifiers":["virtual","DroppableDimension","getDroppableDimension","descriptor","mode","\"virtual\"","direction","axis","borderBox","withoutFrame","client","closest","scrollSize","scrollWidth","vertical","crossAxisSize","droppableSize","scrollHeight","scroll","origin","shouldClipSubject","false","originalFrame","Scrollable","frame","invariant","isEqual","max","\"expecting no max scroll\"","it","\"should always grow the subject required\"","\"should restore the original frame when placeholder is no longer needed\""]},"operators":{"distinct":11,"total":40,"identifiers":["const","=","()","{}",":","... (spread)",".",":?","===","&&","function=>"]}},"paramCount":0,"sloc":{"logical":20,"physical":84},"errors":[],"lineEnd":374,"lineStart":291,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.322,"difficulty":10.682,"effort":10327.407,"length":168,"time":573.745,"vocabulary":54,"volume":966.821,"operands":{"distinct":44,"total":94,"identifiers":["inHome","DraggableDimension","getHomeDraggable","gap","5","displacedBy","DisplacedBy","getDisplacedBy","axis","displaceBy","increasedBy","Position","patch","line","value","result","DroppableDimension","addPlaceholder","virtual","withHomeDraggable","active","Rect","subject","invariant","expected","DroppableSubject","page","getRect","end","withPlaceholder","oldFrameMaxScroll","originalFrame","scroll","max","placeholderSize","getPlaceholderSize","expect","toEqual","newFrame","Scrollable","frame","not","add","frameClient"]},"operators":{"distinct":10,"total":74,"identifiers":["const","=","()","-",".","{}",":","... (spread)","+","[]"]}},"paramCount":0,"sloc":{"logical":32,"physical":45},"errors":[],"lineEnd":359,"lineStart":315,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.055,"difficulty":3.667,"effort":602.189,"length":38,"time":33.455,"vocabulary":20,"volume":164.233,"operands":{"distinct":15,"total":22,"identifiers":["excess","20","inHome","DraggableDimension","getHomeDraggable","gap","added","DroppableDimension","addPlaceholder","virtual","withHomeDraggable","removed","removePlaceholder","expect","toEqual"]},"operators":{"distinct":5,"total":16,"identifiers":["const","=","()","+","."]}},"paramCount":0,"sloc":{"logical":10,"physical":13},"errors":[],"lineEnd":373,"lineStart":361,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.3,"cyclomaticDensity":0.463,"halstead":{"bugs":0.143,"difficulty":2.588,"effort":22256.449,"length":60.75,"time":1236.469,"vocabulary":6.75,"volume":429.917,"operands":{"distinct":5.85,"total":33.65},"operators":{"distinct":0.9,"total":27.1}},"paramCount":0.2,"sloc":{"logical":14.05,"physical":18.85}},"methodAverage":{"cyclomatic":1.316,"cyclomaticDensity":19.397,"halstead":{"bugs":0.108,"difficulty":5,"effort":2660.834,"length":62.316,"time":147.824,"vocabulary":25.368,"volume":323.911,"operands":{"distinct":19.368,"total":34.632},"operators":{"distinct":6,"total":27.684}},"paramCount":0.211,"sloc":{"logical":14.421,"physical":65.053}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/droppable/scroll-droppable.spec.js","testCases":2,"smells":6,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  70 |\n  71 |   const originalFrame: ?Scrollable = droppable.frame;\n> 72 |   invariant(originalFrame);\n     |  ^ Eager Test\n  73 |   // original frame\n  74 |   expect(originalFrame.pageMarginBox).toEqual(framePage.marginBox);\n  75 |   // subject is currently clipped by the frame","start":{"line":72,"column":2,"index":1808}},{"frame":"  80 |   const updated: DroppableDimension = scrollDroppable(droppable, newScroll);\n  81 |   const updatedFrame: ?Scrollable = updated.frame;\n> 82 |   invariant(updatedFrame);\n     |  ^ Eager Test\n  83 |\n  84 |   // unchanged frame client\n  85 |   expect(updatedFrame.frameClient).toEqual(originalFrame.frameClient);","start":{"line":82,"column":2,"index":2233}},{"frame":"  156 |   });\n  157 |   const originalFrame: ?Scrollable = scrollable.frame;\n> 158 |   invariant(originalFrame);\n      |  ^ Eager Test\n  159 |\n  160 |   const scrolled: DroppableDimension = scrollDroppable(scrollable, {\n  161 |     x: 300,","start":{"line":158,"column":2,"index":4066}},{"frame":"  165 |   // current is larger than max\n  166 |   const updatedFrame: ?Scrollable = scrolled.frame;\n> 167 |   invariant(updatedFrame);\n      |  ^ Eager Test\n  168 |   expect(updatedFrame.scroll.current).toEqual({\n  169 |     x: 300,\n  170 |     y: 300,","start":{"line":167,"column":2,"index":4279}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  70 |\n  71 |   const originalFrame: ?Scrollable = droppable.frame;\n> 72 |   invariant(originalFrame);\n     |  ^ Lazy Test\n  73 |   // original frame\n  74 |   expect(originalFrame.pageMarginBox).toEqual(framePage.marginBox);\n  75 |   // subject is currently clipped by the frame","start":{"line":72,"column":2,"index":1808}},{"frame":"  156 |   });\n  157 |   const originalFrame: ?Scrollable = scrollable.frame;\n> 158 |   invariant(originalFrame);\n      |  ^ Lazy Test\n  159 |\n  160 |   const scrolled: DroppableDimension = scrollDroppable(scrollable, {\n  161 |     x: 300,","start":{"line":158,"column":2,"index":4066}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":2.29,"halstead":{"bugs":1.042,"difficulty":12.031,"effort":37595.582,"length":485,"time":2088.643,"vocabulary":87,"volume":3124.828,"operands":{"distinct":80,"total":275,"identifiers":["descriptor","DroppableDescriptor","id","\"drop-1\"","type","\"TYPE\"","mode","\"standard\"","it","\"should update the frame scroll and the subject\"","scrollSize","ScrollSize","scrollHeight","500","scrollWidth","100","customClient","BoxModel","createBox","borderBox","top","0","left","bottom","right","customPage","frameClient","framePage","originalFrameScroll","Position","x","y","droppable","DroppableDimension","getDroppable","client","page","direction","\"vertical\"","isEnabled","true","isCombineEnabled","false","isFixedOnPage","closest","scroll","shouldClipSubject","originalFrame","Scrollable","frame","invariant","expect","pageMarginBox","toEqual","marginBox","subject","active","newScroll","updated","scrollDroppable","updatedFrame","expected","ScrollDetails","initial","current","diff","value","displacement","negate","max","getMaxScroll","width","paddingBox","height","getRect","\"should allow scrolling beyond the max position\"","200","scrollable","scrolled","300"]},"operators":{"distinct":7,"total":210,"identifiers":["const","=","{}",":","()","function=>","."]}},"paramCount":0,"sloc":{"logical":131,"physical":175}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":7,"path":"css-box-model","type":"esm"},{"line":8,"path":"../../../../src/invariant","type":"esm"},{"line":15,"path":"../../../../src/types","type":"esm"},{"line":16,"path":"../../../../src/state/droppable/get-droppable","type":"esm"},{"line":17,"path":"../../../../src/state/droppable/scroll-droppable","type":"esm"},{"line":18,"path":"../../../../src/state/position","type":"esm"},{"line":19,"path":"../../../../src/state/get-max-scroll","type":"esm"}],"errors":[],"lineEnd":175,"lineStart":1,"maintainability":77.548,"methods":[{"cyclomatic":1,"cyclomaticDensity":1.316,"halstead":{"bugs":0.609,"difficulty":7.636,"effort":13946.274,"length":296,"time":774.793,"vocabulary":72,"volume":1826.298,"operands":{"distinct":66,"total":168,"identifiers":["scrollSize","ScrollSize","scrollHeight","500","scrollWidth","100","customClient","BoxModel","createBox","borderBox","top","0","left","bottom","right","customPage","frameClient","framePage","originalFrameScroll","Position","x","y","droppable","DroppableDimension","getDroppable","descriptor","client","page","direction","\"vertical\"","isEnabled","true","isCombineEnabled","false","isFixedOnPage","closest","scroll","shouldClipSubject","originalFrame","Scrollable","frame","invariant","expect","pageMarginBox","toEqual","marginBox","subject","active","newScroll","updated","scrollDroppable","updatedFrame","expected","ScrollDetails","initial","current","diff","value","displacement","negate","max","getMaxScroll","width","paddingBox","height","getRect"]},"operators":{"distinct":6,"total":128,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":76,"physical":92},"errors":[],"lineEnd":118,"lineStart":27,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.128,"halstead":{"bugs":0.316,"difficulty":6.333,"effort":5999.535,"length":167,"time":333.308,"vocabulary":51,"volume":947.295,"operands":{"distinct":45,"total":95,"identifiers":["customClient","BoxModel","createBox","borderBox","top","0","left","right","200","bottom","frameClient","100","scrollable","DroppableDimension","getDroppable","descriptor","client","page","isEnabled","true","direction","\"vertical\"","isCombineEnabled","false","isFixedOnPage","closest","scrollSize","scrollWidth","scrollHeight","scroll","x","y","shouldClipSubject","originalFrame","Scrollable","frame","invariant","scrolled","scrollDroppable","300","updatedFrame","expect","current","toEqual","max"]},"operators":{"distinct":6,"total":72,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":47,"physical":55},"errors":[],"lineEnd":174,"lineStart":120,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.763,"halstead":{"bugs":0.347,"difficulty":4.01,"effort":12531.861,"length":161.667,"time":696.214,"vocabulary":29,"volume":1041.609,"operands":{"distinct":26.667,"total":91.667},"operators":{"distinct":2.333,"total":70}},"paramCount":0,"sloc":{"logical":43.667,"physical":58.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":1.722,"halstead":{"bugs":0.462,"difficulty":6.985,"effort":9972.905,"length":231.5,"time":554.05,"vocabulary":61.5,"volume":1386.796,"operands":{"distinct":55.5,"total":131.5},"operators":{"distinct":6,"total":100}},"paramCount":0,"sloc":{"logical":61.5,"physical":73.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/droppable/get-subject.spec.js","testCases":4,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  76 |\n  77 | it('should increase the subject by a placeholder', () => {\n> 78 |   [vertical, horizontal].forEach((axis: Axis) => {\n     |                         ^ Conditional Test Logic\n  79 |     const increasedBy: Position = patch(axis.line, 100);\n  80 |\n  81 |     const result: DroppableSubject = getSubject({","start":{"line":78,"column":25,"index":1933}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":5.042,"halstead":{"bugs":0.862,"difficulty":18.386,"effort":47557.57,"length":408,"time":2642.087,"vocabulary":81,"volume":2586.659,"operands":{"distinct":70,"total":234,"identifiers":["borderBox","Spacing","top","0","left","right","100","bottom","page","BoxModel","createBox","withAssortedSpacing","it","\"should displace by the droppable scroll\"","scroll","Position","x","10","y","20","displacement","negate","scrollSize","ScrollSize","scrollHeight","scrollWidth","max","getMaxScroll","height","marginBox","width","frame","Scrollable","pageMarginBox","frameClient","shouldClipSubject","false","initial","origin","current","diff","value","result","DroppableSubject","getSubject","withPlaceholder","null","axis","vertical","expected","active","getRect","offsetByPosition","expect","toEqual","\"should increase the subject by a placeholder\"","horizontal","forEach","increasedBy","patch","line","placeholderSize","oldFrameMaxScroll","Rect","end","\"should clip the subject by a frame\"","frameBorderBox","90","true","\"should do nothing if there is no scroll, placeholder or frame\""]},"operators":{"distinct":11,"total":174,"identifiers":["const","=","{}",":","()","... (spread)","function=>",".","[]",",","+"]}},"paramCount":1,"sloc":{"logical":119,"physical":160}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":9,"path":"css-box-model","type":"esm"},{"line":15,"path":"../../../../src/types","type":"esm"},{"line":16,"path":"../../../../src/state/droppable/util/get-subject","type":"esm"},{"line":17,"path":"../../../util/dimension","type":"esm"},{"line":18,"path":"../../../../src/state/axis","type":"esm"},{"line":19,"path":"../../../../src/state/position","type":"esm"},{"line":20,"path":"../../../../src/state/spacing","type":"esm"},{"line":21,"path":"../../../../src/state/get-max-scroll","type":"esm"}],"errors":[],"lineEnd":160,"lineStart":1,"maintainability":91.9,"methods":[{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.25,"difficulty":6.349,"effort":4765.646,"length":133,"time":264.758,"vocabulary":50,"volume":750.633,"operands":{"distinct":43,"total":78,"identifiers":["scroll","Position","x","10","y","20","displacement","negate","scrollSize","ScrollSize","scrollHeight","100","scrollWidth","max","getMaxScroll","height","page","marginBox","width","frame","Scrollable","pageMarginBox","frameClient","shouldClipSubject","false","initial","origin","current","diff","value","result","DroppableSubject","getSubject","withPlaceholder","null","axis","vertical","expected","active","getRect","offsetByPosition","expect","toEqual"]},"operators":{"distinct":7,"total":55,"identifiers":["const","=","{}",":","()","... (spread)","."]}},"paramCount":0,"sloc":{"logical":38,"physical":45},"errors":[],"lineEnd":75,"lineStart":31,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["vertical","horizontal","forEach","axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":22},"errors":[],"lineEnd":98,"lineStart":77,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.12,"difficulty":8.022,"effort":2887.826,"length":72,"time":160.435,"vocabulary":32,"volume":360,"operands":{"distinct":23,"total":41,"identifiers":["increasedBy","Position","patch","axis","line","100","result","DroppableSubject","getSubject","page","withPlaceholder","placeholderSize","oldFrameMaxScroll","null","frame","expected","Rect","getRect","marginBox","end","expect","active","toEqual"]},"operators":{"distinct":9,"total":31,"identifiers":["const","=","()",".","{}",":","... (spread)","+","[]"]}},"paramCount":1,"sloc":{"logical":16,"physical":20},"errors":[],"lineEnd":97,"lineStart":78,"name":"<anon method-3>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.203,"difficulty":4.5,"effort":2739.424,"length":109,"time":152.19,"vocabulary":48,"volume":608.761,"operands":{"distinct":42,"total":63,"identifiers":["frameBorderBox","Rect","getRect","top","10","left","right","90","bottom","frame","Scrollable","pageMarginBox","frameClient","createBox","borderBox","scrollSize","scrollHeight","height","scrollWidth","width","shouldClipSubject","true","scroll","initial","origin","current","max","diff","value","displacement","result","DroppableSubject","getSubject","page","withPlaceholder","null","axis","vertical","expected","active","expect","toEqual"]},"operators":{"distinct":6,"total":46,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":34,"physical":43},"errors":[],"lineEnd":143,"lineStart":101,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.058,"difficulty":5.143,"effort":889.082,"length":40,"time":49.393,"vocabulary":20,"volume":172.877,"operands":{"distinct":14,"total":24,"identifiers":["result","DroppableSubject","getSubject","page","axis","vertical","withPlaceholder","null","frame","expected","active","marginBox","expect","toEqual"]},"operators":{"distinct":6,"total":16,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":15},"errors":[],"lineEnd":159,"lineStart":145,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.84,"halstead":{"bugs":0.144,"difficulty":3.064,"effort":7926.262,"length":68,"time":440.348,"vocabulary":13.5,"volume":431.11,"operands":{"distinct":11.667,"total":39},"operators":{"distinct":1.833,"total":29}},"paramCount":0.167,"sloc":{"logical":19.833,"physical":26.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.031,"halstead":{"bugs":0.128,"difficulty":5.303,"effort":2270.66,"length":72.6,"time":126.148,"vocabulary":31.8,"volume":384.16,"operands":{"distinct":25.2,"total":42},"operators":{"distinct":6.6,"total":30.6}},"paramCount":0.2,"sloc":{"logical":20.4,"physical":29}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/droppable/get-droppable.spec.js","testCases":8,"smells":2,"smellInfo":[{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  108 |\n  109 |     it('should offset the frame client by the window scroll', () => {\n> 110 |       invariant(dimension.frame);\n      |      ^ Lazy Test\n  111 |       expect(dimension.frame.pageMarginBox).toEqual(page.marginBox);\n  112 |     });\n  113 |","start":{"line":110,"column":6,"index":2374}},{"frame":"  205 |       // Not clipped\n  206 |       expect(droppable.subject.active).toEqual(expandedPage.marginBox);\n> 207 |       invariant(droppable.frame);\n      |      ^ Lazy Test\n  208 |       expect(droppable.frame.shouldClipSubject).toBe(false);\n  209 |     });\n  210 |","start":{"line":207,"column":6,"index":5265}}]}],"metrics":{"aggregate":{"cyclomatic":19,"cyclomaticDensity":8.261,"halstead":{"bugs":1.876,"difficulty":21,"effort":118197.889,"length":799,"time":6566.549,"vocabulary":132,"volume":5628.471,"operands":{"distinct":121,"total":462,"identifiers":["descriptor","DroppableDescriptor","id","\"drop-1\"","type","\"TYPE\"","mode","\"standard\"","margin","Spacing","top","1","right","2","bottom","3","left","4","padding","5","6","7","8","border","9","10","11","12","windowScroll","Position","x","50","y","80","origin","0","client","BoxModel","createBox","borderBox","110","90","20","page","withScroll","ten","describe","\"closest scrollable\"","\"no closest scrollable\"","it","\"should not have a closest scrollable if there is no closest scrollable\"","dimension","DroppableDimension","getDroppableDimension","isEnabled","true","isCombineEnabled","false","isFixedOnPage","direction","\"vertical\"","closest","null","expect","frame","toBe","\"with a closest scrollable\"","scrollSize","scrollHeight","paddingBox","height","scrollWidth","width","scroll","shouldClipSubject","\"should offset the frame client by the window scroll\"","invariant","pageMarginBox","toEqual","marginBox","\"should capture the frame information\"","ScrollSize","maxScroll","getMaxScroll","expected","Scrollable","frameClient","initial","current","max","diff","value","displacement","\"frame clipping\"","expandBySpacing","framePage","Options","defaultOptions","getWithClient","customClient","options","\"should not clip the frame if requested not to\"","expandedClient","expandedPage","bigClient","droppable","subject","active","\"frame is the same size as the subject\"","\"should not clip the subject\"","\"frame is smaller than subject\"","\"should clip the subject to the size of the frame\"","\"frame is larger than subject\"","\"should return a clipped size that is equal to that of the subject\"","\"subject clipped on one side by frame\"","\"should clip on all sides\"","changes","noSpacing","forEach","expandBy","custom"]},"operators":{"distinct":11,"total":337,"identifiers":["const","=","{}",":","()","function=>",".","[]",",","- (prefix)","... (spread)"]}},"paramCount":3,"sloc":{"logical":230,"physical":270}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":8,"path":"css-box-model","type":"esm"},{"line":9,"path":"../../../../src/invariant","type":"esm"},{"line":10,"path":"../../../../src/state/droppable/get-droppable","type":"esm"},{"line":11,"path":"../../../../src/state/spacing","type":"esm"},{"line":12,"path":"../../../../src/state/get-max-scroll","type":"esm"},{"line":13,"path":"../../../util/spacing","type":"esm"},{"line":19,"path":"../../../../src/types","type":"esm"}],"errors":[],"lineEnd":270,"lineStart":1,"maintainability":100.727,"methods":[{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["describe","\"no closest scrollable\"","\"with a closest scrollable\"","\"frame clipping\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":200},"errors":[],"lineEnd":269,"lineStart":70,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should not have a closest scrollable if there is no closest scrollable\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":16},"errors":[],"lineEnd":86,"lineStart":71,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.057,"difficulty":4,"effort":678.574,"length":37,"time":37.699,"vocabulary":24,"volume":169.644,"operands":{"distinct":18,"total":24,"identifiers":["dimension","DroppableDimension","getDroppableDimension","descriptor","isEnabled","true","isCombineEnabled","false","isFixedOnPage","client","page","direction","\"vertical\"","closest","null","expect","frame","toBe"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":14},"errors":[],"lineEnd":85,"lineStart":72,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.118,"difficulty":5.25,"effort":1858.083,"length":69,"time":103.227,"vocabulary":35,"volume":353.921,"operands":{"distinct":28,"total":42,"identifiers":["dimension","DroppableDimension","getDroppableDimension","descriptor","isEnabled","true","client","page","direction","\"vertical\"","isCombineEnabled","false","isFixedOnPage","closest","scrollSize","scrollHeight","paddingBox","height","scrollWidth","width","scroll","x","10","y","shouldClipSubject","it","\"should offset the frame client by the window scroll\"","\"should capture the frame information\""]},"operators":{"distinct":7,"total":27,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":23,"physical":57},"errors":[],"lineEnd":144,"lineStart":88,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.02,"difficulty":1.25,"effort":74.743,"length":18,"time":4.152,"vocabulary":10,"volume":59.795,"operands":{"distinct":8,"total":10,"identifiers":["invariant","dimension","frame","expect","pageMarginBox","toEqual","page","marginBox"]},"operators":{"distinct":2,"total":8,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":112,"lineStart":109,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.216,"difficulty":5.912,"effort":3838.362,"length":122,"time":213.242,"vocabulary":40,"volume":649.275,"operands":{"distinct":34,"total":67,"identifiers":["scrollSize","ScrollSize","scrollHeight","client","paddingBox","height","scrollWidth","width","maxScroll","Position","getMaxScroll","expected","Scrollable","pageMarginBox","page","marginBox","frameClient","shouldClipSubject","true","scroll","initial","x","10","y","current","max","diff","value","0","displacement","expect","dimension","frame","toEqual"]},"operators":{"distinct":6,"total":55,"identifiers":["const","=","{}",":",".","()"]}},"paramCount":0,"sloc":{"logical":31,"physical":30},"errors":[],"lineEnd":143,"lineStart":114,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.114,"difficulty":5.056,"effort":1723.237,"length":67,"time":95.735,"vocabulary":34,"volume":340.86,"operands":{"distinct":27,"total":39,"identifiers":["frameClient","BoxModel","createBox","borderBox","expandBySpacing","client","ten","margin","border","padding","framePage","withScroll","windowScroll","Options","shouldClipSubject","defaultOptions","true","getWithClient","customClient","options","it","\"should not clip the frame if requested not to\"","describe","\"frame is the same size as the subject\"","\"frame is smaller than subject\"","\"frame is larger than subject\"","\"subject clipped on one side by frame\""]},"operators":{"distinct":7,"total":28,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":23,"physical":123},"errors":[],"lineEnd":268,"lineStart":146,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.102,"difficulty":2.643,"effort":806.071,"length":61,"time":44.782,"vocabulary":32,"volume":305,"operands":{"distinct":28,"total":37,"identifiers":["DroppableDimension","getDroppableDimension","descriptor","isEnabled","true","client","customClient","page","withScroll","windowScroll","isCombineEnabled","false","isFixedOnPage","direction","\"vertical\"","closest","frameClient","framePage","scrollSize","scrollHeight","paddingBox","height","scrollWidth","width","scroll","origin","shouldClipSubject","options"]},"operators":{"distinct":4,"total":24,"identifiers":["()","{}",":","."]}},"paramCount":2,"sloc":{"logical":18,"physical":23},"errors":[],"lineEnd":184,"lineStart":162,"name":"<anon method-8>","paramNames":["customClient","options"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.146,"difficulty":5.889,"effort":2584.411,"length":87,"time":143.578,"vocabulary":33,"volume":438.862,"operands":{"distinct":27,"total":53,"identifiers":["expandedClient","BoxModel","createBox","borderBox","expandBySpacing","frameClient","ten","margin","padding","border","expandedPage","withScroll","windowScroll","bigClient","droppable","DroppableDimension","getWithClient","shouldClipSubject","false","expect","subject","active","toEqual","marginBox","invariant","frame","toBe"]},"operators":{"distinct":6,"total":34,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":23,"physical":24},"errors":[],"lineEnd":209,"lineStart":186,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should not clip the subject\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":7},"errors":[],"lineEnd":217,"lineStart":211,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.025,"difficulty":2.2,"effort":167.524,"length":20,"time":9.307,"vocabulary":14,"volume":76.147,"operands":{"distinct":10,"total":11,"identifiers":["droppable","DroppableDimension","getWithClient","frameClient","expect","subject","active","toEqual","framePage","marginBox"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":216,"lineStart":212,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should clip the subject to the size of the frame\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":15},"errors":[],"lineEnd":233,"lineStart":219,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.063,"difficulty":3.947,"effort":751.571,"length":41,"time":41.754,"vocabulary":25,"volume":190.398,"operands":{"distinct":19,"total":25,"identifiers":["bigClient","BoxModel","createBox","borderBox","expandBySpacing","frameClient","ten","margin","padding","border","droppable","DroppableDimension","getWithClient","expect","subject","active","toEqual","framePage","marginBox"]},"operators":{"distinct":6,"total":16,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":11,"physical":13},"errors":[],"lineEnd":232,"lineStart":220,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should return a clipped size that is equal to that of the subject\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":8},"errors":[],"lineEnd":242,"lineStart":235,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.025,"difficulty":2.2,"effort":167.524,"length":20,"time":9.307,"vocabulary":14,"volume":76.147,"operands":{"distinct":10,"total":11,"identifiers":["droppable","DroppableDimension","getWithClient","client","expect","subject","active","toEqual","page","marginBox"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":6},"errors":[],"lineEnd":241,"lineStart":236,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should clip on all sides\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":24},"errors":[],"lineEnd":267,"lineStart":244,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.059,"difficulty":9.35,"effort":1642.727,"length":40,"time":91.263,"vocabulary":21,"volume":175.693,"operands":{"distinct":10,"total":17,"identifiers":["changes","Spacing","top","10","noSpacing","left","bottom","right","forEach","expandBy"]},"operators":{"distinct":11,"total":23,"identifiers":["const","=","[]",",","{}",":","- (prefix)","... (spread)","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":22},"errors":[],"lineEnd":266,"lineStart":245,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.063,"difficulty":3.947,"effort":751.571,"length":41,"time":41.754,"vocabulary":25,"volume":190.398,"operands":{"distinct":19,"total":25,"identifiers":["custom","BoxModel","createBox","borderBox","expandBySpacing","frameClient","expandBy","margin","padding","border","droppable","DroppableDimension","getWithClient","expect","subject","active","toEqual","framePage","marginBox"]},"operators":{"distinct":6,"total":16,"identifiers":["const","=","()","{}",":","."]}},"paramCount":1,"sloc":{"logical":11,"physical":12},"errors":[],"lineEnd":265,"lineStart":254,"name":"<anon method-18>","paramNames":["expandBy"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.435,"halstead":{"bugs":0.099,"difficulty":1.105,"effort":6220.942,"length":42.053,"time":345.608,"vocabulary":6.947,"volume":296.235,"operands":{"distinct":6.368,"total":24.316},"operators":{"distinct":0.579,"total":17.737}},"paramCount":0.158,"sloc":{"logical":12.105,"physical":14.211}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":22.924,"halstead":{"bugs":0.057,"difficulty":3.23,"effort":840.607,"length":36.389,"time":46.7,"vocabulary":18.5,"volume":172.064,"operands":{"distinct":14,"total":20.944},"operators":{"distinct":4.5,"total":15.444}},"paramCount":0.167,"sloc":{"logical":10.333,"physical":33.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/auto-scroll/jump-scroller.spec.js","testCases":17,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  70 | });\n  71 |\n> 72 | [vertical, horizontal].forEach((axis: Axis) => {\n     |                       ^ Conditional Test Logic\n  73 |   describe(`on the ${axis.direction} axis`, () => {\n  74 |     const preset = getPreset(axis);\n  75 |     const state = getStatePreset(axis);","start":{"line":72,"column":23,"index":1783}}]}],"metrics":{"aggregate":{"cyclomatic":36,"cyclomaticDensity":8.353,"halstead":{"bugs":4.345,"difficulty":58.953,"effort":768454.22,"length":1818,"time":42691.901,"vocabulary":144,"volume":13034.924,"operands":{"distinct":129,"total":1014,"identifiers":["origin","Position","x","0","y","windowScrollSize","scrollHeight","2000","scrollWidth","1600","scrollableViewport","Viewport","createViewport","frame","getRect","top","left","right","800","bottom","1000","scroll","unscrollableViewport","height","width","jumpScroll","JumpScroller","mocks","beforeEach","scrollWindow","jest","fn","scrollDroppable","move","jumpScroller","afterEach","requestAnimationFrame","reset","vertical","horizontal","forEach","axis","describe","direction","on the "," axis","preset","getPreset","state","getStatePreset","\"window scrolling\"","\"moving forwards\"","it","\"should manually move the item if the window is unable to scroll\"","request","patch","line","1","withRequest","DraggingState","scrollJumpRequest","expected","add","current","client","selection","expect","toHaveBeenCalledWith","not","toHaveBeenCalled","\"should scroll the window if can absorb all of the movement\"","\"should manually move the item any distance that the window is unable to scroll\"","restricted","withWindowScrollSize","viewport","3","existing","2","\"moving backwards\"","scrolled","scrollViewport","windowScroll","\"should not scroll the window if window scrolling is disabled\"","isWindowScrollAllowed","false","\"droppable scrolling (which can involve some window scrolling)\"","scrollableScrollSize","frameClient","BoxModel","createBox","borderBox","600","scrollable","DroppableDimension","getDroppableDimension","descriptor","home","closest","scrollSize","shouldClipSubject","true","maxDroppableScroll","getFrame","max","\"droppable is able to complete entire scroll\"","\"should only scroll the droppable\"","addDroppable","id","\"droppable is unable to complete the entire scroll\"","\"should manually move the entire request if it is unable to be partially completed by the window or the droppable\"","\"window is unable to absorb some of the scroll\"","\"should scroll the droppable what it can and move the rest\"","availableScroll","subtract","expectedManualMove","\"window can absorb some of the scroll\"","\"should scroll the entire overlap if it can\"","\"should scroll the droppable and window by what it can, and manually move the rest\"","availableWindowScroll","maxWindowScroll","getMaxScroll","scrolledViewport","availableDroppableScroll","droppableScroll","5","remainder","100","scrolledDroppable","negate"]},"operators":{"distinct":15,"total":804,"identifiers":["const","=","{}",":","()",".","let","function=>","[]",",","``","${}","+","- (prefix)","... (spread)"]}},"paramCount":1,"sloc":{"logical":431,"physical":590}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":7,"path":"css-box-model","type":"esm"},{"line":13,"path":"../../../../src/types","type":"esm"},{"line":14,"path":"../../../../src/state/position","type":"esm"},{"line":15,"path":"../../../util/viewport","type":"esm"},{"line":16,"path":"../../../../src/state/scroll-viewport","type":"esm"},{"line":17,"path":"../../../../src/state/axis","type":"esm"},{"line":18,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":24,"path":"../../../util/dimension","type":"esm"},{"line":25,"path":"../../../../src/state/droppable/scroll-droppable","type":"esm"},{"line":26,"path":"../../../../src/state/get-max-scroll","type":"esm"},{"line":29,"path":"../../../../src/state/auto-scroller/jump-scroller","type":"esm"}],"errors":[],"lineEnd":590,"lineStart":1,"maintainability":96.689,"methods":[{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.032,"difficulty":4.063,"effort":390.859,"length":26,"time":21.714,"vocabulary":13,"volume":96.211,"operands":{"distinct":8,"total":13,"identifiers":["mocks","scrollWindow","jest","fn","scrollDroppable","move","jumpScroll","jumpScroller"]},"operators":{"distinct":5,"total":13,"identifiers":["=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":8},"errors":[],"lineEnd":66,"lineStart":59,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["requestAnimationFrame","reset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":70,"lineStart":68,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on the "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":518},"errors":[],"lineEnd":589,"lineStart":72,"name":"<anon method-3>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.024,"difficulty":2.5,"effort":179.248,"length":20,"time":9.958,"vocabulary":12,"volume":71.699,"operands":{"distinct":8,"total":10,"identifiers":["preset","getPreset","axis","state","getStatePreset","describe","\"window scrolling\"","\"droppable scrolling (which can involve some window scrolling)\""]},"operators":{"distinct":4,"total":10,"identifiers":["const","=","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":516},"errors":[],"lineEnd":588,"lineStart":73,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.011,"difficulty":1.2,"effort":40.426,"length":12,"time":2.246,"vocabulary":7,"volume":33.688,"operands":{"distinct":5,"total":6,"identifiers":["describe","\"moving forwards\"","\"moving backwards\"","it","\"should not scroll the window if window scrolling is disabled\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":144},"errors":[],"lineEnd":220,"lineStart":77,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should manually move the item if the window is unable to scroll\"","\"should scroll the window if can absorb all of the movement\"","\"should manually move the item any distance that the window is unable to scroll\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":58},"errors":[],"lineEnd":135,"lineStart":78,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.097,"difficulty":4.125,"effort":1194.214,"length":59,"time":66.345,"vocabulary":30,"volume":289.507,"operands":{"distinct":24,"total":33,"identifiers":["request","Position","patch","axis","line","1","withRequest","DraggingState","state","scrollJumpRequest","unscrollableViewport","expected","add","current","client","selection","jumpScroll","expect","mocks","move","toHaveBeenCalledWith","scrollWindow","not","toHaveBeenCalled"]},"operators":{"distinct":6,"total":26,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":12,"physical":18},"errors":[],"lineEnd":96,"lineStart":79,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.054,"difficulty":2.471,"effort":401.509,"length":37,"time":22.306,"vocabulary":21,"volume":162.516,"operands":{"distinct":17,"total":21,"identifiers":["request","Position","patch","axis","line","1","jumpScroll","state","scrollJumpRequest","scrollableViewport","expect","mocks","scrollWindow","toHaveBeenCalledWith","move","not","toHaveBeenCalled"]},"operators":{"distinct":4,"total":16,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":8},"errors":[],"lineEnd":105,"lineStart":98,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.179,"difficulty":6.045,"effort":3249.521,"length":101,"time":180.529,"vocabulary":40,"volume":537.515,"operands":{"distinct":33,"total":57,"identifiers":["restricted","Viewport","withWindowScrollSize","viewport","scrollableViewport","scrollHeight","frame","height","1","scrollWidth","width","request","Position","patch","axis","line","3","existing","DraggingState","state","scrollJumpRequest","expected","add","current","client","selection","2","jumpScroll","expect","mocks","scrollWindow","toHaveBeenCalledWith","move"]},"operators":{"distinct":7,"total":44,"identifiers":["const","=","()","{}",":","+","."]}},"paramCount":0,"sloc":{"logical":20,"physical":28},"errors":[],"lineEnd":134,"lineStart":107,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should manually move the item if the window is unable to scroll\"","\"should scroll the window if can absorb all of the movement\"","\"should manually move the item any distance that the window is unable to scroll\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":63},"errors":[],"lineEnd":199,"lineStart":137,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.099,"difficulty":4.813,"effort":1430.524,"length":60,"time":79.474,"vocabulary":31,"volume":297.252,"operands":{"distinct":24,"total":33,"identifiers":["request","Position","patch","axis","line","1","existing","DraggingState","state","scrollJumpRequest","unscrollableViewport","expected","add","current","client","selection","jumpScroll","expect","mocks","move","toHaveBeenCalledWith","scrollWindow","not","toHaveBeenCalled"]},"operators":{"distinct":7,"total":27,"identifiers":["const","=","()",".","- (prefix)","{}",":"]}},"paramCount":0,"sloc":{"logical":12,"physical":19},"errors":[],"lineEnd":156,"lineStart":138,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.079,"difficulty":3.625,"effort":858.533,"length":51,"time":47.696,"vocabulary":25,"volume":236.837,"operands":{"distinct":20,"total":29,"identifiers":["scrolled","Viewport","scrollViewport","scrollableViewport","patch","axis","line","1","request","Position","jumpScroll","state","scrollJumpRequest","expect","mocks","scrollWindow","toHaveBeenCalledWith","move","not","toHaveBeenCalled"]},"operators":{"distinct":5,"total":22,"identifiers":["const","=","()",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":11,"physical":12},"errors":[],"lineEnd":169,"lineStart":158,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.152,"difficulty":6.25,"effort":2853.164,"length":89,"time":158.509,"vocabulary":35,"volume":456.506,"operands":{"distinct":28,"total":50,"identifiers":["windowScroll","Position","patch","axis","line","1","scrolled","Viewport","scrollViewport","scrollableViewport","request","3","existing","DraggingState","state","scrollJumpRequest","expected","add","current","client","selection","2","jumpScroll","expect","mocks","scrollWindow","toHaveBeenCalledWith","move"]},"operators":{"distinct":7,"total":39,"identifiers":["const","=","()",".","- (prefix)","{}",":"]}},"paramCount":0,"sloc":{"logical":18,"physical":28},"errors":[],"lineEnd":198,"lineStart":171,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.108,"difficulty":5.04,"effort":1638,"length":65,"time":91,"vocabulary":32,"volume":325,"operands":{"distinct":25,"total":36,"identifiers":["request","Position","patch","axis","line","1","existing","DraggingState","state","scrollJumpRequest","scrollableViewport","isWindowScrollAllowed","false","jumpScroll","expect","mocks","scrollWindow","not","toHaveBeenCalledWith","expected","add","current","client","selection","move"]},"operators":{"distinct":7,"total":29,"identifiers":["const","=","()",".","{}","... (spread)",":"]}},"paramCount":0,"sloc":{"logical":13,"physical":19},"errors":[],"lineEnd":219,"lineStart":201,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.03,"halstead":{"bugs":0.209,"difficulty":6.485,"effort":4065.2,"length":117,"time":225.844,"vocabulary":41,"volume":626.834,"operands":{"distinct":34,"total":63,"identifiers":["scrollableScrollSize","scrollWidth","800","scrollHeight","frameClient","BoxModel","createBox","borderBox","top","0","left","right","600","bottom","scrollable","DroppableDimension","getDroppableDimension","descriptor","preset","home","closest","scrollSize","scroll","x","y","shouldClipSubject","true","maxDroppableScroll","Position","getFrame","max","describe","\"moving forwards\"","\"moving backwards\""]},"operators":{"distinct":7,"total":54,"identifiers":["const","=","{}",":","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":33,"physical":366},"errors":[],"lineEnd":587,"lineStart":222,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"droppable is able to complete entire scroll\"","\"droppable is unable to complete the entire scroll\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":174},"errors":[],"lineEnd":432,"lineStart":259,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should only scroll the droppable\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":19},"errors":[],"lineEnd":278,"lineStart":260,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.086,"difficulty":2.818,"effort":728.568,"length":55,"time":40.476,"vocabulary":26,"volume":258.524,"operands":{"distinct":22,"total":31,"identifiers":["request","Position","patch","axis","line","1","jumpScroll","addDroppable","state","scrollJumpRequest","unscrollableViewport","scrollable","expect","mocks","scrollDroppable","toHaveBeenCalledWith","descriptor","id","scrollWindow","not","toHaveBeenCalled","move"]},"operators":{"distinct":4,"total":24,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":17},"errors":[],"lineEnd":277,"lineStart":261,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.011,"difficulty":1.2,"effort":40.426,"length":12,"time":2.246,"vocabulary":7,"volume":33.688,"operands":{"distinct":5,"total":6,"identifiers":["it","\"should manually move the entire request if it is unable to be partially completed by the window or the droppable\"","describe","\"window is unable to absorb some of the scroll\"","\"window can absorb some of the scroll\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":152},"errors":[],"lineEnd":431,"lineStart":280,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.138,"difficulty":4.5,"effort":1861.173,"length":80,"time":103.399,"vocabulary":36,"volume":413.594,"operands":{"distinct":30,"total":45,"identifiers":["scrolled","DroppableDimension","scrollDroppable","scrollable","maxDroppableScroll","request","Position","patch","axis","line","1","existing","DraggingState","state","scrollJumpRequest","unscrollableViewport","expected","add","current","client","selection","jumpScroll","addDroppable","expect","mocks","scrollWindow","not","toHaveBeenCalled","move","toHaveBeenCalledWith"]},"operators":{"distinct":6,"total":35,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":17,"physical":24},"errors":[],"lineEnd":304,"lineStart":281,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should scroll the droppable what it can and move the rest\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":35},"errors":[],"lineEnd":340,"lineStart":306,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.2,"difficulty":4.846,"effort":2900.966,"length":109,"time":161.165,"vocabulary":45,"volume":598.612,"operands":{"distinct":39,"total":63,"identifiers":["availableScroll","Position","patch","axis","line","1","scroll","subtract","maxDroppableScroll","scrolled","DroppableDimension","scrollDroppable","scrollable","request","3","existing","DraggingState","state","scrollJumpRequest","unscrollableViewport","expectedManualMove","add","current","client","selection","2","jumpScroll","addDroppable","expect","mocks","scrollWindow","not","toHaveBeenCalled","toHaveBeenCalledWith","preset","home","descriptor","id","move"]},"operators":{"distinct":6,"total":46,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":22,"physical":33},"errors":[],"lineEnd":339,"lineStart":307,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should scroll the entire overlap if it can\"","\"should scroll the droppable and window by what it can, and manually move the rest\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":89},"errors":[],"lineEnd":430,"lineStart":342,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.144,"difficulty":3.333,"effort":1441.448,"length":85,"time":80.08,"vocabulary":34,"volume":432.434,"operands":{"distinct":30,"total":50,"identifiers":["availableScroll","Position","patch","axis","line","1","scroll","subtract","maxDroppableScroll","scrolled","DroppableDimension","scrollDroppable","scrollable","request","3","jumpScroll","addDroppable","state","scrollJumpRequest","scrollableViewport","expect","mocks","toHaveBeenCalledWith","descriptor","id","scrollWindow","2","move","not","toHaveBeenCalled"]},"operators":{"distinct":4,"total":35,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":18,"physical":29},"errors":[],"lineEnd":371,"lineStart":343,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.778,"halstead":{"bugs":0.326,"difficulty":6.061,"effort":5922.118,"length":169,"time":329.007,"vocabulary":55,"volume":977.05,"operands":{"distinct":49,"total":99,"identifiers":["availableWindowScroll","Position","patch","axis","line","2","maxWindowScroll","getMaxScroll","scrollHeight","windowScrollSize","scrollWidth","height","scrollableViewport","frame","width","windowScroll","subtract","scrolledViewport","Viewport","scrollViewport","availableDroppableScroll","1","droppableScroll","maxDroppableScroll","scrolled","DroppableDimension","scrollDroppable","scrollable","request","5","remainder","existing","DraggingState","addDroppable","state","scrollJumpRequest","expectedManualMove","add","current","client","selection","jumpScroll","expect","mocks","toHaveBeenCalledWith","descriptor","id","scrollWindow","move"]},"operators":{"distinct":6,"total":70,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":36,"physical":57},"errors":[],"lineEnd":429,"lineStart":373,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"droppable is able to complete entire scroll\"","\"droppable is unable to complete the entire scroll\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":153},"errors":[],"lineEnd":586,"lineStart":434,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should only scroll the droppable\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":24},"errors":[],"lineEnd":458,"lineStart":435,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.112,"difficulty":4.063,"effort":1361.753,"length":69,"time":75.653,"vocabulary":29,"volume":335.201,"operands":{"distinct":24,"total":39,"identifiers":["scrolled","DroppableDimension","scrollDroppable","scrollable","patch","axis","line","1","request","Position","jumpScroll","addDroppable","state","scrollJumpRequest","scrollableViewport","expect","mocks","toHaveBeenCalledWith","descriptor","id","scrollWindow","not","toHaveBeenCalled","move"]},"operators":{"distinct":5,"total":30,"identifiers":["const","=","()",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":14,"physical":22},"errors":[],"lineEnd":457,"lineStart":436,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.011,"difficulty":1.2,"effort":40.426,"length":12,"time":2.246,"vocabulary":7,"volume":33.688,"operands":{"distinct":5,"total":6,"identifiers":["it","\"should manually move the entire request if it is unable to be partially completed by the window or the droppable\"","describe","\"window is unable to absorb some of the scroll\"","\"window can absorb some of the scroll\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":126},"errors":[],"lineEnd":585,"lineStart":460,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.124,"difficulty":5.185,"effort":1925.699,"length":73,"time":106.983,"vocabulary":34,"volume":371.385,"operands":{"distinct":27,"total":40,"identifiers":["request","Position","patch","axis","line","1","existing","DraggingState","state","scrollJumpRequest","unscrollableViewport","expected","add","current","client","selection","jumpScroll","addDroppable","scrollable","expect","mocks","scrollWindow","not","toHaveBeenCalled","scrollDroppable","move","toHaveBeenCalledWith"]},"operators":{"distinct":7,"total":33,"identifiers":["const","=","()",".","- (prefix)","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":19},"errors":[],"lineEnd":479,"lineStart":461,"name":"<anon method-30>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should scroll the droppable what it can and move the rest\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":32},"errors":[],"lineEnd":512,"lineStart":481,"name":"<anon method-31>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.187,"difficulty":5.8,"effort":3252.646,"length":104,"time":180.703,"vocabulary":42,"volume":560.801,"operands":{"distinct":35,"total":58,"identifiers":["scrolled","DroppableDimension","scrollDroppable","scrollable","patch","axis","line","1","request","Position","3","existing","DraggingState","state","scrollJumpRequest","unscrollableViewport","expectedManualMove","add","current","client","selection","2","jumpScroll","addDroppable","expect","mocks","scrollWindow","not","toHaveBeenCalled","toHaveBeenCalledWith","preset","home","descriptor","id","move"]},"operators":{"distinct":7,"total":46,"identifiers":["const","=","()",".","- (prefix)","{}",":"]}},"paramCount":0,"sloc":{"logical":20,"physical":30},"errors":[],"lineEnd":511,"lineStart":482,"name":"<anon method-32>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should scroll the entire overlap if it can\"","\"should scroll the droppable and window by what it can, and manually move the rest\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":71},"errors":[],"lineEnd":584,"lineStart":514,"name":"<anon method-33>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.159,"difficulty":4.417,"effort":2106.853,"length":93,"time":117.047,"vocabulary":35,"volume":477.023,"operands":{"distinct":30,"total":53,"identifiers":["scrolledViewport","Viewport","scrollViewport","scrollableViewport","patch","axis","line","100","scrolledDroppable","DroppableDimension","scrollDroppable","scrollable","1","request","Position","3","jumpScroll","addDroppable","state","scrollJumpRequest","expect","mocks","toHaveBeenCalledWith","descriptor","id","scrollWindow","2","move","not","toHaveBeenCalled"]},"operators":{"distinct":5,"total":40,"identifiers":["const","=","()",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":19,"physical":29},"errors":[],"lineEnd":543,"lineStart":515,"name":"<anon method-34>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.232,"difficulty":6.724,"effort":4689.537,"length":127,"time":260.53,"vocabulary":45,"volume":697.465,"operands":{"distinct":38,"total":73,"identifiers":["windowScroll","Position","patch","axis","line","2","scrolledViewport","Viewport","scrollViewport","scrollableViewport","droppableScroll","1","scrolled","DroppableDimension","scrollDroppable","scrollable","request","5","remainder","existing","DraggingState","addDroppable","state","scrollJumpRequest","expectedManualMove","add","current","client","selection","jumpScroll","expect","mocks","toHaveBeenCalledWith","descriptor","id","negate","scrollWindow","move"]},"operators":{"distinct":7,"total":54,"identifiers":["const","=","()",".","- (prefix)","{}",":"]}},"paramCount":0,"sloc":{"logical":27,"physical":39},"errors":[],"lineEnd":583,"lineStart":545,"name":"<anon method-35>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.232,"halstead":{"bugs":0.121,"difficulty":1.638,"effort":21345.951,"length":50.5,"time":1185.886,"vocabulary":4,"volume":362.081,"operands":{"distinct":3.583,"total":28.167},"operators":{"distinct":0.417,"total":22.333}},"paramCount":0.028,"sloc":{"logical":11.972,"physical":16.389}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":19.203,"halstead":{"bugs":0.081,"difficulty":3.217,"effort":1225.371,"length":48.886,"time":68.076,"vocabulary":21.257,"volume":243.788,"operands":{"distinct":17,"total":27.343},"operators":{"distinct":4.257,"total":21.543}},"paramCount":0.029,"sloc":{"logical":11.429,"physical":85.2}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/auto-scroll/choosing-the-right-scroller.spec.js","testCases":2,"smells":7,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  64 |   scroller.start(onCenter('FLUID'));\n  65 |   requestAnimationFrame.flush();\n> 66 |   expect(mocks.scrollWindow).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  67 |\n  68 |   // now scrolling on visibile edge. Should cause a big auto scroll\n  69 |   // this will be done with the fluid scroller","start":{"line":66,"column":2,"index":1741}},{"frame":"  70 |   scroller.scroll(onEnd('FLUID'));\n  71 |   requestAnimationFrame.step();\n> 72 |   expect(mocks.scrollWindow).toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  73 | });\n  74 |\n  75 | it('should use the jump scroller when in SNAP mode and there is a jumpScrollerRequest', () => {","start":{"line":72,"column":2,"index":1977}},{"frame":"  80 |   scroller.start(onCenter('SNAP'));\n  81 |   requestAnimationFrame.flush();\n> 82 |   expect(mocks.scrollWindow).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  83 |\n  84 |   // now scrolling on visibile edge. Should not cause an auto scroll because we are in SNAP mode\n  85 |   scroller.scroll(onEnd('SNAP'));","start":{"line":82,"column":2,"index":2338}},{"frame":"  80 |   scroller.start(onCenter('SNAP'));\n  81 |   requestAnimationFrame.flush();\n> 82 |   expect(mocks.scrollWindow).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  83 |\n  84 |   // now scrolling on visibile edge. Should not cause an auto scroll because we are in SNAP mode\n  85 |   scroller.scroll(onEnd('SNAP'));","start":{"line":82,"column":2,"index":2338}},{"frame":"  85 |   scroller.scroll(onEnd('SNAP'));\n  86 |   requestAnimationFrame.step();\n> 87 |   expect(mocks.scrollWindow).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  88 |\n  89 |   const request: Position = { x: 1, y: 1 };\n  90 |   const withRequest: DraggingState = state.scrollJumpRequest(","start":{"line":87,"column":2,"index":2555}},{"frame":"  85 |   scroller.scroll(onEnd('SNAP'));\n  86 |   requestAnimationFrame.step();\n> 87 |   expect(mocks.scrollWindow).not.toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  88 |\n  89 |   const request: Position = { x: 1, y: 1 };\n  90 |   const withRequest: DraggingState = state.scrollJumpRequest(","start":{"line":87,"column":2,"index":2555}},{"frame":"  94 |   scroller.scroll(withRequest);\n  95 |   requestAnimationFrame.step();\n> 96 |   expect(mocks.scrollWindow).toHaveBeenCalled();\n     |  ^ Duplicate Assert\n  97 | });\n  98 |","start":{"line":96,"column":2,"index":2821}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":7.692,"halstead":{"bugs":0.613,"difficulty":10.194,"effort":18743.743,"length":300,"time":1041.319,"vocabulary":70,"volume":1838.785,"operands":{"distinct":62,"total":158,"identifiers":["state","getStatePreset","getMocks","Args","scrollDroppable","jest","fn","scrollWindow","move","windowScrollSize","scrollHeight","2000","scrollWidth","1600","scrollableViewport","Viewport","createViewport","frame","getRect","top","0","left","right","800","bottom","1000","scroll","origin","onCenter","mode","DraggingState","dragging","preset","inHome1","descriptor","id","center","movementMode","onEnd","x","y","it","\"should use the fluid scroller when in fluid mode\"","mocks","scroller","AutoScroller","getScroller","start","\"FLUID\"","requestAnimationFrame","flush","expect","not","toHaveBeenCalled","step","\"should use the jump scroller when in SNAP mode and there is a jumpScrollerRequest\"","\"SNAP\"","request","Position","1","withRequest","scrollJumpRequest"]},"operators":{"distinct":8,"total":142,"identifiers":["const","=","()","function=>","{}",":",".","... (spread)"]}},"paramCount":2,"sloc":{"logical":78,"physical":98}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":7,"path":"../../../../src/types","type":"esm"},{"line":8,"path":"../../../util/viewport","type":"esm"},{"line":9,"path":"../../../util/get-simple-state-preset","type":"esm"},{"line":10,"path":"../../../../src/state/auto-scroller","type":"esm"},{"line":11,"path":"../../../../src/state/auto-scroller/auto-scroller-types","type":"esm"},{"line":12,"path":"../../../../src/state/position","type":"esm"}],"errors":[],"lineEnd":98,"lineStart":1,"maintainability":101.928,"methods":[{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.022,"difficulty":3.333,"effort":221.462,"length":20,"time":12.303,"vocabulary":10,"volume":66.439,"operands":{"distinct":6,"total":10,"identifiers":["Args","scrollDroppable","jest","fn","scrollWindow","move"]},"operators":{"distinct":4,"total":10,"identifiers":["{}",":","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":20,"lineStart":16,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.034,"difficulty":2.917,"effort":298.044,"length":25,"time":16.558,"vocabulary":17,"volume":102.187,"operands":{"distinct":12,"total":14,"identifiers":["DraggingState","state","dragging","preset","inHome1","descriptor","id","scrollableViewport","frame","center","movementMode","mode"]},"operators":{"distinct":5,"total":11,"identifiers":["{}","... (spread)","()",".",":"]}},"paramCount":1,"sloc":{"logical":3,"physical":8},"errors":[],"lineEnd":45,"lineStart":38,"name":"<anon method-2>","paramNames":["mode"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.05,"difficulty":3.167,"effort":479.014,"length":35,"time":26.612,"vocabulary":20,"volume":151.267,"operands":{"distinct":15,"total":19,"identifiers":["DraggingState","state","dragging","preset","inHome1","descriptor","id","x","scrollableViewport","frame","right","y","bottom","movementMode","mode"]},"operators":{"distinct":5,"total":16,"identifiers":["{}","... (spread)","()",".",":"]}},"paramCount":1,"sloc":{"logical":5,"physical":11},"errors":[],"lineEnd":57,"lineStart":47,"name":"<anon method-3>","paramNames":["mode"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.079,"difficulty":3.111,"effort":735.311,"length":53,"time":40.851,"vocabulary":22,"volume":236.35,"operands":{"distinct":18,"total":28,"identifiers":["mocks","Args","getMocks","scroller","AutoScroller","getScroller","start","onCenter","\"FLUID\"","requestAnimationFrame","flush","expect","scrollWindow","not","toHaveBeenCalled","scroll","onEnd","step"]},"operators":{"distinct":4,"total":25,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":14,"physical":15},"errors":[],"lineEnd":73,"lineStart":59,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.158,"difficulty":5.357,"effort":2534.647,"length":93,"time":140.814,"vocabulary":34,"volume":473.134,"operands":{"distinct":28,"total":50,"identifiers":["mocks","Args","getMocks","scroller","AutoScroller","getScroller","start","onCenter","\"SNAP\"","requestAnimationFrame","flush","expect","scrollWindow","not","toHaveBeenCalled","scroll","onEnd","step","request","Position","x","1","y","withRequest","DraggingState","state","scrollJumpRequest","scrollableViewport"]},"operators":{"distinct":6,"total":43,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":23,"physical":23},"errors":[],"lineEnd":97,"lineStart":75,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.282,"halstead":{"bugs":0.102,"difficulty":1.699,"effort":3123.957,"length":50,"time":173.553,"vocabulary":11.667,"volume":306.464,"operands":{"distinct":10.333,"total":26.333},"operators":{"distinct":1.333,"total":23.667}},"paramCount":0.333,"sloc":{"logical":13,"physical":16.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":15.822,"halstead":{"bugs":0.069,"difficulty":3.577,"effort":853.695,"length":45.2,"time":47.428,"vocabulary":20.6,"volume":205.875,"operands":{"distinct":15.8,"total":24.2},"operators":{"distinct":4.8,"total":21}},"paramCount":0.4,"sloc":{"logical":10.4,"physical":12.4}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/auto-scroll/fluid-scroller/window-scrolling.spec.js","testCases":14,"smells":24,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  83 |       );\n  84 |\n> 85 |       expect(mocks.scrollWindow).not.toHaveBeenCalled();\n     |      ^ Duplicate Assert\n  86 |       requestAnimationFrame.step();\n  87 |       expect(mocks.scrollWindow).toHaveBeenCalled();\n  88 |     });","start":{"line":85,"column":6,"index":2669}},{"frame":"  85 |       expect(mocks.scrollWindow).not.toHaveBeenCalled();\n  86 |       requestAnimationFrame.step();\n> 87 |       expect(mocks.scrollWindow).toHaveBeenCalled();\n     |      ^ Duplicate Assert\n  88 |     });\n  89 |\n  90 |     it('should scroll if moving beyond the start threshold', () => {","start":{"line":87,"column":6,"index":2762}},{"frame":"  101 |       );\n  102 |\n> 103 |       expect(mocks.scrollWindow).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  104 |\n  105 |       // only called after a frame\n  106 |       requestAnimationFrame.step();","start":{"line":103,"column":6,"index":3208}},{"frame":"  105 |       // only called after a frame\n  106 |       requestAnimationFrame.step();\n> 107 |       expect(mocks.scrollWindow).toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  108 |       // moving forwards\n  109 |       const request: Position = mocks.scrollWindow.mock.calls[0][0];\n  110 |       expect(request[axis.line]).toBeGreaterThan(0);","start":{"line":107,"column":6,"index":3337}},{"frame":"  123 |       // this will opt out of time dampening\n  124 |       startWithNoScroll(scroller);\n> 125 |       expect(mocks.scrollWindow).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  126 |\n  127 |       scroller.scroll(\n  128 |         dragTo({","start":{"line":125,"column":6,"index":4001}},{"frame":"  133 |       );\n  134 |       requestAnimationFrame.step();\n> 135 |       expect(mocks.scrollWindow).toHaveBeenCalledTimes(1);\n      |      ^ Duplicate Assert\n  136 |       const scroll1: Position = (mocks.scrollWindow.mock.calls[0][0]: any);\n  137 |\n  138 |       scroller.scroll(","start":{"line":135,"column":6,"index":4250}},{"frame":"  144 |       );\n  145 |       requestAnimationFrame.step();\n> 146 |       expect(mocks.scrollWindow).toHaveBeenCalledTimes(2);\n      |      ^ Duplicate Assert\n  147 |       const scroll2: Position = (mocks.scrollWindow.mock.calls[1][0]: any);\n  148 |\n  149 |       expect(scroll1[axis.line]).toBeLessThan(scroll2[axis.line]);","start":{"line":146,"column":6,"index":4575}},{"frame":"  214 |\n  215 |       requestAnimationFrame.step();\n> 216 |       expect(mocks.scrollWindow).toHaveBeenCalledTimes(1);\n      |      ^ Duplicate Assert\n  217 |       expect(mocks.scrollWindow).toHaveBeenCalledWith(\n  218 |         patch(axis.line, config.maxPixelScroll),\n  219 |       );","start":{"line":216,"column":6,"index":6703}},{"frame":"  215 |       requestAnimationFrame.step();\n  216 |       expect(mocks.scrollWindow).toHaveBeenCalledTimes(1);\n> 217 |       expect(mocks.scrollWindow).toHaveBeenCalledWith(\n      |      ^ Duplicate Assert\n  218 |         patch(axis.line, config.maxPixelScroll),\n  219 |       );\n  220 |     });","start":{"line":217,"column":6,"index":6762}},{"frame":"  281 |       );\n  282 |\n> 283 |       expect(mocks.scrollWindow).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  284 |       requestAnimationFrame.flush();\n  285 |       expect(mocks.scrollWindow).toHaveBeenCalled();\n  286 |     });","start":{"line":283,"column":6,"index":8663}},{"frame":"  283 |       expect(mocks.scrollWindow).not.toHaveBeenCalled();\n  284 |       requestAnimationFrame.flush();\n> 285 |       expect(mocks.scrollWindow).toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  286 |     });\n  287 |\n  288 |     it('should scroll if moving beyond the start threshold', () => {","start":{"line":285,"column":6,"index":8757}},{"frame":"  299 |       );\n  300 |\n> 301 |       expect(mocks.scrollWindow).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  302 |\n  303 |       // only called after a frame\n  304 |       requestAnimationFrame.step();","start":{"line":301,"column":6,"index":9206}},{"frame":"  303 |       // only called after a frame\n  304 |       requestAnimationFrame.step();\n> 305 |       expect(mocks.scrollWindow).toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  306 |       // moving forwards\n  307 |       const request: Position = mocks.scrollWindow.mock.calls[0][0];\n  308 |       expect(request[axis.line]).toBeLessThan(0);","start":{"line":305,"column":6,"index":9335}},{"frame":"  318 |       // this will opt out of time dampening\n  319 |       startWithNoScroll(scroller);\n> 320 |       expect(mocks.scrollWindow).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  321 |\n  322 |       scroller.scroll(\n  323 |         dragTo({","start":{"line":320,"column":6,"index":9966}},{"frame":"  328 |       );\n  329 |       requestAnimationFrame.step();\n> 330 |       expect(mocks.scrollWindow).toHaveBeenCalledTimes(1);\n      |      ^ Duplicate Assert\n  331 |       const scroll1: Position = (mocks.scrollWindow.mock.calls[0][0]: any);\n  332 |\n  333 |       scroller.scroll(","start":{"line":330,"column":6,"index":10213}},{"frame":"  339 |       );\n  340 |       requestAnimationFrame.step();\n> 341 |       expect(mocks.scrollWindow).toHaveBeenCalledTimes(2);\n      |      ^ Duplicate Assert\n  342 |       const scroll2: Position = (mocks.scrollWindow.mock.calls[1][0]: any);\n  343 |\n  344 |       expect(scroll1[axis.line]).toBeGreaterThan(scroll2[axis.line]);","start":{"line":341,"column":6,"index":10536}},{"frame":"  409 |\n  410 |       requestAnimationFrame.step();\n> 411 |       expect(mocks.scrollWindow).toHaveBeenCalledTimes(1);\n      |      ^ Duplicate Assert\n  412 |       expect(mocks.scrollWindow).toHaveBeenCalledWith(\n  413 |         negate(patch(axis.line, config.maxPixelScroll)),\n  414 |       );","start":{"line":411,"column":6,"index":12680}},{"frame":"  410 |       requestAnimationFrame.step();\n  411 |       expect(mocks.scrollWindow).toHaveBeenCalledTimes(1);\n> 412 |       expect(mocks.scrollWindow).toHaveBeenCalledWith(\n      |      ^ Duplicate Assert\n  413 |         negate(patch(axis.line, config.maxPixelScroll)),\n  414 |       );\n  415 |     });","start":{"line":412,"column":6,"index":12739}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  108 |       // moving forwards\n  109 |       const request: Position = mocks.scrollWindow.mock.calls[0][0];\n> 110 |       expect(request[axis.line]).toBeGreaterThan(0);\n      |                                                 ^ Magic Number\n  111 |     });\n  112 |\n  113 |     it('should get faster the closer to the max speed point', () => {","start":{"line":110,"column":49,"index":3527}},{"frame":"  150 |\n  151 |       // validation\n> 152 |       expect(scroll1[axis.crossAxisLine]).toBe(0);\n      |                                               ^ Magic Number\n  153 |       expect(scroll2[axis.crossAxisLine]).toBe(0);\n  154 |     });\n  155 |","start":{"line":152,"column":47,"index":4840}},{"frame":"  151 |       // validation\n  152 |       expect(scroll1[axis.crossAxisLine]).toBe(0);\n> 153 |       expect(scroll2[axis.crossAxisLine]).toBe(0);\n      |                                               ^ Magic Number\n  154 |     });\n  155 |\n  156 |     it('should have the top speed at the max speed point', () => {","start":{"line":153,"column":47,"index":4891}},{"frame":"  306 |       // moving forwards\n  307 |       const request: Position = mocks.scrollWindow.mock.calls[0][0];\n> 308 |       expect(request[axis.line]).toBeLessThan(0);\n      |                                              ^ Magic Number\n  309 |     });\n  310 |\n  311 |     it('should get faster the closer to the max speed point', () => {","start":{"line":308,"column":46,"index":9522}},{"frame":"  345 |\n  346 |       // validation\n> 347 |       expect(scroll1[axis.crossAxisLine]).toBe(0);\n      |                                               ^ Magic Number\n  348 |       expect(scroll2[axis.crossAxisLine]).toBe(0);\n  349 |     });\n  350 |","start":{"line":347,"column":47,"index":10804}},{"frame":"  346 |       // validation\n  347 |       expect(scroll1[axis.crossAxisLine]).toBe(0);\n> 348 |       expect(scroll2[axis.crossAxisLine]).toBe(0);\n      |                                               ^ Magic Number\n  349 |     });\n  350 |\n  351 |     it('should have the top speed at the max speed point', () => {","start":{"line":348,"column":47,"index":10855}}]}],"metrics":{"aggregate":{"cyclomatic":20,"cyclomaticDensity":5.602,"halstead":{"bugs":3.063,"difficulty":52.303,"effort":480638.098,"length":1430,"time":26702.117,"vocabulary":86,"volume":9189.559,"operands":{"distinct":76,"total":795,"identifiers":["forEach","axis","state","thresholds","DistanceThresholds","getDistanceThresholds","scrollableViewport","frame","describe","\"moving forward to end of window\"","onStartBoundary","Position","patch","line","size","startScrollingFrom","center","crossAxisLine","onMaxBoundary","maxScrollValueAt","noScrollTarget","subtract","1","startWithNoScroll","scroller","start","dragTo","selection","viewport","requestAnimationFrame","step","it","\"should not scroll if before the start threshold\"","mocks","getArgsMock","FluidScroller","getScroller","target","flush","expect","scrollWindow","not","toHaveBeenCalled","\"should scroll if on the start threshold\"","\"should scroll if moving beyond the start threshold\"","add","request","mock","calls","0","toBeGreaterThan","\"should get faster the closer to the max speed point\"","atStartOfRange","atEndOfRange","scroll","toHaveBeenCalledTimes","scroll1","2","scroll2","toBeLessThan","toBe","\"should have the top speed at the max speed point\"","toHaveBeenCalledWith","config","maxPixelScroll","\"should have the top speed when moving beyond the max speed point\"","\"should throttle multiple scrolls into a single animation frame\"","target1","target2","\"moving backward to start of window\"","windowScroll","10","scrolledViewport","Viewport","scrollViewport","negate"]},"operators":{"distinct":10,"total":635,"identifiers":["()","function=>","{}","const","=",".","-","[]",":","+"]}},"paramCount":4,"sloc":{"logical":357,"physical":418}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"./util/for-each","type":"esm"},{"line":4,"path":"../../../../../src/types","type":"esm"},{"line":5,"path":"./util/viewport","type":"esm"},{"line":6,"path":"../../../../../src/state/scroll-viewport","type":"esm"},{"line":7,"path":"./util/drag-to","type":"esm"},{"line":10,"path":"../../../../../src/state/auto-scroller/fluid-scroller","type":"esm"},{"line":13,"path":"../../../../../src/state/auto-scroller/fluid-scroller/get-scroll/get-scroll-on-axis/get-distance-thresholds","type":"esm"},{"line":19,"path":"../../../../../src/state/position","type":"esm"},{"line":20,"path":"./util/get-args-mock","type":"esm"},{"line":21,"path":"../../../../../src/state/auto-scroller/fluid-scroller/config","type":"esm"}],"errors":[],"lineEnd":418,"lineStart":1,"maintainability":89.814,"methods":[{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.023,"difficulty":2.778,"effort":190.368,"length":18,"time":10.576,"vocabulary":14,"volume":68.532,"operands":{"distinct":9,"total":10,"identifiers":["thresholds","DistanceThresholds","getDistanceThresholds","scrollableViewport","frame","axis","describe","\"moving forward to end of window\"","\"moving backward to start of window\""]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()",".","function=>"]}},"paramCount":2,"sloc":{"logical":6,"physical":395},"errors":[],"lineEnd":417,"lineStart":23,"name":"<anon method-1>","paramNames":["axis","state"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.176,"difficulty":7.259,"effort":3840.846,"length":104,"time":213.38,"vocabulary":34,"volume":529.096,"operands":{"distinct":27,"total":56,"identifiers":["onStartBoundary","Position","patch","axis","line","scrollableViewport","frame","size","thresholds","startScrollingFrom","center","crossAxisLine","onMaxBoundary","maxScrollValueAt","noScrollTarget","subtract","1","startWithNoScroll","scroller","it","\"should not scroll if before the start threshold\"","\"should scroll if on the start threshold\"","\"should scroll if moving beyond the start threshold\"","\"should get faster the closer to the max speed point\"","\"should have the top speed at the max speed point\"","\"should have the top speed when moving beyond the max speed point\"","\"should throttle multiple scrolls into a single animation frame\""]},"operators":{"distinct":7,"total":48,"identifiers":["const","=","()",".","-","[]","function=>"]}},"paramCount":0,"sloc":{"logical":23,"physical":193},"errors":[],"lineEnd":221,"lineStart":29,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.024,"difficulty":2.2,"effort":159.147,"length":19,"time":8.842,"vocabulary":14,"volume":72.34,"operands":{"distinct":10,"total":11,"identifiers":["scroller","start","dragTo","selection","noScrollTarget","viewport","scrollableViewport","state","requestAnimationFrame","step"]},"operators":{"distinct":4,"total":8,"identifiers":["()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":6,"physical":10},"errors":[],"lineEnd":55,"lineStart":46,"name":"<anon method-3>","paramNames":["scroller"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.089,"difficulty":3.6,"effort":963.096,"length":54,"time":53.505,"vocabulary":31,"volume":267.527,"operands":{"distinct":25,"total":30,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target","Position","subtract","onStartBoundary","patch","axis","line","1","start","dragTo","selection","viewport","scrollableViewport","state","requestAnimationFrame","flush","expect","scrollWindow","not","toHaveBeenCalled"]},"operators":{"distinct":6,"total":24,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":16},"errors":[],"lineEnd":71,"lineStart":56,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.075,"difficulty":4.333,"effort":973.54,"length":49,"time":54.086,"vocabulary":24,"volume":224.663,"operands":{"distinct":18,"total":26,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","start","dragTo","selection","onStartBoundary","viewport","scrollableViewport","state","expect","scrollWindow","not","toHaveBeenCalled","requestAnimationFrame","step"]},"operators":{"distinct":6,"total":23,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":14,"physical":16},"errors":[],"lineEnd":88,"lineStart":73,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.153,"difficulty":5.6,"effort":2567.219,"length":88,"time":142.623,"vocabulary":37,"volume":458.432,"operands":{"distinct":30,"total":48,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target","Position","add","onStartBoundary","patch","axis","line","1","start","dragTo","selection","viewport","scrollableViewport","state","expect","scrollWindow","not","toHaveBeenCalled","requestAnimationFrame","step","request","mock","calls","0","toBeGreaterThan"]},"operators":{"distinct":7,"total":40,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":20,"physical":22},"errors":[],"lineEnd":111,"lineStart":90,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.304,"difficulty":8.474,"effort":7725.014,"length":166,"time":429.167,"vocabulary":45,"volume":911.648,"operands":{"distinct":38,"total":92,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","atStartOfRange","Position","onStartBoundary","atEndOfRange","subtract","onMaxBoundary","patch","axis","line","1","startWithNoScroll","expect","scrollWindow","not","toHaveBeenCalled","scroll","dragTo","selection","viewport","scrollableViewport","state","requestAnimationFrame","step","toHaveBeenCalledTimes","scroll1","mock","calls","0","2","scroll2","toBeLessThan","crossAxisLine","toBe"]},"operators":{"distinct":7,"total":74,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":35,"physical":42},"errors":[],"lineEnd":154,"lineStart":113,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.081,"difficulty":3.652,"effort":887.11,"length":50,"time":49.284,"vocabulary":29,"volume":242.899,"operands":{"distinct":23,"total":28,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","startWithNoScroll","scroll","dragTo","selection","onMaxBoundary","viewport","scrollableViewport","state","requestAnimationFrame","step","expect","scrollWindow","toHaveBeenCalledWith","patch","axis","line","config","maxPixelScroll"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":14,"physical":17},"errors":[],"lineEnd":172,"lineStart":156,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.106,"difficulty":4,"effort":1271.187,"length":63,"time":70.622,"vocabulary":33,"volume":317.797,"operands":{"distinct":27,"total":36,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target","Position","add","onMaxBoundary","patch","axis","line","1","startWithNoScroll","scroll","dragTo","selection","viewport","scrollableViewport","state","requestAnimationFrame","step","expect","scrollWindow","toHaveBeenCalledWith","config","maxPixelScroll"]},"operators":{"distinct":6,"total":27,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":17,"physical":18},"errors":[],"lineEnd":191,"lineStart":174,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.174,"difficulty":5.613,"effort":2924.016,"length":100,"time":162.445,"vocabulary":37,"volume":520.945,"operands":{"distinct":31,"total":58,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target1","Position","add","onStartBoundary","patch","axis","line","1","target2","subtract","onMaxBoundary","startWithNoScroll","scroll","dragTo","selection","viewport","scrollableViewport","state","requestAnimationFrame","step","expect","scrollWindow","toHaveBeenCalledTimes","toHaveBeenCalledWith","config","maxPixelScroll"]},"operators":{"distinct":6,"total":42,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":27,"physical":28},"errors":[],"lineEnd":220,"lineStart":193,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.206,"difficulty":7.339,"effort":4544.536,"length":118,"time":252.474,"vocabulary":38,"volume":619.255,"operands":{"distinct":31,"total":65,"identifiers":["windowScroll","Position","patch","axis","line","10","scrolledViewport","Viewport","scrollViewport","scrollableViewport","onStartBoundary","thresholds","startScrollingFrom","frame","center","crossAxisLine","onMaxBoundary","maxScrollValueAt","noScrollTarget","add","1","startWithNoScroll","scroller","it","\"should not scroll if before the start threshold\"","\"should scroll if on the start threshold\"","\"should scroll if moving beyond the start threshold\"","\"should get faster the closer to the max speed point\"","\"should have the top speed at the max speed point\"","\"should have the top speed when moving beyond the max speed point\"","\"should throttle multiple scrolls into a single animation frame\""]},"operators":{"distinct":7,"total":53,"identifiers":["const","=","()",".","+","[]","function=>"]}},"paramCount":0,"sloc":{"logical":27,"physical":194},"errors":[],"lineEnd":416,"lineStart":223,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.024,"difficulty":2.2,"effort":159.147,"length":19,"time":8.842,"vocabulary":14,"volume":72.34,"operands":{"distinct":10,"total":11,"identifiers":["scroller","start","dragTo","selection","noScrollTarget","viewport","scrollableViewport","state","requestAnimationFrame","step"]},"operators":{"distinct":4,"total":8,"identifiers":["()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":6,"physical":10},"errors":[],"lineEnd":252,"lineStart":243,"name":"<anon method-12>","paramNames":["scroller"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.089,"difficulty":3.6,"effort":963.096,"length":54,"time":53.505,"vocabulary":31,"volume":267.527,"operands":{"distinct":25,"total":30,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target","Position","add","onStartBoundary","patch","axis","line","1","start","dragTo","selection","viewport","scrolledViewport","state","requestAnimationFrame","flush","expect","scrollWindow","not","toHaveBeenCalled"]},"operators":{"distinct":6,"total":24,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":16},"errors":[],"lineEnd":269,"lineStart":254,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.075,"difficulty":4.333,"effort":973.54,"length":49,"time":54.086,"vocabulary":24,"volume":224.663,"operands":{"distinct":18,"total":26,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","start","dragTo","selection","onStartBoundary","viewport","scrolledViewport","state","expect","scrollWindow","not","toHaveBeenCalled","requestAnimationFrame","flush"]},"operators":{"distinct":6,"total":23,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":14,"physical":16},"errors":[],"lineEnd":286,"lineStart":271,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.153,"difficulty":5.6,"effort":2567.219,"length":88,"time":142.623,"vocabulary":37,"volume":458.432,"operands":{"distinct":30,"total":48,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target","Position","subtract","onStartBoundary","patch","axis","line","1","start","dragTo","selection","viewport","scrolledViewport","state","expect","scrollWindow","not","toHaveBeenCalled","requestAnimationFrame","step","request","mock","calls","0","toBeLessThan"]},"operators":{"distinct":7,"total":40,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":20,"physical":22},"errors":[],"lineEnd":309,"lineStart":288,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.304,"difficulty":8.474,"effort":7725.014,"length":166,"time":429.167,"vocabulary":45,"volume":911.648,"operands":{"distinct":38,"total":92,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","atStartOfRange","Position","onStartBoundary","atEndOfRange","add","onMaxBoundary","patch","axis","line","1","startWithNoScroll","expect","scrollWindow","not","toHaveBeenCalled","scroll","dragTo","selection","viewport","scrolledViewport","state","requestAnimationFrame","step","toHaveBeenCalledTimes","scroll1","mock","calls","0","2","scroll2","toBeGreaterThan","crossAxisLine","toBe"]},"operators":{"distinct":7,"total":74,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":35,"physical":39},"errors":[],"lineEnd":349,"lineStart":311,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.085,"difficulty":3.625,"effort":924.949,"length":52,"time":51.386,"vocabulary":30,"volume":255.158,"operands":{"distinct":24,"total":29,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","startWithNoScroll","scroll","dragTo","selection","onMaxBoundary","viewport","scrolledViewport","state","requestAnimationFrame","step","expect","scrollWindow","toHaveBeenCalledWith","negate","patch","axis","line","config","maxPixelScroll"]},"operators":{"distinct":6,"total":23,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":17},"errors":[],"lineEnd":367,"lineStart":351,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.11,"difficulty":3.964,"effort":1310.93,"length":65,"time":72.829,"vocabulary":34,"volume":330.685,"operands":{"distinct":28,"total":37,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target","Position","subtract","onMaxBoundary","patch","axis","line","1","startWithNoScroll","scroll","dragTo","selection","viewport","scrolledViewport","state","requestAnimationFrame","step","expect","scrollWindow","toHaveBeenCalledWith","negate","config","maxPixelScroll"]},"operators":{"distinct":6,"total":28,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":18,"physical":18},"errors":[],"lineEnd":386,"lineStart":369,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.178,"difficulty":5.531,"effort":2960.815,"length":102,"time":164.49,"vocabulary":38,"volume":535.289,"operands":{"distinct":32,"total":59,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target1","Position","subtract","onStartBoundary","patch","axis","line","1","target2","add","onMaxBoundary","startWithNoScroll","scroll","dragTo","selection","viewport","scrolledViewport","state","requestAnimationFrame","step","expect","scrollWindow","toHaveBeenCalledTimes","toHaveBeenCalledWith","negate","config","maxPixelScroll"]},"operators":{"distinct":6,"total":43,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":28,"physical":28},"errors":[],"lineEnd":415,"lineStart":388,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.28,"halstead":{"bugs":0.153,"difficulty":2.615,"effort":24031.905,"length":71.5,"time":1335.106,"vocabulary":4.3,"volume":459.478,"operands":{"distinct":3.8,"total":39.75},"operators":{"distinct":0.5,"total":31.75}},"paramCount":0.2,"sloc":{"logical":17.85,"physical":20.9}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":7.048,"halstead":{"bugs":0.128,"difficulty":4.851,"effort":2296.357,"length":74.947,"time":127.575,"vocabulary":31,"volume":383.625,"operands":{"distinct":24.947,"total":41.684},"operators":{"distinct":6.053,"total":33.263}},"paramCount":0.211,"sloc":{"logical":18.684,"physical":58.789}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/auto-scroll/fluid-scroller/time-dampening.spec.js","testCases":3,"smells":20,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  64 |     );\n  65 |     requestAnimationFrame.flush();\n> 66 |     expect(mocks.scrollWindow).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  67 |\n  68 |     // would be a max scroll\n  69 |     scroller.scroll(","start":{"line":66,"column":4,"index":2289}},{"frame":"  76 |\n  77 |     requestAnimationFrame.step();\n> 78 |     expect(mocks.scrollWindow).toHaveBeenCalledWith(\n     |    ^ Duplicate Assert\n  79 |       patch(axis.line, config.maxPixelScroll),\n  80 |     );\n  81 |   });","start":{"line":78,"column":4,"index":2549}},{"frame":"   97 |\n   98 |       requestAnimationFrame.step();\n>  99 |       expect(mocks.scrollWindow).toHaveBeenCalledWith(\n      |      ^ Duplicate Assert\n  100 |         patch(axis.line, minScroll),\n  101 |       );\n  102 |     }","start":{"line":99,"column":6,"index":3119}},{"frame":"   97 |\n   98 |       requestAnimationFrame.step();\n>  99 |       expect(mocks.scrollWindow).toHaveBeenCalledWith(\n      |      ^ Duplicate Assert\n  100 |         patch(axis.line, minScroll),\n  101 |       );\n  102 |     }","start":{"line":99,"column":6,"index":3119}},{"frame":"  116 |\n  117 |       requestAnimationFrame.step();\n> 118 |       expect(mocks.scrollWindow).toHaveBeenCalledWith(\n      |      ^ Duplicate Assert\n  119 |         patch(axis.line, minScroll),\n  120 |       );\n  121 |     }","start":{"line":118,"column":6,"index":3594}},{"frame":"  116 |\n  117 |       requestAnimationFrame.step();\n> 118 |       expect(mocks.scrollWindow).toHaveBeenCalledWith(\n      |      ^ Duplicate Assert\n  119 |         patch(axis.line, minScroll),\n  120 |       );\n  121 |     }","start":{"line":118,"column":6,"index":3594}},{"frame":"  135 |     );\n  136 |     requestAnimationFrame.step();\n> 137 |     expect(mocks.scrollWindow).toHaveBeenCalledWith(\n      |    ^ Duplicate Assert\n  138 |       patch(axis.line, minScroll),\n  139 |     );\n  140 |     mocks.scrollWindow.mockClear();","start":{"line":137,"column":4,"index":4151}},{"frame":"  135 |     );\n  136 |     requestAnimationFrame.step();\n> 137 |     expect(mocks.scrollWindow).toHaveBeenCalledWith(\n      |    ^ Duplicate Assert\n  138 |       patch(axis.line, minScroll),\n  139 |     );\n  140 |     mocks.scrollWindow.mockClear();","start":{"line":137,"column":4,"index":4151}},{"frame":"  152 |     // still on the min scroll\n  153 |     requestAnimationFrame.step();\n> 154 |     expect(mocks.scrollWindow).toHaveBeenCalledWith(\n      |    ^ Duplicate Assert\n  155 |       patch(axis.line, minScroll),\n  156 |     );\n  157 |     mocks.scrollWindow.mockClear();","start":{"line":154,"column":4,"index":4602}},{"frame":"  152 |     // still on the min scroll\n  153 |     requestAnimationFrame.step();\n> 154 |     expect(mocks.scrollWindow).toHaveBeenCalledWith(\n      |    ^ Duplicate Assert\n  155 |       patch(axis.line, minScroll),\n  156 |     );\n  157 |     mocks.scrollWindow.mockClear();","start":{"line":154,"column":4,"index":4602}},{"frame":"  168 |     requestAnimationFrame.step();\n  169 |     // still on the min scroll as the % change will be quite low\n> 170 |     expect(mocks.scrollWindow).toHaveBeenCalledWith(\n      |    ^ Duplicate Assert\n  171 |       patch(axis.line, minScroll),\n  172 |     );\n  173 |     mocks.scrollWindow.mockClear();","start":{"line":170,"column":4,"index":5070}},{"frame":"  168 |     requestAnimationFrame.step();\n  169 |     // still on the min scroll as the % change will be quite low\n> 170 |     expect(mocks.scrollWindow).toHaveBeenCalledWith(\n      |    ^ Duplicate Assert\n  171 |       patch(axis.line, minScroll),\n  172 |     );\n  173 |     mocks.scrollWindow.mockClear();","start":{"line":170,"column":4,"index":5070}},{"frame":"  185 |     const firstAcceleratedScroll: Position =\n  186 |       mocks.scrollWindow.mock.calls[0][0];\n> 187 |     expect(firstAcceleratedScroll[axis.line]).toBeGreaterThan(minScroll);\n      |    ^ Duplicate Assert\n  188 |     expect(firstAcceleratedScroll[axis.line]).toBeLessThan(\n  189 |       config.maxPixelScroll,\n  190 |     );","start":{"line":187,"column":4,"index":5604}},{"frame":"  186 |       mocks.scrollWindow.mock.calls[0][0];\n  187 |     expect(firstAcceleratedScroll[axis.line]).toBeGreaterThan(minScroll);\n> 188 |     expect(firstAcceleratedScroll[axis.line]).toBeLessThan(\n      |    ^ Duplicate Assert\n  189 |       config.maxPixelScroll,\n  190 |     );\n  191 |     mocks.scrollWindow.mockClear();","start":{"line":188,"column":4,"index":5678}},{"frame":"  204 |       mocks.scrollWindow.mock.calls[0][0];\n  205 |     // is greater in acceleration\n> 206 |     expect(secondAcceleratedScroll[axis.line]).toBeGreaterThan(\n      |    ^ Duplicate Assert\n  207 |       firstAcceleratedScroll[axis.line],\n  208 |     );\n  209 |     expect(secondAcceleratedScroll[axis.line]).toBeGreaterThan(minScroll);","start":{"line":206,"column":4,"index":6229}},{"frame":"  207 |       firstAcceleratedScroll[axis.line],\n  208 |     );\n> 209 |     expect(secondAcceleratedScroll[axis.line]).toBeGreaterThan(minScroll);\n      |    ^ Duplicate Assert\n  210 |     expect(secondAcceleratedScroll[axis.line]).toBeLessThan(\n  211 |       config.maxPixelScroll,\n  212 |     );","start":{"line":209,"column":4,"index":6341}},{"frame":"  208 |     );\n  209 |     expect(secondAcceleratedScroll[axis.line]).toBeGreaterThan(minScroll);\n> 210 |     expect(secondAcceleratedScroll[axis.line]).toBeLessThan(\n      |    ^ Duplicate Assert\n  211 |       config.maxPixelScroll,\n  212 |     );\n  213 |     mocks.scrollWindow.mockClear();","start":{"line":210,"column":4,"index":6416}},{"frame":"  225 |     const lastAcceleratedScroll: Position = mocks.scrollWindow.mock.calls[0][0];\n  226 |     // is greater in acceleration\n> 227 |     expect(lastAcceleratedScroll[axis.line]).toBeGreaterThan(\n      |    ^ Duplicate Assert\n  228 |       firstAcceleratedScroll[axis.line],\n  229 |     );\n  230 |     expect(lastAcceleratedScroll[axis.line]).toBeGreaterThan(minScroll);","start":{"line":227,"column":4,"index":6934}},{"frame":"  228 |       firstAcceleratedScroll[axis.line],\n  229 |     );\n> 230 |     expect(lastAcceleratedScroll[axis.line]).toBeGreaterThan(minScroll);\n      |    ^ Duplicate Assert\n  231 |     expect(lastAcceleratedScroll[axis.line]).toEqual(config.maxPixelScroll);\n  232 |   });\n  233 | });","start":{"line":230,"column":4,"index":7044}},{"frame":"  229 |     );\n  230 |     expect(lastAcceleratedScroll[axis.line]).toBeGreaterThan(minScroll);\n> 231 |     expect(lastAcceleratedScroll[axis.line]).toEqual(config.maxPixelScroll);\n      |    ^ Duplicate Assert\n  232 |   });\n  233 | });\n  234 |","start":{"line":231,"column":4,"index":7117}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":4.545,"halstead":{"bugs":1.483,"difficulty":31.75,"effort":141257.43,"length":696,"time":7847.635,"vocabulary":84,"volume":4449.053,"operands":{"distinct":72,"total":381,"identifiers":["stopAt","config","durationDampening","stopDampeningAt","startAcceleratingAt","accelerateAt","accelerationRange","forEach","state","axis","thresholds","DistanceThresholds","getDistanceThresholds","scrollableViewport","frame","onStartBoundary","Position","patch","line","size","startScrollingFrom","center","crossAxisLine","onMaxBoundary","maxScrollValueAt","originalNow","Date","now","mockNow","beforeEach","jest","fn","mockReturnValue","0","afterEach","mockClear","it","\"should not dampen scrolling if not starting in scrollable area\"","mocks","getArgsMock","scroller","FluidScroller","getScroller","start","dragTo","selection","viewport","requestAnimationFrame","flush","expect","scrollWindow","not","toHaveBeenCalled","scroll","step","toHaveBeenCalledWith","maxPixelScroll","\"should dampen if lifted in a scrollable area\"","minScroll","\"should have the minimum scroll up to a small time threshold and then accelerate to the max speed as time continues\"","mockReturnValueOnce","1","0.3","firstAcceleratedScroll","mock","calls","toBeGreaterThan","toBeLessThan","0.6","secondAcceleratedScroll","lastAcceleratedScroll","toEqual"]},"operators":{"distinct":12,"total":315,"identifiers":["const","=",".","-","()","function=>","{}","[]","let",":","+","*"]}},"paramCount":2,"sloc":{"logical":154,"physical":234}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"./util/for-each","type":"esm"},{"line":4,"path":"./util/viewport","type":"esm"},{"line":5,"path":"./util/drag-to","type":"esm"},{"line":8,"path":"../../../../../src/state/auto-scroller/fluid-scroller","type":"esm"},{"line":11,"path":"../../../../../src/state/auto-scroller/fluid-scroller/get-scroll/get-scroll-on-axis/get-distance-thresholds","type":"esm"},{"line":12,"path":"../../../../../src/state/position","type":"esm"},{"line":13,"path":"./util/get-args-mock","type":"esm"},{"line":14,"path":"../../../../../src/state/auto-scroller/fluid-scroller/config","type":"esm"},{"line":15,"path":"../../../../../src/state/auto-scroller/fluid-scroller/get-scroll/get-scroll-on-axis/min-scroll","type":"esm"}],"errors":[],"lineEnd":234,"lineStart":1,"maintainability":87.025,"methods":[{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.159,"difficulty":7.692,"effort":3678.627,"length":94,"time":204.368,"vocabulary":34,"volume":478.222,"operands":{"distinct":26,"total":50,"identifiers":["thresholds","DistanceThresholds","getDistanceThresholds","scrollableViewport","frame","axis","onStartBoundary","Position","patch","line","size","startScrollingFrom","center","crossAxisLine","onMaxBoundary","maxScrollValueAt","originalNow","Date","now","mockNow","beforeEach","afterEach","it","\"should not dampen scrolling if not starting in scrollable area\"","\"should dampen if lifted in a scrollable area\"","\"should have the minimum scroll up to a small time threshold and then accelerate to the max speed as time continues\""]},"operators":{"distinct":8,"total":44,"identifiers":["const","=","()",".","-","[]","let","function=>"]}},"paramCount":2,"sloc":{"logical":18,"physical":213},"errors":[],"lineEnd":233,"lineStart":21,"name":"<anon method-1>","paramNames":["state","axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.714,"effort":85.421,"length":15,"time":4.746,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":8,"identifiers":["mockNow","jest","fn","mockReturnValue","0","Date","now"]},"operators":{"distinct":3,"total":7,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":45,"lineStart":41,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["mockNow","mockClear","Date","now","originalNow"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","="]}},"paramCount":0,"sloc":{"logical":2,"physical":5},"errors":[],"lineEnd":51,"lineStart":47,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.136,"difficulty":4.714,"effort":1918.7,"length":80,"time":106.594,"vocabulary":34,"volume":406.997,"operands":{"distinct":28,"total":44,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","start","dragTo","selection","scrollableViewport","frame","center","viewport","state","requestAnimationFrame","flush","expect","scrollWindow","not","toHaveBeenCalled","scroll","onMaxBoundary","step","toHaveBeenCalledWith","patch","axis","line","config","maxPixelScroll"]},"operators":{"distinct":6,"total":36,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":21,"physical":29},"errors":[],"lineEnd":81,"lineStart":53,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.144,"difficulty":6.818,"effort":2949.968,"length":90,"time":163.887,"vocabulary":28,"volume":432.662,"operands":{"distinct":22,"total":50,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","start","dragTo","selection","onStartBoundary","viewport","scrollableViewport","state","requestAnimationFrame","step","expect","scrollWindow","toHaveBeenCalledWith","patch","axis","line","minScroll","onMaxBoundary"]},"operators":{"distinct":6,"total":40,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":26,"physical":40},"errors":[],"lineEnd":122,"lineStart":83,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.282,"halstead":{"bugs":0.726,"difficulty":24.419,"effort":53149.774,"length":380,"time":2952.765,"vocabulary":53,"volume":2176.61,"operands":{"distinct":43,"total":210,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","start","dragTo","selection","onMaxBoundary","viewport","scrollableViewport","state","requestAnimationFrame","step","expect","scrollWindow","toHaveBeenCalledWith","patch","axis","line","minScroll","mockClear","mockNow","mockReturnValueOnce","startAcceleratingAt","1","scroll","accelerationRange","0.3","firstAcceleratedScroll","Position","mock","calls","0","toBeGreaterThan","toBeLessThan","config","maxPixelScroll","0.6","secondAcceleratedScroll","stopAt","lastAcceleratedScroll","toEqual"]},"operators":{"distinct":10,"total":170,"identifiers":["const","=","()",".","{}",":","-","+","*","[]"]}},"paramCount":0,"sloc":{"logical":78,"physical":109},"errors":[],"lineEnd":232,"lineStart":124,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.649,"halstead":{"bugs":0.212,"difficulty":4.536,"effort":20179.633,"length":99.429,"time":1121.091,"vocabulary":12,"volume":635.579,"operands":{"distinct":10.286,"total":54.429},"operators":{"distinct":1.714,"total":45}},"paramCount":0.286,"sloc":{"logical":22,"physical":33.429}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":15.074,"halstead":{"bugs":0.198,"difficulty":7.81,"effort":10303.832,"length":111.333,"time":572.435,"vocabulary":27.833,"volume":595.22,"operands":{"distinct":21.833,"total":61.167},"operators":{"distinct":6,"total":50.167}},"paramCount":0.333,"sloc":{"logical":24.833,"physical":66.833}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/auto-scroll/fluid-scroller/lifecycle.spec.js","testCases":4,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  11 |   it('should throw if a scroll occurs before a drag as started', () => {\n  12 |     const scroller: FluidScroller = getScroller(getMocks());\n> 13 |     expect(() => scroller.scroll(base)).toThrow();\n     |    ^ Duplicate Assert\n  14 |\n  15 |     // after a drag\n  16 |     scroller.start(base);","start":{"line":13,"column":4,"index":511}},{"frame":"  11 |   it('should throw if a scroll occurs before a drag as started', () => {\n  12 |     const scroller: FluidScroller = getScroller(getMocks());\n> 13 |     expect(() => scroller.scroll(base)).toThrow();\n     |    ^ Duplicate Assert\n  14 |\n  15 |     // after a drag\n  16 |     scroller.start(base);","start":{"line":13,"column":4,"index":511}},{"frame":"  17 |     scroller.stop();\n  18 |\n> 19 |     expect(() => scroller.scroll(base)).toThrow();\n     |    ^ Duplicate Assert\n  20 |   });\n  21 |\n  22 |   it('should allow subsequent drags', () => {","start":{"line":19,"column":4,"index":631}},{"frame":"  17 |     scroller.stop();\n  18 |\n> 19 |     expect(() => scroller.scroll(base)).toThrow();\n     |    ^ Duplicate Assert\n  20 |   });\n  21 |\n  22 |   it('should allow subsequent drags', () => {","start":{"line":19,"column":4,"index":631}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":19.672,"halstead":{"bugs":0.29,"difficulty":11.76,"effort":10231.2,"length":174,"time":568.4,"vocabulary":32,"volume":870,"operands":{"distinct":25,"total":84,"identifiers":["forEach","state","base","DraggingState","dragging","it","\"should throw if a scroll occurs before a drag as started\"","scroller","FluidScroller","getScroller","getMocks","expect","scroll","toThrow","start","stop","\"should allow subsequent drags\"","run","Array","from","length","1","not","\"should allow defensive stop calls\"","\"should throw if started multiple times\""]},"operators":{"distinct":7,"total":90,"identifiers":["()","function=>","{}","const","=",".",":"]}},"paramCount":1,"sloc":{"logical":61,"physical":55}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"./util/for-each","type":"esm"},{"line":3,"path":"../../../../../src/types","type":"esm"},{"line":4,"path":"./util/get-args-mock","type":"esm"},{"line":7,"path":"../../../../../src/state/auto-scroller/fluid-scroller","type":"esm"}],"errors":[],"lineEnd":55,"lineStart":1,"maintainability":121.58,"methods":[{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.03,"difficulty":3.333,"effort":304.588,"length":24,"time":16.922,"vocabulary":14,"volume":91.377,"operands":{"distinct":9,"total":12,"identifiers":["base","DraggingState","state","dragging","it","\"should throw if a scroll occurs before a drag as started\"","\"should allow subsequent drags\"","\"should allow defensive stop calls\"","\"should throw if started multiple times\""]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","()",".","function=>"]}},"paramCount":1,"sloc":{"logical":10,"physical":46},"errors":[],"lineEnd":54,"lineStart":9,"name":"<anon method-1>","paramNames":["state"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.037,"difficulty":3.611,"effort":398.715,"length":29,"time":22.151,"vocabulary":14,"volume":110.413,"operands":{"distinct":9,"total":13,"identifiers":["scroller","FluidScroller","getScroller","getMocks","expect","toThrow","start","base","stop"]},"operators":{"distinct":5,"total":16,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":10},"errors":[],"lineEnd":20,"lineStart":11,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["scroller","scroll","base"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":13,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["scroller","scroll","base"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":19,"lineStart":19,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.033,"difficulty":3.5,"effort":343.347,"length":24,"time":19.075,"vocabulary":17,"volume":98.099,"operands":{"distinct":10,"total":10,"identifiers":["scroller","FluidScroller","getScroller","getMocks","run","Array","from","length","1","forEach"]},"operators":{"distinct":7,"total":14,"identifiers":["const","=","()","function=>",".","{}",":"]}},"paramCount":0,"sloc":{"logical":9,"physical":11},"errors":[],"lineEnd":32,"lineStart":22,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1.25,"effort":29.081,"length":9,"time":1.616,"vocabulary":6,"volume":23.265,"operands":{"distinct":4,"total":5,"identifiers":["scroller","start","base","stop"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":27,"lineStart":24,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1,"effort":20.68,"length":8,"time":1.149,"vocabulary":6,"volume":20.68,"operands":{"distinct":4,"total":4,"identifiers":["expect","run","not","toThrow"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":31,"lineStart":29,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.03,"difficulty":3.056,"effort":279.206,"length":24,"time":15.511,"vocabulary":14,"volume":91.377,"operands":{"distinct":9,"total":11,"identifiers":["scroller","FluidScroller","getScroller","getMocks","stop","run","expect","not","toThrow"]},"operators":{"distinct":5,"total":13,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":14},"errors":[],"lineEnd":47,"lineStart":34,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.015,"difficulty":2.25,"effort":98.875,"length":17,"time":5.493,"vocabulary":6,"volume":43.944,"operands":{"distinct":4,"total":9,"identifiers":["scroller","start","base","stop"]},"operators":{"distinct":2,"total":8,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":6},"errors":[],"lineEnd":45,"lineStart":40,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.023,"difficulty":2.813,"effort":197.742,"length":19,"time":10.986,"vocabulary":13,"volume":70.308,"operands":{"distinct":8,"total":9,"identifiers":["scroller","FluidScroller","getScroller","getMocks","start","base","expect","toThrow"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":53,"lineStart":49,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["scroller","start","base"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":52,"lineStart":52,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.639,"halstead":{"bugs":0.024,"difficulty":0.98,"effort":852.6,"length":14.5,"time":47.367,"vocabulary":2.667,"volume":72.5,"operands":{"distinct":2.083,"total":7},"operators":{"distinct":0.583,"total":7.5}},"paramCount":0.083,"sloc":{"logical":5.083,"physical":4.583}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.181,"halstead":{"bugs":0.018,"difficulty":2.165,"effort":155.187,"length":15.364,"time":8.622,"vocabulary":9.545,"volume":53.117,"operands":{"distinct":6,"total":7.455},"operators":{"distinct":3.545,"total":7.909}},"paramCount":0.091,"sloc":{"logical":5.364,"physical":9.273}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/auto-scroll/fluid-scroller/droppable-scrolling.spec.js","testCases":14,"smells":24,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  89 |       );\n  90 |\n> 91 |       expect(mocks.scrollDroppable).not.toHaveBeenCalled();\n     |      ^ Duplicate Assert\n  92 |       requestAnimationFrame.step();\n  93 |       expect(mocks.scrollDroppable).toHaveBeenCalled();\n  94 |     });","start":{"line":91,"column":6,"index":2920}},{"frame":"  91 |       expect(mocks.scrollDroppable).not.toHaveBeenCalled();\n  92 |       requestAnimationFrame.step();\n> 93 |       expect(mocks.scrollDroppable).toHaveBeenCalled();\n     |      ^ Duplicate Assert\n  94 |     });\n  95 |\n  96 |     it('should scroll if moving beyond the start threshold', () => {","start":{"line":93,"column":6,"index":3016}},{"frame":"  108 |       );\n  109 |\n> 110 |       expect(mocks.scrollDroppable).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  111 |\n  112 |       // only called after a frame\n  113 |       requestAnimationFrame.step();","start":{"line":110,"column":6,"index":3500}},{"frame":"  112 |       // only called after a frame\n  113 |       requestAnimationFrame.step();\n> 114 |       expect(mocks.scrollDroppable).toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  115 |       // moving forwards\n  116 |       const id: DroppableId = mocks.scrollDroppable.mock.calls[0][0];\n  117 |       const request: Position = mocks.scrollDroppable.mock.calls[0][1];","start":{"line":114,"column":6,"index":3632}},{"frame":"  132 |       // this will opt out of time dampening\n  133 |       startWithNoScroll(scroller);\n> 134 |       expect(mocks.scrollDroppable).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  135 |\n  136 |       scroller.scroll(\n  137 |         dragTo({","start":{"line":134,"column":6,"index":4424}},{"frame":"  143 |       );\n  144 |       requestAnimationFrame.step();\n> 145 |       expect(mocks.scrollDroppable).toHaveBeenCalledTimes(1);\n      |      ^ Duplicate Assert\n  146 |       const scroll1: Position = (mocks.scrollDroppable.mock.calls[0][1]: any);\n  147 |\n  148 |       scroller.scroll(","start":{"line":145,"column":6,"index":4711}},{"frame":"  155 |       );\n  156 |       requestAnimationFrame.step();\n> 157 |       expect(mocks.scrollDroppable).toHaveBeenCalledTimes(2);\n      |      ^ Duplicate Assert\n  158 |       const scroll2: Position = (mocks.scrollDroppable.mock.calls[1][1]: any);\n  159 |\n  160 |       expect(scroll1[axis.line]).toBeLessThan(scroll2[axis.line]);","start":{"line":157,"column":6,"index":5077}},{"frame":"  231 |\n  232 |       requestAnimationFrame.step();\n> 233 |       expect(mocks.scrollDroppable).toHaveBeenCalledTimes(1);\n      |      ^ Duplicate Assert\n  234 |       expect(mocks.scrollDroppable).toHaveBeenCalledWith(\n  235 |         scrollable.descriptor.id,\n  236 |         patch(axis.line, config.maxPixelScroll),","start":{"line":233,"column":6,"index":7425}},{"frame":"  232 |       requestAnimationFrame.step();\n  233 |       expect(mocks.scrollDroppable).toHaveBeenCalledTimes(1);\n> 234 |       expect(mocks.scrollDroppable).toHaveBeenCalledWith(\n      |      ^ Duplicate Assert\n  235 |         scrollable.descriptor.id,\n  236 |         patch(axis.line, config.maxPixelScroll),\n  237 |       );","start":{"line":234,"column":6,"index":7487}},{"frame":"  302 |       );\n  303 |\n> 304 |       expect(mocks.scrollDroppable).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  305 |       requestAnimationFrame.flush();\n  306 |       expect(mocks.scrollDroppable).toHaveBeenCalled();\n  307 |     });","start":{"line":304,"column":6,"index":9553}},{"frame":"  304 |       expect(mocks.scrollDroppable).not.toHaveBeenCalled();\n  305 |       requestAnimationFrame.flush();\n> 306 |       expect(mocks.scrollDroppable).toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  307 |     });\n  308 |\n  309 |     it('should scroll if moving beyond the start threshold', () => {","start":{"line":306,"column":6,"index":9650}},{"frame":"  321 |       );\n  322 |\n> 323 |       expect(mocks.scrollDroppable).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  324 |\n  325 |       // only called after a frame\n  326 |       requestAnimationFrame.step();","start":{"line":323,"column":6,"index":10137}},{"frame":"  325 |       // only called after a frame\n  326 |       requestAnimationFrame.step();\n> 327 |       expect(mocks.scrollDroppable).toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  328 |       // moving forwards\n  329 |       const request: Position = mocks.scrollDroppable.mock.calls[0][1];\n  330 |       expect(request[axis.line]).toBeLessThan(0);","start":{"line":327,"column":6,"index":10269}},{"frame":"  340 |       // this will opt out of time dampening\n  341 |       startWithNoScroll(scroller);\n> 342 |       expect(mocks.scrollDroppable).not.toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  343 |\n  344 |       scroller.scroll(\n  345 |         dragTo({","start":{"line":342,"column":6,"index":10906}},{"frame":"  351 |       );\n  352 |       requestAnimationFrame.step();\n> 353 |       expect(mocks.scrollDroppable).toHaveBeenCalledTimes(1);\n      |      ^ Duplicate Assert\n  354 |       const scroll1: Position = (mocks.scrollDroppable.mock.calls[0][1]: any);\n  355 |\n  356 |       scroller.scroll(","start":{"line":353,"column":6,"index":11191}},{"frame":"  363 |       );\n  364 |       requestAnimationFrame.step();\n> 365 |       expect(mocks.scrollDroppable).toHaveBeenCalledTimes(2);\n      |      ^ Duplicate Assert\n  366 |       const scroll2: Position = (mocks.scrollDroppable.mock.calls[1][1]: any);\n  367 |\n  368 |       expect(scroll1[axis.line]).toBeGreaterThan(scroll2[axis.line]);","start":{"line":365,"column":6,"index":11555}},{"frame":"  439 |\n  440 |       requestAnimationFrame.step();\n> 441 |       expect(mocks.scrollDroppable).toHaveBeenCalledTimes(1);\n      |      ^ Duplicate Assert\n  442 |       expect(mocks.scrollDroppable).toHaveBeenCalledWith(\n  443 |         scrolled.descriptor.id,\n  444 |         negate(patch(axis.line, config.maxPixelScroll)),","start":{"line":441,"column":6,"index":13915}},{"frame":"  440 |       requestAnimationFrame.step();\n  441 |       expect(mocks.scrollDroppable).toHaveBeenCalledTimes(1);\n> 442 |       expect(mocks.scrollDroppable).toHaveBeenCalledWith(\n      |      ^ Duplicate Assert\n  443 |         scrolled.descriptor.id,\n  444 |         negate(patch(axis.line, config.maxPixelScroll)),\n  445 |       );","start":{"line":442,"column":6,"index":13977}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  117 |       const request: Position = mocks.scrollDroppable.mock.calls[0][1];\n  118 |       expect(id).toEqual(scrollable.descriptor.id);\n> 119 |       expect(request[axis.line]).toBeGreaterThan(0);\n      |                                                 ^ Magic Number\n  120 |     });\n  121 |\n  122 |     it('should get faster the closer to the max speed point', () => {","start":{"line":119,"column":49,"index":3950}},{"frame":"  161 |\n  162 |       // validation\n> 163 |       expect(scroll1[axis.crossAxisLine]).toBe(0);\n      |                                               ^ Magic Number\n  164 |       expect(scroll2[axis.crossAxisLine]).toBe(0);\n  165 |     });\n  166 |","start":{"line":163,"column":47,"index":5348}},{"frame":"  162 |       // validation\n  163 |       expect(scroll1[axis.crossAxisLine]).toBe(0);\n> 164 |       expect(scroll2[axis.crossAxisLine]).toBe(0);\n      |                                               ^ Magic Number\n  165 |     });\n  166 |\n  167 |     it('should have the top speed at the max speed point', () => {","start":{"line":164,"column":47,"index":5399}},{"frame":"  328 |       // moving forwards\n  329 |       const request: Position = mocks.scrollDroppable.mock.calls[0][1];\n> 330 |       expect(request[axis.line]).toBeLessThan(0);\n      |                                              ^ Magic Number\n  331 |     });\n  332 |\n  333 |     it('should get faster the closer to the max speed point', () => {","start":{"line":330,"column":46,"index":10462}},{"frame":"  369 |\n  370 |       // validation\n> 371 |       expect(scroll1[axis.crossAxisLine]).toBe(0);\n      |                                               ^ Magic Number\n  372 |       expect(scroll2[axis.crossAxisLine]).toBe(0);\n  373 |     });\n  374 |","start":{"line":371,"column":47,"index":11829}},{"frame":"  370 |       // validation\n  371 |       expect(scroll1[axis.crossAxisLine]).toBe(0);\n> 372 |       expect(scroll2[axis.crossAxisLine]).toBe(0);\n      |                                               ^ Magic Number\n  373 |     });\n  374 |\n  375 |     it('should have the top speed at the max speed point', () => {","start":{"line":372,"column":47,"index":11880}}]}],"metrics":{"aggregate":{"cyclomatic":20,"cyclomaticDensity":5.208,"halstead":{"bugs":3.411,"difficulty":52.143,"effort":533510.76,"length":1561,"time":29639.487,"vocabulary":94,"volume":10231.713,"operands":{"distinct":84,"total":876,"identifiers":["forEach","axis","state","preset","scrollable","frameClient","getDroppable","thresholds","DistanceThresholds","getDistanceThresholds","borderBox","describe","\"moving forward to end of droppable\"","onStartBoundary","Position","patch","line","size","startScrollingFrom","center","crossAxisLine","onMaxBoundary","maxScrollValueAt","noScrollTarget","subtract","1","startWithNoScroll","scroller","start","dragTo","selection","viewport","unscrollableViewport","droppable","requestAnimationFrame","step","it","\"should not scroll if before the start threshold\"","mocks","getArgsMock","FluidScroller","getScroller","target","flush","expect","scrollDroppable","not","toHaveBeenCalled","\"should scroll if on the start threshold\"","\"should scroll if moving beyond the start threshold\"","add","id","DroppableId","mock","calls","0","request","toEqual","descriptor","toBeGreaterThan","\"should get faster the closer to the max speed point\"","atStartOfRange","atEndOfRange","scroll","toHaveBeenCalledTimes","scroll1","2","scroll2","toBeLessThan","toBe","\"should have the top speed at the max speed point\"","toHaveBeenCalledWith","config","maxPixelScroll","\"should have the top speed when moving beyond the max speed point\"","\"should throttle multiple scrolls into a single animation frame\"","target1","target2","\"moving backward to start of droppable\"","droppableScroll","10","scrolled","DroppableDimension","negate"]},"operators":{"distinct":10,"total":685,"identifiers":["()","function=>","{}","const","=",".","-","[]",":","+"]}},"paramCount":5,"sloc":{"logical":384,"physical":449}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"css-box-model","type":"esm"},{"line":3,"path":"./util/for-each","type":"esm"},{"line":4,"path":"../../../../../src/types","type":"esm"},{"line":5,"path":"./util/viewport","type":"esm"},{"line":6,"path":"./util/get-droppable","type":"esm"},{"line":7,"path":"./util/drag-to","type":"esm"},{"line":10,"path":"../../../../../src/state/auto-scroller/fluid-scroller","type":"esm"},{"line":13,"path":"../../../../../src/state/auto-scroller/fluid-scroller/get-scroll/get-scroll-on-axis/get-distance-thresholds","type":"esm"},{"line":19,"path":"../../../../../src/state/position","type":"esm"},{"line":20,"path":"./util/get-args-mock","type":"esm"},{"line":21,"path":"../../../../../src/state/auto-scroller/fluid-scroller/config","type":"esm"},{"line":22,"path":"../../../../../src/state/droppable/scroll-droppable","type":"esm"}],"errors":[],"lineEnd":449,"lineStart":1,"maintainability":88.276,"methods":[{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.039,"difficulty":4,"effort":467.032,"length":28,"time":25.946,"vocabulary":18,"volume":116.758,"operands":{"distinct":12,"total":16,"identifiers":["scrollable","frameClient","getDroppable","preset","thresholds","DistanceThresholds","getDistanceThresholds","borderBox","axis","describe","\"moving forward to end of droppable\"","\"moving backward to start of droppable\""]},"operators":{"distinct":6,"total":12,"identifiers":["const","=","{}","()",".","function=>"]}},"paramCount":3,"sloc":{"logical":10,"physical":425},"errors":[],"lineEnd":448,"lineStart":24,"name":"<anon method-1>","paramNames":["axis","state","preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.176,"difficulty":7.259,"effort":3840.846,"length":104,"time":213.38,"vocabulary":34,"volume":529.096,"operands":{"distinct":27,"total":56,"identifiers":["onStartBoundary","Position","patch","axis","line","frameClient","borderBox","size","thresholds","startScrollingFrom","center","crossAxisLine","onMaxBoundary","maxScrollValueAt","noScrollTarget","subtract","1","startWithNoScroll","scroller","it","\"should not scroll if before the start threshold\"","\"should scroll if on the start threshold\"","\"should scroll if moving beyond the start threshold\"","\"should get faster the closer to the max speed point\"","\"should have the top speed at the max speed point\"","\"should have the top speed when moving beyond the max speed point\"","\"should throttle multiple scrolls into a single animation frame\""]},"operators":{"distinct":7,"total":48,"identifiers":["const","=","()",".","-","[]","function=>"]}},"paramCount":0,"sloc":{"logical":23,"physical":209},"errors":[],"lineEnd":239,"lineStart":31,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.029,"difficulty":2.167,"effort":190.667,"length":22,"time":10.593,"vocabulary":16,"volume":88,"operands":{"distinct":12,"total":13,"identifiers":["scroller","start","dragTo","selection","noScrollTarget","viewport","unscrollableViewport","droppable","scrollable","state","requestAnimationFrame","step"]},"operators":{"distinct":4,"total":9,"identifiers":["()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":7,"physical":11},"errors":[],"lineEnd":58,"lineStart":48,"name":"<anon method-3>","paramNames":["scroller"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.096,"difficulty":3.556,"effort":1022.331,"length":57,"time":56.796,"vocabulary":33,"volume":287.53,"operands":{"distinct":27,"total":32,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target","Position","subtract","onStartBoundary","patch","axis","line","1","start","dragTo","selection","viewport","unscrollableViewport","droppable","scrollable","state","requestAnimationFrame","flush","expect","scrollDroppable","not","toHaveBeenCalled"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":16,"physical":17},"errors":[],"lineEnd":76,"lineStart":60,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.081,"difficulty":4.2,"effort":1026.576,"length":52,"time":57.032,"vocabulary":26,"volume":244.423,"operands":{"distinct":20,"total":28,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","start","dragTo","selection","onStartBoundary","viewport","unscrollableViewport","droppable","scrollable","state","expect","scrollDroppable","not","toHaveBeenCalled","requestAnimationFrame","step"]},"operators":{"distinct":6,"total":24,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":17},"errors":[],"lineEnd":94,"lineStart":78,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.212,"difficulty":6.222,"effort":3950.321,"length":117,"time":219.462,"vocabulary":43,"volume":634.873,"operands":{"distinct":36,"total":64,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target","Position","add","onStartBoundary","patch","axis","line","1","start","dragTo","selection","viewport","unscrollableViewport","droppable","scrollable","state","expect","scrollDroppable","not","toHaveBeenCalled","requestAnimationFrame","step","id","DroppableId","mock","calls","0","request","toEqual","descriptor","toBeGreaterThan"]},"operators":{"distinct":7,"total":53,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":24,"physical":25},"errors":[],"lineEnd":120,"lineStart":96,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.703,"halstead":{"bugs":0.318,"difficulty":8.4,"effort":8025.27,"length":172,"time":445.848,"vocabulary":47,"volume":955.389,"operands":{"distinct":40,"total":96,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","atStartOfRange","Position","onStartBoundary","atEndOfRange","subtract","onMaxBoundary","patch","axis","line","1","startWithNoScroll","expect","scrollDroppable","not","toHaveBeenCalled","scroll","dragTo","selection","viewport","unscrollableViewport","droppable","scrollable","state","requestAnimationFrame","step","toHaveBeenCalledTimes","scroll1","mock","calls","0","2","scroll2","toBeLessThan","crossAxisLine","toBe"]},"operators":{"distinct":7,"total":76,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":37,"physical":44},"errors":[],"lineEnd":165,"lineStart":122,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.098,"difficulty":3.667,"effort":1072.774,"length":58,"time":59.599,"vocabulary":33,"volume":292.575,"operands":{"distinct":27,"total":33,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","startWithNoScroll","scroll","dragTo","selection","onMaxBoundary","viewport","unscrollableViewport","droppable","scrollable","state","requestAnimationFrame","step","expect","scrollDroppable","toHaveBeenCalledWith","descriptor","id","patch","axis","line","config","maxPixelScroll"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":19},"errors":[],"lineEnd":185,"lineStart":167,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.123,"difficulty":3.968,"effort":1467.553,"length":71,"time":81.531,"vocabulary":37,"volume":369.871,"operands":{"distinct":31,"total":41,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target","Position","add","onMaxBoundary","patch","axis","line","1","startWithNoScroll","scroll","dragTo","selection","viewport","unscrollableViewport","droppable","scrollable","state","requestAnimationFrame","step","expect","scrollDroppable","toHaveBeenCalledWith","descriptor","id","config","maxPixelScroll"]},"operators":{"distinct":6,"total":30,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":18,"physical":20},"errors":[],"lineEnd":206,"lineStart":187,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.198,"difficulty":5.571,"effort":3313.263,"length":111,"time":184.07,"vocabulary":41,"volume":594.688,"operands":{"distinct":35,"total":65,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target1","Position","add","onStartBoundary","patch","axis","line","1","target2","subtract","onMaxBoundary","startWithNoScroll","scroll","dragTo","selection","viewport","unscrollableViewport","droppable","scrollable","state","requestAnimationFrame","step","expect","scrollDroppable","toHaveBeenCalledTimes","toHaveBeenCalledWith","descriptor","id","config","maxPixelScroll"]},"operators":{"distinct":6,"total":46,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":29,"physical":31},"errors":[],"lineEnd":238,"lineStart":208,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.216,"difficulty":7.106,"effort":4613.789,"length":122,"time":256.322,"vocabulary":40,"volume":649.275,"operands":{"distinct":33,"total":67,"identifiers":["droppableScroll","Position","patch","axis","line","10","scrolled","DroppableDimension","scrollDroppable","scrollable","onStartBoundary","frameClient","borderBox","start","thresholds","startScrollingFrom","center","crossAxisLine","onMaxBoundary","maxScrollValueAt","noScrollTarget","add","1","startWithNoScroll","scroller","it","\"should not scroll if before the start threshold\"","\"should scroll if on the start threshold\"","\"should scroll if moving beyond the start threshold\"","\"should get faster the closer to the max speed point\"","\"should have the top speed at the max speed point\"","\"should have the top speed when moving beyond the max speed point\"","\"should throttle multiple scrolls into a single animation frame\""]},"operators":{"distinct":7,"total":55,"identifiers":["const","=","()",".","+","[]","function=>"]}},"paramCount":0,"sloc":{"logical":27,"physical":207},"errors":[],"lineEnd":447,"lineStart":241,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.029,"difficulty":2.167,"effort":190.667,"length":22,"time":10.593,"vocabulary":16,"volume":88,"operands":{"distinct":12,"total":13,"identifiers":["scroller","start","dragTo","selection","noScrollTarget","viewport","unscrollableViewport","droppable","scrolled","state","requestAnimationFrame","step"]},"operators":{"distinct":4,"total":9,"identifiers":["()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":7,"physical":11},"errors":[],"lineEnd":271,"lineStart":261,"name":"<anon method-12>","paramNames":["scroller"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.096,"difficulty":3.556,"effort":1022.331,"length":57,"time":56.796,"vocabulary":33,"volume":287.53,"operands":{"distinct":27,"total":32,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target","Position","add","onStartBoundary","patch","axis","line","1","start","dragTo","selection","viewport","unscrollableViewport","droppable","scrolled","state","requestAnimationFrame","flush","expect","scrollDroppable","not","toHaveBeenCalled"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":16,"physical":17},"errors":[],"lineEnd":289,"lineStart":273,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.081,"difficulty":4.2,"effort":1026.576,"length":52,"time":57.032,"vocabulary":26,"volume":244.423,"operands":{"distinct":20,"total":28,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","start","dragTo","selection","onStartBoundary","viewport","unscrollableViewport","droppable","scrolled","state","expect","scrollDroppable","not","toHaveBeenCalled","requestAnimationFrame","flush"]},"operators":{"distinct":6,"total":24,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":17},"errors":[],"lineEnd":307,"lineStart":291,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.16,"difficulty":5.469,"effort":2630.313,"length":91,"time":146.129,"vocabulary":39,"volume":480.972,"operands":{"distinct":32,"total":50,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target","Position","subtract","onStartBoundary","patch","axis","line","1","start","dragTo","selection","viewport","unscrollableViewport","droppable","scrolled","state","expect","scrollDroppable","not","toHaveBeenCalled","requestAnimationFrame","step","request","mock","calls","0","toBeLessThan"]},"operators":{"distinct":7,"total":41,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":21,"physical":23},"errors":[],"lineEnd":331,"lineStart":309,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.703,"halstead":{"bugs":0.318,"difficulty":8.4,"effort":8025.27,"length":172,"time":445.848,"vocabulary":47,"volume":955.389,"operands":{"distinct":40,"total":96,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","atStartOfRange","Position","onStartBoundary","atEndOfRange","add","onMaxBoundary","patch","axis","line","1","startWithNoScroll","expect","scrollDroppable","not","toHaveBeenCalled","scroll","dragTo","selection","viewport","unscrollableViewport","droppable","scrolled","state","requestAnimationFrame","step","toHaveBeenCalledTimes","scroll1","mock","calls","0","2","scroll2","toBeGreaterThan","crossAxisLine","toBe"]},"operators":{"distinct":7,"total":76,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":37,"physical":41},"errors":[],"lineEnd":373,"lineStart":333,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.102,"difficulty":3.643,"effort":1111.974,"length":60,"time":61.776,"vocabulary":34,"volume":305.248,"operands":{"distinct":28,"total":34,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","startWithNoScroll","scroll","dragTo","selection","onMaxBoundary","viewport","unscrollableViewport","droppable","scrolled","state","requestAnimationFrame","step","expect","scrollDroppable","toHaveBeenCalledWith","descriptor","id","negate","patch","axis","line","config","maxPixelScroll"]},"operators":{"distinct":6,"total":26,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":16,"physical":19},"errors":[],"lineEnd":393,"lineStart":375,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.128,"difficulty":3.938,"effort":1508.451,"length":73,"time":83.803,"vocabulary":38,"volume":383.099,"operands":{"distinct":32,"total":42,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target","Position","subtract","onMaxBoundary","patch","axis","line","1","startWithNoScroll","scroll","dragTo","selection","viewport","unscrollableViewport","droppable","scrolled","state","requestAnimationFrame","step","expect","scrollDroppable","toHaveBeenCalledWith","descriptor","id","negate","config","maxPixelScroll"]},"operators":{"distinct":6,"total":31,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":19,"physical":20},"errors":[],"lineEnd":414,"lineStart":395,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.203,"difficulty":5.5,"effort":3351.325,"length":113,"time":186.185,"vocabulary":42,"volume":609.332,"operands":{"distinct":36,"total":66,"identifiers":["mocks","getArgsMock","scroller","FluidScroller","getScroller","target1","Position","subtract","onStartBoundary","patch","axis","line","1","target2","add","onMaxBoundary","startWithNoScroll","scroll","dragTo","selection","viewport","unscrollableViewport","droppable","scrolled","state","requestAnimationFrame","step","expect","scrollDroppable","toHaveBeenCalledTimes","toHaveBeenCalledWith","descriptor","id","negate","config","maxPixelScroll"]},"operators":{"distinct":6,"total":47,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":30,"physical":31},"errors":[],"lineEnd":446,"lineStart":416,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.26,"halstead":{"bugs":0.171,"difficulty":2.607,"effort":26675.538,"length":78.05,"time":1481.974,"vocabulary":4.7,"volume":511.586,"operands":{"distinct":4.2,"total":43.8},"operators":{"distinct":0.5,"total":34.25}},"paramCount":0.25,"sloc":{"logical":19.2,"physical":22.45}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":6.174,"halstead":{"bugs":0.142,"difficulty":4.894,"effort":2518.807,"length":81.789,"time":139.934,"vocabulary":33.842,"volume":427.183,"operands":{"distinct":27.737,"total":45.895},"operators":{"distinct":6.105,"total":35.895}},"paramCount":0.263,"sloc":{"logical":20.105,"physical":63.368}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/state/auto-scroll/fluid-scroller/util/for-each.js","testCases":0,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  14 |\n  15 | export default (block: BlockFn) => {\n> 16 |   [vertical, horizontal].forEach((axis: Axis) => {\n     |                         ^ Conditional Test Logic\n  17 |     describe(`on the ${axis.direction} axis`, () => {\n  18 |       beforeEach(() => {\n  19 |         requestAnimationFrame.reset();","start":{"line":16,"column":25,"index":469}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":30.435,"halstead":{"bugs":0.133,"difficulty":8.462,"effort":3368.405,"length":77,"time":187.134,"vocabulary":36,"volume":398.084,"operands":{"distinct":26,"total":44,"identifiers":["BlockFnArgs","axis","Axis","preset","Object","state","BlockFn","args","block","vertical","horizontal","forEach","describe","direction","on the "," axis","beforeEach","requestAnimationFrame","reset","jest","useFakeTimers","afterEach","useRealTimers","afterAll","getPreset","getSimpleStatePreset"]},"operators":{"distinct":10,"total":33,"identifiers":["function=>","()",".","[]",",","``","${}","const","=","{}"]}},"paramCount":2,"sloc":{"logical":23,"physical":37}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../../../../../src/state/axis","type":"esm"},{"line":3,"path":"../../../../../../src/types","type":"esm"},{"line":4,"path":"../../../../../util/dimension","type":"esm"},{"line":5,"path":"../../../../../util/get-simple-state-preset","type":"esm"}],"errors":[],"lineEnd":37,"lineStart":1,"maintainability":130.606,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["vertical","horizontal","forEach","axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()",".","[]",",","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":22},"errors":[],"lineEnd":36,"lineStart":15,"name":"<anon method-1>","paramNames":["block"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":2.5,"effort":83.048,"length":10,"time":4.614,"vocabulary":10,"volume":33.219,"operands":{"distinct":5,"total":5,"identifiers":["describe","axis","direction","on the "," axis"]},"operators":{"distinct":5,"total":5,"identifiers":["()","``","${}",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":20},"errors":[],"lineEnd":35,"lineStart":16,"name":"<anon method-2>","paramNames":["axis"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.038,"difficulty":4.444,"effort":507.647,"length":30,"time":28.203,"vocabulary":14,"volume":114.221,"operands":{"distinct":9,"total":16,"identifiers":["beforeEach","afterEach","afterAll","preset","getPreset","axis","state","getSimpleStatePreset","block"]},"operators":{"distinct":5,"total":14,"identifiers":["()","function=>","const","=","{}"]}},"paramCount":0,"sloc":{"logical":14,"physical":18},"errors":[],"lineEnd":34,"lineStart":17,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1,"effort":20.68,"length":8,"time":1.149,"vocabulary":6,"volume":20.68,"operands":{"distinct":4,"total":4,"identifiers":["requestAnimationFrame","reset","jest","useFakeTimers"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":21,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["jest","useRealTimers"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":24,"lineStart":22,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["requestAnimationFrame","reset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":28,"lineStart":26,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.019,"difficulty":1.209,"effort":481.201,"length":11,"time":26.733,"vocabulary":5.143,"volume":56.869,"operands":{"distinct":3.714,"total":6.286},"operators":{"distinct":1.429,"total":4.714}},"paramCount":0.286,"sloc":{"logical":3.286,"physical":5.286}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":59.524,"halstead":{"bugs":0.012,"difficulty":2.074,"effort":116.45,"length":10.833,"time":6.469,"vocabulary":7.833,"volume":35.441,"operands":{"distinct":4.333,"total":5.5},"operators":{"distinct":3.5,"total":5.333}},"paramCount":0.333,"sloc":{"logical":3.667,"physical":11.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/responders-timing.spec.js","testCases":1,"smells":9,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"   97 |\n   98 |   // clearing the initial render before a drag\n>  99 |   expect(onItemRender).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  100 |   renderTime = null;\n  101 |   onItemRender.mockClear();\n  102 |","start":{"line":99,"column":2,"index":3167}},{"frame":"  122 |   expect(responders.onBeforeDragStart).toHaveBeenCalledTimes(1);\n  123 |   expect(responders.onDragStart).toHaveBeenCalledTimes(1);\n> 124 |   expect(onItemRender).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  125 |   unmount();\n  126 | });\n  127 |","start":{"line":124,"column":2,"index":3990}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  46 |   const responders: Responders = {\n  47 |     onBeforeDragStart: jest.fn().mockImplementation(() => {\n> 48 |       invariant(!onBeforeDragStartTime, 'onBeforeDragStartTime already set');\n     |      ^ Eager Test\n  49 |       onBeforeDragStartTime = performance.now();\n  50 |     }),\n  51 |     onDragStart: jest.fn().mockImplementation(() => {","start":{"line":48,"column":6,"index":1531}},{"frame":"  50 |     }),\n  51 |     onDragStart: jest.fn().mockImplementation(() => {\n> 52 |       invariant(!onDragStartTime, 'onDragStartTime already set');\n     |      ^ Eager Test\n  53 |       onDragStartTime = performance.now();\n  54 |     }),\n  55 |     onDragEnd: jest.fn(),","start":{"line":52,"column":6,"index":1720}},{"frame":"  56 |   };\n  57 |   const onItemRender = jest.fn().mockImplementation(() => {\n> 58 |     invariant(!renderTime, 'renderTime already set');\n     |    ^ Eager Test\n  59 |     renderTime = performance.now();\n  60 |   });\n  61 |   // Both list and item will have the same dimensions","start":{"line":58,"column":4,"index":1926}},{"frame":"  103 |   // start a drag\n  104 |   const handle: HTMLElement = getByTestId('drag-handle');\n> 105 |   simpleLift(keyboard, handle);\n      |  ^ Eager Test\n  106 |   // flushing onDragStart\n  107 |   jest.runOnlyPendingTimers();\n  108 |","start":{"line":105,"column":2,"index":3342}},{"frame":"  108 |\n  109 |   // checking values are set\n> 110 |   invariant(onBeforeDragStartTime, 'onBeforeDragStartTime should be set');\n      |  ^ Eager Test\n  111 |   invariant(onDragStartTime, 'onDragStartTime should be set');\n  112 |   invariant(renderTime, 'renderTime should be set');\n  113 |","start":{"line":110,"column":2,"index":3461}},{"frame":"  109 |   // checking values are set\n  110 |   invariant(onBeforeDragStartTime, 'onBeforeDragStartTime should be set');\n> 111 |   invariant(onDragStartTime, 'onDragStartTime should be set');\n      |  ^ Eager Test\n  112 |   invariant(renderTime, 'renderTime should be set');\n  113 |\n  114 |   // expected order","start":{"line":111,"column":2,"index":3536}},{"frame":"  110 |   invariant(onBeforeDragStartTime, 'onBeforeDragStartTime should be set');\n  111 |   invariant(onDragStartTime, 'onDragStartTime should be set');\n> 112 |   invariant(renderTime, 'renderTime should be set');\n      |  ^ Eager Test\n  113 |\n  114 |   // expected order\n  115 |   // 1. onBeforeDragStart","start":{"line":112,"column":2,"index":3599}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":14.286,"halstead":{"bugs":0.639,"difficulty":14.213,"effort":27267.586,"length":297,"time":1514.866,"vocabulary":88,"volume":1918.451,"operands":{"distinct":75,"total":164,"identifiers":["ItemProps","provided","DraggableProvided","onRender","Function","Item","React","Component","render","props","\"drag-handle\"","innerRef","draggableProps","dragHandleProps","beforeEach","jest","useFakeTimers","afterEach","useRealTimers","it","\"should call the onBeforeDragStart before connected components are updated, and onDragStart after\"","onBeforeDragStartTime","DOMHighResTimeStamp","null","onDragStartTime","renderTime","responders","Responders","onBeforeDragStart","fn","mockImplementation","invariant","\"onBeforeDragStartTime already set\"","performance","now","onDragStart","\"onDragStartTime already set\"","onDragEnd","onItemRender","\"renderTime already set\"","spyOn","Element","prototype","\"getBoundingClientRect\"","getRect","top","0","left","right","100","bottom","window","\"getComputedStyle\"","getComputedSpacing","getByTestId","unmount","\"droppable\"","droppableProvided","droppableProps","\"draggable\"","draggableProvided","placeholder","expect","toHaveBeenCalledTimes","1","mockClear","handle","HTMLElement","simpleLift","keyboard","runOnlyPendingTimers","\"onBeforeDragStartTime should be set\"","\"onDragStartTime should be set\"","\"renderTime should be set\"","toBeLessThan"]},"operators":{"distinct":13,"total":133,"identifiers":["class","extends",".","()","this","const","=","return","function=>","let","{}",":","! (prefix)"]}},"paramCount":2,"sloc":{"logical":84,"physical":127}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[{"aggregate":{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.037,"difficulty":4.5,"effort":504,"length":28,"time":28,"vocabulary":16,"volume":112,"operands":{"distinct":10,"total":15,"identifiers":["ItemProps","render","props","onRender","provided","DraggableProvided","\"drag-handle\"","innerRef","draggableProps","dragHandleProps"]},"operators":{"distinct":6,"total":13,"identifiers":["()",".","this","const","=","return"]}},"paramCount":0,"sloc":{"logical":4,"physical":16}},"errors":[],"lineEnd":33,"lineStart":18,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.033,"difficulty":4.875,"effort":482.582,"length":26,"time":26.81,"vocabulary":14,"volume":98.991,"operands":{"distinct":8,"total":13,"identifiers":["props","onRender","provided","DraggableProvided","\"drag-handle\"","innerRef","draggableProps","dragHandleProps"]},"operators":{"distinct":6,"total":13,"identifiers":["()",".","this","const","=","return"]}},"paramCount":0,"sloc":{"logical":3,"physical":14},"errors":[],"lineEnd":32,"lineStart":19,"name":"render","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":0.5,"cyclomaticDensity":12.5,"halstead":{"bugs":0.019,"difficulty":2.25,"effort":252,"length":14,"time":14,"vocabulary":8,"volume":56,"operands":{"distinct":5,"total":7.5},"operators":{"distinct":3,"total":6.5}},"paramCount":0,"sloc":{"logical":2,"physical":8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.033,"difficulty":4.875,"effort":482.582,"length":26,"time":26.81,"vocabulary":14,"volume":98.991,"operands":{"distinct":8,"total":13},"operators":{"distinct":6,"total":13}},"paramCount":0,"sloc":{"logical":3,"physical":14}},"name":"Item","superClassName":"<computed~React.Component>","maintainability":132.07}],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"css-box-model","type":"esm"},{"line":4,"path":"@testing-library/react","type":"esm"},{"line":5,"path":"../../../src/invariant","type":"esm"},{"line":6,"path":"../../../src","type":"esm"},{"line":7,"path":"../../util/dimension","type":"esm"},{"line":8,"path":"../../../src/view/draggable/draggable-types","type":"esm"},{"line":9,"path":"../../../src/view/droppable/droppable-types","type":"esm"},{"line":10,"path":"../../../src/types","type":"esm"},{"line":11,"path":"./util/controls","type":"esm"}],"errors":[],"lineEnd":127,"lineStart":1,"maintainability":113.045,"methods":[{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["jest","useFakeTimers"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":37,"lineStart":35,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["jest","useRealTimers"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":40,"lineStart":38,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.961,"halstead":{"bugs":0.324,"difficulty":9.4,"effort":9134.765,"length":174,"time":507.487,"vocabulary":48,"volume":971.783,"operands":{"distinct":40,"total":94,"identifiers":["onBeforeDragStartTime","DOMHighResTimeStamp","null","onDragStartTime","renderTime","responders","Responders","onBeforeDragStart","jest","fn","mockImplementation","onDragStart","onDragEnd","onItemRender","spyOn","Element","prototype","\"getBoundingClientRect\"","window","\"getComputedStyle\"","getByTestId","unmount","render","\"droppable\"","droppableProvided","expect","toHaveBeenCalledTimes","1","mockClear","handle","HTMLElement","\"drag-handle\"","simpleLift","keyboard","runOnlyPendingTimers","invariant","\"onBeforeDragStartTime should be set\"","\"onDragStartTime should be set\"","\"renderTime should be set\"","toBeLessThan"]},"operators":{"distinct":8,"total":80,"identifiers":["let","=","const","{}",":","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":51,"physical":85},"errors":[],"lineEnd":126,"lineStart":42,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.012,"difficulty":2.4,"effort":83.686,"length":11,"time":4.649,"vocabulary":9,"volume":34.869,"operands":{"distinct":5,"total":6,"identifiers":["invariant","onBeforeDragStartTime","\"onBeforeDragStartTime already set\"","performance","now"]},"operators":{"distinct":4,"total":5,"identifiers":["()","! (prefix)","=","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":50,"lineStart":47,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.012,"difficulty":2.4,"effort":83.686,"length":11,"time":4.649,"vocabulary":9,"volume":34.869,"operands":{"distinct":5,"total":6,"identifiers":["invariant","onDragStartTime","\"onDragStartTime already set\"","performance","now"]},"operators":{"distinct":4,"total":5,"identifiers":["()","! (prefix)","=","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":54,"lineStart":51,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.012,"difficulty":2.4,"effort":83.686,"length":11,"time":4.649,"vocabulary":9,"volume":34.869,"operands":{"distinct":5,"total":6,"identifiers":["invariant","renderTime","\"renderTime already set\"","performance","now"]},"operators":{"distinct":4,"total":5,"identifiers":["()","! (prefix)","=","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":60,"lineStart":57,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["getRect","top","0","left","right","100","bottom"]},"operators":{"distinct":3,"total":6,"identifiers":["()","{}",":"]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":70,"lineStart":64,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":1,"effort":4.755,"length":3,"time":0.264,"vocabulary":3,"volume":4.755,"operands":{"distinct":1,"total":1,"identifiers":["getComputedSpacing"]},"operators":{"distinct":2,"total":2,"identifiers":["()","{}"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":76,"lineStart":76,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.014,"difficulty":1.286,"effort":52.983,"length":13,"time":2.944,"vocabulary":9,"volume":41.209,"operands":{"distinct":7,"total":9,"identifiers":["droppableProvided","innerRef","droppableProps","\"draggable\"","0","draggableProvided","placeholder"]},"operators":{"distinct":2,"total":4,"identifiers":[".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":14},"errors":[],"lineEnd":93,"lineStart":80,"name":"<anon method-9>","paramNames":["droppableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["onItemRender","draggableProvided"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":89,"lineStart":87,"name":"<anon method-10>","paramNames":["draggableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.19,"halstead":{"bugs":0.053,"difficulty":1.184,"effort":2272.299,"length":24.75,"time":126.239,"vocabulary":7.333,"volume":159.871,"operands":{"distinct":6.25,"total":13.667},"operators":{"distinct":1.083,"total":11.083}},"paramCount":0.167,"sloc":{"logical":7,"physical":10.583}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":50.178,"halstead":{"bugs":0.039,"difficulty":2.517,"effort":912.567,"length":24.909,"time":50.698,"vocabulary":11,"volume":117.198,"operands":{"distinct":7.636,"total":13.636},"operators":{"distinct":3.364,"total":11.273}},"paramCount":0.182,"sloc":{"logical":6.909,"physical":12.909}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/responders-integration.spec.js","testCases":15,"smells":12,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  34 |\n  35 | const setRefDimensions = (ref: ?HTMLElement) => {\n> 36 |   if (!ref) {\n     |  ^ Conditional Test Logic\n  37 |     return;\n  38 |   }\n  39 |","start":{"line":36,"column":2,"index":1234}}]},{"name":"Unknown Test","packageName":"unknownTest","items":[{"frame":"  261 |\n  262 |   describe('before capture', () => {\n> 263 |     it('should call the onBeforeDragCapture responder just before the drag starts', () => {\n      |    ^ Unknown Test\n  264 |       drag.start();\n  265 |\n  266 |       wasOnBeforeCaptureCalled();","start":{"column":4,"line":263}},{"frame":"  272 |\n  273 |   describe('before drag start', () => {\n> 274 |     it('should call the onBeforeDragStart responder just before the drag starts', () => {\n      |    ^ Unknown Test\n  275 |       drag.start();\n  276 |\n  277 |       wasOnBeforeDragCalled();","start":{"column":4,"line":274}},{"frame":"  297 |\n  298 |   describe('drag start', () => {\n> 299 |     it('should call the onDragStart responder when a drag starts', () => {\n      |    ^ Unknown Test\n  300 |       drag.start();\n  301 |\n  302 |       wasDragStarted();","start":{"column":4,"line":299}},{"frame":"  322 |\n  323 |   describe('drag end', () => {\n> 324 |     it('should call the onDragEnd responder when a drag ends', () => {\n      |    ^ Unknown Test\n  325 |       drag.perform();\n  326 |\n  327 |       wasDragCompleted();","start":{"column":4,"line":324}},{"frame":"  328 |     });\n  329 |\n> 330 |     it('should call the onDragEnd responder when a drag ends when instantly stopped', () => {\n      |    ^ Unknown Test\n  331 |       drag.start();\n  332 |       drag.stop();\n  333 |","start":{"column":4,"line":330}},{"frame":"  337 |\n  338 |   describe('drag cancel', () => {\n> 339 |     it('should call onDragEnd when a drag is canceled', () => {\n      |    ^ Unknown Test\n  340 |       drag.start();\n  341 |       drag.move();\n  342 |       drag.cancel();","start":{"column":4,"line":339}},{"frame":"  345 |     });\n  346 |\n> 347 |     it('should call onDragEnd when a drag is canceled instantly', () => {\n      |    ^ Unknown Test\n  348 |       drag.start();\n  349 |       drag.cancel();\n  350 |","start":{"column":4,"line":347}},{"frame":"  354 |\n  355 |   describe('unmounted mid drag', () => {\n> 356 |     it('should cancel a drag if unmounted mid drag', () => {\n      |    ^ Unknown Test\n  357 |       drag.start();\n  358 |\n  359 |       wrapper.unmount();","start":{"column":4,"line":356}},{"frame":"  364 |\n  365 |   describe('subsequent drags', () => {\n> 366 |     it('should publish subsequent drags', () => {\n      |    ^ Unknown Test\n  367 |       drag.perform();\n  368 |       wasDragStarted(1);\n  369 |       wasDragCompleted(1);","start":{"column":4,"line":366}},{"frame":"  374 |     });\n  375 |\n> 376 |     it('should publish subsequent drags after a cancel', () => {\n      |    ^ Unknown Test\n  377 |       drag.start();\n  378 |       drag.cancel();\n  379 |       wasOnBeforeDragCalled(1);","start":{"column":4,"line":376}},{"frame":"  427 |     });\n  428 |\n> 429 |     it('should allow you to change responders between drags', () => {\n      |    ^ Unknown Test\n  430 |       const newResponders: Responders = {\n  431 |         onDragStart: jest.fn(),\n  432 |         onDragEnd: jest.fn(),","start":{"column":4,"line":429}}]}],"metrics":{"aggregate":{"cyclomatic":51,"cyclomaticDensity":17.114,"halstead":{"bugs":2.492,"difficulty":31.543,"effort":235777.264,"length":1026,"time":13098.737,"vocabulary":156,"volume":7474.823,"operands":{"distinct":140,"total":552,"identifiers":["draggableId","DraggableId","\"drag-1\"","droppableId","DroppableId","\"drop-1\"","borderBox","Rect","getRect","top","0","right","100","bottom","left","setRefDimensions","ref","jest","spyOn","\"getBoundingClientRect\"","mockImplementation","window","\"getComputedStyle\"","getComputedSpacing","Props","responders","Responders","App","onBeforeCapture","onBeforeDragStart","onDragStart","onDragUpdate","onDragEnd","droppableProvided","innerRef","droppableProps","draggableProvided","\"drag-handle\"","draggableProps","dragHandleProps","describe","\"responders integration\"","wrapper","beforeEach","useFakeTimers","fn","render","console","\"warn\"","afterEach","unmount","useRealTimers","tryCleanPrototypeStubs","warn","mockRestore","drag","getHandle","HTMLElement","handle","getByTestId","start","simpleLift","mouse","runOnlyPendingTimers","move","fireEvent","mouseMove","x","y","sloppyClickThreshold","2","requestAnimationFrame","step","stop","drop","cancel","perform","expected","source","DraggableLocation","index","DragStart","type","\"DEFAULT\"","mode","\"FLUID\"","completed","DropResult","destination","combine","null","reason","\"DROP\"","cancelled","\"CANCEL\"","beforeCapture","BeforeCapture","wasOnBeforeCaptureCalled","amountOfDrags","1","provided","invariant","expect","toHaveBeenCalledTimes","mock","calls","toEqual","wasOnBeforeDragCalled","wasDragStarted","\"cannot validate if drag was started without onDragStart responder\"","wasDragCompleted","wasDragCancelled","\"before capture\"","it","\"should call the onBeforeDragCapture responder just before the drag starts\"","\"before drag start\"","\"should call the onBeforeDragStart responder just before the drag starts\"","\"should not call onDragStart while the drag is occurring\"","\"drag start\"","\"should call the onDragStart responder when a drag starts\"","\"drag end\"","\"should call the onDragEnd responder when a drag ends\"","\"should call the onDragEnd responder when a drag ends when instantly stopped\"","\"drag cancel\"","\"should call onDragEnd when a drag is canceled\"","\"should call onDragEnd when a drag is canceled instantly\"","\"unmounted mid drag\"","\"should cancel a drag if unmounted mid drag\"","\"subsequent drags\"","\"should publish subsequent drags\"","\"should publish subsequent drags after a cancel\"","\"dynamic responders\"","setResponders","rerender","\"should allow you to change responders before a drag started\"","newResponders","not","toHaveBeenCalled","\"should allow you to change onDragEnd during a drag\"","\"should allow you to change responders between drags\""]},"operators":{"distinct":16,"total":474,"identifiers":["const","=","()","{}",":","function=>","if","! (prefix)","return",".","function","let","+","... (spread)","[]","-"]}},"paramCount":16,"sloc":{"logical":298,"physical":453}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":3,"path":"react","type":"esm"},{"line":4,"path":"@testing-library/react","type":"esm"},{"line":5,"path":"css-box-model","type":"esm"},{"line":6,"path":"../../../src/invariant","type":"esm"},{"line":7,"path":"../../../src","type":"esm"},{"line":8,"path":"../../../src/view/use-sensor-marshal/sensors/use-mouse-sensor","type":"esm"},{"line":17,"path":"../../../src/types","type":"esm"},{"line":18,"path":"../../../src/view/draggable/draggable-types","type":"esm"},{"line":19,"path":"../../../src/view/droppable/droppable-types","type":"esm"},{"line":20,"path":"../../util/dimension","type":"esm"},{"line":21,"path":"../../util/try-clean-prototype-stubs","type":"esm"},{"line":22,"path":"./util/controls","type":"esm"}],"errors":[],"lineEnd":453,"lineStart":1,"maintainability":113.134,"methods":[{"cyclomatic":2,"cyclomaticDensity":25,"halstead":{"bugs":0.03,"difficulty":4.714,"effort":418.678,"length":24,"time":23.26,"vocabulary":13,"volume":88.811,"operands":{"distinct":7,"total":11,"identifiers":["ref","jest","spyOn","\"getBoundingClientRect\"","mockImplementation","window","\"getComputedStyle\""]},"operators":{"distinct":6,"total":13,"identifiers":["if","! (prefix)","return","()",".","function=>"]}},"paramCount":1,"sloc":{"logical":8,"physical":12},"errors":[],"lineEnd":46,"lineStart":35,"name":"<anon method-1>","paramNames":["ref"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["borderBox"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":40,"lineStart":40,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":1,"effort":4.755,"length":3,"time":0.264,"vocabulary":3,"volume":4.755,"operands":{"distinct":1,"total":1,"identifiers":["getComputedSpacing"]},"operators":{"distinct":2,"total":2,"identifiers":["()","{}"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":45,"lineStart":45,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.022,"difficulty":2.25,"effort":147.891,"length":19,"time":8.216,"vocabulary":11,"volume":65.729,"operands":{"distinct":8,"total":12,"identifiers":["responders","onBeforeCapture","onBeforeDragStart","onDragStart","onDragUpdate","onDragEnd","droppableId","droppableProvided"]},"operators":{"distinct":3,"total":7,"identifiers":["return",".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":40},"errors":[],"lineEnd":90,"lineStart":51,"name":"App","paramNames":["responders"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":1,"effort":27,"length":9,"time":1.5,"vocabulary":8,"volume":27,"operands":{"distinct":6,"total":6,"identifiers":["ref","droppableProvided","droppableProps","draggableId","0","draggableProvided"]},"operators":{"distinct":2,"total":3,"identifiers":["function=>","."]}},"paramCount":1,"sloc":{"logical":3,"physical":26},"errors":[],"lineEnd":86,"lineStart":61,"name":"<anon method-4>","paramNames":["droppableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.25,"effort":25.85,"length":8,"time":1.436,"vocabulary":6,"volume":20.68,"operands":{"distinct":4,"total":5,"identifiers":["setRefDimensions","ref","droppableProvided","innerRef"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":66,"lineStart":63,"name":"<anon method-5>","paramNames":["ref"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1.2,"effort":30.319,"length":9,"time":1.684,"vocabulary":7,"volume":25.266,"operands":{"distinct":5,"total":6,"identifiers":["\"drag-handle\"","ref","draggableProvided","draggableProps","dragHandleProps"]},"operators":{"distinct":2,"total":3,"identifiers":["function=>","."]}},"paramCount":1,"sloc":{"logical":2,"physical":13},"errors":[],"lineEnd":83,"lineStart":71,"name":"<anon method-6>","paramNames":["draggableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.25,"effort":25.85,"length":8,"time":1.436,"vocabulary":6,"volume":20.68,"operands":{"distinct":4,"total":5,"identifiers":["setRefDimensions","ref","draggableProvided","innerRef"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":77,"lineStart":74,"name":"<anon method-7>","paramNames":["ref"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.162,"difficulty":4.792,"effort":2327.783,"length":100,"time":129.321,"vocabulary":29,"volume":485.798,"operands":{"distinct":24,"total":46,"identifiers":["responders","Responders","wrapper","beforeEach","afterEach","drag","expected","wasOnBeforeCaptureCalled","amountOfDrags","1","provided","wasOnBeforeDragCalled","wasDragStarted","wasDragCompleted","wasDragCancelled","describe","\"before capture\"","\"before drag start\"","\"drag start\"","\"drag end\"","\"drag cancel\"","\"unmounted mid drag\"","\"subsequent drags\"","\"dynamic responders\""]},"operators":{"distinct":5,"total":54,"identifiers":["let","()","function=>","const","="]}},"paramCount":0,"sloc":{"logical":38,"physical":361},"errors":[],"lineEnd":452,"lineStart":92,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.076,"difficulty":5.2,"effort":1187.683,"length":52,"time":65.982,"vocabulary":21,"volume":228.401,"operands":{"distinct":15,"total":26,"identifiers":["jest","useFakeTimers","responders","onBeforeCapture","fn","onBeforeDragStart","onDragStart","onDragUpdate","onDragEnd","wrapper","render","spyOn","console","\"warn\"","mockImplementation"]},"operators":{"distinct":6,"total":26,"identifiers":["()",".","=","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":17,"physical":13},"errors":[],"lineEnd":108,"lineStart":96,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":107,"lineStart":107,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.018,"difficulty":1,"effort":53.151,"length":16,"time":2.953,"vocabulary":10,"volume":53.151,"operands":{"distinct":8,"total":8,"identifiers":["wrapper","unmount","jest","useRealTimers","tryCleanPrototypeStubs","console","warn","mockRestore"]},"operators":{"distinct":2,"total":8,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":12},"errors":[],"lineEnd":121,"lineStart":110,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.041,"difficulty":8,"effort":975.11,"length":34,"time":54.173,"vocabulary":12,"volume":121.889,"operands":{"distinct":6,"total":16,"identifiers":["getHandle","start","move","stop","cancel","perform"]},"operators":{"distinct":6,"total":18,"identifiers":["function","const","=","function=>","return","{}"]}},"paramCount":0,"sloc":{"logical":17,"physical":41},"errors":[],"lineEnd":163,"lineStart":123,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3.5,"effort":139.521,"length":12,"time":7.751,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":7,"identifiers":["HTMLElement","handle","wrapper","getByTestId","\"drag-handle\""]},"operators":{"distinct":5,"total":5,"identifiers":["const","=","()",".","return"]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":127,"lineStart":124,"name":"getHandle","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.008,"difficulty":1,"effort":25.266,"length":9,"time":1.404,"vocabulary":7,"volume":25.266,"operands":{"distinct":5,"total":5,"identifiers":["simpleLift","mouse","getHandle","jest","runOnlyPendingTimers"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":6},"errors":[],"lineEnd":134,"lineStart":129,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.031,"difficulty":2.5,"effort":235.029,"length":23,"time":13.057,"vocabulary":17,"volume":94.012,"operands":{"distinct":12,"total":12,"identifiers":["fireEvent","mouseMove","getHandle","x","0","y","sloppyClickThreshold","2","requestAnimationFrame","step","jest","runOnlyPendingTimers"]},"operators":{"distinct":5,"total":11,"identifiers":["()",".","{}",":","+"]}},"paramCount":0,"sloc":{"logical":6,"physical":11},"errors":[],"lineEnd":146,"lineStart":136,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1,"effort":13.932,"length":6,"time":0.774,"vocabulary":5,"volume":13.932,"operands":{"distinct":3,"total":3,"identifiers":["mouse","drop","getHandle"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":150,"lineStart":148,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1,"effort":13.932,"length":6,"time":0.774,"vocabulary":5,"volume":13.932,"operands":{"distinct":3,"total":3,"identifiers":["mouse","cancel","getHandle"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":154,"lineStart":152,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.004,"difficulty":0.5,"effort":6,"length":6,"time":0.333,"vocabulary":4,"volume":12,"operands":{"distinct":3,"total":3,"identifiers":["start","move","stop"]},"operators":{"distinct":1,"total":3,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":160,"lineStart":156,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.131,"difficulty":7.457,"effort":2927.067,"length":80,"time":162.615,"vocabulary":30,"volume":392.551,"operands":{"distinct":23,"total":49,"identifiers":["source","DraggableLocation","droppableId","index","0","start","DragStart","draggableId","type","\"DEFAULT\"","mode","\"FLUID\"","completed","DropResult","destination","combine","null","reason","\"DROP\"","cancelled","\"CANCEL\"","beforeCapture","BeforeCapture"]},"operators":{"distinct":7,"total":31,"identifiers":["const","=","{}",":","... (spread)",".","return"]}},"paramCount":0,"sloc":{"logical":24,"physical":38},"errors":[],"lineEnd":202,"lineStart":165,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.048,"difficulty":2.923,"effort":418.179,"length":35,"time":23.232,"vocabulary":17,"volume":143.061,"operands":{"distinct":13,"total":19,"identifiers":["invariant","provided","onBeforeCapture","expect","toHaveBeenCalledTimes","amountOfDrags","mock","calls","1","0","toEqual","expected","beforeCapture"]},"operators":{"distinct":4,"total":16,"identifiers":["()",".","[]","-"]}},"paramCount":2,"sloc":{"logical":5,"physical":11},"errors":[],"lineEnd":214,"lineStart":204,"name":"<anon method-19>","paramNames":["amountOfDrags","provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.048,"difficulty":2.923,"effort":418.179,"length":35,"time":23.232,"vocabulary":17,"volume":143.061,"operands":{"distinct":13,"total":19,"identifiers":["invariant","provided","onBeforeDragStart","expect","toHaveBeenCalledTimes","amountOfDrags","mock","calls","1","0","toEqual","expected","start"]},"operators":{"distinct":4,"total":16,"identifiers":["()",".","[]","-"]}},"paramCount":2,"sloc":{"logical":5,"physical":11},"errors":[],"lineEnd":226,"lineStart":216,"name":"<anon method-20>","paramNames":["amountOfDrags","provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.05,"difficulty":2.857,"effort":428.907,"length":36,"time":23.828,"vocabulary":18,"volume":150.117,"operands":{"distinct":14,"total":20,"identifiers":["invariant","provided","onDragStart","\"cannot validate if drag was started without onDragStart responder\"","expect","toHaveBeenCalledTimes","amountOfDrags","mock","calls","1","0","toEqual","expected","start"]},"operators":{"distinct":4,"total":16,"identifiers":["()",".","[]","-"]}},"paramCount":2,"sloc":{"logical":5,"physical":14},"errors":[],"lineEnd":241,"lineStart":228,"name":"<anon method-21>","paramNames":["amountOfDrags","provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.04,"difficulty":2.667,"effort":320,"length":30,"time":17.778,"vocabulary":16,"volume":120,"operands":{"distinct":12,"total":16,"identifiers":["expect","provided","onDragEnd","toHaveBeenCalledTimes","amountOfDrags","mock","calls","1","0","toEqual","expected","completed"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","[]","-"]}},"paramCount":2,"sloc":{"logical":4,"physical":10},"errors":[],"lineEnd":252,"lineStart":243,"name":"<anon method-22>","paramNames":["amountOfDrags","provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.04,"difficulty":2.667,"effort":320,"length":30,"time":17.778,"vocabulary":16,"volume":120,"operands":{"distinct":12,"total":16,"identifiers":["expect","responders","onDragEnd","toHaveBeenCalledTimes","amountOfDrags","mock","calls","1","0","toEqual","expected","cancelled"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","[]","-"]}},"paramCount":1,"sloc":{"logical":4,"physical":7},"errors":[],"lineEnd":260,"lineStart":254,"name":"<anon method-23>","paramNames":["amountOfDrags"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should call the onBeforeDragCapture responder just before the drag starts\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":10},"errors":[],"lineEnd":271,"lineStart":262,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":1.25,"effort":32.312,"length":10,"time":1.795,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":5,"identifiers":["drag","start","wasOnBeforeCaptureCalled","stop"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":8},"errors":[],"lineEnd":270,"lineStart":263,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should call the onBeforeDragStart responder just before the drag starts\"","\"should not call onDragStart while the drag is occurring\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":24},"errors":[],"lineEnd":296,"lineStart":273,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":1.25,"effort":32.312,"length":10,"time":1.795,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":5,"identifiers":["drag","start","wasOnBeforeDragCalled","stop"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":8},"errors":[],"lineEnd":281,"lineStart":274,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":1.2,"effort":98.945,"length":23,"time":5.497,"vocabulary":12,"volume":82.454,"operands":{"distinct":10,"total":12,"identifiers":["drag","start","wasOnBeforeDragCalled","move","expect","responders","onBeforeDragStart","toHaveBeenCalledTimes","1","stop"]},"operators":{"distinct":2,"total":11,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":13},"errors":[],"lineEnd":295,"lineStart":283,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should call the onDragStart responder when a drag starts\"","\"should not call onDragStart while the drag is occurring\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":24},"errors":[],"lineEnd":321,"lineStart":298,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":1.25,"effort":32.312,"length":10,"time":1.795,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":5,"identifiers":["drag","start","wasDragStarted","stop"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":8},"errors":[],"lineEnd":306,"lineStart":299,"name":"<anon method-30>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":1.2,"effort":98.945,"length":23,"time":5.497,"vocabulary":12,"volume":82.454,"operands":{"distinct":10,"total":12,"identifiers":["drag","start","wasDragStarted","move","expect","responders","onDragStart","toHaveBeenCalledTimes","1","stop"]},"operators":{"distinct":2,"total":11,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":13},"errors":[],"lineEnd":320,"lineStart":308,"name":"<anon method-31>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should call the onDragEnd responder when a drag ends\"","\"should call the onDragEnd responder when a drag ends when instantly stopped\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":14},"errors":[],"lineEnd":336,"lineStart":323,"name":"<anon method-32>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1,"effort":13.932,"length":6,"time":0.774,"vocabulary":5,"volume":13.932,"operands":{"distinct":3,"total":3,"identifiers":["drag","perform","wasDragCompleted"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":5},"errors":[],"lineEnd":328,"lineStart":324,"name":"<anon method-33>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":1.25,"effort":32.312,"length":10,"time":1.795,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":5,"identifiers":["drag","start","stop","wasDragCompleted"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":6},"errors":[],"lineEnd":335,"lineStart":330,"name":"<anon method-34>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should call onDragEnd when a drag is canceled\"","\"should call onDragEnd when a drag is canceled instantly\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":16},"errors":[],"lineEnd":353,"lineStart":338,"name":"<anon method-35>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.013,"difficulty":1.4,"effort":55.024,"length":14,"time":3.057,"vocabulary":7,"volume":39.303,"operands":{"distinct":5,"total":7,"identifiers":["drag","start","move","cancel","wasDragCancelled"]},"operators":{"distinct":2,"total":7,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":7},"errors":[],"lineEnd":345,"lineStart":339,"name":"<anon method-36>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":1.25,"effort":32.312,"length":10,"time":1.795,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":5,"identifiers":["drag","start","cancel","wasDragCancelled"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":6},"errors":[],"lineEnd":352,"lineStart":347,"name":"<anon method-37>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should cancel a drag if unmounted mid drag\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":363,"lineStart":355,"name":"<anon method-38>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":1,"effort":28.074,"length":10,"time":1.56,"vocabulary":7,"volume":28.074,"operands":{"distinct":5,"total":5,"identifiers":["drag","start","wrapper","unmount","wasDragCancelled"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":7},"errors":[],"lineEnd":362,"lineStart":356,"name":"<anon method-39>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should publish subsequent drags\"","\"should publish subsequent drags after a cancel\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":24},"errors":[],"lineEnd":388,"lineStart":365,"name":"<anon method-40>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.02,"difficulty":2,"effort":120,"length":20,"time":6.667,"vocabulary":8,"volume":60,"operands":{"distinct":6,"total":12,"identifiers":["drag","perform","wasDragStarted","1","wasDragCompleted","2"]},"operators":{"distinct":2,"total":8,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":9},"errors":[],"lineEnd":374,"lineStart":366,"name":"<anon method-41>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.036,"difficulty":1.8,"effort":193.588,"length":30,"time":10.755,"vocabulary":12,"volume":107.549,"operands":{"distinct":10,"total":18,"identifiers":["drag","start","cancel","wasOnBeforeDragCalled","1","wasDragStarted","wasDragCancelled","perform","2","wasDragCompleted"]},"operators":{"distinct":2,"total":12,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":12},"errors":[],"lineEnd":387,"lineStart":376,"name":"<anon method-42>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.019,"difficulty":2.667,"effort":150.594,"length":17,"time":8.366,"vocabulary":10,"volume":56.473,"operands":{"distinct":6,"total":8,"identifiers":["setResponders","provided","it","\"should allow you to change responders before a drag started\"","\"should allow you to change onDragEnd during a drag\"","\"should allow you to change responders between drags\""]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","function=>","()"]}},"paramCount":0,"sloc":{"logical":8,"physical":62},"errors":[],"lineEnd":451,"lineStart":390,"name":"<anon method-43>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["wrapper","rerender","provided"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":393,"lineStart":391,"name":"<anon method-44>","paramNames":["provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.077,"difficulty":5.25,"effort":1217.425,"length":52,"time":67.635,"vocabulary":22,"volume":231.89,"operands":{"distinct":16,"total":28,"identifiers":["newResponders","Responders","onDragStart","jest","fn","onDragEnd","setResponders","drag","perform","wasDragStarted","1","wasDragCompleted","expect","responders","not","toHaveBeenCalled"]},"operators":{"distinct":6,"total":24,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":13,"physical":16},"errors":[],"lineEnd":410,"lineStart":395,"name":"<anon method-45>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.059,"difficulty":4.125,"effort":735.806,"length":40,"time":40.878,"vocabulary":22,"volume":178.377,"operands":{"distinct":16,"total":22,"identifiers":["newResponders","Responders","onDragEnd","jest","fn","drag","start","setResponders","stop","wasDragStarted","1","responders","wasDragCompleted","expect","not","toHaveBeenCalled"]},"operators":{"distinct":6,"total":18,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":16},"errors":[],"lineEnd":427,"lineStart":412,"name":"<anon method-46>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.074,"difficulty":7.385,"effort":1631.204,"length":52,"time":90.622,"vocabulary":19,"volume":220.892,"operands":{"distinct":13,"total":32,"identifiers":["newResponders","Responders","onDragStart","jest","fn","onDragEnd","drag","perform","wasDragStarted","1","responders","wasDragCompleted","setResponders"]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":14,"physical":22},"errors":[],"lineEnd":450,"lineStart":429,"name":"<anon method-47>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.02,"cyclomaticDensity":0.342,"halstead":{"bugs":0.05,"difficulty":0.631,"effort":4715.545,"length":20.52,"time":261.975,"vocabulary":3.12,"volume":149.496,"operands":{"distinct":2.8,"total":11.04},"operators":{"distinct":0.32,"total":9.48}},"paramCount":0.32,"sloc":{"logical":5.96,"physical":9.06}},"methodAverage":{"cyclomatic":1.02,"cyclomaticDensity":30.143,"halstead":{"bugs":0.026,"difficulty":2.196,"effort":309.115,"length":20.02,"time":17.173,"vocabulary":10.061,"volume":76.757,"operands":{"distinct":7.122,"total":10.735},"operators":{"distinct":2.939,"total":9.286}},"paramCount":0.327,"sloc":{"logical":5.816,"physical":20.286}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/reorder-render-sync.spec.js","testCases":1,"smells":15,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  63 | class InnerList extends React.Component<InnerListProps> {\n  64 |   shouldComponentUpdate(props: InnerListProps) {\n> 65 |     if (this.props.tasks === props.tasks) {\n     |    ^ Conditional Test Logic\n  66 |       return false;\n  67 |     }\n  68 |     return true;","start":{"line":65,"column":4,"index":1724}},{"frame":"  85 |\n  86 | const setDroppableBounds = (ref: ?HTMLElement) => {\n> 87 |   if (!ref) {\n     |  ^ Conditional Test Logic\n  88 |     return;\n  89 |   }\n  90 |   // $FlowFixMe - only reliable way to do this","start":{"line":87,"column":2,"index":2325}},{"frame":"  105 |   onRender: jest.fn(),\n  106 |   setRef: (ref: ?HTMLElement) => {\n> 107 |     if (!ref) {\n      |    ^ Conditional Test Logic\n  108 |       return;\n  109 |     }\n  110 |     // $FlowFixMe - only reliable way to do this","start":{"line":107,"column":4,"index":2664}},{"frame":"  123 |   onRender: jest.fn(),\n  124 |   setRef: (ref: ?HTMLElement) => {\n> 125 |     if (!ref) {\n      |    ^ Conditional Test Logic\n  126 |       return;\n  127 |     }\n  128 |     // $FlowFixMe - only reliable way to do this","start":{"line":125,"column":4,"index":2992}},{"frame":"  145 |\n  146 |   onDragEnd = (result: DropResult) => {\n> 147 |     if (!result.destination) {\n      |    ^ Conditional Test Logic\n  148 |       return;\n  149 |     }\n  150 |     this.setState({","start":{"line":147,"column":4,"index":3397}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  189 |\n  190 |   // clearing the initial render before a drag\n> 191 |   expect(first.onRender).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  192 |   expect(second.onRender).toHaveBeenCalledTimes(1);\n  193 |   clearRenderMocks();\n  194 |","start":{"line":191,"column":2,"index":4531}},{"frame":"  190 |   // clearing the initial render before a drag\n  191 |   expect(first.onRender).toHaveBeenCalledTimes(1);\n> 192 |   expect(second.onRender).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  193 |   clearRenderMocks();\n  194 |\n  195 |   // start a drag","start":{"line":192,"column":2,"index":4582}},{"frame":"  201 |\n  202 |   // initial lift will render the first item\n> 203 |   expect(first.onRender).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  204 |   // it will also render the second item as it needs to be pushed down\n  205 |   expect(second.onRender).toHaveBeenCalledTimes(1);\n  206 |   clearRenderMocks();","start":{"line":203,"column":2,"index":4875}},{"frame":"  203 |   expect(first.onRender).toHaveBeenCalledTimes(1);\n  204 |   // it will also render the second item as it needs to be pushed down\n> 205 |   expect(second.onRender).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  206 |   clearRenderMocks();\n  207 |\n  208 |   fireEvent.keyDown(handle, { keyCode: keyCodes.arrowDown });","start":{"line":205,"column":2,"index":4997}},{"frame":"  212 |   // item1: moving down\n  213 |   // item2: moving up\n> 214 |   expect(first.onRender).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  215 |   expect(second.onRender).toHaveBeenCalledTimes(1);\n  216 |   clearRenderMocks();\n  217 |","start":{"line":214,"column":2,"index":5245}},{"frame":"  213 |   // item2: moving up\n  214 |   expect(first.onRender).toHaveBeenCalledTimes(1);\n> 215 |   expect(second.onRender).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  216 |   clearRenderMocks();\n  217 |\n  218 |   // drop (there is no animation because already in the home spot)","start":{"line":215,"column":2,"index":5296}},{"frame":"  220 |\n  221 |   // only a single render for the reorder and connected component update\n> 222 |   expect(first.onRender).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  223 |   expect(second.onRender).toHaveBeenCalledTimes(1);\n  224 |\n  225 |   // checking for no post renders","start":{"line":222,"column":2,"index":5537}},{"frame":"  221 |   // only a single render for the reorder and connected component update\n  222 |   expect(first.onRender).toHaveBeenCalledTimes(1);\n> 223 |   expect(second.onRender).toHaveBeenCalledTimes(1);\n      |  ^ Duplicate Assert\n  224 |\n  225 |   // checking for no post renders\n  226 |   clearRenderMocks();","start":{"line":223,"column":2,"index":5588}},{"frame":"  227 |   requestAnimationFrame.flush();\n  228 |   jest.runAllTimers();\n> 229 |   expect(first.onRender).toHaveBeenCalledTimes(0);\n      |  ^ Duplicate Assert\n  230 |   expect(second.onRender).toHaveBeenCalledTimes(0);\n  231 |\n  232 |   unmount();","start":{"line":229,"column":2,"index":5753}},{"frame":"  228 |   jest.runAllTimers();\n  229 |   expect(first.onRender).toHaveBeenCalledTimes(0);\n> 230 |   expect(second.onRender).toHaveBeenCalledTimes(0);\n      |  ^ Duplicate Assert\n  231 |\n  232 |   unmount();\n  233 | });","start":{"line":230,"column":2,"index":5804}}]}],"metrics":{"aggregate":{"cyclomatic":26,"cyclomaticDensity":18.571,"halstead":{"bugs":1.225,"difficulty":23.837,"effort":87626.097,"length":538,"time":4868.117,"vocabulary":114,"volume":3676.095,"operands":{"distinct":98,"total":292,"identifiers":["reorder","list","startIndex","endIndex","result","Array","from","removed","splice","1","0","Task","id","onRender","Function","setRef","TaskItemProps","task","provided","DraggableProvided","TaskItem","React","Component","render","props","\"drag-handle\"","ref","innerRef","draggableProps","dragHandleProps","InnerListProps","tasks","InnerList","shouldComponentUpdate","false","true","map","index","draggableProvided","jest","spyOn","window","\"getComputedStyle\"","mockImplementation","getComputedSpacing","setDroppableBounds","getBoundingClientRect","getRect","top","left","right","100","bottom","300","State","first","\"first\"","fn","20","second","\"second\"","30","50","initial","App","state","onDragEnd","destination","setState","source","\"droppable\"","droppableProvided","droppableProps","placeholder","it","\"should call the onBeforeDragStart before connected components are updated, and onDragStart after\"","useFakeTimers","clearRenderMocks","mockClear","getAllByTestId","unmount","expect","toHaveBeenCalledTimes","handle","HTMLElement","simpleLift","keyboard","runOnlyPendingTimers","fireEvent","keyDown","keyCode","keyCodes","arrowDown","requestAnimationFrame","step","drop","flush","runAllTimers"]},"operators":{"distinct":16,"total":246,"identifiers":["const","=","function=>","()",".","[]","return","class","extends","this","if","===","{}","! (prefix)",":",","]}},"paramCount":14,"sloc":{"logical":140,"physical":234}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[{"aggregate":{"cyclomatic":2,"cyclomaticDensity":25,"halstead":{"bugs":0.07,"difficulty":6.067,"effort":1271.533,"length":47,"time":70.641,"vocabulary":22,"volume":209.593,"operands":{"distinct":15,"total":26,"identifiers":["TaskItemProps","render","task","Task","props","onRender","provided","DraggableProvided","\"drag-handle\"","ref","setRef","innerRef","draggableProps","dragHandleProps","id"]},"operators":{"distinct":7,"total":21,"identifiers":["const","=",".","this","()","return","function=>"]}},"paramCount":1,"sloc":{"logical":8,"physical":20}},"errors":[],"lineEnd":57,"lineStart":38,"methods":[{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.049,"difficulty":5.727,"effort":835.88,"length":35,"time":46.438,"vocabulary":18,"volume":145.947,"operands":{"distinct":11,"total":18,"identifiers":["task","Task","props","onRender","provided","DraggableProvided","\"drag-handle\"","ref","draggableProps","dragHandleProps","id"]},"operators":{"distinct":7,"total":17,"identifiers":["const","=",".","this","()","return","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":18},"errors":[],"lineEnd":56,"lineStart":39,"name":"render","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.009,"difficulty":1.2,"effort":33.688,"length":10,"time":1.872,"vocabulary":7,"volume":28.074,"operands":{"distinct":5,"total":6,"identifiers":["task","setRef","ref","provided","innerRef"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":49,"lineStart":46,"name":"<anon method-2>","paramNames":["ref"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":0.667,"cyclomaticDensity":8.333,"halstead":{"bugs":0.023,"difficulty":2.022,"effort":423.844,"length":15.667,"time":23.547,"vocabulary":7.333,"volume":69.864,"operands":{"distinct":5,"total":8.667},"operators":{"distinct":2.333,"total":7}},"paramCount":0.333,"sloc":{"logical":2.667,"physical":6.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":35,"halstead":{"bugs":0.029,"difficulty":3.464,"effort":434.784,"length":22.5,"time":24.155,"vocabulary":12.5,"volume":87.01,"operands":{"distinct":8,"total":12},"operators":{"distinct":4.5,"total":10.5}},"paramCount":0.5,"sloc":{"logical":3.5,"physical":11}},"name":"TaskItem","superClassName":"<computed~React.Component>","maintainability":129.929},{"aggregate":{"cyclomatic":5,"cyclomaticDensity":45.455,"halstead":{"bugs":0.058,"difficulty":6.708,"effort":1168.357,"length":41,"time":64.909,"vocabulary":19,"volume":174.165,"operands":{"distinct":12,"total":23,"identifiers":["InnerListProps","shouldComponentUpdate","props","tasks","false","true","render","map","task","index","id","draggableProvided"]},"operators":{"distinct":7,"total":18,"identifiers":["if","===",".","this","return","()","function=>"]}},"paramCount":4,"sloc":{"logical":11,"physical":17}},"errors":[],"lineEnd":79,"lineStart":63,"methods":[{"cyclomatic":2,"cyclomaticDensity":66.667,"halstead":{"bugs":0.015,"difficulty":3.75,"effort":166.421,"length":14,"time":9.246,"vocabulary":9,"volume":44.379,"operands":{"distinct":4,"total":6,"identifiers":["props","tasks","false","true"]},"operators":{"distinct":5,"total":8,"identifiers":["if","===",".","this","return"]}},"paramCount":1,"sloc":{"logical":3,"physical":6},"errors":[],"lineEnd":69,"lineStart":64,"name":"shouldComponentUpdate","paramNames":["props"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":2.5,"effort":99.658,"length":12,"time":5.537,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":5,"identifiers":["props","tasks","map","task","index"]},"operators":{"distinct":5,"total":7,"identifiers":["return","()",".","this","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":9},"errors":[],"lineEnd":78,"lineStart":70,"name":"render","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1.5,"effort":34.897,"length":9,"time":1.939,"vocabulary":6,"volume":23.265,"operands":{"distinct":4,"total":6,"identifiers":["task","id","index","draggableProvided"]},"operators":{"distinct":2,"total":3,"identifiers":[".","function=>"]}},"paramCount":2,"sloc":{"logical":2,"physical":7},"errors":[],"lineEnd":77,"lineStart":71,"name":"<anon method-3>","paramNames":["task","index"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["task","draggableProvided"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":75,"lineStart":73,"name":"<anon method-4>","paramNames":["draggableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.012,"difficulty":1.342,"effort":233.671,"length":8.2,"time":12.982,"vocabulary":3.8,"volume":34.833,"operands":{"distinct":2.4,"total":4.6},"operators":{"distinct":1.4,"total":3.6}},"paramCount":0.8,"sloc":{"logical":2.2,"physical":3.4}},"methodAverage":{"cyclomatic":1.25,"cyclomaticDensity":62.5,"halstead":{"bugs":0.009,"difficulty":1.938,"effort":75.244,"length":9.25,"time":4.18,"vocabulary":6.75,"volume":27.377,"operands":{"distinct":3.75,"total":4.75},"operators":{"distinct":3,"total":4.5}},"paramCount":1,"sloc":{"logical":2.25,"physical":6.25}},"name":"InnerList","superClassName":"<computed~React.Component>","maintainability":142.863},{"aggregate":{"cyclomatic":5,"cyclomaticDensity":35.714,"halstead":{"bugs":0.111,"difficulty":8.526,"effort":2828.243,"length":69,"time":157.125,"vocabulary":28,"volume":331.707,"operands":{"distinct":19,"total":36,"identifiers":["State","state","tasks","initial","onDragEnd","result","destination","setState","reorder","source","index","render","\"droppable\"","droppableProvided","ref","setDroppableBounds","innerRef","droppableProps","placeholder"]},"operators":{"distinct":9,"total":33,"identifiers":["{}",":","function=>","if","! (prefix)",".","return","()","this"]}},"paramCount":3,"sloc":{"logical":14,"physical":39}},"errors":[],"lineEnd":179,"lineStart":141,"methods":[{"cyclomatic":2,"cyclomaticDensity":40,"halstead":{"bugs":0.04,"difficulty":6.5,"effort":780,"length":30,"time":43.333,"vocabulary":16,"volume":120,"operands":{"distinct":8,"total":13,"identifiers":["result","destination","setState","tasks","reorder","state","source","index"]},"operators":{"distinct":8,"total":17,"identifiers":["if","! (prefix)",".","return","()","this","{}",":"]}},"paramCount":1,"sloc":{"logical":5,"physical":12},"errors":[],"lineEnd":157,"lineStart":146,"name":"<anon method-12>","paramNames":["result"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":2,"effort":39.303,"length":7,"time":2.183,"vocabulary":7,"volume":19.651,"operands":{"distinct":3,"total":3,"identifiers":["onDragEnd","\"droppable\"","droppableProvided"]},"operators":{"distinct":4,"total":4,"identifiers":["return",".","this","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":20},"errors":[],"lineEnd":178,"lineStart":159,"name":"render","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.014,"difficulty":1.75,"effort":72.116,"length":13,"time":4.006,"vocabulary":9,"volume":41.209,"operands":{"distinct":6,"total":7,"identifiers":["ref","droppableProvided","droppableProps","state","tasks","placeholder"]},"operators":{"distinct":3,"total":6,"identifiers":["function=>",".","this"]}},"paramCount":1,"sloc":{"logical":2,"physical":12},"errors":[],"lineEnd":174,"lineStart":163,"name":"<anon method-13>","paramNames":["droppableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.25,"effort":25.85,"length":8,"time":1.436,"vocabulary":6,"volume":20.68,"operands":{"distinct":4,"total":5,"identifiers":["setDroppableBounds","ref","droppableProvided","innerRef"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":168,"lineStart":165,"name":"<anon method-14>","paramNames":["ref"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.022,"difficulty":1.705,"effort":565.649,"length":13.8,"time":31.425,"vocabulary":5.6,"volume":66.341,"operands":{"distinct":3.8,"total":7.2},"operators":{"distinct":1.8,"total":6.6}},"paramCount":0.6,"sloc":{"logical":2.8,"physical":7.8}},"methodAverage":{"cyclomatic":1.25,"cyclomaticDensity":47.5,"halstead":{"bugs":0.017,"difficulty":2.875,"effort":229.317,"length":14.5,"time":12.74,"vocabulary":9.5,"volume":50.385,"operands":{"distinct":5.25,"total":7},"operators":{"distinct":4.25,"total":7.5}},"paramCount":0.75,"sloc":{"logical":2.75,"physical":12}},"name":"App","superClassName":"<computed~React.Component>","maintainability":135.801}],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"css-box-model","type":"esm"},{"line":5,"path":"@testing-library/react","type":"esm"},{"line":11,"path":"../../../src","type":"esm"},{"line":12,"path":"../../util/dimension","type":"esm"},{"line":13,"path":"../../../src/view/key-codes","type":"esm"},{"line":14,"path":"./util/controls","type":"esm"},{"line":15,"path":"../../../src/view/draggable/draggable-types","type":"esm"},{"line":16,"path":"../../../src/view/droppable/droppable-types","type":"esm"}],"errors":[],"lineEnd":234,"lineStart":1,"maintainability":111.543,"methods":[{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.036,"difficulty":4.5,"effort":486,"length":27,"time":27,"vocabulary":16,"volume":108,"operands":{"distinct":10,"total":15,"identifiers":["result","Array","from","list","removed","splice","startIndex","1","endIndex","0"]},"operators":{"distinct":6,"total":12,"identifiers":["const","=","()",".","[]","return"]}},"paramCount":3,"sloc":{"logical":6,"physical":8},"errors":[],"lineEnd":25,"lineStart":18,"name":"<anon method-1>","paramNames":["list","startIndex","endIndex"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":1,"effort":4.755,"length":3,"time":0.264,"vocabulary":3,"volume":4.755,"operands":{"distinct":1,"total":1,"identifiers":["getComputedSpacing"]},"operators":{"distinct":2,"total":2,"identifiers":["()","{}"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":84,"lineStart":84,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":50,"halstead":{"bugs":0.009,"difficulty":4.5,"effort":121.5,"length":9,"time":6.75,"vocabulary":8,"volume":27,"operands":{"distinct":2,"total":3,"identifiers":["ref","getBoundingClientRect"]},"operators":{"distinct":6,"total":6,"identifiers":["if","! (prefix)","return","=",".","function=>"]}},"paramCount":1,"sloc":{"logical":4,"physical":13},"errors":[],"lineEnd":98,"lineStart":86,"name":"<anon method-6>","paramNames":["ref"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.017,"difficulty":1.688,"effort":87.567,"length":15,"time":4.865,"vocabulary":11,"volume":51.891,"operands":{"distinct":8,"total":9,"identifiers":["getRect","top","0","left","right","100","bottom","300"]},"operators":{"distinct":3,"total":6,"identifiers":["()","{}",":"]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":97,"lineStart":91,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":50,"halstead":{"bugs":0.009,"difficulty":4.5,"effort":121.5,"length":9,"time":6.75,"vocabulary":8,"volume":27,"operands":{"distinct":2,"total":3,"identifiers":["ref","getBoundingClientRect"]},"operators":{"distinct":6,"total":6,"identifiers":["if","! (prefix)","return","=",".","function=>"]}},"paramCount":1,"sloc":{"logical":4,"physical":13},"errors":[],"lineEnd":118,"lineStart":106,"name":"<anon method-8>","paramNames":["ref"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.017,"difficulty":1.688,"effort":87.567,"length":15,"time":4.865,"vocabulary":11,"volume":51.891,"operands":{"distinct":8,"total":9,"identifiers":["getRect","top","0","left","right","100","bottom","20"]},"operators":{"distinct":3,"total":6,"identifiers":["()","{}",":"]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":117,"lineStart":111,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":50,"halstead":{"bugs":0.009,"difficulty":4.5,"effort":121.5,"length":9,"time":6.75,"vocabulary":8,"volume":27,"operands":{"distinct":2,"total":3,"identifiers":["ref","getBoundingClientRect"]},"operators":{"distinct":6,"total":6,"identifiers":["if","! (prefix)","return","=",".","function=>"]}},"paramCount":1,"sloc":{"logical":4,"physical":13},"errors":[],"lineEnd":136,"lineStart":124,"name":"<anon method-10>","paramNames":["ref"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.018,"difficulty":1.5,"effort":80.662,"length":15,"time":4.481,"vocabulary":12,"volume":53.774,"operands":{"distinct":9,"total":9,"identifiers":["getRect","top","30","left","0","right","100","bottom","50"]},"operators":{"distinct":3,"total":6,"identifiers":["()","{}",":"]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":135,"lineStart":129,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.381,"halstead":{"bugs":0.281,"difficulty":12.138,"effort":10243.582,"length":162,"time":569.088,"vocabulary":37,"volume":843.931,"operands":{"distinct":29,"total":88,"identifiers":["jest","useFakeTimers","clearRenderMocks","getAllByTestId","unmount","render","expect","first","onRender","toHaveBeenCalledTimes","1","second","handle","HTMLElement","\"drag-handle\"","0","simpleLift","keyboard","runOnlyPendingTimers","fireEvent","keyDown","keyCode","keyCodes","arrowDown","requestAnimationFrame","step","drop","flush","runAllTimers"]},"operators":{"distinct":8,"total":74,"identifiers":["()",".","const","=","function=>","{}","[]",":"]}},"paramCount":0,"sloc":{"logical":42,"physical":53},"errors":[],"lineEnd":233,"lineStart":181,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["first","onRender","mockClear","second"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":186,"lineStart":183,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.238,"cyclomaticDensity":0.884,"halstead":{"bugs":0.058,"difficulty":1.135,"effort":4172.671,"length":25.619,"time":231.815,"vocabulary":5.429,"volume":175.052,"operands":{"distinct":4.667,"total":13.905},"operators":{"distinct":0.762,"total":11.714}},"paramCount":0.667,"sloc":{"logical":6.667,"physical":11.143}},"methodAverage":{"cyclomatic":1.25,"cyclomaticDensity":41.452,"halstead":{"bugs":0.029,"difficulty":3.185,"effort":674.449,"length":20.8,"time":37.469,"vocabulary":10.5,"volume":85.567,"operands":{"distinct":6.35,"total":10.85},"operators":{"distinct":4.15,"total":9.95}},"paramCount":0.7,"sloc":{"logical":5.45,"physical":11.05}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/disable-on-start.spec.js","testCases":1,"smells":2,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  119 |\n  120 |   // onDragUpdate will occur after setTimeout\n> 121 |   expect(responders.onDragUpdate).not.toHaveBeenCalled();\n      |  ^ Duplicate Assert\n  122 |\n  123 |   jest.runOnlyPendingTimers();\n  124 |   // an update should be fired as the home location has changed","start":{"line":121,"column":2,"index":3312}},{"frame":"  129 |     combine: null,\n  130 |   };\n> 131 |   expect(responders.onDragUpdate).toHaveBeenCalledWith(update);\n      |  ^ Duplicate Assert\n  132 | });\n  133 |","start":{"line":131,"column":2,"index":3602}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":15.152,"halstead":{"bugs":0.568,"difficulty":11.671,"effort":19898.261,"length":266,"time":1105.459,"vocabulary":85,"volume":1704.898,"operands":{"distinct":73,"total":142,"identifiers":["jest","spyOn","Element","prototype","\"getBoundingClientRect\"","mockImplementation","getRect","top","0","left","right","100","bottom","window","\"getComputedStyle\"","getComputedSpacing","State","isDropDisabled","App","React","Component","state","false","onDragStart","start","props","setState","true","onDragUpdate","update","onDragEnd","result","render","\"droppable\"","\"horizontal\"","droppableProvided","innerRef","droppableProps","\"draggable\"","draggableProvided","\"drag-handle\"","draggableProps","dragHandleProps","placeholder","useFakeTimers","it","\"should allow the disabling of a droppable in onDragStart\"","responders","Responders","fn","getByTestId","handle","HTMLElement","simpleLift","keyboard","runOnlyPendingTimers","DragStart","draggableId","source","droppableId","index","type","\"DEFAULT\"","mode","\"SNAP\"","expect","toHaveBeenCalledWith","not","toHaveBeenCalled","DragUpdate","destination","null","combine"]},"operators":{"distinct":12,"total":124,"identifiers":["()",".","function=>","{}",":","class","extends","this","return","const","=","... (spread)"]}},"paramCount":5,"sloc":{"logical":66,"physical":133}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[{"aggregate":{"cyclomatic":6,"cyclomaticDensity":35.294,"halstead":{"bugs":0.161,"difficulty":6.865,"effort":3324.644,"length":96,"time":184.702,"vocabulary":33,"volume":484.262,"operands":{"distinct":26,"total":51,"identifiers":["State","state","isDropDisabled","false","onDragStart","start","props","setState","true","onDragUpdate","update","onDragEnd","result","render","\"droppable\"","\"horizontal\"","droppableProvided","innerRef","droppableProps","\"draggable\"","0","draggableProvided","\"drag-handle\"","draggableProps","dragHandleProps","placeholder"]},"operators":{"distinct":7,"total":45,"identifiers":["{}",":","function=>","()",".","this","return"]}},"paramCount":5,"sloc":{"logical":17,"physical":57}},"errors":[],"lineEnd":92,"lineStart":36,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.017,"difficulty":2.5,"effort":129.729,"length":15,"time":7.207,"vocabulary":11,"volume":51.891,"operands":{"distinct":6,"total":6,"identifiers":["props","onDragStart","start","setState","isDropDisabled","true"]},"operators":{"distinct":5,"total":9,"identifiers":["()",".","this","{}",":"]}},"paramCount":1,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":44,"lineStart":41,"name":"<anon method-3>","paramNames":["start"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.006,"difficulty":1.5,"effort":27.142,"length":7,"time":1.508,"vocabulary":6,"volume":18.095,"operands":{"distinct":3,"total":3,"identifiers":["props","onDragUpdate","update"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","this"]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":48,"lineStart":46,"name":"<anon method-4>","paramNames":["update"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.017,"difficulty":2.5,"effort":129.729,"length":15,"time":7.207,"vocabulary":11,"volume":51.891,"operands":{"distinct":6,"total":6,"identifiers":["props","onDragEnd","result","setState","isDropDisabled","false"]},"operators":{"distinct":5,"total":9,"identifiers":["()",".","this","{}",":"]}},"paramCount":1,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":53,"lineStart":50,"name":"<anon method-5>","paramNames":["result"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.023,"difficulty":2,"effort":136.229,"length":19,"time":7.568,"vocabulary":12,"volume":68.114,"operands":{"distinct":8,"total":8,"identifiers":["onDragStart","onDragUpdate","onDragEnd","\"droppable\"","\"horizontal\"","state","isDropDisabled","droppableProvided"]},"operators":{"distinct":4,"total":11,"identifiers":["return",".","this","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":36},"errors":[],"lineEnd":91,"lineStart":56,"name":"render","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.014,"difficulty":1.286,"effort":52.983,"length":13,"time":2.944,"vocabulary":9,"volume":41.209,"operands":{"distinct":7,"total":9,"identifiers":["droppableProvided","innerRef","droppableProps","\"draggable\"","0","draggableProvided","placeholder"]},"operators":{"distinct":2,"total":4,"identifiers":[".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":20},"errors":[],"lineEnd":87,"lineStart":68,"name":"<anon method-6>","paramNames":["droppableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.009,"difficulty":0.7,"effort":18.095,"length":10,"time":1.005,"vocabulary":6,"volume":25.85,"operands":{"distinct":5,"total":7,"identifiers":["draggableProvided","innerRef","\"drag-handle\"","draggableProps","dragHandleProps"]},"operators":{"distinct":1,"total":3,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":10},"errors":[],"lineEnd":83,"lineStart":74,"name":"<anon method-7>","paramNames":["draggableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":0.857,"cyclomaticDensity":5.042,"halstead":{"bugs":0.023,"difficulty":0.981,"effort":474.949,"length":13.714,"time":26.386,"vocabulary":4.714,"volume":69.18,"operands":{"distinct":3.714,"total":7.286},"operators":{"distinct":1,"total":6.429}},"paramCount":0.714,"sloc":{"logical":2.429,"physical":8.143}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":61.111,"halstead":{"bugs":0.014,"difficulty":1.748,"effort":82.318,"length":13.167,"time":4.573,"vocabulary":9.167,"volume":42.842,"operands":{"distinct":5.833,"total":6.5},"operators":{"distinct":3.333,"total":6.667}},"paramCount":0.833,"sloc":{"logical":2,"physical":12.833}},"name":"App","superClassName":"<computed~React.Component>","maintainability":144.687}],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"css-box-model","type":"esm"},{"line":4,"path":"@testing-library/react","type":"esm"},{"line":11,"path":"../../../src","type":"esm"},{"line":12,"path":"../../../src/types","type":"esm"},{"line":13,"path":"../../../src","type":"esm"},{"line":14,"path":"../../util/dimension","type":"esm"},{"line":15,"path":"./util/controls","type":"esm"}],"errors":[],"lineEnd":133,"lineStart":1,"maintainability":114.452,"methods":[{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["getRect","top","0","left","right","100","bottom"]},"operators":{"distinct":3,"total":6,"identifiers":["()","{}",":"]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":24,"lineStart":18,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":1,"effort":4.755,"length":3,"time":0.264,"vocabulary":3,"volume":4.755,"operands":{"distinct":1,"total":1,"identifiers":["getComputedSpacing"]},"operators":{"distinct":2,"total":2,"identifiers":["()","{}"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":30,"lineStart":30,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.207,"difficulty":5.77,"effort":3591.273,"length":114,"time":199.515,"vocabulary":44,"volume":622.375,"operands":{"distinct":37,"total":61,"identifiers":["responders","Responders","onDragStart","jest","fn","onDragUpdate","onDragEnd","getByTestId","render","handle","HTMLElement","\"drag-handle\"","simpleLift","keyboard","runOnlyPendingTimers","start","DragStart","draggableId","\"draggable\"","source","droppableId","\"droppable\"","index","0","type","\"DEFAULT\"","mode","\"SNAP\"","expect","toHaveBeenCalledWith","not","toHaveBeenCalled","update","DragUpdate","destination","null","combine"]},"operators":{"distinct":7,"total":53,"identifiers":["const","=","{}",":","()",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":31,"physical":37},"errors":[],"lineEnd":132,"lineStart":96,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.515,"halstead":{"bugs":0.057,"difficulty":1.167,"effort":1989.826,"length":26.6,"time":110.546,"vocabulary":8.5,"volume":170.49,"operands":{"distinct":7.3,"total":14.2},"operators":{"distinct":1.2,"total":12.4}},"paramCount":0.5,"sloc":{"logical":6.6,"physical":13.3}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":48.507,"halstead":{"bugs":0.035,"difficulty":2.132,"effort":465.115,"length":23.444,"time":25.84,"vocabulary":12.444,"volume":103.779,"operands":{"distinct":8.889,"total":12.222},"operators":{"distinct":3.556,"total":11.222}},"paramCount":0.556,"sloc":{"logical":5.667,"physical":13.556}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/body-removal-before-unmount.spec.js","testCases":2,"smells":2,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  26 |\n  27 |     // mid drag\n> 28 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  29 |     expect(isDragging(handle)).toEqual(true);\n  30 |\n  31 |     expect(() => {","start":{"line":28,"column":4,"index":850}},{"frame":"  27 |     // mid drag\n  28 |     simpleLift(control, handle);\n> 29 |     expect(isDragging(handle)).toEqual(true);\n     |           ^ Eager Test\n  30 |\n  31 |     expect(() => {\n  32 |       getBodyElement().innerHTML = '';","start":{"line":29,"column":11,"index":890}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":17.143,"halstead":{"bugs":0.159,"difficulty":5.76,"effort":2739.472,"length":96,"time":152.193,"vocabulary":31,"volume":475.603,"operands":{"distinct":25,"total":48,"identifiers":["it","\"should have any errors when body is changed just before unmount\"","jest","useFakeTimers","unmount","render","expect","getBodyElement","innerHTML","\"\"","runOnlyPendingTimers","not","toThrow","useRealTimers","forEachSensor","control","\"should have any errors when body is changed just before unmount: mid drag\"","getByText","handle","HTMLElement","\"item: 0\"","simpleLift","isDragging","toEqual","true"]},"operators":{"distinct":6,"total":48,"identifiers":["()","function=>",".","const","=","{}"]}},"paramCount":1,"sloc":{"logical":35,"physical":38}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"./util/helpers","type":"esm"},{"line":5,"path":"./util/app","type":"esm"},{"line":6,"path":"./util/controls","type":"esm"},{"line":7,"path":"../../../src/view/get-body-element","type":"esm"}],"errors":[],"lineEnd":38,"lineStart":1,"maintainability":121.487,"methods":[{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.029,"difficulty":3.75,"effort":328.384,"length":23,"time":18.244,"vocabulary":14,"volume":87.569,"operands":{"distinct":8,"total":10,"identifiers":["jest","useFakeTimers","unmount","render","expect","not","toThrow","useRealTimers"]},"operators":{"distinct":6,"total":13,"identifiers":["()",".","const","=","{}","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":12},"errors":[],"lineEnd":20,"lineStart":9,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.013,"difficulty":1.5,"effort":57.059,"length":12,"time":3.17,"vocabulary":9,"volume":38.039,"operands":{"distinct":6,"total":6,"identifiers":["getBodyElement","innerHTML","\"\"","unmount","jest","runOnlyPendingTimers"]},"operators":{"distinct":3,"total":6,"identifiers":["=",".","()"]}},"paramCount":0,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":17,"lineStart":13,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should have any errors when body is changed just before unmount: mid drag\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":16},"errors":[],"lineEnd":37,"lineStart":22,"name":"<anon method-3>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.053,"difficulty":4.286,"effort":685.334,"length":37,"time":38.074,"vocabulary":20,"volume":159.911,"operands":{"distinct":14,"total":20,"identifiers":["unmount","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","control","expect","isDragging","toEqual","true","not","toThrow"]},"operators":{"distinct":6,"total":17,"identifiers":["const","=","{}","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":14},"errors":[],"lineEnd":36,"lineStart":23,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.013,"difficulty":1.5,"effort":57.059,"length":12,"time":3.17,"vocabulary":9,"volume":38.039,"operands":{"distinct":6,"total":6,"identifiers":["getBodyElement","innerHTML","\"\"","unmount","jest","runOnlyPendingTimers"]},"operators":{"distinct":3,"total":6,"identifiers":["=",".","()"]}},"paramCount":0,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":35,"lineStart":31,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.026,"difficulty":0.96,"effort":456.579,"length":16,"time":25.365,"vocabulary":5.167,"volume":79.267,"operands":{"distinct":4.167,"total":8},"operators":{"distinct":1,"total":8}},"paramCount":0.167,"sloc":{"logical":5.833,"physical":6.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":24.038,"halstead":{"bugs":0.022,"difficulty":2.407,"effort":227.167,"length":17.6,"time":12.62,"vocabulary":11.2,"volume":66.312,"operands":{"distinct":7.2,"total":8.8},"operators":{"distinct":4,"total":8.8}},"paramCount":0.2,"sloc":{"logical":6.2,"physical":10.4}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/server-side-rendering/server-rendering.spec.js","testCases":3,"smells":6,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  42 |   const result: string = renderToString(<App />);\n  43 |\n> 44 |   expect(result).toEqual(expect.any(String));\n     |  ^ Duplicate Assert\n  45 |   expect(result).toMatchSnapshot();\n  46 |   expectConsoleNotCalled();\n  47 | });","start":{"line":44,"column":2,"index":1202}},{"frame":"  43 |\n  44 |   expect(result).toEqual(expect.any(String));\n> 45 |   expect(result).toMatchSnapshot();\n     |  ^ Duplicate Assert\n  46 |   expectConsoleNotCalled();\n  47 | });\n  48 |","start":{"line":45,"column":2,"index":1248}},{"frame":"  50 |   const result: string = renderToStaticMarkup(<App />);\n  51 |\n> 52 |   expect(result).toEqual(expect.any(String));\n     |  ^ Duplicate Assert\n  53 |   expect(result).toMatchSnapshot();\n  54 |   expectConsoleNotCalled();\n  55 | });","start":{"line":52,"column":2,"index":1430}},{"frame":"  51 |\n  52 |   expect(result).toEqual(expect.any(String));\n> 53 |   expect(result).toMatchSnapshot();\n     |  ^ Duplicate Assert\n  54 |   expectConsoleNotCalled();\n  55 | });\n  56 |","start":{"line":53,"column":2,"index":1476}},{"frame":"  58 |   const firstRender = renderToString(<App />);\n  59 |   const nextRenderBeforeReset = renderToString(<App />);\n> 60 |   expect(firstRender).not.toEqual(nextRenderBeforeReset);\n     |  ^ Duplicate Assert\n  61 |\n  62 |   resetServerContext();\n  63 |   const nextRenderAfterReset = renderToString(<App />);","start":{"line":60,"column":2,"index":1734}},{"frame":"  62 |   resetServerContext();\n  63 |   const nextRenderAfterReset = renderToString(<App />);\n> 64 |   expect(firstRender).toEqual(nextRenderAfterReset);\n     |  ^ Duplicate Assert\n  65 |   expectConsoleNotCalled();\n  66 | });\n  67 |","start":{"line":64,"column":2,"index":1873}}]}],"metrics":{"aggregate":{"cyclomatic":11,"cyclomaticDensity":20.755,"halstead":{"bugs":0.309,"difficulty":11.389,"effort":10568.415,"length":168,"time":587.134,"vocabulary":46,"volume":927.958,"operands":{"distinct":36,"total":82,"identifiers":["consoleFunctions","\"warn\"","\"error\"","\"log\"","beforeEach","resetServerContext","forEach","name","jest","spyOn","console","afterEach","mockRestore","expectConsoleNotCalled","expect","not","toHaveBeenCalled","invariant","window","\"undefined\"","document","\"browser globals found in node test\"","it","\"should support rendering to a string\"","result","renderToString","toEqual","any","String","toMatchSnapshot","\"should support rendering to static markup\"","renderToStaticMarkup","\"should render identical content when resetting context between renders\"","firstRender","nextRenderBeforeReset","nextRenderAfterReset"]},"operators":{"distinct":10,"total":86,"identifiers":["const","=","[]",",","()","function=>",".","&&","===","typeof (prefix)"]}},"paramCount":3,"sloc":{"logical":53,"physical":67}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":5,"path":"react","type":"esm"},{"line":6,"path":"react-dom/server","type":"esm"},{"line":7,"path":"../../../../src/invariant","type":"esm"},{"line":8,"path":"../../../../src","type":"esm"},{"line":9,"path":"../util/app","type":"esm"}],"errors":[],"lineEnd":67,"lineStart":1,"maintainability":120.074,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":33.688,"length":8,"time":1.872,"vocabulary":7,"volume":22.459,"operands":{"distinct":4,"total":4,"identifiers":["resetServerContext","consoleFunctions","forEach","name"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":7},"errors":[],"lineEnd":19,"lineStart":13,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.005,"difficulty":1,"effort":15.51,"length":6,"time":0.862,"vocabulary":6,"volume":15.51,"operands":{"distinct":4,"total":4,"identifiers":["jest","spyOn","console","name"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":18,"lineStart":16,"name":"<anon method-2>","paramNames":["name"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["consoleFunctions","forEach","name"]},"operators":{"distinct":3,"total":3,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":6},"errors":[],"lineEnd":26,"lineStart":21,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["console","name","mockRestore"]},"operators":{"distinct":3,"total":3,"identifiers":["()",".","[]"]}},"paramCount":1,"sloc":{"logical":1,"physical":4},"errors":[],"lineEnd":25,"lineStart":22,"name":"<anon method-4>","paramNames":["name"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["consoleFunctions","forEach","name"]},"operators":{"distinct":3,"total":3,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":6},"errors":[],"lineEnd":33,"lineStart":28,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["expect","console","name","not","toHaveBeenCalled"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","[]"]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":32,"lineStart":29,"name":"<anon method-6>","paramNames":["name"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.029,"difficulty":3,"effort":258.117,"length":24,"time":14.34,"vocabulary":12,"volume":86.039,"operands":{"distinct":8,"total":12,"identifiers":["result","renderToString","expect","toEqual","any","String","toMatchSnapshot","expectConsoleNotCalled"]},"operators":{"distinct":4,"total":12,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":7},"errors":[],"lineEnd":47,"lineStart":41,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.029,"difficulty":3,"effort":258.117,"length":24,"time":14.34,"vocabulary":12,"volume":86.039,"operands":{"distinct":8,"total":12,"identifiers":["result","renderToStaticMarkup","expect","toEqual","any","String","toMatchSnapshot","expectConsoleNotCalled"]},"operators":{"distinct":4,"total":12,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":7},"errors":[],"lineEnd":55,"lineStart":49,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.043,"difficulty":3.778,"effort":489.28,"length":35,"time":27.182,"vocabulary":13,"volume":129.515,"operands":{"distinct":9,"total":17,"identifiers":["firstRender","renderToString","nextRenderBeforeReset","expect","not","toEqual","resetServerContext","nextRenderAfterReset","expectConsoleNotCalled"]},"operators":{"distinct":4,"total":18,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":12,"physical":10},"errors":[],"lineEnd":66,"lineStart":57,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.1,"cyclomaticDensity":2.075,"halstead":{"bugs":0.031,"difficulty":1.139,"effort":1056.842,"length":16.8,"time":58.713,"vocabulary":4.6,"volume":92.796,"operands":{"distinct":3.6,"total":8.2},"operators":{"distinct":1,"total":8.6}},"paramCount":0.3,"sloc":{"logical":5.3,"physical":6.7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":46.296,"halstead":{"bugs":0.015,"difficulty":2.031,"effort":129.945,"length":13.889,"time":7.219,"vocabulary":8.444,"volume":46.232,"operands":{"distinct":5.222,"total":7},"operators":{"distinct":3.222,"total":6.889}},"paramCount":0.333,"sloc":{"logical":4.333,"physical":6}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/server-side-rendering/client-hydration.spec.js","testCases":1,"smells":2,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  27 |   const error = jest.spyOn(console, 'error').mockImplementation(noop);\n  28 |\n> 29 |   resetServerContext();\n     |  ^ Eager Test\n  30 |   const serverHTML: string = ReactDOMServer.renderToString(<App />);\n  31 |\n  32 |   error.mock.calls.forEach((call) => {","start":{"line":29,"column":2,"index":1028}},{"frame":"  39 |   // would be done client side\n  40 |   // would have a fresh server context on the client\n> 41 |   resetServerContext();\n     |  ^ Eager Test\n  42 |   const el = document.createElement('div');\n  43 |   el.innerHTML = serverHTML;\n  44 |   getBodyElement().appendChild(el);","start":{"line":41,"column":2,"index":1384}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":20.69,"halstead":{"bugs":0.195,"difficulty":5.85,"effort":3415.989,"length":104,"time":189.777,"vocabulary":49,"volume":583.93,"operands":{"distinct":40,"total":52,"identifiers":["beforeEach","resetServerContext","invariant","window","\"undefined\"","document","\"browser globals not found in jsdom test\"","it","\"should support hydrating a server side rendered application\"","error","jest","spyOn","console","\"error\"","mockImplementation","noop","serverHTML","ReactDOMServer","renderToString","mock","calls","forEach","call","expect","0","includes","\"Warning: useLayoutEffect does nothing on the server\"","toBe","true","mockRestore","el","createElement","\"div\"","innerHTML","getBodyElement","appendChild","ReactDOM","hydrate","not","toThrow"]},"operators":{"distinct":9,"total":52,"identifiers":["()","function=>","&&","!==","typeof (prefix)","const","=",".","[]"]}},"paramCount":1,"sloc":{"logical":29,"physical":48}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"react-dom","type":"esm"},{"line":4,"path":"react-dom/server","type":"esm"},{"line":5,"path":"../../../../src/invariant","type":"esm"},{"line":6,"path":"../../../../src","type":"esm"},{"line":7,"path":"../util/app","type":"esm"},{"line":8,"path":"../../../../src/empty","type":"esm"},{"line":9,"path":"../../../../src/view/get-body-element","type":"esm"}],"errors":[],"lineEnd":48,"lineStart":1,"maintainability":120.019,"methods":[{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0.5,"effort":1,"length":2,"time":0.056,"vocabulary":2,"volume":2,"operands":{"distinct":1,"total":1,"identifiers":["resetServerContext"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":1,"physical":4},"errors":[],"lineEnd":14,"lineStart":11,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.107,"difficulty":3.077,"effort":990.839,"length":65,"time":55.047,"vocabulary":31,"volume":322.023,"operands":{"distinct":26,"total":32,"identifiers":["error","jest","spyOn","console","\"error\"","mockImplementation","noop","resetServerContext","serverHTML","ReactDOMServer","renderToString","mock","calls","forEach","call","mockRestore","el","document","createElement","\"div\"","innerHTML","getBodyElement","appendChild","expect","not","toThrow"]},"operators":{"distinct":5,"total":33,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":18,"physical":26},"errors":[],"lineEnd":47,"lineStart":22,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.014,"difficulty":1.5,"effort":64.778,"length":13,"time":3.599,"vocabulary":10,"volume":43.185,"operands":{"distinct":7,"total":7,"identifiers":["expect","call","0","includes","\"Warning: useLayoutEffect does nothing on the server\"","toBe","true"]},"operators":{"distinct":3,"total":6,"identifiers":["()",".","[]"]}},"paramCount":1,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":36,"lineStart":32,"name":"<anon method-3>","paramNames":["call"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["ReactDOM","hydrate","el"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":46,"lineStart":46,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.2,"cyclomaticDensity":4.138,"halstead":{"bugs":0.039,"difficulty":1.17,"effort":683.198,"length":20.8,"time":37.955,"vocabulary":9.8,"volume":116.786,"operands":{"distinct":8,"total":10.4},"operators":{"distinct":1.8,"total":10.4}},"paramCount":0.2,"sloc":{"logical":5.8,"physical":9.6}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":47.222,"halstead":{"bugs":0.032,"difficulty":1.519,"effort":267.057,"length":21.25,"time":14.836,"vocabulary":12,"volume":94.704,"operands":{"distinct":9.25,"total":10.75},"operators":{"distinct":2.75,"total":10.5}},"paramCount":0.25,"sloc":{"logical":6,"physical":9}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/droppable/placeholder.spec.js","testCases":11,"smells":52,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  75 |       expandedMouse.move(handle, droppable.client.borderBox.center);\n  76 |\n> 77 |       expect(isDragging(handle)).toBe(true);\n     |      ^ Duplicate Assert\n  78 |       expect(isOver(handle)).toBe(droppable.descriptor.id);\n  79 |       expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(true);\n  80 |","start":{"line":77,"column":6,"index":2733}},{"frame":"  77 |       expect(isDragging(handle)).toBe(true);\n  78 |       expect(isOver(handle)).toBe(droppable.descriptor.id);\n> 79 |       expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(true);\n     |      ^ Duplicate Assert\n  80 |\n  81 |       withWarn(() => {\n  82 |         const event: Event = new Event('error');","start":{"line":79,"column":6,"index":2838}},{"frame":"  84 |       });\n  85 |\n> 86 |       expect(isDragging(handle)).toBe(false);\n     |      ^ Duplicate Assert\n  87 |       expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(false);\n  88 |\n  89 |       unmount();","start":{"line":86,"column":6,"index":3033}},{"frame":"  85 |\n  86 |       expect(isDragging(handle)).toBe(false);\n> 87 |       expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(false);\n     |      ^ Duplicate Assert\n  88 |\n  89 |       unmount();\n  90 |     });","start":{"line":87,"column":6,"index":3079}},{"frame":"  124 |\n  125 |         expandedMouse.startDrop(handle);\n> 126 |         expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(true);\n      |        ^ Duplicate Assert\n  127 |\n  128 |         // placeholder removed straight after drop\n  129 |         expandedMouse.finishDrop(handle);","start":{"line":126,"column":8,"index":4618}},{"frame":"  128 |         // placeholder removed straight after drop\n  129 |         expandedMouse.finishDrop(handle);\n> 130 |         expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(false);\n      |        ^ Duplicate Assert\n  131 |\n  132 |         unmount();\n  133 |       });","start":{"line":130,"column":8,"index":4791}},{"frame":"  145 |\n  146 |       // placeholder present when over nothing\n> 147 |       expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(true);\n      |      ^ Duplicate Assert\n  148 |\n  149 |       // placeholder present when drop started\n  150 |       expandedMouse.startDrop(handle);","start":{"line":147,"column":6,"index":5406}},{"frame":"  145 |\n  146 |       // placeholder present when over nothing\n> 147 |       expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(true);\n      |      ^ Duplicate Assert\n  148 |\n  149 |       // placeholder present when drop started\n  150 |       expandedMouse.startDrop(handle);","start":{"line":147,"column":6,"index":5406}},{"frame":"  149 |       // placeholder present when drop started\n  150 |       expandedMouse.startDrop(handle);\n> 151 |       expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(true);\n      |      ^ Duplicate Assert\n  152 |\n  153 |       // placeholder gone after drop finished\n  154 |       expandedMouse.finishDrop(handle);","start":{"line":151,"column":6,"index":5572}},{"frame":"  149 |       // placeholder present when drop started\n  150 |       expandedMouse.startDrop(handle);\n> 151 |       expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(true);\n      |      ^ Duplicate Assert\n  152 |\n  153 |       // placeholder gone after drop finished\n  154 |       expandedMouse.finishDrop(handle);","start":{"line":151,"column":6,"index":5572}},{"frame":"  153 |       // placeholder gone after drop finished\n  154 |       expandedMouse.finishDrop(handle);\n> 155 |       expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(false);\n      |      ^ Duplicate Assert\n  156 |     });\n  157 |   });\n  158 |","start":{"line":155,"column":6,"index":5738}},{"frame":"  168 |       expandedMouse.startDrop(handle);\n  169 |       // foreign placeholder remaining in place\n> 170 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n      |      ^ Duplicate Assert\n  171 |         true,\n  172 |       );\n  173 |       // home placeholder remaining in place","start":{"line":170,"column":6,"index":6416}},{"frame":"  172 |       );\n  173 |       // home placeholder remaining in place\n> 174 |       expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(true);\n      |      ^ Duplicate Assert\n  175 |\n  176 |       // gone after drop finished\n  177 |       expandedMouse.finishDrop(handle);","start":{"line":174,"column":6,"index":6560}},{"frame":"  172 |       );\n  173 |       // home placeholder remaining in place\n> 174 |       expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(true);\n      |      ^ Duplicate Assert\n  175 |\n  176 |       // gone after drop finished\n  177 |       expandedMouse.finishDrop(handle);","start":{"line":174,"column":6,"index":6560}},{"frame":"  178 |\n  179 |       // foreign placeholder is now gone\n> 180 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n      |      ^ Duplicate Assert\n  181 |         false,\n  182 |       );\n  183 |       // home placeholder is still around and will now animate closed","start":{"line":180,"column":6,"index":6756}},{"frame":"  182 |       );\n  183 |       // home placeholder is still around and will now animate closed\n> 184 |       expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(true);\n      |      ^ Duplicate Assert\n  185 |\n  186 |       // placeholder is now collapsing\n  187 |       const placeholder: HTMLElement = getPlaceholder(","start":{"line":184,"column":6,"index":6926}},{"frame":"  182 |       );\n  183 |       // home placeholder is still around and will now animate closed\n> 184 |       expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(true);\n      |      ^ Duplicate Assert\n  185 |\n  186 |       // placeholder is now collapsing\n  187 |       const placeholder: HTMLElement = getPlaceholder(","start":{"line":184,"column":6,"index":6926}},{"frame":"  195 |\n  196 |       // placeholder is gone\n> 197 |       expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(false);\n      |      ^ Duplicate Assert\n  198 |     });\n  199 |   });\n  200 |","start":{"line":197,"column":6,"index":7337}},{"frame":"  211 |         expandedMouse.powerDrop(handle);\n  212 |         // placeholder still here + animating closed\n> 213 |         expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(true);\n      |        ^ Duplicate Assert\n  214 |         const placeholder: HTMLElement = getPlaceholder(\n  215 |           preset.home.descriptor.id,\n  216 |           container,","start":{"line":213,"column":8,"index":8036}},{"frame":"  232 |\n  233 |         // placeholder is gone from home (it got flushed)\n> 234 |         expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(\n      |        ^ Duplicate Assert\n  235 |           false,\n  236 |         );\n  237 |       }","start":{"line":234,"column":8,"index":8756}},{"frame":"  264 |       expandedMouse.move(handle, preset.foreign.client.borderBox.center);\n  265 |\n> 266 |       expect(isOver(handle)).toBe(preset.foreign.descriptor.id);\n      |      ^ Duplicate Assert\n  267 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n  268 |         true,\n  269 |       );","start":{"line":266,"column":6,"index":9863}},{"frame":"  271 |       // moving back over home\n  272 |       expandedMouse.move(handle, preset.home.client.borderBox.center);\n> 273 |       expect(isOver(handle)).toBe(preset.home.descriptor.id);\n      |      ^ Duplicate Assert\n  274 |\n  275 |       // foreign placeholder is now animating closed\n  276 |       const placeholder: HTMLElement = getPlaceholder(","start":{"line":273,"column":6,"index":10130}},{"frame":"  290 |       expandedMouse.move(handle, preset.foreign.client.borderBox.center);\n  291 |\n> 292 |       expect(isOver(handle)).toBe(preset.foreign.descriptor.id);\n      |      ^ Duplicate Assert\n  293 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n  294 |         true,\n  295 |       );","start":{"line":292,"column":6,"index":10854}},{"frame":"  291 |\n  292 |       expect(isOver(handle)).toBe(preset.foreign.descriptor.id);\n> 293 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n      |      ^ Duplicate Assert\n  294 |         true,\n  295 |       );\n  296 |","start":{"line":293,"column":6,"index":10919}},{"frame":"  291 |\n  292 |       expect(isOver(handle)).toBe(preset.foreign.descriptor.id);\n> 293 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n      |      ^ Duplicate Assert\n  294 |         true,\n  295 |       );\n  296 |","start":{"line":293,"column":6,"index":10919}},{"frame":"  297 |       // moving back over home\n  298 |       expandedMouse.move(handle, preset.home.client.borderBox.center);\n> 299 |       expect(isOver(handle)).toBe(preset.home.descriptor.id);\n      |      ^ Duplicate Assert\n  300 |\n  301 |       // foreign placeholder is now animating closed\n  302 |       const placeholder: HTMLElement = getPlaceholder(","start":{"line":299,"column":6,"index":11121}},{"frame":"  309 |       expandedMouse.startDrop(handle);\n  310 |       // placeholder still in foreign list\n> 311 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n      |      ^ Duplicate Assert\n  312 |         true,\n  313 |       );\n  314 |","start":{"line":311,"column":6,"index":11528}},{"frame":"  309 |       expandedMouse.startDrop(handle);\n  310 |       // placeholder still in foreign list\n> 311 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n      |      ^ Duplicate Assert\n  312 |         true,\n  313 |       );\n  314 |","start":{"line":311,"column":6,"index":11528}},{"frame":"  322 |       expect(isDragging(second)).toBe(true);\n  323 |       expect(isOver(second)).toBe(preset.home.descriptor.id);\n> 324 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n      |      ^ Duplicate Assert\n  325 |         false,\n  326 |       );\n  327 |     });","start":{"line":324,"column":6,"index":11969}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  75 |       expandedMouse.move(handle, droppable.client.borderBox.center);\n  76 |\n> 77 |       expect(isDragging(handle)).toBe(true);\n     |             ^ Eager Test\n  78 |       expect(isOver(handle)).toBe(droppable.descriptor.id);\n  79 |       expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(true);\n  80 |","start":{"line":77,"column":13,"index":2740}},{"frame":"  76 |\n  77 |       expect(isDragging(handle)).toBe(true);\n> 78 |       expect(isOver(handle)).toBe(droppable.descriptor.id);\n     |             ^ Eager Test\n  79 |       expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(true);\n  80 |\n  81 |       withWarn(() => {","start":{"line":78,"column":13,"index":2785}},{"frame":"  84 |       });\n  85 |\n> 86 |       expect(isDragging(handle)).toBe(false);\n     |             ^ Eager Test\n  87 |       expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(false);\n  88 |\n  89 |       unmount();","start":{"line":86,"column":13,"index":3040}},{"frame":"  164 |       expandedMouse.powerLift(handle, preset.inHome1.client.borderBox.center);\n  165 |       expandedMouse.move(handle, preset.inForeign1.client.borderBox.center);\n> 166 |       expect(isOver(handle)).toBe(preset.foreign.descriptor.id);\n      |             ^ Eager Test\n  167 |\n  168 |       expandedMouse.startDrop(handle);\n  169 |       // foreign placeholder remaining in place","start":{"line":166,"column":13,"index":6270}},{"frame":"  192 |\n  193 |       // faking a transition end\n> 194 |       fireEvent(placeholder, getTransitionEnd('height'));\n      |                             ^ Eager Test\n  195 |\n  196 |       // placeholder is gone\n  197 |       expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(false);","start":{"line":194,"column":29,"index":7272}},{"frame":"  264 |       expandedMouse.move(handle, preset.foreign.client.borderBox.center);\n  265 |\n> 266 |       expect(isOver(handle)).toBe(preset.foreign.descriptor.id);\n      |             ^ Eager Test\n  267 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n  268 |         true,\n  269 |       );","start":{"line":266,"column":13,"index":9870}},{"frame":"  271 |       // moving back over home\n  272 |       expandedMouse.move(handle, preset.home.client.borderBox.center);\n> 273 |       expect(isOver(handle)).toBe(preset.home.descriptor.id);\n      |             ^ Eager Test\n  274 |\n  275 |       // foreign placeholder is now animating closed\n  276 |       const placeholder: HTMLElement = getPlaceholder(","start":{"line":273,"column":13,"index":10137}},{"frame":"  290 |       expandedMouse.move(handle, preset.foreign.client.borderBox.center);\n  291 |\n> 292 |       expect(isOver(handle)).toBe(preset.foreign.descriptor.id);\n      |             ^ Eager Test\n  293 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n  294 |         true,\n  295 |       );","start":{"line":292,"column":13,"index":10861}},{"frame":"  297 |       // moving back over home\n  298 |       expandedMouse.move(handle, preset.home.client.borderBox.center);\n> 299 |       expect(isOver(handle)).toBe(preset.home.descriptor.id);\n      |             ^ Eager Test\n  300 |\n  301 |       // foreign placeholder is now animating closed\n  302 |       const placeholder: HTMLElement = getPlaceholder(","start":{"line":299,"column":13,"index":11128}},{"frame":"  320 |         preset.inHome2.client.borderBox.center,\n  321 |       );\n> 322 |       expect(isDragging(second)).toBe(true);\n      |             ^ Eager Test\n  323 |       expect(isOver(second)).toBe(preset.home.descriptor.id);\n  324 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n  325 |         false,","start":{"line":322,"column":13,"index":11869}},{"frame":"  321 |       );\n  322 |       expect(isDragging(second)).toBe(true);\n> 323 |       expect(isOver(second)).toBe(preset.home.descriptor.id);\n      |             ^ Eager Test\n  324 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n  325 |         false,\n  326 |       );","start":{"line":323,"column":13,"index":11914}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  57 |       expandedMouse.move(handle, droppable.client.borderBox.center);\n  58 |\n> 59 |       expect(isOver(handle)).toBe(droppable.descriptor.id);\n     |             ^ Lazy Test\n  60 |       expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(true);\n  61 |\n  62 |       unmount();","start":{"line":59,"column":13,"index":2062}},{"frame":"  75 |       expandedMouse.move(handle, droppable.client.borderBox.center);\n  76 |\n> 77 |       expect(isDragging(handle)).toBe(true);\n     |             ^ Lazy Test\n  78 |       expect(isOver(handle)).toBe(droppable.descriptor.id);\n  79 |       expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(true);\n  80 |","start":{"line":77,"column":13,"index":2740}},{"frame":"  76 |\n  77 |       expect(isDragging(handle)).toBe(true);\n> 78 |       expect(isOver(handle)).toBe(droppable.descriptor.id);\n     |             ^ Lazy Test\n  79 |       expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(true);\n  80 |\n  81 |       withWarn(() => {","start":{"line":78,"column":13,"index":2785}},{"frame":"  104 |\n  105 |         // doesn't matter what we are over\n> 106 |         expect(isOver(handle)).toBe(droppable.descriptor.id);\n      |               ^ Lazy Test\n  107 |         // there is always a placeholder in home\n  108 |         expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(true);\n  109 |","start":{"line":106,"column":15,"index":3781}},{"frame":"  121 |         expandedMouse.powerLift(handle, preset.inHome1.client.borderBox.center);\n  122 |         expandedMouse.move(handle, droppable.client.borderBox.center);\n> 123 |         expect(isOver(handle)).toBe(droppable.descriptor.id);\n      |               ^ Lazy Test\n  124 |\n  125 |         expandedMouse.startDrop(handle);\n  126 |         expect(hasPlaceholder(droppable.descriptor.id, container)).toBe(true);","start":{"line":123,"column":15,"index":4521}},{"frame":"  142 |       expandedMouse.powerLift(handle, preset.inHome1.client.borderBox.center);\n  143 |       expandedMouse.move(handle, { x: 10000, y: 10000 });\n> 144 |       expect(isOver(handle)).toBe(null);\n      |             ^ Lazy Test\n  145 |\n  146 |       // placeholder present when over nothing\n  147 |       expect(hasPlaceholder(preset.home.descriptor.id, container)).toBe(true);","start":{"line":144,"column":13,"index":5324}},{"frame":"  164 |       expandedMouse.powerLift(handle, preset.inHome1.client.borderBox.center);\n  165 |       expandedMouse.move(handle, preset.inForeign1.client.borderBox.center);\n> 166 |       expect(isOver(handle)).toBe(preset.foreign.descriptor.id);\n      |             ^ Lazy Test\n  167 |\n  168 |       expandedMouse.startDrop(handle);\n  169 |       // foreign placeholder remaining in place","start":{"line":166,"column":13,"index":6270}},{"frame":"  207 |         expandedMouse.powerLift(handle, preset.inHome1.client.borderBox.center);\n  208 |         expandedMouse.move(handle, preset.inForeign1.client.borderBox.center);\n> 209 |         expect(isOver(handle)).toBe(preset.foreign.descriptor.id);\n      |               ^ Lazy Test\n  210 |\n  211 |         expandedMouse.powerDrop(handle);\n  212 |         // placeholder still here + animating closed","start":{"line":209,"column":15,"index":7881}},{"frame":"  249 |       expandedMouse.powerLift(handle, box0.center);\n  250 |\n> 251 |       expect(isOver(handle)).toBe(preset.home.descriptor.id);\n      |             ^ Lazy Test\n  252 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n  253 |         false,\n  254 |       );","start":{"line":251,"column":13,"index":9278}},{"frame":"  264 |       expandedMouse.move(handle, preset.foreign.client.borderBox.center);\n  265 |\n> 266 |       expect(isOver(handle)).toBe(preset.foreign.descriptor.id);\n      |             ^ Lazy Test\n  267 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n  268 |         true,\n  269 |       );","start":{"line":266,"column":13,"index":9870}},{"frame":"  290 |       expandedMouse.move(handle, preset.foreign.client.borderBox.center);\n  291 |\n> 292 |       expect(isOver(handle)).toBe(preset.foreign.descriptor.id);\n      |             ^ Lazy Test\n  293 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n  294 |         true,\n  295 |       );","start":{"line":292,"column":13,"index":10861}},{"frame":"  320 |         preset.inHome2.client.borderBox.center,\n  321 |       );\n> 322 |       expect(isDragging(second)).toBe(true);\n      |             ^ Lazy Test\n  323 |       expect(isOver(second)).toBe(preset.home.descriptor.id);\n  324 |       expect(hasPlaceholder(preset.foreign.descriptor.id, container)).toBe(\n  325 |         false,","start":{"line":322,"column":13,"index":11869}}]}],"metrics":{"aggregate":{"cyclomatic":34,"cyclomaticDensity":10.526,"halstead":{"bugs":3.299,"difficulty":61.61,"effort":609778.197,"length":1510,"time":33876.566,"vocabulary":94,"volume":9897.429,"operands":{"distinct":82,"total":842,"identifiers":["findPlaceholder","droppableId","container","HTMLElement","querySelector","attributes","droppable","id","placeholder","contextId","[","=\"","\"] [","]","getPlaceholder","invariant","\"Unable to find placeholder\"","hasPlaceholder","Boolean","it","\"should not render a placeholder at rest\"","withPoorBoardDimensions","preset","render","toDroppableList","droppables","forEach","expect","descriptor","toBe","false","\"should render a placeholder when dragging over\"","getByTestId","unmount","handle","inHome1","box0","client","borderBox","expandedMouse","powerLift","center","move","isOver","true","\"should remove all placeholders if an error occurs while dragging\"","isDragging","withWarn","event","Event","\"error\"","fireEvent","window","describe","\"home list\"","\"should always render a placeholder while dragging\"","home","\"should immediately remove the home placeholder after dropping into any list\"","startDrop","finishDrop","\"should immediately remove the home placeholder after dropping nowhere\"","x","10000","y","null","\"should animate the home placeholder closed after dropping into a foreign list\"","inForeign1","foreign","style","height","\"0px\"","getTransitionEnd","\"height\"","\"should flush a home placeholder collapse animation if starting a new drag\"","powerDrop","rawPowerLift","\"foreign list\"","\"should not render a placeholder if not dragging over\"","\"should animate a placeholder closed when no longer dragging over\"","\"should flush a foreign list collapsing animation if a new drag starts\"","second","inHome2"]},"operators":{"distinct":12,"total":668,"identifiers":["function","return","()",".","``","${}","const","=","function=>","{}","new",":"]}},"paramCount":22,"sloc":{"logical":323,"physical":330}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../src/invariant","type":"esm"},{"line":5,"path":"../../../../src/view/data-attributes","type":"esm"},{"line":6,"path":"../../../../src/types","type":"esm"},{"line":7,"path":"../util/helpers","type":"esm"},{"line":8,"path":"../util/expanded-mouse","type":"esm"},{"line":9,"path":"../util/board","type":"esm"},{"line":10,"path":"../../../../src/state/dimension-structures","type":"esm"},{"line":11,"path":"../util/controls","type":"esm"},{"line":12,"path":"../../../util/console","type":"esm"}],"errors":[],"lineEnd":330,"lineStart":1,"maintainability":101.032,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.035,"difficulty":2.692,"effort":280.668,"length":25,"time":15.593,"vocabulary":18,"volume":104.248,"operands":{"distinct":13,"total":14,"identifiers":["HTMLElement","container","querySelector","attributes","droppable","id","droppableId","placeholder","contextId","[","=\"","\"] [","]"]},"operators":{"distinct":5,"total":11,"identifiers":["return","()",".","``","${}"]}},"paramCount":2,"sloc":{"logical":2,"physical":8},"errors":[],"lineEnd":21,"lineStart":14,"name":"findPlaceholder","paramNames":["droppableId","container"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":2.857,"effort":148.261,"length":15,"time":8.237,"vocabulary":11,"volume":51.891,"operands":{"distinct":7,"total":10,"identifiers":["HTMLElement","droppable","findPlaceholder","droppableId","container","invariant","\"Unable to find placeholder\""]},"operators":{"distinct":4,"total":5,"identifiers":["const","=","()","return"]}},"paramCount":2,"sloc":{"logical":4,"physical":8},"errors":[],"lineEnd":30,"lineStart":23,"name":"getPlaceholder","paramNames":["droppableId","container"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["Boolean","findPlaceholder","droppableId","container"]},"operators":{"distinct":2,"total":3,"identifiers":["return","()"]}},"paramCount":2,"sloc":{"logical":3,"physical":6},"errors":[],"lineEnd":37,"lineStart":32,"name":"hasPlaceholder","paramNames":["droppableId","container"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorBoardDimensions","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":47,"lineStart":39,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.021,"difficulty":3.429,"effort":215.683,"length":17,"time":11.982,"vocabulary":13,"volume":62.907,"operands":{"distinct":7,"total":8,"identifiers":["container","render","toDroppableList","preset","droppables","forEach","droppable"]},"operators":{"distinct":6,"total":9,"identifiers":["const","=","{}","()",".","function=>"]}},"paramCount":1,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":46,"lineStart":40,"name":"<anon method-2>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.016,"difficulty":1,"effort":46.507,"length":14,"time":2.584,"vocabulary":10,"volume":46.507,"operands":{"distinct":8,"total":8,"identifiers":["expect","hasPlaceholder","droppable","descriptor","id","container","toBe","false"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":45,"lineStart":43,"name":"<anon method-3>","paramNames":["droppable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorBoardDimensions","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":17},"errors":[],"lineEnd":65,"lineStart":49,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["toDroppableList","preset","droppables","forEach","droppable"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","function=>"]}},"paramCount":1,"sloc":{"logical":3,"physical":15},"errors":[],"lineEnd":64,"lineStart":50,"name":"<anon method-5>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.133,"difficulty":5.109,"effort":2038.423,"length":83,"time":113.246,"vocabulary":28,"volume":399.01,"operands":{"distinct":23,"total":47,"identifiers":["container","getByTestId","unmount","render","handle","HTMLElement","preset","inHome1","descriptor","id","box0","client","borderBox","expandedMouse","powerLift","center","move","droppable","expect","isOver","toBe","hasPlaceholder","true"]},"operators":{"distinct":5,"total":36,"identifiers":["const","=","{}","()","."]}},"paramCount":1,"sloc":{"logical":17,"physical":13},"errors":[],"lineEnd":63,"lineStart":51,"name":"<anon method-6>","paramNames":["droppable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorBoardDimensions","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":26},"errors":[],"lineEnd":92,"lineStart":67,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["toDroppableList","preset","droppables","forEach","droppable"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","function=>"]}},"paramCount":1,"sloc":{"logical":3,"physical":24},"errors":[],"lineEnd":91,"lineStart":68,"name":"<anon method-8>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.197,"difficulty":7.615,"effort":4493.077,"length":118,"time":249.615,"vocabulary":32,"volume":590,"operands":{"distinct":26,"total":66,"identifiers":["container","getByTestId","unmount","render","handle","HTMLElement","preset","inHome1","descriptor","id","box0","client","borderBox","expandedMouse","powerLift","center","move","droppable","expect","isDragging","toBe","true","isOver","hasPlaceholder","withWarn","false"]},"operators":{"distinct":6,"total":52,"identifiers":["const","=","{}","()",".","function=>"]}},"paramCount":1,"sloc":{"logical":28,"physical":22},"errors":[],"lineEnd":90,"lineStart":69,"name":"<anon method-9>","paramNames":["droppable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.012,"difficulty":2.8,"effort":97.634,"length":11,"time":5.424,"vocabulary":9,"volume":34.869,"operands":{"distinct":5,"total":7,"identifiers":["event","Event","\"error\"","fireEvent","window"]},"operators":{"distinct":4,"total":4,"identifiers":["const","=","new","()"]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":84,"lineStart":81,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.02,"difficulty":1.667,"effort":100,"length":20,"time":5.556,"vocabulary":8,"volume":60,"operands":{"distinct":6,"total":10,"identifiers":["it","\"should always render a placeholder while dragging\"","\"should immediately remove the home placeholder after dropping into any list\"","\"should immediately remove the home placeholder after dropping nowhere\"","\"should animate the home placeholder closed after dropping into a foreign list\"","\"should flush a home placeholder collapse animation if starting a new drag\""]},"operators":{"distinct":2,"total":10,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":147},"errors":[],"lineEnd":240,"lineStart":94,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorBoardDimensions","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":19},"errors":[],"lineEnd":113,"lineStart":95,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["toDroppableList","preset","droppables","forEach","droppable"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","function=>"]}},"paramCount":1,"sloc":{"logical":3,"physical":17},"errors":[],"lineEnd":112,"lineStart":96,"name":"<anon method-13>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.138,"difficulty":5,"effort":2064.642,"length":85,"time":114.702,"vocabulary":29,"volume":412.928,"operands":{"distinct":24,"total":48,"identifiers":["container","getByTestId","unmount","render","handle","HTMLElement","preset","inHome1","descriptor","id","box0","client","borderBox","expandedMouse","powerLift","center","move","droppable","expect","isOver","toBe","hasPlaceholder","home","true"]},"operators":{"distinct":5,"total":37,"identifiers":["const","=","{}","()","."]}},"paramCount":1,"sloc":{"logical":17,"physical":15},"errors":[],"lineEnd":111,"lineStart":97,"name":"<anon method-14>","paramNames":["droppable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorBoardDimensions","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":21},"errors":[],"lineEnd":135,"lineStart":115,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["toDroppableList","preset","droppables","forEach","droppable"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","function=>"]}},"paramCount":1,"sloc":{"logical":3,"physical":19},"errors":[],"lineEnd":134,"lineStart":116,"name":"<anon method-16>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.168,"difficulty":5.9,"effort":2981.917,"length":103,"time":165.662,"vocabulary":30,"volume":505.41,"operands":{"distinct":25,"total":59,"identifiers":["container","getByTestId","unmount","render","handle","HTMLElement","preset","inHome1","descriptor","id","expandedMouse","powerLift","client","borderBox","center","move","droppable","expect","isOver","toBe","startDrop","hasPlaceholder","true","finishDrop","false"]},"operators":{"distinct":5,"total":44,"identifiers":["const","=","{}","()","."]}},"paramCount":1,"sloc":{"logical":21,"physical":17},"errors":[],"lineEnd":133,"lineStart":117,"name":"<anon method-17>","paramNames":["droppable"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorBoardDimensions","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":21},"errors":[],"lineEnd":157,"lineStart":137,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.195,"difficulty":6.964,"effort":4074.513,"length":115,"time":226.362,"vocabulary":34,"volume":585.058,"operands":{"distinct":28,"total":65,"identifiers":["container","getByTestId","render","handle","HTMLElement","preset","inHome1","descriptor","id","expandedMouse","powerLift","client","borderBox","center","move","x","10000","y","expect","isOver","toBe","null","hasPlaceholder","home","true","startDrop","finishDrop","false"]},"operators":{"distinct":6,"total":50,"identifiers":["const","=","{}","()",".",":"]}},"paramCount":1,"sloc":{"logical":24,"physical":19},"errors":[],"lineEnd":156,"lineStart":138,"name":"<anon method-19>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorBoardDimensions","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":41},"errors":[],"lineEnd":199,"lineStart":159,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.328,"difficulty":7.721,"effort":7589.993,"length":186,"time":421.666,"vocabulary":39,"volume":983.085,"operands":{"distinct":34,"total":105,"identifiers":["container","getByTestId","render","handle","HTMLElement","preset","inHome1","descriptor","id","expandedMouse","powerLift","client","borderBox","center","move","inForeign1","expect","isOver","toBe","foreign","startDrop","hasPlaceholder","true","home","finishDrop","false","placeholder","getPlaceholder","style","height","\"0px\"","fireEvent","getTransitionEnd","\"height\""]},"operators":{"distinct":5,"total":81,"identifiers":["const","=","{}","()","."]}},"paramCount":1,"sloc":{"logical":34,"physical":39},"errors":[],"lineEnd":198,"lineStart":160,"name":"<anon method-21>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorBoardDimensions","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":39},"errors":[],"lineEnd":239,"lineStart":201,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.265,"difficulty":6.935,"effort":5521.813,"length":154,"time":306.767,"vocabulary":36,"volume":796.168,"operands":{"distinct":31,"total":86,"identifiers":["container","getByTestId","render","handle","HTMLElement","preset","inHome1","descriptor","id","expandedMouse","powerLift","client","borderBox","center","move","inForeign1","expect","isOver","toBe","foreign","powerDrop","hasPlaceholder","home","true","placeholder","getPlaceholder","style","height","\"0px\"","rawPowerLift","false"]},"operators":{"distinct":5,"total":68,"identifiers":["const","=","{}","()","."]}},"paramCount":1,"sloc":{"logical":25,"physical":37},"errors":[],"lineEnd":238,"lineStart":202,"name":"<anon method-23>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should not render a placeholder if not dragging over\"","\"should animate a placeholder closed when no longer dragging over\"","\"should flush a foreign list collapsing animation if a new drag starts\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":88},"errors":[],"lineEnd":329,"lineStart":242,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorBoardDimensions","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":14},"errors":[],"lineEnd":256,"lineStart":243,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.113,"difficulty":4.432,"effort":1496.169,"length":71,"time":83.12,"vocabulary":27,"volume":337.597,"operands":{"distinct":22,"total":39,"identifiers":["container","getByTestId","render","handle","HTMLElement","preset","inHome1","descriptor","id","box0","client","borderBox","expandedMouse","powerLift","center","expect","isOver","toBe","home","hasPlaceholder","foreign","false"]},"operators":{"distinct":5,"total":32,"identifiers":["const","=","{}","()","."]}},"paramCount":1,"sloc":{"logical":14,"physical":12},"errors":[],"lineEnd":255,"lineStart":244,"name":"<anon method-26>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorBoardDimensions","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":25},"errors":[],"lineEnd":282,"lineStart":258,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.225,"difficulty":6.944,"effort":4687.5,"length":135,"time":260.417,"vocabulary":32,"volume":675,"operands":{"distinct":27,"total":75,"identifiers":["container","getByTestId","render","handle","HTMLElement","preset","inHome1","descriptor","id","expandedMouse","powerLift","client","borderBox","center","move","foreign","expect","isOver","toBe","hasPlaceholder","true","home","placeholder","getPlaceholder","style","height","\"0px\""]},"operators":{"distinct":5,"total":60,"identifiers":["const","=","{}","()","."]}},"paramCount":1,"sloc":{"logical":22,"physical":23},"errors":[],"lineEnd":281,"lineStart":259,"name":"<anon method-28>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorBoardDimensions","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":45},"errors":[],"lineEnd":328,"lineStart":284,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.39,"difficulty":9.394,"effort":10993.613,"length":223,"time":610.756,"vocabulary":38,"volume":1170.288,"operands":{"distinct":33,"total":124,"identifiers":["container","getByTestId","render","handle","HTMLElement","preset","inHome1","descriptor","id","expandedMouse","powerLift","client","borderBox","center","move","foreign","expect","isOver","toBe","hasPlaceholder","true","home","placeholder","getPlaceholder","style","height","\"0px\"","startDrop","second","inHome2","rawPowerLift","isDragging","false"]},"operators":{"distinct":5,"total":99,"identifiers":["const","=","{}","()","."]}},"paramCount":1,"sloc":{"logical":38,"physical":43},"errors":[],"lineEnd":327,"lineStart":285,"name":"<anon method-30>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.31,"halstead":{"bugs":0.097,"difficulty":1.812,"effort":17934.653,"length":44.412,"time":996.37,"vocabulary":2.765,"volume":291.101,"operands":{"distinct":2.412,"total":24.765},"operators":{"distinct":0.353,"total":19.647}},"paramCount":0.647,"sloc":{"logical":9.5,"physical":9.706}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":29.208,"halstead":{"bugs":0.071,"difficulty":3.029,"effort":1429.183,"length":44.788,"time":79.399,"vocabulary":14.606,"volume":214.306,"operands":{"distinct":11.182,"total":24.939},"operators":{"distinct":3.424,"total":19.848}},"paramCount":0.667,"sloc":{"logical":9.394,"physical":26.152}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/droppable/clone.spec.js","testCases":4,"smells":25,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  50 |     const { unmount, getByTestId } = render(<App useClone />);\n  51 |     simpleLift(keyboard, getByTestId('0'));\n> 52 |     expect(getByTestId('0').parentElement).toBe(body);\n     |    ^ Duplicate Assert\n  53 |     unmount();\n  54 |   }\n  55 |   {","start":{"line":52,"column":4,"index":1689}},{"frame":"  60 |     );\n  61 |     simpleLift(keyboard, getByTestId('0'));\n> 62 |     expect(getByTestId('0').parentElement).toBe(element);\n     |    ^ Duplicate Assert\n  63 |     unmount();\n  64 |   }\n  65 | });","start":{"line":62,"column":4,"index":2019}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  26 |   Array.from({ length: 4 }).forEach(() => {\n  27 |     const beforeLift = getByTestId('0');\n> 28 |     simpleLift(keyboard, beforeLift);\n     |    ^ Eager Test\n  29 |     expect(isClone(beforeLift)).toBe(false);\n  30 |\n  31 |     // after lift there is still only one item - but it is different","start":{"line":28,"column":4,"index":933}},{"frame":"  27 |     const beforeLift = getByTestId('0');\n  28 |     simpleLift(keyboard, beforeLift);\n> 29 |     expect(isClone(beforeLift)).toBe(false);\n     |           ^ Eager Test\n  30 |\n  31 |     // after lift there is still only one item - but it is different\n  32 |     const clone = getByTestId('0');","start":{"line":29,"column":11,"index":978}},{"frame":"  32 |     const clone = getByTestId('0');\n  33 |     expect(clone).not.toBe(beforeLift);\n> 34 |     expect(isDragging(clone)).toBe(true);\n     |           ^ Eager Test\n  35 |     expect(isClone(clone)).toBe(true);\n  36 |\n  37 |     keyboard.drop(clone);","start":{"line":34,"column":11,"index":1169}},{"frame":"  33 |     expect(clone).not.toBe(beforeLift);\n  34 |     expect(isDragging(clone)).toBe(true);\n> 35 |     expect(isClone(clone)).toBe(true);\n     |           ^ Eager Test\n  36 |\n  37 |     keyboard.drop(clone);\n  38 |","start":{"line":35,"column":11,"index":1211}},{"frame":"  39 |     const finished = getByTestId('0');\n  40 |     expect(finished).not.toBe(clone);\n> 41 |     expect(isClone(finished)).toBe(false);\n     |           ^ Eager Test\n  42 |     expect(isDragging(finished)).toBe(false);\n  43 |   });\n  44 | });","start":{"line":41,"column":11,"index":1355}},{"frame":"  40 |     expect(finished).not.toBe(clone);\n  41 |     expect(isClone(finished)).toBe(false);\n> 42 |     expect(isDragging(finished)).toBe(false);\n     |           ^ Eager Test\n  43 |   });\n  44 | });\n  45 |","start":{"line":42,"column":11,"index":1398}},{"frame":"  49 |   {\n  50 |     const { unmount, getByTestId } = render(<App useClone />);\n> 51 |     simpleLift(keyboard, getByTestId('0'));\n     |    ^ Eager Test\n  52 |     expect(getByTestId('0').parentElement).toBe(body);\n  53 |     unmount();\n  54 |   }","start":{"line":51,"column":4,"index":1645}},{"frame":"  59 |       <App useClone getContainerForClone={() => element} />,\n  60 |     );\n> 61 |     simpleLift(keyboard, getByTestId('0'));\n     |    ^ Eager Test\n  62 |     expect(getByTestId('0').parentElement).toBe(element);\n  63 |     unmount();\n  64 |   }","start":{"line":61,"column":4,"index":1975}},{"frame":"  70 |   const { getByTestId } = render(<App renderItem={renderItem} useClone />);\n  71 |\n> 72 |   simpleLift(keyboard, getByTestId('1'));\n     |  ^ Eager Test\n  73 |\n  74 |   const last: ?Call = getLast(getCallsFor('1', spy));\n  75 |   invariant(last);","start":{"line":72,"column":2,"index":2315}},{"frame":"  72 |   simpleLift(keyboard, getByTestId('1'));\n  73 |\n> 74 |   const last: ?Call = getLast(getCallsFor('1', spy));\n     |                      ^ Eager Test\n  75 |   invariant(last);\n  76 |   const expected: DraggableStateSnapshot = {\n  77 |     isClone: true,","start":{"line":74,"column":22,"index":2378}},{"frame":"  73 |\n  74 |   const last: ?Call = getLast(getCallsFor('1', spy));\n> 75 |   invariant(last);\n     |  ^ Eager Test\n  76 |   const expected: DraggableStateSnapshot = {\n  77 |     isClone: true,\n  78 |     isDragging: true,","start":{"line":75,"column":2,"index":2412}},{"frame":"   97 |\n   98 |     const clone: HTMLElement = getByTestId('0');\n>  99 |     expect(isClone(clone)).toBe(true);\n      |           ^ Eager Test\n  100 |     expect(isDragging(clone)).toBe(true);\n  101 |\n  102 |     // move item 0 to index 1","start":{"line":99,"column":11,"index":3183}},{"frame":"   98 |     const clone: HTMLElement = getByTestId('0');\n   99 |     expect(isClone(clone)).toBe(true);\n> 100 |     expect(isDragging(clone)).toBe(true);\n      |           ^ Eager Test\n  101 |\n  102 |     // move item 0 to index 1\n  103 |     expandedMouse.move(clone, box1.center);","start":{"line":100,"column":11,"index":3222}},{"frame":"  105 |     // drop started, but still occurring\n  106 |     expandedMouse.startDrop(clone);\n> 107 |     expect(isDropAnimating(clone)).toBe(true);\n      |           ^ Eager Test\n  108 |\n  109 |     // starting a new drag with item 1 (which is in index 0 visually now)\n  110 |     // using box0.center as the lifting point","start":{"line":107,"column":11,"index":3417}},{"frame":"  116 |     });\n  117 |\n> 118 |     expect(isDragging(getByTestId('1'))).toBe(true);\n      |           ^ Eager Test\n  119 |     expect(isDragging(getByTestId('0'))).toBe(false);\n  120 |   });\n  121 | });","start":{"line":118,"column":11,"index":3856}},{"frame":"  117 |\n  118 |     expect(isDragging(getByTestId('1'))).toBe(true);\n> 119 |     expect(isDragging(getByTestId('0'))).toBe(false);\n      |           ^ Eager Test\n  120 |   });\n  121 | });\n  122 |","start":{"line":119,"column":11,"index":3909}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  26 |   Array.from({ length: 4 }).forEach(() => {\n  27 |     const beforeLift = getByTestId('0');\n> 28 |     simpleLift(keyboard, beforeLift);\n     |    ^ Lazy Test\n  29 |     expect(isClone(beforeLift)).toBe(false);\n  30 |\n  31 |     // after lift there is still only one item - but it is different","start":{"line":28,"column":4,"index":933}},{"frame":"  27 |     const beforeLift = getByTestId('0');\n  28 |     simpleLift(keyboard, beforeLift);\n> 29 |     expect(isClone(beforeLift)).toBe(false);\n     |           ^ Lazy Test\n  30 |\n  31 |     // after lift there is still only one item - but it is different\n  32 |     const clone = getByTestId('0');","start":{"line":29,"column":11,"index":978}},{"frame":"  32 |     const clone = getByTestId('0');\n  33 |     expect(clone).not.toBe(beforeLift);\n> 34 |     expect(isDragging(clone)).toBe(true);\n     |           ^ Lazy Test\n  35 |     expect(isClone(clone)).toBe(true);\n  36 |\n  37 |     keyboard.drop(clone);","start":{"line":34,"column":11,"index":1169}},{"frame":"  49 |   {\n  50 |     const { unmount, getByTestId } = render(<App useClone />);\n> 51 |     simpleLift(keyboard, getByTestId('0'));\n     |    ^ Lazy Test\n  52 |     expect(getByTestId('0').parentElement).toBe(body);\n  53 |     unmount();\n  54 |   }","start":{"line":51,"column":4,"index":1645}},{"frame":"  70 |   const { getByTestId } = render(<App renderItem={renderItem} useClone />);\n  71 |\n> 72 |   simpleLift(keyboard, getByTestId('1'));\n     |  ^ Lazy Test\n  73 |\n  74 |   const last: ?Call = getLast(getCallsFor('1', spy));\n  75 |   invariant(last);","start":{"line":72,"column":2,"index":2315}},{"frame":"   97 |\n   98 |     const clone: HTMLElement = getByTestId('0');\n>  99 |     expect(isClone(clone)).toBe(true);\n      |           ^ Lazy Test\n  100 |     expect(isDragging(clone)).toBe(true);\n  101 |\n  102 |     // move item 0 to index 1","start":{"line":99,"column":11,"index":3183}},{"frame":"   98 |     const clone: HTMLElement = getByTestId('0');\n   99 |     expect(isClone(clone)).toBe(true);\n> 100 |     expect(isDragging(clone)).toBe(true);\n      |           ^ Lazy Test\n  101 |\n  102 |     // move item 0 to index 1\n  103 |     expandedMouse.move(clone, box1.center);","start":{"line":100,"column":11,"index":3222}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":7.087,"halstead":{"bugs":0.861,"difficulty":11.684,"effort":30174.43,"length":404,"time":1676.357,"vocabulary":84,"volume":2582.496,"operands":{"distinct":76,"total":222,"identifiers":["it","\"should no longer render the original draggable while dragging\"","getByTestId","render","Array","from","length","4","forEach","beforeLift","\"0\"","simpleLift","keyboard","expect","isClone","toBe","false","clone","not","isDragging","true","drop","finished","\"should render a dragging item into the container\"","body","getBodyElement","unmount","parentElement","element","HTMLElement","document","createElement","\"div\"","appendChild","\"should give the clone the starting location\"","spy","jest","fn","renderItem","RenderItem","renderItemAndSpy","\"1\"","last","Call","getLast","getCallsFor","invariant","expected","DraggableStateSnapshot","isDropAnimating","dropAnimation","null","combineTargetFor","combineWith","draggingOver","\"droppable\"","mode","\"SNAP\"","1","toEqual","\"should allow reordering other items when dropping\"","withPoorDimensionMocks","preset","box0","inHome1","client","borderBox","box1","inHome2","expandedMouse","powerLift","center","move","startDrop","withError","rawPowerLift"]},"operators":{"distinct":8,"total":182,"identifiers":["()","function=>","const","=","{}",".",":","[]"]}},"paramCount":1,"sloc":{"logical":127,"physical":122}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../src/invariant","type":"esm"},{"line":5,"path":"../../../../src","type":"esm"},{"line":6,"path":"../util/controls","type":"esm"},{"line":7,"path":"../util/expanded-mouse","type":"esm"},{"line":8,"path":"../../../../src/view/get-body-element","type":"esm"},{"line":18,"path":"../util/helpers","type":"esm"},{"line":19,"path":"../util/app","type":"esm"},{"line":20,"path":"../../../util/console","type":"esm"}],"errors":[],"lineEnd":122,"lineStart":1,"maintainability":100.357,"methods":[{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.024,"difficulty":4,"effort":289.359,"length":19,"time":16.075,"vocabulary":14,"volume":72.34,"operands":{"distinct":7,"total":8,"identifiers":["getByTestId","render","Array","from","length","4","forEach"]},"operators":{"distinct":7,"total":11,"identifiers":["const","=","{}","()",".",":","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":23},"errors":[],"lineEnd":44,"lineStart":22,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.127,"difficulty":6.667,"effort":2548.757,"length":90,"time":141.598,"vocabulary":19,"volume":382.313,"operands":{"distinct":15,"total":50,"identifiers":["beforeLift","getByTestId","\"0\"","simpleLift","keyboard","expect","isClone","toBe","false","clone","not","isDragging","true","drop","finished"]},"operators":{"distinct":4,"total":40,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":27,"physical":18},"errors":[],"lineEnd":43,"lineStart":26,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.115,"difficulty":7.412,"effort":2548.096,"length":76,"time":141.561,"vocabulary":23,"volume":343.791,"operands":{"distinct":17,"total":42,"identifiers":["body","getBodyElement","unmount","getByTestId","render","simpleLift","keyboard","\"0\"","expect","parentElement","toBe","element","HTMLElement","document","createElement","\"div\"","appendChild"]},"operators":{"distinct":6,"total":34,"identifiers":["const","=","()","{}",".","function=>"]}},"paramCount":0,"sloc":{"logical":26,"physical":20},"errors":[],"lineEnd":65,"lineStart":46,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["element"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":59,"lineStart":59,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.141,"difficulty":4.735,"effort":2004.197,"length":79,"time":111.344,"vocabulary":41,"volume":423.247,"operands":{"distinct":34,"total":46,"identifiers":["spy","jest","fn","renderItem","RenderItem","renderItemAndSpy","getByTestId","render","simpleLift","keyboard","\"1\"","last","Call","getLast","getCallsFor","invariant","expected","DraggableStateSnapshot","isClone","true","isDragging","isDropAnimating","false","dropAnimation","null","combineTargetFor","combineWith","draggingOver","\"droppable\"","mode","\"SNAP\"","expect","1","toEqual"]},"operators":{"distinct":7,"total":33,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":24,"physical":21},"errors":[],"lineEnd":87,"lineStart":67,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorDimensionMocks","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":32},"errors":[],"lineEnd":121,"lineStart":90,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.182,"difficulty":6.808,"effort":3710.192,"length":109,"time":206.122,"vocabulary":32,"volume":545,"operands":{"distinct":26,"total":59,"identifiers":["getByTestId","render","box0","preset","inHome1","client","borderBox","box1","inHome2","expandedMouse","powerLift","\"0\"","center","clone","HTMLElement","expect","isClone","toBe","true","isDragging","move","startDrop","isDropAnimating","withError","\"1\"","false"]},"operators":{"distinct":6,"total":50,"identifiers":["const","=","{}","()",".","function=>"]}},"paramCount":1,"sloc":{"logical":30,"physical":30},"errors":[],"lineEnd":120,"lineStart":91,"name":"<anon method-7>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":1,"effort":30,"length":10,"time":1.667,"vocabulary":8,"volume":30,"operands":{"distinct":6,"total":6,"identifiers":["expandedMouse","rawPowerLift","getByTestId","\"1\"","box0","center"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":116,"lineStart":114,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.787,"halstead":{"bugs":0.096,"difficulty":1.298,"effort":3352.714,"length":44.889,"time":186.262,"vocabulary":9.333,"volume":286.944,"operands":{"distinct":8.444,"total":24.667},"operators":{"distinct":0.889,"total":20.222}},"paramCount":0.111,"sloc":{"logical":14.111,"physical":13.556}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":28.667,"halstead":{"bugs":0.075,"difficulty":3.953,"effort":1392.325,"length":48.5,"time":77.351,"vocabulary":17.75,"volume":225.586,"operands":{"distinct":13.5,"total":26.75},"operators":{"distinct":4.25,"total":21.75}},"paramCount":0.125,"sloc":{"logical":14.875,"physical":18.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/draggable/validation.spec.js","testCases":6,"smells":2,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  53 |\n  54 | it('should log an error if draggableId is not a string', () => {\n> 55 |   [1, undefined, false, {}].forEach((value: mixed) => {\n     |                            ^ Conditional Test Logic\n  56 |     const { unmount } = render(\n  57 |       <WithCustomProps draggableId={value} index={0} />,\n  58 |     );","start":{"line":55,"column":28,"index":1441}},{"frame":"  66 |\n  67 | it('should log an error if index is not an integer', () => {\n> 68 |   ['1', 1.33, undefined, false, {}].forEach((value: mixed) => {\n     |                                    ^ Conditional Test Logic\n  69 |     const { unmount } = render(\n  70 |       <WithCustomProps draggableId=\"draggable\" index={value} />,\n  71 |     );","start":{"line":68,"column":36,"index":1751}}]}],"metrics":{"aggregate":{"cyclomatic":30,"cyclomaticDensity":34.091,"halstead":{"bugs":0.614,"difficulty":18.617,"effort":34314.768,"length":316,"time":1906.376,"vocabulary":57,"volume":1843.193,"operands":{"distinct":47,"total":175,"identifiers":["error","jest","spyOn","console","\"error\"","mockImplementation","noop","warn","\"warn\"","afterEach","mockClear","Props","draggableId","index","WithCustomProps","props","\"droppable\"","droppableProvided","innerRef","droppableProps","provided","draggableProps","dragHandleProps","placeholder","it","\"should log an error if draggableId is not a string\"","1","undefined","false","forEach","value","unmount","render","0","expect","toHaveBeenCalled","\"should log an error if index is not an integer\"","\"1\"","1.33","\"draggable\"","\"should log an error if innerRef is not provided\"","App","\"should log an error if innerRef is an SVG\"","\"should log an error if no drag handle props are applied\"","\"should log an error if the draggable is disabled as there will be no drag handle\"","mockRestore","not"]},"operators":{"distinct":10,"total":141,"identifiers":["const","=","()",".","function=>","function","return","[]",",","{}"]}},"paramCount":13,"sloc":{"logical":88,"physical":219}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":10,"path":"../../../../src","type":"esm"},{"line":11,"path":"../../../../src/empty","type":"esm"}],"errors":[],"lineEnd":219,"lineStart":1,"maintainability":129.482,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["error","mockClear","warn"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":19,"lineStart":16,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.003,"difficulty":1,"effort":10,"length":5,"time":0.556,"vocabulary":4,"volume":10,"operands":{"distinct":2,"total":2,"identifiers":["\"droppable\"","droppableProvided"]},"operators":{"distinct":2,"total":3,"identifiers":["return","function=>"]}},"paramCount":1,"sloc":{"logical":3,"physical":27},"errors":[],"lineEnd":52,"lineStart":26,"name":"WithCustomProps","paramNames":["props"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":28,"lineStart":28,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.019,"difficulty":1.375,"effort":77.65,"length":17,"time":4.314,"vocabulary":10,"volume":56.473,"operands":{"distinct":8,"total":11,"identifiers":["droppableProvided","innerRef","droppableProps","props","draggableId","index","provided","placeholder"]},"operators":{"distinct":2,"total":6,"identifiers":[".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":19},"errors":[],"lineEnd":48,"lineStart":30,"name":"<anon method-3>","paramNames":["droppableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.007,"difficulty":0.75,"effort":15.673,"length":9,"time":0.871,"vocabulary":5,"volume":20.897,"operands":{"distinct":4,"total":6,"identifiers":["provided","innerRef","draggableProps","dragHandleProps"]},"operators":{"distinct":1,"total":3,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":9},"errors":[],"lineEnd":44,"lineStart":36,"name":"<anon method-4>","paramNames":["provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.015,"difficulty":3,"effort":134.918,"length":13,"time":7.495,"vocabulary":11,"volume":44.973,"operands":{"distinct":5,"total":5,"identifiers":["1","undefined","false","forEach","value"]},"operators":{"distinct":6,"total":8,"identifiers":["()",".","[]",",","{}","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":12},"errors":[],"lineEnd":65,"lineStart":54,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.026,"difficulty":3.438,"effort":267.125,"length":21,"time":14.84,"vocabulary":13,"volume":77.709,"operands":{"distinct":8,"total":11,"identifiers":["unmount","render","value","0","expect","error","toHaveBeenCalled","mockClear"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","{}","()","."]}},"paramCount":1,"sloc":{"logical":7,"physical":10},"errors":[],"lineEnd":64,"lineStart":55,"name":"<anon method-6>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.018,"difficulty":3,"effort":161.323,"length":15,"time":8.962,"vocabulary":12,"volume":53.774,"operands":{"distinct":6,"total":6,"identifiers":["\"1\"","1.33","undefined","false","forEach","value"]},"operators":{"distinct":6,"total":9,"identifiers":["()",".","[]",",","{}","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":12},"errors":[],"lineEnd":78,"lineStart":67,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.026,"difficulty":3.438,"effort":267.125,"length":21,"time":14.84,"vocabulary":13,"volume":77.709,"operands":{"distinct":8,"total":11,"identifiers":["unmount","render","\"draggable\"","value","expect","error","toHaveBeenCalled","mockClear"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","{}","()","."]}},"paramCount":1,"sloc":{"logical":7,"physical":10},"errors":[],"lineEnd":77,"lineStart":68,"name":"<anon method-8>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["App","render","expect","error","toHaveBeenCalled"]},"operators":{"distinct":3,"total":5,"identifiers":["function","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":34},"errors":[],"lineEnd":113,"lineStart":80,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.003,"difficulty":1,"effort":10,"length":5,"time":0.556,"vocabulary":4,"volume":10,"operands":{"distinct":2,"total":2,"identifiers":["\"droppable\"","droppableProvided"]},"operators":{"distinct":2,"total":3,"identifiers":["return","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":28},"errors":[],"lineEnd":108,"lineStart":81,"name":"App","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":83,"lineStart":83,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.014,"difficulty":1.286,"effort":52.983,"length":13,"time":2.944,"vocabulary":9,"volume":41.209,"operands":{"distinct":7,"total":9,"identifiers":["droppableProvided","innerRef","droppableProps","\"draggable\"","0","provided","placeholder"]},"operators":{"distinct":2,"total":4,"identifiers":[".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":20},"errors":[],"lineEnd":104,"lineStart":85,"name":"<anon method-11>","paramNames":["droppableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":0.667,"effort":8,"length":6,"time":0.444,"vocabulary":4,"volume":12,"operands":{"distinct":3,"total":4,"identifiers":["provided","draggableProps","dragHandleProps"]},"operators":{"distinct":1,"total":2,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":10},"errors":[],"lineEnd":100,"lineStart":91,"name":"<anon method-12>","paramNames":["provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["App","render","expect","error","toHaveBeenCalled"]},"operators":{"distinct":3,"total":5,"identifiers":["function","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":34},"errors":[],"lineEnd":148,"lineStart":115,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.003,"difficulty":1,"effort":10,"length":5,"time":0.556,"vocabulary":4,"volume":10,"operands":{"distinct":2,"total":2,"identifiers":["\"droppable\"","droppableProvided"]},"operators":{"distinct":2,"total":3,"identifiers":["return","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":28},"errors":[],"lineEnd":143,"lineStart":116,"name":"App","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":118,"lineStart":118,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.014,"difficulty":1.286,"effort":52.983,"length":13,"time":2.944,"vocabulary":9,"volume":41.209,"operands":{"distinct":7,"total":9,"identifiers":["droppableProvided","innerRef","droppableProps","\"draggable\"","0","provided","placeholder"]},"operators":{"distinct":2,"total":4,"identifiers":[".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":20},"errors":[],"lineEnd":139,"lineStart":120,"name":"<anon method-15>","paramNames":["droppableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.007,"difficulty":0.75,"effort":15.673,"length":9,"time":0.871,"vocabulary":5,"volume":20.897,"operands":{"distinct":4,"total":6,"identifiers":["provided","innerRef","draggableProps","dragHandleProps"]},"operators":{"distinct":1,"total":3,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":10},"errors":[],"lineEnd":135,"lineStart":126,"name":"<anon method-16>","paramNames":["provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["App","render","expect","error","toHaveBeenCalled"]},"operators":{"distinct":3,"total":5,"identifiers":["function","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":34},"errors":[],"lineEnd":183,"lineStart":150,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.003,"difficulty":1,"effort":10,"length":5,"time":0.556,"vocabulary":4,"volume":10,"operands":{"distinct":2,"total":2,"identifiers":["\"droppable\"","droppableProvided"]},"operators":{"distinct":2,"total":3,"identifiers":["return","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":28},"errors":[],"lineEnd":178,"lineStart":151,"name":"App","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":153,"lineStart":153,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.014,"difficulty":1.286,"effort":52.983,"length":13,"time":2.944,"vocabulary":9,"volume":41.209,"operands":{"distinct":7,"total":9,"identifiers":["droppableProvided","innerRef","droppableProps","\"draggable\"","0","provided","placeholder"]},"operators":{"distinct":2,"total":4,"identifiers":[".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":20},"errors":[],"lineEnd":174,"lineStart":155,"name":"<anon method-19>","paramNames":["droppableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":0.667,"effort":8,"length":6,"time":0.444,"vocabulary":4,"volume":12,"operands":{"distinct":3,"total":4,"identifiers":["provided","innerRef","draggableProps"]},"operators":{"distinct":1,"total":2,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":10},"errors":[],"lineEnd":170,"lineStart":161,"name":"<anon method-20>","paramNames":["provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.018,"difficulty":1.714,"effort":91.116,"length":16,"time":5.062,"vocabulary":10,"volume":53.151,"operands":{"distinct":7,"total":8,"identifiers":["App","error","mockRestore","render","expect","not","toHaveBeenCalled"]},"operators":{"distinct":3,"total":8,"identifiers":["function","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":34},"errors":[],"lineEnd":218,"lineStart":185,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.003,"difficulty":1,"effort":10,"length":5,"time":0.556,"vocabulary":4,"volume":10,"operands":{"distinct":2,"total":2,"identifiers":["\"droppable\"","droppableProvided"]},"operators":{"distinct":2,"total":3,"identifiers":["return","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":27},"errors":[],"lineEnd":212,"lineStart":186,"name":"App","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":188,"lineStart":188,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.014,"difficulty":1.286,"effort":52.983,"length":13,"time":2.944,"vocabulary":9,"volume":41.209,"operands":{"distinct":7,"total":9,"identifiers":["droppableProvided","innerRef","droppableProps","\"draggable\"","0","provided","placeholder"]},"operators":{"distinct":2,"total":4,"identifiers":[".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":19},"errors":[],"lineEnd":208,"lineStart":190,"name":"<anon method-23>","paramNames":["droppableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.007,"difficulty":0.75,"effort":15.673,"length":9,"time":0.871,"vocabulary":5,"volume":20.897,"operands":{"distinct":4,"total":6,"identifiers":["provided","innerRef","draggableProps","dragHandleProps"]},"operators":{"distinct":1,"total":3,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":9},"errors":[],"lineEnd":204,"lineStart":196,"name":"<anon method-24>","paramNames":["provided"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.136,"halstead":{"bugs":0.02,"difficulty":0.621,"effort":1143.826,"length":10.533,"time":63.546,"vocabulary":1.9,"volume":61.44,"operands":{"distinct":1.567,"total":5.833},"operators":{"distinct":0.333,"total":4.7}},"paramCount":0.433,"sloc":{"logical":2.933,"physical":7.3}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":41.043,"halstead":{"bugs":0.009,"difficulty":1.225,"effort":51.172,"length":8.862,"time":2.843,"vocabulary":6.103,"volume":26.686,"operands":{"distinct":4,"total":4.931},"operators":{"distinct":2.103,"total":3.931}},"paramCount":0.448,"sloc":{"logical":2.31,"physical":16.31}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/draggable/resting.spec.js","testCases":3,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  27 |\n  28 |   const snapshots = getSnapshotsFor('0', snapshotSpy);\n> 29 |   expect(snapshots).toHaveLength(1);\n     |                                 ^ Magic Number\n  30 |   expect(snapshots[0]).toEqual(atRest);\n  31 | });\n  32 |","start":{"line":29,"column":33,"index":858}},{"frame":"  51 |     const rubrics: DraggableRubric[] = getRubricsFor(item.id, watcher);\n  52 |\n> 53 |     expect(rubrics).toHaveLength(1);\n     |                                 ^ Magic Number\n  54 |     expect(rubrics[0]).toEqual(expected);\n  55 |   });\n  56 | });","start":{"line":53,"column":33,"index":1515}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":11.321,"halstead":{"bugs":0.383,"difficulty":9.811,"effort":11259.842,"length":192,"time":625.547,"vocabulary":63,"volume":1147.638,"operands":{"distinct":53,"total":104,"identifiers":["it","\"should have no movement when at rest\"","getByText","render","handle","HTMLElement","\"item: 0\"","expect","style","transform","toBe","\"\"","transition","zIndex","\"should have a resting snapshot\"","snapshotSpy","jest","fn","renderItem","RenderItem","renderItemAndSpy","snapshots","getSnapshotsFor","\"0\"","toHaveLength","1","0","toEqual","atRest","\"should be provided with its rubric\"","watcher","items","Array","from","length","3","v","k","Item","id","forEach","item","index","expected","DraggableRubric","draggableId","type","\"DEFAULT\"","source","droppableId","\"droppable\"","rubrics","getRubricsFor"]},"operators":{"distinct":10,"total":88,"identifiers":["()","function=>","const","=","{}",".","[]",":","``","${}"]}},"paramCount":4,"sloc":{"logical":53,"physical":57}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../util/app","type":"esm"},{"line":5,"path":"../../../../src","type":"esm"},{"line":11,"path":"../util/helpers","type":"esm"}],"errors":[],"lineEnd":57,"lineStart":1,"maintainability":109.93,"methods":[{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.064,"difficulty":5.208,"effort":1000.577,"length":47,"time":55.588,"vocabulary":17,"volume":192.111,"operands":{"distinct":12,"total":25,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","expect","style","transform","toBe","\"\"","transition","zIndex"]},"operators":{"distinct":5,"total":22,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":8},"errors":[],"lineEnd":20,"lineStart":13,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.059,"difficulty":3.438,"effort":603.944,"length":40,"time":33.552,"vocabulary":21,"volume":175.693,"operands":{"distinct":16,"total":22,"identifiers":["snapshotSpy","jest","fn","renderItem","RenderItem","renderItemAndSpy","render","snapshots","getSnapshotsFor","\"0\"","expect","toHaveLength","1","0","toEqual","atRest"]},"operators":{"distinct":5,"total":18,"identifiers":["const","=","()",".","[]"]}},"paramCount":0,"sloc":{"logical":11,"physical":10},"errors":[],"lineEnd":31,"lineStart":22,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.06,"difficulty":4.324,"effort":773.106,"length":39,"time":42.95,"vocabulary":24,"volume":178.814,"operands":{"distinct":17,"total":21,"identifiers":["watcher","jest","fn","items","Array","from","length","3","v","k","renderItem","RenderItem","renderItemAndSpy","render","forEach","item","index"]},"operators":{"distinct":7,"total":18,"identifiers":["const","=","()",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":24},"errors":[],"lineEnd":56,"lineStart":33,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":2,"effort":39.303,"length":7,"time":2.183,"vocabulary":7,"volume":19.651,"operands":{"distinct":3,"total":3,"identifiers":["Item","id","k"]},"operators":{"distinct":4,"total":4,"identifiers":["{}",":","``","${}"]}},"paramCount":2,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":37,"lineStart":35,"name":"<anon method-4>","paramNames":["v","k"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.074,"difficulty":4.974,"effort":1098.79,"length":47,"time":61.044,"vocabulary":26,"volume":220.921,"operands":{"distinct":19,"total":27,"identifiers":["expected","DraggableRubric","draggableId","item","id","type","\"DEFAULT\"","source","droppableId","\"droppable\"","index","rubrics","getRubricsFor","watcher","expect","toHaveLength","1","0","toEqual"]},"operators":{"distinct":7,"total":20,"identifiers":["const","=","{}",":",".","()","[]"]}},"paramCount":2,"sloc":{"logical":12,"physical":14},"errors":[],"lineEnd":55,"lineStart":42,"name":"<anon method-5>","paramNames":["item","index"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.887,"halstead":{"bugs":0.064,"difficulty":1.635,"effort":1876.64,"length":32,"time":104.258,"vocabulary":10.5,"volume":191.273,"operands":{"distinct":8.833,"total":17.333},"operators":{"distinct":1.667,"total":14.667}},"paramCount":0.667,"sloc":{"logical":8.833,"physical":9.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":17.121,"halstead":{"bugs":0.052,"difficulty":3.989,"effort":703.144,"length":36,"time":39.064,"vocabulary":19,"volume":157.438,"operands":{"distinct":13.4,"total":19.6},"operators":{"distinct":5.6,"total":16.4}},"paramCount":0.8,"sloc":{"logical":9.4,"physical":11.8}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/draggable/portal.spec.js","testCases":1,"smells":5,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  35 |   );\n  36 |\n> 37 |   if (!snapshot.isDragging) {\n     |  ^ Conditional Test Logic\n  38 |     return child;\n  39 |   }\n  40 |","start":{"line":37,"column":2,"index":954}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  48 |   // not in portal yet\n  49 |   expect(before.parentElement).not.toBe(portal);\n> 50 |   expect(isDragging(before)).toBe(false);\n     |         ^ Eager Test\n  51 |\n  52 |   // moved to portal after lift\n  53 |   simpleLift(mouse, before);","start":{"line":50,"column":9,"index":1314}},{"frame":"  51 |\n  52 |   // moved to portal after lift\n> 53 |   simpleLift(mouse, before);\n     |  ^ Eager Test\n  54 |   const inPortal: HTMLElement = getByTestId('0');\n  55 |   expect(inPortal.parentElement).toBe(portal);\n  56 |   expect(before).not.toBe(inPortal);","start":{"line":53,"column":2,"index":1382}},{"frame":"  55 |   expect(inPortal.parentElement).toBe(portal);\n  56 |   expect(before).not.toBe(inPortal);\n> 57 |   expect(isDragging(inPortal)).toBe(true);\n     |         ^ Eager Test\n  58 |\n  59 |   // out of portal after drop\n  60 |   mouse.drop(inPortal);","start":{"line":57,"column":9,"index":1552}},{"frame":"  62 |   expect(after.parentElement).not.toBe(portal);\n  63 |   expect(after).not.toBe(inPortal);\n> 64 |   expect(isDragging(after)).toBe(false);\n     |         ^ Eager Test\n  65 | });\n  66 |","start":{"line":64,"column":9,"index":1781}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":12.245,"halstead":{"bugs":0.341,"difficulty":11.654,"effort":11910.792,"length":183,"time":661.711,"vocabulary":48,"volume":1022.048,"operands":{"distinct":39,"total":101,"identifiers":["portal","HTMLElement","document","createElement","\"div\"","getBodyElement","appendChild","afterAll","removeChild","renderItem","item","provided","snapshot","child","Node","innerRef","draggableProps","dragHandleProps","id","isDragging","ReactDOM","createPortal","it","\"should allow consumers to use their own portal\"","getByTestId","render","before","\"0\"","expect","parentElement","not","toBe","false","simpleLift","mouse","inPortal","true","drop","after"]},"operators":{"distinct":9,"total":82,"identifiers":["const","=","()",".","function=>","if","! (prefix)","return","{}"]}},"paramCount":3,"sloc":{"logical":49,"physical":66}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"react-dom","type":"esm"},{"line":4,"path":"@testing-library/react","type":"esm"},{"line":8,"path":"../../../../src","type":"esm"},{"line":9,"path":"../../../../src/view/get-body-element","type":"esm"},{"line":10,"path":"../util/app","type":"esm"},{"line":11,"path":"../util/helpers","type":"esm"},{"line":12,"path":"../util/controls","type":"esm"}],"errors":[],"lineEnd":66,"lineStart":1,"maintainability":107.25,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1,"effort":13.932,"length":6,"time":0.774,"vocabulary":5,"volume":13.932,"operands":{"distinct":3,"total":3,"identifiers":["getBodyElement","removeChild","portal"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":19,"lineStart":17,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":22},"errors":[],"lineEnd":42,"lineStart":21,"name":"<anon method-2>","paramNames":["item"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":40,"halstead":{"bugs":0.048,"difficulty":5.115,"effort":729.575,"length":33,"time":40.532,"vocabulary":20,"volume":142.624,"operands":{"distinct":13,"total":19,"identifiers":["child","Node","provided","innerRef","draggableProps","dragHandleProps","item","id","snapshot","isDragging","ReactDOM","createPortal","portal"]},"operators":{"distinct":7,"total":14,"identifiers":["const","=",".","if","! (prefix)","return","()"]}},"paramCount":2,"sloc":{"logical":5,"physical":22},"errors":[],"lineEnd":42,"lineStart":21,"name":"<anon method-3>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.174,"difficulty":8.421,"effort":4401.564,"length":114,"time":244.531,"vocabulary":24,"volume":522.686,"operands":{"distinct":19,"total":64,"identifiers":["getByTestId","render","renderItem","before","HTMLElement","\"0\"","expect","parentElement","not","toBe","portal","isDragging","false","simpleLift","mouse","inPortal","true","drop","after"]},"operators":{"distinct":5,"total":50,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":30,"physical":22},"errors":[],"lineEnd":65,"lineStart":44,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.2,"cyclomaticDensity":2.449,"halstead":{"bugs":0.068,"difficulty":2.331,"effort":2382.158,"length":36.6,"time":132.342,"vocabulary":9.6,"volume":204.41,"operands":{"distinct":7.8,"total":20.2},"operators":{"distinct":1.8,"total":16.4}},"paramCount":0.6,"sloc":{"logical":9.8,"physical":13.2}},"methodAverage":{"cyclomatic":1.25,"cyclomaticDensity":35.833,"halstead":{"bugs":0.057,"difficulty":3.759,"effort":1286.862,"length":39,"time":71.492,"vocabulary":13,"volume":170.999,"operands":{"distinct":9.25,"total":22},"operators":{"distinct":3.75,"total":17}},"paramCount":0.75,"sloc":{"logical":9.75,"physical":17.25}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/draggable/moving-out-of-the-way.spec.js","testCases":1,"smells":5,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  31 |\n  32 |     // after critical is moved forward\n> 33 |     expect(after.style.transform).toBe(\n     |    ^ Duplicate Assert\n  34 |       `translate(0px, ${preset.inHome2.displaceBy.y}px)`,\n  35 |     );\n  36 |","start":{"line":33,"column":4,"index":1078}},{"frame":"  38 |\n  39 |     // still not moved\n> 40 |     expect(after.style.transform).toBe('');\n     |    ^ Duplicate Assert\n  41 |\n  42 |     // critical has now moved\n  43 |     expect(critical.style.transform.startsWith('translate')).toBe(true);","start":{"line":40,"column":4,"index":1259}},{"frame":"  38 |\n  39 |     // still not moved\n> 40 |     expect(after.style.transform).toBe('');\n     |    ^ Duplicate Assert\n  41 |\n  42 |     // critical has now moved\n  43 |     expect(critical.style.transform.startsWith('translate')).toBe(true);","start":{"line":40,"column":4,"index":1259}},{"frame":"  44 |\n  45 |     // after no longer displaced (moved backwards)\n> 46 |     expect(after.style.transform).toBe('');\n     |    ^ Duplicate Assert\n  47 |   });\n  48 | });\n  49 |","start":{"line":46,"column":4,"index":1459}},{"frame":"  44 |\n  45 |     // after no longer displaced (moved backwards)\n> 46 |     expect(after.style.transform).toBe('');\n     |    ^ Duplicate Assert\n  47 |   });\n  48 | });\n  49 |","start":{"line":46,"column":4,"index":1459}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":8.108,"halstead":{"bugs":0.328,"difficulty":9.171,"effort":9010.925,"length":175,"time":500.607,"vocabulary":49,"volume":982.574,"operands":{"distinct":41,"total":94,"identifiers":["it","\"should move out of the way when requested\"","withPoorDimensionMocks","preset","spy","jest","fn","renderItem","renderItemAndSpy","getByText","render","before","HTMLElement","\"item: 0\"","critical","\"item: 1\"","after","\"item: 2\"","criticalBox","inHome2","client","borderBox","afterBox","inHome3","expandedMouse","powerLift","center","expect","isDragging","toBe","true","style","transform","\"\"","displaceBy","y","translate(0px, ","px)","move","startsWith","\"translate\""]},"operators":{"distinct":8,"total":81,"identifiers":["()","function=>","const","=",".","{}","``","${}"]}},"paramCount":1,"sloc":{"logical":37,"physical":49}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"@testing-library/react","type":"esm"},{"line":3,"path":"react","type":"esm"},{"line":4,"path":"../util/app","type":"esm"},{"line":5,"path":"../util/expanded-mouse","type":"esm"},{"line":10,"path":"../util/helpers","type":"esm"}],"errors":[],"lineEnd":49,"lineStart":1,"maintainability":102.915,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorDimensionMocks","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":37},"errors":[],"lineEnd":48,"lineStart":12,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.03,"halstead":{"bugs":0.306,"difficulty":8.289,"effort":7602.603,"length":167,"time":422.367,"vocabulary":45,"volume":917.139,"operands":{"distinct":38,"total":90,"identifiers":["spy","jest","fn","renderItem","renderItemAndSpy","getByText","render","before","HTMLElement","\"item: 0\"","critical","\"item: 1\"","after","\"item: 2\"","criticalBox","preset","inHome2","client","borderBox","afterBox","inHome3","expandedMouse","powerLift","center","expect","isDragging","toBe","true","style","transform","\"\"","displaceBy","y","translate(0px, ","px)","move","startsWith","\"translate\""]},"operators":{"distinct":7,"total":77,"identifiers":["const","=","()",".","{}","``","${}"]}},"paramCount":1,"sloc":{"logical":33,"physical":35},"errors":[],"lineEnd":47,"lineStart":13,"name":"<anon method-2>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.703,"halstead":{"bugs":0.109,"difficulty":3.057,"effort":3003.642,"length":58.333,"time":166.869,"vocabulary":16.333,"volume":327.525,"operands":{"distinct":13.667,"total":31.333},"operators":{"distinct":2.667,"total":27}},"paramCount":0.333,"sloc":{"logical":12.333,"physical":16.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":26.515,"halstead":{"bugs":0.154,"difficulty":4.645,"effort":3805.302,"length":85.5,"time":211.406,"vocabulary":24.5,"volume":462.57,"operands":{"distinct":20,"total":46},"operators":{"distinct":4.5,"total":39.5}},"paramCount":0.5,"sloc":{"logical":17.5,"physical":36}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/draggable/dropping.spec.js","testCases":5,"smells":84,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  38 |   // start a drop\n  39 |   fireEvent.mouseUp(handle);\n> 40 |   expect(isDropAnimating(handle)).toBe(true);\n     |  ^ Duplicate Assert\n  41 |   expect(handle.style.position).toBe('fixed');\n  42 |\n  43 |   // moving back to origin so no transform","start":{"line":40,"column":2,"index":1029}},{"frame":"  39 |   fireEvent.mouseUp(handle);\n  40 |   expect(isDropAnimating(handle)).toBe(true);\n> 41 |   expect(handle.style.position).toBe('fixed');\n     |  ^ Duplicate Assert\n  42 |\n  43 |   // moving back to origin so no transform\n  44 |   expect(handle.style.transform).toBe('');","start":{"line":41,"column":2,"index":1075}},{"frame":"  43 |   // moving back to origin so no transform\n  44 |   expect(handle.style.transform).toBe('');\n> 45 |   expect(handle.style.transition).toBe(transitions.drop(timings.minDropTime));\n     |  ^ Duplicate Assert\n  46 |   expect(handle.style.zIndex).toBe(`${zIndexOptions.dropAnimating}`);\n  47 |\n  48 |   // completing drop","start":{"line":45,"column":2,"index":1209}},{"frame":"  48 |   // completing drop\n  49 |   fireEvent(handle, getTransitionEnd());\n> 50 |   expect(isDropAnimating(handle)).toBe(false);\n     |  ^ Duplicate Assert\n  51 |   // transition cleared\n  52 |   expect(handle.style.transition).toBe('');\n  53 |   // position: fixed cleared","start":{"line":50,"column":2,"index":1421}},{"frame":"  50 |   expect(isDropAnimating(handle)).toBe(false);\n  51 |   // transition cleared\n> 52 |   expect(handle.style.transition).toBe('');\n     |  ^ Duplicate Assert\n  53 |   // position: fixed cleared\n  54 |   expect(handle.style.position).toBe('');\n  55 | });","start":{"line":52,"column":2,"index":1492}},{"frame":"  52 |   expect(handle.style.transition).toBe('');\n  53 |   // position: fixed cleared\n> 54 |   expect(handle.style.position).toBe('');\n     |  ^ Duplicate Assert\n  55 | });\n  56 |\n  57 | it('should provide the correct snapshot to consumers', () => {","start":{"line":54,"column":2,"index":1565}},{"frame":"  61 |   const { getByText } = render(<App renderItem={renderItem} />);\n  62 |   const handle: HTMLElement = getByText('item: 0');\n> 63 |   expect(getSnapshotsFor('0', spy)).toHaveLength(1);\n     |  ^ Duplicate Assert\n  64 |\n  65 |   simpleLift(mouse, handle);\n  66 |   expect(isDragging(handle)).toBe(true);","start":{"line":63,"column":2,"index":1874}},{"frame":"  65 |   simpleLift(mouse, handle);\n  66 |   expect(isDragging(handle)).toBe(true);\n> 67 |   expect(getSnapshotsFor('0', spy)).toHaveLength(2);\n     |  ^ Duplicate Assert\n  68 |\n  69 |   mouse.move(handle);\n  70 |","start":{"line":67,"column":2,"index":1998}},{"frame":"  140 |         mode: 'FLUID',\n  141 |       };\n> 142 |       expect(snapshot).toEqual(expected);\n      |      ^ Duplicate Assert\n  143 |       expect(handle.style.opacity).toBe(`${combine.opacity.drop}`);\n  144 |       expect(handle.style.transition).toBe(transitions.drop(0.33));\n  145 |       expect(handle.style.transform).toEqual(","start":{"line":142,"column":6,"index":4142}},{"frame":"  140 |         mode: 'FLUID',\n  141 |       };\n> 142 |       expect(snapshot).toEqual(expected);\n      |      ^ Duplicate Assert\n  143 |       expect(handle.style.opacity).toBe(`${combine.opacity.drop}`);\n  144 |       expect(handle.style.transition).toBe(transitions.drop(0.33));\n  145 |       expect(handle.style.transform).toEqual(","start":{"line":142,"column":6,"index":4142}},{"frame":"  141 |       };\n  142 |       expect(snapshot).toEqual(expected);\n> 143 |       expect(handle.style.opacity).toBe(`${combine.opacity.drop}`);\n      |      ^ Duplicate Assert\n  144 |       expect(handle.style.transition).toBe(transitions.drop(0.33));\n  145 |       expect(handle.style.transform).toEqual(\n  146 |         expect.stringContaining(`scale(${combine.scale.drop})`),","start":{"line":143,"column":6,"index":4184}},{"frame":"  142 |       expect(snapshot).toEqual(expected);\n  143 |       expect(handle.style.opacity).toBe(`${combine.opacity.drop}`);\n> 144 |       expect(handle.style.transition).toBe(transitions.drop(0.33));\n      |      ^ Duplicate Assert\n  145 |       expect(handle.style.transform).toEqual(\n  146 |         expect.stringContaining(`scale(${combine.scale.drop})`),\n  147 |       );","start":{"line":144,"column":6,"index":4252}},{"frame":"  143 |       expect(handle.style.opacity).toBe(`${combine.opacity.drop}`);\n  144 |       expect(handle.style.transition).toBe(transitions.drop(0.33));\n> 145 |       expect(handle.style.transform).toEqual(\n      |      ^ Duplicate Assert\n  146 |         expect.stringContaining(`scale(${combine.scale.drop})`),\n  147 |       );\n  148 |     }","start":{"line":145,"column":6,"index":4320}},{"frame":"  162 |         mode: null,\n  163 |       };\n> 164 |       expect(snapshot).toEqual(expected);\n      |      ^ Duplicate Assert\n  165 |       expect(handle.style.opacity).toBe('');\n  166 |       expect(handle.style.transition).toBe('');\n  167 |       expect(handle.style.transform).toEqual('');","start":{"line":164,"column":6,"index":4828}},{"frame":"  162 |         mode: null,\n  163 |       };\n> 164 |       expect(snapshot).toEqual(expected);\n      |      ^ Duplicate Assert\n  165 |       expect(handle.style.opacity).toBe('');\n  166 |       expect(handle.style.transition).toBe('');\n  167 |       expect(handle.style.transform).toEqual('');","start":{"line":164,"column":6,"index":4828}},{"frame":"  163 |       };\n  164 |       expect(snapshot).toEqual(expected);\n> 165 |       expect(handle.style.opacity).toBe('');\n      |      ^ Duplicate Assert\n  166 |       expect(handle.style.transition).toBe('');\n  167 |       expect(handle.style.transform).toEqual('');\n  168 |     }","start":{"line":165,"column":6,"index":4870}},{"frame":"  164 |       expect(snapshot).toEqual(expected);\n  165 |       expect(handle.style.opacity).toBe('');\n> 166 |       expect(handle.style.transition).toBe('');\n      |      ^ Duplicate Assert\n  167 |       expect(handle.style.transform).toEqual('');\n  168 |     }\n  169 |   });","start":{"line":166,"column":6,"index":4915}},{"frame":"  165 |       expect(handle.style.opacity).toBe('');\n  166 |       expect(handle.style.transition).toBe('');\n> 167 |       expect(handle.style.transform).toEqual('');\n      |      ^ Duplicate Assert\n  168 |     }\n  169 |   });\n  170 | });","start":{"line":167,"column":6,"index":4963}},{"frame":"  181 |   // start a drop\n  182 |   fireEvent.mouseUp(handle);\n> 183 |   expect(isDropAnimating(handle)).toBe(true);\n      |  ^ Duplicate Assert\n  184 |\n  185 |   const event: Event = getTransitionEnd();\n  186 |   // $FlowFixMe - unknown property","start":{"line":183,"column":2,"index":5377}},{"frame":"  181 |   // start a drop\n  182 |   fireEvent.mouseUp(handle);\n> 183 |   expect(isDropAnimating(handle)).toBe(true);\n      |  ^ Duplicate Assert\n  184 |\n  185 |   const event: Event = getTransitionEnd();\n  186 |   // $FlowFixMe - unknown property","start":{"line":183,"column":2,"index":5377}},{"frame":"  189 |\n  190 |   // still drop animating!\n> 191 |   expect(isDropAnimating(handle)).toBe(true);\n      |  ^ Duplicate Assert\n  192 | });\n  193 |\n  194 | it('should not trigger a drop if a transitionend event occurs when not dropping', () => {","start":{"line":191,"column":2,"index":5595}},{"frame":"  189 |\n  190 |   // still drop animating!\n> 191 |   expect(isDropAnimating(handle)).toBe(true);\n      |  ^ Duplicate Assert\n  192 | });\n  193 |\n  194 | it('should not trigger a drop if a transitionend event occurs when not dropping', () => {","start":{"line":191,"column":2,"index":5595}},{"frame":"  201 |   mouse.lift(handle);\n  202 |   fireEvent(handle, getTransitionEnd());\n> 203 |   expect(isDragging(handle)).toBe(true);\n      |  ^ Duplicate Assert\n  204 |   expect(isDropAnimating(handle)).toBe(false);\n  205 |\n  206 |   mouse.move(handle);","start":{"line":203,"column":2,"index":5960}},{"frame":"  201 |   mouse.lift(handle);\n  202 |   fireEvent(handle, getTransitionEnd());\n> 203 |   expect(isDragging(handle)).toBe(true);\n      |  ^ Duplicate Assert\n  204 |   expect(isDropAnimating(handle)).toBe(false);\n  205 |\n  206 |   mouse.move(handle);","start":{"line":203,"column":2,"index":5960}},{"frame":"  202 |   fireEvent(handle, getTransitionEnd());\n  203 |   expect(isDragging(handle)).toBe(true);\n> 204 |   expect(isDropAnimating(handle)).toBe(false);\n      |  ^ Duplicate Assert\n  205 |\n  206 |   mouse.move(handle);\n  207 |   expect(isDragging(handle)).toBe(true);","start":{"line":204,"column":2,"index":6001}},{"frame":"  202 |   fireEvent(handle, getTransitionEnd());\n  203 |   expect(isDragging(handle)).toBe(true);\n> 204 |   expect(isDropAnimating(handle)).toBe(false);\n      |  ^ Duplicate Assert\n  205 |\n  206 |   mouse.move(handle);\n  207 |   expect(isDragging(handle)).toBe(true);","start":{"line":204,"column":2,"index":6001}},{"frame":"  205 |\n  206 |   mouse.move(handle);\n> 207 |   expect(isDragging(handle)).toBe(true);\n      |  ^ Duplicate Assert\n  208 |   expect(isDropAnimating(handle)).toBe(false);\n  209 |\n  210 |   fireEvent.mouseUp(handle);","start":{"line":207,"column":2,"index":6071}},{"frame":"  205 |\n  206 |   mouse.move(handle);\n> 207 |   expect(isDragging(handle)).toBe(true);\n      |  ^ Duplicate Assert\n  208 |   expect(isDropAnimating(handle)).toBe(false);\n  209 |\n  210 |   fireEvent.mouseUp(handle);","start":{"line":207,"column":2,"index":6071}},{"frame":"  206 |   mouse.move(handle);\n  207 |   expect(isDragging(handle)).toBe(true);\n> 208 |   expect(isDropAnimating(handle)).toBe(false);\n      |  ^ Duplicate Assert\n  209 |\n  210 |   fireEvent.mouseUp(handle);\n  211 |   expect(isDragging(handle)).toBe(true);","start":{"line":208,"column":2,"index":6112}},{"frame":"  206 |   mouse.move(handle);\n  207 |   expect(isDragging(handle)).toBe(true);\n> 208 |   expect(isDropAnimating(handle)).toBe(false);\n      |  ^ Duplicate Assert\n  209 |\n  210 |   fireEvent.mouseUp(handle);\n  211 |   expect(isDragging(handle)).toBe(true);","start":{"line":208,"column":2,"index":6112}},{"frame":"  209 |\n  210 |   fireEvent.mouseUp(handle);\n> 211 |   expect(isDragging(handle)).toBe(true);\n      |  ^ Duplicate Assert\n  212 |   expect(isDropAnimating(handle)).toBe(true);\n  213 |\n  214 |   fireEvent(handle, getTransitionEnd());","start":{"line":211,"column":2,"index":6189}},{"frame":"  209 |\n  210 |   fireEvent.mouseUp(handle);\n> 211 |   expect(isDragging(handle)).toBe(true);\n      |  ^ Duplicate Assert\n  212 |   expect(isDropAnimating(handle)).toBe(true);\n  213 |\n  214 |   fireEvent(handle, getTransitionEnd());","start":{"line":211,"column":2,"index":6189}},{"frame":"  210 |   fireEvent.mouseUp(handle);\n  211 |   expect(isDragging(handle)).toBe(true);\n> 212 |   expect(isDropAnimating(handle)).toBe(true);\n      |  ^ Duplicate Assert\n  213 |\n  214 |   fireEvent(handle, getTransitionEnd());\n  215 |   expect(isDragging(handle)).toBe(false);","start":{"line":212,"column":2,"index":6230}},{"frame":"  213 |\n  214 |   fireEvent(handle, getTransitionEnd());\n> 215 |   expect(isDragging(handle)).toBe(false);\n      |  ^ Duplicate Assert\n  216 |   expect(isDropAnimating(handle)).toBe(false);\n  217 | });\n  218 |","start":{"line":215,"column":2,"index":6318}},{"frame":"  214 |   fireEvent(handle, getTransitionEnd());\n  215 |   expect(isDragging(handle)).toBe(false);\n> 216 |   expect(isDropAnimating(handle)).toBe(false);\n      |  ^ Duplicate Assert\n  217 | });\n  218 |","start":{"line":216,"column":2,"index":6360}},{"frame":"  214 |   fireEvent(handle, getTransitionEnd());\n  215 |   expect(isDragging(handle)).toBe(false);\n> 216 |   expect(isDropAnimating(handle)).toBe(false);\n      |  ^ Duplicate Assert\n  217 | });\n  218 |","start":{"line":216,"column":2,"index":6360}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  31 |   const handle: HTMLElement = getByText('item: 0');\n  32 |\n> 33 |   simpleLift(mouse, handle);\n     |  ^ Eager Test\n  34 |   expect(isDragging(handle)).toBe(true);\n  35 |\n  36 |   mouse.move(handle);","start":{"line":33,"column":2,"index":888}},{"frame":"  32 |\n  33 |   simpleLift(mouse, handle);\n> 34 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  35 |\n  36 |   mouse.move(handle);\n  37 |","start":{"line":34,"column":9,"index":924}},{"frame":"  38 |   // start a drop\n  39 |   fireEvent.mouseUp(handle);\n> 40 |   expect(isDropAnimating(handle)).toBe(true);\n     |         ^ Eager Test\n  41 |   expect(handle.style.position).toBe('fixed');\n  42 |\n  43 |   // moving back to origin so no transform","start":{"line":40,"column":9,"index":1036}},{"frame":"  47 |\n  48 |   // completing drop\n> 49 |   fireEvent(handle, getTransitionEnd());\n     |                    ^ Eager Test\n  50 |   expect(isDropAnimating(handle)).toBe(false);\n  51 |   // transition cleared\n  52 |   expect(handle.style.transition).toBe('');","start":{"line":49,"column":20,"index":1398}},{"frame":"  48 |   // completing drop\n  49 |   fireEvent(handle, getTransitionEnd());\n> 50 |   expect(isDropAnimating(handle)).toBe(false);\n     |         ^ Eager Test\n  51 |   // transition cleared\n  52 |   expect(handle.style.transition).toBe('');\n  53 |   // position: fixed cleared","start":{"line":50,"column":9,"index":1428}},{"frame":"  63 |   expect(getSnapshotsFor('0', spy)).toHaveLength(1);\n  64 |\n> 65 |   simpleLift(mouse, handle);\n     |  ^ Eager Test\n  66 |   expect(isDragging(handle)).toBe(true);\n  67 |   expect(getSnapshotsFor('0', spy)).toHaveLength(2);\n  68 |","start":{"line":65,"column":2,"index":1928}},{"frame":"  64 |\n  65 |   simpleLift(mouse, handle);\n> 66 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  67 |   expect(getSnapshotsFor('0', spy)).toHaveLength(2);\n  68 |\n  69 |   mouse.move(handle);","start":{"line":66,"column":9,"index":1964}},{"frame":"  71 |   // start a drop\n  72 |   fireEvent.mouseUp(handle);\n> 73 |   expect(isDropAnimating(handle)).toBe(true);\n     |         ^ Eager Test\n  74 |\n  75 |   const snapshot = getLast(getSnapshotsFor('0', spy));\n  76 |","start":{"line":73,"column":9,"index":2129}},{"frame":"  73 |   expect(isDropAnimating(handle)).toBe(true);\n  74 |\n> 75 |   const snapshot = getLast(getSnapshotsFor('0', spy));\n     |                   ^ Eager Test\n  76 |\n  77 |   const dropping: DropAnimation = {\n  78 |     duration: timings.minDropTime,","start":{"line":75,"column":19,"index":2186}},{"frame":"  111 |     // lift\n  112 |     expandedMouse.powerLift(handle, box0.center);\n> 113 |     expect(isDragging(handle)).toBe(true);\n      |           ^ Eager Test\n  114 |\n  115 |     // move into combine\n  116 |     expandedMouse.move(handle, box1.center);","start":{"line":113,"column":11,"index":3284}},{"frame":"  115 |     // move into combine\n  116 |     expandedMouse.move(handle, box1.center);\n> 117 |     expect(isCombining(handle)).toBe(true);\n      |           ^ Eager Test\n  118 |\n  119 |     expandedMouse.startDrop(handle);\n  120 |","start":{"line":117,"column":11,"index":3398}},{"frame":"  120 |\n  121 |     {\n> 122 |       const snapshot = getLast(getSnapshotsFor('0', spy));\n      |                       ^ Eager Test\n  123 |       const dropping: DropAnimation = {\n  124 |         // force cast to number :D\n  125 |         duration: ((expect.any(Number): any): number),","start":{"line":122,"column":23,"index":3499}},{"frame":"  151 |\n  152 |     {\n> 153 |       const snapshot = getLast(getSnapshotsFor('0', spy));\n      |                       ^ Eager Test\n  154 |       const expected: DraggableStateSnapshot = {\n  155 |         isDragging: false,\n  156 |         isDropAnimating: false,","start":{"line":153,"column":23,"index":4509}},{"frame":"  174 |   const handle: HTMLElement = getByText('item: 0');\n  175 |\n> 176 |   simpleLift(mouse, handle);\n      |  ^ Eager Test\n  177 |   expect(isDragging(handle)).toBe(true);\n  178 |\n  179 |   mouse.move(handle);","start":{"line":176,"column":2,"index":5236}},{"frame":"  175 |\n  176 |   simpleLift(mouse, handle);\n> 177 |   expect(isDragging(handle)).toBe(true);\n      |         ^ Eager Test\n  178 |\n  179 |   mouse.move(handle);\n  180 |","start":{"line":177,"column":9,"index":5272}},{"frame":"  181 |   // start a drop\n  182 |   fireEvent.mouseUp(handle);\n> 183 |   expect(isDropAnimating(handle)).toBe(true);\n      |         ^ Eager Test\n  184 |\n  185 |   const event: Event = getTransitionEnd();\n  186 |   // $FlowFixMe - unknown property","start":{"line":183,"column":9,"index":5384}},{"frame":"  183 |   expect(isDropAnimating(handle)).toBe(true);\n  184 |\n> 185 |   const event: Event = getTransitionEnd();\n      |                       ^ Eager Test\n  186 |   // $FlowFixMe - unknown property\n  187 |   event.propertyName = 'background';\n  188 |   fireEvent(handle, event);","start":{"line":185,"column":23,"index":5445}},{"frame":"  189 |\n  190 |   // still drop animating!\n> 191 |   expect(isDropAnimating(handle)).toBe(true);\n      |         ^ Eager Test\n  192 | });\n  193 |\n  194 | it('should not trigger a drop if a transitionend event occurs when not dropping', () => {","start":{"line":191,"column":9,"index":5602}},{"frame":"  197 |\n  198 |   mouse.preLift(handle);\n> 199 |   fireEvent(handle, getTransitionEnd());\n      |                    ^ Eager Test\n  200 |\n  201 |   mouse.lift(handle);\n  202 |   fireEvent(handle, getTransitionEnd());","start":{"line":199,"column":20,"index":5873}},{"frame":"  200 |\n  201 |   mouse.lift(handle);\n> 202 |   fireEvent(handle, getTransitionEnd());\n      |                    ^ Eager Test\n  203 |   expect(isDragging(handle)).toBe(true);\n  204 |   expect(isDropAnimating(handle)).toBe(false);\n  205 |","start":{"line":202,"column":20,"index":5937}},{"frame":"  201 |   mouse.lift(handle);\n  202 |   fireEvent(handle, getTransitionEnd());\n> 203 |   expect(isDragging(handle)).toBe(true);\n      |         ^ Eager Test\n  204 |   expect(isDropAnimating(handle)).toBe(false);\n  205 |\n  206 |   mouse.move(handle);","start":{"line":203,"column":9,"index":5967}},{"frame":"  202 |   fireEvent(handle, getTransitionEnd());\n  203 |   expect(isDragging(handle)).toBe(true);\n> 204 |   expect(isDropAnimating(handle)).toBe(false);\n      |         ^ Eager Test\n  205 |\n  206 |   mouse.move(handle);\n  207 |   expect(isDragging(handle)).toBe(true);","start":{"line":204,"column":9,"index":6008}},{"frame":"  205 |\n  206 |   mouse.move(handle);\n> 207 |   expect(isDragging(handle)).toBe(true);\n      |         ^ Eager Test\n  208 |   expect(isDropAnimating(handle)).toBe(false);\n  209 |\n  210 |   fireEvent.mouseUp(handle);","start":{"line":207,"column":9,"index":6078}},{"frame":"  206 |   mouse.move(handle);\n  207 |   expect(isDragging(handle)).toBe(true);\n> 208 |   expect(isDropAnimating(handle)).toBe(false);\n      |         ^ Eager Test\n  209 |\n  210 |   fireEvent.mouseUp(handle);\n  211 |   expect(isDragging(handle)).toBe(true);","start":{"line":208,"column":9,"index":6119}},{"frame":"  209 |\n  210 |   fireEvent.mouseUp(handle);\n> 211 |   expect(isDragging(handle)).toBe(true);\n      |         ^ Eager Test\n  212 |   expect(isDropAnimating(handle)).toBe(true);\n  213 |\n  214 |   fireEvent(handle, getTransitionEnd());","start":{"line":211,"column":9,"index":6196}},{"frame":"  210 |   fireEvent.mouseUp(handle);\n  211 |   expect(isDragging(handle)).toBe(true);\n> 212 |   expect(isDropAnimating(handle)).toBe(true);\n      |         ^ Eager Test\n  213 |\n  214 |   fireEvent(handle, getTransitionEnd());\n  215 |   expect(isDragging(handle)).toBe(false);","start":{"line":212,"column":9,"index":6237}},{"frame":"  212 |   expect(isDropAnimating(handle)).toBe(true);\n  213 |\n> 214 |   fireEvent(handle, getTransitionEnd());\n      |                    ^ Eager Test\n  215 |   expect(isDragging(handle)).toBe(false);\n  216 |   expect(isDropAnimating(handle)).toBe(false);\n  217 | });","start":{"line":214,"column":20,"index":6295}},{"frame":"  213 |\n  214 |   fireEvent(handle, getTransitionEnd());\n> 215 |   expect(isDragging(handle)).toBe(false);\n      |         ^ Eager Test\n  216 |   expect(isDropAnimating(handle)).toBe(false);\n  217 | });\n  218 |","start":{"line":215,"column":9,"index":6325}},{"frame":"  214 |   fireEvent(handle, getTransitionEnd());\n  215 |   expect(isDragging(handle)).toBe(false);\n> 216 |   expect(isDropAnimating(handle)).toBe(false);\n      |         ^ Eager Test\n  217 | });\n  218 |","start":{"line":216,"column":9,"index":6367}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  31 |   const handle: HTMLElement = getByText('item: 0');\n  32 |\n> 33 |   simpleLift(mouse, handle);\n     |  ^ Lazy Test\n  34 |   expect(isDragging(handle)).toBe(true);\n  35 |\n  36 |   mouse.move(handle);","start":{"line":33,"column":2,"index":888}},{"frame":"  32 |\n  33 |   simpleLift(mouse, handle);\n> 34 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Lazy Test\n  35 |\n  36 |   mouse.move(handle);\n  37 |","start":{"line":34,"column":9,"index":924}},{"frame":"  38 |   // start a drop\n  39 |   fireEvent.mouseUp(handle);\n> 40 |   expect(isDropAnimating(handle)).toBe(true);\n     |         ^ Lazy Test\n  41 |   expect(handle.style.position).toBe('fixed');\n  42 |\n  43 |   // moving back to origin so no transform","start":{"line":40,"column":9,"index":1036}},{"frame":"  47 |\n  48 |   // completing drop\n> 49 |   fireEvent(handle, getTransitionEnd());\n     |                    ^ Lazy Test\n  50 |   expect(isDropAnimating(handle)).toBe(false);\n  51 |   // transition cleared\n  52 |   expect(handle.style.transition).toBe('');","start":{"line":49,"column":20,"index":1398}},{"frame":"  63 |   expect(getSnapshotsFor('0', spy)).toHaveLength(1);\n  64 |\n> 65 |   simpleLift(mouse, handle);\n     |  ^ Lazy Test\n  66 |   expect(isDragging(handle)).toBe(true);\n  67 |   expect(getSnapshotsFor('0', spy)).toHaveLength(2);\n  68 |","start":{"line":65,"column":2,"index":1928}},{"frame":"  64 |\n  65 |   simpleLift(mouse, handle);\n> 66 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Lazy Test\n  67 |   expect(getSnapshotsFor('0', spy)).toHaveLength(2);\n  68 |\n  69 |   mouse.move(handle);","start":{"line":66,"column":9,"index":1964}},{"frame":"  71 |   // start a drop\n  72 |   fireEvent.mouseUp(handle);\n> 73 |   expect(isDropAnimating(handle)).toBe(true);\n     |         ^ Lazy Test\n  74 |\n  75 |   const snapshot = getLast(getSnapshotsFor('0', spy));\n  76 |","start":{"line":73,"column":9,"index":2129}},{"frame":"  73 |   expect(isDropAnimating(handle)).toBe(true);\n  74 |\n> 75 |   const snapshot = getLast(getSnapshotsFor('0', spy));\n     |                   ^ Lazy Test\n  76 |\n  77 |   const dropping: DropAnimation = {\n  78 |     duration: timings.minDropTime,","start":{"line":75,"column":19,"index":2186}},{"frame":"  111 |     // lift\n  112 |     expandedMouse.powerLift(handle, box0.center);\n> 113 |     expect(isDragging(handle)).toBe(true);\n      |           ^ Lazy Test\n  114 |\n  115 |     // move into combine\n  116 |     expandedMouse.move(handle, box1.center);","start":{"line":113,"column":11,"index":3284}},{"frame":"  120 |\n  121 |     {\n> 122 |       const snapshot = getLast(getSnapshotsFor('0', spy));\n      |                       ^ Lazy Test\n  123 |       const dropping: DropAnimation = {\n  124 |         // force cast to number :D\n  125 |         duration: ((expect.any(Number): any): number),","start":{"line":122,"column":23,"index":3499}},{"frame":"  174 |   const handle: HTMLElement = getByText('item: 0');\n  175 |\n> 176 |   simpleLift(mouse, handle);\n      |  ^ Lazy Test\n  177 |   expect(isDragging(handle)).toBe(true);\n  178 |\n  179 |   mouse.move(handle);","start":{"line":176,"column":2,"index":5236}},{"frame":"  175 |\n  176 |   simpleLift(mouse, handle);\n> 177 |   expect(isDragging(handle)).toBe(true);\n      |         ^ Lazy Test\n  178 |\n  179 |   mouse.move(handle);\n  180 |","start":{"line":177,"column":9,"index":5272}},{"frame":"  181 |   // start a drop\n  182 |   fireEvent.mouseUp(handle);\n> 183 |   expect(isDropAnimating(handle)).toBe(true);\n      |         ^ Lazy Test\n  184 |\n  185 |   const event: Event = getTransitionEnd();\n  186 |   // $FlowFixMe - unknown property","start":{"line":183,"column":9,"index":5384}},{"frame":"  183 |   expect(isDropAnimating(handle)).toBe(true);\n  184 |\n> 185 |   const event: Event = getTransitionEnd();\n      |                       ^ Lazy Test\n  186 |   // $FlowFixMe - unknown property\n  187 |   event.propertyName = 'background';\n  188 |   fireEvent(handle, event);","start":{"line":185,"column":23,"index":5445}},{"frame":"  197 |\n  198 |   mouse.preLift(handle);\n> 199 |   fireEvent(handle, getTransitionEnd());\n      |                    ^ Lazy Test\n  200 |\n  201 |   mouse.lift(handle);\n  202 |   fireEvent(handle, getTransitionEnd());","start":{"line":199,"column":20,"index":5873}},{"frame":"  201 |   mouse.lift(handle);\n  202 |   fireEvent(handle, getTransitionEnd());\n> 203 |   expect(isDragging(handle)).toBe(true);\n      |         ^ Lazy Test\n  204 |   expect(isDropAnimating(handle)).toBe(false);\n  205 |\n  206 |   mouse.move(handle);","start":{"line":203,"column":9,"index":5967}},{"frame":"  202 |   fireEvent(handle, getTransitionEnd());\n  203 |   expect(isDragging(handle)).toBe(true);\n> 204 |   expect(isDropAnimating(handle)).toBe(false);\n      |         ^ Lazy Test\n  205 |\n  206 |   mouse.move(handle);\n  207 |   expect(isDragging(handle)).toBe(true);","start":{"line":204,"column":9,"index":6008}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  61 |   const { getByText } = render(<App renderItem={renderItem} />);\n  62 |   const handle: HTMLElement = getByText('item: 0');\n> 63 |   expect(getSnapshotsFor('0', spy)).toHaveLength(1);\n     |                                                 ^ Magic Number\n  64 |\n  65 |   simpleLift(mouse, handle);\n  66 |   expect(isDragging(handle)).toBe(true);","start":{"line":63,"column":49,"index":1921}},{"frame":"  65 |   simpleLift(mouse, handle);\n  66 |   expect(isDragging(handle)).toBe(true);\n> 67 |   expect(getSnapshotsFor('0', spy)).toHaveLength(2);\n     |                                                 ^ Magic Number\n  68 |\n  69 |   mouse.move(handle);\n  70 |","start":{"line":67,"column":49,"index":2045}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":3.167,"halstead":{"bugs":1.841,"difficulty":20.074,"effort":110883.368,"length":813,"time":6160.187,"vocabulary":111,"volume":5523.86,"operands":{"distinct":102,"total":455,"identifiers":["it","\"should animate a drop to the required offset\"","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","expect","isDragging","toBe","true","move","fireEvent","mouseUp","isDropAnimating","style","position","\"fixed\"","transform","\"\"","transition","transitions","drop","timings","minDropTime","zIndex","zIndexOptions","dropAnimating","getTransitionEnd","false","\"should provide the correct snapshot to consumers\"","spy","jest","fn","renderItem","RenderItem","renderItemAndSpy","getSnapshotsFor","\"0\"","toHaveLength","1","2","snapshot","getLast","dropping","DropAnimation","duration","curve","curves","moveTo","x","0","y","opacity","null","scale","expected","DraggableStateSnapshot","isClone","dropAnimation","draggingOver","combineWith","combineTargetFor","mode","\"FLUID\"","toEqual","\"should animate scale and opacity when combining\"","withPoorDimensionMocks","preset","box0","inHome1","client","borderBox","box1","inHome2","expandedMouse","powerLift","center","isCombining","startDrop","any","Number","Object","Position","combine","\"droppable\"","\"1\"","0.33","stringContaining","scale(",")","finishDrop","\"should not trigger a drop animation finished if a transitionend occurs that is a non-primary property\"","event","Event","propertyName","\"background\"","\"should not trigger a drop if a transitionend event occurs when not dropping\"","preLift","lift"]},"operators":{"distinct":9,"total":358,"identifiers":["()","function=>","const","=","{}",".","``","${}",":"]}},"paramCount":1,"sloc":{"logical":221,"physical":218}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"css-box-model","type":"esm"},{"line":5,"path":"../util/app","type":"esm"},{"line":9,"path":"../../../../src","type":"esm"},{"line":10,"path":"../util/controls","type":"esm"},{"line":11,"path":"../util/expanded-mouse","type":"esm"},{"line":20,"path":"../util/helpers","type":"esm"},{"line":26,"path":"../../../../src/animation","type":"esm"},{"line":27,"path":"../../../../src/view/draggable/get-style","type":"esm"}],"errors":[],"lineEnd":218,"lineStart":1,"maintainability":82.001,"methods":[{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.236,"difficulty":8.633,"effort":6116.593,"length":136,"time":339.811,"vocabulary":37,"volume":708.486,"operands":{"distinct":30,"total":74,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","expect","isDragging","toBe","true","move","fireEvent","mouseUp","isDropAnimating","style","position","\"fixed\"","transform","\"\"","transition","transitions","drop","timings","minDropTime","zIndex","zIndexOptions","dropAnimating","getTransitionEnd","false"]},"operators":{"distinct":7,"total":62,"identifiers":["const","=","{}","()",".","``","${}"]}},"paramCount":0,"sloc":{"logical":32,"physical":27},"errors":[],"lineEnd":55,"lineStart":29,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.174,"halstead":{"bugs":0.307,"difficulty":5,"effort":4607.375,"length":156,"time":255.965,"vocabulary":60,"volume":921.475,"operands":{"distinct":54,"total":90,"identifiers":["spy","jest","fn","renderItem","RenderItem","renderItemAndSpy","getByText","render","handle","HTMLElement","\"item: 0\"","expect","getSnapshotsFor","\"0\"","toHaveLength","1","simpleLift","mouse","isDragging","toBe","true","2","move","fireEvent","mouseUp","isDropAnimating","snapshot","getLast","dropping","DropAnimation","duration","timings","minDropTime","curve","curves","drop","moveTo","x","0","y","opacity","null","scale","expected","DraggableStateSnapshot","isClone","false","dropAnimation","draggingOver","combineWith","combineTargetFor","mode","\"FLUID\"","toEqual"]},"operators":{"distinct":6,"total":66,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":46,"physical":41},"errors":[],"lineEnd":97,"lineStart":57,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorDimensionMocks","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":72},"errors":[],"lineEnd":170,"lineStart":99,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.408,"halstead":{"bugs":0.645,"difficulty":9.5,"effort":18377.845,"length":306,"time":1020.991,"vocabulary":80,"volume":1934.51,"operands":{"distinct":72,"total":171,"identifiers":["spy","jest","fn","renderItem","RenderItem","renderItemAndSpy","box0","preset","inHome1","client","borderBox","box1","inHome2","getByText","render","handle","HTMLElement","\"item: 0\"","expandedMouse","powerLift","center","expect","isDragging","toBe","true","move","isCombining","startDrop","snapshot","getLast","getSnapshotsFor","\"0\"","dropping","DropAnimation","duration","any","Number","curve","curves","drop","moveTo","Object","Position","opacity","0","scale","combine","expected","DraggableStateSnapshot","isDropAnimating","isClone","false","dropAnimation","draggingOver","\"droppable\"","combineWith","\"1\"","combineTargetFor","null","mode","\"FLUID\"","toEqual","style","transition","transitions","0.33","transform","stringContaining","scale(",")","finishDrop","\"\""]},"operators":{"distinct":8,"total":135,"identifiers":["const","=","()",".","{}",":","``","${}"]}},"paramCount":1,"sloc":{"logical":71,"physical":70},"errors":[],"lineEnd":169,"lineStart":100,"name":"<anon method-4>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.108,"difficulty":5,"effort":1625.35,"length":70,"time":90.297,"vocabulary":25,"volume":325.07,"operands":{"distinct":20,"total":40,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","expect","isDragging","toBe","true","move","fireEvent","mouseUp","isDropAnimating","event","Event","getTransitionEnd","propertyName","\"background\""]},"operators":{"distinct":5,"total":30,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":21,"physical":21},"errors":[],"lineEnd":192,"lineStart":172,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.182,"difficulty":9.444,"effort":5169.426,"length":121,"time":287.19,"vocabulary":23,"volume":547.351,"operands":{"distinct":18,"total":68,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","mouse","preLift","fireEvent","getTransitionEnd","lift","expect","isDragging","toBe","true","isDropAnimating","false","move","mouseUp"]},"operators":{"distinct":5,"total":53,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":39,"physical":24},"errors":[],"lineEnd":217,"lineStart":194,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.452,"halstead":{"bugs":0.263,"difficulty":2.868,"effort":15840.481,"length":116.143,"time":880.027,"vocabulary":15.857,"volume":789.123,"operands":{"distinct":14.571,"total":65},"operators":{"distinct":1.286,"total":51.143}},"paramCount":0.143,"sloc":{"logical":31.571,"physical":31.143}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":10.672,"halstead":{"bugs":0.247,"difficulty":6.43,"effort":5984.098,"length":132.167,"time":332.45,"vocabulary":38.167,"volume":740.815,"operands":{"distinct":32.667,"total":74.167},"operators":{"distinct":5.5,"total":58}},"paramCount":0.167,"sloc":{"logical":35.167,"physical":42.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/draggable/dragging.spec.js","testCases":4,"smells":32,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  24 |\n  25 |   // no transform as we are at {x: 0, y: 0}\n> 26 |   expect(handle.style.transform).toBe('');\n     |  ^ Duplicate Assert\n  27 |   expect(handle.style.transition).toBe(transitions.fluid);\n  28 |   expect(handle.style.zIndex).toBe(`${zIndexOptions.dragging}`);\n  29 |","start":{"line":26,"column":2,"index":840}},{"frame":"  25 |   // no transform as we are at {x: 0, y: 0}\n  26 |   expect(handle.style.transform).toBe('');\n> 27 |   expect(handle.style.transition).toBe(transitions.fluid);\n     |  ^ Duplicate Assert\n  28 |   expect(handle.style.zIndex).toBe(`${zIndexOptions.dragging}`);\n  29 |\n  30 |   mouse.move(handle);","start":{"line":27,"column":2,"index":883}},{"frame":"  25 |   // no transform as we are at {x: 0, y: 0}\n  26 |   expect(handle.style.transform).toBe('');\n> 27 |   expect(handle.style.transition).toBe(transitions.fluid);\n     |  ^ Duplicate Assert\n  28 |   expect(handle.style.zIndex).toBe(`${zIndexOptions.dragging}`);\n  29 |\n  30 |   mouse.move(handle);","start":{"line":27,"column":2,"index":883}},{"frame":"  26 |   expect(handle.style.transform).toBe('');\n  27 |   expect(handle.style.transition).toBe(transitions.fluid);\n> 28 |   expect(handle.style.zIndex).toBe(`${zIndexOptions.dragging}`);\n     |  ^ Duplicate Assert\n  29 |\n  30 |   mouse.move(handle);\n  31 |","start":{"line":28,"column":2,"index":942}},{"frame":"  26 |   expect(handle.style.transform).toBe('');\n  27 |   expect(handle.style.transition).toBe(transitions.fluid);\n> 28 |   expect(handle.style.zIndex).toBe(`${zIndexOptions.dragging}`);\n     |  ^ Duplicate Assert\n  29 |\n  30 |   mouse.move(handle);\n  31 |","start":{"line":28,"column":2,"index":942}},{"frame":"  30 |   mouse.move(handle);\n  31 |\n> 32 |   expect(handle.style.transform).toBe(`translate(0px, 1px)`);\n     |  ^ Duplicate Assert\n  33 |   expect(handle.style.transition).toBe(transitions.fluid);\n  34 |   expect(handle.style.zIndex).toBe(`${zIndexOptions.dragging}`);\n  35 | });","start":{"line":32,"column":2,"index":1031}},{"frame":"  31 |\n  32 |   expect(handle.style.transform).toBe(`translate(0px, 1px)`);\n> 33 |   expect(handle.style.transition).toBe(transitions.fluid);\n     |  ^ Duplicate Assert\n  34 |   expect(handle.style.zIndex).toBe(`${zIndexOptions.dragging}`);\n  35 | });\n  36 |","start":{"line":33,"column":2,"index":1093}},{"frame":"  31 |\n  32 |   expect(handle.style.transform).toBe(`translate(0px, 1px)`);\n> 33 |   expect(handle.style.transition).toBe(transitions.fluid);\n     |  ^ Duplicate Assert\n  34 |   expect(handle.style.zIndex).toBe(`${zIndexOptions.dragging}`);\n  35 | });\n  36 |","start":{"line":33,"column":2,"index":1093}},{"frame":"  32 |   expect(handle.style.transform).toBe(`translate(0px, 1px)`);\n  33 |   expect(handle.style.transition).toBe(transitions.fluid);\n> 34 |   expect(handle.style.zIndex).toBe(`${zIndexOptions.dragging}`);\n     |  ^ Duplicate Assert\n  35 | });\n  36 |\n  37 | it('should pass on the snapshot', () => {","start":{"line":34,"column":2,"index":1152}},{"frame":"  32 |   expect(handle.style.transform).toBe(`translate(0px, 1px)`);\n  33 |   expect(handle.style.transition).toBe(transitions.fluid);\n> 34 |   expect(handle.style.zIndex).toBe(`${zIndexOptions.dragging}`);\n     |  ^ Duplicate Assert\n  35 | });\n  36 |\n  37 | it('should pass on the snapshot', () => {","start":{"line":34,"column":2,"index":1152}},{"frame":"  41 |   const { getByText } = render(<App renderItem={renderItem} />);\n  42 |   const handle: HTMLElement = getByText('item: 0');\n> 43 |   expect(getSnapshotsFor('0', spy)).toHaveLength(1);\n     |  ^ Duplicate Assert\n  44 |\n  45 |   simpleLift(mouse, handle);\n  46 |   expect(isDragging(handle)).toBe(true);","start":{"line":43,"column":2,"index":1463}},{"frame":"  45 |   simpleLift(mouse, handle);\n  46 |   expect(isDragging(handle)).toBe(true);\n> 47 |   expect(getSnapshotsFor('0', spy)).toHaveLength(2);\n     |  ^ Duplicate Assert\n  48 |\n  49 |   {\n  50 |     const snapshot = getLast(getSnapshotsFor('0', spy));","start":{"line":47,"column":2,"index":1587}},{"frame":"  59 |       mode: 'FLUID',\n  60 |     };\n> 61 |     expect(snapshot).toEqual(lift);\n     |    ^ Duplicate Assert\n  62 |   }\n  63 |\n  64 |   mouse.move(handle);","start":{"line":61,"column":4,"index":1966}},{"frame":"  78 |       mode: 'FLUID',\n  79 |     };\n> 80 |     expect(snapshot).toEqual(move);\n     |    ^ Duplicate Assert\n  81 |   }\n  82 | });\n  83 |","start":{"line":80,"column":4,"index":2449}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  20 |   const handle: HTMLElement = getByText('item: 0');\n  21 |\n> 22 |   simpleLift(mouse, handle);\n     |  ^ Eager Test\n  23 |   expect(isDragging(handle)).toBe(true);\n  24 |\n  25 |   // no transform as we are at {x: 0, y: 0}","start":{"line":22,"column":2,"index":725}},{"frame":"  21 |\n  22 |   simpleLift(mouse, handle);\n> 23 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  24 |\n  25 |   // no transform as we are at {x: 0, y: 0}\n  26 |   expect(handle.style.transform).toBe('');","start":{"line":23,"column":9,"index":761}},{"frame":"  43 |   expect(getSnapshotsFor('0', spy)).toHaveLength(1);\n  44 |\n> 45 |   simpleLift(mouse, handle);\n     |  ^ Eager Test\n  46 |   expect(isDragging(handle)).toBe(true);\n  47 |   expect(getSnapshotsFor('0', spy)).toHaveLength(2);\n  48 |","start":{"line":45,"column":2,"index":1517}},{"frame":"  44 |\n  45 |   simpleLift(mouse, handle);\n> 46 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  47 |   expect(getSnapshotsFor('0', spy)).toHaveLength(2);\n  48 |\n  49 |   {","start":{"line":46,"column":9,"index":1553}},{"frame":"  48 |\n  49 |   {\n> 50 |     const snapshot = getLast(getSnapshotsFor('0', spy));\n     |                     ^ Eager Test\n  51 |     const lift: DraggableStateSnapshot = {\n  52 |       isDragging: true,\n  53 |       isDropAnimating: false,","start":{"line":50,"column":21,"index":1664}},{"frame":"  65 |\n  66 |   {\n> 67 |     const snapshot = getLast(getSnapshotsFor('0', spy));\n     |                     ^ Eager Test\n  68 |     const move: DraggableStateSnapshot = {\n  69 |       isDragging: true,\n  70 |       isDropAnimating: false,","start":{"line":67,"column":21,"index":2051}},{"frame":"  86 |   const handle: HTMLElement = getByText('item: 0');\n  87 |\n> 88 |   simpleLift(keyboard, handle);\n     |  ^ Eager Test\n  89 |\n  90 |   expect(isDragging(handle)).toBe(true);\n  91 |   expect(handle.style.transition).toBe(transitions.snap);","start":{"line":88,"column":2,"index":2643}},{"frame":"  88 |   simpleLift(keyboard, handle);\n  89 |\n> 90 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  91 |   expect(handle.style.transition).toBe(transitions.snap);\n  92 | });\n  93 |","start":{"line":90,"column":9,"index":2683}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  20 |   const handle: HTMLElement = getByText('item: 0');\n  21 |\n> 22 |   simpleLift(mouse, handle);\n     |  ^ Lazy Test\n  23 |   expect(isDragging(handle)).toBe(true);\n  24 |\n  25 |   // no transform as we are at {x: 0, y: 0}","start":{"line":22,"column":2,"index":725}},{"frame":"  21 |\n  22 |   simpleLift(mouse, handle);\n> 23 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Lazy Test\n  24 |\n  25 |   // no transform as we are at {x: 0, y: 0}\n  26 |   expect(handle.style.transform).toBe('');","start":{"line":23,"column":9,"index":761}},{"frame":"  43 |   expect(getSnapshotsFor('0', spy)).toHaveLength(1);\n  44 |\n> 45 |   simpleLift(mouse, handle);\n     |  ^ Lazy Test\n  46 |   expect(isDragging(handle)).toBe(true);\n  47 |   expect(getSnapshotsFor('0', spy)).toHaveLength(2);\n  48 |","start":{"line":45,"column":2,"index":1517}},{"frame":"  44 |\n  45 |   simpleLift(mouse, handle);\n> 46 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Lazy Test\n  47 |   expect(getSnapshotsFor('0', spy)).toHaveLength(2);\n  48 |\n  49 |   {","start":{"line":46,"column":9,"index":1553}},{"frame":"  48 |\n  49 |   {\n> 50 |     const snapshot = getLast(getSnapshotsFor('0', spy));\n     |                     ^ Lazy Test\n  51 |     const lift: DraggableStateSnapshot = {\n  52 |       isDragging: true,\n  53 |       isDropAnimating: false,","start":{"line":50,"column":21,"index":1664}},{"frame":"  86 |   const handle: HTMLElement = getByText('item: 0');\n  87 |\n> 88 |   simpleLift(keyboard, handle);\n     |  ^ Lazy Test\n  89 |\n  90 |   expect(isDragging(handle)).toBe(true);\n  91 |   expect(handle.style.transition).toBe(transitions.snap);","start":{"line":88,"column":2,"index":2643}},{"frame":"  88 |   simpleLift(keyboard, handle);\n  89 |\n> 90 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Lazy Test\n  91 |   expect(handle.style.transition).toBe(transitions.snap);\n  92 | });\n  93 |","start":{"line":90,"column":9,"index":2683}},{"frame":"  109 |     expandedMouse.move(handle, box2.center);\n  110 |\n> 111 |     const snapshot = getLast(getSnapshotsFor('0', spy));\n      |                     ^ Lazy Test\n  112 |\n  113 |     const expected: DraggableStateSnapshot = {\n  114 |       isDragging: true,","start":{"line":111,"column":21,"index":3405}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  41 |   const { getByText } = render(<App renderItem={renderItem} />);\n  42 |   const handle: HTMLElement = getByText('item: 0');\n> 43 |   expect(getSnapshotsFor('0', spy)).toHaveLength(1);\n     |                                                 ^ Magic Number\n  44 |\n  45 |   simpleLift(mouse, handle);\n  46 |   expect(isDragging(handle)).toBe(true);","start":{"line":43,"column":49,"index":1510}},{"frame":"  45 |   simpleLift(mouse, handle);\n  46 |   expect(isDragging(handle)).toBe(true);\n> 47 |   expect(getSnapshotsFor('0', spy)).toHaveLength(2);\n     |                                                 ^ Magic Number\n  48 |\n  49 |   {\n  50 |     const snapshot = getLast(getSnapshotsFor('0', spy));","start":{"line":47,"column":49,"index":1634}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":5,"halstead":{"bugs":0.962,"difficulty":15.75,"effort":45432.95,"length":455,"time":2524.053,"vocabulary":81,"volume":2884.632,"operands":{"distinct":72,"total":252,"identifiers":["it","\"should move to a provided offset\"","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","expect","isDragging","toBe","true","style","transform","\"\"","transition","transitions","fluid","zIndex","zIndexOptions","dragging","move","translate(0px, 1px)","\"should pass on the snapshot\"","spy","jest","fn","renderItem","RenderItem","renderItemAndSpy","getSnapshotsFor","\"0\"","toHaveLength","1","2","snapshot","getLast","lift","DraggableStateSnapshot","isDropAnimating","false","isClone","dropAnimation","null","draggingOver","\"droppable\"","combineWith","combineTargetFor","mode","\"FLUID\"","toEqual","\"should animate movements when in snap mode\"","keyboard","snap","\"should update the snapshot and opacity when combining with another item\"","withPoorDimensionMocks","preset","box1","inHome1","client","borderBox","box2","inHome2","expandedMouse","powerLift","center","expected","\"1\"","opacity","combine","combining"]},"operators":{"distinct":9,"total":203,"identifiers":["()","function=>","const","=","{}",".","``","${}",":"]}},"paramCount":1,"sloc":{"logical":120,"physical":128}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../util/app","type":"esm"},{"line":5,"path":"../../../../src","type":"esm"},{"line":6,"path":"../util/controls","type":"esm"},{"line":7,"path":"../util/expanded-mouse","type":"esm"},{"line":14,"path":"../util/helpers","type":"esm"},{"line":15,"path":"../../../../src/animation","type":"esm"},{"line":16,"path":"../../../../src/view/draggable/get-style","type":"esm"}],"errors":[],"lineEnd":128,"lineStart":1,"maintainability":91.921,"methods":[{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.18,"difficulty":9.227,"effort":4975.677,"length":111,"time":276.426,"vocabulary":29,"volume":539.236,"operands":{"distinct":22,"total":58,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","expect","isDragging","toBe","true","style","transform","\"\"","transition","transitions","fluid","zIndex","zIndexOptions","dragging","move","translate(0px, 1px)"]},"operators":{"distinct":7,"total":53,"identifiers":["const","=","{}","()",".","``","${}"]}},"paramCount":0,"sloc":{"logical":22,"physical":18},"errors":[],"lineEnd":35,"lineStart":18,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.083,"halstead":{"bugs":0.287,"difficulty":7.077,"effort":6101.871,"length":157,"time":338.993,"vocabulary":45,"volume":862.221,"operands":{"distinct":39,"total":92,"identifiers":["spy","jest","fn","renderItem","RenderItem","renderItemAndSpy","getByText","render","handle","HTMLElement","\"item: 0\"","expect","getSnapshotsFor","\"0\"","toHaveLength","1","simpleLift","mouse","isDragging","toBe","true","2","snapshot","getLast","lift","DraggableStateSnapshot","isDropAnimating","false","isClone","dropAnimation","null","draggingOver","\"droppable\"","combineWith","combineTargetFor","mode","\"FLUID\"","toEqual","move"]},"operators":{"distinct":6,"total":65,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":48,"physical":46},"errors":[],"lineEnd":82,"lineStart":37,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.058,"difficulty":3.667,"effort":633.883,"length":40,"time":35.216,"vocabulary":20,"volume":172.877,"operands":{"distinct":15,"total":22,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","keyboard","expect","isDragging","toBe","true","style","transition","transitions","snap"]},"operators":{"distinct":5,"total":18,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":9},"errors":[],"lineEnd":92,"lineStart":84,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorDimensionMocks","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":34},"errors":[],"lineEnd":127,"lineStart":94,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.247,"difficulty":5.714,"effort":4233.012,"length":127,"time":235.167,"vocabulary":57,"volume":740.777,"operands":{"distinct":49,"total":70,"identifiers":["spy","jest","fn","renderItem","RenderItem","renderItemAndSpy","box1","preset","inHome1","client","borderBox","box2","inHome2","getByText","render","handle","HTMLElement","\"item: 0\"","expandedMouse","powerLift","center","move","snapshot","getLast","getSnapshotsFor","\"0\"","expected","DraggableStateSnapshot","isDragging","true","isDropAnimating","false","isClone","dropAnimation","null","draggingOver","\"droppable\"","combineWith","\"1\"","combineTargetFor","mode","\"FLUID\"","expect","toEqual","style","opacity","toBe","combine","combining"]},"operators":{"distinct":8,"total":57,"identifiers":["const","=","()",".","{}",":","``","${}"]}},"paramCount":1,"sloc":{"logical":29,"physical":32},"errors":[],"lineEnd":126,"lineStart":95,"name":"<anon method-5>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.833,"halstead":{"bugs":0.16,"difficulty":2.625,"effort":7572.158,"length":75.833,"time":420.675,"vocabulary":13.5,"volume":480.772,"operands":{"distinct":12,"total":42},"operators":{"distinct":1.5,"total":33.833}},"paramCount":0.167,"sloc":{"logical":20,"physical":21.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":13.834,"halstead":{"bugs":0.155,"difficulty":5.337,"effort":3190.488,"length":87.8,"time":177.249,"vocabulary":31,"volume":464.622,"operands":{"distinct":25.4,"total":48.8},"operators":{"distinct":5.6,"total":39}},"paramCount":0.2,"sloc":{"logical":22.4,"physical":27.8}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/draggable/combined-with.spec.js","testCases":1,"smells":4,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  28 |\n  29 |     expandedMouse.powerLift(critical, criticalBox.center);\n> 30 |     expect(isDragging(critical)).toBe(true);\n     |           ^ Eager Test\n  31 |\n  32 |     // will now be combining\n  33 |     expandedMouse.move(critical, afterBox.center);","start":{"line":30,"column":11,"index":996}},{"frame":"  33 |     expandedMouse.move(critical, afterBox.center);\n  34 |\n> 35 |     expect(isCombining(critical)).toBe(true);\n     |           ^ Eager Test\n  36 |     expect(isCombineTarget(after)).toBe(true);\n  37 |\n  38 |     const snapshot = getLast(getSnapshotsFor('1', spy));","start":{"line":35,"column":11,"index":1123}},{"frame":"  34 |\n  35 |     expect(isCombining(critical)).toBe(true);\n> 36 |     expect(isCombineTarget(after)).toBe(true);\n     |           ^ Eager Test\n  37 |\n  38 |     const snapshot = getLast(getSnapshotsFor('1', spy));\n  39 |     const expected: DraggableStateSnapshot = {","start":{"line":36,"column":11,"index":1169}},{"frame":"  36 |     expect(isCombineTarget(after)).toBe(true);\n  37 |\n> 38 |     const snapshot = getLast(getSnapshotsFor('1', spy));\n     |                     ^ Eager Test\n  39 |     const expected: DraggableStateSnapshot = {\n  40 |       isDragging: false,\n  41 |       isDropAnimating: false,","start":{"line":38,"column":21,"index":1227}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":7.143,"halstead":{"bugs":0.296,"difficulty":5.95,"effort":5275.266,"length":152,"time":293.07,"vocabulary":57,"volume":886.599,"operands":{"distinct":50,"total":85,"identifiers":["it","\"should update the snapshot of an item being combined with\"","withPoorDimensionMocks","preset","spy","jest","fn","renderItem","RenderItem","renderItemAndSpy","getByText","render","critical","HTMLElement","\"item: 0\"","after","\"item: 1\"","criticalBox","inHome1","client","borderBox","afterBox","inHome2","expandedMouse","powerLift","center","expect","isDragging","toBe","true","move","isCombining","isCombineTarget","snapshot","getLast","getSnapshotsFor","\"1\"","expected","DraggableStateSnapshot","false","isDropAnimating","isClone","dropAnimation","null","draggingOver","combineWith","combineTargetFor","\"0\"","mode","toEqual"]},"operators":{"distinct":7,"total":67,"identifiers":["()","function=>","const","=",".","{}",":"]}},"paramCount":1,"sloc":{"logical":42,"physical":52}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"@testing-library/react","type":"esm"},{"line":3,"path":"react","type":"esm"},{"line":4,"path":"../../../../src","type":"esm"},{"line":5,"path":"../util/app","type":"esm"},{"line":6,"path":"../util/expanded-mouse","type":"esm"},{"line":15,"path":"../util/helpers","type":"esm"}],"errors":[],"lineEnd":52,"lineStart":1,"maintainability":102.692,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["withPoorDimensionMocks","preset"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":35},"errors":[],"lineEnd":51,"lineStart":17,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.275,"difficulty":5.17,"effort":4264.498,"length":144,"time":236.917,"vocabulary":53,"volume":824.821,"operands":{"distinct":47,"total":81,"identifiers":["spy","jest","fn","renderItem","RenderItem","renderItemAndSpy","getByText","render","critical","HTMLElement","\"item: 0\"","after","\"item: 1\"","criticalBox","preset","inHome1","client","borderBox","afterBox","inHome2","expandedMouse","powerLift","center","expect","isDragging","toBe","true","move","isCombining","isCombineTarget","snapshot","getLast","getSnapshotsFor","\"1\"","expected","DraggableStateSnapshot","false","isDropAnimating","isClone","dropAnimation","null","draggingOver","combineWith","combineTargetFor","\"0\"","mode","toEqual"]},"operators":{"distinct":6,"total":63,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":38,"physical":33},"errors":[],"lineEnd":50,"lineStart":18,"name":"<anon method-2>","paramNames":["preset"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.381,"halstead":{"bugs":0.099,"difficulty":1.983,"effort":1758.422,"length":50.667,"time":97.69,"vocabulary":19,"volume":295.533,"operands":{"distinct":16.667,"total":28.333},"operators":{"distinct":2.333,"total":22.333}},"paramCount":0.333,"sloc":{"logical":14,"physical":17.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":26.316,"halstead":{"bugs":0.139,"difficulty":3.085,"effort":2136.249,"length":74,"time":118.68,"vocabulary":28.5,"volume":416.41,"operands":{"distinct":24.5,"total":41.5},"operators":{"distinct":4,"total":32.5}},"paramCount":0.5,"sloc":{"logical":20,"physical":34}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/touch-sensor/stopping-a-drag.spec.js","testCases":4,"smells":17,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  58 |\n  59 | it('should not prevent the default behaviour for an indirect cancel', () => {\n> 60 |   ['orientationchange', 'keydown', 'resize', supportedEventName].forEach(\n     |                                                                 ^ Conditional Test Logic\n  61 |     (eventName: string) => {\n  62 |       const onDragEnd = jest.fn();\n  63 |       const { getByText, unmount } = render(<App onDragEnd={onDragEnd} />);","start":{"line":60,"column":65,"index":1946}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  15 |   const handle: HTMLElement = getByText('item: 0');\n  16 |\n> 17 |   simpleLift(touch, handle);\n     |  ^ Eager Test\n  18 |\n  19 |   const event: Event = createEvent.touchEnd(handle);\n  20 |   fireEvent(handle, event);","start":{"line":17,"column":2,"index":684}},{"frame":"  21 |\n  22 |   expect(event.defaultPrevented).toBe(true);\n> 23 |   expect(getDropReason(onDragEnd)).toBe('DROP');\n     |         ^ Eager Test\n  24 | });\n  25 |\n  26 | it('should prevent default on an escape press', () => {","start":{"line":23,"column":9,"index":848}},{"frame":"  29 |   const handle: HTMLElement = getByText('item: 0');\n  30 |\n> 31 |   simpleLift(touch, handle);\n     |  ^ Eager Test\n  32 |\n  33 |   const event: Event = createEvent.keyDown(handle, {\n  34 |     keyCode: keyCodes.escape,","start":{"line":31,"column":2,"index":1098}},{"frame":"  37 |\n  38 |   expect(event.defaultPrevented).toBe(true);\n> 39 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |         ^ Eager Test\n  40 | });\n  41 |\n  42 | it('should prevent default on a touchcancel', () => {","start":{"line":39,"column":9,"index":1298}},{"frame":"  45 |   const handle: HTMLElement = getByText('item: 0');\n  46 |\n> 47 |   simpleLift(touch, handle);\n     |  ^ Eager Test\n  48 |\n  49 |   const event: Event = new Event('touchcancel', {\n  50 |     bubbles: true,","start":{"line":47,"column":2,"index":1548}},{"frame":"  54 |\n  55 |   expect(event.defaultPrevented).toBe(true);\n> 56 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |         ^ Eager Test\n  57 | });\n  58 |\n  59 | it('should not prevent the default behaviour for an indirect cancel', () => {","start":{"line":56,"column":9,"index":1756}},{"frame":"  64 |       const handle: HTMLElement = getByText('item: 0');\n  65 |\n> 66 |       simpleLift(touch, handle);\n     |      ^ Eager Test\n  67 |\n  68 |       const event: Event = new Event(eventName, {\n  69 |         bubbles: true,","start":{"line":66,"column":6,"index":2158}},{"frame":"  76 |       // not an explicit cancel\n  77 |       expect(event.defaultPrevented).toBe(false);\n> 78 |       expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |             ^ Eager Test\n  79 |\n  80 |       unmount();\n  81 |     },","start":{"line":78,"column":13,"index":2448}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  15 |   const handle: HTMLElement = getByText('item: 0');\n  16 |\n> 17 |   simpleLift(touch, handle);\n     |  ^ Lazy Test\n  18 |\n  19 |   const event: Event = createEvent.touchEnd(handle);\n  20 |   fireEvent(handle, event);","start":{"line":17,"column":2,"index":684}},{"frame":"  21 |\n  22 |   expect(event.defaultPrevented).toBe(true);\n> 23 |   expect(getDropReason(onDragEnd)).toBe('DROP');\n     |         ^ Lazy Test\n  24 | });\n  25 |\n  26 | it('should prevent default on an escape press', () => {","start":{"line":23,"column":9,"index":848}},{"frame":"  29 |   const handle: HTMLElement = getByText('item: 0');\n  30 |\n> 31 |   simpleLift(touch, handle);\n     |  ^ Lazy Test\n  32 |\n  33 |   const event: Event = createEvent.keyDown(handle, {\n  34 |     keyCode: keyCodes.escape,","start":{"line":31,"column":2,"index":1098}},{"frame":"  37 |\n  38 |   expect(event.defaultPrevented).toBe(true);\n> 39 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |         ^ Lazy Test\n  40 | });\n  41 |\n  42 | it('should prevent default on a touchcancel', () => {","start":{"line":39,"column":9,"index":1298}},{"frame":"  45 |   const handle: HTMLElement = getByText('item: 0');\n  46 |\n> 47 |   simpleLift(touch, handle);\n     |  ^ Lazy Test\n  48 |\n  49 |   const event: Event = new Event('touchcancel', {\n  50 |     bubbles: true,","start":{"line":47,"column":2,"index":1548}},{"frame":"  54 |\n  55 |   expect(event.defaultPrevented).toBe(true);\n> 56 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |         ^ Lazy Test\n  57 | });\n  58 |\n  59 | it('should not prevent the default behaviour for an indirect cancel', () => {","start":{"line":56,"column":9,"index":1756}},{"frame":"  64 |       const handle: HTMLElement = getByText('item: 0');\n  65 |\n> 66 |       simpleLift(touch, handle);\n     |      ^ Lazy Test\n  67 |\n  68 |       const event: Event = new Event(eventName, {\n  69 |         bubbles: true,","start":{"line":66,"column":6,"index":2158}},{"frame":"  76 |       // not an explicit cancel\n  77 |       expect(event.defaultPrevented).toBe(false);\n> 78 |       expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |             ^ Lazy Test\n  79 |\n  80 |       unmount();\n  81 |     },","start":{"line":78,"column":13,"index":2448}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":7.407,"halstead":{"bugs":0.545,"difficulty":17.955,"effort":29344.695,"length":284,"time":1630.261,"vocabulary":54,"volume":1634.388,"operands":{"distinct":44,"total":158,"identifiers":["jest","useFakeTimers","it","\"should prevent default on the event that causes a drop\"","onDragEnd","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","touch","event","Event","createEvent","touchEnd","fireEvent","expect","defaultPrevented","toBe","true","getDropReason","\"DROP\"","\"should prevent default on an escape press\"","keyDown","keyCode","keyCodes","escape","\"CANCEL\"","\"should prevent default on a touchcancel\"","\"touchcancel\"","bubbles","cancelable","\"should not prevent the default behaviour for an indirect cancel\"","\"orientationchange\"","\"keydown\"","\"resize\"","supportedEventName","forEach","eventName","unmount","target","false"]},"operators":{"distinct":10,"total":126,"identifiers":["()",".","function=>","const","=","{}",":","new","[]",","]}},"paramCount":1,"sloc":{"logical":81,"physical":84}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/app","type":"esm"},{"line":5,"path":"../../util/helpers","type":"esm"},{"line":6,"path":"../../../../../src/view/key-codes","type":"esm"},{"line":7,"path":"../../util/controls","type":"esm"},{"line":8,"path":"../../../../../src/view/use-sensor-marshal/sensors/util/supported-page-visibility-event-name","type":"esm"}],"errors":[],"lineEnd":84,"lineStart":1,"maintainability":99.783,"methods":[{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.089,"difficulty":3.81,"effort":1020.667,"length":57,"time":56.704,"vocabulary":26,"volume":267.925,"operands":{"distinct":21,"total":32,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","touch","event","Event","createEvent","touchEnd","fireEvent","expect","defaultPrevented","toBe","true","getDropReason","\"DROP\""]},"operators":{"distinct":5,"total":25,"identifiers":["const","=","()",".","{}"]}},"paramCount":0,"sloc":{"logical":16,"physical":13},"errors":[],"lineEnd":24,"lineStart":12,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.103,"difficulty":4.375,"effort":1352.462,"length":63,"time":75.137,"vocabulary":30,"volume":309.134,"operands":{"distinct":24,"total":35,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","touch","event","Event","createEvent","keyDown","keyCode","keyCodes","escape","fireEvent","expect","defaultPrevented","toBe","true","getDropReason","\"CANCEL\""]},"operators":{"distinct":6,"total":28,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":17,"physical":15},"errors":[],"lineEnd":40,"lineStart":26,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.1,"difficulty":5.568,"effort":1677.108,"length":62,"time":93.173,"vocabulary":29,"volume":301.195,"operands":{"distinct":22,"total":35,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","touch","event","Event","\"touchcancel\"","bubbles","true","cancelable","fireEvent","expect","defaultPrevented","toBe","getDropReason","\"CANCEL\""]},"operators":{"distinct":7,"total":27,"identifiers":["const","=","()",".","{}","new",":"]}},"paramCount":0,"sloc":{"logical":17,"physical":16},"errors":[],"lineEnd":57,"lineStart":42,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.015,"difficulty":2.5,"effort":112.432,"length":13,"time":6.246,"vocabulary":11,"volume":44.973,"operands":{"distinct":6,"total":6,"identifiers":["\"orientationchange\"","\"keydown\"","\"resize\"","supportedEventName","forEach","eventName"]},"operators":{"distinct":5,"total":7,"identifiers":["()",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":25},"errors":[],"lineEnd":83,"lineStart":59,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.115,"difficulty":5.6,"effort":1932,"length":69,"time":107.333,"vocabulary":32,"volume":345,"operands":{"distinct":25,"total":40,"identifiers":["onDragEnd","jest","fn","getByText","unmount","render","handle","HTMLElement","\"item: 0\"","simpleLift","touch","event","Event","eventName","bubbles","true","cancelable","target","fireEvent","expect","defaultPrevented","toBe","false","getDropReason","\"CANCEL\""]},"operators":{"distinct":7,"total":29,"identifiers":["const","=","()",".","{}","new",":"]}},"paramCount":1,"sloc":{"logical":20,"physical":21},"errors":[],"lineEnd":81,"lineStart":61,"name":"<anon method-5>","paramNames":["eventName"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.235,"halstead":{"bugs":0.091,"difficulty":2.992,"effort":4890.782,"length":47.333,"time":271.71,"vocabulary":9,"volume":272.398,"operands":{"distinct":7.333,"total":26.333},"operators":{"distinct":1.667,"total":21}},"paramCount":0.167,"sloc":{"logical":13.5,"physical":14}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.603,"halstead":{"bugs":0.085,"difficulty":4.371,"effort":1218.934,"length":52.8,"time":67.719,"vocabulary":25.6,"volume":253.645,"operands":{"distinct":19.6,"total":29.6},"operators":{"distinct":6,"total":23.2}},"paramCount":0.2,"sloc":{"logical":14.4,"physical":18}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/touch-sensor/starting-a-drag.spec.js","testCases":3,"smells":20,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  25 |\n  26 |   // not dragging yet\n> 27 |   expect(isDragging(handle)).toBe(false);\n     |  ^ Duplicate Assert\n  28 |\n  29 |   // allow long press to run\n  30 |   jest.runOnlyPendingTimers();","start":{"line":27,"column":2,"index":871}},{"frame":"  31 |\n  32 |   // now dragging\n> 33 |   expect(isDragging(handle)).toBe(true);\n     |  ^ Duplicate Assert\n  34 | });\n  35 |\n  36 | it('should not start dragging if finished before a long press', () => {","start":{"line":33,"column":2,"index":993}},{"frame":"  45 |\n  46 |   // not dragging yet\n> 47 |   expect(isDragging(handle)).toBe(false);\n     |  ^ Duplicate Assert\n  48 |\n  49 |   // allow long press to run\n  50 |   jest.advanceTimersByTime(timeForLongPress - 1);","start":{"line":47,"column":2,"index":1458}},{"frame":"  45 |\n  46 |   // not dragging yet\n> 47 |   expect(isDragging(handle)).toBe(false);\n     |  ^ Duplicate Assert\n  48 |\n  49 |   // allow long press to run\n  50 |   jest.advanceTimersByTime(timeForLongPress - 1);","start":{"line":47,"column":2,"index":1458}},{"frame":"  51 |\n  52 |   // not dragging yet\n> 53 |   expect(isDragging(handle)).toBe(false);\n     |  ^ Duplicate Assert\n  54 |\n  55 |   const touchEnd: Event = createEvent.touchEnd(handle);\n  56 |   fireEvent(handle, touchEnd);","start":{"line":53,"column":2,"index":1603}},{"frame":"  51 |\n  52 |   // not dragging yet\n> 53 |   expect(isDragging(handle)).toBe(false);\n     |  ^ Duplicate Assert\n  54 |\n  55 |   const touchEnd: Event = createEvent.touchEnd(handle);\n  56 |   fireEvent(handle, touchEnd);","start":{"line":53,"column":2,"index":1603}},{"frame":"  62 |   jest.runOnlyPendingTimers();\n  63 |\n> 64 |   expect(isDragging(handle)).toBe(false);\n     |  ^ Duplicate Assert\n  65 | });\n  66 |\n  67 | it('should allow a false start', () => {","start":{"line":64,"column":2,"index":1866}},{"frame":"  62 |   jest.runOnlyPendingTimers();\n  63 |\n> 64 |   expect(isDragging(handle)).toBe(false);\n     |  ^ Duplicate Assert\n  65 | });\n  66 |\n  67 | it('should allow a false start', () => {","start":{"line":64,"column":2,"index":1866}},{"frame":"  73 |   jest.advanceTimersByTime(timeForLongPress - 1);\n  74 |   fireEvent.touchEnd(handle);\n> 75 |   expect(isDragging(handle)).toBe(false);\n     |  ^ Duplicate Assert\n  76 |\n  77 |   // Let's try again - this time we will wait\n  78 |","start":{"line":75,"column":2,"index":2216}},{"frame":"  79 |   fireEvent(handle, getTouchStart(handle));\n  80 |   jest.advanceTimersByTime(timeForLongPress);\n> 81 |   expect(isDragging(handle)).toBe(true);\n     |  ^ Duplicate Assert\n  82 | });\n  83 |","start":{"line":81,"column":2,"index":2396}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  25 |\n  26 |   // not dragging yet\n> 27 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Eager Test\n  28 |\n  29 |   // allow long press to run\n  30 |   jest.runOnlyPendingTimers();","start":{"line":27,"column":9,"index":878}},{"frame":"  31 |\n  32 |   // now dragging\n> 33 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  34 | });\n  35 |\n  36 | it('should not start dragging if finished before a long press', () => {","start":{"line":33,"column":9,"index":1000}},{"frame":"  45 |\n  46 |   // not dragging yet\n> 47 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Eager Test\n  48 |\n  49 |   // allow long press to run\n  50 |   jest.advanceTimersByTime(timeForLongPress - 1);","start":{"line":47,"column":9,"index":1465}},{"frame":"  51 |\n  52 |   // not dragging yet\n> 53 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Eager Test\n  54 |\n  55 |   const touchEnd: Event = createEvent.touchEnd(handle);\n  56 |   fireEvent(handle, touchEnd);","start":{"line":53,"column":9,"index":1610}},{"frame":"  62 |   jest.runOnlyPendingTimers();\n  63 |\n> 64 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Eager Test\n  65 | });\n  66 |\n  67 | it('should allow a false start', () => {","start":{"line":64,"column":9,"index":1873}},{"frame":"  73 |   jest.advanceTimersByTime(timeForLongPress - 1);\n  74 |   fireEvent.touchEnd(handle);\n> 75 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Eager Test\n  76 |\n  77 |   // Let's try again - this time we will wait\n  78 |","start":{"line":75,"column":9,"index":2223}},{"frame":"  79 |   fireEvent(handle, getTouchStart(handle));\n  80 |   jest.advanceTimersByTime(timeForLongPress);\n> 81 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  82 | });\n  83 |","start":{"line":81,"column":9,"index":2403}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  25 |\n  26 |   // not dragging yet\n> 27 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Lazy Test\n  28 |\n  29 |   // allow long press to run\n  30 |   jest.runOnlyPendingTimers();","start":{"line":27,"column":9,"index":878}},{"frame":"  45 |\n  46 |   // not dragging yet\n> 47 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Lazy Test\n  48 |\n  49 |   // allow long press to run\n  50 |   jest.advanceTimersByTime(timeForLongPress - 1);","start":{"line":47,"column":9,"index":1465}},{"frame":"  73 |   jest.advanceTimersByTime(timeForLongPress - 1);\n  74 |   fireEvent.touchEnd(handle);\n> 75 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Lazy Test\n  76 |\n  77 |   // Let's try again - this time we will wait\n  78 |","start":{"line":75,"column":9,"index":2223}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":6.757,"halstead":{"bugs":0.446,"difficulty":24.484,"effort":32742.151,"length":248,"time":1819.008,"vocabulary":42,"volume":1337.295,"operands":{"distinct":31,"total":138,"identifiers":["jest","useFakeTimers","getTouchStart","handle","Event","createEvent","touchStart","touches","clientX","0","clientY","it","\"should start dragging after a long press\"","getByText","render","HTMLElement","\"item: 0\"","fireEvent","expect","defaultPrevented","toBe","false","isDragging","runOnlyPendingTimers","true","\"should not start dragging if finished before a long press\"","advanceTimersByTime","timeForLongPress","1","touchEnd","\"should allow a false start\""]},"operators":{"distinct":11,"total":110,"identifiers":["()",".","function","return","{}",":","[]","function=>","const","=","-"]}},"paramCount":1,"sloc":{"logical":74,"physical":83}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/app","type":"esm"},{"line":5,"path":"../../util/helpers","type":"esm"},{"line":6,"path":"../../../../../src/view/use-sensor-marshal/sensors/use-touch-sensor","type":"esm"}],"errors":[],"lineEnd":83,"lineStart":1,"maintainability":97.296,"methods":[{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.023,"difficulty":3.375,"effort":231.297,"length":18,"time":12.85,"vocabulary":14,"volume":68.532,"operands":{"distinct":8,"total":9,"identifiers":["Event","createEvent","touchStart","handle","touches","clientX","0","clientY"]},"operators":{"distinct":6,"total":9,"identifiers":["return","()",".","{}",":","[]"]}},"paramCount":1,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":14,"lineStart":10,"name":"getTouchStart","paramNames":["handle"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.083,"difficulty":4.559,"effort":1138.467,"length":56,"time":63.248,"vocabulary":22,"volume":249.728,"operands":{"distinct":17,"total":31,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","touchStart","Event","getTouchStart","fireEvent","expect","defaultPrevented","toBe","false","isDragging","jest","runOnlyPendingTimers","true"]},"operators":{"distinct":5,"total":25,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":17,"physical":19},"errors":[],"lineEnd":34,"lineStart":16,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.149,"difficulty":7.571,"effort":3384.121,"length":94,"time":188.007,"vocabulary":27,"volume":446.959,"operands":{"distinct":21,"total":53,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","touchStart","Event","getTouchStart","fireEvent","expect","defaultPrevented","toBe","false","isDragging","jest","advanceTimersByTime","timeForLongPress","1","touchEnd","createEvent","runOnlyPendingTimers"]},"operators":{"distinct":6,"total":41,"identifiers":["const","=","{}","()",".","-"]}},"paramCount":0,"sloc":{"logical":26,"physical":30},"errors":[],"lineEnd":65,"lineStart":36,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.092,"difficulty":6.176,"effort":1704.318,"length":61,"time":94.684,"vocabulary":23,"volume":275.937,"operands":{"distinct":17,"total":35,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","fireEvent","getTouchStart","jest","advanceTimersByTime","timeForLongPress","1","touchEnd","expect","isDragging","toBe","false","true"]},"operators":{"distinct":6,"total":26,"identifiers":["const","=","{}","()",".","-"]}},"paramCount":0,"sloc":{"logical":18,"physical":16},"errors":[],"lineEnd":82,"lineStart":67,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.351,"halstead":{"bugs":0.089,"difficulty":4.897,"effort":6548.43,"length":49.6,"time":363.802,"vocabulary":8.4,"volume":267.459,"operands":{"distinct":6.2,"total":27.6},"operators":{"distinct":2.2,"total":22}},"paramCount":0.2,"sloc":{"logical":14.8,"physical":16.6}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":8.821,"halstead":{"bugs":0.087,"difficulty":5.42,"effort":1614.551,"length":57.25,"time":89.697,"vocabulary":21.5,"volume":260.289,"operands":{"distinct":15.75,"total":32},"operators":{"distinct":5.75,"total":25.25}},"paramCount":0.25,"sloc":{"logical":16.5,"physical":17.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/touch-sensor/force-press.spec.js","testCases":7,"smells":22,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  74 |\n  75 |     touch.lift(handle);\n> 76 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  77 |\n  78 |     // this force press will be prevented\n  79 |     const second: Event = getForceChange(forcePressThreshold);","start":{"line":76,"column":4,"index":2300}},{"frame":"  74 |\n  75 |     touch.lift(handle);\n> 76 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  77 |\n  78 |     // this force press will be prevented\n  79 |     const second: Event = getForceChange(forcePressThreshold);","start":{"line":76,"column":4,"index":2300}},{"frame":"  82 |\n  83 |     // force presses did not abort the drag\n> 84 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  85 |   });\n  86 | });\n  87 |","start":{"line":84,"column":4,"index":2573}},{"frame":"  82 |\n  83 |     // force presses did not abort the drag\n> 84 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  85 |   });\n  86 | });\n  87 |","start":{"line":84,"column":4,"index":2573}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  74 |\n  75 |     touch.lift(handle);\n> 76 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  77 |\n  78 |     // this force press will be prevented\n  79 |     const second: Event = getForceChange(forcePressThreshold);","start":{"line":76,"column":11,"index":2307}},{"frame":"  82 |\n  83 |     // force presses did not abort the drag\n> 84 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  85 |   });\n  86 | });\n  87 |","start":{"line":84,"column":11,"index":2580}},{"frame":"  109 |     const handle: HTMLElement = getByText('item: 0');\n  110 |\n> 111 |     simpleLift(touch, handle);\n      |    ^ Eager Test\n  112 |\n  113 |     // indirect cancel so event is not consumed\n  114 |     const press: Event = getForceChange(forcePressThreshold);","start":{"line":111,"column":4,"index":3401}},{"frame":"  117 |\n  118 |     // drag is no more\n> 119 |     expect(isDragging(handle)).toBe(false);\n      |           ^ Eager Test\n  120 |   });\n  121 |\n  122 |   it('should abort a force press if dragging and some movement has occurred', () => {","start":{"line":119,"column":11,"index":3652}},{"frame":"  124 |     const handle: HTMLElement = getByText('item: 0');\n  125 |\n> 126 |     simpleLift(touch, handle);\n      |    ^ Eager Test\n  127 |\n  128 |     fireEvent.touchMove(handle, { touches: [{ clientX: 0, clientY: 0 }] });\n  129 |","start":{"line":126,"column":4,"index":3894}},{"frame":"  133 |     expect(press.defaultPrevented).toBe(true);\n  134 |\n> 135 |     expect(isDragging(handle)).toBe(true);\n      |           ^ Eager Test\n  136 |   });\n  137 | });\n  138 |","start":{"line":135,"column":11,"index":4207}},{"frame":"  143 |   const handle: HTMLElement = getByText('item: 0');\n  144 |\n> 145 |   simpleLift(touch, handle);\n      |  ^ Eager Test\n  146 |\n  147 |   // changing\n  148 |   const withoutForcePress: Item[] = [","start":{"line":145,"column":2,"index":4539}},{"frame":"  157 |\n  158 |   // drag is no more\n> 159 |   expect(isDragging(handle)).toBe(false);\n      |         ^ Eager Test\n  160 | });\n  161 |","start":{"line":159,"column":9,"index":5032}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  45 |\n  46 |     // force presses did not abort the pending or actual drag\n> 47 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Lazy Test\n  48 |   });\n  49 |\n  50 |   it('should not prevent a force press when pending (strange I know)', () => {","start":{"line":47,"column":11,"index":1463}},{"frame":"  60 |     touch.lift(handle);\n  61 |     // did not prevent lifting\n> 62 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Lazy Test\n  63 |   });\n  64 |\n  65 |   it('prevent a force press when dragging', () => {","start":{"line":62,"column":11,"index":1914}},{"frame":"  74 |\n  75 |     touch.lift(handle);\n> 76 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Lazy Test\n  77 |\n  78 |     // this force press will be prevented\n  79 |     const second: Event = getForceChange(forcePressThreshold);","start":{"line":76,"column":11,"index":2307}},{"frame":"  102 |     touch.lift(handle);\n  103 |\n> 104 |     expect(isDragging(handle)).toBe(false);\n      |           ^ Lazy Test\n  105 |   });\n  106 |\n  107 |   it('should cancel a drag if a force press is registered', () => {","start":{"line":104,"column":11,"index":3177}},{"frame":"  109 |     const handle: HTMLElement = getByText('item: 0');\n  110 |\n> 111 |     simpleLift(touch, handle);\n      |    ^ Lazy Test\n  112 |\n  113 |     // indirect cancel so event is not consumed\n  114 |     const press: Event = getForceChange(forcePressThreshold);","start":{"line":111,"column":4,"index":3401}},{"frame":"  117 |\n  118 |     // drag is no more\n> 119 |     expect(isDragging(handle)).toBe(false);\n      |           ^ Lazy Test\n  120 |   });\n  121 |\n  122 |   it('should abort a force press if dragging and some movement has occurred', () => {","start":{"line":119,"column":11,"index":3652}},{"frame":"  124 |     const handle: HTMLElement = getByText('item: 0');\n  125 |\n> 126 |     simpleLift(touch, handle);\n      |    ^ Lazy Test\n  127 |\n  128 |     fireEvent.touchMove(handle, { touches: [{ clientX: 0, clientY: 0 }] });\n  129 |","start":{"line":126,"column":4,"index":3894}},{"frame":"  133 |     expect(press.defaultPrevented).toBe(true);\n  134 |\n> 135 |     expect(isDragging(handle)).toBe(true);\n      |           ^ Lazy Test\n  136 |   });\n  137 | });\n  138 |","start":{"line":135,"column":11,"index":4207}},{"frame":"  143 |   const handle: HTMLElement = getByText('item: 0');\n  144 |\n> 145 |   simpleLift(touch, handle);\n      |  ^ Lazy Test\n  146 |\n  147 |   // changing\n  148 |   const withoutForcePress: Item[] = [","start":{"line":145,"column":2,"index":4539}},{"frame":"  157 |\n  158 |   // drag is no more\n> 159 |   expect(isDragging(handle)).toBe(false);\n      |         ^ Lazy Test\n  160 | });\n  161 |","start":{"line":159,"column":9,"index":5032}}]}],"metrics":{"aggregate":{"cyclomatic":11,"cyclomaticDensity":7.097,"halstead":{"bugs":1.062,"difficulty":33.111,"effort":105471.991,"length":527,"time":5859.555,"vocabulary":66,"volume":3185.396,"operands":{"distinct":54,"total":298,"identifiers":["jest","useFakeTimers","getForceChange","force","Event","event","\"touchforcechange\"","bubbles","true","cancelable","touches","clientX","0","clientY","describe","\"force press not respected (default)\"","it","\"should not abort presses that do not have enought pressure\"","getByText","render","handle","HTMLElement","\"item: 0\"","touch","preLift","first","forcePressThreshold","1","fireEvent","expect","defaultPrevented","toBe","false","lift","second","isDragging","\"should not prevent a force press when pending (strange I know)\"","\"prevent a force press when dragging\"","\"force press respected\"","items","Item","id","\"0\"","shouldRespectForcePress","\"should cancel a pending drag if a force press is registered\"","press","\"should cancel a drag if a force press is registered\"","simpleLift","\"should abort a force press if dragging and some movement has occurred\"","touchMove","\"should not listen to force press changes after a drag has started\"","withForcePress","rerender","withoutForcePress"]},"operators":{"distinct":12,"total":229,"identifiers":["()",".","function","const","=","new","{}",":","[]","return","function=>","-"]}},"paramCount":1,"sloc":{"logical":155,"physical":161}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/app","type":"esm"},{"line":5,"path":"../../util/controls","type":"esm"},{"line":6,"path":"../../../../../src/view/use-sensor-marshal/sensors/use-touch-sensor","type":"esm"},{"line":7,"path":"../../util/helpers","type":"esm"}],"errors":[],"lineEnd":161,"lineStart":1,"maintainability":96.787,"methods":[{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.044,"difficulty":6.545,"effort":861.943,"length":31,"time":47.886,"vocabulary":19,"volume":131.686,"operands":{"distinct":11,"total":18,"identifiers":["Event","event","\"touchforcechange\"","bubbles","true","cancelable","touches","clientX","0","clientY","force"]},"operators":{"distinct":8,"total":13,"identifiers":["const","=","new","{}",":",".","[]","return"]}},"paramCount":1,"sloc":{"logical":8,"physical":15},"errors":[],"lineEnd":25,"lineStart":11,"name":"getForceChange","paramNames":["force"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should not abort presses that do not have enought pressure\"","\"should not prevent a force press when pending (strange I know)\"","\"prevent a force press when dragging\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":58},"errors":[],"lineEnd":86,"lineStart":29,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.122,"difficulty":6.286,"effort":2301.366,"length":77,"time":127.854,"vocabulary":27,"volume":366.126,"operands":{"distinct":21,"total":44,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","touch","preLift","first","Event","getForceChange","forcePressThreshold","1","fireEvent","expect","defaultPrevented","toBe","false","lift","second","isDragging","true"]},"operators":{"distinct":6,"total":33,"identifiers":["const","=","{}","()",".","-"]}},"paramCount":0,"sloc":{"logical":20,"physical":19},"errors":[],"lineEnd":48,"lineStart":30,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.081,"difficulty":3.947,"effort":959.222,"length":53,"time":53.29,"vocabulary":24,"volume":243.003,"operands":{"distinct":19,"total":30,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","touch","preLift","first","Event","getForceChange","forcePressThreshold","fireEvent","expect","defaultPrevented","toBe","false","lift","isDragging","true"]},"operators":{"distinct":5,"total":23,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":15,"physical":14},"errors":[],"lineEnd":63,"lineStart":50,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.127,"difficulty":5.875,"effort":2237.178,"length":82,"time":124.288,"vocabulary":25,"volume":380.796,"operands":{"distinct":20,"total":47,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","touch","preLift","first","Event","getForceChange","forcePressThreshold","fireEvent","expect","defaultPrevented","toBe","false","lift","isDragging","true","second"]},"operators":{"distinct":5,"total":35,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":23,"physical":21},"errors":[],"lineEnd":85,"lineStart":65,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.033,"difficulty":4.2,"effort":412.016,"length":24,"time":22.89,"vocabulary":17,"volume":98.099,"operands":{"distinct":10,"total":12,"identifiers":["items","Item","id","\"0\"","shouldRespectForcePress","true","it","\"should cancel a pending drag if a force press is registered\"","\"should cancel a drag if a force press is registered\"","\"should abort a force press if dragging and some movement has occurred\""]},"operators":{"distinct":7,"total":12,"identifiers":["const","=","[]","{}",":","()","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":50},"errors":[],"lineEnd":137,"lineStart":88,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.083,"difficulty":4.079,"effort":1009.898,"length":54,"time":56.105,"vocabulary":24,"volume":247.588,"operands":{"distinct":19,"total":31,"identifiers":["getByText","render","items","handle","HTMLElement","\"item: 0\"","touch","preLift","press","Event","getForceChange","forcePressThreshold","fireEvent","expect","defaultPrevented","toBe","false","lift","isDragging"]},"operators":{"distinct":5,"total":23,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":15,"physical":15},"errors":[],"lineEnd":105,"lineStart":91,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.072,"difficulty":3.889,"effort":844.398,"length":48,"time":46.911,"vocabulary":23,"volume":217.131,"operands":{"distinct":18,"total":28,"identifiers":["getByText","render","items","handle","HTMLElement","\"item: 0\"","simpleLift","touch","press","Event","getForceChange","forcePressThreshold","fireEvent","expect","defaultPrevented","toBe","false","isDragging"]},"operators":{"distinct":5,"total":20,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":14,"physical":14},"errors":[],"lineEnd":120,"lineStart":107,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.105,"difficulty":5.478,"effort":1720.399,"length":64,"time":95.578,"vocabulary":30,"volume":314.041,"operands":{"distinct":23,"total":36,"identifiers":["getByText","render","items","handle","HTMLElement","\"item: 0\"","simpleLift","touch","fireEvent","touchMove","touches","clientX","0","clientY","press","Event","getForceChange","forcePressThreshold","expect","defaultPrevented","toBe","true","isDragging"]},"operators":{"distinct":7,"total":28,"identifiers":["const","=","{}","()",".",":","[]"]}},"paramCount":0,"sloc":{"logical":18,"physical":15},"errors":[],"lineEnd":136,"lineStart":122,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.102,"difficulty":5.727,"effort":1752.848,"length":63,"time":97.38,"vocabulary":29,"volume":306.053,"operands":{"distinct":22,"total":36,"identifiers":["withForcePress","Item","id","\"0\"","shouldRespectForcePress","true","getByText","rerender","render","handle","HTMLElement","\"item: 0\"","simpleLift","touch","withoutForcePress","false","fireEvent","getForceChange","forcePressThreshold","expect","isDragging","toBe"]},"operators":{"distinct":7,"total":27,"identifiers":["const","=","[]","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":19,"physical":22},"errors":[],"lineEnd":160,"lineStart":139,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.645,"halstead":{"bugs":0.097,"difficulty":3.01,"effort":9588.363,"length":47.909,"time":532.687,"vocabulary":6,"volume":289.581,"operands":{"distinct":4.909,"total":27.091},"operators":{"distinct":1.091,"total":20.818}},"paramCount":0.091,"sloc":{"logical":14.091,"physical":14.636}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":8.092,"halstead":{"bugs":0.078,"difficulty":4.753,"effort":1214.58,"length":50.8,"time":67.477,"vocabulary":22.4,"volume":233.554,"operands":{"distinct":16.7,"total":28.8},"operators":{"distinct":5.7,"total":22}},"paramCount":0.1,"sloc":{"logical":14.7,"physical":24.3}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/validate-controls.spec.js","testCases":2,"smells":32,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  17 |     Array.from({ length: 4 }).forEach(() => {\n  18 |       control.preLift(handle);\n> 19 |       expect(isDragging(handle)).toBe(false);\n     |      ^ Duplicate Assert\n  20 |\n  21 |       control.lift(handle);\n  22 |       expect(isDragging(handle)).toBe(true);","start":{"line":19,"column":6,"index":667}},{"frame":"  17 |     Array.from({ length: 4 }).forEach(() => {\n  18 |       control.preLift(handle);\n> 19 |       expect(isDragging(handle)).toBe(false);\n     |      ^ Duplicate Assert\n  20 |\n  21 |       control.lift(handle);\n  22 |       expect(isDragging(handle)).toBe(true);","start":{"line":19,"column":6,"index":667}},{"frame":"  20 |\n  21 |       control.lift(handle);\n> 22 |       expect(isDragging(handle)).toBe(true);\n     |      ^ Duplicate Assert\n  23 |\n  24 |       // on drag start is async\n  25 |       jest.runOnlyPendingTimers();","start":{"line":22,"column":6,"index":742}},{"frame":"  20 |\n  21 |       control.lift(handle);\n> 22 |       expect(isDragging(handle)).toBe(true);\n     |      ^ Duplicate Assert\n  23 |\n  24 |       // on drag start is async\n  25 |       jest.runOnlyPendingTimers();","start":{"line":22,"column":6,"index":742}},{"frame":"  28 |       // move\n  29 |       control.move(handle);\n> 30 |       expect(isDragging(handle)).toBe(true);\n     |      ^ Duplicate Assert\n  31 |\n  32 |       // drop\n  33 |       expect(onDragEnd).not.toHaveBeenCalled();","start":{"line":30,"column":6,"index":944}},{"frame":"  28 |       // move\n  29 |       control.move(handle);\n> 30 |       expect(isDragging(handle)).toBe(true);\n     |      ^ Duplicate Assert\n  31 |\n  32 |       // drop\n  33 |       expect(onDragEnd).not.toHaveBeenCalled();","start":{"line":30,"column":6,"index":944}},{"frame":"  31 |\n  32 |       // drop\n> 33 |       expect(onDragEnd).not.toHaveBeenCalled();\n     |      ^ Duplicate Assert\n  34 |\n  35 |       control.drop(handle);\n  36 |       expect(isDragging(handle)).toBe(false);","start":{"line":33,"column":6,"index":1004}},{"frame":"  34 |\n  35 |       control.drop(handle);\n> 36 |       expect(isDragging(handle)).toBe(false);\n     |      ^ Duplicate Assert\n  37 |\n  38 |       expect(onDragEnd).toHaveBeenCalledTimes(1);\n  39 |       expect(getDropReason(onDragEnd)).toBe('DROP');","start":{"line":36,"column":6,"index":1081}},{"frame":"  34 |\n  35 |       control.drop(handle);\n> 36 |       expect(isDragging(handle)).toBe(false);\n     |      ^ Duplicate Assert\n  37 |\n  38 |       expect(onDragEnd).toHaveBeenCalledTimes(1);\n  39 |       expect(getDropReason(onDragEnd)).toBe('DROP');","start":{"line":36,"column":6,"index":1081}},{"frame":"  36 |       expect(isDragging(handle)).toBe(false);\n  37 |\n> 38 |       expect(onDragEnd).toHaveBeenCalledTimes(1);\n     |      ^ Duplicate Assert\n  39 |       expect(getDropReason(onDragEnd)).toBe('DROP');\n  40 |\n  41 |       onDragEnd.mockClear();","start":{"line":38,"column":6,"index":1128}},{"frame":"  53 |     Array.from({ length: 4 }).forEach(() => {\n  54 |       control.preLift(handle);\n> 55 |       expect(isDragging(handle)).toBe(false);\n     |      ^ Duplicate Assert\n  56 |\n  57 |       control.lift(handle);\n  58 |       expect(isDragging(handle)).toBe(true);","start":{"line":55,"column":6,"index":1639}},{"frame":"  53 |     Array.from({ length: 4 }).forEach(() => {\n  54 |       control.preLift(handle);\n> 55 |       expect(isDragging(handle)).toBe(false);\n     |      ^ Duplicate Assert\n  56 |\n  57 |       control.lift(handle);\n  58 |       expect(isDragging(handle)).toBe(true);","start":{"line":55,"column":6,"index":1639}},{"frame":"  56 |\n  57 |       control.lift(handle);\n> 58 |       expect(isDragging(handle)).toBe(true);\n     |      ^ Duplicate Assert\n  59 |\n  60 |       // on drag start is async\n  61 |       jest.runOnlyPendingTimers();","start":{"line":58,"column":6,"index":1714}},{"frame":"  56 |\n  57 |       control.lift(handle);\n> 58 |       expect(isDragging(handle)).toBe(true);\n     |      ^ Duplicate Assert\n  59 |\n  60 |       // on drag start is async\n  61 |       jest.runOnlyPendingTimers();","start":{"line":58,"column":6,"index":1714}},{"frame":"  64 |       // move\n  65 |       control.move(handle);\n> 66 |       expect(isDragging(handle)).toBe(true);\n     |      ^ Duplicate Assert\n  67 |\n  68 |       control.cancel(handle);\n  69 |","start":{"line":66,"column":6,"index":1916}},{"frame":"  64 |       // move\n  65 |       control.move(handle);\n> 66 |       expect(isDragging(handle)).toBe(true);\n     |      ^ Duplicate Assert\n  67 |\n  68 |       control.cancel(handle);\n  69 |","start":{"line":66,"column":6,"index":1916}},{"frame":"  68 |       control.cancel(handle);\n  69 |\n> 70 |       expect(isDragging(handle)).toBe(false);\n     |      ^ Duplicate Assert\n  71 |       expect(onDragEnd).toHaveBeenCalledTimes(1);\n  72 |       expect(getDropReason(onDragEnd)).toBe('CANCEL');\n  73 |","start":{"line":70,"column":6,"index":1993}},{"frame":"  68 |       control.cancel(handle);\n  69 |\n> 70 |       expect(isDragging(handle)).toBe(false);\n     |      ^ Duplicate Assert\n  71 |       expect(onDragEnd).toHaveBeenCalledTimes(1);\n  72 |       expect(getDropReason(onDragEnd)).toBe('CANCEL');\n  73 |","start":{"line":70,"column":6,"index":1993}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  17 |     Array.from({ length: 4 }).forEach(() => {\n  18 |       control.preLift(handle);\n> 19 |       expect(isDragging(handle)).toBe(false);\n     |             ^ Eager Test\n  20 |\n  21 |       control.lift(handle);\n  22 |       expect(isDragging(handle)).toBe(true);","start":{"line":19,"column":13,"index":674}},{"frame":"  20 |\n  21 |       control.lift(handle);\n> 22 |       expect(isDragging(handle)).toBe(true);\n     |             ^ Eager Test\n  23 |\n  24 |       // on drag start is async\n  25 |       jest.runOnlyPendingTimers();","start":{"line":22,"column":13,"index":749}},{"frame":"  28 |       // move\n  29 |       control.move(handle);\n> 30 |       expect(isDragging(handle)).toBe(true);\n     |             ^ Eager Test\n  31 |\n  32 |       // drop\n  33 |       expect(onDragEnd).not.toHaveBeenCalled();","start":{"line":30,"column":13,"index":951}},{"frame":"  34 |\n  35 |       control.drop(handle);\n> 36 |       expect(isDragging(handle)).toBe(false);\n     |             ^ Eager Test\n  37 |\n  38 |       expect(onDragEnd).toHaveBeenCalledTimes(1);\n  39 |       expect(getDropReason(onDragEnd)).toBe('DROP');","start":{"line":36,"column":13,"index":1088}},{"frame":"  37 |\n  38 |       expect(onDragEnd).toHaveBeenCalledTimes(1);\n> 39 |       expect(getDropReason(onDragEnd)).toBe('DROP');\n     |             ^ Eager Test\n  40 |\n  41 |       onDragEnd.mockClear();\n  42 |     });","start":{"line":39,"column":13,"index":1185}},{"frame":"  53 |     Array.from({ length: 4 }).forEach(() => {\n  54 |       control.preLift(handle);\n> 55 |       expect(isDragging(handle)).toBe(false);\n     |             ^ Eager Test\n  56 |\n  57 |       control.lift(handle);\n  58 |       expect(isDragging(handle)).toBe(true);","start":{"line":55,"column":13,"index":1646}},{"frame":"  56 |\n  57 |       control.lift(handle);\n> 58 |       expect(isDragging(handle)).toBe(true);\n     |             ^ Eager Test\n  59 |\n  60 |       // on drag start is async\n  61 |       jest.runOnlyPendingTimers();","start":{"line":58,"column":13,"index":1721}},{"frame":"  64 |       // move\n  65 |       control.move(handle);\n> 66 |       expect(isDragging(handle)).toBe(true);\n     |             ^ Eager Test\n  67 |\n  68 |       control.cancel(handle);\n  69 |","start":{"line":66,"column":13,"index":1923}},{"frame":"  68 |       control.cancel(handle);\n  69 |\n> 70 |       expect(isDragging(handle)).toBe(false);\n     |             ^ Eager Test\n  71 |       expect(onDragEnd).toHaveBeenCalledTimes(1);\n  72 |       expect(getDropReason(onDragEnd)).toBe('CANCEL');\n  73 |","start":{"line":70,"column":13,"index":2000}},{"frame":"  70 |       expect(isDragging(handle)).toBe(false);\n  71 |       expect(onDragEnd).toHaveBeenCalledTimes(1);\n> 72 |       expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |             ^ Eager Test\n  73 |\n  74 |       onDragEnd.mockClear();\n  75 |     });","start":{"line":72,"column":13,"index":2096}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  17 |     Array.from({ length: 4 }).forEach(() => {\n  18 |       control.preLift(handle);\n> 19 |       expect(isDragging(handle)).toBe(false);\n     |             ^ Lazy Test\n  20 |\n  21 |       control.lift(handle);\n  22 |       expect(isDragging(handle)).toBe(true);","start":{"line":19,"column":13,"index":674}},{"frame":"  37 |\n  38 |       expect(onDragEnd).toHaveBeenCalledTimes(1);\n> 39 |       expect(getDropReason(onDragEnd)).toBe('DROP');\n     |             ^ Lazy Test\n  40 |\n  41 |       onDragEnd.mockClear();\n  42 |     });","start":{"line":39,"column":13,"index":1185}},{"frame":"  53 |     Array.from({ length: 4 }).forEach(() => {\n  54 |       control.preLift(handle);\n> 55 |       expect(isDragging(handle)).toBe(false);\n     |             ^ Lazy Test\n  56 |\n  57 |       control.lift(handle);\n  58 |       expect(isDragging(handle)).toBe(true);","start":{"line":55,"column":13,"index":1646}},{"frame":"  70 |       expect(isDragging(handle)).toBe(false);\n  71 |       expect(onDragEnd).toHaveBeenCalledTimes(1);\n> 72 |       expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |             ^ Lazy Test\n  73 |\n  74 |       onDragEnd.mockClear();\n  75 |     });","start":{"line":72,"column":13,"index":2096}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":7.143,"halstead":{"bugs":0.505,"difficulty":13.447,"effort":20382.868,"length":276,"time":1132.382,"vocabulary":45,"volume":1515.751,"operands":{"distinct":38,"total":146,"identifiers":["forEachSensor","control","it","\"should control a successful drag through the sensor\"","onDragStart","jest","fn","onDragEnd","getByText","render","handle","HTMLElement","\"item: 0\"","Array","from","length","4","forEach","preLift","expect","isDragging","toBe","false","lift","true","runOnlyPendingTimers","toHaveBeenCalled","move","not","drop","toHaveBeenCalledTimes","1","getDropReason","\"DROP\"","mockClear","\"should control a cancel through the sensor\"","cancel","\"CANCEL\""]},"operators":{"distinct":7,"total":130,"identifiers":["()","function=>","const","=",".","{}",":"]}},"paramCount":1,"sloc":{"logical":84,"physical":78}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/helpers","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/controls","type":"esm"}],"errors":[],"lineEnd":78,"lineStart":1,"maintainability":100.44,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should control a successful drag through the sensor\"","\"should control a cancel through the sensor\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":4,"physical":70},"errors":[],"lineEnd":77,"lineStart":8,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.061,"difficulty":5,"effort":922.387,"length":42,"time":51.244,"vocabulary":21,"volume":184.477,"operands":{"distinct":14,"total":20,"identifiers":["onDragStart","jest","fn","onDragEnd","getByText","render","handle","HTMLElement","\"item: 0\"","Array","from","length","4","forEach"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","()",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":35},"errors":[],"lineEnd":43,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.144,"difficulty":2.364,"effort":1018.695,"length":94,"time":56.594,"vocabulary":24,"volume":430.986,"operands":{"distinct":22,"total":52,"identifiers":["control","preLift","handle","expect","isDragging","toBe","false","lift","true","jest","runOnlyPendingTimers","onDragStart","toHaveBeenCalled","move","onDragEnd","not","drop","toHaveBeenCalledTimes","1","getDropReason","\"DROP\"","mockClear"]},"operators":{"distinct":2,"total":42,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":27,"physical":26},"errors":[],"lineEnd":42,"lineStart":17,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.061,"difficulty":5,"effort":922.387,"length":42,"time":51.244,"vocabulary":21,"volume":184.477,"operands":{"distinct":14,"total":20,"identifiers":["onDragStart","jest","fn","onDragEnd","getByText","render","handle","HTMLElement","\"item: 0\"","Array","from","length","4","forEach"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","()",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":32},"errors":[],"lineEnd":76,"lineStart":45,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.13,"difficulty":2.286,"effort":889.203,"length":86,"time":49.4,"vocabulary":23,"volume":389.026,"operands":{"distinct":21,"total":48,"identifiers":["control","preLift","handle","expect","isDragging","toBe","false","lift","true","jest","runOnlyPendingTimers","onDragStart","toHaveBeenCalled","move","cancel","onDragEnd","toHaveBeenCalledTimes","1","getDropReason","\"CANCEL\"","mockClear"]},"operators":{"distinct":2,"total":38,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":25,"physical":23},"errors":[],"lineEnd":75,"lineStart":53,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.19,"halstead":{"bugs":0.084,"difficulty":2.241,"effort":3397.145,"length":46,"time":188.73,"vocabulary":7.5,"volume":252.625,"operands":{"distinct":6.333,"total":24.333},"operators":{"distinct":1.167,"total":21.667}},"paramCount":0.167,"sloc":{"logical":14,"physical":13}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":9.618,"halstead":{"bugs":0.081,"difficulty":3.197,"effort":755.488,"length":54.4,"time":41.972,"vocabulary":18.8,"volume":241.509,"operands":{"distinct":14.8,"total":28.8},"operators":{"distinct":4,"total":25.6}},"paramCount":0.2,"sloc":{"logical":16.4,"physical":37.2}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/parent-rendering-should-not-kill-drag.spec.js","testCases":1,"smells":7,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  12 |\n  13 |     simpleLift(control, handle);\n> 14 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  15 |\n  16 |     rerender(<App />);\n  17 |","start":{"line":14,"column":4,"index":497}},{"frame":"  12 |\n  13 |     simpleLift(control, handle);\n> 14 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  15 |\n  16 |     rerender(<App />);\n  17 |","start":{"line":14,"column":4,"index":497}},{"frame":"  19 |     expect(getByText('item: 0')).toBe(handle);\n  20 |     // it is still dragging\n> 21 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  22 |   });\n  23 | });\n  24 |","start":{"line":21,"column":4,"index":675}},{"frame":"  19 |     expect(getByText('item: 0')).toBe(handle);\n  20 |     // it is still dragging\n> 21 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  22 |   });\n  23 | });\n  24 |","start":{"line":21,"column":4,"index":675}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  11 |     const handle: HTMLElement = getByText('item: 0');\n  12 |\n> 13 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  14 |     expect(isDragging(handle)).toBe(true);\n  15 |\n  16 |     rerender(<App />);","start":{"line":13,"column":4,"index":464}},{"frame":"  12 |\n  13 |     simpleLift(control, handle);\n> 14 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  15 |\n  16 |     rerender(<App />);\n  17 |","start":{"line":14,"column":11,"index":504}},{"frame":"  19 |     expect(getByText('item: 0')).toBe(handle);\n  20 |     // it is still dragging\n> 21 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  22 |   });\n  23 | });\n  24 |","start":{"line":21,"column":11,"index":682}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":14.286,"halstead":{"bugs":0.083,"difficulty":6.4,"effort":1602.317,"length":57,"time":89.018,"vocabulary":21,"volume":250.362,"operands":{"distinct":15,"total":32,"identifiers":["forEachSensor","control","it","\"should not abort a drag if a parent render occurs\"","getByText","rerender","render","handle","HTMLElement","\"item: 0\"","simpleLift","expect","isDragging","toBe","true"]},"operators":{"distinct":6,"total":25,"identifiers":["()","function=>","const","=","{}","."]}},"paramCount":1,"sloc":{"logical":21,"physical":24}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/helpers","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/controls","type":"esm"}],"errors":[],"lineEnd":24,"lineStart":1,"maintainability":117.997,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should not abort a drag if a parent render occurs\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":16},"errors":[],"lineEnd":23,"lineStart":8,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.067,"difficulty":5.833,"effort":1168.333,"length":49,"time":64.907,"vocabulary":17,"volume":200.286,"operands":{"distinct":12,"total":28,"identifiers":["getByText","rerender","render","handle","HTMLElement","\"item: 0\"","simpleLift","control","expect","isDragging","toBe","true"]},"operators":{"distinct":5,"total":21,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":17,"physical":14},"errors":[],"lineEnd":22,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.028,"difficulty":2.133,"effort":534.106,"length":19,"time":29.673,"vocabulary":7,"volume":83.454,"operands":{"distinct":5,"total":10.667},"operators":{"distinct":2,"total":8.333}},"paramCount":0.333,"sloc":{"logical":7,"physical":8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":27.941,"halstead":{"bugs":0.035,"difficulty":3.417,"effort":588.167,"length":26.5,"time":32.676,"vocabulary":10.5,"volume":104.143,"operands":{"distinct":7,"total":15},"operators":{"distinct":3.5,"total":11.5}},"paramCount":0.5,"sloc":{"logical":9.5,"physical":15}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/no-dragging-svgs.spec.js","testCases":2,"smells":9,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  35 |       });\n  36 |     });\n> 37 |     invariant(api);\n     |    ^ Eager Test\n  38 |     const draggable = api.getByTestId('draggable-0');\n  39 |     const handle = api.getByTestId('handle-0');\n  40 |","start":{"line":37,"column":4,"index":1175}},{"frame":"  40 |\n  41 |     withWarn(() => {\n> 42 |       simpleLift(control, handle);\n     |      ^ Eager Test\n  43 |     });\n  44 |\n  45 |     expect(isDragging(draggable)).toBe(false);","start":{"line":42,"column":6,"index":1321}},{"frame":"  43 |     });\n  44 |\n> 45 |     expect(isDragging(draggable)).toBe(false);\n     |           ^ Eager Test\n  46 |   });\n  47 |\n  48 |   it('should allow an SVG within a draggable', () => {","start":{"line":45,"column":11,"index":1370}},{"frame":"  65 |     const startFrom = getByTestId('svg-0');\n  66 |\n> 67 |     simpleLift(control, startFrom);\n     |    ^ Eager Test\n  68 |\n  69 |     expect(isDragging(draggable)).toBe(true);\n  70 |   });","start":{"line":67,"column":4,"index":2048}},{"frame":"  67 |     simpleLift(control, startFrom);\n  68 |\n> 69 |     expect(isDragging(draggable)).toBe(true);\n     |           ^ Eager Test\n  70 |   });\n  71 | });\n  72 |","start":{"line":69,"column":11,"index":2092}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  40 |\n  41 |     withWarn(() => {\n> 42 |       simpleLift(control, handle);\n     |      ^ Lazy Test\n  43 |     });\n  44 |\n  45 |     expect(isDragging(draggable)).toBe(false);","start":{"line":42,"column":6,"index":1321}},{"frame":"  43 |     });\n  44 |\n> 45 |     expect(isDragging(draggable)).toBe(false);\n     |           ^ Lazy Test\n  46 |   });\n  47 |\n  48 |   it('should allow an SVG within a draggable', () => {","start":{"line":45,"column":11,"index":1370}},{"frame":"  65 |     const startFrom = getByTestId('svg-0');\n  66 |\n> 67 |     simpleLift(control, startFrom);\n     |    ^ Lazy Test\n  68 |\n  69 |     expect(isDragging(draggable)).toBe(true);\n  70 |   });","start":{"line":67,"column":4,"index":2048}},{"frame":"  67 |     simpleLift(control, startFrom);\n  68 |\n> 69 |     expect(isDragging(draggable)).toBe(true);\n     |           ^ Lazy Test\n  70 |   });\n  71 | });\n  72 |","start":{"line":69,"column":11,"index":2092}}]}],"metrics":{"aggregate":{"cyclomatic":11,"cyclomaticDensity":24.444,"halstead":{"bugs":0.284,"difficulty":11.25,"effort":9584.14,"length":157,"time":532.452,"vocabulary":43,"volume":851.924,"operands":{"distinct":34,"total":85,"identifiers":["forEachSensor","control","it","\"should not start a drag from an SVG\"","renderItem","item","provided","snapshot","draggableProps","innerRef","isDragging","id","draggable-","dragHandleProps","handle-","api","withWarn","withError","render","invariant","draggable","getByTestId","\"draggable-0\"","handle","\"handle-0\"","simpleLift","expect","toBe","false","\"should allow an SVG within a draggable\"","svg-","startFrom","\"svg-0\"","true"]},"operators":{"distinct":9,"total":72,"identifiers":["()","function=>","const","=",".","``","${}","let","{}"]}},"paramCount":7,"sloc":{"logical":45,"physical":72}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/invariant","type":"esm"},{"line":5,"path":"../../util/controls","type":"esm"},{"line":6,"path":"../../util/helpers","type":"esm"},{"line":10,"path":"../../../../../src","type":"esm"},{"line":11,"path":"../../util/app","type":"esm"},{"line":12,"path":"../../../../util/console","type":"esm"}],"errors":[],"lineEnd":72,"lineStart":1,"maintainability":125.025,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should not start a drag from an SVG\"","\"should allow an SVG within a draggable\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":4,"physical":58},"errors":[],"lineEnd":71,"lineStart":14,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.059,"difficulty":4.286,"effort":759.425,"length":41,"time":42.19,"vocabulary":20,"volume":177.199,"operands":{"distinct":14,"total":20,"identifiers":["renderItem","item","api","withWarn","invariant","draggable","getByTestId","\"draggable-0\"","handle","\"handle-0\"","expect","isDragging","toBe","false"]},"operators":{"distinct":6,"total":21,"identifiers":["const","=","function=>","let","()","."]}},"paramCount":0,"sloc":{"logical":15,"physical":32},"errors":[],"lineEnd":46,"lineStart":15,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":13},"errors":[],"lineEnd":28,"lineStart":16,"name":"<anon method-3>","paramNames":["item"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.03,"difficulty":2.1,"effort":186.502,"length":24,"time":10.361,"vocabulary":13,"volume":88.811,"operands":{"distinct":10,"total":14,"identifiers":["provided","draggableProps","innerRef","snapshot","isDragging","item","id","draggable-","dragHandleProps","handle-"]},"operators":{"distinct":3,"total":10,"identifiers":[".","``","${}"]}},"paramCount":2,"sloc":{"logical":1,"physical":13},"errors":[],"lineEnd":28,"lineStart":16,"name":"<anon method-4>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":1,"effort":4.755,"length":3,"time":0.264,"vocabulary":3,"volume":4.755,"operands":{"distinct":1,"total":1,"identifiers":["withError"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":5},"errors":[],"lineEnd":36,"lineStart":32,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["api","render","renderItem"]},"operators":{"distinct":2,"total":2,"identifiers":["=","()"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":35,"lineStart":33,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":0.5,"effort":4,"length":4,"time":0.222,"vocabulary":4,"volume":8,"operands":{"distinct":3,"total":3,"identifiers":["simpleLift","control","handle"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":43,"lineStart":41,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.055,"difficulty":4.286,"effort":703.857,"length":38,"time":39.103,"vocabulary":20,"volume":164.233,"operands":{"distinct":14,"total":20,"identifiers":["renderItem","item","getByTestId","render","draggable","\"draggable-0\"","startFrom","\"svg-0\"","simpleLift","control","expect","isDragging","toBe","true"]},"operators":{"distinct":6,"total":18,"identifiers":["const","=","function=>","{}","()","."]}},"paramCount":0,"sloc":{"logical":13,"physical":23},"errors":[],"lineEnd":70,"lineStart":48,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":14},"errors":[],"lineEnd":62,"lineStart":49,"name":"<anon method-9>","paramNames":["item"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.03,"difficulty":2.1,"effort":186.502,"length":24,"time":10.361,"vocabulary":13,"volume":88.811,"operands":{"distinct":10,"total":14,"identifiers":["provided","draggableProps","dragHandleProps","innerRef","snapshot","isDragging","item","id","draggable-","svg-"]},"operators":{"distinct":3,"total":10,"identifiers":[".","``","${}"]}},"paramCount":2,"sloc":{"logical":1,"physical":14},"errors":[],"lineEnd":62,"lineStart":49,"name":"<anon method-10>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.222,"halstead":{"bugs":0.026,"difficulty":1.023,"effort":871.285,"length":14.273,"time":48.405,"vocabulary":3.909,"volume":77.448,"operands":{"distinct":3.091,"total":7.727},"operators":{"distinct":0.818,"total":6.545}},"paramCount":0.636,"sloc":{"logical":4.091,"physical":6.545}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":53.936,"halstead":{"bugs":0.019,"difficulty":1.76,"effort":188.617,"length":15.3,"time":10.479,"vocabulary":8.9,"volume":57.15,"operands":{"distinct":6.2,"total":8.3},"operators":{"distinct":2.7,"total":7}},"paramCount":0.7,"sloc":{"logical":4.3,"physical":17.8}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/nested-handles.spec.js","testCases":2,"smells":10,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  12 |     const columnHandle: HTMLElement = getByTestId('home');\n  13 |\n> 14 |     simpleLift(control, cardHandle);\n     |    ^ Eager Test\n  15 |\n  16 |     expect(isDragging(cardHandle)).toBe(true);\n  17 |     expect(isDragging(columnHandle)).toBe(false);","start":{"line":14,"column":4,"index":567}},{"frame":"  14 |     simpleLift(control, cardHandle);\n  15 |\n> 16 |     expect(isDragging(cardHandle)).toBe(true);\n     |           ^ Eager Test\n  17 |     expect(isDragging(columnHandle)).toBe(false);\n  18 |   });\n  19 |   it('should start a drag on a pare~nt the event is trigged on the parent', () => {","start":{"line":16,"column":11,"index":612}},{"frame":"  15 |\n  16 |     expect(isDragging(cardHandle)).toBe(true);\n> 17 |     expect(isDragging(columnHandle)).toBe(false);\n     |           ^ Eager Test\n  18 |   });\n  19 |   it('should start a drag on a pare~nt the event is trigged on the parent', () => {\n  20 |     const { getByTestId } = render(<Board />);","start":{"line":17,"column":11,"index":659}},{"frame":"  22 |     const columnHandle: HTMLElement = getByTestId('home');\n  23 |\n> 24 |     simpleLift(control, columnHandle);\n     |    ^ Eager Test\n  25 |\n  26 |     expect(isDragging(columnHandle)).toBe(true);\n  27 |     expect(isDragging(cardHandle)).toBe(false);","start":{"line":24,"column":4,"index":959}},{"frame":"  24 |     simpleLift(control, columnHandle);\n  25 |\n> 26 |     expect(isDragging(columnHandle)).toBe(true);\n     |           ^ Eager Test\n  27 |     expect(isDragging(cardHandle)).toBe(false);\n  28 |   });\n  29 | });","start":{"line":26,"column":11,"index":1006}},{"frame":"  25 |\n  26 |     expect(isDragging(columnHandle)).toBe(true);\n> 27 |     expect(isDragging(cardHandle)).toBe(false);\n     |           ^ Eager Test\n  28 |   });\n  29 | });\n  30 |","start":{"line":27,"column":11,"index":1055}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  12 |     const columnHandle: HTMLElement = getByTestId('home');\n  13 |\n> 14 |     simpleLift(control, cardHandle);\n     |    ^ Lazy Test\n  15 |\n  16 |     expect(isDragging(cardHandle)).toBe(true);\n  17 |     expect(isDragging(columnHandle)).toBe(false);","start":{"line":14,"column":4,"index":567}},{"frame":"  14 |     simpleLift(control, cardHandle);\n  15 |\n> 16 |     expect(isDragging(cardHandle)).toBe(true);\n     |           ^ Lazy Test\n  17 |     expect(isDragging(columnHandle)).toBe(false);\n  18 |   });\n  19 |   it('should start a drag on a pare~nt the event is trigged on the parent', () => {","start":{"line":16,"column":11,"index":612}},{"frame":"  22 |     const columnHandle: HTMLElement = getByTestId('home');\n  23 |\n> 24 |     simpleLift(control, columnHandle);\n     |    ^ Lazy Test\n  25 |\n  26 |     expect(isDragging(columnHandle)).toBe(true);\n  27 |     expect(isDragging(cardHandle)).toBe(false);","start":{"line":24,"column":4,"index":959}},{"frame":"  24 |     simpleLift(control, columnHandle);\n  25 |\n> 26 |     expect(isDragging(columnHandle)).toBe(true);\n     |           ^ Lazy Test\n  27 |     expect(isDragging(cardHandle)).toBe(false);\n  28 |   });\n  29 | });","start":{"line":26,"column":11,"index":1006}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":11.765,"halstead":{"bugs":0.15,"difficulty":9,"effort":4043.937,"length":98,"time":224.663,"vocabulary":24,"volume":449.326,"operands":{"distinct":18,"total":54,"identifiers":["forEachSensor","control","it","\"should not start a drag on a parent if a child drag handle has already received the event\"","getByTestId","render","cardHandle","HTMLElement","\"inhome1\"","columnHandle","\"home\"","simpleLift","expect","isDragging","toBe","true","false","\"should start a drag on a pare~nt the event is trigged on the parent\""]},"operators":{"distinct":6,"total":44,"identifiers":["()","function=>","const","=","{}","."]}},"paramCount":1,"sloc":{"logical":34,"physical":30}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/controls","type":"esm"},{"line":5,"path":"../../util/helpers","type":"esm"},{"line":6,"path":"../../util/board","type":"esm"}],"errors":[],"lineEnd":30,"lineStart":1,"maintainability":112.669,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should not start a drag on a parent if a child drag handle has already received the event\"","\"should start a drag on a pare~nt the event is trigged on the parent\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":4,"physical":22},"errors":[],"lineEnd":29,"lineStart":8,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.061,"difficulty":4.286,"effort":782.832,"length":43,"time":43.491,"vocabulary":19,"volume":182.661,"operands":{"distinct":14,"total":24,"identifiers":["getByTestId","render","cardHandle","HTMLElement","\"inhome1\"","columnHandle","\"home\"","simpleLift","control","expect","isDragging","toBe","true","false"]},"operators":{"distinct":5,"total":19,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":14,"physical":10},"errors":[],"lineEnd":18,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.061,"difficulty":4.286,"effort":782.832,"length":43,"time":43.491,"vocabulary":19,"volume":182.661,"operands":{"distinct":14,"total":24,"identifiers":["getByTestId","render","cardHandle","HTMLElement","\"inhome1\"","columnHandle","\"home\"","simpleLift","control","expect","isDragging","toBe","true","false"]},"operators":{"distinct":5,"total":19,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":14,"physical":10},"errors":[],"lineEnd":28,"lineStart":19,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.037,"difficulty":2.25,"effort":1010.984,"length":24.5,"time":56.166,"vocabulary":6,"volume":112.332,"operands":{"distinct":4.5,"total":13.5},"operators":{"distinct":1.5,"total":11}},"paramCount":0.25,"sloc":{"logical":8.5,"physical":7.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":13.095,"halstead":{"bugs":0.043,"difficulty":3.302,"effort":530.144,"length":31.333,"time":29.452,"vocabulary":14.333,"volume":127.966,"operands":{"distinct":10.333,"total":17.333},"operators":{"distinct":4,"total":14}},"paramCount":0.333,"sloc":{"logical":10.667,"physical":14}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/lock-released-pre-drag.spec.js","testCases":1,"smells":16,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  10 | forEachSensor((control: Control) => {\n  11 |   // keyboard has no pre lift\n> 12 |   if (control.name === 'keyboard') {\n     |  ^ Conditional Test Logic\n  13 |     return;\n  14 |   }\n  15 |","start":{"line":12,"column":2,"index":443}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  27 |\n  28 |     // lock is claimed but not dragging yet\n> 29 |     expect(api.isLockClaimed()).toBe(true);\n     |    ^ Duplicate Assert\n  30 |     expect(isDragging(handle)).toBe(false);\n  31 |\n  32 |     api.tryReleaseLock();","start":{"line":29,"column":4,"index":891}},{"frame":"  27 |\n  28 |     // lock is claimed but not dragging yet\n> 29 |     expect(api.isLockClaimed()).toBe(true);\n     |    ^ Duplicate Assert\n  30 |     expect(isDragging(handle)).toBe(false);\n  31 |\n  32 |     api.tryReleaseLock();","start":{"line":29,"column":4,"index":891}},{"frame":"  28 |     // lock is claimed but not dragging yet\n  29 |     expect(api.isLockClaimed()).toBe(true);\n> 30 |     expect(isDragging(handle)).toBe(false);\n     |    ^ Duplicate Assert\n  31 |\n  32 |     api.tryReleaseLock();\n  33 |","start":{"line":30,"column":4,"index":935}},{"frame":"  28 |     // lock is claimed but not dragging yet\n  29 |     expect(api.isLockClaimed()).toBe(true);\n> 30 |     expect(isDragging(handle)).toBe(false);\n     |    ^ Duplicate Assert\n  31 |\n  32 |     api.tryReleaseLock();\n  33 |","start":{"line":30,"column":4,"index":935}},{"frame":"  32 |     api.tryReleaseLock();\n  33 |\n> 34 |     expect(isDragging(handle)).toBe(false);\n     |    ^ Duplicate Assert\n  35 |     expect(api.isLockClaimed()).toBe(false);\n  36 |\n  37 |     // a lift after a released lock can get the lock all good","start":{"line":34,"column":4,"index":1007}},{"frame":"  32 |     api.tryReleaseLock();\n  33 |\n> 34 |     expect(isDragging(handle)).toBe(false);\n     |    ^ Duplicate Assert\n  35 |     expect(api.isLockClaimed()).toBe(false);\n  36 |\n  37 |     // a lift after a released lock can get the lock all good","start":{"line":34,"column":4,"index":1007}},{"frame":"  33 |\n  34 |     expect(isDragging(handle)).toBe(false);\n> 35 |     expect(api.isLockClaimed()).toBe(false);\n     |    ^ Duplicate Assert\n  36 |\n  37 |     // a lift after a released lock can get the lock all good\n  38 |     simpleLift(control, handle);","start":{"line":35,"column":4,"index":1051}},{"frame":"  37 |     // a lift after a released lock can get the lock all good\n  38 |     simpleLift(control, handle);\n> 39 |     expect(api.isLockClaimed()).toBe(true);\n     |    ^ Duplicate Assert\n  40 |     expect(isDragging(handle)).toBe(true);\n  41 |   });\n  42 | });","start":{"line":39,"column":4,"index":1192}},{"frame":"  37 |     // a lift after a released lock can get the lock all good\n  38 |     simpleLift(control, handle);\n> 39 |     expect(api.isLockClaimed()).toBe(true);\n     |    ^ Duplicate Assert\n  40 |     expect(isDragging(handle)).toBe(true);\n  41 |   });\n  42 | });","start":{"line":39,"column":4,"index":1192}},{"frame":"  38 |     simpleLift(control, handle);\n  39 |     expect(api.isLockClaimed()).toBe(true);\n> 40 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  41 |   });\n  42 | });\n  43 |","start":{"line":40,"column":4,"index":1236}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  22 |     const { getByText } = render(<App sensors={[sensor]} />);\n  23 |     const handle: HTMLElement = getByText('item: 0');\n> 24 |     invariant(api);\n     |    ^ Eager Test\n  25 |\n  26 |     control.preLift(handle);\n  27 |","start":{"line":24,"column":4,"index":796}},{"frame":"  28 |     // lock is claimed but not dragging yet\n  29 |     expect(api.isLockClaimed()).toBe(true);\n> 30 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  31 |\n  32 |     api.tryReleaseLock();\n  33 |","start":{"line":30,"column":11,"index":942}},{"frame":"  32 |     api.tryReleaseLock();\n  33 |\n> 34 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  35 |     expect(api.isLockClaimed()).toBe(false);\n  36 |\n  37 |     // a lift after a released lock can get the lock all good","start":{"line":34,"column":11,"index":1014}},{"frame":"  36 |\n  37 |     // a lift after a released lock can get the lock all good\n> 38 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  39 |     expect(api.isLockClaimed()).toBe(true);\n  40 |     expect(isDragging(handle)).toBe(true);\n  41 |   });","start":{"line":38,"column":4,"index":1159}},{"frame":"  38 |     simpleLift(control, handle);\n  39 |     expect(api.isLockClaimed()).toBe(true);\n> 40 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  41 |   });\n  42 | });\n  43 |","start":{"line":40,"column":11,"index":1243}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":13.514,"halstead":{"bugs":0.201,"difficulty":13.115,"effort":7925.582,"length":116,"time":440.31,"vocabulary":37,"volume":604.297,"operands":{"distinct":26,"total":62,"identifiers":["forEachSensor","control","name","\"keyboard\"","it","\"should cleanup a drag if a lock is forceably released mid drag\"","api","SensorAPI","sensor","Sensor","value","getByText","render","handle","HTMLElement","\"item: 0\"","invariant","preLift","expect","isLockClaimed","toBe","true","isDragging","false","tryReleaseLock","simpleLift"]},"operators":{"distinct":11,"total":54,"identifiers":["()","function=>","if","===",".","return","let","const","=","{}","[]"]}},"paramCount":2,"sloc":{"logical":37,"physical":43}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/types","type":"esm"},{"line":5,"path":"../../util/controls","type":"esm"},{"line":6,"path":"../../util/helpers","type":"esm"},{"line":7,"path":"../../util/app","type":"esm"},{"line":8,"path":"../../../../../src/invariant","type":"esm"}],"errors":[],"lineEnd":43,"lineStart":1,"maintainability":108.775,"methods":[{"cyclomatic":2,"cyclomaticDensity":50,"halstead":{"bugs":0.013,"difficulty":3,"effort":114.161,"length":11,"time":6.342,"vocabulary":11,"volume":38.054,"operands":{"distinct":5,"total":5,"identifiers":["control","name","\"keyboard\"","it","\"should cleanup a drag if a lock is forceably released mid drag\""]},"operators":{"distinct":6,"total":6,"identifiers":["if","===",".","return","()","function=>"]}},"paramCount":1,"sloc":{"logical":4,"physical":33},"errors":[],"lineEnd":42,"lineStart":10,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.159,"difficulty":10.095,"effort":4806.163,"length":98,"time":267.009,"vocabulary":29,"volume":476.082,"operands":{"distinct":21,"total":53,"identifiers":["api","SensorAPI","sensor","Sensor","value","getByText","render","handle","HTMLElement","\"item: 0\"","invariant","control","preLift","expect","isLockClaimed","toBe","true","isDragging","false","tryReleaseLock","simpleLift"]},"operators":{"distinct":8,"total":45,"identifiers":["let","const","=","function=>","{}","()","[]","."]}},"paramCount":0,"sloc":{"logical":30,"physical":26},"errors":[],"lineEnd":41,"lineStart":16,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":20,"lineStart":18,"name":"<anon method-3>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.25,"cyclomaticDensity":3.378,"halstead":{"bugs":0.05,"difficulty":3.279,"effort":1981.396,"length":29,"time":110.078,"vocabulary":9.25,"volume":151.074,"operands":{"distinct":6.5,"total":15.5},"operators":{"distinct":2.75,"total":13.5}},"paramCount":0.5,"sloc":{"logical":9.25,"physical":10.75}},"methodAverage":{"cyclomatic":1.333,"cyclomaticDensity":51.111,"halstead":{"bugs":0.058,"difficulty":4.532,"effort":1640.9,"length":37.333,"time":91.161,"vocabulary":14.333,"volume":172.964,"operands":{"distinct":9.333,"total":20},"operators":{"distinct":5,"total":17.333}},"paramCount":0.667,"sloc":{"logical":11.667,"physical":20.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/lock-released-mid-drag.spec.js","testCases":1,"smells":16,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  21 |     simpleLift(control, handle);\n  22 |\n> 23 |     expect(api.isLockClaimed()).toBe(true);\n     |    ^ Duplicate Assert\n  24 |     expect(isDragging(handle)).toBe(true);\n  25 |\n  26 |     api.tryReleaseLock();","start":{"line":23,"column":4,"index":767}},{"frame":"  21 |     simpleLift(control, handle);\n  22 |\n> 23 |     expect(api.isLockClaimed()).toBe(true);\n     |    ^ Duplicate Assert\n  24 |     expect(isDragging(handle)).toBe(true);\n  25 |\n  26 |     api.tryReleaseLock();","start":{"line":23,"column":4,"index":767}},{"frame":"  22 |\n  23 |     expect(api.isLockClaimed()).toBe(true);\n> 24 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  25 |\n  26 |     api.tryReleaseLock();\n  27 |","start":{"line":24,"column":4,"index":811}},{"frame":"  22 |\n  23 |     expect(api.isLockClaimed()).toBe(true);\n> 24 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  25 |\n  26 |     api.tryReleaseLock();\n  27 |","start":{"line":24,"column":4,"index":811}},{"frame":"  26 |     api.tryReleaseLock();\n  27 |\n> 28 |     expect(api.isLockClaimed()).toBe(false);\n     |    ^ Duplicate Assert\n  29 |     expect(isDragging(handle)).toBe(false);\n  30 |\n  31 |     // allowing reclaiming after","start":{"line":28,"column":4,"index":882}},{"frame":"  27 |\n  28 |     expect(api.isLockClaimed()).toBe(false);\n> 29 |     expect(isDragging(handle)).toBe(false);\n     |    ^ Duplicate Assert\n  30 |\n  31 |     // allowing reclaiming after\n  32 |     simpleLift(control, handle);","start":{"line":29,"column":4,"index":927}},{"frame":"  32 |     simpleLift(control, handle);\n  33 |\n> 34 |     expect(api.isLockClaimed()).toBe(true);\n     |    ^ Duplicate Assert\n  35 |     expect(isDragging(handle)).toBe(true);\n  36 |   });\n  37 | });","start":{"line":34,"column":4,"index":1039}},{"frame":"  32 |     simpleLift(control, handle);\n  33 |\n> 34 |     expect(api.isLockClaimed()).toBe(true);\n     |    ^ Duplicate Assert\n  35 |     expect(isDragging(handle)).toBe(true);\n  36 |   });\n  37 | });","start":{"line":34,"column":4,"index":1039}},{"frame":"  33 |\n  34 |     expect(api.isLockClaimed()).toBe(true);\n> 35 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  36 |   });\n  37 | });\n  38 |","start":{"line":35,"column":4,"index":1083}},{"frame":"  33 |\n  34 |     expect(api.isLockClaimed()).toBe(true);\n> 35 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  36 |   });\n  37 | });\n  38 |","start":{"line":35,"column":4,"index":1083}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  17 |     const { getByText } = render(<App sensors={[sensor]} />);\n  18 |     const handle: HTMLElement = getByText('item: 0');\n> 19 |     invariant(api);\n     |    ^ Eager Test\n  20 |\n  21 |     simpleLift(control, handle);\n  22 |","start":{"line":19,"column":4,"index":712}},{"frame":"  19 |     invariant(api);\n  20 |\n> 21 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  22 |\n  23 |     expect(api.isLockClaimed()).toBe(true);\n  24 |     expect(isDragging(handle)).toBe(true);","start":{"line":21,"column":4,"index":733}},{"frame":"  22 |\n  23 |     expect(api.isLockClaimed()).toBe(true);\n> 24 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  25 |\n  26 |     api.tryReleaseLock();\n  27 |","start":{"line":24,"column":11,"index":818}},{"frame":"  27 |\n  28 |     expect(api.isLockClaimed()).toBe(false);\n> 29 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  30 |\n  31 |     // allowing reclaiming after\n  32 |     simpleLift(control, handle);","start":{"line":29,"column":11,"index":934}},{"frame":"  30 |\n  31 |     // allowing reclaiming after\n> 32 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  33 |\n  34 |     expect(api.isLockClaimed()).toBe(true);\n  35 |     expect(isDragging(handle)).toBe(true);","start":{"line":32,"column":4,"index":1005}},{"frame":"  33 |\n  34 |     expect(api.isLockClaimed()).toBe(true);\n> 35 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  36 |   });\n  37 | });\n  38 |","start":{"line":35,"column":11,"index":1090}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":11.429,"halstead":{"bugs":0.178,"difficulty":10.261,"effort":5490.111,"length":108,"time":305.006,"vocabulary":31,"volume":535.053,"operands":{"distinct":23,"total":59,"identifiers":["forEachSensor","control","it","\"should cleanup a drag if a lock is forceably released mid drag\"","api","SensorAPI","sensor","Sensor","value","getByText","render","handle","HTMLElement","\"item: 0\"","invariant","simpleLift","expect","isLockClaimed","toBe","true","isDragging","tryReleaseLock","false"]},"operators":{"distinct":8,"total":49,"identifiers":["()","function=>","let","const","=","{}","[]","."]}},"paramCount":2,"sloc":{"logical":35,"physical":38}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/types","type":"esm"},{"line":5,"path":"../../util/controls","type":"esm"},{"line":6,"path":"../../util/helpers","type":"esm"},{"line":7,"path":"../../util/app","type":"esm"},{"line":8,"path":"../../../../../src/invariant","type":"esm"}],"errors":[],"lineEnd":38,"lineStart":1,"maintainability":111.154,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should cleanup a drag if a lock is forceably released mid drag\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":28},"errors":[],"lineEnd":37,"lineStart":10,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.155,"difficulty":10.6,"effort":4942.922,"length":97,"time":274.607,"vocabulary":28,"volume":466.313,"operands":{"distinct":20,"total":53,"identifiers":["api","SensorAPI","sensor","Sensor","value","getByText","render","handle","HTMLElement","\"item: 0\"","invariant","simpleLift","control","expect","isLockClaimed","toBe","true","isDragging","tryReleaseLock","false"]},"operators":{"distinct":8,"total":44,"identifiers":["let","const","=","function=>","{}","()","[]","."]}},"paramCount":0,"sloc":{"logical":30,"physical":26},"errors":[],"lineEnd":36,"lineStart":11,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"<anon method-3>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.045,"difficulty":2.565,"effort":1372.528,"length":27,"time":76.252,"vocabulary":7.75,"volume":133.763,"operands":{"distinct":5.75,"total":14.75},"operators":{"distinct":2,"total":12.25}},"paramCount":0.5,"sloc":{"logical":8.75,"physical":9.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":51.111,"halstead":{"bugs":0.053,"difficulty":4.033,"effort":1651.1,"length":34.667,"time":91.728,"vocabulary":11.667,"volume":159.689,"operands":{"distinct":8,"total":19},"operators":{"distinct":3.667,"total":15.667}},"paramCount":0.667,"sloc":{"logical":11,"physical":19}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/interactive-elements.spec.js","testCases":4,"smells":16,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  50 |       const handle: HTMLElement = getByTestId('0');\n  51 |\n> 52 |       simpleLift(control, handle);\n     |      ^ Eager Test\n  53 |\n  54 |       expect(isDragging(handle)).toBe(false);\n  55 |","start":{"line":52,"column":6,"index":1701}},{"frame":"  52 |       simpleLift(control, handle);\n  53 |\n> 54 |       expect(isDragging(handle)).toBe(false);\n     |             ^ Eager Test\n  55 |\n  56 |       unmount();\n  57 |     });","start":{"line":54,"column":13,"index":1744}},{"frame":"  82 |       const handle: HTMLElement = getByTestId('0');\n  83 |\n> 84 |       simpleLift(control, handle);\n     |      ^ Eager Test\n  85 |\n  86 |       expect(isDragging(handle)).toBe(true);\n  87 |","start":{"line":84,"column":6,"index":2644}},{"frame":"  84 |       simpleLift(control, handle);\n  85 |\n> 86 |       expect(isDragging(handle)).toBe(true);\n     |             ^ Eager Test\n  87 |\n  88 |       unmount();\n  89 |     });","start":{"line":86,"column":13,"index":2687}},{"frame":"  114 |       const handle: HTMLElement = getByTestId('handle-0');\n  115 |\n> 116 |       simpleLift(control, inner);\n      |      ^ Eager Test\n  117 |\n  118 |       expect(isDragging(handle)).toBe(false);\n  119 |","start":{"line":116,"column":6,"index":3589}},{"frame":"  116 |       simpleLift(control, inner);\n  117 |\n> 118 |       expect(isDragging(handle)).toBe(false);\n      |             ^ Eager Test\n  119 |\n  120 |       unmount();\n  121 |     });","start":{"line":118,"column":13,"index":3631}},{"frame":"  149 |       const inner: HTMLElement = getByTestId('inner-0');\n  150 |\n> 151 |       simpleLift(control, inner);\n      |      ^ Eager Test\n  152 |\n  153 |       expect(isDragging(handle)).toBe(true);\n  154 |","start":{"line":151,"column":6,"index":4657}},{"frame":"  151 |       simpleLift(control, inner);\n  152 |\n> 153 |       expect(isDragging(handle)).toBe(true);\n      |             ^ Eager Test\n  154 |\n  155 |       unmount();\n  156 |     });","start":{"line":153,"column":13,"index":4699}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  50 |       const handle: HTMLElement = getByTestId('0');\n  51 |\n> 52 |       simpleLift(control, handle);\n     |      ^ Lazy Test\n  53 |\n  54 |       expect(isDragging(handle)).toBe(false);\n  55 |","start":{"line":52,"column":6,"index":1701}},{"frame":"  52 |       simpleLift(control, handle);\n  53 |\n> 54 |       expect(isDragging(handle)).toBe(false);\n     |             ^ Lazy Test\n  55 |\n  56 |       unmount();\n  57 |     });","start":{"line":54,"column":13,"index":1744}},{"frame":"  82 |       const handle: HTMLElement = getByTestId('0');\n  83 |\n> 84 |       simpleLift(control, handle);\n     |      ^ Lazy Test\n  85 |\n  86 |       expect(isDragging(handle)).toBe(true);\n  87 |","start":{"line":84,"column":6,"index":2644}},{"frame":"  84 |       simpleLift(control, handle);\n  85 |\n> 86 |       expect(isDragging(handle)).toBe(true);\n     |             ^ Lazy Test\n  87 |\n  88 |       unmount();\n  89 |     });","start":{"line":86,"column":13,"index":2687}},{"frame":"  114 |       const handle: HTMLElement = getByTestId('handle-0');\n  115 |\n> 116 |       simpleLift(control, inner);\n      |      ^ Lazy Test\n  117 |\n  118 |       expect(isDragging(handle)).toBe(false);\n  119 |","start":{"line":116,"column":6,"index":3589}},{"frame":"  116 |       simpleLift(control, inner);\n  117 |\n> 118 |       expect(isDragging(handle)).toBe(false);\n      |             ^ Lazy Test\n  119 |\n  120 |       unmount();\n  121 |     });","start":{"line":118,"column":13,"index":3631}},{"frame":"  149 |       const inner: HTMLElement = getByTestId('inner-0');\n  150 |\n> 151 |       simpleLift(control, inner);\n      |      ^ Lazy Test\n  152 |\n  153 |       expect(isDragging(handle)).toBe(true);\n  154 |","start":{"line":151,"column":6,"index":4657}},{"frame":"  151 |       simpleLift(control, inner);\n  152 |\n> 153 |       expect(isDragging(handle)).toBe(true);\n      |             ^ Lazy Test\n  154 |\n  155 |       unmount();\n  156 |     });","start":{"line":153,"column":13,"index":4699}}]}],"metrics":{"aggregate":{"cyclomatic":25,"cyclomaticDensity":20.325,"halstead":{"bugs":0.838,"difficulty":24.879,"effort":62577.6,"length":409,"time":3476.533,"vocabulary":71,"volume":2515.247,"operands":{"distinct":58,"total":222,"identifiers":["mixedCase","obj","Object","keys","map","s","toLowerCase","toUpperCase","forEachTagName","fn","interactiveTagNames","forEach","forEachSensor","control","beforeEach","jest","spyOn","console","\"error\"","mockImplementation","afterEach","error","mockRestore","it","\"should not drag if the handle is an interactive element\"","tagName","renderItem","item","provided","snapshot","TagName","draggableProps","dragHandleProps","innerRef","isDragging","id","unmount","getByTestId","render","handle","HTMLElement","\"0\"","simpleLift","expect","toBe","false","\"should allow dragging from an interactive handle if instructed\"","items","Item","canDragInteractiveElements","true","\"should not start a drag if the parent is interactive\"","handle-","inner-","inner","\"inner-0\"","\"handle-0\"","\"should allow dragging from with an interactive parent if instructed\""]},"operators":{"distinct":13,"total":187,"identifiers":["const","=","function=>","[]",",","... (spread)","()",".","return","{}",":","``","${}"]}},"paramCount":21,"sloc":{"logical":123,"physical":159}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/controls","type":"esm"},{"line":5,"path":"../../util/helpers","type":"esm"},{"line":9,"path":"../../../../../src","type":"esm"},{"line":10,"path":"../../util/app","type":"esm"},{"line":11,"path":"../../../../../src/view/use-sensor-marshal/is-event-in-interactive-element","type":"esm"}],"errors":[],"lineEnd":159,"lineStart":1,"maintainability":118.426,"methods":[{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.028,"difficulty":6,"effort":498.158,"length":24,"time":27.675,"vocabulary":11,"volume":83.026,"operands":{"distinct":5,"total":10,"identifiers":["Object","keys","obj","map","s"]},"operators":{"distinct":6,"total":14,"identifiers":["[]",",","... (spread)","()",".","function=>"]}},"paramCount":1,"sloc":{"logical":7,"physical":4},"errors":[],"lineEnd":16,"lineStart":13,"name":"<anon method-1>","paramNames":["obj"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["s","toLowerCase"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":14,"lineStart":14,"name":"<anon method-2>","paramNames":["s"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["s","toUpperCase"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":15,"lineStart":15,"name":"<anon method-3>","paramNames":["s"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["mixedCase","interactiveTagNames","forEach","fn"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":3,"physical":2},"errors":[],"lineEnd":19,"lineStart":18,"name":"<anon method-4>","paramNames":["fn"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.023,"difficulty":1.429,"effort":99.626,"length":22,"time":5.535,"vocabulary":9,"volume":69.738,"operands":{"distinct":7,"total":10,"identifiers":["beforeEach","afterEach","it","\"should not drag if the handle is an interactive element\"","\"should allow dragging from an interactive handle if instructed\"","\"should not start a drag if the parent is interactive\"","\"should allow dragging from with an interactive parent if instructed\""]},"operators":{"distinct":2,"total":12,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":12,"physical":138},"errors":[],"lineEnd":158,"lineStart":21,"name":"<anon method-5>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["jest","spyOn","console","\"error\"","mockImplementation"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":25,"lineStart":22,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":24,"lineStart":24,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.005,"difficulty":1,"effort":13.932,"length":6,"time":0.774,"vocabulary":5,"volume":13.932,"operands":{"distinct":3,"total":3,"identifiers":["console","error","mockRestore"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":4},"errors":[],"lineEnd":29,"lineStart":26,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["forEachTagName","tagName"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":28},"errors":[],"lineEnd":58,"lineStart":31,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.053,"difficulty":4.5,"effort":719.601,"length":37,"time":39.978,"vocabulary":20,"volume":159.911,"operands":{"distinct":14,"total":21,"identifiers":["renderItem","item","unmount","getByTestId","render","handle","HTMLElement","\"0\"","simpleLift","control","expect","isDragging","toBe","false"]},"operators":{"distinct":6,"total":16,"identifiers":["const","=","function=>","{}","()","."]}},"paramCount":1,"sloc":{"logical":13,"physical":26},"errors":[],"lineEnd":57,"lineStart":32,"name":"<anon method-10>","paramNames":["tagName"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":15},"errors":[],"lineEnd":47,"lineStart":33,"name":"<anon method-11>","paramNames":["item"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.025,"difficulty":2.4,"effort":182.753,"length":20,"time":10.153,"vocabulary":14,"volume":76.147,"operands":{"distinct":10,"total":12,"identifiers":["TagName","tagName","provided","draggableProps","dragHandleProps","innerRef","snapshot","isDragging","item","id"]},"operators":{"distinct":4,"total":8,"identifiers":["const","=","return","."]}},"paramCount":2,"sloc":{"logical":2,"physical":15},"errors":[],"lineEnd":47,"lineStart":33,"name":"<anon method-12>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":33.688,"length":8,"time":1.872,"vocabulary":7,"volume":22.459,"operands":{"distinct":4,"total":4,"identifiers":["mixedCase","interactiveTagNames","forEach","tagName"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":31},"errors":[],"lineEnd":90,"lineStart":60,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.078,"difficulty":6.222,"effort":1462.359,"length":50,"time":81.242,"vocabulary":26,"volume":235.022,"operands":{"distinct":18,"total":28,"identifiers":["items","Item","id","\"0\"","canDragInteractiveElements","true","renderItem","item","unmount","getByTestId","render","handle","HTMLElement","simpleLift","control","expect","isDragging","toBe"]},"operators":{"distinct":8,"total":22,"identifiers":["const","=","[]","{}",":","function=>","()","."]}},"paramCount":1,"sloc":{"logical":16,"physical":29},"errors":[],"lineEnd":89,"lineStart":61,"name":"<anon method-14>","paramNames":["tagName"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":15},"errors":[],"lineEnd":77,"lineStart":63,"name":"<anon method-15>","paramNames":["item"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.025,"difficulty":2.4,"effort":182.753,"length":20,"time":10.153,"vocabulary":14,"volume":76.147,"operands":{"distinct":10,"total":12,"identifiers":["TagName","tagName","provided","draggableProps","dragHandleProps","innerRef","snapshot","isDragging","item","id"]},"operators":{"distinct":4,"total":8,"identifiers":["const","=","return","."]}},"paramCount":2,"sloc":{"logical":2,"physical":15},"errors":[],"lineEnd":77,"lineStart":63,"name":"<anon method-16>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["forEachTagName","tagName"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":31},"errors":[],"lineEnd":122,"lineStart":92,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.065,"difficulty":4.688,"effort":919.758,"length":44,"time":51.098,"vocabulary":22,"volume":196.215,"operands":{"distinct":16,"total":25,"identifiers":["renderItem","item","unmount","getByTestId","render","inner","HTMLElement","\"inner-0\"","handle","\"handle-0\"","simpleLift","control","expect","isDragging","toBe","false"]},"operators":{"distinct":6,"total":19,"identifiers":["const","=","function=>","{}","()","."]}},"paramCount":1,"sloc":{"logical":15,"physical":29},"errors":[],"lineEnd":121,"lineStart":93,"name":"<anon method-18>","paramNames":["tagName"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":17},"errors":[],"lineEnd":110,"lineStart":94,"name":"<anon method-19>","paramNames":["item"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.04,"difficulty":4,"effort":483.711,"length":29,"time":26.873,"vocabulary":18,"volume":120.928,"operands":{"distinct":12,"total":16,"identifiers":["TagName","tagName","provided","draggableProps","dragHandleProps","innerRef","snapshot","isDragging","item","id","handle-","inner-"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","return",".","``","${}"]}},"paramCount":2,"sloc":{"logical":2,"physical":17},"errors":[],"lineEnd":110,"lineStart":94,"name":"<anon method-20>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["forEachTagName","tagName"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":34},"errors":[],"lineEnd":157,"lineStart":124,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.092,"difficulty":6.095,"effort":1687.801,"length":57,"time":93.767,"vocabulary":29,"volume":276.905,"operands":{"distinct":21,"total":32,"identifiers":["items","Item","id","\"0\"","canDragInteractiveElements","true","renderItem","item","unmount","getByTestId","render","handle","HTMLElement","\"handle-0\"","inner","\"inner-0\"","simpleLift","control","expect","isDragging","toBe"]},"operators":{"distinct":8,"total":25,"identifiers":["const","=","[]","{}",":","function=>","()","."]}},"paramCount":1,"sloc":{"logical":18,"physical":32},"errors":[],"lineEnd":156,"lineStart":125,"name":"<anon method-22>","paramNames":["tagName"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":17},"errors":[],"lineEnd":143,"lineStart":127,"name":"<anon method-23>","paramNames":["item"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.04,"difficulty":4,"effort":483.711,"length":29,"time":26.873,"vocabulary":18,"volume":120.928,"operands":{"distinct":12,"total":16,"identifiers":["TagName","tagName","provided","draggableProps","dragHandleProps","innerRef","snapshot","isDragging","item","id","handle-","inner-"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","return",".","``","${}"]}},"paramCount":2,"sloc":{"logical":2,"physical":17},"errors":[],"lineEnd":143,"lineStart":127,"name":"<anon method-24>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.813,"halstead":{"bugs":0.034,"difficulty":0.995,"effort":2503.104,"length":16.36,"time":139.061,"vocabulary":2.84,"volume":100.61,"operands":{"distinct":2.32,"total":8.88},"operators":{"distinct":0.52,"total":7.48}},"paramCount":0.84,"sloc":{"logical":4.92,"physical":6.36}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":37.449,"halstead":{"bugs":0.022,"difficulty":2.239,"effort":286.686,"length":16.458,"time":15.927,"vocabulary":9.958,"volume":64.936,"operands":{"distinct":6.625,"total":9},"operators":{"distinct":3.333,"total":7.458}},"paramCount":0.875,"sloc":{"logical":4.875,"physical":21.792}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/disable-default-sensors.spec.js","testCases":1,"smells":2,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  11 |     const handle: HTMLElement = getByText('item: 0');\n  12 |\n> 13 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  14 |     expect(isDragging(handle)).toBe(false);\n  15 |   });\n  16 | });","start":{"line":13,"column":4,"index":495}},{"frame":"  12 |\n  13 |     simpleLift(control, handle);\n> 14 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  15 |   });\n  16 | });\n  17 |","start":{"line":14,"column":11,"index":535}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":23.077,"halstead":{"bugs":0.052,"difficulty":4.286,"effort":666.812,"length":36,"time":37.045,"vocabulary":20,"volume":155.589,"operands":{"distinct":14,"total":20,"identifiers":["forEachSensor","control","it","\"should be able to start a drag if default sensors is disabled\"","getByText","render","false","handle","HTMLElement","\"item: 0\"","simpleLift","expect","isDragging","toBe"]},"operators":{"distinct":6,"total":16,"identifiers":["()","function=>","const","=","{}","."]}},"paramCount":1,"sloc":{"logical":13,"physical":17}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/helpers","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/controls","type":"esm"}],"errors":[],"lineEnd":17,"lineStart":1,"maintainability":128.764,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should be able to start a drag if default sensors is disabled\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":16,"lineStart":8,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.037,"difficulty":3.636,"effort":407.273,"length":28,"time":22.626,"vocabulary":16,"volume":112,"operands":{"distinct":11,"total":16,"identifiers":["getByText","render","false","handle","HTMLElement","\"item: 0\"","simpleLift","control","expect","isDragging","toBe"]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":7},"errors":[],"lineEnd":15,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.017,"difficulty":1.429,"effort":222.271,"length":12,"time":12.348,"vocabulary":6.667,"volume":51.863,"operands":{"distinct":4.667,"total":6.667},"operators":{"distinct":2,"total":5.333}},"paramCount":0.333,"sloc":{"logical":4.333,"physical":5.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.556,"halstead":{"bugs":0.02,"difficulty":2.318,"effort":207.636,"length":16,"time":11.535,"vocabulary":10,"volume":60,"operands":{"distinct":6.5,"total":9},"operators":{"distinct":3.5,"total":7}},"paramCount":0.5,"sloc":{"logical":5.5,"physical":8}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/contenteditable.spec.js","testCases":5,"smells":20,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  38 |     const handle: HTMLElement = getByTestId('0');\n  39 |\n> 40 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  41 |\n  42 |     expect(isDragging(handle)).toBe(false);\n  43 |   });","start":{"line":40,"column":4,"index":1213}},{"frame":"  40 |     simpleLift(control, handle);\n  41 |\n> 42 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  43 |   });\n  44 |\n  45 |   it('should block the drag if originated from a child contenteditable', () => {","start":{"line":42,"column":11,"index":1254}},{"frame":"  63 |     const handle: HTMLElement = getByTestId('handle-0');\n  64 |\n> 65 |     simpleLift(control, inner);\n     |    ^ Eager Test\n  66 |\n  67 |     expect(isDragging(handle)).toBe(false);\n  68 |   });","start":{"line":65,"column":4,"index":1989}},{"frame":"  65 |     simpleLift(control, inner);\n  66 |\n> 67 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  68 |   });\n  69 |\n  70 |   it('should block the drag if originated from a child of a child contenteditable', () => {","start":{"line":67,"column":11,"index":2029}},{"frame":"  91 |     const handle: HTMLElement = getByTestId('handle-0');\n  92 |\n> 93 |     simpleLift(control, inner);\n     |    ^ Eager Test\n  94 |\n  95 |     expect(isDragging(handle)).toBe(false);\n  96 |   });","start":{"line":93,"column":4,"index":2849}},{"frame":"  93 |     simpleLift(control, inner);\n  94 |\n> 95 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  96 |   });\n  97 |\n  98 |   it('should not block if contenteditable is set to false', () => {","start":{"line":95,"column":11,"index":2889}},{"frame":"  114 |     const handle: HTMLElement = getByTestId('0');\n  115 |\n> 116 |     simpleLift(control, handle);\n      |    ^ Eager Test\n  117 |\n  118 |     expect(isDragging(handle)).toBe(true);\n  119 |   });","start":{"line":116,"column":4,"index":3492}},{"frame":"  116 |     simpleLift(control, handle);\n  117 |\n> 118 |     expect(isDragging(handle)).toBe(true);\n      |           ^ Eager Test\n  119 |   });\n  120 |\n  121 |   it('should not block a drag if dragging interactive elements is allowed', () => {","start":{"line":118,"column":11,"index":3533}},{"frame":"  141 |     const handle: HTMLElement = getByTestId('0');\n  142 |\n> 143 |     simpleLift(control, handle);\n      |    ^ Eager Test\n  144 |\n  145 |     expect(isDragging(handle)).toBe(true);\n  146 |   });","start":{"line":143,"column":4,"index":4246}},{"frame":"  143 |     simpleLift(control, handle);\n  144 |\n> 145 |     expect(isDragging(handle)).toBe(true);\n      |           ^ Eager Test\n  146 |   });\n  147 | });\n  148 |","start":{"line":145,"column":11,"index":4287}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  38 |     const handle: HTMLElement = getByTestId('0');\n  39 |\n> 40 |     simpleLift(control, handle);\n     |    ^ Lazy Test\n  41 |\n  42 |     expect(isDragging(handle)).toBe(false);\n  43 |   });","start":{"line":40,"column":4,"index":1213}},{"frame":"  40 |     simpleLift(control, handle);\n  41 |\n> 42 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Lazy Test\n  43 |   });\n  44 |\n  45 |   it('should block the drag if originated from a child contenteditable', () => {","start":{"line":42,"column":11,"index":1254}},{"frame":"  63 |     const handle: HTMLElement = getByTestId('handle-0');\n  64 |\n> 65 |     simpleLift(control, inner);\n     |    ^ Lazy Test\n  66 |\n  67 |     expect(isDragging(handle)).toBe(false);\n  68 |   });","start":{"line":65,"column":4,"index":1989}},{"frame":"  65 |     simpleLift(control, inner);\n  66 |\n> 67 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Lazy Test\n  68 |   });\n  69 |\n  70 |   it('should block the drag if originated from a child of a child contenteditable', () => {","start":{"line":67,"column":11,"index":2029}},{"frame":"  91 |     const handle: HTMLElement = getByTestId('handle-0');\n  92 |\n> 93 |     simpleLift(control, inner);\n     |    ^ Lazy Test\n  94 |\n  95 |     expect(isDragging(handle)).toBe(false);\n  96 |   });","start":{"line":93,"column":4,"index":2849}},{"frame":"  93 |     simpleLift(control, inner);\n  94 |\n> 95 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Lazy Test\n  96 |   });\n  97 |\n  98 |   it('should not block if contenteditable is set to false', () => {","start":{"line":95,"column":11,"index":2889}},{"frame":"  114 |     const handle: HTMLElement = getByTestId('0');\n  115 |\n> 116 |     simpleLift(control, handle);\n      |    ^ Lazy Test\n  117 |\n  118 |     expect(isDragging(handle)).toBe(true);\n  119 |   });","start":{"line":116,"column":4,"index":3492}},{"frame":"  116 |     simpleLift(control, handle);\n  117 |\n> 118 |     expect(isDragging(handle)).toBe(true);\n      |           ^ Lazy Test\n  119 |   });\n  120 |\n  121 |   it('should not block a drag if dragging interactive elements is allowed', () => {","start":{"line":118,"column":11,"index":3533}},{"frame":"  141 |     const handle: HTMLElement = getByTestId('0');\n  142 |\n> 143 |     simpleLift(control, handle);\n      |    ^ Lazy Test\n  144 |\n  145 |     expect(isDragging(handle)).toBe(true);\n  146 |   });","start":{"line":143,"column":4,"index":4246}},{"frame":"  143 |     simpleLift(control, handle);\n  144 |\n> 145 |     expect(isDragging(handle)).toBe(true);\n      |           ^ Lazy Test\n  146 |   });\n  147 | });\n  148 |","start":{"line":145,"column":11,"index":4287}}]}],"metrics":{"aggregate":{"cyclomatic":20,"cyclomaticDensity":20.619,"halstead":{"bugs":0.669,"difficulty":21.778,"effort":43689.093,"length":347,"time":2427.172,"vocabulary":55,"volume":2006.132,"operands":{"distinct":45,"total":196,"identifiers":["forEachSensor","control","beforeEach","jest","spyOn","console","\"error\"","mockImplementation","afterEach","error","mockRestore","it","\"should block the drag if the drag handle is itself contenteditable\"","renderItem","item","provided","snapshot","draggableProps","dragHandleProps","innerRef","isDragging","id","getByTestId","render","handle","HTMLElement","\"0\"","simpleLift","expect","toBe","false","\"should block the drag if originated from a child contenteditable\"","handle-","inner-","inner","\"inner-0\"","\"handle-0\"","\"should block the drag if originated from a child of a child contenteditable\"","\"should not block if contenteditable is set to false\"","\"false\"","true","\"should not block a drag if dragging interactive elements is allowed\"","items","Item","canDragInteractiveElements"]},"operators":{"distinct":10,"total":151,"identifiers":["()","function=>",".","const","=","{}","``","${}","[]",":"]}},"paramCount":16,"sloc":{"logical":97,"physical":148}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/controls","type":"esm"},{"line":5,"path":"../../util/helpers","type":"esm"},{"line":9,"path":"../../../../../src","type":"esm"},{"line":10,"path":"../../util/app","type":"esm"}],"errors":[],"lineEnd":148,"lineStart":1,"maintainability":119.124,"methods":[{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.029,"difficulty":1.5,"effort":129.555,"length":26,"time":7.198,"vocabulary":10,"volume":86.37,"operands":{"distinct":8,"total":12,"identifiers":["beforeEach","afterEach","it","\"should block the drag if the drag handle is itself contenteditable\"","\"should block the drag if originated from a child contenteditable\"","\"should block the drag if originated from a child of a child contenteditable\"","\"should not block if contenteditable is set to false\"","\"should not block a drag if dragging interactive elements is allowed\""]},"operators":{"distinct":2,"total":14,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":14,"physical":136},"errors":[],"lineEnd":147,"lineStart":12,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["jest","spyOn","console","\"error\"","mockImplementation"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":16,"lineStart":13,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":15,"lineStart":15,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.005,"difficulty":1,"effort":13.932,"length":6,"time":0.774,"vocabulary":5,"volume":13.932,"operands":{"distinct":3,"total":3,"identifiers":["console","error","mockRestore"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":4},"errors":[],"lineEnd":20,"lineStart":17,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.047,"difficulty":4.154,"effort":582.293,"length":33,"time":32.35,"vocabulary":19,"volume":140.182,"operands":{"distinct":13,"total":18,"identifiers":["renderItem","item","getByTestId","render","handle","HTMLElement","\"0\"","simpleLift","control","expect","isDragging","toBe","false"]},"operators":{"distinct":6,"total":15,"identifiers":["const","=","function=>","{}","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":22},"errors":[],"lineEnd":43,"lineStart":22,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":13},"errors":[],"lineEnd":35,"lineStart":23,"name":"<anon method-6>","paramNames":["item"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.016,"difficulty":0.625,"effort":29.718,"length":15,"time":1.651,"vocabulary":9,"volume":47.549,"operands":{"distinct":8,"total":10,"identifiers":["provided","draggableProps","dragHandleProps","innerRef","snapshot","isDragging","item","id"]},"operators":{"distinct":1,"total":5,"identifiers":["."]}},"paramCount":2,"sloc":{"logical":1,"physical":13},"errors":[],"lineEnd":35,"lineStart":23,"name":"<anon method-7>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.059,"difficulty":4.4,"effort":773.048,"length":40,"time":42.947,"vocabulary":21,"volume":175.693,"operands":{"distinct":15,"total":22,"identifiers":["renderItem","item","getByTestId","render","inner","HTMLElement","\"inner-0\"","handle","\"handle-0\"","simpleLift","control","expect","isDragging","toBe","false"]},"operators":{"distinct":6,"total":18,"identifiers":["const","=","function=>","{}","()","."]}},"paramCount":0,"sloc":{"logical":13,"physical":24},"errors":[],"lineEnd":68,"lineStart":45,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":14},"errors":[],"lineEnd":59,"lineStart":46,"name":"<anon method-9>","paramNames":["item"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.03,"difficulty":2.1,"effort":186.502,"length":24,"time":10.361,"vocabulary":13,"volume":88.811,"operands":{"distinct":10,"total":14,"identifiers":["provided","draggableProps","dragHandleProps","innerRef","snapshot","isDragging","item","id","handle-","inner-"]},"operators":{"distinct":3,"total":10,"identifiers":[".","``","${}"]}},"paramCount":2,"sloc":{"logical":1,"physical":14},"errors":[],"lineEnd":59,"lineStart":46,"name":"<anon method-10>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.059,"difficulty":4.4,"effort":773.048,"length":40,"time":42.947,"vocabulary":21,"volume":175.693,"operands":{"distinct":15,"total":22,"identifiers":["renderItem","item","getByTestId","render","inner","HTMLElement","\"inner-0\"","handle","\"handle-0\"","simpleLift","control","expect","isDragging","toBe","false"]},"operators":{"distinct":6,"total":18,"identifiers":["const","=","function=>","{}","()","."]}},"paramCount":0,"sloc":{"logical":13,"physical":27},"errors":[],"lineEnd":96,"lineStart":70,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":17},"errors":[],"lineEnd":87,"lineStart":71,"name":"<anon method-12>","paramNames":["item"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.03,"difficulty":2.1,"effort":186.502,"length":24,"time":10.361,"vocabulary":13,"volume":88.811,"operands":{"distinct":10,"total":14,"identifiers":["provided","draggableProps","dragHandleProps","innerRef","snapshot","isDragging","item","id","handle-","inner-"]},"operators":{"distinct":3,"total":10,"identifiers":[".","``","${}"]}},"paramCount":2,"sloc":{"logical":1,"physical":17},"errors":[],"lineEnd":87,"lineStart":71,"name":"<anon method-13>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.047,"difficulty":4.154,"effort":582.293,"length":33,"time":32.35,"vocabulary":19,"volume":140.182,"operands":{"distinct":13,"total":18,"identifiers":["renderItem","item","getByTestId","render","handle","HTMLElement","\"0\"","simpleLift","control","expect","isDragging","toBe","true"]},"operators":{"distinct":6,"total":15,"identifiers":["const","=","function=>","{}","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":22},"errors":[],"lineEnd":119,"lineStart":98,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":13},"errors":[],"lineEnd":111,"lineStart":99,"name":"<anon method-15>","paramNames":["item"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.018,"difficulty":0.611,"effort":32.481,"length":16,"time":1.805,"vocabulary":10,"volume":53.151,"operands":{"distinct":9,"total":11,"identifiers":["provided","draggableProps","dragHandleProps","innerRef","snapshot","isDragging","item","id","\"false\""]},"operators":{"distinct":1,"total":5,"identifiers":["."]}},"paramCount":2,"sloc":{"logical":1,"physical":13},"errors":[],"lineEnd":111,"lineStart":99,"name":"<anon method-16>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.071,"difficulty":5.882,"effort":1256.573,"length":46,"time":69.81,"vocabulary":25,"volume":213.617,"operands":{"distinct":17,"total":25,"identifiers":["items","Item","id","\"0\"","canDragInteractiveElements","true","renderItem","item","getByTestId","render","handle","HTMLElement","simpleLift","control","expect","isDragging","toBe"]},"operators":{"distinct":8,"total":21,"identifiers":["const","=","[]","{}",":","function=>","()","."]}},"paramCount":0,"sloc":{"logical":14,"physical":26},"errors":[],"lineEnd":146,"lineStart":121,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":13},"errors":[],"lineEnd":136,"lineStart":124,"name":"<anon method-18>","paramNames":["item"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.016,"difficulty":0.625,"effort":29.718,"length":15,"time":1.651,"vocabulary":9,"volume":47.549,"operands":{"distinct":8,"total":10,"identifiers":["provided","draggableProps","dragHandleProps","innerRef","snapshot","isDragging","item","id"]},"operators":{"distinct":1,"total":5,"identifiers":["."]}},"paramCount":2,"sloc":{"logical":1,"physical":13},"errors":[],"lineEnd":136,"lineStart":124,"name":"<anon method-19>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.031,"halstead":{"bugs":0.033,"difficulty":1.089,"effort":2184.455,"length":17.35,"time":121.359,"vocabulary":2.75,"volume":100.307,"operands":{"distinct":2.25,"total":9.8},"operators":{"distinct":0.5,"total":7.55}},"paramCount":0.8,"sloc":{"logical":4.85,"physical":7.4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":49.01,"halstead":{"bugs":0.023,"difficulty":1.871,"effort":243.818,"length":18.053,"time":13.545,"vocabulary":10.368,"volume":69.753,"operands":{"distinct":7.579,"total":10.211},"operators":{"distinct":2.789,"total":7.842}},"paramCount":0.842,"sloc":{"logical":5,"physical":21.368}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/cleanup.spec.js","testCases":2,"smells":2,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  32 |\n  33 |     // mid drag\n> 34 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  35 |     expect(isDragging(handle)).toEqual(true);\n  36 |\n  37 |     unmount();","start":{"line":34,"column":4,"index":997}},{"frame":"  33 |     // mid drag\n  34 |     simpleLift(control, handle);\n> 35 |     expect(isDragging(handle)).toEqual(true);\n     |           ^ Eager Test\n  36 |\n  37 |     unmount();\n  38 |","start":{"line":35,"column":11,"index":1037}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":14.286,"halstead":{"bugs":0.202,"difficulty":9.429,"effort":5703.166,"length":117,"time":316.843,"vocabulary":36,"volume":604.881,"operands":{"distinct":28,"total":66,"identifiers":["getCallCount","myMock","mock","calls","length","forEachSensor","control","it","\"should remove all window listeners when unmounting\"","jest","spyOn","window","\"addEventListener\"","\"removeEventListener\"","unmount","render","expect","addEventListener","toEqual","removeEventListener","\"should remove all window listeners when unmounting mid drag\"","getByText","handle","HTMLElement","\"item: 0\"","simpleLift","isDragging","true"]},"operators":{"distinct":8,"total":51,"identifiers":["function","return",".","()","function=>","const","=","{}"]}},"paramCount":2,"sloc":{"logical":35,"physical":44}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/helpers","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/controls","type":"esm"}],"errors":[],"lineEnd":44,"lineStart":1,"maintainability":115.402,"methods":[{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.007,"difficulty":1,"effort":20.68,"length":8,"time":1.149,"vocabulary":6,"volume":20.68,"operands":{"distinct":4,"total":4,"identifiers":["myMock","mock","calls","length"]},"operators":{"distinct":2,"total":4,"identifiers":["return","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":10,"lineStart":8,"name":"getCallCount","paramNames":["myMock"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should remove all window listeners when unmounting\"","\"should remove all window listeners when unmounting mid drag\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":4,"physical":32},"errors":[],"lineEnd":43,"lineStart":12,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.049,"difficulty":4.167,"effort":613.119,"length":36,"time":34.062,"vocabulary":17,"volume":147.149,"operands":{"distinct":12,"total":20,"identifiers":["jest","spyOn","window","\"addEventListener\"","\"removeEventListener\"","unmount","render","expect","getCallCount","addEventListener","toEqual","removeEventListener"]},"operators":{"distinct":5,"total":16,"identifiers":["()",".","const","=","{}"]}},"paramCount":0,"sloc":{"logical":10,"physical":12},"errors":[],"lineEnd":24,"lineStart":13,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.09,"difficulty":4.25,"effort":1144.711,"length":58,"time":63.595,"vocabulary":25,"volume":269.344,"operands":{"distinct":20,"total":34,"identifiers":["jest","spyOn","window","\"addEventListener\"","\"removeEventListener\"","unmount","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","control","expect","isDragging","toEqual","true","getCallCount","addEventListener","removeEventListener"]},"operators":{"distinct":5,"total":24,"identifiers":["()",".","const","=","{}"]}},"paramCount":0,"sloc":{"logical":17,"physical":17},"errors":[],"lineEnd":42,"lineStart":26,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.04,"difficulty":1.886,"effort":1140.633,"length":23.4,"time":63.369,"vocabulary":7.2,"volume":120.976,"operands":{"distinct":5.6,"total":13.2},"operators":{"distinct":1.6,"total":10.2}},"paramCount":0.4,"sloc":{"logical":7,"physical":8.8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":35.221,"halstead":{"bugs":0.038,"difficulty":2.688,"effort":450.819,"length":27.5,"time":25.046,"vocabulary":13.25,"volume":113.937,"operands":{"distinct":9.75,"total":15.5},"operators":{"distinct":3.5,"total":12}},"paramCount":0.5,"sloc":{"logical":8,"physical":16}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/cannot-start-when-unmounted.spec.js","testCases":1,"smells":2,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  13 |     unmount();\n  14 |\n> 15 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  16 |\n  17 |     expect(isDragging(handle)).toBe(false);\n  18 |   });","start":{"line":15,"column":4,"index":485}},{"frame":"  15 |     simpleLift(control, handle);\n  16 |\n> 17 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  18 |   });\n  19 | });\n  20 |","start":{"line":17,"column":11,"index":526}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":20,"halstead":{"bugs":0.057,"difficulty":4.4,"effort":753.722,"length":39,"time":41.873,"vocabulary":21,"volume":171.3,"operands":{"distinct":15,"total":22,"identifiers":["forEachSensor","control","it","\"should not allow starting after the handle is unmounted\"","getByText","unmount","render","handle","HTMLElement","\"item: 0\"","simpleLift","expect","isDragging","toBe","false"]},"operators":{"distinct":6,"total":17,"identifiers":["()","function=>","const","=","{}","."]}},"paramCount":1,"sloc":{"logical":15,"physical":20}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/helpers","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/controls","type":"esm"}],"errors":[],"lineEnd":20,"lineStart":1,"maintainability":126.027,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should not allow starting after the handle is unmounted\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":12},"errors":[],"lineEnd":19,"lineStart":8,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.042,"difficulty":3.75,"effort":475.168,"length":31,"time":26.398,"vocabulary":17,"volume":126.711,"operands":{"distinct":12,"total":18,"identifiers":["getByText","unmount","render","handle","HTMLElement","\"item: 0\"","simpleLift","control","expect","isDragging","toBe","false"]},"operators":{"distinct":5,"total":13,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":10},"errors":[],"lineEnd":18,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.019,"difficulty":1.467,"effort":251.241,"length":13,"time":13.958,"vocabulary":7,"volume":57.1,"operands":{"distinct":5,"total":7.333},"operators":{"distinct":2,"total":5.667}},"paramCount":0.333,"sloc":{"logical":5,"physical":6.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":29.545,"halstead":{"bugs":0.022,"difficulty":2.375,"effort":241.584,"length":17.5,"time":13.421,"vocabulary":10.5,"volume":67.356,"operands":{"distinct":7,"total":10},"operators":{"distinct":3.5,"total":7.5}},"paramCount":0.5,"sloc":{"logical":6.5,"physical":11}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/cannot-start-when-something-else-has-lock.spec.js","testCases":1,"smells":3,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  17 |     const handle: HTMLElement = getByText('item: 0');\n  18 |\n> 19 |     invariant(api, 'Expected function to be set');\n     |    ^ Eager Test\n  20 |     api.tryGetLock('0');\n  21 |\n  22 |     // won't be able to lift as the lock is already claimed","start":{"line":19,"column":4,"index":684}},{"frame":"  21 |\n  22 |     // won't be able to lift as the lock is already claimed\n> 23 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  24 |\n  25 |     expect(isDragging(handle)).toBe(false);\n  26 |   });","start":{"line":23,"column":4,"index":821}},{"frame":"  23 |     simpleLift(control, handle);\n  24 |\n> 25 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  26 |   });\n  27 | });\n  28 |","start":{"line":25,"column":11,"index":862}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":22.222,"halstead":{"bugs":0.091,"difficulty":6.545,"effort":1783.511,"length":55,"time":99.084,"vocabulary":31,"volume":272.481,"operands":{"distinct":22,"total":32,"identifiers":["forEachSensor","control","it","\"should not start a drag if another sensor is capturing\"","api","SensorAPI","greedy","value","getByText","render","handle","HTMLElement","\"item: 0\"","invariant","\"Expected function to be set\"","tryGetLock","\"0\"","simpleLift","expect","isDragging","toBe","false"]},"operators":{"distinct":9,"total":23,"identifiers":["()","function=>","let","function","=","const","{}","[]","."]}},"paramCount":2,"sloc":{"logical":18,"physical":28}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/invariant","type":"esm"},{"line":5,"path":"../../util/helpers","type":"esm"},{"line":6,"path":"../../util/app","type":"esm"},{"line":7,"path":"../../../../../src/types","type":"esm"},{"line":8,"path":"../../util/controls","type":"esm"}],"errors":[],"lineEnd":28,"lineStart":1,"maintainability":125.772,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should not start a drag if another sensor is capturing\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":18},"errors":[],"lineEnd":27,"lineStart":10,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.07,"difficulty":5.474,"effort":1145.177,"length":44,"time":63.621,"vocabulary":27,"volume":209.215,"operands":{"distinct":19,"total":26,"identifiers":["api","SensorAPI","greedy","value","getByText","render","handle","HTMLElement","\"item: 0\"","invariant","\"Expected function to be set\"","tryGetLock","\"0\"","simpleLift","control","expect","isDragging","toBe","false"]},"operators":{"distinct":8,"total":18,"identifiers":["let","function","const","=","{}","()","[]","."]}},"paramCount":0,"sloc":{"logical":13,"physical":16},"errors":[],"lineEnd":26,"lineStart":11,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"greedy","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.023,"difficulty":1.636,"effort":445.878,"length":13.75,"time":24.771,"vocabulary":7.75,"volume":68.12,"operands":{"distinct":5.5,"total":8},"operators":{"distinct":2.25,"total":5.75}},"paramCount":0.5,"sloc":{"logical":4.5,"physical":7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":52.564,"halstead":{"bugs":0.025,"difficulty":2.325,"effort":385.185,"length":17,"time":21.399,"vocabulary":11.333,"volume":73.99,"operands":{"distinct":7.667,"total":10},"operators":{"distinct":3.667,"total":7}},"paramCount":0.667,"sloc":{"logical":5.333,"physical":12.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/cannot-start-when-disabled.spec.js","testCases":1,"smells":2,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  13 |     const handle: HTMLElement = getByText('item: 0');\n  14 |\n> 15 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  16 |\n  17 |     expect(isDragging(handle)).toBe(false);\n  18 |   });","start":{"line":15,"column":4,"index":529}},{"frame":"  15 |     simpleLift(control, handle);\n  16 |\n> 17 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  18 |   });\n  19 | });\n  20 |","start":{"line":17,"column":11,"index":570}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":18.75,"halstead":{"bugs":0.076,"difficulty":5.474,"effort":1249.284,"length":48,"time":69.405,"vocabulary":27,"volume":228.235,"operands":{"distinct":19,"total":26,"identifiers":["forEachSensor","control","it","\"should not start a drag if disabled\"","items","Item","id","\"0\"","isEnabled","false","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","expect","isDragging","toBe"]},"operators":{"distinct":8,"total":22,"identifiers":["()","function=>","const","=","[]","{}",":","."]}},"paramCount":1,"sloc":{"logical":16,"physical":20}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/helpers","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/controls","type":"esm"}],"errors":[],"lineEnd":20,"lineStart":1,"maintainability":123.253,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should not start a drag if disabled\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":12},"errors":[],"lineEnd":19,"lineStart":8,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.06,"difficulty":4.813,"effort":870.786,"length":40,"time":48.377,"vocabulary":23,"volume":180.942,"operands":{"distinct":16,"total":22,"identifiers":["items","Item","id","\"0\"","isEnabled","false","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","control","expect","isDragging","toBe"]},"operators":{"distinct":7,"total":18,"identifiers":["const","=","[]","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":12,"physical":10},"errors":[],"lineEnd":18,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.025,"difficulty":1.825,"effort":416.428,"length":16,"time":23.135,"vocabulary":9,"volume":76.078,"operands":{"distinct":6.333,"total":8.667},"operators":{"distinct":2.667,"total":7.333}},"paramCount":0.333,"sloc":{"logical":5.333,"physical":6.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":29.167,"halstead":{"bugs":0.031,"difficulty":2.906,"effort":439.393,"length":22,"time":24.411,"vocabulary":13.5,"volume":94.471,"operands":{"distinct":9,"total":12},"operators":{"distinct":4.5,"total":10}},"paramCount":0.5,"sloc":{"logical":7,"physical":11}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/cancel-while-dragging.spec.js","testCases":3,"smells":22,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  15 |\n  16 |     simpleLift(control, handle);\n> 17 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  18 |\n  19 |     // cancel\n  20 |     const event: Event = createEvent.keyDown(handle, {","start":{"line":17,"column":4,"index":756}},{"frame":"  27 |     expect(event.defaultPrevented).toBe(true);\n  28 |     // drag ended\n> 29 |     expect(isDragging(handle)).toBe(false);\n     |    ^ Duplicate Assert\n  30 |     expect(onDragEnd.mock.calls[0][0].reason).toBe('CANCEL');\n  31 |   });\n  32 |","start":{"line":29,"column":4,"index":1028}},{"frame":"  37 |\n  38 |     simpleLift(control, handle);\n> 39 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  40 |\n  41 |     // cancel\n  42 |     const event: Event = new Event('resize', {","start":{"line":39,"column":4,"index":1380}},{"frame":"  50 |     expect(event.defaultPrevented).toBe(false);\n  51 |     // drag ended\n> 52 |     expect(isDragging(handle)).toBe(false);\n     |    ^ Duplicate Assert\n  53 |     expect(onDragEnd.mock.calls[0][0].reason).toBe('CANCEL');\n  54 |   });\n  55 |","start":{"line":52,"column":4,"index":1690}},{"frame":"  60 |\n  61 |     simpleLift(control, handle);\n> 62 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  63 |\n  64 |     // cancel\n  65 |     const event: Event = new Event(supportedEventName, {","start":{"line":62,"column":4,"index":2053}},{"frame":"  73 |     expect(event.defaultPrevented).toBe(false);\n  74 |     // drag ended\n> 75 |     expect(isDragging(handle)).toBe(false);\n     |    ^ Duplicate Assert\n  76 |     expect(getDropReason(onDragEnd)).toBe('CANCEL');\n  77 |   });\n  78 | });","start":{"line":75,"column":4,"index":2373}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  14 |     const handle: HTMLElement = getByText('item: 0');\n  15 |\n> 16 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  17 |     expect(isDragging(handle)).toBe(true);\n  18 |\n  19 |     // cancel","start":{"line":16,"column":4,"index":723}},{"frame":"  15 |\n  16 |     simpleLift(control, handle);\n> 17 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  18 |\n  19 |     // cancel\n  20 |     const event: Event = createEvent.keyDown(handle, {","start":{"line":17,"column":11,"index":763}},{"frame":"  27 |     expect(event.defaultPrevented).toBe(true);\n  28 |     // drag ended\n> 29 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  30 |     expect(onDragEnd.mock.calls[0][0].reason).toBe('CANCEL');\n  31 |   });\n  32 |","start":{"line":29,"column":11,"index":1035}},{"frame":"  36 |     const handle: HTMLElement = getByText('item: 0');\n  37 |\n> 38 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  39 |     expect(isDragging(handle)).toBe(true);\n  40 |\n  41 |     // cancel","start":{"line":38,"column":4,"index":1347}},{"frame":"  37 |\n  38 |     simpleLift(control, handle);\n> 39 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  40 |\n  41 |     // cancel\n  42 |     const event: Event = new Event('resize', {","start":{"line":39,"column":11,"index":1387}},{"frame":"  50 |     expect(event.defaultPrevented).toBe(false);\n  51 |     // drag ended\n> 52 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  53 |     expect(onDragEnd.mock.calls[0][0].reason).toBe('CANCEL');\n  54 |   });\n  55 |","start":{"line":52,"column":11,"index":1697}},{"frame":"  59 |     const handle: HTMLElement = getByText('item: 0');\n  60 |\n> 61 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  62 |     expect(isDragging(handle)).toBe(true);\n  63 |\n  64 |     // cancel","start":{"line":61,"column":4,"index":2020}},{"frame":"  60 |\n  61 |     simpleLift(control, handle);\n> 62 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  63 |\n  64 |     // cancel\n  65 |     const event: Event = new Event(supportedEventName, {","start":{"line":62,"column":11,"index":2060}},{"frame":"  73 |     expect(event.defaultPrevented).toBe(false);\n  74 |     // drag ended\n> 75 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  76 |     expect(getDropReason(onDragEnd)).toBe('CANCEL');\n  77 |   });\n  78 | });","start":{"line":75,"column":11,"index":2380}},{"frame":"  74 |     // drag ended\n  75 |     expect(isDragging(handle)).toBe(false);\n> 76 |     expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |           ^ Eager Test\n  77 |   });\n  78 | });\n  79 |","start":{"line":76,"column":11,"index":2424}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  14 |     const handle: HTMLElement = getByText('item: 0');\n  15 |\n> 16 |     simpleLift(control, handle);\n     |    ^ Lazy Test\n  17 |     expect(isDragging(handle)).toBe(true);\n  18 |\n  19 |     // cancel","start":{"line":16,"column":4,"index":723}},{"frame":"  15 |\n  16 |     simpleLift(control, handle);\n> 17 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Lazy Test\n  18 |\n  19 |     // cancel\n  20 |     const event: Event = createEvent.keyDown(handle, {","start":{"line":17,"column":11,"index":763}},{"frame":"  36 |     const handle: HTMLElement = getByText('item: 0');\n  37 |\n> 38 |     simpleLift(control, handle);\n     |    ^ Lazy Test\n  39 |     expect(isDragging(handle)).toBe(true);\n  40 |\n  41 |     // cancel","start":{"line":38,"column":4,"index":1347}},{"frame":"  37 |\n  38 |     simpleLift(control, handle);\n> 39 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Lazy Test\n  40 |\n  41 |     // cancel\n  42 |     const event: Event = new Event('resize', {","start":{"line":39,"column":11,"index":1387}},{"frame":"  59 |     const handle: HTMLElement = getByText('item: 0');\n  60 |\n> 61 |     simpleLift(control, handle);\n     |    ^ Lazy Test\n  62 |     expect(isDragging(handle)).toBe(true);\n  63 |\n  64 |     // cancel","start":{"line":61,"column":4,"index":2020}},{"frame":"  60 |\n  61 |     simpleLift(control, handle);\n> 62 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Lazy Test\n  63 |\n  64 |     // cancel\n  65 |     const event: Event = new Event(supportedEventName, {","start":{"line":62,"column":11,"index":2060}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":6.667,"halstead":{"bugs":0.508,"difficulty":17.423,"effort":26564.874,"length":273,"time":1475.826,"vocabulary":48,"volume":1524.695,"operands":{"distinct":39,"total":151,"identifiers":["forEachSensor","control","it","\"should cancel when pressing escape\"","onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","expect","isDragging","toBe","true","event","Event","createEvent","keyDown","keyCode","keyCodes","escape","fireEvent","defaultPrevented","false","mock","calls","0","reason","\"CANCEL\"","\"should cancel when window is resized\"","\"resize\"","bubbles","cancelable","\"should cancel when there is a visibility change\"","supportedEventName","getDropReason"]},"operators":{"distinct":9,"total":122,"identifiers":["()","function=>","const","=",".","{}",":","[]","new"]}},"paramCount":1,"sloc":{"logical":75,"physical":79}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/view/key-codes","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/helpers","type":"esm"},{"line":7,"path":"../../../../../src/view/use-sensor-marshal/sensors/util/supported-page-visibility-event-name","type":"esm"},{"line":8,"path":"../../util/controls","type":"esm"}],"errors":[],"lineEnd":79,"lineStart":1,"maintainability":97.793,"methods":[{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should cancel when pressing escape\"","\"should cancel when window is resized\"","\"should cancel when there is a visibility change\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":6,"physical":69},"errors":[],"lineEnd":78,"lineStart":10,"name":"<anon method-1>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.153,"difficulty":5.914,"effort":2721.074,"length":89,"time":151.171,"vocabulary":36,"volume":460.123,"operands":{"distinct":29,"total":49,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","control","expect","isDragging","toBe","true","event","Event","createEvent","keyDown","keyCode","keyCodes","escape","fireEvent","defaultPrevented","false","mock","calls","0","reason","\"CANCEL\""]},"operators":{"distinct":7,"total":40,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":22,"physical":21},"errors":[],"lineEnd":31,"lineStart":11,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.15,"difficulty":7.259,"effort":3276.662,"length":88,"time":182.037,"vocabulary":35,"volume":451.377,"operands":{"distinct":27,"total":49,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","control","expect","isDragging","toBe","true","event","Event","\"resize\"","bubbles","cancelable","fireEvent","defaultPrevented","false","mock","calls","0","reason","\"CANCEL\""]},"operators":{"distinct":8,"total":39,"identifiers":["const","=","()",".","{}","new",":","[]"]}},"paramCount":0,"sloc":{"logical":22,"physical":22},"errors":[],"lineEnd":54,"lineStart":33,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.132,"difficulty":6.563,"effort":2600.953,"length":80,"time":144.497,"vocabulary":31,"volume":396.336,"operands":{"distinct":24,"total":45,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","control","expect","isDragging","toBe","true","event","Event","supportedEventName","bubbles","cancelable","fireEvent","defaultPrevented","false","getDropReason","\"CANCEL\""]},"operators":{"distinct":7,"total":35,"identifiers":["const","=","()",".","{}","new",":"]}},"paramCount":0,"sloc":{"logical":23,"physical":22},"errors":[],"lineEnd":77,"lineStart":56,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.333,"halstead":{"bugs":0.102,"difficulty":3.485,"effort":5312.975,"length":54.6,"time":295.165,"vocabulary":9.6,"volume":304.939,"operands":{"distinct":7.8,"total":30.2},"operators":{"distinct":1.8,"total":24.4}},"paramCount":0.2,"sloc":{"logical":15,"physical":15.8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":7.526,"halstead":{"bugs":0.112,"difficulty":5.309,"effort":2161.305,"length":67.25,"time":120.072,"vocabulary":27,"volume":334.714,"operands":{"distinct":21,"total":37.25},"operators":{"distinct":6,"total":30}},"paramCount":0.25,"sloc":{"logical":18.25,"physical":33.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/shared-behaviours/abort-on-error.spec.js","testCases":3,"smells":22,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  25 |   props.setForceThrow(chuck);\n  26 |\n> 27 |   if (shouldThrowRef.current) {\n     |  ^ Conditional Test Logic\n  28 |     shouldThrowRef.current = false;\n  29 |     props.throw();\n  30 |   }","start":{"line":27,"column":2,"index":814}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  64 |           <Vomit\n  65 |             throw={() =>\n> 66 |               invariant(false, 'Do not pass go, do not collect $200')\n     |              ^ Eager Test\n  67 |             }\n  68 |             setForceThrow={thrower.setForceThrow}\n  69 |           />","start":{"line":66,"column":14,"index":1632}},{"frame":"  73 |     const handle: HTMLElement = getByText('item: 0');\n  74 |\n> 75 |     simpleLift(control, handle);\n     |    ^ Eager Test\n  76 |     expect(isDragging(handle)).toBe(true);\n  77 |\n  78 |     thrower.execute();","start":{"line":75,"column":4,"index":1851}},{"frame":"  74 |\n  75 |     simpleLift(control, handle);\n> 76 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  77 |\n  78 |     thrower.execute();\n  79 |","start":{"line":76,"column":11,"index":1891}},{"frame":"  81 |     // handle is now a new element\n  82 |     expect(handle).not.toBe(newHandle);\n> 83 |     expect(isDragging(newHandle)).toBe(false);\n     |           ^ Eager Test\n  84 |\n  85 |     // moving the handles around\n  86 |     expect(() => {","start":{"line":83,"column":11,"index":2091}},{"frame":"  87 |       control.move(handle);\n  88 |       control.move(newHandle);\n> 89 |       expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |             ^ Eager Test\n  90 |       expect(getOffset(newHandle)).toEqual({ x: 0, y: 0 });\n  91 |     }).not.toThrow();\n  92 |   });","start":{"line":89,"column":13,"index":2252}},{"frame":"  88 |       control.move(newHandle);\n  89 |       expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n> 90 |       expect(getOffset(newHandle)).toEqual({ x: 0, y: 0 });\n     |             ^ Eager Test\n  91 |     }).not.toThrow();\n  92 |   });\n  93 |","start":{"line":90,"column":13,"index":2309}},{"frame":"  108 |     const handle: HTMLElement = getByText('item: 0');\n  109 |\n> 110 |     simpleLift(control, handle);\n      |    ^ Eager Test\n  111 |     expect(isDragging(handle)).toBe(true);\n  112 |\n  113 |     expect(() => {","start":{"line":110,"column":4,"index":2857}},{"frame":"  109 |\n  110 |     simpleLift(control, handle);\n> 111 |     expect(isDragging(handle)).toBe(true);\n      |           ^ Eager Test\n  112 |\n  113 |     expect(() => {\n  114 |       thrower.execute();","start":{"line":111,"column":11,"index":2897}},{"frame":"  121 |     expect(() => {\n  122 |       control.move(handle);\n> 123 |       expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n      |             ^ Eager Test\n  124 |     }).not.toThrow();\n  125 |   });\n  126 |","start":{"line":123,"column":13,"index":3172}},{"frame":"  141 |     const handle: HTMLElement = getByText('item: 0');\n  142 |\n> 143 |     simpleLift(control, handle);\n      |    ^ Eager Test\n  144 |     expect(isDragging(handle)).toBe(true);\n  145 |\n  146 |     withWarn(() => {","start":{"line":143,"column":4,"index":3661}},{"frame":"  142 |\n  143 |     simpleLift(control, handle);\n> 144 |     expect(isDragging(handle)).toBe(true);\n      |           ^ Eager Test\n  145 |\n  146 |     withWarn(() => {\n  147 |       thrower.execute();","start":{"line":144,"column":11,"index":3701}},{"frame":"  148 |     });\n  149 |\n> 150 |     expect(isDragging(getByText('item: 0'))).toBe(false);\n      |           ^ Eager Test\n  151 |   });\n  152 | });\n  153 |","start":{"line":150,"column":11,"index":3800}}]},{"name":"Exception Handling","packageName":"exceptionHandling","items":[{"frame":"   99 |           <Vomit\n  100 |             throw={() => {\n> 101 |               throw new Error('Raw error throw');\n      |              ^ Exception Handling\n  102 |             }}\n  103 |             setForceThrow={thrower.setForceThrow}\n  104 |           />","start":{"line":101,"column":14,"index":2657}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  73 |     const handle: HTMLElement = getByText('item: 0');\n  74 |\n> 75 |     simpleLift(control, handle);\n     |    ^ Lazy Test\n  76 |     expect(isDragging(handle)).toBe(true);\n  77 |\n  78 |     thrower.execute();","start":{"line":75,"column":4,"index":1851}},{"frame":"  74 |\n  75 |     simpleLift(control, handle);\n> 76 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Lazy Test\n  77 |\n  78 |     thrower.execute();\n  79 |","start":{"line":76,"column":11,"index":1891}},{"frame":"  87 |       control.move(handle);\n  88 |       control.move(newHandle);\n> 89 |       expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |             ^ Lazy Test\n  90 |       expect(getOffset(newHandle)).toEqual({ x: 0, y: 0 });\n  91 |     }).not.toThrow();\n  92 |   });","start":{"line":89,"column":13,"index":2252}},{"frame":"  108 |     const handle: HTMLElement = getByText('item: 0');\n  109 |\n> 110 |     simpleLift(control, handle);\n      |    ^ Lazy Test\n  111 |     expect(isDragging(handle)).toBe(true);\n  112 |\n  113 |     expect(() => {","start":{"line":110,"column":4,"index":2857}},{"frame":"  109 |\n  110 |     simpleLift(control, handle);\n> 111 |     expect(isDragging(handle)).toBe(true);\n      |           ^ Lazy Test\n  112 |\n  113 |     expect(() => {\n  114 |       thrower.execute();","start":{"line":111,"column":11,"index":2897}},{"frame":"  121 |     expect(() => {\n  122 |       control.move(handle);\n> 123 |       expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n      |             ^ Lazy Test\n  124 |     }).not.toThrow();\n  125 |   });\n  126 |","start":{"line":123,"column":13,"index":3172}},{"frame":"  141 |     const handle: HTMLElement = getByText('item: 0');\n  142 |\n> 143 |     simpleLift(control, handle);\n      |    ^ Lazy Test\n  144 |     expect(isDragging(handle)).toBe(true);\n  145 |\n  146 |     withWarn(() => {","start":{"line":143,"column":4,"index":3661}},{"frame":"  142 |\n  143 |     simpleLift(control, handle);\n> 144 |     expect(isDragging(handle)).toBe(true);\n      |           ^ Lazy Test\n  145 |\n  146 |     withWarn(() => {\n  147 |       thrower.execute();","start":{"line":144,"column":11,"index":3701}}]}],"metrics":{"aggregate":{"cyclomatic":21,"cyclomaticDensity":16.935,"halstead":{"bugs":0.759,"difficulty":28.333,"effort":64556.923,"length":373,"time":3586.496,"vocabulary":69,"volume":2278.48,"operands":{"distinct":54,"total":204,"identifiers":["Props","throw","setForceThrow","fn","Vomit","props","setShouldThrow","useState","0","1","shouldThrowRef","useRef","false","chuck","current","true","null","Thrower","execute","getThrower","withError","act","invariant","\"Expected throw callback to be set\"","forEachSensor","control","it","\"should abort a drag if an invariant error occurs in the application\"","thrower","getByText","render","\"Do not pass go, do not collect $200\"","handle","HTMLElement","\"item: 0\"","simpleLift","expect","isDragging","toBe","newHandle","not","move","getOffset","toEqual","x","y","toThrow","\"should abort a drag if an a non-invariant error occurs in the application\"","queryByText","Error","\"Raw error throw\"","\"should abort a drag if a runtime error occurs\"","causeRuntimeError","withWarn"]},"operators":{"distinct":15,"total":169,"identifiers":["function","const","=","[]","()",".","function=>","+","if","return","let","{}",":","throw","new"]}},"paramCount":4,"sloc":{"logical":124,"physical":153}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/invariant","type":"esm"},{"line":5,"path":"../../util/helpers","type":"esm"},{"line":6,"path":"../../util/app","type":"esm"},{"line":7,"path":"../../../../util/console","type":"esm"},{"line":8,"path":"../../util/controls","type":"esm"},{"line":9,"path":"../../../../util/cause-runtime-error","type":"esm"}],"errors":[],"lineEnd":153,"lineStart":1,"maintainability":113.761,"methods":[{"cyclomatic":2,"cyclomaticDensity":20,"halstead":{"bugs":0.053,"difficulty":5.846,"effort":924.414,"length":36,"time":51.356,"vocabulary":21,"volume":158.123,"operands":{"distinct":13,"total":19,"identifiers":["setShouldThrow","useState","0","1","shouldThrowRef","useRef","false","chuck","props","setForceThrow","current","throw","null"]},"operators":{"distinct":8,"total":17,"identifiers":["const","=","[]","()","function",".","if","return"]}},"paramCount":1,"sloc":{"logical":10,"physical":18},"errors":[],"lineEnd":33,"lineStart":16,"name":"Vomit","paramNames":["props"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":2.5,"effort":67.5,"length":9,"time":3.75,"vocabulary":8,"volume":27,"operands":{"distinct":4,"total":5,"identifiers":["shouldThrowRef","current","true","setShouldThrow"]},"operators":{"distinct":4,"total":4,"identifiers":["=",".","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":23,"lineStart":20,"name":"chuck","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["current","1"]},"operators":{"distinct":1,"total":1,"identifiers":["+"]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":22,"lineStart":22,"name":"<anon method-1>","paramNames":["current"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.018,"difficulty":4.167,"effort":230.629,"length":16,"time":12.813,"vocabulary":11,"volume":55.351,"operands":{"distinct":6,"total":10,"identifiers":["Thrower","current","null","setForceThrow","fn","execute"]},"operators":{"distinct":5,"total":6,"identifiers":["let","=","function","return","{}"]}},"paramCount":0,"sloc":{"logical":6,"physical":17},"errors":[],"lineEnd":56,"lineStart":40,"name":"getThrower","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["current","fn"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":44,"lineStart":42,"name":"setForceThrow","paramNames":["fn"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":1,"effort":4.755,"length":3,"time":0.264,"vocabulary":3,"volume":4.755,"operands":{"distinct":1,"total":1,"identifiers":["withError"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":8},"errors":[],"lineEnd":53,"lineStart":46,"name":"execute","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":1,"effort":4.755,"length":3,"time":0.264,"vocabulary":3,"volume":4.755,"operands":{"distinct":1,"total":1,"identifiers":["act"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":6},"errors":[],"lineEnd":52,"lineStart":47,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":0.667,"effort":8,"length":6,"time":0.444,"vocabulary":4,"volume":12,"operands":{"distinct":3,"total":4,"identifiers":["invariant","current","\"Expected throw callback to be set\""]},"operators":{"distinct":1,"total":2,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":51,"lineStart":48,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should abort a drag if an invariant error occurs in the application\"","\"should abort a drag if an a non-invariant error occurs in the application\"","\"should abort a drag if a runtime error occurs\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":1,"sloc":{"logical":6,"physical":95},"errors":[],"lineEnd":152,"lineStart":58,"name":"<anon method-4>","paramNames":["control"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.116,"difficulty":5.85,"effort":2034.82,"length":74,"time":113.046,"vocabulary":26,"volume":347.833,"operands":{"distinct":20,"total":39,"identifiers":["thrower","Thrower","getThrower","getByText","render","setForceThrow","handle","HTMLElement","\"item: 0\"","simpleLift","control","expect","isDragging","toBe","true","execute","newHandle","not","false","toThrow"]},"operators":{"distinct":6,"total":35,"identifiers":["const","=","()","{}","function=>","."]}},"paramCount":0,"sloc":{"logical":23,"physical":34},"errors":[],"lineEnd":92,"lineStart":59,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":0.5,"effort":4,"length":4,"time":0.222,"vocabulary":4,"volume":8,"operands":{"distinct":3,"total":3,"identifiers":["invariant","false","\"Do not pass go, do not collect $200\""]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":2},"errors":[],"lineEnd":66,"lineStart":65,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.051,"difficulty":4.4,"effort":670.094,"length":40,"time":37.227,"vocabulary":14,"volume":152.294,"operands":{"distinct":10,"total":22,"identifiers":["control","move","handle","newHandle","expect","getOffset","toEqual","x","0","y"]},"operators":{"distinct":4,"total":18,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":12,"physical":6},"errors":[],"lineEnd":91,"lineStart":86,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.096,"difficulty":5.053,"effort":1454.749,"length":62,"time":80.819,"vocabulary":25,"volume":287.919,"operands":{"distinct":19,"total":32,"identifiers":["thrower","Thrower","getThrower","getByText","queryByText","render","setForceThrow","handle","HTMLElement","\"item: 0\"","simpleLift","control","expect","isDragging","toBe","true","toThrow","null","not"]},"operators":{"distinct":6,"total":30,"identifiers":["const","=","()","{}","function=>","."]}},"paramCount":0,"sloc":{"logical":22,"physical":32},"errors":[],"lineEnd":125,"lineStart":94,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["Error","\"Raw error throw\""]},"operators":{"distinct":2,"total":2,"identifiers":["throw","new"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":102,"lineStart":100,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["thrower","execute"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":115,"lineStart":113,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.025,"difficulty":2.444,"effort":180.91,"length":20,"time":10.051,"vocabulary":13,"volume":74.009,"operands":{"distinct":9,"total":11,"identifiers":["control","move","handle","expect","getOffset","toEqual","x","0","y"]},"operators":{"distinct":4,"total":9,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":124,"lineStart":121,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.077,"difficulty":4.765,"effort":1099.226,"length":51,"time":61.068,"vocabulary":23,"volume":230.702,"operands":{"distinct":17,"total":27,"identifiers":["thrower","Thrower","getThrower","getByText","render","setForceThrow","handle","HTMLElement","\"item: 0\"","simpleLift","control","expect","isDragging","toBe","true","withWarn","false"]},"operators":{"distinct":6,"total":24,"identifiers":["const","=","()","{}","function=>","."]}},"paramCount":0,"sloc":{"logical":18,"physical":25},"errors":[],"lineEnd":151,"lineStart":127,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0.5,"effort":1,"length":2,"time":0.056,"vocabulary":2,"volume":2,"operands":{"distinct":1,"total":1,"identifiers":["causeRuntimeError"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":135,"lineStart":133,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["thrower","execute"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":148,"lineStart":146,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.05,"cyclomaticDensity":0.847,"halstead":{"bugs":0.038,"difficulty":1.417,"effort":3227.846,"length":18.65,"time":179.325,"vocabulary":3.45,"volume":113.924,"operands":{"distinct":2.7,"total":10.2},"operators":{"distinct":0.75,"total":8.45}},"paramCount":0.2,"sloc":{"logical":6.2,"physical":7.65}},"methodAverage":{"cyclomatic":1.053,"cyclomaticDensity":48.743,"halstead":{"bugs":0.025,"difficulty":2.326,"effort":355.797,"length":18.737,"time":19.766,"vocabulary":9.526,"volume":75.225,"operands":{"distinct":6.368,"total":10.053},"operators":{"distinct":3.158,"total":8.684}},"paramCount":0.211,"sloc":{"logical":6.316,"physical":14.263}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/sensor-marshal/outdated-locks.spec.js","testCases":3,"smells":19,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  31 |   invariant(preDrag);\n  32 |   // it is currently active\n> 33 |   expect(preDrag.isActive()).toBe(true);\n     |  ^ Duplicate Assert\n  34 |\n  35 |   const drag: SnapDragActions = preDrag.snapLift();\n  36 |","start":{"line":33,"column":2,"index":809}},{"frame":"  36 |\n  37 |   // pre drag now outdated\n> 38 |   expect(preDrag.isActive()).toBe(false);\n     |  ^ Duplicate Assert\n  39 |   preDrag.abort();\n  40 |   expect(warn.mock.calls[0][0]).toEqual(\n  41 |     expect.stringContaining('Cannot perform action'),","start":{"line":38,"column":2,"index":931}},{"frame":"  38 |   expect(preDrag.isActive()).toBe(false);\n  39 |   preDrag.abort();\n> 40 |   expect(warn.mock.calls[0][0]).toEqual(\n     |  ^ Duplicate Assert\n  41 |     expect.stringContaining('Cannot perform action'),\n  42 |   );\n  43 |","start":{"line":40,"column":2,"index":992}},{"frame":"  38 |   expect(preDrag.isActive()).toBe(false);\n  39 |   preDrag.abort();\n> 40 |   expect(warn.mock.calls[0][0]).toEqual(\n     |  ^ Duplicate Assert\n  41 |     expect.stringContaining('Cannot perform action'),\n  42 |   );\n  43 |","start":{"line":40,"column":2,"index":992}},{"frame":"  52 |   // preDrag is still out of date\n  53 |   preDrag.abort();\n> 54 |   expect(warn.mock.calls[0][0]).toEqual(\n     |  ^ Duplicate Assert\n  55 |     expect.stringContaining('Cannot perform action'),\n  56 |   );\n  57 | });","start":{"line":54,"column":2,"index":1333}},{"frame":"  52 |   // preDrag is still out of date\n  53 |   preDrag.abort();\n> 54 |   expect(warn.mock.calls[0][0]).toEqual(\n     |  ^ Duplicate Assert\n  55 |     expect.stringContaining('Cannot perform action'),\n  56 |   );\n  57 | });","start":{"line":54,"column":2,"index":1333}},{"frame":"  70 |\n  71 |   const drag: SnapDragActions = preDrag.snapLift();\n> 72 |   expect(drag.isActive()).toBe(true);\n     |  ^ Duplicate Assert\n  73 |\n  74 |   act(() => drag.cancel());\n  75 |","start":{"line":72,"column":2,"index":1843}},{"frame":"  75 |\n  76 |   // no longer active\n> 77 |   expect(drag.isActive()).toBe(false);\n     |  ^ Duplicate Assert\n  78 |   expect(warn).not.toHaveBeenCalled();\n  79 |\n  80 |   drag.moveUp();","start":{"line":77,"column":2,"index":1933}},{"frame":"  94 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n  95 |   invariant(preDrag);\n> 96 |   expect(preDrag.isActive()).toBe(true);\n     |  ^ Duplicate Assert\n  97 |\n  98 |   // will cause all lock to be lost\n  99 |   unmount();","start":{"line":96,"column":2,"index":2470}},{"frame":"   99 |   unmount();\n  100 |\n> 101 |   expect(preDrag.isActive()).toBe(false);\n      |  ^ Duplicate Assert\n  102 | });\n  103 |","start":{"line":101,"column":2,"index":2562}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  26 |   };\n  27 |   render(<App sensors={[a]} />);\n> 28 |   invariant(api, 'expected api to be set');\n     |  ^ Eager Test\n  29 |\n  30 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n  31 |   invariant(preDrag);","start":{"line":28,"column":2,"index":658}},{"frame":"  29 |\n  30 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n> 31 |   invariant(preDrag);\n     |  ^ Eager Test\n  32 |   // it is currently active\n  33 |   expect(preDrag.isActive()).toBe(true);\n  34 |","start":{"line":31,"column":2,"index":759}},{"frame":"  63 |   };\n  64 |   render(<App sensors={[sensor]} />);\n> 65 |   invariant(api, 'expected api to be set');\n     |  ^ Eager Test\n  66 |\n  67 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n  68 |   invariant(preDrag);","start":{"line":65,"column":2,"index":1626}},{"frame":"  66 |\n  67 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n> 68 |   invariant(preDrag);\n     |  ^ Eager Test\n  69 |   expect(preDrag.isActive()).toBe(true);\n  70 |\n  71 |   const drag: SnapDragActions = preDrag.snapLift();","start":{"line":68,"column":2,"index":1727}},{"frame":"  90 |   };\n  91 |   const { unmount } = render(<App sensors={[sensor]} />);\n> 92 |   invariant(api, 'expected first to be set');\n     |  ^ Eager Test\n  93 |\n  94 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n  95 |   invariant(preDrag);","start":{"line":92,"column":2,"index":2345}},{"frame":"  93 |\n  94 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n> 95 |   invariant(preDrag);\n     |  ^ Eager Test\n  96 |   expect(preDrag.isActive()).toBe(true);\n  97 |\n  98 |   // will cause all lock to be lost","start":{"line":95,"column":2,"index":2448}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  26 |   };\n  27 |   render(<App sensors={[a]} />);\n> 28 |   invariant(api, 'expected api to be set');\n     |  ^ Lazy Test\n  29 |\n  30 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n  31 |   invariant(preDrag);","start":{"line":28,"column":2,"index":658}},{"frame":"  63 |   };\n  64 |   render(<App sensors={[sensor]} />);\n> 65 |   invariant(api, 'expected api to be set');\n     |  ^ Lazy Test\n  66 |\n  67 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n  68 |   invariant(preDrag);","start":{"line":65,"column":2,"index":1626}},{"frame":"  90 |   };\n  91 |   const { unmount } = render(<App sensors={[sensor]} />);\n> 92 |   invariant(api, 'expected first to be set');\n     |  ^ Lazy Test\n  93 |\n  94 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n  95 |   invariant(preDrag);","start":{"line":92,"column":2,"index":2345}}]}],"metrics":{"aggregate":{"cyclomatic":11,"cyclomaticDensity":11.458,"halstead":{"bugs":0.656,"difficulty":16.255,"effort":31994.618,"length":336,"time":1777.479,"vocabulary":58,"volume":1968.282,"operands":{"distinct":49,"total":177,"identifiers":["noop","warn","jest","spyOn","console","\"warn\"","mockImplementation","afterEach","mockClear","it","\"should not allow pre drag actions when in a dragging phase\"","api","SensorAPI","a","Sensor","value","render","invariant","\"expected api to be set\"","preDrag","PreDragActions","tryGetLock","\"0\"","expect","isActive","toBe","true","drag","SnapDragActions","snapLift","false","abort","mock","calls","0","toEqual","stringContaining","\"Cannot perform action\"","act","drop","not","toHaveBeenCalled","\"should not allow drag actions after a drop\"","sensor","cancel","moveUp","\"should not allow drag actions after lock lost\"","unmount","\"expected first to be set\""]},"operators":{"distinct":9,"total":159,"identifiers":["function","const","=","()",".","function=>","let","[]","{}"]}},"paramCount":3,"sloc":{"logical":96,"physical":103}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"react-dom/test-utils","type":"esm"},{"line":5,"path":"../../../../../src/invariant","type":"esm"},{"line":11,"path":"../../../../../src/types","type":"esm"},{"line":12,"path":"../../util/app","type":"esm"}],"errors":[],"lineEnd":103,"lineStart":1,"maintainability":108.627,"methods":[{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":14,"lineStart":14,"name":"noop","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["warn","mockClear"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":20,"lineStart":18,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.226,"difficulty":7.328,"effort":4957.707,"length":128,"time":275.428,"vocabulary":39,"volume":676.531,"operands":{"distinct":32,"total":67,"identifiers":["api","SensorAPI","a","Sensor","value","render","invariant","\"expected api to be set\"","preDrag","PreDragActions","tryGetLock","\"0\"","expect","isActive","toBe","true","drag","SnapDragActions","snapLift","false","abort","warn","mock","calls","0","toEqual","stringContaining","\"Cannot perform action\"","mockClear","act","not","toHaveBeenCalled"]},"operators":{"distinct":7,"total":61,"identifiers":["let","const","=","function=>","()","[]","."]}},"paramCount":0,"sloc":{"logical":32,"physical":36},"errors":[],"lineEnd":57,"lineStart":22,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":26,"lineStart":24,"name":"<anon method-3>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["drag","drop"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":49,"lineStart":49,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.177,"difficulty":5.984,"effort":3171.695,"length":101,"time":176.205,"vocabulary":38,"volume":530.041,"operands":{"distinct":31,"total":53,"identifiers":["api","SensorAPI","sensor","Sensor","value","render","invariant","\"expected api to be set\"","preDrag","PreDragActions","tryGetLock","\"0\"","expect","isActive","toBe","true","drag","SnapDragActions","snapLift","act","false","warn","not","toHaveBeenCalled","moveUp","mock","calls","0","toEqual","stringContaining","\"Cannot perform action\""]},"operators":{"distinct":7,"total":48,"identifiers":["let","const","=","function=>","()","[]","."]}},"paramCount":0,"sloc":{"logical":27,"physical":26},"errors":[],"lineEnd":84,"lineStart":59,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":63,"lineStart":61,"name":"<anon method-6>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["drag","cancel"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":74,"lineStart":74,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.088,"difficulty":6.667,"effort":1754.831,"length":56,"time":97.491,"vocabulary":26,"volume":263.225,"operands":{"distinct":18,"total":30,"identifiers":["api","SensorAPI","sensor","Sensor","value","unmount","render","invariant","\"expected first to be set\"","preDrag","PreDragActions","tryGetLock","\"0\"","expect","isActive","toBe","true","false"]},"operators":{"distinct":8,"total":26,"identifiers":["let","const","=","function=>","{}","()","[]","."]}},"paramCount":0,"sloc":{"logical":17,"physical":17},"errors":[],"lineEnd":102,"lineStart":86,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":90,"lineStart":88,"name":"<anon method-9>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.042,"halstead":{"bugs":0.06,"difficulty":1.478,"effort":2908.602,"length":30.545,"time":161.589,"vocabulary":5.273,"volume":178.935,"operands":{"distinct":4.455,"total":16.091},"operators":{"distinct":0.818,"total":14.455}},"paramCount":0.273,"sloc":{"logical":8.727,"physical":9.364}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":51.271,"halstead":{"bugs":0.05,"difficulty":2.448,"effort":991.537,"length":30.6,"time":55.085,"vocabulary":12.4,"volume":150.806,"operands":{"distinct":9.3,"total":16.2},"operators":{"distinct":3.1,"total":14.4}},"paramCount":0.3,"sloc":{"logical":8.4,"physical":9.4}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/sensor-marshal/obtaining-lock.spec.js","testCases":5,"smells":27,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  135 |   invariant(api, 'expected getter to be set');\n  136 |\n> 137 |   ['cancel', 'drop'].forEach((property: string) => {\n      |                     ^ Conditional Test Logic\n  138 |     const preDrag: ?PreDragActions = api.tryGetLock('0', noop);\n  139 |     invariant(preDrag, 'Expected to get lock');\n  140 |     expect(preDrag.isActive()).toBe(true);","start":{"line":137,"column":21,"index":3923}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  31 |\n  32 |   // first can get a lock\n> 33 |   expect(first.tryGetLock('0')).toBeTruthy();\n     |  ^ Duplicate Assert\n  34 |\n  35 |   // second cannot get a lock\n  36 |   expect(second.tryGetLock('0')).toBe(null);","start":{"line":33,"column":2,"index":811}},{"frame":"  37 |\n  38 |   // first cannot get another lock on the same element\n> 39 |   expect(first.tryGetLock('0')).toBe(null);\n     |  ^ Duplicate Assert\n  40 |\n  41 |   // nothing cannot get lock on a different element\n  42 |   expect(first.tryGetLock('1')).toBe(null);","start":{"line":39,"column":2,"index":989}},{"frame":"  80 |\n  81 |   // drag not started yet\n> 82 |   expect(isDragging(handle)).toBe(false);\n     |  ^ Duplicate Assert\n  83 |   // start a drag\n  84 |   const actions: FluidDragActions = preDrag.fluidLift({ x: 0, y: 0 });\n  85 |   expect(isDragging(handle)).toBe(true);","start":{"line":82,"column":2,"index":2254}},{"frame":"  83 |   // start a drag\n  84 |   const actions: FluidDragActions = preDrag.fluidLift({ x: 0, y: 0 });\n> 85 |   expect(isDragging(handle)).toBe(true);\n     |  ^ Duplicate Assert\n  86 |\n  87 |   // release the movement\n  88 |   actions.move({ x: 100, y: 100 });","start":{"line":85,"column":2,"index":2385}},{"frame":"  113 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);\n  114 |   invariant(preDrag, 'Expected to get lock');\n> 115 |   expect(preDrag.isActive()).toBe(true);\n      |  ^ Duplicate Assert\n  116 |   // should release the lock\n  117 |   preDrag.abort();\n  118 |   expect(preDrag.isActive()).toBe(false);","start":{"line":115,"column":2,"index":3286}},{"frame":"  116 |   // should release the lock\n  117 |   preDrag.abort();\n> 118 |   expect(preDrag.isActive()).toBe(false);\n      |  ^ Duplicate Assert\n  119 |\n  120 |   // can get another lock\n  121 |   const second: ?PreDragActions = api.tryGetLock('1', noop);","start":{"line":118,"column":2,"index":3375}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  27 |\n  28 |   render(<App sensors={[a, b]} />);\n> 29 |   invariant(first, 'expected first to be set');\n     |  ^ Eager Test\n  30 |   invariant(second, 'expected second to be set');\n  31 |\n  32 |   // first can get a lock","start":{"line":29,"column":2,"index":686}},{"frame":"  28 |   render(<App sensors={[a, b]} />);\n  29 |   invariant(first, 'expected first to be set');\n> 30 |   invariant(second, 'expected second to be set');\n     |  ^ Eager Test\n  31 |\n  32 |   // first can get a lock\n  33 |   expect(first.tryGetLock('0')).toBeTruthy();","start":{"line":30,"column":2,"index":734}},{"frame":"  51 |\n  52 |   render(<App sensors={[sensor]} />);\n> 53 |   invariant(api, 'expected getter to be set');\n     |  ^ Eager Test\n  54 |\n  55 |   Array.from({ length: 4 }).forEach(() => {\n  56 |     // get the lock","start":{"line":53,"column":2,"index":1361}},{"frame":"  57 |     const lock: ?PreDragActions = api.tryGetLock('0', noop);\n  58 |     expect(lock).toBeTruthy();\n> 59 |     invariant(lock, 'Expected lock to be set');\n     |    ^ Eager Test\n  60 |\n  61 |     // cannot get another lock\n  62 |     expect(api.tryGetLock('0')).toBe(null);","start":{"line":59,"column":4,"index":1567}},{"frame":"  73 |   };\n  74 |   const { getByText } = render(<App sensors={[sensor]} />);\n> 75 |   invariant(api, 'expected getter to be set');\n     |  ^ Eager Test\n  76 |   const handle: HTMLElement = getByText('item: 0');\n  77 |\n  78 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);","start":{"line":75,"column":2,"index":2019}},{"frame":"  77 |\n  78 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);\n> 79 |   invariant(preDrag, 'Expected to get lock');\n     |  ^ Eager Test\n  80 |\n  81 |   // drag not started yet\n  82 |   expect(isDragging(handle)).toBe(false);","start":{"line":79,"column":2,"index":2181}},{"frame":"  80 |\n  81 |   // drag not started yet\n> 82 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Eager Test\n  83 |   // start a drag\n  84 |   const actions: FluidDragActions = preDrag.fluidLift({ x: 0, y: 0 });\n  85 |   expect(isDragging(handle)).toBe(true);","start":{"line":82,"column":9,"index":2261}},{"frame":"  83 |   // start a drag\n  84 |   const actions: FluidDragActions = preDrag.fluidLift({ x: 0, y: 0 });\n> 85 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  86 |\n  87 |   // release the movement\n  88 |   actions.move({ x: 100, y: 100 });","start":{"line":85,"column":9,"index":2392}},{"frame":"  90 |\n  91 |   actions.drop();\n> 92 |   expect(isDropAnimating(handle)).toBe(true);\n     |         ^ Eager Test\n  93 |\n  94 |   // lock is no longer active\n  95 |   expect(actions.isActive()).toBe(false);","start":{"line":92,"column":9,"index":2548}},{"frame":"  109 |   };\n  110 |   render(<App sensors={[sensor]} />);\n> 111 |   invariant(api, 'expected getter to be set');\n      |  ^ Eager Test\n  112 |\n  113 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);\n  114 |   invariant(preDrag, 'Expected to get lock');","start":{"line":111,"column":2,"index":3130}},{"frame":"  112 |\n  113 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);\n> 114 |   invariant(preDrag, 'Expected to get lock');\n      |  ^ Eager Test\n  115 |   expect(preDrag.isActive()).toBe(true);\n  116 |   // should release the lock\n  117 |   preDrag.abort();","start":{"line":114,"column":2,"index":3240}},{"frame":"  121 |   const second: ?PreDragActions = api.tryGetLock('1', noop);\n  122 |   expect(second).toBeTruthy();\n> 123 |   invariant(second);\n      |  ^ Eager Test\n  124 |   // need to release this one :)\n  125 |   second.abort();\n  126 |   expect(second.isActive()).toBe(false);","start":{"line":123,"column":2,"index":3536}},{"frame":"  133 |   };\n  134 |   render(<App sensors={[sensor]} />);\n> 135 |   invariant(api, 'expected getter to be set');\n      |  ^ Eager Test\n  136 |\n  137 |   ['cancel', 'drop'].forEach((property: string) => {\n  138 |     const preDrag: ?PreDragActions = api.tryGetLock('0', noop);","start":{"line":135,"column":2,"index":3856}},{"frame":"  137 |   ['cancel', 'drop'].forEach((property: string) => {\n  138 |     const preDrag: ?PreDragActions = api.tryGetLock('0', noop);\n> 139 |     invariant(preDrag, 'Expected to get lock');\n      |    ^ Eager Test\n  140 |     expect(preDrag.isActive()).toBe(true);\n  141 |\n  142 |     const drag: SnapDragActions = preDrag.snapLift();","start":{"line":139,"column":4,"index":4023}},{"frame":"  156 |     expect(third).toBeTruthy();\n  157 |     // need to try to release it\n> 158 |     invariant(third);\n      |    ^ Eager Test\n  159 |     third.abort();\n  160 |   });\n  161 | });","start":{"line":158,"column":4,"index":4574}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  27 |\n  28 |   render(<App sensors={[a, b]} />);\n> 29 |   invariant(first, 'expected first to be set');\n     |  ^ Lazy Test\n  30 |   invariant(second, 'expected second to be set');\n  31 |\n  32 |   // first can get a lock","start":{"line":29,"column":2,"index":686}},{"frame":"  51 |\n  52 |   render(<App sensors={[sensor]} />);\n> 53 |   invariant(api, 'expected getter to be set');\n     |  ^ Lazy Test\n  54 |\n  55 |   Array.from({ length: 4 }).forEach(() => {\n  56 |     // get the lock","start":{"line":53,"column":2,"index":1361}},{"frame":"  73 |   };\n  74 |   const { getByText } = render(<App sensors={[sensor]} />);\n> 75 |   invariant(api, 'expected getter to be set');\n     |  ^ Lazy Test\n  76 |   const handle: HTMLElement = getByText('item: 0');\n  77 |\n  78 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);","start":{"line":75,"column":2,"index":2019}},{"frame":"  109 |   };\n  110 |   render(<App sensors={[sensor]} />);\n> 111 |   invariant(api, 'expected getter to be set');\n      |  ^ Lazy Test\n  112 |\n  113 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);\n  114 |   invariant(preDrag, 'Expected to get lock');","start":{"line":111,"column":2,"index":3130}},{"frame":"  133 |   };\n  134 |   render(<App sensors={[sensor]} />);\n> 135 |   invariant(api, 'expected getter to be set');\n      |  ^ Lazy Test\n  136 |\n  137 |   ['cancel', 'drop'].forEach((property: string) => {\n  138 |     const preDrag: ?PreDragActions = api.tryGetLock('0', noop);","start":{"line":135,"column":2,"index":3856}}]}],"metrics":{"aggregate":{"cyclomatic":16,"cyclomaticDensity":10.256,"halstead":{"bugs":1.131,"difficulty":24.545,"effort":83307.847,"length":540,"time":4628.214,"vocabulary":78,"volume":3394.117,"operands":{"distinct":67,"total":299,"identifiers":["noop","it","\"should allow an exclusive lock for drag actions\"","first","SensorAPI","second","a","Sensor","value","b","render","invariant","\"expected first to be set\"","\"expected second to be set\"","expect","tryGetLock","\"0\"","toBeTruthy","toBe","null","\"1\"","\"should allow a lock to be released\"","api","sensor","\"expected getter to be set\"","Array","from","length","4","forEach","lock","PreDragActions","\"Expected lock to be set\"","abort","\"should not allow a sensor to obtain a on a dropping item, but can claim one on something else while dragging\"","getByText","handle","HTMLElement","\"item: 0\"","preDrag","\"Expected to get lock\"","isDragging","false","actions","FluidDragActions","fluidLift","x","0","y","true","move","100","requestAnimationFrame","flush","drop","isDropAnimating","isActive","\"should release a lock when aborting a pre drag\"","\"should release a lock when cancelling or dropping a drag\"","\"cancel\"","\"drop\"","property","drag","SnapDragActions","snapLift","act","third"]},"operators":{"distinct":11,"total":241,"identifiers":["function","()","function=>","let","const","=","[]",",",".","{}",":"]}},"paramCount":7,"sloc":{"logical":156,"physical":162}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/invariant","type":"esm"},{"line":11,"path":"../../../../../src/types","type":"esm"},{"line":12,"path":"../../util/app","type":"esm"},{"line":13,"path":"../../util/helpers","type":"esm"}],"errors":[],"lineEnd":162,"lineStart":1,"maintainability":104.841,"methods":[{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":15,"lineStart":15,"name":"noop","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.135,"difficulty":10.667,"effort":4311.87,"length":86,"time":239.548,"vocabulary":26,"volume":404.238,"operands":{"distinct":18,"total":48,"identifiers":["first","SensorAPI","second","a","Sensor","value","b","render","invariant","\"expected first to be set\"","\"expected second to be set\"","expect","tryGetLock","\"0\"","toBeTruthy","toBe","null","\"1\""]},"operators":{"distinct":8,"total":38,"identifiers":["let","const","=","function=>","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":24,"physical":28},"errors":[],"lineEnd":44,"lineStart":17,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["first","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":23,"lineStart":21,"name":"<anon method-2>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["second","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":26,"lineStart":24,"name":"<anon method-3>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.043,"difficulty":5.192,"effort":671.487,"length":29,"time":37.305,"vocabulary":22,"volume":129.324,"operands":{"distinct":13,"total":15,"identifiers":["api","SensorAPI","sensor","Sensor","value","render","invariant","\"expected getter to be set\"","Array","from","length","4","forEach"]},"operators":{"distinct":9,"total":14,"identifiers":["let","const","=","function=>","()","[]",".","{}",":"]}},"paramCount":0,"sloc":{"logical":9,"physical":22},"errors":[],"lineEnd":67,"lineStart":46,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":50,"lineStart":48,"name":"<anon method-5>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.048,"difficulty":3.077,"effort":440.188,"length":35,"time":24.455,"vocabulary":17,"volume":143.061,"operands":{"distinct":13,"total":20,"identifiers":["lock","PreDragActions","api","tryGetLock","\"0\"","noop","expect","toBeTruthy","invariant","\"Expected lock to be set\"","toBe","null","abort"]},"operators":{"distinct":4,"total":15,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":12},"errors":[],"lineEnd":66,"lineStart":55,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.381,"halstead":{"bugs":0.274,"difficulty":9.346,"effort":7673.094,"length":147,"time":426.283,"vocabulary":48,"volume":820.989,"operands":{"distinct":39,"total":81,"identifiers":["api","SensorAPI","sensor","Sensor","value","getByText","render","invariant","\"expected getter to be set\"","handle","HTMLElement","\"item: 0\"","preDrag","PreDragActions","tryGetLock","\"0\"","noop","\"Expected to get lock\"","expect","isDragging","toBe","false","actions","FluidDragActions","fluidLift","x","0","y","true","move","100","requestAnimationFrame","flush","drop","isDropAnimating","isActive","null","\"1\"","toBeTruthy"]},"operators":{"distinct":9,"total":66,"identifiers":["let","const","=","function=>","{}","()","[]",".",":"]}},"paramCount":0,"sloc":{"logical":42,"physical":35},"errors":[],"lineEnd":103,"lineStart":69,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":73,"lineStart":71,"name":"<anon method-8>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.144,"difficulty":7.457,"effort":3219.774,"length":88,"time":178.876,"vocabulary":30,"volume":431.806,"operands":{"distinct":23,"total":49,"identifiers":["api","SensorAPI","sensor","Sensor","value","render","invariant","\"expected getter to be set\"","preDrag","PreDragActions","tryGetLock","\"0\"","noop","\"Expected to get lock\"","expect","isActive","toBe","true","abort","false","second","\"1\"","toBeTruthy"]},"operators":{"distinct":7,"total":39,"identifiers":["let","const","=","function=>","()","[]","."]}},"paramCount":0,"sloc":{"logical":24,"physical":23},"errors":[],"lineEnd":127,"lineStart":105,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":109,"lineStart":107,"name":"<anon method-10>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.037,"difficulty":4.667,"effort":524.394,"length":26,"time":29.133,"vocabulary":20,"volume":112.37,"operands":{"distinct":12,"total":14,"identifiers":["api","SensorAPI","sensor","Sensor","value","render","invariant","\"expected getter to be set\"","\"cancel\"","\"drop\"","forEach","property"]},"operators":{"distinct":8,"total":12,"identifiers":["let","const","=","function=>","()","[]",".",","]}},"paramCount":0,"sloc":{"logical":7,"physical":33},"errors":[],"lineEnd":161,"lineStart":129,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":133,"lineStart":131,"name":"<anon method-12>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.135,"difficulty":5.341,"effort":2158.611,"length":85,"time":119.923,"vocabulary":27,"volume":404.165,"operands":{"distinct":22,"total":47,"identifiers":["preDrag","PreDragActions","api","tryGetLock","\"0\"","noop","invariant","\"Expected to get lock\"","expect","isActive","toBe","true","drag","SnapDragActions","snapLift","second","\"1\"","null","act","third","toBeTruthy","abort"]},"operators":{"distinct":5,"total":38,"identifiers":["const","=","()",".","function=>"]}},"paramCount":1,"sloc":{"logical":23,"physical":24},"errors":[],"lineEnd":160,"lineStart":137,"name":"<anon method-13>","paramNames":["property"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["drag","property"]},"operators":{"distinct":2,"total":2,"identifiers":["()","[]"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":152,"lineStart":150,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.641,"halstead":{"bugs":0.071,"difficulty":1.534,"effort":5206.74,"length":33.75,"time":289.263,"vocabulary":4.875,"volume":212.132,"operands":{"distinct":4.188,"total":18.688},"operators":{"distinct":0.688,"total":15.063}},"paramCount":0.438,"sloc":{"logical":9.75,"physical":10.125}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":50.105,"halstead":{"bugs":0.055,"difficulty":3.316,"effort":1268.112,"length":34.533,"time":70.451,"vocabulary":14.133,"volume":165.499,"operands":{"distinct":10.267,"total":19.2},"operators":{"distinct":3.867,"total":15.333}},"paramCount":0.467,"sloc":{"logical":9.667,"physical":13.267}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/sensor-marshal/no-double-lift.spec.js","testCases":1,"smells":2,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  17 |   };\n  18 |   render(<App sensors={[a]} />);\n> 19 |   invariant(api, 'expected first to be set');\n     |  ^ Eager Test\n  20 |\n  21 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n  22 |   invariant(preDrag);","start":{"line":19,"column":2,"index":456}},{"frame":"  20 |\n  21 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n> 22 |   invariant(preDrag);\n     |  ^ Eager Test\n  23 |   // it is currently active\n  24 |   expect(preDrag.isActive()).toBe(true);\n  25 |","start":{"line":22,"column":2,"index":559}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":16.129,"halstead":{"bugs":0.157,"difficulty":7.833,"effort":3685.295,"length":91,"time":204.739,"vocabulary":36,"volume":470.463,"operands":{"distinct":27,"total":47,"identifiers":["it","\"should not allow double lifting\"","api","SensorAPI","a","Sensor","value","render","invariant","\"expected first to be set\"","preDrag","PreDragActions","tryGetLock","\"0\"","expect","isActive","toBe","true","drag","SnapDragActions","snapLift","fluidLift","x","0","y","toThrow","false"]},"operators":{"distinct":9,"total":44,"identifiers":["()","function=>","let","const","=","[]",".","{}",":"]}},"paramCount":1,"sloc":{"logical":31,"physical":35}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/invariant","type":"esm"},{"line":10,"path":"../../../../../src/types","type":"esm"},{"line":11,"path":"../../util/app","type":"esm"}],"errors":[],"lineEnd":35,"lineStart":1,"maintainability":118.861,"methods":[{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.111,"difficulty":5.833,"effort":1934.96,"length":69,"time":107.498,"vocabulary":28,"volume":331.707,"operands":{"distinct":21,"total":35,"identifiers":["api","SensorAPI","a","Sensor","value","render","invariant","\"expected first to be set\"","preDrag","PreDragActions","tryGetLock","\"0\"","expect","isActive","toBe","true","drag","SnapDragActions","snapLift","toThrow","false"]},"operators":{"distinct":7,"total":34,"identifiers":["let","const","=","function=>","()","[]","."]}},"paramCount":0,"sloc":{"logical":22,"physical":22},"errors":[],"lineEnd":34,"lineStart":13,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":17,"lineStart":15,"name":"<anon method-2>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.012,"difficulty":2.4,"effort":83.686,"length":11,"time":4.649,"vocabulary":9,"volume":34.869,"operands":{"distinct":5,"total":6,"identifiers":["preDrag","fluidLift","x","0","y"]},"operators":{"distinct":4,"total":5,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":4,"physical":1},"errors":[],"lineEnd":28,"lineStart":28,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["preDrag","snapLift"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":33,"lineStart":33,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.031,"difficulty":1.567,"effort":737.059,"length":18.2,"time":40.948,"vocabulary":7.2,"volume":94.093,"operands":{"distinct":5.4,"total":9.4},"operators":{"distinct":1.8,"total":8.8}},"paramCount":0.2,"sloc":{"logical":6.2,"physical":7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":44.886,"halstead":{"bugs":0.032,"difficulty":2.433,"effort":507.256,"length":21.75,"time":28.181,"vocabulary":11,"volume":94.833,"operands":{"distinct":7.5,"total":11.25},"operators":{"distinct":3.5,"total":10.5}},"paramCount":0.25,"sloc":{"logical":7.25,"physical":6.75}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/sensor-marshal/move-throttling.spec.js","testCases":2,"smells":25,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  31 |   const actions: FluidDragActions = preDrag.fluidLift(initial);\n  32 |   // has not moved yet\n> 33 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |  ^ Duplicate Assert\n  34 |\n  35 |   const offset: Position = { x: 1, y: 5 };\n  36 |   actions.move(add(initial, offset));","start":{"line":33,"column":2,"index":1000}},{"frame":"  31 |   const actions: FluidDragActions = preDrag.fluidLift(initial);\n  32 |   // has not moved yet\n> 33 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |  ^ Duplicate Assert\n  34 |\n  35 |   const offset: Position = { x: 1, y: 5 };\n  36 |   actions.move(add(initial, offset));","start":{"line":33,"column":2,"index":1000}},{"frame":"  39 |\n  40 |   // still not moved\n> 41 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |  ^ Duplicate Assert\n  42 |\n  43 |   // moved after frame\n  44 |   requestAnimationFrame.step();","start":{"line":41,"column":2,"index":1233}},{"frame":"  39 |\n  40 |   // still not moved\n> 41 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |  ^ Duplicate Assert\n  42 |\n  43 |   // moved after frame\n  44 |   requestAnimationFrame.step();","start":{"line":41,"column":2,"index":1233}},{"frame":"  43 |   // moved after frame\n  44 |   requestAnimationFrame.step();\n> 45 |   expect(getOffset(handle)).toEqual(offset);\n     |  ^ Duplicate Assert\n  46 | });\n  47 |\n  48 | it('should cancel any pending moves after a lock is released', () => {","start":{"line":45,"column":2,"index":1342}},{"frame":"  61 |   const actions: FluidDragActions = preDrag.fluidLift(initial);\n  62 |   // has not moved yet\n> 63 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |  ^ Duplicate Assert\n  64 |\n  65 |   const offset: Position = { x: 1, y: 5 };\n  66 |   actions.move(add(initial, offset));","start":{"line":63,"column":2,"index":1919}},{"frame":"  61 |   const actions: FluidDragActions = preDrag.fluidLift(initial);\n  62 |   // has not moved yet\n> 63 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |  ^ Duplicate Assert\n  64 |\n  65 |   const offset: Position = { x: 1, y: 5 };\n  66 |   actions.move(add(initial, offset));","start":{"line":63,"column":2,"index":1919}},{"frame":"  66 |   actions.move(add(initial, offset));\n  67 |   // not moved yet\n> 68 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |  ^ Duplicate Assert\n  69 |\n  70 |   actions.cancel();\n  71 |","start":{"line":68,"column":2,"index":2073}},{"frame":"  66 |   actions.move(add(initial, offset));\n  67 |   // not moved yet\n> 68 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |  ^ Duplicate Assert\n  69 |\n  70 |   actions.cancel();\n  71 |","start":{"line":68,"column":2,"index":2073}},{"frame":"  72 |   // will not do anything\n  73 |   requestAnimationFrame.step();\n> 74 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |  ^ Duplicate Assert\n  75 | });\n  76 |","start":{"line":74,"column":2,"index":2206}},{"frame":"  72 |   // will not do anything\n  73 |   requestAnimationFrame.step();\n> 74 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |  ^ Duplicate Assert\n  75 | });\n  76 |","start":{"line":74,"column":2,"index":2206}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  22 |   };\n  23 |   const { getByText } = render(<App sensors={[sensor]} />);\n> 24 |   invariant(api, 'expected getter to be set');\n     |  ^ Eager Test\n  25 |   const handle: HTMLElement = getByText('item: 0');\n  26 |\n  27 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);","start":{"line":24,"column":2,"index":684}},{"frame":"  26 |\n  27 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);\n> 28 |   invariant(preDrag);\n     |  ^ Eager Test\n  29 |\n  30 |   const initial: Position = { x: 2, y: 3 };\n  31 |   const actions: FluidDragActions = preDrag.fluidLift(initial);","start":{"line":28,"column":2,"index":846}},{"frame":"  31 |   const actions: FluidDragActions = preDrag.fluidLift(initial);\n  32 |   // has not moved yet\n> 33 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |         ^ Eager Test\n  34 |\n  35 |   const offset: Position = { x: 1, y: 5 };\n  36 |   actions.move(add(initial, offset));","start":{"line":33,"column":9,"index":1007}},{"frame":"  39 |\n  40 |   // still not moved\n> 41 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |         ^ Eager Test\n  42 |\n  43 |   // moved after frame\n  44 |   requestAnimationFrame.step();","start":{"line":41,"column":9,"index":1240}},{"frame":"  43 |   // moved after frame\n  44 |   requestAnimationFrame.step();\n> 45 |   expect(getOffset(handle)).toEqual(offset);\n     |         ^ Eager Test\n  46 | });\n  47 |\n  48 | it('should cancel any pending moves after a lock is released', () => {","start":{"line":45,"column":9,"index":1349}},{"frame":"  52 |   };\n  53 |   const { getByText } = render(<App sensors={[a]} />);\n> 54 |   invariant(api, 'expected api to be set');\n     |  ^ Eager Test\n  55 |   const handle: HTMLElement = getByText('item: 0');\n  56 |\n  57 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);","start":{"line":54,"column":2,"index":1606}},{"frame":"  56 |\n  57 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);\n> 58 |   invariant(preDrag);\n     |  ^ Eager Test\n  59 |\n  60 |   const initial: Position = { x: 2, y: 3 };\n  61 |   const actions: FluidDragActions = preDrag.fluidLift(initial);","start":{"line":58,"column":2,"index":1765}},{"frame":"  61 |   const actions: FluidDragActions = preDrag.fluidLift(initial);\n  62 |   // has not moved yet\n> 63 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |         ^ Eager Test\n  64 |\n  65 |   const offset: Position = { x: 1, y: 5 };\n  66 |   actions.move(add(initial, offset));","start":{"line":63,"column":9,"index":1926}},{"frame":"  66 |   actions.move(add(initial, offset));\n  67 |   // not moved yet\n> 68 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |         ^ Eager Test\n  69 |\n  70 |   actions.cancel();\n  71 |","start":{"line":68,"column":9,"index":2080}},{"frame":"  72 |   // will not do anything\n  73 |   requestAnimationFrame.step();\n> 74 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |         ^ Eager Test\n  75 | });\n  76 |","start":{"line":74,"column":9,"index":2213}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  22 |   };\n  23 |   const { getByText } = render(<App sensors={[sensor]} />);\n> 24 |   invariant(api, 'expected getter to be set');\n     |  ^ Lazy Test\n  25 |   const handle: HTMLElement = getByText('item: 0');\n  26 |\n  27 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);","start":{"line":24,"column":2,"index":684}},{"frame":"  31 |   const actions: FluidDragActions = preDrag.fluidLift(initial);\n  32 |   // has not moved yet\n> 33 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |         ^ Lazy Test\n  34 |\n  35 |   const offset: Position = { x: 1, y: 5 };\n  36 |   actions.move(add(initial, offset));","start":{"line":33,"column":9,"index":1007}},{"frame":"  52 |   };\n  53 |   const { getByText } = render(<App sensors={[a]} />);\n> 54 |   invariant(api, 'expected api to be set');\n     |  ^ Lazy Test\n  55 |   const handle: HTMLElement = getByText('item: 0');\n  56 |\n  57 |   const preDrag: ?PreDragActions = api.tryGetLock('0', noop);","start":{"line":54,"column":2,"index":1606}},{"frame":"  61 |   const actions: FluidDragActions = preDrag.fluidLift(initial);\n  62 |   // has not moved yet\n> 63 |   expect(getOffset(handle)).toEqual({ x: 0, y: 0 });\n     |         ^ Lazy Test\n  64 |\n  65 |   const offset: Position = { x: 1, y: 5 };\n  66 |   actions.move(add(initial, offset));","start":{"line":63,"column":9,"index":1926}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":6.977,"halstead":{"bugs":0.554,"difficulty":18.837,"effort":31290.431,"length":290,"time":1738.357,"vocabulary":53,"volume":1661.097,"operands":{"distinct":43,"total":162,"identifiers":["noop","it","\"should throttle move events by request animation frame\"","api","SensorAPI","sensor","Sensor","value","getByText","render","invariant","\"expected getter to be set\"","handle","HTMLElement","\"item: 0\"","preDrag","PreDragActions","tryGetLock","\"0\"","initial","Position","x","2","y","3","actions","FluidDragActions","fluidLift","expect","getOffset","toEqual","0","offset","1","5","move","add","requestAnimationFrame","step","\"should cancel any pending moves after a lock is released\"","a","\"expected api to be set\"","cancel"]},"operators":{"distinct":10,"total":128,"identifiers":["function","()","function=>","let","const","=","{}","[]",".",":"]}},"paramCount":2,"sloc":{"logical":86,"physical":76}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"css-box-model","type":"esm"},{"line":4,"path":"@testing-library/react","type":"esm"},{"line":5,"path":"../../../../../src/invariant","type":"esm"},{"line":11,"path":"../../../../../src/types","type":"esm"},{"line":12,"path":"../../util/app","type":"esm"},{"line":13,"path":"../../util/helpers","type":"esm"},{"line":14,"path":"../../../../../src/state/position","type":"esm"}],"errors":[],"lineEnd":76,"lineStart":1,"maintainability":98.593,"methods":[{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":16,"lineStart":16,"name":"noop","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.5,"halstead":{"bugs":0.258,"difficulty":9.608,"effort":7429.937,"length":140,"time":412.774,"vocabulary":46,"volume":773.299,"operands":{"distinct":37,"total":79,"identifiers":["api","SensorAPI","sensor","Sensor","value","getByText","render","invariant","\"expected getter to be set\"","handle","HTMLElement","\"item: 0\"","preDrag","PreDragActions","tryGetLock","\"0\"","noop","initial","Position","x","2","y","3","actions","FluidDragActions","fluidLift","expect","getOffset","toEqual","0","offset","1","5","move","add","requestAnimationFrame","step"]},"operators":{"distinct":9,"total":61,"identifiers":["let","const","=","function=>","{}","()","[]",".",":"]}},"paramCount":0,"sloc":{"logical":40,"physical":29},"errors":[],"lineEnd":46,"lineStart":18,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":22,"lineStart":20,"name":"<anon method-2>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.248,"difficulty":8.763,"effort":6522.549,"length":134,"time":362.364,"vocabulary":47,"volume":744.315,"operands":{"distinct":38,"total":74,"identifiers":["api","SensorAPI","a","Sensor","value","getByText","render","invariant","\"expected api to be set\"","handle","HTMLElement","\"item: 0\"","preDrag","PreDragActions","tryGetLock","\"0\"","noop","initial","Position","x","2","y","3","actions","FluidDragActions","fluidLift","expect","getOffset","toEqual","0","offset","1","5","move","add","cancel","requestAnimationFrame","step"]},"operators":{"distinct":9,"total":60,"identifiers":["let","const","=","function=>","{}","()","[]",".",":"]}},"paramCount":0,"sloc":{"logical":39,"physical":28},"errors":[],"lineEnd":75,"lineStart":48,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":52,"lineStart":50,"name":"<anon method-4>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.163,"halstead":{"bugs":0.092,"difficulty":3.14,"effort":5215.072,"length":48.333,"time":289.726,"vocabulary":8.833,"volume":276.849,"operands":{"distinct":7.167,"total":27},"operators":{"distinct":1.667,"total":21.333}},"paramCount":0.333,"sloc":{"logical":14.333,"physical":12.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":41.013,"halstead":{"bugs":0.102,"difficulty":3.874,"effort":2791.448,"length":56,"time":155.08,"vocabulary":19.8,"volume":305.425,"operands":{"distinct":15.8,"total":31.4},"operators":{"distinct":4,"total":24.6}},"paramCount":0.4,"sloc":{"logical":16.2,"physical":12.8}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/sensor-marshal/lock-context-isolation.spec.js","testCases":1,"smells":3,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  30 |\n  31 |   // each sensor can get a different lock\n> 32 |   invariant(first, 'expected first to be set');\n     |  ^ Eager Test\n  33 |   invariant(second, 'expected second to be set');\n  34 |   expect(first.tryGetLock('0')).toBeTruthy();\n  35 |   expect(second.tryGetLock('0')).toBeTruthy();","start":{"line":32,"column":2,"index":856}},{"frame":"  31 |   // each sensor can get a different lock\n  32 |   invariant(first, 'expected first to be set');\n> 33 |   invariant(second, 'expected second to be set');\n     |  ^ Eager Test\n  34 |   expect(first.tryGetLock('0')).toBeTruthy();\n  35 |   expect(second.tryGetLock('0')).toBeTruthy();\n  36 | });","start":{"line":33,"column":2,"index":904}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  25 |\n  26 |   const items: HTMLElement[] = getAllByText('item: 0');\n> 27 |   expect(items).toHaveLength(2);\n     |                             ^ Magic Number\n  28 |   const [inFirst, inSecond] = items;\n  29 |   expect(inFirst).not.toBe(inSecond);\n  30 |","start":{"line":27,"column":29,"index":732}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":14.286,"halstead":{"bugs":0.167,"difficulty":8.833,"effort":4429.764,"length":97,"time":246.098,"vocabulary":36,"volume":501.483,"operands":{"distinct":27,"total":53,"identifiers":["it","\"should allow different locks in different DragDropContexts\"","first","SensorAPI","second","a","Sensor","value","b","getAllByText","render","items","HTMLElement","\"item: 0\"","expect","toHaveLength","2","inFirst","inSecond","not","toBe","invariant","\"expected first to be set\"","\"expected second to be set\"","tryGetLock","\"0\"","toBeTruthy"]},"operators":{"distinct":9,"total":44,"identifiers":["()","function=>","let","const","=","{}","[]",".",","]}},"paramCount":2,"sloc":{"logical":28,"physical":37}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/invariant","type":"esm"},{"line":5,"path":"../../../../../src/types","type":"esm"},{"line":6,"path":"../../util/app","type":"esm"}],"errors":[],"lineEnd":37,"lineStart":1,"maintainability":115.503,"methods":[{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.148,"difficulty":8.46,"effort":3744.474,"length":87,"time":208.026,"vocabulary":34,"volume":442.609,"operands":{"distinct":25,"total":47,"identifiers":["first","SensorAPI","second","a","Sensor","value","b","getAllByText","render","items","HTMLElement","\"item: 0\"","expect","toHaveLength","2","inFirst","inSecond","not","toBe","invariant","\"expected first to be set\"","\"expected second to be set\"","tryGetLock","\"0\"","toBeTruthy"]},"operators":{"distinct":9,"total":40,"identifiers":["let","const","=","function=>","{}","()","[]",".",","]}},"paramCount":0,"sloc":{"logical":24,"physical":29},"errors":[],"lineEnd":36,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["first","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":14,"lineStart":12,"name":"<anon method-2>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["second","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":17,"lineStart":15,"name":"<anon method-3>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.042,"difficulty":2.208,"effort":1107.441,"length":24.25,"time":61.525,"vocabulary":9,"volume":125.371,"operands":{"distinct":6.75,"total":13.25},"operators":{"distinct":2.25,"total":11}},"paramCount":0.5,"sloc":{"logical":7,"physical":9.25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":68.056,"halstead":{"bugs":0.05,"difficulty":3.153,"effort":1249.743,"length":31,"time":69.43,"vocabulary":13.333,"volume":150.706,"operands":{"distinct":9.667,"total":17},"operators":{"distinct":3.667,"total":14}},"paramCount":0.667,"sloc":{"logical":8.667,"physical":11.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/sensor-marshal/is-lock-claimed.spec.js","testCases":1,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  28 |\n  29 |   // both sensors know that the lock is not claimed\n> 30 |   expect(first.isLockClaimed()).toBe(false);\n     |  ^ Duplicate Assert\n  31 |   expect(second.isLockClaimed()).toBe(false);\n  32 |\n  33 |   const preDrag: ?PreDragActions = first.tryGetLock('0');","start":{"line":30,"column":2,"index":693}},{"frame":"  29 |   // both sensors know that the lock is not claimed\n  30 |   expect(first.isLockClaimed()).toBe(false);\n> 31 |   expect(second.isLockClaimed()).toBe(false);\n     |  ^ Duplicate Assert\n  32 |\n  33 |   const preDrag: ?PreDragActions = first.tryGetLock('0');\n  34 |   expect(preDrag).toBeTruthy();","start":{"line":31,"column":2,"index":738}},{"frame":"  35 |\n  36 |   // both sensors can know if the lock is claimed\n> 37 |   expect(first.isLockClaimed()).toBe(true);\n     |  ^ Duplicate Assert\n  38 |   expect(second.isLockClaimed()).toBe(true);\n  39 | });\n  40 |","start":{"line":37,"column":2,"index":926}},{"frame":"  36 |   // both sensors can know if the lock is claimed\n  37 |   expect(first.isLockClaimed()).toBe(true);\n> 38 |   expect(second.isLockClaimed()).toBe(true);\n     |  ^ Duplicate Assert\n  39 | });\n  40 |","start":{"line":38,"column":2,"index":970}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.154,"difficulty":10.714,"effort":4941.94,"length":94,"time":274.552,"vocabulary":30,"volume":461.248,"operands":{"distinct":21,"total":50,"identifiers":["it","\"should correctly state whether a lock is claimed\"","first","SensorAPI","second","a","Sensor","value","b","render","invariant","expect","isLockClaimed","toBe","false","preDrag","PreDragActions","tryGetLock","\"0\"","toBeTruthy","true"]},"operators":{"distinct":9,"total":44,"identifiers":["()","function=>","let","const","=","[]",",","&&","."]}},"paramCount":2,"sloc":{"logical":28,"physical":40}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/invariant","type":"esm"},{"line":9,"path":"../../../../../src/types","type":"esm"},{"line":10,"path":"../../util/app","type":"esm"}],"errors":[],"lineEnd":40,"lineStart":1,"maintainability":114.905,"methods":[{"cyclomatic":2,"cyclomaticDensity":8.333,"halstead":{"bugs":0.135,"difficulty":10.421,"effort":4208.207,"length":84,"time":233.789,"vocabulary":28,"volume":403.818,"operands":{"distinct":19,"total":44,"identifiers":["first","SensorAPI","second","a","Sensor","value","b","render","invariant","expect","isLockClaimed","toBe","false","preDrag","PreDragActions","tryGetLock","\"0\"","toBeTruthy","true"]},"operators":{"distinct":9,"total":40,"identifiers":["let","const","=","function=>","()","[]",",","&&","."]}},"paramCount":0,"sloc":{"logical":24,"physical":28},"errors":[],"lineEnd":39,"lineStart":12,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["first","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":17,"lineStart":15,"name":"<anon method-2>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["second","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":20,"lineStart":18,"name":"<anon method-3>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.25,"cyclomaticDensity":4.464,"halstead":{"bugs":0.038,"difficulty":2.679,"effort":1235.485,"length":23.5,"time":68.638,"vocabulary":7.5,"volume":115.312,"operands":{"distinct":5.25,"total":12.5},"operators":{"distinct":2.25,"total":11}},"paramCount":0.5,"sloc":{"logical":7,"physical":10}},"methodAverage":{"cyclomatic":1.333,"cyclomaticDensity":69.444,"halstead":{"bugs":0.046,"difficulty":3.807,"effort":1404.321,"length":30,"time":78.018,"vocabulary":11.333,"volume":137.776,"operands":{"distinct":7.667,"total":16},"operators":{"distinct":3.667,"total":14}},"paramCount":0.667,"sloc":{"logical":8.667,"physical":11.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/sensor-marshal/force-releasing-locks.spec.js","testCases":1,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  31 |   const preDrag: ?PreDragActions = first.tryGetLock('0', onForceStop);\n  32 |   expect(preDrag).toBeTruthy();\n> 33 |   expect(second.isLockClaimed()).toBe(true);\n     |  ^ Duplicate Assert\n  34 |\n  35 |   second.tryReleaseLock();\n  36 |   expect(onForceStop).toHaveBeenCalled();","start":{"line":33,"column":2,"index":788}},{"frame":"  36 |   expect(onForceStop).toHaveBeenCalled();\n  37 |   // lock is gone\n> 38 |   expect(second.isLockClaimed()).toBe(false);\n     |  ^ Duplicate Assert\n  39 | });\n  40 |","start":{"line":38,"column":2,"index":921}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  26 |     </React.Fragment>,\n  27 |   );\n> 28 |   invariant(first);\n     |  ^ Eager Test\n  29 |   invariant(second);\n  30 |\n  31 |   const preDrag: ?PreDragActions = first.tryGetLock('0', onForceStop);","start":{"line":28,"column":2,"index":643}},{"frame":"  27 |   );\n  28 |   invariant(first);\n> 29 |   invariant(second);\n     |  ^ Eager Test\n  30 |\n  31 |   const preDrag: ?PreDragActions = first.tryGetLock('0', onForceStop);\n  32 |   expect(preDrag).toBeTruthy();","start":{"line":29,"column":2,"index":663}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":14.286,"halstead":{"bugs":0.158,"difficulty":7.692,"effort":3639.493,"length":93,"time":202.194,"vocabulary":34,"volume":473.134,"operands":{"distinct":26,"total":50,"identifiers":["it","\"should correctly state whether a lock is claimed\"","first","SensorAPI","second","a","Sensor","value","b","onForceStop","jest","fn","render","invariant","preDrag","PreDragActions","tryGetLock","\"0\"","expect","toBeTruthy","isLockClaimed","toBe","true","tryReleaseLock","toHaveBeenCalled","false"]},"operators":{"distinct":8,"total":43,"identifiers":["()","function=>","let","const","=",".","[]",","]}},"paramCount":2,"sloc":{"logical":28,"physical":40}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/invariant","type":"esm"},{"line":9,"path":"../../../../../src/types","type":"esm"},{"line":10,"path":"../../util/app","type":"esm"}],"errors":[],"lineEnd":40,"lineStart":1,"maintainability":116.175,"methods":[{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.138,"difficulty":7.333,"effort":3043.333,"length":83,"time":169.074,"vocabulary":32,"volume":415,"operands":{"distinct":24,"total":44,"identifiers":["first","SensorAPI","second","a","Sensor","value","b","onForceStop","jest","fn","render","invariant","preDrag","PreDragActions","tryGetLock","\"0\"","expect","toBeTruthy","isLockClaimed","toBe","true","tryReleaseLock","toHaveBeenCalled","false"]},"operators":{"distinct":8,"total":39,"identifiers":["let","const","=","function=>","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":24,"physical":28},"errors":[],"lineEnd":39,"lineStart":12,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["first","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":17,"lineStart":15,"name":"<anon method-2>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["second","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":20,"lineStart":18,"name":"<anon method-3>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.039,"difficulty":1.923,"effort":909.873,"length":23.25,"time":50.549,"vocabulary":8.5,"volume":118.284,"operands":{"distinct":6.5,"total":12.5},"operators":{"distinct":2,"total":10.75}},"paramCount":0.5,"sloc":{"logical":7,"physical":10}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":68.056,"halstead":{"bugs":0.047,"difficulty":2.778,"effort":1016.029,"length":29.667,"time":56.446,"vocabulary":12.667,"volume":141.503,"operands":{"distinct":9.333,"total":16},"operators":{"distinct":3.333,"total":13.667}},"paramCount":0.667,"sloc":{"logical":8.667,"physical":11.333}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/sensor-marshal/click-blocking.spec.js","testCases":3,"smells":9,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  24 |   );\n  25 |   const handle: HTMLElement = getByText('item: 0');\n> 26 |   invariant(api);\n     |  ^ Eager Test\n  27 |\n  28 |   // trigger a drop\n  29 |   const preDrag: ?PreDragActions = api.tryGetLock('0');","start":{"line":26,"column":2,"index":672}},{"frame":"  28 |   // trigger a drop\n  29 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n> 30 |   invariant(preDrag);\n     |  ^ Eager Test\n  31 |   const drag: SnapDragActions = preDrag.snapLift();\n  32 |   act(() => drag.drop({ shouldBlockNextClick: true }));\n  33 |","start":{"line":30,"column":2,"index":767}},{"frame":"  56 |   );\n  57 |   const handle: HTMLElement = getByText('item: 0');\n> 58 |   invariant(api);\n     |  ^ Eager Test\n  59 |\n  60 |   // trigger a drop\n  61 |   const preDrag: ?PreDragActions = api.tryGetLock('0');","start":{"line":58,"column":2,"index":1525}},{"frame":"  60 |   // trigger a drop\n  61 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n> 62 |   invariant(preDrag);\n     |  ^ Eager Test\n  63 |   const drag: SnapDragActions = preDrag.snapLift();\n  64 |   act(() => drag.drop({ shouldBlockNextClick: false }));\n  65 |","start":{"line":62,"column":2,"index":1620}},{"frame":"  86 |   );\n  87 |   const handle: HTMLElement = getByText('item: 0');\n> 88 |   invariant(api);\n     |  ^ Eager Test\n  89 |\n  90 |   // trigger a drop\n  91 |   const preDrag: ?PreDragActions = api.tryGetLock('0');","start":{"line":88,"column":2,"index":2271}},{"frame":"  90 |   // trigger a drop\n  91 |   const preDrag: ?PreDragActions = api.tryGetLock('0');\n> 92 |   invariant(preDrag);\n     |  ^ Eager Test\n  93 |   const drag: SnapDragActions = preDrag.snapLift();\n  94 |   act(() => drag.drop({ shouldBlockNextClick: true }));\n  95 |","start":{"line":92,"column":2,"index":2366}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  24 |   );\n  25 |   const handle: HTMLElement = getByText('item: 0');\n> 26 |   invariant(api);\n     |  ^ Lazy Test\n  27 |\n  28 |   // trigger a drop\n  29 |   const preDrag: ?PreDragActions = api.tryGetLock('0');","start":{"line":26,"column":2,"index":672}},{"frame":"  56 |   );\n  57 |   const handle: HTMLElement = getByText('item: 0');\n> 58 |   invariant(api);\n     |  ^ Lazy Test\n  59 |\n  60 |   // trigger a drop\n  61 |   const preDrag: ?PreDragActions = api.tryGetLock('0');","start":{"line":58,"column":2,"index":1525}},{"frame":"  86 |   );\n  87 |   const handle: HTMLElement = getByText('item: 0');\n> 88 |   invariant(api);\n     |  ^ Lazy Test\n  89 |\n  90 |   // trigger a drop\n  91 |   const preDrag: ?PreDragActions = api.tryGetLock('0');","start":{"line":88,"column":2,"index":2271}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":11.236,"halstead":{"bugs":0.565,"difficulty":17.571,"effort":29802.112,"length":299,"time":1655.673,"vocabulary":51,"volume":1696.055,"operands":{"distinct":42,"total":164,"identifiers":["it","\"should block a single click if requested\"","api","SensorAPI","sensor","Sensor","value","getByText","render","handle","HTMLElement","\"item: 0\"","invariant","preDrag","PreDragActions","tryGetLock","\"0\"","drag","SnapDragActions","snapLift","act","drop","shouldBlockNextClick","true","first","MouseEvent","createEvent","click","second","fireEvent","expect","defaultPrevented","toBe","false","\"should not block any clicks if not requested\"","a","\"should not block any clicks after a timeout\"","jest","useFakeTimers","runTimersToTime","1","useRealTimers"]},"operators":{"distinct":9,"total":135,"identifiers":["()","function=>","let","const","=","{}","[]",".",":"]}},"paramCount":3,"sloc":{"logical":89,"physical":107}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"react-dom/test-utils","type":"esm"},{"line":5,"path":"../../../../../src/invariant","type":"esm"},{"line":11,"path":"../../../../../src/types","type":"esm"},{"line":12,"path":"../../util/app","type":"esm"}],"errors":[],"lineEnd":107,"lineStart":1,"maintainability":108.227,"methods":[{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.166,"difficulty":7.067,"effort":3523.109,"length":95,"time":195.728,"vocabulary":38,"volume":498.553,"operands":{"distinct":30,"total":53,"identifiers":["api","SensorAPI","sensor","Sensor","value","getByText","render","handle","HTMLElement","\"item: 0\"","invariant","preDrag","PreDragActions","tryGetLock","\"0\"","drag","SnapDragActions","snapLift","act","first","MouseEvent","createEvent","click","second","fireEvent","expect","defaultPrevented","toBe","true","false"]},"operators":{"distinct":8,"total":42,"identifiers":["let","const","=","function=>","{}","()","[]","."]}},"paramCount":0,"sloc":{"logical":26,"physical":30},"errors":[],"lineEnd":43,"lineStart":14,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":18,"lineStart":16,"name":"<anon method-2>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.008,"difficulty":2,"effort":48,"length":8,"time":2.667,"vocabulary":8,"volume":24,"operands":{"distinct":4,"total":4,"identifiers":["drag","drop","shouldBlockNextClick","true"]},"operators":{"distinct":4,"total":4,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":32,"lineStart":32,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.126,"difficulty":5.714,"effort":2156.597,"length":73,"time":119.811,"vocabulary":36,"volume":377.405,"operands":{"distinct":28,"total":40,"identifiers":["api","SensorAPI","a","Sensor","value","getByText","render","handle","HTMLElement","\"item: 0\"","invariant","preDrag","PreDragActions","tryGetLock","\"0\"","drag","SnapDragActions","snapLift","act","first","MouseEvent","createEvent","click","fireEvent","expect","defaultPrevented","toBe","false"]},"operators":{"distinct":8,"total":33,"identifiers":["let","const","=","function=>","{}","()","[]","."]}},"paramCount":0,"sloc":{"logical":21,"physical":28},"errors":[],"lineEnd":72,"lineStart":45,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":50,"lineStart":48,"name":"<anon method-5>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.008,"difficulty":2,"effort":48,"length":8,"time":2.667,"vocabulary":8,"volume":24,"operands":{"distinct":4,"total":4,"identifiers":["drag","drop","shouldBlockNextClick","false"]},"operators":{"distinct":4,"total":4,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":64,"lineStart":64,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.154,"difficulty":5.697,"effort":2624.876,"length":86,"time":145.826,"vocabulary":41,"volume":460.749,"operands":{"distinct":33,"total":47,"identifiers":["jest","useFakeTimers","api","SensorAPI","sensor","Sensor","value","getByText","render","handle","HTMLElement","\"item: 0\"","invariant","preDrag","PreDragActions","tryGetLock","\"0\"","drag","SnapDragActions","snapLift","act","runTimersToTime","1","first","MouseEvent","createEvent","click","fireEvent","expect","defaultPrevented","toBe","false","useRealTimers"]},"operators":{"distinct":8,"total":39,"identifiers":["()",".","let","const","=","function=>","{}","[]"]}},"paramCount":0,"sloc":{"logical":24,"physical":33},"errors":[],"lineEnd":106,"lineStart":74,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["api","value"]},"operators":{"distinct":1,"total":1,"identifiers":["="]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":80,"lineStart":78,"name":"<anon method-8>","paramNames":["value"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.008,"difficulty":2,"effort":48,"length":8,"time":2.667,"vocabulary":8,"volume":24,"operands":{"distinct":4,"total":4,"identifiers":["drag","drop","shouldBlockNextClick","true"]},"operators":{"distinct":4,"total":4,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":94,"lineStart":94,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.124,"halstead":{"bugs":0.057,"difficulty":1.757,"effort":2980.211,"length":29.9,"time":165.567,"vocabulary":5.1,"volume":169.606,"operands":{"distinct":4.2,"total":16.4},"operators":{"distinct":0.9,"total":13.5}},"paramCount":0.3,"sloc":{"logical":8.9,"physical":10.7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":45.864,"halstead":{"bugs":0.053,"difficulty":2.886,"effort":939.524,"length":31.889,"time":52.196,"vocabulary":16.444,"volume":158.108,"operands":{"distinct":12.111,"total":17.556},"operators":{"distinct":4.333,"total":14.333}},"paramCount":0.333,"sloc":{"logical":9.222,"physical":11.444}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/mouse-sensor/stopping-a-drag.spec.js","testCases":4,"smells":17,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  39 |\n  40 | it('should not prevent the default behaviour for an indirect cancel', () => {\n> 41 |   ['resize', supportedEventName].forEach((eventName: string) => {\n     |                                 ^ Conditional Test Logic\n  42 |     const onDragEnd = jest.fn();\n  43 |     const { getByText, unmount } = render(<App onDragEnd={onDragEnd} />);\n  44 |     const handle: HTMLElement = getByText('item: 0');","start":{"line":41,"column":33,"index":1432}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  13 |   const handle: HTMLElement = getByText('item: 0');\n  14 |\n> 15 |   simpleLift(mouse, handle);\n     |  ^ Eager Test\n  16 |\n  17 |   const event: Event = createEvent.mouseUp(handle);\n  18 |   fireEvent(handle, event);","start":{"line":15,"column":2,"index":661}},{"frame":"  19 |\n  20 |   expect(event.defaultPrevented).toBe(true);\n> 21 |   expect(getDropReason(onDragEnd)).toBe('DROP');\n     |         ^ Eager Test\n  22 | });\n  23 |\n  24 | it('should prevent default on an escape press', () => {","start":{"line":21,"column":9,"index":824}},{"frame":"  27 |   const handle: HTMLElement = getByText('item: 0');\n  28 |\n> 29 |   simpleLift(mouse, handle);\n     |  ^ Eager Test\n  30 |\n  31 |   const event: Event = createEvent.keyDown(handle, {\n  32 |     keyCode: keyCodes.escape,","start":{"line":29,"column":2,"index":1074}},{"frame":"  35 |\n  36 |   expect(event.defaultPrevented).toBe(true);\n> 37 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |         ^ Eager Test\n  38 | });\n  39 |\n  40 | it('should not prevent the default behaviour for an indirect cancel', () => {","start":{"line":37,"column":9,"index":1274}},{"frame":"  44 |     const handle: HTMLElement = getByText('item: 0');\n  45 |\n> 46 |     simpleLift(mouse, handle);\n     |    ^ Eager Test\n  47 |\n  48 |     const event: Event = new Event(eventName, {\n  49 |       bubbles: true,","start":{"line":46,"column":4,"index":1631}},{"frame":"  56 |     // not an explicit cancel\n  57 |     expect(event.defaultPrevented).toBe(false);\n> 58 |     expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |           ^ Eager Test\n  59 |\n  60 |     unmount();\n  61 |   });","start":{"line":58,"column":11,"index":1903}},{"frame":"  67 |   const handle: HTMLElement = getByText('item: 0');\n  68 |\n> 69 |   simpleLift(mouse, handle);\n     |  ^ Eager Test\n  70 |\n  71 |   const event: Event = createEvent.mouseDown(handle);\n  72 |   fireEvent(handle, event);","start":{"line":69,"column":2,"index":2235}},{"frame":"  73 |\n  74 |   expect(event.defaultPrevented).toBe(true);\n> 75 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |         ^ Eager Test\n  76 | });\n  77 |","start":{"line":75,"column":9,"index":2400}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  13 |   const handle: HTMLElement = getByText('item: 0');\n  14 |\n> 15 |   simpleLift(mouse, handle);\n     |  ^ Lazy Test\n  16 |\n  17 |   const event: Event = createEvent.mouseUp(handle);\n  18 |   fireEvent(handle, event);","start":{"line":15,"column":2,"index":661}},{"frame":"  19 |\n  20 |   expect(event.defaultPrevented).toBe(true);\n> 21 |   expect(getDropReason(onDragEnd)).toBe('DROP');\n     |         ^ Lazy Test\n  22 | });\n  23 |\n  24 | it('should prevent default on an escape press', () => {","start":{"line":21,"column":9,"index":824}},{"frame":"  27 |   const handle: HTMLElement = getByText('item: 0');\n  28 |\n> 29 |   simpleLift(mouse, handle);\n     |  ^ Lazy Test\n  30 |\n  31 |   const event: Event = createEvent.keyDown(handle, {\n  32 |     keyCode: keyCodes.escape,","start":{"line":29,"column":2,"index":1074}},{"frame":"  35 |\n  36 |   expect(event.defaultPrevented).toBe(true);\n> 37 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |         ^ Lazy Test\n  38 | });\n  39 |\n  40 | it('should not prevent the default behaviour for an indirect cancel', () => {","start":{"line":37,"column":9,"index":1274}},{"frame":"  44 |     const handle: HTMLElement = getByText('item: 0');\n  45 |\n> 46 |     simpleLift(mouse, handle);\n     |    ^ Lazy Test\n  47 |\n  48 |     const event: Event = new Event(eventName, {\n  49 |       bubbles: true,","start":{"line":46,"column":4,"index":1631}},{"frame":"  56 |     // not an explicit cancel\n  57 |     expect(event.defaultPrevented).toBe(false);\n> 58 |     expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |           ^ Lazy Test\n  59 |\n  60 |     unmount();\n  61 |   });","start":{"line":58,"column":11,"index":1903}},{"frame":"  67 |   const handle: HTMLElement = getByText('item: 0');\n  68 |\n> 69 |   simpleLift(mouse, handle);\n     |  ^ Lazy Test\n  70 |\n  71 |   const event: Event = createEvent.mouseDown(handle);\n  72 |   fireEvent(handle, event);","start":{"line":69,"column":2,"index":2235}},{"frame":"  73 |\n  74 |   expect(event.defaultPrevented).toBe(true);\n> 75 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |         ^ Lazy Test\n  76 | });\n  77 |","start":{"line":75,"column":9,"index":2400}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":7.595,"halstead":{"bugs":0.512,"difficulty":18.415,"effort":28307.478,"length":271,"time":1572.638,"vocabulary":51,"volume":1537.227,"operands":{"distinct":41,"total":151,"identifiers":["it","\"should prevent default on the event that causes a drop\"","onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","event","Event","createEvent","mouseUp","fireEvent","expect","defaultPrevented","toBe","true","getDropReason","\"DROP\"","\"should prevent default on an escape press\"","keyDown","keyCode","keyCodes","escape","\"CANCEL\"","\"should not prevent the default behaviour for an indirect cancel\"","\"resize\"","supportedEventName","forEach","eventName","unmount","bubbles","cancelable","target","false","\"should cancel and prevent default on mousedown during a drag as it might be from a different button\"","mouseDown"]},"operators":{"distinct":10,"total":120,"identifiers":["()","function=>","const","=",".","{}",":","[]",",","new"]}},"paramCount":1,"sloc":{"logical":79,"physical":77}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/app","type":"esm"},{"line":5,"path":"../../util/helpers","type":"esm"},{"line":6,"path":"../../../../../src/view/key-codes","type":"esm"},{"line":7,"path":"../../util/controls","type":"esm"},{"line":8,"path":"../../../../../src/view/use-sensor-marshal/sensors/util/supported-page-visibility-event-name","type":"esm"}],"errors":[],"lineEnd":77,"lineStart":1,"maintainability":100.311,"methods":[{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.089,"difficulty":3.81,"effort":1020.667,"length":57,"time":56.704,"vocabulary":26,"volume":267.925,"operands":{"distinct":21,"total":32,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","event","Event","createEvent","mouseUp","fireEvent","expect","defaultPrevented","toBe","true","getDropReason","\"DROP\""]},"operators":{"distinct":5,"total":25,"identifiers":["const","=","()",".","{}"]}},"paramCount":0,"sloc":{"logical":16,"physical":13},"errors":[],"lineEnd":22,"lineStart":10,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.103,"difficulty":4.375,"effort":1352.462,"length":63,"time":75.137,"vocabulary":30,"volume":309.134,"operands":{"distinct":24,"total":35,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","event","Event","createEvent","keyDown","keyCode","keyCodes","escape","fireEvent","expect","defaultPrevented","toBe","true","getDropReason","\"CANCEL\""]},"operators":{"distinct":6,"total":28,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":17,"physical":15},"errors":[],"lineEnd":38,"lineStart":24,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["\"resize\"","supportedEventName","forEach","eventName"]},"operators":{"distinct":5,"total":5,"identifiers":["()",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":23},"errors":[],"lineEnd":62,"lineStart":40,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.115,"difficulty":5.6,"effort":1932,"length":69,"time":107.333,"vocabulary":32,"volume":345,"operands":{"distinct":25,"total":40,"identifiers":["onDragEnd","jest","fn","getByText","unmount","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","event","Event","eventName","bubbles","true","cancelable","target","fireEvent","expect","defaultPrevented","toBe","false","getDropReason","\"CANCEL\""]},"operators":{"distinct":7,"total":29,"identifiers":["const","=","()",".","{}","new",":"]}},"paramCount":1,"sloc":{"logical":20,"physical":21},"errors":[],"lineEnd":61,"lineStart":41,"name":"<anon method-4>","paramNames":["eventName"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.089,"difficulty":3.81,"effort":1020.667,"length":57,"time":56.704,"vocabulary":26,"volume":267.925,"operands":{"distinct":21,"total":32,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","event","Event","createEvent","mouseDown","fireEvent","expect","defaultPrevented","toBe","true","getDropReason","\"CANCEL\""]},"operators":{"distinct":5,"total":25,"identifiers":["const","=","()",".","{}"]}},"paramCount":0,"sloc":{"logical":16,"physical":13},"errors":[],"lineEnd":76,"lineStart":64,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.266,"halstead":{"bugs":0.085,"difficulty":3.069,"effort":4717.913,"length":45.167,"time":262.106,"vocabulary":8.5,"volume":256.205,"operands":{"distinct":6.833,"total":25.167},"operators":{"distinct":1.667,"total":20}},"paramCount":0.167,"sloc":{"logical":13.167,"physical":12.833}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.676,"halstead":{"bugs":0.081,"difficulty":4.019,"effort":1079.424,"length":51,"time":59.968,"vocabulary":24.6,"volume":243.703,"operands":{"distinct":19,"total":28.6},"operators":{"distinct":5.6,"total":22.4}},"paramCount":0.2,"sloc":{"logical":14.2,"physical":17}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/mouse-sensor/starting-a-dragging.spec.js","testCases":8,"smells":14,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  38 |\n  39 |     // not dragging yet\n> 40 |     expect(isDragging(handle)).toBe(false);\n     |    ^ Duplicate Assert\n  41 |\n  42 |     // mouse move to start drag\n  43 |","start":{"line":40,"column":4,"index":1293}},{"frame":"  51 |\n  52 |     // now dragging\n> 53 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  54 |\n  55 |     unmount();\n  56 |   });","start":{"line":53,"column":4,"index":1660}},{"frame":"  107 |     fireEvent.mouseUp(handle);\n  108 |\n> 109 |     expect(isDragging(handle)).toBe(false);\n      |    ^ Duplicate Assert\n  110 |   });\n  111 |\n  112 |   fireEvent.mouseDown(handle);","start":{"line":109,"column":4,"index":3209}},{"frame":"  116 |   });\n  117 |\n> 118 |   expect(isDragging(handle)).toBe(true);\n      |  ^ Duplicate Assert\n  119 | });\n  120 |\n  121 | it('should not start a drag if there was too little mouse movement while mouse was pressed', () => {","start":{"line":118,"column":2,"index":3379}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  38 |\n  39 |     // not dragging yet\n> 40 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Eager Test\n  41 |\n  42 |     // mouse move to start drag\n  43 |","start":{"line":40,"column":11,"index":1300}},{"frame":"  51 |\n  52 |     // now dragging\n> 53 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  54 |\n  55 |     unmount();\n  56 |   });","start":{"line":53,"column":11,"index":1667}},{"frame":"  107 |     fireEvent.mouseUp(handle);\n  108 |\n> 109 |     expect(isDragging(handle)).toBe(false);\n      |           ^ Eager Test\n  110 |   });\n  111 |\n  112 |   fireEvent.mouseDown(handle);","start":{"line":109,"column":11,"index":3216}},{"frame":"  116 |   });\n  117 |\n> 118 |   expect(isDragging(handle)).toBe(true);\n      |         ^ Eager Test\n  119 | });\n  120 |\n  121 | it('should not start a drag if there was too little mouse movement while mouse was pressed', () => {","start":{"line":118,"column":9,"index":3386}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  38 |\n  39 |     // not dragging yet\n> 40 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Lazy Test\n  41 |\n  42 |     // mouse move to start drag\n  43 |","start":{"line":40,"column":11,"index":1300}},{"frame":"  85 |   fireEvent(handle, mouseMove);\n  86 |\n> 87 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Lazy Test\n  88 |   expect(mouseMove.defaultPrevented).toBe(false);\n  89 | });\n  90 |","start":{"line":87,"column":9,"index":2512}},{"frame":"  107 |     fireEvent.mouseUp(handle);\n  108 |\n> 109 |     expect(isDragging(handle)).toBe(false);\n      |           ^ Lazy Test\n  110 |   });\n  111 |\n  112 |   fireEvent.mouseDown(handle);","start":{"line":109,"column":11,"index":3216}},{"frame":"  129 |   });\n  130 |\n> 131 |   expect(isDragging(handle)).toBe(false);\n      |         ^ Lazy Test\n  132 | });\n  133 |\n  134 | it('should not start a drag if not using the primary mouse button', () => {","start":{"line":131,"column":9,"index":3752}},{"frame":"  145 |   });\n  146 |\n> 147 |   expect(isDragging(handle)).toBe(false);\n      |         ^ Lazy Test\n  148 | });\n  149 |\n  150 | it('should not start a drag if a modifier key was used while pressing the mouse down', () => {","start":{"line":147,"column":9,"index":4187}},{"frame":"  164 |     });\n  165 |\n> 166 |     expect(isDragging(handle)).toBe(false);\n      |           ^ Lazy Test\n  167 |   });\n  168 | });\n  169 |","start":{"line":166,"column":11,"index":4835}}]}],"metrics":{"aggregate":{"cyclomatic":13,"cyclomaticDensity":8.025,"halstead":{"bugs":1.188,"difficulty":33.797,"effort":120446.082,"length":567,"time":6691.449,"vocabulary":78,"volume":3563.823,"operands":{"distinct":64,"total":309,"identifiers":["jest","spyOn","console","\"warn\"","mockImplementation","message","invariant","includes","\"Message not passed to screen reader\"","Unexpected console.warn(\"","\")","it","\"should start a drag after sufficient movement\"","valid","Position","x","0","y","sloppyClickThreshold","forEach","point","getByText","unmount","render","handle","HTMLElement","\"item: 0\"","mouseDown","MouseEvent","createEvent","fireEvent","expect","defaultPrevented","toBe","true","isDragging","false","mouseMove","clientX","clientY","window","\"should allow standard click events\"","click","\"should not call preventDefault on mouse movements while we are not sure if a drag is starting\"","button","primaryButton","1","\"should call preventDefault on the initial mousedown event to prevent the element gaining focus\"","\"should allow multiple false starts\"","Array","from","length","5","mouseUp","\"should not start a drag if there was too little mouse movement while mouse was pressed\"","\"should not start a drag if not using the primary mouse button\"","Event","\"should not start a drag if a modifier key was used while pressing the mouse down\"","keys","\"ctrlKey\"","\"altKey\"","\"shiftKey\"","\"metaKey\"","key"]},"operators":{"distinct":14,"total":258,"identifiers":["()",".","function=>","``","${}","const","=","[]",",","{}",":","- (prefix)","-","+"]}},"paramCount":3,"sloc":{"logical":162,"physical":169}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"css-box-model","type":"esm"},{"line":4,"path":"@testing-library/react","type":"esm"},{"line":5,"path":"../../../../../src/invariant","type":"esm"},{"line":9,"path":"../../../../../src/view/use-sensor-marshal/sensors/use-mouse-sensor","type":"esm"},{"line":10,"path":"../../util/helpers","type":"esm"},{"line":11,"path":"../../util/app","type":"esm"}],"errors":[],"lineEnd":169,"lineStart":1,"maintainability":98.895,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.013,"difficulty":2.333,"effort":93.014,"length":12,"time":5.167,"vocabulary":10,"volume":39.863,"operands":{"distinct":6,"total":7,"identifiers":["invariant","message","includes","\"Message not passed to screen reader\"","Unexpected console.warn(\"","\")"]},"operators":{"distinct":4,"total":5,"identifiers":["()",".","``","${}"]}},"paramCount":1,"sloc":{"logical":2,"physical":6},"errors":[],"lineEnd":18,"lineStart":13,"name":"<anon method-1>","paramNames":["message"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.061,"difficulty":13.125,"effort":2408.132,"length":44,"time":133.785,"vocabulary":18,"volume":183.477,"operands":{"distinct":8,"total":21,"identifiers":["valid","Position","x","0","y","sloppyClickThreshold","forEach","point"]},"operators":{"distinct":10,"total":23,"identifiers":["const","=","[]",",","{}",":","- (prefix)","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":38},"errors":[],"lineEnd":57,"lineStart":20,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.147,"difficulty":6.783,"effort":2998.43,"length":91,"time":166.579,"vocabulary":29,"volume":442.076,"operands":{"distinct":23,"total":52,"identifiers":["getByText","unmount","render","handle","HTMLElement","\"item: 0\"","mouseDown","MouseEvent","createEvent","fireEvent","expect","defaultPrevented","toBe","true","isDragging","false","mouseMove","clientX","point","x","clientY","y","window"]},"operators":{"distinct":6,"total":39,"identifiers":["const","=","{}","()",".",":"]}},"paramCount":1,"sloc":{"logical":25,"physical":29},"errors":[],"lineEnd":56,"lineStart":28,"name":"<anon method-3>","paramNames":["point"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.05,"difficulty":3.846,"effort":577.374,"length":36,"time":32.076,"vocabulary":18,"volume":150.117,"operands":{"distinct":13,"total":20,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","click","MouseEvent","createEvent","fireEvent","expect","defaultPrevented","toBe","false"]},"operators":{"distinct":5,"total":16,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":9},"errors":[],"lineEnd":67,"lineStart":59,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.112,"difficulty":6.205,"effort":2079.768,"length":69,"time":115.543,"vocabulary":29,"volume":335.201,"operands":{"distinct":22,"total":39,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","fireEvent","mouseDown","clientX","0","clientY","button","primaryButton","mouseMove","MouseEvent","createEvent","sloppyClickThreshold","1","expect","isDragging","toBe","false","defaultPrevented"]},"operators":{"distinct":7,"total":30,"identifiers":["const","=","{}","()",".",":","-"]}},"paramCount":0,"sloc":{"logical":19,"physical":21},"errors":[],"lineEnd":89,"lineStart":69,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.05,"difficulty":3.846,"effort":577.374,"length":36,"time":32.076,"vocabulary":18,"volume":150.117,"operands":{"distinct":13,"total":20,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","mouseDown","MouseEvent","createEvent","fireEvent","expect","defaultPrevented","toBe","true"]},"operators":{"distinct":5,"total":16,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":9},"errors":[],"lineEnd":99,"lineStart":91,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.083,"difficulty":4.5,"effort":1124.921,"length":52,"time":62.496,"vocabulary":28,"volume":249.982,"operands":{"distinct":21,"total":27,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","Array","from","length","5","forEach","fireEvent","mouseDown","mouseMove","clientX","0","clientY","sloppyClickThreshold","expect","isDragging","toBe","true"]},"operators":{"distinct":7,"total":25,"identifiers":["const","=","{}","()",".",":","function=>"]}},"paramCount":0,"sloc":{"logical":16,"physical":19},"errors":[],"lineEnd":119,"lineStart":101,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.021,"difficulty":1.375,"effort":86.785,"length":19,"time":4.821,"vocabulary":10,"volume":63.117,"operands":{"distinct":8,"total":11,"identifiers":["fireEvent","mouseDown","handle","mouseUp","expect","isDragging","toBe","false"]},"operators":{"distinct":2,"total":8,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":110,"lineStart":105,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.064,"difficulty":4.735,"effort":911.868,"length":42,"time":50.659,"vocabulary":24,"volume":192.568,"operands":{"distinct":17,"total":23,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","fireEvent","mouseDown","mouseMove","clientX","0","clientY","sloppyClickThreshold","1","expect","isDragging","toBe","false"]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","{}","()",".",":","-"]}},"paramCount":0,"sloc":{"logical":12,"physical":12},"errors":[],"lineEnd":132,"lineStart":121,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.087,"difficulty":5,"effort":1297.986,"length":54,"time":72.11,"vocabulary":28,"volume":259.597,"operands":{"distinct":21,"total":30,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","mouseDown","Event","createEvent","button","primaryButton","1","fireEvent","mouseMove","clientX","0","clientY","sloppyClickThreshold","expect","isDragging","toBe","false"]},"operators":{"distinct":7,"total":24,"identifiers":["const","=","{}","()",".",":","+"]}},"paramCount":0,"sloc":{"logical":15,"physical":15},"errors":[],"lineEnd":148,"lineStart":134,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.045,"difficulty":5,"effort":669.899,"length":31,"time":37.217,"vocabulary":20,"volume":133.98,"operands":{"distinct":12,"total":15,"identifiers":["keys","\"ctrlKey\"","\"altKey\"","\"shiftKey\"","\"metaKey\"","getByText","render","handle","HTMLElement","\"item: 0\"","forEach","key"]},"operators":{"distinct":8,"total":16,"identifiers":["const","=","[]",",","{}","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":19},"errors":[],"lineEnd":168,"lineStart":150,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.056,"difficulty":4.125,"effort":699.016,"length":38,"time":38.834,"vocabulary":22,"volume":169.458,"operands":{"distinct":16,"total":22,"identifiers":["mouseDown","MouseEvent","createEvent","handle","key","true","fireEvent","mouseMove","clientX","0","clientY","sloppyClickThreshold","expect","isDragging","toBe","false"]},"operators":{"distinct":6,"total":16,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":10,"physical":12},"errors":[],"lineEnd":167,"lineStart":156,"name":"<anon method-12>","paramNames":["key"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.617,"halstead":{"bugs":0.091,"difficulty":2.6,"effort":9265.083,"length":43.615,"time":514.727,"vocabulary":6,"volume":274.14,"operands":{"distinct":4.923,"total":23.769},"operators":{"distinct":1.077,"total":19.846}},"paramCount":0.231,"sloc":{"logical":12.462,"physical":13}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":12.675,"halstead":{"bugs":0.066,"difficulty":5.073,"effort":1127.047,"length":43.667,"time":62.614,"vocabulary":21.167,"volume":197.463,"operands":{"distinct":15,"total":23.917},"operators":{"distinct":6.167,"total":19.75}},"paramCount":0.25,"sloc":{"logical":11.917,"physical":16.25}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/mouse-sensor/prevent-standard-keys-while-dragging.spec.js","testCases":1,"smells":8,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  14 |   expect(isDragging(handle)).toBe(true);\n  15 |\n> 16 |   [keyCodes.enter, keyCodes.tab].forEach((keyCode: number) => {\n     |                                 ^ Conditional Test Logic\n  17 |     const event: Event = createEvent.keyDown(handle, { keyCode });\n  18 |     fireEvent(handle, event);\n  19 |     expect(event.defaultPrevented).toBe(true);","start":{"line":16,"column":33,"index":581}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  12 |\n  13 |   simpleLift(mouse, handle);\n> 14 |   expect(isDragging(handle)).toBe(true);\n     |  ^ Duplicate Assert\n  15 |\n  16 |   [keyCodes.enter, keyCodes.tab].forEach((keyCode: number) => {\n  17 |     const event: Event = createEvent.keyDown(handle, { keyCode });","start":{"line":14,"column":2,"index":508}},{"frame":"  12 |\n  13 |   simpleLift(mouse, handle);\n> 14 |   expect(isDragging(handle)).toBe(true);\n     |  ^ Duplicate Assert\n  15 |\n  16 |   [keyCodes.enter, keyCodes.tab].forEach((keyCode: number) => {\n  17 |     const event: Event = createEvent.keyDown(handle, { keyCode });","start":{"line":14,"column":2,"index":508}},{"frame":"  18 |     fireEvent(handle, event);\n  19 |     expect(event.defaultPrevented).toBe(true);\n> 20 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  21 |   });\n  22 | });\n  23 |","start":{"line":20,"column":4,"index":760}},{"frame":"  18 |     fireEvent(handle, event);\n  19 |     expect(event.defaultPrevented).toBe(true);\n> 20 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  21 |   });\n  22 | });\n  23 |","start":{"line":20,"column":4,"index":760}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  11 |   const handle: HTMLElement = getByText('item: 0');\n  12 |\n> 13 |   simpleLift(mouse, handle);\n     |  ^ Eager Test\n  14 |   expect(isDragging(handle)).toBe(true);\n  15 |\n  16 |   [keyCodes.enter, keyCodes.tab].forEach((keyCode: number) => {","start":{"line":13,"column":2,"index":479}},{"frame":"  12 |\n  13 |   simpleLift(mouse, handle);\n> 14 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  15 |\n  16 |   [keyCodes.enter, keyCodes.tab].forEach((keyCode: number) => {\n  17 |     const event: Event = createEvent.keyDown(handle, { keyCode });","start":{"line":14,"column":9,"index":515}},{"frame":"  18 |     fireEvent(handle, event);\n  19 |     expect(event.defaultPrevented).toBe(true);\n> 20 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  21 |   });\n  22 | });\n  23 |","start":{"line":20,"column":11,"index":767}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":13.636,"halstead":{"bugs":0.13,"difficulty":7.167,"effort":2795,"length":78,"time":155.278,"vocabulary":32,"volume":390,"operands":{"distinct":24,"total":43,"identifiers":["it","\"should prevent enter or tab being pressed during a drag\"","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","expect","isDragging","toBe","true","keyCodes","enter","tab","forEach","keyCode","event","Event","createEvent","keyDown","fireEvent","defaultPrevented"]},"operators":{"distinct":8,"total":35,"identifiers":["()","function=>","const","=","{}",".","[]",","]}},"paramCount":1,"sloc":{"logical":22,"physical":23}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/view/key-codes","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/helpers","type":"esm"},{"line":7,"path":"../../util/controls","type":"esm"}],"errors":[],"lineEnd":23,"lineStart":1,"maintainability":115.34,"methods":[{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.061,"difficulty":5.25,"effort":962.842,"length":40,"time":53.491,"vocabulary":24,"volume":183.399,"operands":{"distinct":16,"total":21,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","expect","isDragging","toBe","true","keyCodes","enter","tab","forEach","keyCode"]},"operators":{"distinct":8,"total":19,"identifiers":["const","=","{}","()",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":14},"errors":[],"lineEnd":22,"lineStart":9,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.046,"difficulty":4.167,"effort":579.057,"length":34,"time":32.17,"vocabulary":17,"volume":138.974,"operands":{"distinct":12,"total":20,"identifiers":["event","Event","createEvent","keyDown","handle","keyCode","fireEvent","expect","defaultPrevented","toBe","true","isDragging"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","()",".","{}"]}},"paramCount":1,"sloc":{"logical":9,"physical":6},"errors":[],"lineEnd":21,"lineStart":16,"name":"<anon method-2>","paramNames":["keyCode"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.043,"difficulty":2.389,"effort":931.667,"length":26,"time":51.759,"vocabulary":10.667,"volume":130,"operands":{"distinct":8,"total":14.333},"operators":{"distinct":2.667,"total":11.667}},"paramCount":0.333,"sloc":{"logical":7.333,"physical":7.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":10.101,"halstead":{"bugs":0.054,"difficulty":4.708,"effort":770.95,"length":37,"time":42.831,"vocabulary":20.5,"volume":161.186,"operands":{"distinct":14,"total":20.5},"operators":{"distinct":6.5,"total":16.5}},"paramCount":0.5,"sloc":{"logical":10,"physical":10}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/mouse-sensor/force-press.spec.js","testCases":5,"smells":13,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  91 |\n  92 |     simpleLift(mouse, handle);\n> 93 |     expect(isDragging(handle)).toBe(true);\n     |    ^ Duplicate Assert\n  94 |\n  95 |     const event: Event = new Event('webkitmouseforcedown', {\n  96 |       bubbles: true,","start":{"line":93,"column":4,"index":2953}},{"frame":"  100 |     expect(event.defaultPrevented).toBe(false);\n  101 |\n> 102 |     expect(isDragging(handle)).toBe(false);\n      |    ^ Duplicate Assert\n  103 |   });\n  104 | });\n  105 |","start":{"line":102,"column":4,"index":3190}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  20 |\n  21 |     // lift not prevented\n> 22 |     simpleLift(mouse, handle);\n     |    ^ Eager Test\n  23 |     expect(isDragging(handle)).toBe(true);\n  24 |   });\n  25 |","start":{"line":22,"column":4,"index":709}},{"frame":"  21 |     // lift not prevented\n  22 |     simpleLift(mouse, handle);\n> 23 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  24 |   });\n  25 |\n  26 |   it('should prevent the default of a `webkitmouseforcedown` event', () => {","start":{"line":23,"column":11,"index":747}},{"frame":"  90 |     const handle: HTMLElement = getByText('item: 0');\n  91 |\n> 92 |     simpleLift(mouse, handle);\n     |    ^ Eager Test\n  93 |     expect(isDragging(handle)).toBe(true);\n  94 |\n  95 |     const event: Event = new Event('webkitmouseforcedown', {","start":{"line":92,"column":4,"index":2922}},{"frame":"  91 |\n  92 |     simpleLift(mouse, handle);\n> 93 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  94 |\n  95 |     const event: Event = new Event('webkitmouseforcedown', {\n  96 |       bubbles: true,","start":{"line":93,"column":11,"index":2960}},{"frame":"  100 |     expect(event.defaultPrevented).toBe(false);\n  101 |\n> 102 |     expect(isDragging(handle)).toBe(false);\n      |           ^ Eager Test\n  103 |   });\n  104 | });\n  105 |","start":{"line":102,"column":11,"index":3197}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  20 |\n  21 |     // lift not prevented\n> 22 |     simpleLift(mouse, handle);\n     |    ^ Lazy Test\n  23 |     expect(isDragging(handle)).toBe(true);\n  24 |   });\n  25 |","start":{"line":22,"column":4,"index":709}},{"frame":"  21 |     // lift not prevented\n  22 |     simpleLift(mouse, handle);\n> 23 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Lazy Test\n  24 |   });\n  25 |\n  26 |   it('should prevent the default of a `webkitmouseforcedown` event', () => {","start":{"line":23,"column":11,"index":747}},{"frame":"  47 |\n  48 |     // dragging not aborted\n> 49 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Lazy Test\n  50 |   });\n  51 | });\n  52 |","start":{"line":49,"column":11,"index":1481}},{"frame":"  82 |\n  83 |     mouse.lift(handle);\n> 84 |     expect(isDragging(handle)).toBe(false);\n     |           ^ Lazy Test\n  85 |   });\n  86 |\n  87 |   it('should cancel an active drag with a webkitmouseforcedown event', () => {","start":{"line":84,"column":11,"index":2615}},{"frame":"  90 |     const handle: HTMLElement = getByText('item: 0');\n  91 |\n> 92 |     simpleLift(mouse, handle);\n     |    ^ Lazy Test\n  93 |     expect(isDragging(handle)).toBe(true);\n  94 |\n  95 |     const event: Event = new Event('webkitmouseforcedown', {","start":{"line":92,"column":4,"index":2922}},{"frame":"  91 |\n  92 |     simpleLift(mouse, handle);\n> 93 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Lazy Test\n  94 |\n  95 |     const event: Event = new Event('webkitmouseforcedown', {\n  96 |       bubbles: true,","start":{"line":93,"column":11,"index":2960}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":7.619,"halstead":{"bugs":0.689,"difficulty":24.75,"effort":51141.1,"length":372,"time":2841.172,"vocabulary":47,"volume":2066.307,"operands":{"distinct":38,"total":209,"identifiers":["describe","\"force press is not respected\"","it","\"should prevent the default of a `webkitmouseforcewillbegin` event\"","getByText","render","handle","HTMLElement","\"item: 0\"","event","Event","\"webkitmouseforcewillbegin\"","bubbles","true","cancelable","fireEvent","expect","defaultPrevented","toBe","simpleLift","mouse","isDragging","\"should prevent the default of a `webkitmouseforcedown` event\"","preLift","first","\"webkitmouseforcedown\"","lift","second","\"force press is respected\"","\"should not prevent the default of a `webkitmouseforcewillbegin` event\"","items","Item","id","\"0\"","shouldRespectForcePress","false","\"should cancel a pending drag with a webkitmouseforcedown event\"","\"should cancel an active drag with a webkitmouseforcedown event\""]},"operators":{"distinct":9,"total":163,"identifiers":["()","function=>","const","=","{}","new",":",".","[]"]}},"paramCount":0,"sloc":{"logical":105,"physical":105}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/controls","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/helpers","type":"esm"}],"errors":[],"lineEnd":105,"lineStart":1,"maintainability":99.324,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should prevent the default of a `webkitmouseforcewillbegin` event\"","\"should prevent the default of a `webkitmouseforcedown` event\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":44},"errors":[],"lineEnd":51,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.084,"difficulty":6.028,"effort":1511.575,"length":54,"time":83.976,"vocabulary":25,"volume":250.768,"operands":{"distinct":18,"total":31,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","event","Event","\"webkitmouseforcewillbegin\"","bubbles","true","cancelable","fireEvent","expect","defaultPrevented","toBe","simpleLift","mouse","isDragging"]},"operators":{"distinct":7,"total":23,"identifiers":["const","=","{}","()","new",":","."]}},"paramCount":0,"sloc":{"logical":15,"physical":16},"errors":[],"lineEnd":24,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.138,"difficulty":8.75,"effort":3619.658,"length":87,"time":201.092,"vocabulary":27,"volume":413.675,"operands":{"distinct":20,"total":50,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","mouse","preLift","first","Event","\"webkitmouseforcedown\"","bubbles","true","cancelable","fireEvent","expect","defaultPrevented","toBe","lift","second","isDragging"]},"operators":{"distinct":7,"total":37,"identifiers":["const","=","{}","()",".","new",":"]}},"paramCount":0,"sloc":{"logical":22,"physical":25},"errors":[],"lineEnd":50,"lineStart":26,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should not prevent the default of a `webkitmouseforcewillbegin` event\"","\"should cancel a pending drag with a webkitmouseforcedown event\"","\"should cancel an active drag with a webkitmouseforcedown event\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":52},"errors":[],"lineEnd":104,"lineStart":53,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.087,"difficulty":5.714,"effort":1499.034,"length":54,"time":83.28,"vocabulary":29,"volume":262.331,"operands":{"distinct":21,"total":30,"identifiers":["items","Item","id","\"0\"","shouldRespectForcePress","true","getByText","render","handle","HTMLElement","\"item: 0\"","event","Event","\"webkitmouseforcewillbegin\"","bubbles","cancelable","fireEvent","expect","defaultPrevented","toBe","false"]},"operators":{"distinct":8,"total":24,"identifiers":["const","=","[]","{}",":","()","new","."]}},"paramCount":0,"sloc":{"logical":14,"physical":13},"errors":[],"lineEnd":66,"lineStart":54,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.123,"difficulty":6.56,"effort":2415.659,"length":73,"time":134.203,"vocabulary":33,"volume":368.241,"operands":{"distinct":25,"total":41,"identifiers":["items","Item","id","\"0\"","shouldRespectForcePress","true","getByText","render","handle","HTMLElement","\"item: 0\"","mouse","preLift","event","Event","\"webkitmouseforcedown\"","bubbles","cancelable","fireEvent","expect","defaultPrevented","toBe","false","lift","isDragging"]},"operators":{"distinct":8,"total":32,"identifiers":["const","=","[]","{}",":","()",".","new"]}},"paramCount":0,"sloc":{"logical":19,"physical":18},"errors":[],"lineEnd":85,"lineStart":68,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.127,"difficulty":7.167,"effort":2723.333,"length":76,"time":151.296,"vocabulary":32,"volume":380,"operands":{"distinct":24,"total":43,"identifiers":["items","Item","id","\"0\"","shouldRespectForcePress","true","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","expect","isDragging","toBe","event","Event","\"webkitmouseforcedown\"","bubbles","cancelable","fireEvent","defaultPrevented","false"]},"operators":{"distinct":8,"total":33,"identifiers":["const","=","[]","{}",":","()",".","new"]}},"paramCount":0,"sloc":{"logical":21,"physical":17},"errors":[],"lineEnd":103,"lineStart":87,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.952,"halstead":{"bugs":0.086,"difficulty":3.094,"effort":6392.637,"length":46.5,"time":355.147,"vocabulary":5.875,"volume":258.288,"operands":{"distinct":4.75,"total":26.125},"operators":{"distinct":1.125,"total":20.375}},"paramCount":0,"sloc":{"logical":13.125,"physical":13.125}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":10.007,"halstead":{"bugs":0.082,"difficulty":5.293,"effort":1691.508,"length":52,"time":93.973,"vocabulary":22.429,"volume":246.373,"operands":{"distinct":16.429,"total":29.286},"operators":{"distinct":6,"total":22.714}},"paramCount":0,"sloc":{"logical":14.429,"physical":26.429}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/mouse-sensor/click-blocking.spec.js","testCases":3,"smells":19,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  38 |\n  39 |   simpleLift(mouse, handle);\n> 40 |   expect(isDragging(handle)).toBe(true);\n     |  ^ Duplicate Assert\n  41 |\n  42 |   // cancel\n  43 |   fireEvent.keyDown(handle, { keyCode: keyCodes.escape });","start":{"line":40,"column":2,"index":1277}},{"frame":"  45 |   // drag cancelled\n  46 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n> 47 |   expect(isDragging(handle)).toBe(false);\n     |  ^ Duplicate Assert\n  48 |\n  49 |   // click event prevented\n  50 |   const click: Event = createEvent.click(handle);","start":{"line":47,"column":2,"index":1462}},{"frame":"  59 |\n  60 |   simpleLift(mouse, handle);\n> 61 |   expect(isDragging(handle)).toBe(true);\n     |  ^ Duplicate Assert\n  62 |\n  63 |   // cancel\n  64 |   fireEvent.mouseUp(handle);","start":{"line":61,"column":2,"index":1903}},{"frame":"  65 |\n  66 |   expect(getDropReason(onDragEnd)).toBe('DROP');\n> 67 |   expect(isDragging(handle)).toBe(false);\n     |  ^ Duplicate Assert\n  68 |\n  69 |   // click event prevented\n  70 |   const click: Event = createEvent.click(handle);","start":{"line":67,"column":2,"index":2036}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  37 |   const handle: HTMLElement = getByText('item: 0');\n  38 |\n> 39 |   simpleLift(mouse, handle);\n     |  ^ Eager Test\n  40 |   expect(isDragging(handle)).toBe(true);\n  41 |\n  42 |   // cancel","start":{"line":39,"column":2,"index":1248}},{"frame":"  38 |\n  39 |   simpleLift(mouse, handle);\n> 40 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  41 |\n  42 |   // cancel\n  43 |   fireEvent.keyDown(handle, { keyCode: keyCodes.escape });","start":{"line":40,"column":9,"index":1284}},{"frame":"  44 |\n  45 |   // drag cancelled\n> 46 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |         ^ Eager Test\n  47 |   expect(isDragging(handle)).toBe(false);\n  48 |\n  49 |   // click event prevented","start":{"line":46,"column":9,"index":1418}},{"frame":"  45 |   // drag cancelled\n  46 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n> 47 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Eager Test\n  48 |\n  49 |   // click event prevented\n  50 |   const click: Event = createEvent.click(handle);","start":{"line":47,"column":9,"index":1469}},{"frame":"  58 |   const handle: HTMLElement = getByText('item: 0');\n  59 |\n> 60 |   simpleLift(mouse, handle);\n     |  ^ Eager Test\n  61 |   expect(isDragging(handle)).toBe(true);\n  62 |\n  63 |   // cancel","start":{"line":60,"column":2,"index":1874}},{"frame":"  59 |\n  60 |   simpleLift(mouse, handle);\n> 61 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  62 |\n  63 |   // cancel\n  64 |   fireEvent.mouseUp(handle);","start":{"line":61,"column":9,"index":1910}},{"frame":"  64 |   fireEvent.mouseUp(handle);\n  65 |\n> 66 |   expect(getDropReason(onDragEnd)).toBe('DROP');\n     |         ^ Eager Test\n  67 |   expect(isDragging(handle)).toBe(false);\n  68 |\n  69 |   // click event prevented","start":{"line":66,"column":9,"index":1994}},{"frame":"  65 |\n  66 |   expect(getDropReason(onDragEnd)).toBe('DROP');\n> 67 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Eager Test\n  68 |\n  69 |   // click event prevented\n  70 |   const click: Event = createEvent.click(handle);","start":{"line":67,"column":9,"index":2043}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  24 |\n  25 |   // drag not started\n> 26 |   expect(isDragging(handle)).toBe(false);\n     |         ^ Lazy Test\n  27 |\n  28 |   const click: Event = createEvent.click(handle);\n  29 |   fireEvent(handle, click);","start":{"line":26,"column":9,"index":866}},{"frame":"  37 |   const handle: HTMLElement = getByText('item: 0');\n  38 |\n> 39 |   simpleLift(mouse, handle);\n     |  ^ Lazy Test\n  40 |   expect(isDragging(handle)).toBe(true);\n  41 |\n  42 |   // cancel","start":{"line":39,"column":2,"index":1248}},{"frame":"  38 |\n  39 |   simpleLift(mouse, handle);\n> 40 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Lazy Test\n  41 |\n  42 |   // cancel\n  43 |   fireEvent.keyDown(handle, { keyCode: keyCodes.escape });","start":{"line":40,"column":9,"index":1284}},{"frame":"  44 |\n  45 |   // drag cancelled\n> 46 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |         ^ Lazy Test\n  47 |   expect(isDragging(handle)).toBe(false);\n  48 |\n  49 |   // click event prevented","start":{"line":46,"column":9,"index":1418}},{"frame":"  58 |   const handle: HTMLElement = getByText('item: 0');\n  59 |\n> 60 |   simpleLift(mouse, handle);\n     |  ^ Lazy Test\n  61 |   expect(isDragging(handle)).toBe(true);\n  62 |\n  63 |   // cancel","start":{"line":60,"column":2,"index":1874}},{"frame":"  59 |\n  60 |   simpleLift(mouse, handle);\n> 61 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Lazy Test\n  62 |\n  63 |   // cancel\n  64 |   fireEvent.mouseUp(handle);","start":{"line":61,"column":9,"index":1910}},{"frame":"  64 |   fireEvent.mouseUp(handle);\n  65 |\n> 66 |   expect(getDropReason(onDragEnd)).toBe('DROP');\n     |         ^ Lazy Test\n  67 |   expect(isDragging(handle)).toBe(false);\n  68 |\n  69 |   // click event prevented","start":{"line":66,"column":9,"index":1994}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":5.556,"halstead":{"bugs":0.459,"difficulty":12.895,"effort":17774.816,"length":251,"time":987.49,"vocabulary":45,"volume":1378.455,"operands":{"distinct":38,"total":140,"identifiers":["it","\"should not prevent a subsequent click if aborting during a pending drag\"","getByText","render","handle","HTMLElement","\"item: 0\"","fireEvent","mouseDown","keyDown","keyCode","keyCodes","escape","mouseMove","clientX","0","clientY","sloppyClickThreshold","expect","isDragging","toBe","false","click","Event","createEvent","defaultPrevented","\"should prevent a subsequent click if cancelling a drag\"","onDragEnd","jest","fn","simpleLift","mouse","true","getDropReason","\"CANCEL\"","\"should prevent a subsequent click if dropping a drag\"","mouseUp","\"DROP\""]},"operators":{"distinct":7,"total":111,"identifiers":["()","function=>","const","=","{}",".",":"]}},"paramCount":0,"sloc":{"logical":72,"physical":74}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/view/key-codes","type":"esm"},{"line":5,"path":"../../../../../src/view/use-sensor-marshal/sensors/use-mouse-sensor","type":"esm"},{"line":6,"path":"../../util/app","type":"esm"},{"line":7,"path":"../../util/helpers","type":"esm"},{"line":8,"path":"../../util/controls","type":"esm"}],"errors":[],"lineEnd":74,"lineStart":1,"maintainability":95.451,"methods":[{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.119,"difficulty":5.125,"effort":1835.79,"length":73,"time":101.988,"vocabulary":30,"volume":358.203,"operands":{"distinct":24,"total":41,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","fireEvent","mouseDown","keyDown","keyCode","keyCodes","escape","mouseMove","clientX","0","clientY","sloppyClickThreshold","expect","isDragging","toBe","false","click","Event","createEvent","defaultPrevented"]},"operators":{"distinct":6,"total":32,"identifiers":["const","=","{}","()",".",":"]}},"paramCount":0,"sloc":{"logical":19,"physical":23},"errors":[],"lineEnd":32,"lineStart":10,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.143,"difficulty":5.538,"effort":2381.538,"length":86,"time":132.308,"vocabulary":32,"volume":430,"operands":{"distinct":26,"total":48,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","expect","isDragging","toBe","true","fireEvent","keyDown","keyCode","keyCodes","escape","getDropReason","\"CANCEL\"","false","click","Event","createEvent","defaultPrevented"]},"operators":{"distinct":6,"total":38,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":24,"physical":20},"errors":[],"lineEnd":53,"lineStart":34,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.128,"difficulty":4.891,"effort":1881.139,"length":80,"time":104.508,"vocabulary":28,"volume":384.588,"operands":{"distinct":23,"total":45,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","mouse","expect","isDragging","toBe","true","fireEvent","mouseUp","getDropReason","\"DROP\"","false","click","Event","createEvent","defaultPrevented"]},"operators":{"distinct":5,"total":35,"identifiers":["const","=","()",".","{}"]}},"paramCount":0,"sloc":{"logical":23,"physical":19},"errors":[],"lineEnd":73,"lineStart":55,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.389,"halstead":{"bugs":0.115,"difficulty":3.224,"effort":4443.704,"length":62.75,"time":246.872,"vocabulary":11.25,"volume":344.614,"operands":{"distinct":9.5,"total":35},"operators":{"distinct":1.75,"total":27.75}},"paramCount":0,"sloc":{"logical":18,"physical":18.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":4.593,"halstead":{"bugs":0.13,"difficulty":5.185,"effort":2032.823,"length":79.667,"time":112.935,"vocabulary":30,"volume":390.93,"operands":{"distinct":24.333,"total":44.667},"operators":{"distinct":5.667,"total":35}},"paramCount":0,"sloc":{"logical":22,"physical":20.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/keyboard-sensor/stopping-a-drag.spec.js","testCases":3,"smells":19,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  49 |     'wheel',\n  50 |     supportedEventName,\n> 51 |   ].forEach((eventName: string) => {\n     |    ^ Conditional Test Logic\n  52 |     const onDragEnd = jest.fn();\n  53 |     const { getByText, unmount } = render(<App onDragEnd={onDragEnd} />);\n  54 |     const handle: HTMLElement = getByText('item: 0');","start":{"line":51,"column":4,"index":1653}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  13 |   const handle: HTMLElement = getByText('item: 0');\n  14 |\n> 15 |   simpleLift(keyboard, handle);\n     |  ^ Eager Test\n  16 |   expect(isDragging(handle)).toBe(true);\n  17 |\n  18 |   const event: Event = createEvent.keyDown(handle, { keyCode: keyCodes.space });","start":{"line":15,"column":2,"index":676}},{"frame":"  14 |\n  15 |   simpleLift(keyboard, handle);\n> 16 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  17 |\n  18 |   const event: Event = createEvent.keyDown(handle, { keyCode: keyCodes.space });\n  19 |   fireEvent(handle, event);","start":{"line":16,"column":9,"index":715}},{"frame":"  20 |\n  21 |   expect(event.defaultPrevented).toBe(true);\n> 22 |   expect(getDropReason(onDragEnd)).toBe('DROP');\n     |         ^ Eager Test\n  23 | });\n  24 |\n  25 | it('should prevent default on an escape press', () => {","start":{"line":22,"column":9,"index":912}},{"frame":"  28 |   const handle: HTMLElement = getByText('item: 0');\n  29 |\n> 30 |   simpleLift(keyboard, handle);\n     |  ^ Eager Test\n  31 |   expect(isDragging(handle)).toBe(true);\n  32 |\n  33 |   const event: Event = createEvent.keyDown(handle, {","start":{"line":30,"column":2,"index":1162}},{"frame":"  29 |\n  30 |   simpleLift(keyboard, handle);\n> 31 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  32 |\n  33 |   const event: Event = createEvent.keyDown(handle, {\n  34 |     keyCode: keyCodes.escape,","start":{"line":31,"column":9,"index":1201}},{"frame":"  37 |\n  38 |   expect(event.defaultPrevented).toBe(true);\n> 39 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |         ^ Eager Test\n  40 | });\n  41 |\n  42 | it('should not prevent the default behaviour for an indirect cancel', () => {","start":{"line":39,"column":9,"index":1406}},{"frame":"  54 |     const handle: HTMLElement = getByText('item: 0');\n  55 |\n> 56 |     simpleLift(keyboard, handle);\n     |    ^ Eager Test\n  57 |     expect(isDragging(handle)).toBe(true);\n  58 |\n  59 |     const event: Event = new Event(eventName, {","start":{"line":56,"column":4,"index":1852}},{"frame":"  55 |\n  56 |     simpleLift(keyboard, handle);\n> 57 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  58 |\n  59 |     const event: Event = new Event(eventName, {\n  60 |       bubbles: true,","start":{"line":57,"column":11,"index":1893}},{"frame":"  67 |     // not an explicit cancel\n  68 |     expect(event.defaultPrevented).toBe(false);\n> 69 |     expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |           ^ Eager Test\n  70 |\n  71 |     unmount();\n  72 |   });","start":{"line":69,"column":11,"index":2170}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  13 |   const handle: HTMLElement = getByText('item: 0');\n  14 |\n> 15 |   simpleLift(keyboard, handle);\n     |  ^ Lazy Test\n  16 |   expect(isDragging(handle)).toBe(true);\n  17 |\n  18 |   const event: Event = createEvent.keyDown(handle, { keyCode: keyCodes.space });","start":{"line":15,"column":2,"index":676}},{"frame":"  14 |\n  15 |   simpleLift(keyboard, handle);\n> 16 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Lazy Test\n  17 |\n  18 |   const event: Event = createEvent.keyDown(handle, { keyCode: keyCodes.space });\n  19 |   fireEvent(handle, event);","start":{"line":16,"column":9,"index":715}},{"frame":"  20 |\n  21 |   expect(event.defaultPrevented).toBe(true);\n> 22 |   expect(getDropReason(onDragEnd)).toBe('DROP');\n     |         ^ Lazy Test\n  23 | });\n  24 |\n  25 | it('should prevent default on an escape press', () => {","start":{"line":22,"column":9,"index":912}},{"frame":"  28 |   const handle: HTMLElement = getByText('item: 0');\n  29 |\n> 30 |   simpleLift(keyboard, handle);\n     |  ^ Lazy Test\n  31 |   expect(isDragging(handle)).toBe(true);\n  32 |\n  33 |   const event: Event = createEvent.keyDown(handle, {","start":{"line":30,"column":2,"index":1162}},{"frame":"  29 |\n  30 |   simpleLift(keyboard, handle);\n> 31 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Lazy Test\n  32 |\n  33 |   const event: Event = createEvent.keyDown(handle, {\n  34 |     keyCode: keyCodes.escape,","start":{"line":31,"column":9,"index":1201}},{"frame":"  37 |\n  38 |   expect(event.defaultPrevented).toBe(true);\n> 39 |   expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |         ^ Lazy Test\n  40 | });\n  41 |\n  42 | it('should not prevent the default behaviour for an indirect cancel', () => {","start":{"line":39,"column":9,"index":1406}},{"frame":"  54 |     const handle: HTMLElement = getByText('item: 0');\n  55 |\n> 56 |     simpleLift(keyboard, handle);\n     |    ^ Lazy Test\n  57 |     expect(isDragging(handle)).toBe(true);\n  58 |\n  59 |     const event: Event = new Event(eventName, {","start":{"line":56,"column":4,"index":1852}},{"frame":"  55 |\n  56 |     simpleLift(keyboard, handle);\n> 57 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Lazy Test\n  58 |\n  59 |     const event: Event = new Event(eventName, {\n  60 |       bubbles: true,","start":{"line":57,"column":11,"index":1893}},{"frame":"  67 |     // not an explicit cancel\n  68 |     expect(event.defaultPrevented).toBe(false);\n> 69 |     expect(getDropReason(onDragEnd)).toBe('CANCEL');\n     |           ^ Lazy Test\n  70 |\n  71 |     unmount();\n  72 |   });","start":{"line":69,"column":11,"index":2170}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":7.042,"halstead":{"bugs":0.488,"difficulty":15.556,"effort":22752.862,"length":253,"time":1264.048,"vocabulary":55,"volume":1462.684,"operands":{"distinct":45,"total":140,"identifiers":["it","\"should prevent default on the event that causes a drop\"","onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","keyboard","expect","isDragging","toBe","true","event","Event","createEvent","keyDown","keyCode","keyCodes","space","fireEvent","defaultPrevented","getDropReason","\"DROP\"","\"should prevent default on an escape press\"","escape","\"CANCEL\"","\"should not prevent the default behaviour for an indirect cancel\"","\"mousedown\"","\"mouseup\"","\"click\"","\"touchstart\"","\"resize\"","\"wheel\"","supportedEventName","forEach","eventName","unmount","bubbles","cancelable","target","false"]},"operators":{"distinct":10,"total":113,"identifiers":["()","function=>","const","=",".","{}",":","[]",",","new"]}},"paramCount":1,"sloc":{"logical":71,"physical":74}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/app","type":"esm"},{"line":5,"path":"../../util/helpers","type":"esm"},{"line":6,"path":"../../../../../src/view/key-codes","type":"esm"},{"line":7,"path":"../../util/controls","type":"esm"},{"line":8,"path":"../../../../../src/view/use-sensor-marshal/sensors/util/supported-page-visibility-event-name","type":"esm"}],"errors":[],"lineEnd":74,"lineStart":1,"maintainability":99.211,"methods":[{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.119,"difficulty":4.8,"effort":1712.17,"length":72,"time":95.121,"vocabulary":31,"volume":356.702,"operands":{"distinct":25,"total":40,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","keyboard","expect","isDragging","toBe","true","event","Event","createEvent","keyDown","keyCode","keyCodes","space","fireEvent","defaultPrevented","getDropReason","\"DROP\""]},"operators":{"distinct":6,"total":32,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":20,"physical":14},"errors":[],"lineEnd":23,"lineStart":10,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.119,"difficulty":4.8,"effort":1712.17,"length":72,"time":95.121,"vocabulary":31,"volume":356.702,"operands":{"distinct":25,"total":40,"identifiers":["onDragEnd","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","keyboard","expect","isDragging","toBe","true","event","Event","createEvent","keyDown","keyCode","keyCodes","escape","fireEvent","defaultPrevented","getDropReason","\"CANCEL\""]},"operators":{"distinct":6,"total":32,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":20,"physical":16},"errors":[],"lineEnd":40,"lineStart":25,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.024,"difficulty":2.5,"effort":180.849,"length":19,"time":10.047,"vocabulary":14,"volume":72.34,"operands":{"distinct":9,"total":9,"identifiers":["\"mousedown\"","\"mouseup\"","\"click\"","\"touchstart\"","\"resize\"","\"wheel\"","supportedEventName","forEach","eventName"]},"operators":{"distinct":5,"total":10,"identifiers":["()",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":32},"errors":[],"lineEnd":73,"lineStart":42,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.131,"difficulty":6.058,"effort":2383.476,"length":78,"time":132.415,"vocabulary":33,"volume":393.463,"operands":{"distinct":26,"total":45,"identifiers":["onDragEnd","jest","fn","getByText","unmount","render","handle","HTMLElement","\"item: 0\"","simpleLift","keyboard","expect","isDragging","toBe","true","event","Event","eventName","bubbles","cancelable","target","fireEvent","defaultPrevented","false","getDropReason","\"CANCEL\""]},"operators":{"distinct":7,"total":33,"identifiers":["const","=","()",".","{}","new",":"]}},"paramCount":1,"sloc":{"logical":23,"physical":22},"errors":[],"lineEnd":72,"lineStart":51,"name":"<anon method-4>","paramNames":["eventName"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.408,"halstead":{"bugs":0.098,"difficulty":3.111,"effort":4550.572,"length":50.6,"time":252.81,"vocabulary":11,"volume":292.537,"operands":{"distinct":9,"total":28},"operators":{"distinct":2,"total":22.6}},"paramCount":0.2,"sloc":{"logical":14.2,"physical":14.8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":16.087,"halstead":{"bugs":0.098,"difficulty":4.539,"effort":1497.167,"length":60.25,"time":83.176,"vocabulary":27.25,"volume":294.802,"operands":{"distinct":21.25,"total":33.5},"operators":{"distinct":6,"total":26.75}},"paramCount":0.25,"sloc":{"logical":16.25,"physical":21}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/keyboard-sensor/prevent-standard-keys-while-dragging.spec.js","testCases":1,"smells":3,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  14 |   expect(isDragging(handle)).toBe(true);\n  15 |\n> 16 |   [keyCodes.enter, keyCodes.tab].forEach((keyCode: number) => {\n     |                                 ^ Conditional Test Logic\n  17 |     const event: Event = createEvent.keyDown(handle, { keyCode });\n  18 |     fireEvent(handle, event);\n  19 |     expect(event.defaultPrevented).toBe(true);","start":{"line":16,"column":33,"index":587}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  11 |   const handle: HTMLElement = getByText('item: 0');\n  12 |\n> 13 |   simpleLift(keyboard, handle);\n     |  ^ Eager Test\n  14 |   expect(isDragging(handle)).toBe(true);\n  15 |\n  16 |   [keyCodes.enter, keyCodes.tab].forEach((keyCode: number) => {","start":{"line":13,"column":2,"index":482}},{"frame":"  12 |\n  13 |   simpleLift(keyboard, handle);\n> 14 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Eager Test\n  15 |\n  16 |   [keyCodes.enter, keyCodes.tab].forEach((keyCode: number) => {\n  17 |     const event: Event = createEvent.keyDown(handle, { keyCode });","start":{"line":14,"column":9,"index":521}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":15.789,"halstead":{"bugs":0.115,"difficulty":6.333,"effort":2185,"length":69,"time":121.389,"vocabulary":32,"volume":345,"operands":{"distinct":24,"total":38,"identifiers":["it","\"should prevent enter or tab being pressed during a drag\"","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","keyboard","expect","isDragging","toBe","true","keyCodes","enter","tab","forEach","keyCode","event","Event","createEvent","keyDown","fireEvent","defaultPrevented"]},"operators":{"distinct":8,"total":31,"identifiers":["()","function=>","const","=","{}",".","[]",","]}},"paramCount":1,"sloc":{"logical":19,"physical":22}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/view/key-codes","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/helpers","type":"esm"},{"line":7,"path":"../../util/controls","type":"esm"}],"errors":[],"lineEnd":22,"lineStart":1,"maintainability":118.557,"methods":[{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.061,"difficulty":5.25,"effort":962.842,"length":40,"time":53.491,"vocabulary":24,"volume":183.399,"operands":{"distinct":16,"total":21,"identifiers":["getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","keyboard","expect","isDragging","toBe","true","keyCodes","enter","tab","forEach","keyCode"]},"operators":{"distinct":8,"total":19,"identifiers":["const","=","{}","()",".","[]",",","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":13},"errors":[],"lineEnd":21,"lineStart":9,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.033,"difficulty":3.409,"effort":340.909,"length":25,"time":18.939,"vocabulary":16,"volume":100,"operands":{"distinct":11,"total":15,"identifiers":["event","Event","createEvent","keyDown","handle","keyCode","fireEvent","expect","defaultPrevented","toBe","true"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","()",".","{}"]}},"paramCount":1,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":20,"lineStart":16,"name":"<anon method-2>","paramNames":["keyCode"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.038,"difficulty":2.111,"effort":728.333,"length":23,"time":40.463,"vocabulary":10.667,"volume":115,"operands":{"distinct":8,"total":12.667},"operators":{"distinct":2.667,"total":10.333}},"paramCount":0.333,"sloc":{"logical":6.333,"physical":7.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":12.879,"halstead":{"bugs":0.047,"difficulty":4.33,"effort":651.876,"length":32.5,"time":36.215,"vocabulary":20,"volume":141.699,"operands":{"distinct":13.5,"total":18},"operators":{"distinct":6.5,"total":14.5}},"paramCount":0.5,"sloc":{"logical":8.5,"physical":9}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/keyboard-sensor/prevent-keyboard-scroll.spec.js","testCases":1,"smells":2,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  17 |   const handle: HTMLElement = getByText('item: 0');\n  18 |\n> 19 |   simpleLift(keyboard, handle);\n     |  ^ Eager Test\n  20 |\n  21 |   keys.forEach((keyCode: number) => {\n  22 |     const event: Event = createEvent.keyDown(handle, { keyCode });","start":{"line":19,"column":2,"index":593}},{"frame":"  24 |\n  25 |     expect(event.defaultPrevented).toBe(true);\n> 26 |     expect(isDragging(handle)).toBe(true);\n     |           ^ Eager Test\n  27 |   });\n  28 | });\n  29 |","start":{"line":26,"column":11,"index":818}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":15,"halstead":{"bugs":0.138,"difficulty":6.519,"effort":2708.261,"length":81,"time":150.459,"vocabulary":35,"volume":415.472,"operands":{"distinct":27,"total":44,"identifiers":["it","\"should prevent using keyboard keys that modify scroll\"","keys","keyCodes","pageUp","pageDown","home","end","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","keyboard","forEach","keyCode","event","Event","createEvent","keyDown","fireEvent","expect","defaultPrevented","toBe","true","isDragging"]},"operators":{"distinct":8,"total":37,"identifiers":["()","function=>","const","=","[]",",",".","{}"]}},"paramCount":1,"sloc":{"logical":20,"physical":29}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/view/key-codes","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/controls","type":"esm"},{"line":7,"path":"../../util/helpers","type":"esm"}],"errors":[],"lineEnd":29,"lineStart":1,"maintainability":116.992,"methods":[{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.065,"difficulty":5.867,"effort":1141.144,"length":43,"time":63.397,"vocabulary":23,"volume":194.513,"operands":{"distinct":15,"total":22,"identifiers":["keys","keyCodes","pageUp","pageDown","home","end","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","keyboard","forEach","keyCode"]},"operators":{"distinct":8,"total":21,"identifiers":["const","=","[]",",",".","{}","()","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":20},"errors":[],"lineEnd":28,"lineStart":9,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.046,"difficulty":4.167,"effort":579.057,"length":34,"time":32.17,"vocabulary":17,"volume":138.974,"operands":{"distinct":12,"total":20,"identifiers":["event","Event","createEvent","keyDown","handle","keyCode","fireEvent","expect","defaultPrevented","toBe","true","isDragging"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","()",".","{}"]}},"paramCount":1,"sloc":{"logical":9,"physical":7},"errors":[],"lineEnd":27,"lineStart":21,"name":"<anon method-2>","paramNames":["keyCode"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.046,"difficulty":2.173,"effort":902.754,"length":27,"time":50.153,"vocabulary":11.667,"volume":138.491,"operands":{"distinct":9,"total":14.667},"operators":{"distinct":2.667,"total":12.333}},"paramCount":0.333,"sloc":{"logical":6.667,"physical":9.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.056,"difficulty":5.017,"effort":860.101,"length":38.5,"time":47.783,"vocabulary":20,"volume":166.743,"operands":{"distinct":13.5,"total":21},"operators":{"distinct":6.5,"total":17.5}},"paramCount":0.5,"sloc":{"logical":9,"physical":13.5}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-handle/keyboard-sensor/directional-movement.spec.js","testCases":4,"smells":8,"smellInfo":[{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  13 |   const handle: HTMLElement = getByText('item: 1');\n  14 |\n> 15 |   simpleLift(keyboard, handle);\n     |  ^ Lazy Test\n  16 |\n  17 |   const event: Event = createEvent.keyDown(handle, {\n  18 |     keyCode: keyCodes.arrowUp,","start":{"line":15,"column":2,"index":504}},{"frame":"  34 |   const handle: HTMLElement = getByText('item: 0');\n  35 |\n> 36 |   simpleLift(keyboard, handle);\n     |  ^ Lazy Test\n  37 |\n  38 |   const event: Event = createEvent.keyDown(handle, {\n  39 |     keyCode: keyCodes.arrowDown,","start":{"line":36,"column":2,"index":1111}},{"frame":"  57 |   const handle: HTMLElement = getByText('item: 0');\n  58 |\n> 59 |   simpleLift(keyboard, handle);\n     |  ^ Lazy Test\n  60 |\n  61 |   const event: Event = createEvent.keyDown(handle, {\n  62 |     keyCode: keyCodes.arrowRight,","start":{"line":59,"column":2,"index":1754}},{"frame":"  80 |   const handle: HTMLElement = getByText('item: 1');\n  81 |\n> 82 |   simpleLift(keyboard, handle);\n     |  ^ Lazy Test\n  83 |\n  84 |   const event: Event = createEvent.keyDown(handle, {\n  85 |     keyCode: keyCodes.arrowLeft,","start":{"line":82,"column":2,"index":2396}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  23 |   jest.runOnlyPendingTimers();\n  24 |   expect(onDragUpdate).toHaveBeenCalled();\n> 25 |   expect(onDragUpdate.mock.calls[0][0].destination.index).toBe(0);\n     |                                                               ^ Magic Number\n  26 |\n  27 |   // event consumed\n  28 |   expect(event.defaultPrevented).toBe(true);","start":{"line":25,"column":63,"index":818}},{"frame":"  44 |   jest.runOnlyPendingTimers();\n  45 |   expect(onDragUpdate).toHaveBeenCalled();\n> 46 |   expect(onDragUpdate.mock.calls[0][0].destination.index).toBe(1);\n     |                                                               ^ Magic Number\n  47 |\n  48 |   // event consumed\n  49 |   expect(event.defaultPrevented).toBe(true);","start":{"line":46,"column":63,"index":1427}},{"frame":"  67 |   jest.runOnlyPendingTimers();\n  68 |   expect(onDragUpdate).toHaveBeenCalled();\n> 69 |   expect(onDragUpdate.mock.calls[0][0].destination.index).toBe(1);\n     |                                                               ^ Magic Number\n  70 |\n  71 |   // event consumed\n  72 |   expect(event.defaultPrevented).toBe(true);","start":{"line":69,"column":63,"index":2071}},{"frame":"  90 |   jest.runOnlyPendingTimers();\n  91 |   expect(onDragUpdate).toHaveBeenCalled();\n> 92 |   expect(onDragUpdate.mock.calls[0][0].destination.index).toBe(0);\n     |                                                               ^ Magic Number\n  93 |\n  94 |   // event consumed\n  95 |   expect(event.defaultPrevented).toBe(true);","start":{"line":92,"column":63,"index":2712}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":5.882,"halstead":{"bugs":0.663,"difficulty":18.732,"effort":37231.278,"length":354,"time":2068.404,"vocabulary":49,"volume":1987.607,"operands":{"distinct":41,"total":192,"identifiers":["jest","useFakeTimers","it","\"should move up when pressing the up arrow\"","onDragUpdate","fn","getByText","render","handle","HTMLElement","\"item: 1\"","simpleLift","keyboard","event","Event","createEvent","keyDown","keyCode","keyCodes","arrowUp","fireEvent","runOnlyPendingTimers","expect","toHaveBeenCalled","mock","calls","0","destination","index","toBe","defaultPrevented","true","\"should move down when pressing the down arrow\"","\"item: 0\"","arrowDown","1","\"should move right when pressing the right arrow\"","\"horizontal\"","arrowRight","\"should move left when pressing the left arrow\"","arrowLeft"]},"operators":{"distinct":8,"total":162,"identifiers":["()",".","function=>","const","=","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":85,"physical":97}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/view/key-codes","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/controls","type":"esm"}],"errors":[],"lineEnd":97,"lineStart":1,"maintainability":94.611,"methods":[{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.143,"difficulty":5.431,"effort":2330.477,"length":83,"time":129.471,"vocabulary":36,"volume":429.104,"operands":{"distinct":29,"total":45,"identifiers":["onDragUpdate","jest","fn","getByText","render","handle","HTMLElement","\"item: 1\"","simpleLift","keyboard","event","Event","createEvent","keyDown","keyCode","keyCodes","arrowUp","fireEvent","runOnlyPendingTimers","expect","toHaveBeenCalled","mock","calls","0","destination","index","toBe","defaultPrevented","true"]},"operators":{"distinct":7,"total":38,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":19,"physical":20},"errors":[],"lineEnd":29,"lineStart":10,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.144,"difficulty":5.25,"effort":2270.019,"length":83,"time":126.112,"vocabulary":37,"volume":432.385,"operands":{"distinct":30,"total":45,"identifiers":["onDragUpdate","jest","fn","getByText","render","handle","HTMLElement","\"item: 0\"","simpleLift","keyboard","event","Event","createEvent","keyDown","keyCode","keyCodes","arrowDown","fireEvent","runOnlyPendingTimers","expect","toHaveBeenCalled","mock","calls","0","destination","index","toBe","1","defaultPrevented","true"]},"operators":{"distinct":7,"total":38,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":19,"physical":20},"errors":[],"lineEnd":50,"lineStart":31,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.147,"difficulty":5.194,"effort":2289.451,"length":84,"time":127.192,"vocabulary":38,"volume":440.826,"operands":{"distinct":31,"total":46,"identifiers":["onDragUpdate","jest","fn","getByText","render","\"horizontal\"","handle","HTMLElement","\"item: 0\"","simpleLift","keyboard","event","Event","createEvent","keyDown","keyCode","keyCodes","arrowRight","fireEvent","runOnlyPendingTimers","expect","toHaveBeenCalled","mock","calls","0","destination","index","toBe","1","defaultPrevented","true"]},"operators":{"distinct":7,"total":38,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":19,"physical":22},"errors":[],"lineEnd":73,"lineStart":52,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.146,"difficulty":5.367,"effort":2348.422,"length":84,"time":130.468,"vocabulary":37,"volume":437.594,"operands":{"distinct":30,"total":46,"identifiers":["onDragUpdate","jest","fn","getByText","render","\"horizontal\"","handle","HTMLElement","\"item: 1\"","simpleLift","keyboard","event","Event","createEvent","keyDown","keyCode","keyCodes","arrowLeft","fireEvent","runOnlyPendingTimers","expect","toHaveBeenCalled","mock","calls","0","destination","index","toBe","defaultPrevented","true"]},"operators":{"distinct":7,"total":38,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":19,"physical":22},"errors":[],"lineEnd":96,"lineStart":75,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.176,"halstead":{"bugs":0.133,"difficulty":3.746,"effort":7446.256,"length":70.8,"time":413.681,"vocabulary":9.8,"volume":397.521,"operands":{"distinct":8.2,"total":38.4},"operators":{"distinct":1.6,"total":32.4}},"paramCount":0,"sloc":{"logical":17,"physical":19.4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.145,"difficulty":5.31,"effort":2309.592,"length":83.5,"time":128.311,"vocabulary":37,"volume":434.977,"operands":{"distinct":30,"total":45.5},"operators":{"distinct":7,"total":38}},"paramCount":0,"sloc":{"logical":19,"physical":21}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-drop-context/reset-server-context.spec.js","testCases":1,"smells":9,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  12 |\n  13 | it('should reset the style marshal context', () => {\n> 14 |   expect(doesStyleElementExist(1)).toBe(false);\n     |  ^ Duplicate Assert\n  15 |\n  16 |   const wrapper1 = render(\n  17 |     <DragDropContext onDragEnd={() => {}}>{null}</DragDropContext>,","start":{"line":14,"column":2,"index":486}},{"frame":"  12 |\n  13 | it('should reset the style marshal context', () => {\n> 14 |   expect(doesStyleElementExist(1)).toBe(false);\n     |  ^ Duplicate Assert\n  15 |\n  16 |   const wrapper1 = render(\n  17 |     <DragDropContext onDragEnd={() => {}}>{null}</DragDropContext>,","start":{"line":14,"column":2,"index":486}},{"frame":"  17 |     <DragDropContext onDragEnd={() => {}}>{null}</DragDropContext>,\n  18 |   );\n> 19 |   expect(doesStyleElementExist(0)).toBe(true);\n     |  ^ Duplicate Assert\n  20 |\n  21 |   const wrapper2 = render(\n  22 |     <DragDropContext onDragEnd={() => {}}>{null}</DragDropContext>,","start":{"line":19,"column":2,"index":635}},{"frame":"  17 |     <DragDropContext onDragEnd={() => {}}>{null}</DragDropContext>,\n  18 |   );\n> 19 |   expect(doesStyleElementExist(0)).toBe(true);\n     |  ^ Duplicate Assert\n  20 |\n  21 |   const wrapper2 = render(\n  22 |     <DragDropContext onDragEnd={() => {}}>{null}</DragDropContext>,","start":{"line":19,"column":2,"index":635}},{"frame":"  22 |     <DragDropContext onDragEnd={() => {}}>{null}</DragDropContext>,\n  23 |   );\n> 24 |   expect(doesStyleElementExist(1)).toBe(true);\n     |  ^ Duplicate Assert\n  25 |\n  26 |   // not created yet\n  27 |   expect(doesStyleElementExist(2)).toBe(false);","start":{"line":24,"column":2,"index":783}},{"frame":"  38 |\n  39 |   // now only '0' exists\n> 40 |   expect(doesStyleElementExist(0)).toBe(true);\n     |  ^ Duplicate Assert\n  41 |   expect(doesStyleElementExist(1)).toBe(false);\n  42 |\n  43 |   wrapper3.unmount();","start":{"line":40,"column":2,"index":1167}},{"frame":"  38 |\n  39 |   // now only '0' exists\n> 40 |   expect(doesStyleElementExist(0)).toBe(true);\n     |  ^ Duplicate Assert\n  41 |   expect(doesStyleElementExist(1)).toBe(false);\n  42 |\n  43 |   wrapper3.unmount();","start":{"line":40,"column":2,"index":1167}},{"frame":"  39 |   // now only '0' exists\n  40 |   expect(doesStyleElementExist(0)).toBe(true);\n> 41 |   expect(doesStyleElementExist(1)).toBe(false);\n     |  ^ Duplicate Assert\n  42 |\n  43 |   wrapper3.unmount();\n  44 | });","start":{"line":41,"column":2,"index":1214}},{"frame":"  39 |   // now only '0' exists\n  40 |   expect(doesStyleElementExist(0)).toBe(true);\n> 41 |   expect(doesStyleElementExist(1)).toBe(false);\n     |  ^ Duplicate Assert\n  42 |\n  43 |   wrapper3.unmount();\n  44 | });","start":{"line":41,"column":2,"index":1214}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":15.789,"halstead":{"bugs":0.192,"difficulty":7.942,"effort":4567.311,"length":114,"time":253.739,"vocabulary":33,"volume":575.061,"operands":{"distinct":26,"total":59,"identifiers":["doesStyleElementExist","uniqueId","Boolean","document","querySelector","attributes","prefix","[","-always=\"","\"]","it","\"should reset the style marshal context\"","expect","1","toBe","false","wrapper1","render","null","0","true","wrapper2","2","unmount","resetServerContext","wrapper3"]},"operators":{"distinct":7,"total":55,"identifiers":["const","=","function=>","()",".","``","${}"]}},"paramCount":1,"sloc":{"logical":38,"physical":45}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../src/view/drag-drop-context","type":"esm"},{"line":5,"path":"../../../../src","type":"esm"},{"line":6,"path":"../../../../src/view/data-attributes","type":"esm"}],"errors":[],"lineEnd":45,"lineStart":1,"maintainability":118.406,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.02,"difficulty":2,"effort":118.414,"length":16,"time":6.579,"vocabulary":13,"volume":59.207,"operands":{"distinct":9,"total":9,"identifiers":["Boolean","document","querySelector","attributes","prefix","uniqueId","[","-always=\"","\"]"]},"operators":{"distinct":4,"total":7,"identifiers":["()",".","``","${}"]}},"paramCount":1,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":11,"lineStart":8,"name":"<anon method-1>","paramNames":["uniqueId"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.128,"difficulty":7.667,"effort":2948.996,"length":89,"time":163.833,"vocabulary":20,"volume":384.652,"operands":{"distinct":15,"total":46,"identifiers":["expect","doesStyleElementExist","1","toBe","false","wrapper1","render","null","0","true","wrapper2","2","unmount","resetServerContext","wrapper3"]},"operators":{"distinct":5,"total":43,"identifiers":["()",".","const","=","function=>"]}},"paramCount":0,"sloc":{"logical":31,"physical":32},"errors":[],"lineEnd":44,"lineStart":13,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":17,"lineStart":17,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":22,"lineStart":22,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":36,"lineStart":36,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.032,"difficulty":1.324,"effort":761.218,"length":19,"time":42.29,"vocabulary":5.5,"volume":95.843,"operands":{"distinct":4.333,"total":9.833},"operators":{"distinct":1.167,"total":9.167}},"paramCount":0.167,"sloc":{"logical":6.333,"physical":7.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":7.312,"halstead":{"bugs":0.03,"difficulty":1.933,"effort":613.482,"length":21,"time":34.082,"vocabulary":6.6,"volume":88.772,"operands":{"distinct":4.8,"total":11},"operators":{"distinct":1.8,"total":10}},"paramCount":0.2,"sloc":{"logical":6.8,"physical":7.8}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-drop-context/check-react-version.spec.js","testCases":7,"smells":9,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  26 |     checkReactVersion(peerDep, actual);\n  27 |\n> 28 |     expect(warn).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  29 |   }\n  30 |   // minor\n  31 |   {","start":{"line":28,"column":4,"index":688}},{"frame":"  26 |     checkReactVersion(peerDep, actual);\n  27 |\n> 28 |     expect(warn).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  29 |   }\n  30 |   // minor\n  31 |   {","start":{"line":28,"column":4,"index":688}},{"frame":"  35 |     checkReactVersion(peerDep, actual);\n  36 |\n> 37 |     expect(warn).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  38 |   }\n  39 |   // major\n  40 |   {","start":{"line":37,"column":4,"index":863}},{"frame":"  35 |     checkReactVersion(peerDep, actual);\n  36 |\n> 37 |     expect(warn).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  38 |   }\n  39 |   // major\n  40 |   {","start":{"line":37,"column":4,"index":863}},{"frame":"  44 |     checkReactVersion(peerDep, actual);\n  45 |\n> 46 |     expect(warn).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  47 |   }\n  48 | });\n  49 |","start":{"line":46,"column":4,"index":1038}},{"frame":"  44 |     checkReactVersion(peerDep, actual);\n  45 |\n> 46 |     expect(warn).not.toHaveBeenCalled();\n     |    ^ Duplicate Assert\n  47 |   }\n  48 | });\n  49 |","start":{"line":46,"column":4,"index":1038}},{"frame":"  56 |     checkReactVersion(peerDep, actual);\n  57 |\n> 58 |     expect(warn).toHaveBeenCalledTimes(1);\n     |    ^ Duplicate Assert\n  59 |     warn.mockClear();\n  60 |   }\n  61 |   // minor not met","start":{"line":58,"column":4,"index":1293}},{"frame":"  66 |     checkReactVersion(peerDep, actual);\n  67 |\n> 68 |     expect(warn).toHaveBeenCalledTimes(1);\n     |    ^ Duplicate Assert\n  69 |     warn.mockClear();\n  70 |   }\n  71 |   // major not met","start":{"line":68,"column":4,"index":1500}},{"frame":"  76 |     checkReactVersion(peerDep, actual);\n  77 |\n> 78 |     expect(warn).toHaveBeenCalledTimes(1);\n     |    ^ Duplicate Assert\n  79 |     warn.mockClear();\n  80 |   }\n  81 | });","start":{"line":78,"column":4,"index":1707}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":14.286,"halstead":{"bugs":0.523,"difficulty":8.779,"effort":13777.648,"length":281,"time":765.425,"vocabulary":48,"volume":1569.374,"operands":{"distinct":43,"total":151,"identifiers":["warn","jest","spyOn","console","\"warn\"","mockImplementation","afterEach","mockClear","it","\"should pass if the react peer dep version is met\"","version","\"1.3.4\"","checkReactVersion","expect","not","toHaveBeenCalled","\"should pass if the react peer dep version is passed\"","peerDep","actual","\"1.3.5\"","\"1.4.0\"","\"2.0.0\"","\"should fail if the react peer dep version is not met\"","\"1.3.3\"","toHaveBeenCalledTimes","1","\"1.2.4\"","\"0.3.4\"","\"should throw if unable to parse the react version\"","\"1.x\"","toThrow","\"should throw if unable to parse the peer dep version\"","\"1.2.3\"","\"should allow pre release provided versions\"","\"1.0.0\"","alpha","\"1.2.3-alpha\"","beta","\"1.2.3-beta\"","\"should pass on the current repo setup\"","peerDependencies","react","React"]},"operators":{"distinct":5,"total":130,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":84,"physical":117}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"../../../../src/view/drag-drop-context/check-react-version","type":"esm"},{"line":4,"path":"../../../../package.json","type":"esm"}],"errors":[],"lineEnd":117,"lineStart":1,"maintainability":115.379,"methods":[{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":6,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["warn","mockClear"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":10,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.018,"difficulty":2.571,"effort":142.331,"length":16,"time":7.907,"vocabulary":11,"volume":55.351,"operands":{"distinct":7,"total":9,"identifiers":["version","\"1.3.4\"","checkReactVersion","expect","warn","not","toHaveBeenCalled"]},"operators":{"distinct":4,"total":7,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":7},"errors":[],"lineEnd":18,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.078,"difficulty":6,"effort":1406.481,"length":60,"time":78.138,"vocabulary":15,"volume":234.413,"operands":{"distinct":11,"total":33,"identifiers":["peerDep","\"1.3.4\"","actual","\"1.3.5\"","checkReactVersion","expect","warn","not","toHaveBeenCalled","\"1.4.0\"","\"2.0.0\""]},"operators":{"distinct":4,"total":27,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":15,"physical":29},"errors":[],"lineEnd":48,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.092,"difficulty":6.5,"effort":1794,"length":69,"time":99.667,"vocabulary":16,"volume":276,"operands":{"distinct":12,"total":39,"identifiers":["peerDep","\"1.3.4\"","actual","\"1.3.3\"","checkReactVersion","expect","warn","toHaveBeenCalledTimes","1","mockClear","\"1.2.4\"","\"0.3.4\""]},"operators":{"distinct":4,"total":30,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":18,"physical":32},"errors":[],"lineEnd":81,"lineStart":50,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.016,"difficulty":2.5,"effort":121.08,"length":14,"time":6.727,"vocabulary":11,"volume":48.432,"operands":{"distinct":6,"total":6,"identifiers":["peerDep","\"1.3.4\"","actual","\"1.x\"","expect","toThrow"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":88,"lineStart":83,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":0.5,"effort":4,"length":4,"time":0.222,"vocabulary":4,"volume":8,"operands":{"distinct":3,"total":3,"identifiers":["checkReactVersion","peerDep","actual"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":87,"lineStart":87,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.016,"difficulty":2.5,"effort":121.08,"length":14,"time":6.727,"vocabulary":11,"volume":48.432,"operands":{"distinct":6,"total":6,"identifiers":["peerDep","\"1.x\"","actual","\"1.2.3\"","expect","toThrow"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":95,"lineStart":90,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":0.5,"effort":4,"length":4,"time":0.222,"vocabulary":4,"volume":8,"operands":{"distinct":3,"total":3,"identifiers":["checkReactVersion","peerDep","actual"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":94,"lineStart":94,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.036,"difficulty":2.909,"effort":318.234,"length":28,"time":17.68,"vocabulary":15,"volume":109.393,"operands":{"distinct":11,"total":16,"identifiers":["peerDep","\"1.0.0\"","alpha","\"1.2.3-alpha\"","beta","\"1.2.3-beta\"","checkReactVersion","expect","warn","not","toHaveBeenCalled"]},"operators":{"distinct":4,"total":12,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":10},"errors":[],"lineEnd":106,"lineStart":97,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.031,"difficulty":2.364,"effort":221.627,"length":24,"time":12.313,"vocabulary":15,"volume":93.765,"operands":{"distinct":11,"total":13,"identifiers":["peerDep","peerDependencies","react","actual","React","version","checkReactVersion","expect","warn","not","toHaveBeenCalled"]},"operators":{"distinct":4,"total":11,"identifiers":["const","=",".","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":8},"errors":[],"lineEnd":116,"lineStart":109,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.19,"halstead":{"bugs":0.044,"difficulty":0.732,"effort":1148.137,"length":23.417,"time":63.785,"vocabulary":4,"volume":130.781,"operands":{"distinct":3.583,"total":12.583},"operators":{"distinct":0.417,"total":10.833}},"paramCount":0,"sloc":{"logical":7,"physical":9.75}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":28.319,"halstead":{"bugs":0.027,"difficulty":2.486,"effort":376.439,"length":21.545,"time":20.913,"vocabulary":9.636,"volume":80.89,"operands":{"distinct":6.545,"total":11.818},"operators":{"distinct":3.091,"total":9.727}},"paramCount":0,"sloc":{"logical":5.818,"physical":9.455}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-drop-context/on-before-capture/removals.spec.js","testCases":1,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  70 |\n  71 |   // initially it had an index of 1\n> 72 |   expect(getIndex(second)).toBe(1);\n     |  ^ Duplicate Assert\n  73 |\n  74 |   // act(() => {}); is joining the two into one update which is\n  75 |   // causing unexpected mounting behaviour","start":{"line":72,"column":2,"index":2235}},{"frame":"  84 |   expect(isDragging(second)).toBe(true);\n  85 |   // second index accounts for removal\n> 86 |   expect(getIndex(second)).toBe(0);\n     |  ^ Duplicate Assert\n  87 |\n  88 |   // flush onDragStart timer\n  89 |   jest.runOnlyPendingTimers();","start":{"line":86,"column":2,"index":2691}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  70 |\n  71 |   // initially it had an index of 1\n> 72 |   expect(getIndex(second)).toBe(1);\n     |                                ^ Magic Number\n  73 |\n  74 |   // act(() => {}); is joining the two into one update which is\n  75 |   // causing unexpected mounting behaviour","start":{"line":72,"column":32,"index":2265}},{"frame":"  84 |   expect(isDragging(second)).toBe(true);\n  85 |   // second index accounts for removal\n> 86 |   expect(getIndex(second)).toBe(0);\n     |                                ^ Magic Number\n  87 |\n  88 |   // flush onDragStart timer\n  89 |   jest.runOnlyPendingTimers();","start":{"line":86,"column":32,"index":2721}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":15.789,"halstead":{"bugs":0.421,"difficulty":10.202,"effort":12881.824,"length":204,"time":715.657,"vocabulary":73,"volume":1262.724,"operands":{"distinct":62,"total":115,"identifiers":["getIndex","el","Number","getAttribute","\"data-index\"","it","\"should adjust captured values for any changes that impact that dragging item\"","jest","useFakeTimers","onDragStart","fn","Root","items","setItems","useState","\"first\"","\"second\"","onBeforeCapture","noop","\"droppable\"","droppableProvided","droppableProps","innerRef","map","item","index","provided","snapshot","draggableProps","dragHandleProps","isDragging","placeholder","getByTestId","queryByTestId","render","second","HTMLElement","expect","toBe","1","withError","expandedMouse","rawPowerLift","x","0","y","null","true","runOnlyPendingTimers","expected","DragStart","draggableId","mode","\"FLUID\"","type","\"DEFAULT\"","source","droppableId","mock","calls","toEqual","useRealTimers"]},"operators":{"distinct":11,"total":89,"identifiers":["function","return","()",".","function=>","const","=","[]",",","{}",":"]}},"paramCount":6,"sloc":{"logical":57,"physical":105}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":9,"path":"../../../../../src","type":"esm"},{"line":10,"path":"../../util/expanded-mouse","type":"esm"},{"line":11,"path":"../../util/helpers","type":"esm"},{"line":12,"path":"../../../../util/console","type":"esm"},{"line":13,"path":"../../../../../src/empty","type":"esm"}],"errors":[],"lineEnd":105,"lineStart":1,"maintainability":116.247,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":33.688,"length":8,"time":1.872,"vocabulary":7,"volume":22.459,"operands":{"distinct":4,"total":4,"identifiers":["Number","el","getAttribute","\"data-index\""]},"operators":{"distinct":3,"total":4,"identifiers":["return","()","."]}},"paramCount":1,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":17,"lineStart":15,"name":"getIndex","paramNames":["el"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.21,"difficulty":7.419,"effort":4671.59,"length":114,"time":259.533,"vocabulary":46,"volume":629.686,"operands":{"distinct":37,"total":61,"identifiers":["jest","useFakeTimers","onDragStart","fn","Root","getByTestId","queryByTestId","render","second","HTMLElement","\"second\"","expect","getIndex","toBe","1","withError","\"first\"","null","isDragging","true","0","runOnlyPendingTimers","expected","DragStart","draggableId","mode","\"FLUID\"","type","\"DEFAULT\"","source","index","droppableId","\"droppable\"","mock","calls","toEqual","useRealTimers"]},"operators":{"distinct":9,"total":53,"identifiers":["()",".","const","=","function","{}","function=>",":","[]"]}},"paramCount":0,"sloc":{"logical":35,"physical":86},"errors":[],"lineEnd":104,"lineStart":19,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.029,"difficulty":4.4,"effort":385.301,"length":21,"time":21.406,"vocabulary":18,"volume":87.568,"operands":{"distinct":10,"total":11,"identifiers":["items","setItems","useState","\"first\"","\"second\"","onBeforeCapture","noop","onDragStart","\"droppable\"","droppableProvided"]},"operators":{"distinct":8,"total":10,"identifiers":["const","=","[]",",","()","function","return","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":42},"errors":[],"lineEnd":66,"lineStart":25,"name":"Root","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["setItems","\"second\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","[]"]}},"paramCount":0,"sloc":{"logical":1,"physical":4},"errors":[],"lineEnd":30,"lineStart":27,"name":"onBeforeCapture","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.018,"difficulty":1.875,"effort":103.783,"length":16,"time":5.766,"vocabulary":11,"volume":55.351,"operands":{"distinct":8,"total":10,"identifiers":["droppableProvided","droppableProps","innerRef","items","map","item","index","placeholder"]},"operators":{"distinct":3,"total":6,"identifiers":[".","()","function=>"]}},"paramCount":1,"sloc":{"logical":3,"physical":24},"errors":[],"lineEnd":62,"lineStart":39,"name":"<anon method-2>","paramNames":["droppableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":0.625,"effort":8.707,"length":6,"time":0.484,"vocabulary":5,"volume":13.932,"operands":{"distinct":4,"total":5,"identifiers":["item","index","provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":2,"sloc":{"logical":2,"physical":16},"errors":[],"lineEnd":59,"lineStart":44,"name":"<anon method-3>","paramNames":["item","index"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.015,"difficulty":0.625,"effort":27.737,"length":14,"time":1.541,"vocabulary":9,"volume":44.379,"operands":{"distinct":8,"total":10,"identifiers":["provided","draggableProps","dragHandleProps","index","item","snapshot","isDragging","innerRef"]},"operators":{"distinct":1,"total":4,"identifiers":["."]}},"paramCount":2,"sloc":{"logical":1,"physical":12},"errors":[],"lineEnd":57,"lineStart":46,"name":"<anon method-4>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.016,"difficulty":2.286,"effort":110.702,"length":14,"time":6.15,"vocabulary":11,"volume":48.432,"operands":{"distinct":7,"total":8,"identifiers":["expandedMouse","rawPowerLift","getByTestId","\"second\"","x","0","y"]},"operators":{"distinct":4,"total":6,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":4,"physical":3},"errors":[],"lineEnd":78,"lineStart":76,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.754,"halstead":{"bugs":0.047,"difficulty":1.134,"effort":1431.314,"length":22.667,"time":79.517,"vocabulary":8.111,"volume":140.303,"operands":{"distinct":6.889,"total":12.778},"operators":{"distinct":1.222,"total":9.889}},"paramCount":0.667,"sloc":{"logical":6.333,"physical":11.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":45.565,"halstead":{"bugs":0.038,"difficulty":2.466,"effort":668.689,"length":24.625,"time":37.149,"vocabulary":13.875,"volume":113.726,"operands":{"distinct":10,"total":13.875},"operators":{"distinct":3.875,"total":10.75}},"paramCount":0.75,"sloc":{"logical":6.75,"physical":23.75}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-drop-context/on-before-capture/additions.spec.js","testCases":2,"smells":8,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  125 |\n  126 |   // initially it had an index of 1\n> 127 |   expect(getIndex(initial)).toBe(0);\n      |  ^ Duplicate Assert\n  128 |   // first item does not exist yet\n  129 |   expect(queryByTestId('first')).toBe(null);\n  130 |","start":{"line":127,"column":2,"index":3700}},{"frame":"  127 |   expect(getIndex(initial)).toBe(0);\n  128 |   // first item does not exist yet\n> 129 |   expect(queryByTestId('first')).toBe(null);\n      |  ^ Duplicate Assert\n  130 |\n  131 |   // act(() => {}); is joining the two into one update which is\n  132 |   // causing unexpected mounting behaviour","start":{"line":129,"column":2,"index":3772}},{"frame":"  136 |\n  137 |   // first item has been added\n> 138 |   expect(queryByTestId('first')).toBeTruthy();\n      |  ^ Duplicate Assert\n  139 |   // initial is now dragging\n  140 |   expect(isDragging(initial)).toBe(true);\n  141 |   // initial index accounts for addition","start":{"line":138,"column":2,"index":4040}},{"frame":"  140 |   expect(isDragging(initial)).toBe(true);\n  141 |   // initial index accounts for addition\n> 142 |   expect(getIndex(initial)).toBe(1);\n      |  ^ Duplicate Assert\n  143 |\n  144 |   // flush onDragStart timer\n  145 |   jest.runOnlyPendingTimers();","start":{"line":142,"column":2,"index":4199}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  65 |   });\n  66 |\n> 67 |   expect(isDragging(handle)).toBe(true);\n     |         ^ Lazy Test\n  68 | });\n  69 |\n  70 | function getIndex(el: HTMLElement): number {","start":{"line":67,"column":9,"index":1834}},{"frame":"  138 |   expect(queryByTestId('first')).toBeTruthy();\n  139 |   // initial is now dragging\n> 140 |   expect(isDragging(initial)).toBe(true);\n      |         ^ Lazy Test\n  141 |   // initial index accounts for addition\n  142 |   expect(getIndex(initial)).toBe(1);\n  143 |","start":{"line":140,"column":9,"index":4123}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  125 |\n  126 |   // initially it had an index of 1\n> 127 |   expect(getIndex(initial)).toBe(0);\n      |                                 ^ Magic Number\n  128 |   // first item does not exist yet\n  129 |   expect(queryByTestId('first')).toBe(null);\n  130 |","start":{"line":127,"column":33,"index":3731}},{"frame":"  140 |   expect(isDragging(initial)).toBe(true);\n  141 |   // initial index accounts for addition\n> 142 |   expect(getIndex(initial)).toBe(1);\n      |                                 ^ Magic Number\n  143 |\n  144 |   // flush onDragStart timer\n  145 |   jest.runOnlyPendingTimers();","start":{"line":142,"column":33,"index":4230}}]}],"metrics":{"aggregate":{"cyclomatic":17,"cyclomaticDensity":19.767,"halstead":{"bugs":0.641,"difficulty":14.083,"effort":27097.566,"length":301,"time":1505.42,"vocabulary":84,"volume":1924.088,"operands":{"distinct":72,"total":169,"identifiers":["it","\"should allow for additions to be made\"","AnotherChunk","\"addition\"","droppableProvided","droppableProps","innerRef","\"addition-item\"","0","provided","draggableProps","dragHandleProps","placeholder","Root","showAdditions","setShowAdditions","useState","false","onBeforeCapture","true","null","getByTestId","render","handle","HTMLElement","\"0\"","withError","expandedMouse","rawPowerLift","x","y","expect","isDragging","toBe","getIndex","el","Number","getAttribute","\"data-index\"","\"should adjust captured values for any changes that impact that dragging item\"","jest","useFakeTimers","onDragStart","fn","items","setItems","\"initial\"","\"first\"","noop","\"droppable\"","map","item","index","snapshot","queryByTestId","initial","toBeTruthy","1","runOnlyPendingTimers","expected","DragStart","draggableId","mode","\"FLUID\"","type","\"DEFAULT\"","source","droppableId","mock","calls","toEqual","useRealTimers"]},"operators":{"distinct":12,"total":132,"identifiers":["()","function=>","function","return",".","const","=","[]",",",":?","{}",":"]}},"paramCount":8,"sloc":{"logical":86,"physical":161}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../util/app","type":"esm"},{"line":10,"path":"../../../../../src","type":"esm"},{"line":11,"path":"../../util/expanded-mouse","type":"esm"},{"line":12,"path":"../../util/helpers","type":"esm"},{"line":13,"path":"../../../../util/console","type":"esm"},{"line":14,"path":"../../../../../src/empty","type":"esm"}],"errors":[],"lineEnd":161,"lineStart":1,"maintainability":118.269,"methods":[{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.042,"difficulty":4.375,"effort":557.54,"length":30,"time":30.974,"vocabulary":19,"volume":127.438,"operands":{"distinct":12,"total":15,"identifiers":["AnotherChunk","Root","getByTestId","render","handle","HTMLElement","\"0\"","withError","expect","isDragging","toBe","true"]},"operators":{"distinct":7,"total":15,"identifiers":["function","const","=","{}","()","function=>","."]}},"paramCount":0,"sloc":{"logical":12,"physical":53},"errors":[],"lineEnd":68,"lineStart":16,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["\"addition\"","droppableProvided"]},"operators":{"distinct":2,"total":2,"identifiers":["return","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":25},"errors":[],"lineEnd":42,"lineStart":18,"name":"AnotherChunk","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.014,"difficulty":1.286,"effort":52.983,"length":13,"time":2.944,"vocabulary":9,"volume":41.209,"operands":{"distinct":7,"total":9,"identifiers":["droppableProvided","droppableProps","innerRef","\"addition-item\"","0","provided","placeholder"]},"operators":{"distinct":2,"total":4,"identifiers":[".","function=>"]}},"paramCount":1,"sloc":{"logical":2,"physical":19},"errors":[],"lineEnd":39,"lineStart":21,"name":"<anon method-2>","paramNames":["droppableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.007,"difficulty":0.75,"effort":15.673,"length":9,"time":0.871,"vocabulary":5,"volume":20.897,"operands":{"distinct":4,"total":6,"identifiers":["provided","draggableProps","dragHandleProps","innerRef"]},"operators":{"distinct":1,"total":3,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":9},"errors":[],"lineEnd":35,"lineStart":27,"name":"<anon method-3>","paramNames":["provided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":50,"halstead":{"bugs":0.02,"difficulty":5.333,"effort":324.894,"length":16,"time":18.05,"vocabulary":14,"volume":60.918,"operands":{"distinct":6,"total":8,"identifiers":["showAdditions","setShowAdditions","useState","false","onBeforeCapture","null"]},"operators":{"distinct":8,"total":8,"identifiers":["const","=","[]",",","()","function","return",":?"]}},"paramCount":0,"sloc":{"logical":4,"physical":13},"errors":[],"lineEnd":56,"lineStart":44,"name":"Root","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["setShowAdditions","true"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":48,"lineStart":46,"name":"onBeforeCapture","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":2.333,"effort":93.014,"length":12,"time":5.167,"vocabulary":10,"volume":39.863,"operands":{"distinct":6,"total":7,"identifiers":["expandedMouse","rawPowerLift","handle","x","0","y"]},"operators":{"distinct":4,"total":5,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":65,"lineStart":63,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":33.688,"length":8,"time":1.872,"vocabulary":7,"volume":22.459,"operands":{"distinct":4,"total":4,"identifiers":["Number","el","getAttribute","\"data-index\""]},"operators":{"distinct":3,"total":4,"identifiers":["return","()","."]}},"paramCount":1,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":72,"lineStart":70,"name":"getIndex","paramNames":["el"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.226,"difficulty":7.697,"effort":5216.197,"length":122,"time":289.789,"vocabulary":47,"volume":677.66,"operands":{"distinct":38,"total":65,"identifiers":["jest","useFakeTimers","onDragStart","fn","Root","getByTestId","queryByTestId","render","initial","HTMLElement","\"initial\"","expect","getIndex","toBe","0","\"first\"","null","withError","toBeTruthy","isDragging","true","1","runOnlyPendingTimers","expected","DragStart","draggableId","mode","\"FLUID\"","type","\"DEFAULT\"","source","index","droppableId","\"droppable\"","mock","calls","toEqual","useRealTimers"]},"operators":{"distinct":9,"total":57,"identifiers":["()",".","const","=","function","{}","function=>",":","[]"]}},"paramCount":0,"sloc":{"logical":38,"physical":87},"errors":[],"lineEnd":160,"lineStart":74,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.026,"difficulty":4.444,"effort":345.164,"length":19,"time":19.176,"vocabulary":17,"volume":77.662,"operands":{"distinct":9,"total":10,"identifiers":["items","setItems","useState","\"initial\"","onBeforeCapture","noop","onDragStart","\"droppable\"","droppableProvided"]},"operators":{"distinct":8,"total":9,"identifiers":["const","=","[]",",","()","function","return","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":42},"errors":[],"lineEnd":121,"lineStart":80,"name":"Root","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["setItems","\"first\"","\"initial\""]},"operators":{"distinct":3,"total":3,"identifiers":["()","[]",","]}},"paramCount":0,"sloc":{"logical":1,"physical":4},"errors":[],"lineEnd":85,"lineStart":82,"name":"onBeforeCapture","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.018,"difficulty":1.875,"effort":103.783,"length":16,"time":5.766,"vocabulary":11,"volume":55.351,"operands":{"distinct":8,"total":10,"identifiers":["droppableProvided","droppableProps","innerRef","items","map","item","index","placeholder"]},"operators":{"distinct":3,"total":6,"identifiers":[".","()","function=>"]}},"paramCount":1,"sloc":{"logical":3,"physical":24},"errors":[],"lineEnd":117,"lineStart":94,"name":"<anon method-6>","paramNames":["droppableProvided"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":0.625,"effort":8.707,"length":6,"time":0.484,"vocabulary":5,"volume":13.932,"operands":{"distinct":4,"total":5,"identifiers":["item","index","provided","snapshot"]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":2,"sloc":{"logical":2,"physical":16},"errors":[],"lineEnd":114,"lineStart":99,"name":"<anon method-7>","paramNames":["item","index"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.015,"difficulty":0.625,"effort":27.737,"length":14,"time":1.541,"vocabulary":9,"volume":44.379,"operands":{"distinct":8,"total":10,"identifiers":["provided","draggableProps","dragHandleProps","index","item","snapshot","isDragging","innerRef"]},"operators":{"distinct":1,"total":4,"identifiers":["."]}},"paramCount":2,"sloc":{"logical":1,"physical":12},"errors":[],"lineEnd":112,"lineStart":101,"name":"<anon method-8>","paramNames":["provided","snapshot"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":2.333,"effort":93.014,"length":12,"time":5.167,"vocabulary":10,"volume":39.863,"operands":{"distinct":6,"total":7,"identifiers":["expandedMouse","rawPowerLift","initial","x","0","y"]},"operators":{"distinct":4,"total":5,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":135,"lineStart":133,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.063,"cyclomaticDensity":1.235,"halstead":{"bugs":0.04,"difficulty":0.88,"effort":1693.598,"length":18.813,"time":94.089,"vocabulary":5.25,"volume":120.255,"operands":{"distinct":4.5,"total":10.563},"operators":{"distinct":0.75,"total":8.25}},"paramCount":0.5,"sloc":{"logical":5.375,"physical":10.063}},"methodAverage":{"cyclomatic":1.067,"cyclomaticDensity":50.953,"halstead":{"bugs":0.028,"difficulty":2.412,"effort":460.402,"length":19.333,"time":25.578,"vocabulary":11.733,"volume":83.326,"operands":{"distinct":7.933,"total":10.867},"operators":{"distinct":3.8,"total":8.467}},"paramCount":0.533,"sloc":{"logical":5.4,"physical":21.067}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-drop-context/error-handling/error-on-window.spec.js","testCases":2,"smells":15,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  20 |\n  21 |   simpleLift(keyboard, getByTestId('0'));\n> 22 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |  ^ Duplicate Assert\n  23 |   const event: Event = getRbdErrorEvent();\n  24 |\n  25 |   withWarn(() => {","start":{"line":22,"column":2,"index":738}},{"frame":"  30 |\n  31 |   // drag aborted\n> 32 |   expect(isDragging(getByTestId('0'))).toBe(false);\n     |  ^ Duplicate Assert\n  33 |   // error event prevented\n  34 |   expect(event.defaultPrevented).toBe(true);\n  35 | });","start":{"line":32,"column":2,"index":942}},{"frame":"  38 |   const { getByTestId } = render(<App />);\n  39 |   simpleLift(keyboard, getByTestId('0'));\n> 40 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |  ^ Duplicate Assert\n  41 |   const event: Event = getRuntimeError();\n  42 |\n  43 |   // not logging the raw error","start":{"line":40,"column":2,"index":1215}},{"frame":"  50 |\n  51 |   // drag aborted\n> 52 |   expect(isDragging(getByTestId('0'))).toBe(false);\n     |  ^ Duplicate Assert\n  53 |   // error event not prevented\n  54 |   expect(event.defaultPrevented).toBe(false);\n  55 | });","start":{"line":52,"column":2,"index":1493}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  19 |   const { getByTestId } = render(<App />);\n  20 |\n> 21 |   simpleLift(keyboard, getByTestId('0'));\n     |  ^ Eager Test\n  22 |   expect(isDragging(getByTestId('0'))).toBe(true);\n  23 |   const event: Event = getRbdErrorEvent();\n  24 |","start":{"line":21,"column":2,"index":696}},{"frame":"  20 |\n  21 |   simpleLift(keyboard, getByTestId('0'));\n> 22 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |         ^ Eager Test\n  23 |   const event: Event = getRbdErrorEvent();\n  24 |\n  25 |   withWarn(() => {","start":{"line":22,"column":9,"index":745}},{"frame":"  30 |\n  31 |   // drag aborted\n> 32 |   expect(isDragging(getByTestId('0'))).toBe(false);\n     |         ^ Eager Test\n  33 |   // error event prevented\n  34 |   expect(event.defaultPrevented).toBe(true);\n  35 | });","start":{"line":32,"column":9,"index":949}},{"frame":"  37 | it('should abort any active drag (non-rbd error)', () => {\n  38 |   const { getByTestId } = render(<App />);\n> 39 |   simpleLift(keyboard, getByTestId('0'));\n     |  ^ Eager Test\n  40 |   expect(isDragging(getByTestId('0'))).toBe(true);\n  41 |   const event: Event = getRuntimeError();\n  42 |","start":{"line":39,"column":2,"index":1173}},{"frame":"  38 |   const { getByTestId } = render(<App />);\n  39 |   simpleLift(keyboard, getByTestId('0'));\n> 40 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |         ^ Eager Test\n  41 |   const event: Event = getRuntimeError();\n  42 |\n  43 |   // not logging the raw error","start":{"line":40,"column":9,"index":1222}},{"frame":"  39 |   simpleLift(keyboard, getByTestId('0'));\n  40 |   expect(isDragging(getByTestId('0'))).toBe(true);\n> 41 |   const event: Event = getRuntimeError();\n     |                       ^ Eager Test\n  42 |\n  43 |   // not logging the raw error\n  44 |   withoutError(() => {","start":{"line":41,"column":23,"index":1287}},{"frame":"  50 |\n  51 |   // drag aborted\n> 52 |   expect(isDragging(getByTestId('0'))).toBe(false);\n     |         ^ Eager Test\n  53 |   // error event not prevented\n  54 |   expect(event.defaultPrevented).toBe(false);\n  55 | });","start":{"line":52,"column":9,"index":1500}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  19 |   const { getByTestId } = render(<App />);\n  20 |\n> 21 |   simpleLift(keyboard, getByTestId('0'));\n     |  ^ Lazy Test\n  22 |   expect(isDragging(getByTestId('0'))).toBe(true);\n  23 |   const event: Event = getRbdErrorEvent();\n  24 |","start":{"line":21,"column":2,"index":696}},{"frame":"  20 |\n  21 |   simpleLift(keyboard, getByTestId('0'));\n> 22 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |         ^ Lazy Test\n  23 |   const event: Event = getRbdErrorEvent();\n  24 |\n  25 |   withWarn(() => {","start":{"line":22,"column":9,"index":745}},{"frame":"  37 | it('should abort any active drag (non-rbd error)', () => {\n  38 |   const { getByTestId } = render(<App />);\n> 39 |   simpleLift(keyboard, getByTestId('0'));\n     |  ^ Lazy Test\n  40 |   expect(isDragging(getByTestId('0'))).toBe(true);\n  41 |   const event: Event = getRuntimeError();\n  42 |","start":{"line":39,"column":2,"index":1173}},{"frame":"  38 |   const { getByTestId } = render(<App />);\n  39 |   simpleLift(keyboard, getByTestId('0'));\n> 40 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |         ^ Lazy Test\n  41 |   const event: Event = getRuntimeError();\n  42 |\n  43 |   // not logging the raw error","start":{"line":40,"column":9,"index":1222}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":15.385,"halstead":{"bugs":0.261,"difficulty":13.448,"effort":10519.773,"length":148,"time":584.432,"vocabulary":39,"volume":782.24,"operands":{"distinct":29,"total":78,"identifiers":["getRbdErrorEvent","Event","window","ErrorEvent","\"error\"","error","RbdInvariant","\"my invariant\"","cancelable","true","it","\"should abort any active drag (rbd error)\"","getByTestId","render","simpleLift","keyboard","\"0\"","expect","isDragging","toBe","event","withWarn","withError","dispatchEvent","false","defaultPrevented","\"should abort any active drag (non-rbd error)\"","getRuntimeError","withoutError"]},"operators":{"distinct":10,"total":70,"identifiers":["function","return","new",".","{}",":","()","function=>","const","="]}},"paramCount":0,"sloc":{"logical":52,"physical":56}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/invariant","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/controls","type":"esm"},{"line":7,"path":"../../util/helpers","type":"esm"},{"line":8,"path":"../../../../util/console","type":"esm"},{"line":9,"path":"../../../../util/cause-runtime-error","type":"esm"}],"errors":[],"lineEnd":56,"lineStart":1,"maintainability":116.116,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.02,"difficulty":2.5,"effort":152.294,"length":16,"time":8.461,"vocabulary":14,"volume":60.918,"operands":{"distinct":9,"total":9,"identifiers":["Event","window","ErrorEvent","\"error\"","error","RbdInvariant","\"my invariant\"","cancelable","true"]},"operators":{"distinct":5,"total":7,"identifiers":["return","new",".","{}",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":6},"errors":[],"lineEnd":16,"lineStart":11,"name":"getRbdErrorEvent","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.078,"difficulty":5.6,"effort":1303.64,"length":53,"time":72.424,"vocabulary":21,"volume":232.793,"operands":{"distinct":15,"total":28,"identifiers":["getByTestId","render","simpleLift","keyboard","\"0\"","expect","isDragging","toBe","true","event","Event","getRbdErrorEvent","withWarn","false","defaultPrevented"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","{}","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":19,"physical":18},"errors":[],"lineEnd":35,"lineStart":18,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":1,"effort":4.755,"length":3,"time":0.264,"vocabulary":3,"volume":4.755,"operands":{"distinct":1,"total":1,"identifiers":["withError"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":5},"errors":[],"lineEnd":29,"lineStart":25,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["window","dispatchEvent","event"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":28,"lineStart":26,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.078,"difficulty":5.6,"effort":1303.64,"length":53,"time":72.424,"vocabulary":21,"volume":232.793,"operands":{"distinct":15,"total":28,"identifiers":["getByTestId","render","simpleLift","keyboard","\"0\"","expect","isDragging","toBe","true","event","Event","getRuntimeError","withoutError","false","defaultPrevented"]},"operators":{"distinct":6,"total":25,"identifiers":["const","=","{}","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":19,"physical":19},"errors":[],"lineEnd":55,"lineStart":37,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":1,"effort":4.755,"length":3,"time":0.264,"vocabulary":3,"volume":4.755,"operands":{"distinct":1,"total":1,"identifiers":["withWarn"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":6},"errors":[],"lineEnd":49,"lineStart":44,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["window","dispatchEvent","event"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":48,"lineStart":46,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.923,"halstead":{"bugs":0.033,"difficulty":1.681,"effort":1314.972,"length":18.5,"time":73.054,"vocabulary":4.875,"volume":97.78,"operands":{"distinct":3.625,"total":9.75},"operators":{"distinct":1.25,"total":8.75}},"paramCount":0,"sloc":{"logical":6.5,"physical":7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":49.123,"halstead":{"bugs":0.027,"difficulty":2.529,"effort":398.9,"length":19.714,"time":22.161,"vocabulary":10.286,"volume":79.89,"operands":{"distinct":6.714,"total":10.429},"operators":{"distinct":3.571,"total":9.286}},"paramCount":0,"sloc":{"logical":6.714,"physical":8.571}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/integration/drag-drop-context/error-handling/error-in-react-tree.spec.js","testCases":3,"smells":20,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  11 |   let hasThrown: boolean = false;\n  12 |   function CanThrow(props: { shouldThrow: boolean }) {\n> 13 |     if (!hasThrown && props.shouldThrow) {\n     |    ^ Conditional Test Logic\n  14 |       hasThrown = true;\n  15 |       invariant(false, 'throwing');\n  16 |     }","start":{"line":13,"column":4,"index":479}},{"frame":"  35 |   let hasThrown: boolean = false;\n  36 |   function CanThrow(props: { shouldThrow: boolean }) {\n> 37 |     if (!hasThrown && props.shouldThrow) {\n     |    ^ Conditional Test Logic\n  38 |       hasThrown = true;\n  39 |       throw new Error('Boom');\n  40 |     }","start":{"line":37,"column":4,"index":1104}},{"frame":"  59 |   let hasThrown: boolean = false;\n  60 |   function CanThrow(props: { shouldThrow: boolean }) {\n> 61 |     if (!hasThrown && props.shouldThrow) {\n     |    ^ Conditional Test Logic\n  62 |       hasThrown = true;\n  63 |       // Boom: TypeError\n  64 |       window.foo();","start":{"line":61,"column":4,"index":1710}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  23 |\n  24 |   simpleLift(keyboard, getByTestId('0'));\n> 25 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |  ^ Duplicate Assert\n  26 |\n  27 |   withError(() => {\n  28 |     rerender(<App anotherChild={<CanThrow shouldThrow />} />);","start":{"line":25,"column":2,"index":761}},{"frame":"  29 |   });\n  30 |\n> 31 |   expect(isDragging(getByTestId('0'))).toBe(false);\n     |  ^ Duplicate Assert\n  32 | });\n  33 |\n  34 | it('should not recover from non-rbd errors', () => {","start":{"line":31,"column":2,"index":903}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  13 |     if (!hasThrown && props.shouldThrow) {\n  14 |       hasThrown = true;\n> 15 |       invariant(false, 'throwing');\n     |      ^ Eager Test\n  16 |     }\n  17 |     return null;\n  18 |   }","start":{"line":15,"column":6,"index":548}},{"frame":"  22 |   );\n  23 |\n> 24 |   simpleLift(keyboard, getByTestId('0'));\n     |  ^ Eager Test\n  25 |   expect(isDragging(getByTestId('0'))).toBe(true);\n  26 |\n  27 |   withError(() => {","start":{"line":24,"column":2,"index":719}},{"frame":"  23 |\n  24 |   simpleLift(keyboard, getByTestId('0'));\n> 25 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |         ^ Eager Test\n  26 |\n  27 |   withError(() => {\n  28 |     rerender(<App anotherChild={<CanThrow shouldThrow />} />);","start":{"line":25,"column":9,"index":768}},{"frame":"  29 |   });\n  30 |\n> 31 |   expect(isDragging(getByTestId('0'))).toBe(false);\n     |         ^ Eager Test\n  32 | });\n  33 |\n  34 | it('should not recover from non-rbd errors', () => {","start":{"line":31,"column":9,"index":910}},{"frame":"  46 |   );\n  47 |\n> 48 |   simpleLift(keyboard, getByTestId('0'));\n     |  ^ Eager Test\n  49 |   expect(isDragging(getByTestId('0'))).toBe(true);\n  50 |\n  51 |   withError(() => {","start":{"line":48,"column":2,"index":1339}},{"frame":"  47 |\n  48 |   simpleLift(keyboard, getByTestId('0'));\n> 49 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |         ^ Eager Test\n  50 |\n  51 |   withError(() => {\n  52 |     expect(() => {","start":{"line":49,"column":9,"index":1388}},{"frame":"  71 |   );\n  72 |\n> 73 |   simpleLift(keyboard, getByTestId('0'));\n     |  ^ Eager Test\n  74 |   expect(isDragging(getByTestId('0'))).toBe(true);\n  75 |\n  76 |   withError(() => {","start":{"line":73,"column":2,"index":1959}},{"frame":"  72 |\n  73 |   simpleLift(keyboard, getByTestId('0'));\n> 74 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |         ^ Eager Test\n  75 |\n  76 |   withError(() => {\n  77 |     expect(() => {","start":{"line":74,"column":9,"index":2008}}]},{"name":"Exception Handling","packageName":"exceptionHandling","items":[{"frame":"  37 |     if (!hasThrown && props.shouldThrow) {\n  38 |       hasThrown = true;\n> 39 |       throw new Error('Boom');\n     |      ^ Exception Handling\n  40 |     }\n  41 |     return null;\n  42 |   }","start":{"line":39,"column":6,"index":1173}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  22 |   );\n  23 |\n> 24 |   simpleLift(keyboard, getByTestId('0'));\n     |  ^ Lazy Test\n  25 |   expect(isDragging(getByTestId('0'))).toBe(true);\n  26 |\n  27 |   withError(() => {","start":{"line":24,"column":2,"index":719}},{"frame":"  23 |\n  24 |   simpleLift(keyboard, getByTestId('0'));\n> 25 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |         ^ Lazy Test\n  26 |\n  27 |   withError(() => {\n  28 |     rerender(<App anotherChild={<CanThrow shouldThrow />} />);","start":{"line":25,"column":9,"index":768}},{"frame":"  46 |   );\n  47 |\n> 48 |   simpleLift(keyboard, getByTestId('0'));\n     |  ^ Lazy Test\n  49 |   expect(isDragging(getByTestId('0'))).toBe(true);\n  50 |\n  51 |   withError(() => {","start":{"line":48,"column":2,"index":1339}},{"frame":"  47 |\n  48 |   simpleLift(keyboard, getByTestId('0'));\n> 49 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |         ^ Lazy Test\n  50 |\n  51 |   withError(() => {\n  52 |     expect(() => {","start":{"line":49,"column":9,"index":1388}},{"frame":"  71 |   );\n  72 |\n> 73 |   simpleLift(keyboard, getByTestId('0'));\n     |  ^ Lazy Test\n  74 |   expect(isDragging(getByTestId('0'))).toBe(true);\n  75 |\n  76 |   withError(() => {","start":{"line":73,"column":2,"index":1959}},{"frame":"  72 |\n  73 |   simpleLift(keyboard, getByTestId('0'));\n> 74 |   expect(isDragging(getByTestId('0'))).toBe(true);\n     |         ^ Lazy Test\n  75 |\n  76 |   withError(() => {\n  77 |     expect(() => {","start":{"line":74,"column":9,"index":2008}}]}],"metrics":{"aggregate":{"cyclomatic":18,"cyclomaticDensity":24.658,"halstead":{"bugs":0.359,"difficulty":26.75,"effort":28848.898,"length":200,"time":1602.717,"vocabulary":42,"volume":1078.463,"operands":{"distinct":28,"total":107,"identifiers":["it","\"should recover from rbd errors\"","hasThrown","false","CanThrow","props","shouldThrow","true","invariant","\"throwing\"","null","rerender","getByTestId","render","simpleLift","keyboard","\"0\"","expect","isDragging","toBe","withError","\"should not recover from non-rbd errors\"","Error","\"Boom\"","toThrow","\"should not recover from runtime errors\"","window","foo"]},"operators":{"distinct":14,"total":93,"identifiers":["()","function=>","let","=","function","if","&&","! (prefix)",".","return","const","{}","throw","new"]}},"paramCount":3,"sloc":{"logical":73,"physical":82}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"@testing-library/react","type":"esm"},{"line":4,"path":"../../../../../src/invariant","type":"esm"},{"line":5,"path":"../../util/app","type":"esm"},{"line":6,"path":"../../util/controls","type":"esm"},{"line":7,"path":"../../util/helpers","type":"esm"},{"line":8,"path":"../../../../util/console","type":"esm"}],"errors":[],"lineEnd":82,"lineStart":1,"maintainability":114.72,"methods":[{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.072,"difficulty":7.2,"effort":1563.343,"length":48,"time":86.852,"vocabulary":23,"volume":217.131,"operands":{"distinct":15,"total":27,"identifiers":["hasThrown","false","CanThrow","props","rerender","getByTestId","render","simpleLift","keyboard","\"0\"","expect","isDragging","toBe","true","withError"]},"operators":{"distinct":8,"total":21,"identifiers":["let","=","function","const","{}","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":18,"physical":23},"errors":[],"lineEnd":32,"lineStart":10,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":3,"cyclomaticDensity":75,"halstead":{"bugs":0.021,"difficulty":3.938,"effort":246.134,"length":16,"time":13.674,"vocabulary":15,"volume":62.51,"operands":{"distinct":8,"total":9,"identifiers":["hasThrown","props","shouldThrow","true","invariant","false","\"throwing\"","null"]},"operators":{"distinct":7,"total":7,"identifiers":["if","&&","! (prefix)",".","=","()","return"]}},"paramCount":1,"sloc":{"logical":4,"physical":7},"errors":[],"lineEnd":18,"lineStart":12,"name":"CanThrow","paramNames":["props"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0.5,"effort":1,"length":2,"time":0.056,"vocabulary":2,"volume":2,"operands":{"distinct":1,"total":1,"identifiers":["rerender"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":29,"lineStart":27,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.056,"difficulty":5.6,"effort":937.282,"length":37,"time":52.071,"vocabulary":23,"volume":167.372,"operands":{"distinct":15,"total":21,"identifiers":["hasThrown","false","CanThrow","props","rerender","getByTestId","render","simpleLift","keyboard","\"0\"","expect","isDragging","toBe","true","withError"]},"operators":{"distinct":8,"total":16,"identifiers":["let","=","function","const","{}","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":14,"physical":23},"errors":[],"lineEnd":56,"lineStart":34,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":3,"cyclomaticDensity":75,"halstead":{"bugs":0.021,"difficulty":4.571,"effort":285.761,"length":16,"time":15.876,"vocabulary":15,"volume":62.51,"operands":{"distinct":7,"total":8,"identifiers":["hasThrown","props","shouldThrow","true","Error","\"Boom\"","null"]},"operators":{"distinct":8,"total":8,"identifiers":["if","&&","! (prefix)",".","=","throw","new","return"]}},"paramCount":1,"sloc":{"logical":4,"physical":7},"errors":[],"lineEnd":42,"lineStart":36,"name":"CanThrow","paramNames":["props"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":20.897,"length":6,"time":1.161,"vocabulary":5,"volume":13.932,"operands":{"distinct":2,"total":2,"identifiers":["expect","toThrow"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":55,"lineStart":51,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0.5,"effort":1,"length":2,"time":0.056,"vocabulary":2,"volume":2,"operands":{"distinct":1,"total":1,"identifiers":["rerender"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":54,"lineStart":52,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.056,"difficulty":5.6,"effort":937.282,"length":37,"time":52.071,"vocabulary":23,"volume":167.372,"operands":{"distinct":15,"total":21,"identifiers":["hasThrown","false","CanThrow","props","rerender","getByTestId","render","simpleLift","keyboard","\"0\"","expect","isDragging","toBe","true","withError"]},"operators":{"distinct":8,"total":16,"identifiers":["let","=","function","const","{}","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":14,"physical":24},"errors":[],"lineEnd":81,"lineStart":58,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":3,"cyclomaticDensity":75,"halstead":{"bugs":0.02,"difficulty":4,"effort":243.671,"length":16,"time":13.537,"vocabulary":14,"volume":60.918,"operands":{"distinct":7,"total":8,"identifiers":["hasThrown","props","shouldThrow","true","window","foo","null"]},"operators":{"distinct":7,"total":8,"identifiers":["if","&&","! (prefix)",".","=","()","return"]}},"paramCount":1,"sloc":{"logical":4,"physical":8},"errors":[],"lineEnd":67,"lineStart":60,"name":"CanThrow","paramNames":["props"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":20.897,"length":6,"time":1.161,"vocabulary":5,"volume":13.932,"operands":{"distinct":2,"total":2,"identifiers":["expect","toThrow"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":80,"lineStart":76,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0.5,"effort":1,"length":2,"time":0.056,"vocabulary":2,"volume":2,"operands":{"distinct":1,"total":1,"identifiers":["rerender"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":79,"lineStart":77,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.5,"cyclomaticDensity":2.055,"halstead":{"bugs":0.03,"difficulty":2.229,"effort":2404.075,"length":16.667,"time":133.56,"vocabulary":3.5,"volume":89.872,"operands":{"distinct":2.333,"total":8.917},"operators":{"distinct":1.167,"total":7.75}},"paramCount":0.25,"sloc":{"logical":6.083,"physical":6.833}},"methodAverage":{"cyclomatic":1.545,"cyclomaticDensity":55.592,"halstead":{"bugs":0.023,"difficulty":3.219,"effort":387.115,"length":17.091,"time":21.506,"vocabulary":11.727,"volume":70.152,"operands":{"distinct":6.727,"total":9.182},"operators":{"distinct":5,"total":7.909}},"paramCount":0.273,"sloc":{"logical":6.091,"physical":10.091}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/health/src-file-name-convention.spec.js","testCases":1,"smells":3,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  26 |\n  27 |   paths.forEach((filePath: string) => {\n> 28 |     if (exceptions.includes(filePath)) {\n     |    ^ Conditional Test Logic\n  29 |       return;\n  30 |     }\n  31 |","start":{"line":28,"column":4,"index":791}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  20 |   const paths: string[] = await globby(targets);\n  21 |\n> 22 |   invariant(\n     |  ^ Eager Test\n  23 |     paths.length,\n  24 |     'Could not find files to test against file name convention',\n  25 |   );","start":{"line":22,"column":2,"index":647}},{"frame":"  32 |     const isMatching: boolean = isSnakeCase(filePath);\n  33 |\n> 34 |     invariant(\n     |    ^ Eager Test\n  35 |       isMatching,\n  36 |       `${filePath} does not follow the file path convention (snake-case.js) ${convention.toString()}`,\n  37 |     );","start":{"line":34,"column":4,"index":909}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":20.833,"halstead":{"bugs":0.171,"difficulty":8,"effort":4105.493,"length":94,"time":228.083,"vocabulary":44,"volume":513.187,"operands":{"distinct":33,"total":48,"identifiers":["convention","RegExp","/^[a-z0-9\\-./]+$/","isSnakeCase","filePath","test","exceptions","\"CHANGELOG.md\"","\"CODE_OF_CONDUCT.md\"","\"CONTRIBUTING.md\"","\"ISSUE_TEMPLATE.md\"","\"README.md\"","it","\"should have every prettier target following the file name convention\"","targets","pkg","config","prettier_target","split","\" \"","paths","globby","invariant","length","\"Could not find files to test against file name convention\"","forEach","includes","isMatching","toString"," does not follow the file path convention (snake-case.js) ","expect","toBe","true"]},"operators":{"distinct":11,"total":46,"identifiers":["const","=","function=>","()",".","[]",",","if","return","``","${}"]}},"paramCount":2,"sloc":{"logical":24,"physical":42}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"globby","type":"esm"},{"line":3,"path":"../../../src/invariant","type":"esm"},{"line":4,"path":"../../../package.json","type":"esm"}],"errors":[],"lineEnd":42,"lineStart":1,"maintainability":118.037,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["convention","test","filePath"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":8,"lineStart":8,"name":"<anon method-1>","paramNames":["filePath"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.042,"difficulty":3.077,"effort":384.916,"length":30,"time":21.384,"vocabulary":18,"volume":125.098,"operands":{"distinct":13,"total":16,"identifiers":["targets","pkg","config","prettier_target","split","\" \"","paths","globby","invariant","length","\"Could not find files to test against file name convention\"","forEach","filePath"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":24},"errors":[],"lineEnd":41,"lineStart":18,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":22.222,"halstead":{"bugs":0.046,"difficulty":5.333,"effort":737.609,"length":32,"time":40.978,"vocabulary":20,"volume":138.302,"operands":{"distinct":12,"total":16,"identifiers":["exceptions","includes","filePath","isMatching","isSnakeCase","invariant","convention","toString"," does not follow the file path convention (snake-case.js) ","expect","toBe","true"]},"operators":{"distinct":8,"total":16,"identifiers":["if","()",".","return","const","=","``","${}"]}},"paramCount":1,"sloc":{"logical":9,"physical":14},"errors":[],"lineEnd":40,"lineStart":27,"name":"<anon method-3>","paramNames":["filePath"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.25,"cyclomaticDensity":5.208,"halstead":{"bugs":0.043,"difficulty":2,"effort":1026.373,"length":23.5,"time":57.021,"vocabulary":11,"volume":128.297,"operands":{"distinct":8.25,"total":12},"operators":{"distinct":2.75,"total":11.5}},"paramCount":0.5,"sloc":{"logical":6,"physical":10.5}},"methodAverage":{"cyclomatic":1.333,"cyclomaticDensity":28.836,"halstead":{"bugs":0.031,"difficulty":3.137,"effort":378.045,"length":22.333,"time":21.002,"vocabulary":14.333,"volume":91.67,"operands":{"distinct":9.333,"total":11.667},"operators":{"distinct":5,"total":10.667}},"paramCount":0.667,"sloc":{"logical":6,"physical":13}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/docs/no-broken-links.spec.js","testCases":1,"smells":13,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  17 | // adding a forward slash to start of path\n  18 | const withLeadingSlash = (file: string): string => {\n> 19 |   if (file.startsWith('/')) {\n     |  ^ Conditional Test Logic\n  20 |     return file;\n  21 |   }\n  22 |   return `/${file}`;","start":{"line":19,"column":2,"index":483}},{"frame":"  26 |   const href: string = token.attrs[0][1];\n  27 |   // Not validating external links\n> 28 |   if (href.startsWith('http')) {\n     |  ^ Conditional Test Logic\n  29 |     return;\n  30 |   }\n  31 |","start":{"line":28,"column":2,"index":711}},{"frame":"  31 |\n  32 |   // not checking links within a file for now\n> 33 |   if (href.startsWith('#')) {\n     |  ^ Conditional Test Logic\n  34 |     return;\n  35 |   }\n  36 |","start":{"line":33,"column":2,"index":807}},{"frame":"  36 |\n  37 |   // not checking links to stories for now\n> 38 |   if (href.startsWith('/stories')) {\n     |  ^ Conditional Test Logic\n  39 |     return;\n  40 |   }\n  41 |","start":{"line":38,"column":2,"index":897}},{"frame":"  47 |   );\n  48 |\n> 49 |   if (isValid) {\n     |  ^ Conditional Test Logic\n  50 |     return;\n  51 |   }\n  52 |","start":{"line":49,"column":2,"index":1140}},{"frame":"  60 |\n  61 | const parse = (token: Token, file: string, files: string[]) => {\n> 62 |   if (token.type === 'link_open') {\n     |  ^ Conditional Test Logic\n  63 |     validate(token, file, files);\n  64 |   }\n  65 |   if (token.children) {","start":{"line":62,"column":2,"index":1390}},{"frame":"  63 |     validate(token, file, files);\n  64 |   }\n> 65 |   if (token.children) {\n     |  ^ Conditional Test Logic\n  66 |     token.children.forEach((child: Token) => parse(child, file, files));\n  67 |   }\n  68 | };","start":{"line":65,"column":2,"index":1464}},{"frame":"  72 |   expect(files.length).toBeGreaterThan(0);\n  73 |\n> 74 |   for (const file of files) {\n     |  ^ Conditional Test Logic\n  75 |     const contents: string = await fs.readFile(file, 'utf8');\n  76 |\n  77 |     const tokens: Token[] = markdown.parse(contents, {});","start":{"line":74,"column":2,"index":1734}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  70 | it('should use have no dead links', async () => {\n  71 |   const files: string[] = await globby(['**/*.md', '!node_modules/']);\n> 72 |   expect(files.length).toBeGreaterThan(0);\n     |                                       ^ Magic Number\n  73 |\n  74 |   for (const file of files) {\n  75 |     const contents: string = await fs.readFile(file, 'utf8');","start":{"line":72,"column":39,"index":1727}},{"frame":"  76 |\n  77 |     const tokens: Token[] = markdown.parse(contents, {});\n> 78 |     expect(tokens.length).toBeGreaterThan(0);\n     |                                          ^ Magic Number\n  79 |     tokens.forEach((token: Token) => parse(token, file, files));\n  80 |   }\n  81 |","start":{"line":78,"column":42,"index":1925}}]},{"name":"Redundant Assertion","packageName":"redundantAssertion","items":[{"frame":"  56 |   `;\n  57 |\n> 58 |   expect(false).toBe(message);\n     |  ^ Redundant Assertion\n  59 | };\n  60 |\n  61 | const parse = (token: Token, file: string, files: string[]) => {","start":{"column":2,"line":58}},{"frame":"  81 |\n  82 |   // need at least one assertion\n> 83 |   expect(true).toBe(true);\n     |  ^ Redundant Assertion\n  84 | });\n  85 |","start":{"column":2,"line":83}}]},{"name":"Resource Optimism","packageName":"resourceOptimism","items":[{"frame":"  73 |\n  74 |   for (const file of files) {\n> 75 |     const contents: string = await fs.readFile(file, 'utf8');\n     |                                   ^ Resource Optimism\n  76 |\n  77 |     const tokens: Token[] = markdown.parse(contents, {});\n  78 |     expect(tokens.length).toBeGreaterThan(0);","start":{"line":75,"column":35,"index":1797}}]}],"metrics":{"aggregate":{"cyclomatic":15,"cyclomaticDensity":24.59,"halstead":{"bugs":0.44,"difficulty":16.38,"effort":21621.6,"length":220,"time":1201.2,"vocabulary":64,"volume":1320,"operands":{"distinct":50,"total":117,"identifiers":["markdown","getProcessor","Token","type","attrs","children","withLeadingSlash","file","startsWith","\"/\"","/","validate","token","currentFile","files","href","0","1","\"http\"","\"#\"","\"/stories\"","withoutFragment","split","isValid","some","filePath","message","\n    Dead link: ","\n    Found in:  ","\n  ","expect","false","toBe","parse","\"link_open\"","forEach","child","it","\"should use have no dead links\"","globby","\"**/*.md\"","\"!node_modules/\"","length","toBeGreaterThan","contents","fs","readFile","\"utf8\"","tokens","true"]},"operators":{"distinct":14,"total":103,"identifiers":["const","=","()","function=>","if",".","return","``","${}","[]","===",",","forof","{}"]}},"paramCount":10,"sloc":{"logical":61,"physical":85}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"globby","type":"esm"},{"line":3,"path":"fs-extra","type":"esm"},{"line":4,"path":"markdown-it","type":"esm"}],"errors":[],"lineEnd":85,"lineStart":1,"maintainability":110.437,"methods":[{"cyclomatic":2,"cyclomaticDensity":50,"halstead":{"bugs":0.014,"difficulty":4.5,"effort":194.333,"length":13,"time":10.796,"vocabulary":10,"volume":43.185,"operands":{"distinct":4,"total":6,"identifiers":["file","startsWith","\"/\"","/"]},"operators":{"distinct":6,"total":7,"identifiers":["if","()",".","return","``","${}"]}},"paramCount":1,"sloc":{"logical":4,"physical":6},"errors":[],"lineEnd":23,"lineStart":18,"name":"<anon method-1>","paramNames":["file"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":5,"cyclomaticDensity":23.81,"halstead":{"bugs":0.124,"difficulty":7.292,"effort":2708.014,"length":73,"time":150.445,"vocabulary":34,"volume":371.385,"operands":{"distinct":24,"total":35,"identifiers":["href","token","attrs","0","1","startsWith","\"http\"","\"#\"","\"/stories\"","withoutFragment","split","isValid","files","some","filePath","message","withLeadingSlash","currentFile","\n    Dead link: ","\n    Found in:  ","\n  ","expect","false","toBe"]},"operators":{"distinct":10,"total":38,"identifiers":["const","=","[]",".","if","()","return","function=>","``","${}"]}},"paramCount":3,"sloc":{"logical":21,"physical":35},"errors":[],"lineEnd":59,"lineStart":25,"name":"<anon method-2>","paramNames":["token","currentFile","files"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["withoutFragment","withLeadingSlash","filePath"]},"operators":{"distinct":2,"total":2,"identifiers":["===","()"]}},"paramCount":1,"sloc":{"logical":2,"physical":2},"errors":[],"lineEnd":46,"lineStart":45,"name":"<anon method-3>","paramNames":["filePath"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":3,"cyclomaticDensity":60,"halstead":{"bugs":0.029,"difficulty":3.611,"effort":316.222,"length":23,"time":17.568,"vocabulary":14,"volume":87.569,"operands":{"distinct":9,"total":13,"identifiers":["token","type","\"link_open\"","validate","file","files","children","forEach","child"]},"operators":{"distinct":5,"total":10,"identifiers":["if","===",".","()","function=>"]}},"paramCount":3,"sloc":{"logical":5,"physical":8},"errors":[],"lineEnd":68,"lineStart":61,"name":"<anon method-4>","paramNames":["token","file","files"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":0.5,"effort":5.805,"length":5,"time":0.322,"vocabulary":5,"volume":11.61,"operands":{"distinct":4,"total":4,"identifiers":["parse","child","file","files"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":66,"lineStart":66,"name":"<anon method-5>","paramNames":["child"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.103,"difficulty":7.071,"effort":2186.02,"length":63,"time":121.446,"vocabulary":30,"volume":309.134,"operands":{"distinct":21,"total":33,"identifiers":["files","globby","\"**/*.md\"","\"!node_modules/\"","expect","length","toBeGreaterThan","0","file","contents","fs","readFile","\"utf8\"","tokens","Token","markdown","parse","forEach","token","true","toBe"]},"operators":{"distinct":9,"total":30,"identifiers":["const","=","()","[]",",",".","forof","{}","function=>"]}},"paramCount":0,"sloc":{"logical":15,"physical":15},"errors":[],"lineEnd":84,"lineStart":70,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":0.5,"effort":5.805,"length":5,"time":0.322,"vocabulary":5,"volume":11.61,"operands":{"distinct":4,"total":4,"identifiers":["parse","token","file","files"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":79,"lineStart":79,"name":"<anon method-7>","paramNames":["token"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.875,"cyclomaticDensity":3.074,"halstead":{"bugs":0.055,"difficulty":2.047,"effort":2702.7,"length":27.5,"time":150.15,"vocabulary":8,"volume":165,"operands":{"distinct":6.25,"total":14.625},"operators":{"distinct":1.75,"total":12.875}},"paramCount":1.25,"sloc":{"logical":7.625,"physical":10.625}},"methodAverage":{"cyclomatic":2,"cyclomaticDensity":41.497,"halstead":{"bugs":0.04,"difficulty":3.496,"effort":775.401,"length":26.714,"time":43.078,"vocabulary":14.714,"volume":120.872,"operands":{"distinct":9.857,"total":14},"operators":{"distinct":4.857,"total":12.714}},"paramCount":1.429,"sloc":{"logical":7.286,"physical":9.714}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/test/unit/docs/content.spec.js","testCases":2,"smells":8,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  12 |     '[← Back to documentation](/README.md#documentation-)';\n  13 |\n> 14 |   for (const file of files) {\n     |  ^ Conditional Test Logic\n  15 |     const contents: string = await fs.readFile(file, 'utf8');\n  16 |\n  17 |     // Printing a nice message to allow for quick fixing","start":{"line":14,"column":2,"index":510}},{"frame":"  18 |     const endsWithBacklink: boolean = contents.trim().endsWith(backLink);\n  19 |\n> 20 |     if (!endsWithBacklink) {\n     |    ^ Conditional Test Logic\n  21 |       expect(`\n  22 |         File: \"${file}\"\n  23 |         Did not end with back link","start":{"line":20,"column":4,"index":737}},{"frame":"  34 |   expect(files.length).toBeGreaterThan(0);\n  35 |\n> 36 |   for (const file of files) {\n     |  ^ Conditional Test Logic\n  37 |     const contents: string = await fs.readFile(file, 'utf8');\n  38 |\n  39 |     // Expected: <Draggable />, <Droppable />, `<DragDropContext />`","start":{"line":36,"column":2,"index":1101}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"   8 | it('should end all nested docs with a link back to the documentation root', async () => {\n   9 |   const files: string[] = await globby('docs/**/*.md');\n> 10 |   expect(files.length).toBeGreaterThan(0);\n     |                                       ^ Magic Number\n  11 |   const backLink: string =\n  12 |     '[← Back to documentation](/README.md#documentation-)';\n  13 |","start":{"line":10,"column":39,"index":416}},{"frame":"  32 | it('should use correct wording', async () => {\n  33 |   const files: string[] = await globby(['**/*.md', '!node_modules/']);\n> 34 |   expect(files.length).toBeGreaterThan(0);\n     |                                       ^ Magic Number\n  35 |\n  36 |   for (const file of files) {\n  37 |     const contents: string = await fs.readFile(file, 'utf8');","start":{"line":34,"column":39,"index":1094}}]},{"name":"Redundant Assertion","packageName":"redundantAssertion","items":[{"frame":"  26 |\n  27 |     // need at least one assertion\n> 28 |     expect(true).toBe(true);\n     |    ^ Redundant Assertion\n  29 |   }\n  30 | });\n  31 |","start":{"column":4,"line":28}}]},{"name":"Resource Optimism","packageName":"resourceOptimism","items":[{"frame":"  13 |\n  14 |   for (const file of files) {\n> 15 |     const contents: string = await fs.readFile(file, 'utf8');\n     |                                   ^ Resource Optimism\n  16 |\n  17 |     // Printing a nice message to allow for quick fixing\n  18 |     const endsWithBacklink: boolean = contents.trim().endsWith(backLink);","start":{"line":15,"column":35,"index":573}},{"frame":"  35 |\n  36 |   for (const file of files) {\n> 37 |     const contents: string = await fs.readFile(file, 'utf8');\n     |                                   ^ Resource Optimism\n  38 |\n  39 |     // Expected: <Draggable />, <Droppable />, `<DragDropContext />`\n  40 |     expect(contents.includes('`Draggable`')).toBe(false);","start":{"line":37,"column":35,"index":1164}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":7.407,"halstead":{"bugs":0.378,"difficulty":17.351,"effort":19679.406,"length":202,"time":1093.3,"vocabulary":49,"volume":1134.171,"operands":{"distinct":37,"total":107,"identifiers":["it","\"should end all nested docs with a link back to the documentation root\"","files","globby","\"docs/**/*.md\"","expect","length","toBeGreaterThan","0","backLink","\"[← Back to documentation](/README.md#documentation-)\"","file","contents","fs","readFile","\"utf8\"","endsWithBacklink","trim","endsWith","\n        File: \"","\"\n        Did not end with back link\n      ","toBe","true","\"should use correct wording\"","\"**/*.md\"","\"!node_modules/\"","includes","\"`Draggable`\"","false","\"`Droppable`\"","\"`DragDropContext`\"","\"`<Draggable/>`\"","\"`<Droppable/>`\"","\"`<DragDropContext/>`\"","\"`<Draggable>`\"","\"`<Droppable>`\"","\"`<DragDropContext>`\""]},"operators":{"distinct":12,"total":95,"identifiers":["()","function=>","const","=",".","forof","if","! (prefix)","``","${}","[]",","]}},"paramCount":0,"sloc":{"logical":54,"physical":55}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"globby","type":"esm"},{"line":3,"path":"fs-extra","type":"esm"}],"errors":[],"lineEnd":55,"lineStart":1,"maintainability":93.831,"methods":[{"cyclomatic":2,"cyclomaticDensity":12.5,"halstead":{"bugs":0.105,"difficulty":7.071,"effort":2220.718,"length":64,"time":123.373,"vocabulary":30,"volume":314.041,"operands":{"distinct":21,"total":33,"identifiers":["files","globby","\"docs/**/*.md\"","expect","length","toBeGreaterThan","0","backLink","\"[← Back to documentation](/README.md#documentation-)\"","file","contents","fs","readFile","\"utf8\"","endsWithBacklink","trim","endsWith","\n        File: \"","\"\n        Did not end with back link\n      ","toBe","true"]},"operators":{"distinct":9,"total":31,"identifiers":["const","=","()",".","forof","if","! (prefix)","``","${}"]}},"paramCount":0,"sloc":{"logical":16,"physical":23},"errors":[],"lineEnd":30,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.217,"difficulty":9.8,"effort":6370,"length":130,"time":353.889,"vocabulary":32,"volume":650,"operands":{"distinct":25,"total":70,"identifiers":["files","globby","\"**/*.md\"","\"!node_modules/\"","expect","length","toBeGreaterThan","0","file","contents","fs","readFile","\"utf8\"","includes","\"`Draggable`\"","toBe","false","\"`Droppable`\"","\"`DragDropContext`\"","\"`<Draggable/>`\"","\"`<Droppable/>`\"","\"`<DragDropContext/>`\"","\"`<Draggable>`\"","\"`<Droppable>`\"","\"`<DragDropContext>`\""]},"operators":{"distinct":7,"total":60,"identifiers":["const","=","()","[]",",",".","forof"]}},"paramCount":0,"sloc":{"logical":34,"physical":23},"errors":[],"lineEnd":54,"lineStart":32,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.333,"cyclomaticDensity":2.469,"halstead":{"bugs":0.126,"difficulty":5.784,"effort":6559.802,"length":67.333,"time":364.433,"vocabulary":16.333,"volume":378.057,"operands":{"distinct":12.333,"total":35.667},"operators":{"distinct":4,"total":31.667}},"paramCount":0,"sloc":{"logical":18,"physical":18.333}},"methodAverage":{"cyclomatic":1.5,"cyclomaticDensity":7.721,"halstead":{"bugs":0.161,"difficulty":8.436,"effort":4295.359,"length":97,"time":238.631,"vocabulary":31,"volume":482.02,"operands":{"distinct":23,"total":51.5},"operators":{"distinct":8,"total":45.5}},"paramCount":0,"sloc":{"logical":25,"physical":23}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/cypress/integration/reorder.spec.js","testCases":1,"smells":4,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  11 |   it('should reorder within a list', () => {\n  12 |     // order: 1, 2\n> 13 |     cy.get(getHandleSelector()).eq(0).as('first').should('contain', 'id:1');\n     |           ^ Eager Test\n  14 |     cy.get(getHandleSelector()).eq(1).should('contain', 'id:2');\n  15 |\n  16 |     // reorder operation","start":{"line":13,"column":11,"index":347}},{"frame":"  12 |     // order: 1, 2\n  13 |     cy.get(getHandleSelector()).eq(0).as('first').should('contain', 'id:1');\n> 14 |     cy.get(getHandleSelector()).eq(1).should('contain', 'id:2');\n     |           ^ Eager Test\n  15 |\n  16 |     // reorder operation\n  17 |     cy.get('@first')","start":{"line":14,"column":11,"index":424}},{"frame":"  27 |     // order now 2, 1\n  28 |     // note: not using get aliases as they where returning incorrect results\n> 29 |     cy.get(getHandleSelector()).eq(0).should('contain', 'id:2');\n     |           ^ Eager Test\n  30 |\n  31 |     cy.get(getHandleSelector()).eq(1).should('contain', 'id:1');\n  32 |","start":{"line":29,"column":11,"index":1020}},{"frame":"  29 |     cy.get(getHandleSelector()).eq(0).should('contain', 'id:2');\n  30 |\n> 31 |     cy.get(getHandleSelector()).eq(1).should('contain', 'id:1');\n     |           ^ Eager Test\n  32 |\n  33 |     // element should maintain focus post drag\n  34 |     cy.focused().should('contain', 'id:1');","start":{"line":31,"column":11,"index":1086}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":10.526,"halstead":{"bugs":0.257,"difficulty":6.706,"effort":5174.792,"length":145,"time":287.488,"vocabulary":40,"volume":771.68,"operands":{"distinct":34,"total":76,"identifiers":["describe","\"reorder\"","beforeEach","cy","visit","\"/iframe.html?id=single-vertical-list--basic\"","it","\"should reorder within a list\"","get","getHandleSelector","eq","0","as","\"first\"","should","\"contain\"","\"id:1\"","1","\"id:2\"","\"@first\"","focus","trigger","\"keydown\"","keyCode","keyCodes","space","arrowDown","force","true","wait","timings","outOfTheWay","1000","focused"]},"operators":{"distinct":6,"total":69,"identifiers":["()","function=>",".","{}",":","*"]}},"paramCount":0,"sloc":{"logical":38,"physical":37}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../src/view/key-codes","type":"esm"},{"line":3,"path":"../../src/animation","type":"esm"},{"line":4,"path":"./util","type":"esm"}],"errors":[],"lineEnd":37,"lineStart":1,"maintainability":110.024,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.005,"difficulty":1,"effort":16.253,"length":7,"time":0.903,"vocabulary":5,"volume":16.253,"operands":{"distinct":3,"total":3,"identifiers":["beforeEach","it","\"should reorder within a list\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":31},"errors":[],"lineEnd":36,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["cy","visit","\"/iframe.html?id=single-vertical-list--basic\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":9,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.215,"difficulty":6.296,"effort":4061.111,"length":129,"time":225.617,"vocabulary":32,"volume":645,"operands":{"distinct":27,"total":68,"identifiers":["cy","get","getHandleSelector","eq","0","as","\"first\"","should","\"contain\"","\"id:1\"","1","\"id:2\"","\"@first\"","focus","trigger","\"keydown\"","keyCode","keyCodes","space","arrowDown","force","true","wait","timings","outOfTheWay","1000","focused"]},"operators":{"distinct":5,"total":61,"identifiers":["()",".","{}",":","*"]}},"paramCount":0,"sloc":{"logical":31,"physical":25},"errors":[],"lineEnd":35,"lineStart":11,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.632,"halstead":{"bugs":0.064,"difficulty":1.676,"effort":1293.698,"length":36.25,"time":71.872,"vocabulary":10,"volume":192.92,"operands":{"distinct":8.5,"total":19},"operators":{"distinct":1.5,"total":17.25}},"paramCount":0,"sloc":{"logical":9.5,"physical":9.25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":42.742,"halstead":{"bugs":0.075,"difficulty":2.765,"effort":1362.991,"length":47,"time":75.722,"vocabulary":14,"volume":224.288,"operands":{"distinct":11,"total":24.667},"operators":{"distinct":3,"total":22.333}},"paramCount":0,"sloc":{"logical":12,"physical":19.667}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/cypress/integration/reorder-virtual.spec.js","testCases":1,"smells":2,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  12 |     const movements: number = 12;\n  13 |\n> 14 |     cy.get(getHandleSelector()).first().as('item');\n     |           ^ Eager Test\n  15 |\n  16 |     cy.get('@item').invoke('attr', 'data-testid').as('item-id');\n  17 |","start":{"line":14,"column":11,"index":371}},{"frame":"  46 |     // eslint-disable-next-line jest/valid-expect-in-promise\n  47 |     cy.get('@item-id').then((id) => {\n> 48 |       cy.get(getHandleSelector(id))\n     |             ^ Eager Test\n  49 |         .invoke('attr', 'data-index')\n  50 |         .should('equal', `${movements}`);\n  51 |     });","start":{"line":48,"column":13,"index":1508}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":13.333,"halstead":{"bugs":0.348,"difficulty":9.894,"effort":10329.8,"length":179,"time":573.878,"vocabulary":57,"volume":1044.087,"operands":{"distinct":47,"total":93,"identifiers":["describe","\"reorder: virtual\"","beforeEach","cy","visit","\"/iframe.html?id=virtual-react-window--list\"","it","\"should reorder within a list\"","movements","12","get","getHandleSelector","first","as","\"item\"","\"@item\"","invoke","\"attr\"","\"data-testid\"","\"item-id\"","\"data-index\"","\"item-index\"","should","\"equal\"","\"0\"","focus","trigger","\"keydown\"","keyCode","keyCodes","space","wrap","Array","from","length","each","arrowDown","force","true","wait","timings","outOfTheWay","1000","2","\"@item-id\"","then","id"]},"operators":{"distinct":10,"total":86,"identifiers":["()","function=>",".","const","=","{}",":","*","``","${}"]}},"paramCount":1,"sloc":{"logical":45,"physical":54}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../src/view/key-codes","type":"esm"},{"line":3,"path":"../../src/animation","type":"esm"},{"line":4,"path":"./util","type":"esm"}],"errors":[],"lineEnd":54,"lineStart":1,"maintainability":112.876,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.005,"difficulty":1,"effort":16.253,"length":7,"time":0.903,"vocabulary":5,"volume":16.253,"operands":{"distinct":3,"total":3,"identifiers":["beforeEach","it","\"should reorder within a list\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":48},"errors":[],"lineEnd":53,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["cy","visit","\"/iframe.html?id=virtual-react-window--list\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":9,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.207,"difficulty":6.176,"effort":3838.528,"length":116,"time":213.252,"vocabulary":41,"volume":621.476,"operands":{"distinct":34,"total":60,"identifiers":["movements","12","cy","get","getHandleSelector","first","as","\"item\"","\"@item\"","invoke","\"attr\"","\"data-testid\"","\"item-id\"","\"data-index\"","\"item-index\"","should","\"equal\"","\"0\"","focus","trigger","\"keydown\"","keyCode","keyCodes","space","wrap","Array","from","length","each","force","true","\"@item-id\"","then","id"]},"operators":{"distinct":7,"total":56,"identifiers":["const","=","()",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":29,"physical":42},"errors":[],"lineEnd":52,"lineStart":11,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.04,"difficulty":2.5,"effort":302.535,"length":28,"time":16.807,"vocabulary":20,"volume":121.014,"operands":{"distinct":15,"total":15,"identifiers":["cy","get","\"@item\"","trigger","\"keydown\"","keyCode","keyCodes","arrowDown","force","true","wait","timings","outOfTheWay","1000","2"]},"operators":{"distinct":5,"total":13,"identifiers":["()",".","{}",":","*"]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":36,"lineStart":30,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.024,"difficulty":2,"effort":144.679,"length":19,"time":8.038,"vocabulary":14,"volume":72.34,"operands":{"distinct":10,"total":10,"identifiers":["cy","get","getHandleSelector","id","invoke","\"attr\"","\"data-index\"","should","\"equal\"","movements"]},"operators":{"distinct":4,"total":9,"identifiers":["()",".","``","${}"]}},"paramCount":1,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":51,"lineStart":47,"name":"<anon method-5>","paramNames":["id"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.222,"halstead":{"bugs":0.058,"difficulty":1.649,"effort":1721.633,"length":29.833,"time":95.646,"vocabulary":9.5,"volume":174.015,"operands":{"distinct":7.833,"total":15.5},"operators":{"distinct":1.667,"total":14.333}},"paramCount":0.167,"sloc":{"logical":7.5,"physical":9}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":34.69,"halstead":{"bugs":0.056,"difficulty":2.535,"effort":862.721,"length":35,"time":47.929,"vocabulary":17,"volume":168.539,"operands":{"distinct":13,"total":18.2},"operators":{"distinct":4,"total":16.8}},"paramCount":0.2,"sloc":{"logical":8.6,"physical":21}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/cypress/integration/move-between-lists.spec.js","testCases":1,"smells":3,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  11 |   it('should move between lists', () => {\n  12 |     // first list has item with id:2\n> 13 |     cy.get(getDroppableSelector())\n     |           ^ Eager Test\n  14 |       .eq(1)\n  15 |       .as('first-list')\n  16 |       .should('contain', 'id:2');","start":{"line":13,"column":11,"index":381}},{"frame":"  17 |\n  18 |     // second list does not have item with id:2\n> 19 |     cy.get(getDroppableSelector())\n     |           ^ Eager Test\n  20 |       .eq(2)\n  21 |       .as('second-list')\n  22 |       .should('not.contain', 'id:2');","start":{"line":19,"column":11,"index":536}},{"frame":"  23 |\n  24 |     cy.get('@first-list')\n> 25 |       .find(getHandleSelector())\n     |            ^ Eager Test\n  26 |       .first()\n  27 |       .should('contain', 'id:2')\n  28 |       .focus()","start":{"line":25,"column":12,"index":675}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":11.111,"halstead":{"bugs":0.253,"difficulty":5.763,"effort":4373.436,"length":139,"time":242.969,"vocabulary":44,"volume":758.861,"operands":{"distinct":38,"total":73,"identifiers":["describe","\"move between lists\"","beforeEach","cy","visit","\"/iframe.html?id=board--simple\"","it","\"should move between lists\"","get","getDroppableSelector","eq","1","as","\"first-list\"","should","\"contain\"","\"id:2\"","2","\"second-list\"","\"not.contain\"","\"@first-list\"","find","getHandleSelector","first","focus","trigger","\"keydown\"","keyCode","keyCodes","space","arrowRight","force","true","wait","timings","outOfTheWay","1000","\"@second-list\""]},"operators":{"distinct":6,"total":66,"identifiers":["()","function=>",".","{}",":","*"]}},"paramCount":0,"sloc":{"logical":36,"physical":42}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../src/view/key-codes","type":"esm"},{"line":3,"path":"../../src/animation","type":"esm"},{"line":4,"path":"./util","type":"esm"}],"errors":[],"lineEnd":42,"lineStart":1,"maintainability":111.475,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.005,"difficulty":1,"effort":16.253,"length":7,"time":0.903,"vocabulary":5,"volume":16.253,"operands":{"distinct":3,"total":3,"identifiers":["beforeEach","it","\"should move between lists\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":36},"errors":[],"lineEnd":41,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["cy","visit","\"/iframe.html?id=board--simple\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":9,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.212,"difficulty":5.242,"effort":3333.351,"length":123,"time":185.186,"vocabulary":36,"volume":635.901,"operands":{"distinct":31,"total":65,"identifiers":["cy","get","getDroppableSelector","eq","1","as","\"first-list\"","should","\"contain\"","\"id:2\"","2","\"second-list\"","\"not.contain\"","\"@first-list\"","find","getHandleSelector","first","focus","trigger","\"keydown\"","keyCode","keyCodes","space","arrowRight","force","true","wait","timings","outOfTheWay","1000","\"@second-list\""]},"operators":{"distinct":5,"total":58,"identifiers":["()",".","{}",":","*"]}},"paramCount":0,"sloc":{"logical":29,"physical":30},"errors":[],"lineEnd":40,"lineStart":11,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.778,"halstead":{"bugs":0.063,"difficulty":1.441,"effort":1093.359,"length":34.75,"time":60.742,"vocabulary":11,"volume":189.715,"operands":{"distinct":9.5,"total":18.25},"operators":{"distinct":1.5,"total":16.5}},"paramCount":0,"sloc":{"logical":9,"physical":10.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":42.816,"halstead":{"bugs":0.074,"difficulty":2.414,"effort":1120.405,"length":45,"time":62.245,"vocabulary":15.333,"volume":221.255,"operands":{"distinct":12.333,"total":23.667},"operators":{"distinct":3,"total":21.333}},"paramCount":0,"sloc":{"logical":11.333,"physical":23}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/cypress/integration/focus.spec.js","testCases":4,"smells":23,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"   7 |     cy.visit('/iframe.html?id=board--dragging-a-clone');\n   8 |     // focusing on another handle\n>  9 |     cy.get(getHandleSelector('1')).focus();\n     |           ^ Eager Test\n  10 |     cy.focused().should('contain', 'id:1');\n  11 |\n  12 |     cy.get(getHandleSelector('2'))","start":{"line":9,"column":11,"index":333}},{"frame":"  10 |     cy.focused().should('contain', 'id:1');\n  11 |\n> 12 |     cy.get(getHandleSelector('2'))\n     |           ^ Eager Test\n  13 |       .as('id:2')\n  14 |       .trigger('mousedown', { button: 0 })\n  15 |       .trigger('mousemove', {","start":{"line":12,"column":11,"index":422}},{"frame":"  21 |\n  22 |     // asserting id:2 is now dragging\n> 23 |     cy.get(getHandleSelector('2')).should(\n     |           ^ Eager Test\n  24 |       'have.attr',\n  25 |       'data-is-dragging',\n  26 |       'true',","start":{"line":23,"column":11,"index":681}},{"frame":"  30 |     cy.focused().should('contain', 'id:1');\n  31 |\n> 32 |     cy.get(getHandleSelector('2'))\n     |           ^ Eager Test\n  33 |       .trigger('mouseup', { force: true })\n  34 |       // clone will be unmounting during drop\n  35 |       .should('not.exist');","start":{"line":32,"column":11,"index":860}},{"frame":"  36 |\n  37 |     // getting post clone handle\n> 38 |     cy.get(getHandleSelector('2')).should(\n     |           ^ Eager Test\n  39 |       'have.attr',\n  40 |       'data-is-dragging',\n  41 |       'false',","start":{"line":38,"column":11,"index":1046}},{"frame":"  49 |     cy.visit('/iframe.html?id=board--dragging-a-clone');\n  50 |     // focusing on another handle\n> 51 |     cy.get(getHandleSelector('2')).focus();\n     |           ^ Eager Test\n  52 |     cy.focused().should('contain', 'id:2');\n  53 |\n  54 |     cy.get(getHandleSelector('2')).trigger('keydown', {","start":{"line":51,"column":11,"index":1381}},{"frame":"  52 |     cy.focused().should('contain', 'id:2');\n  53 |\n> 54 |     cy.get(getHandleSelector('2')).trigger('keydown', {\n     |           ^ Eager Test\n  55 |       keyCode: keyCodes.space,\n  56 |     });\n  57 |","start":{"line":54,"column":11,"index":1470}},{"frame":"  57 |\n  58 |     // asserting id:2 is now dragging\n> 59 |     cy.get(getHandleSelector('2')).should(\n     |           ^ Eager Test\n  60 |       'have.attr',\n  61 |       'data-is-dragging',\n  62 |       'true',","start":{"line":59,"column":11,"index":1604}},{"frame":"  66 |     cy.focused().should('contain', 'id:2');\n  67 |\n> 68 |     cy.get(getHandleSelector('2'))\n     |           ^ Eager Test\n  69 |       .trigger('keydown', { keyCode: keyCodes.arrowRight, force: true })\n  70 |       .trigger('keydown', { keyCode: keyCodes.space, force: true })\n  71 |       // clone will be unmounting during drop","start":{"line":68,"column":11,"index":1783}},{"frame":"  73 |\n  74 |     // getting post clone handle\n> 75 |     cy.get(getHandleSelector('2'))\n     |           ^ Eager Test\n  76 |       // no longer dragging\n  77 |       .should('have.attr', 'data-is-dragging', 'false')\n  78 |       // is in the second column (normally would loose focus moving between lists)","start":{"line":75,"column":11,"index":2067}},{"frame":"  77 |       .should('have.attr', 'data-is-dragging', 'false')\n  78 |       // is in the second column (normally would loose focus moving between lists)\n> 79 |       .closest(getDraggableSelector('BMO'));\n     |               ^ Eager Test\n  80 |\n  81 |     // focus maintained\n  82 |     cy.focused().should('contain', 'id:2');","start":{"line":79,"column":15,"index":2273}},{"frame":"  85 |   it('should give focus to a combine target', () => {\n  86 |     cy.visit('/iframe.html?id=board--with-combining-and-cloning');\n> 87 |     cy.get(getHandleSelector('2')).focus();\n     |           ^ Eager Test\n  88 |     cy.focused().should('contain', 'id:2');\n  89 |\n  90 |     cy.get(getHandleSelector('2')).trigger('keydown', {","start":{"line":87,"column":11,"index":2511}},{"frame":"  88 |     cy.focused().should('contain', 'id:2');\n  89 |\n> 90 |     cy.get(getHandleSelector('2')).trigger('keydown', {\n     |           ^ Eager Test\n  91 |       keyCode: keyCodes.space,\n  92 |     });\n  93 |","start":{"line":90,"column":11,"index":2600}},{"frame":"  93 |\n  94 |     // asserting id:2 is now dragging\n> 95 |     cy.get(getHandleSelector('2')).should(\n     |           ^ Eager Test\n  96 |       'have.attr',\n  97 |       'data-is-dragging',\n  98 |       'true',","start":{"line":95,"column":11,"index":2734}},{"frame":"  102 |     cy.focused().should('contain', 'id:2');\n  103 |\n> 104 |     cy.get(getHandleSelector('2'))\n      |           ^ Eager Test\n  105 |       .trigger('keydown', { keyCode: keyCodes.arrowRight, force: true })\n  106 |       // combining with item:1\n  107 |       .trigger('keydown', { keyCode: keyCodes.arrowUp, force: true })","start":{"line":104,"column":11,"index":2913}},{"frame":"  118 |     cy.visit('/iframe.html?id=board--with-combining-and-cloning');\n  119 |     // focusing on something unrelated to the drag\n> 120 |     cy.get(getHandleSelector('3')).focus();\n      |           ^ Eager Test\n  121 |\n  122 |     cy.get(getHandleSelector('2')).trigger('keydown', {\n  123 |       keyCode: keyCodes.space,","start":{"line":120,"column":11,"index":3605}},{"frame":"  120 |     cy.get(getHandleSelector('3')).focus();\n  121 |\n> 122 |     cy.get(getHandleSelector('2')).trigger('keydown', {\n      |           ^ Eager Test\n  123 |       keyCode: keyCodes.space,\n  124 |     });\n  125 |","start":{"line":122,"column":11,"index":3650}},{"frame":"  125 |\n  126 |     // asserting id:2 is now dragging\n> 127 |     cy.get(getHandleSelector('2')).should(\n      |           ^ Eager Test\n  128 |       'have.attr',\n  129 |       'data-is-dragging',\n  130 |       'true',","start":{"line":127,"column":11,"index":3784}},{"frame":"  134 |     cy.focused().should('contain', 'id:3');\n  135 |\n> 136 |     cy.get(getHandleSelector('2'))\n      |           ^ Eager Test\n  137 |       .trigger('keydown', { keyCode: keyCodes.arrowRight, force: true })\n  138 |       // combining with item:1\n  139 |       .trigger('keydown', { keyCode: keyCodes.arrowUp, force: true })","start":{"line":136,"column":11,"index":3963}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"   7 |     cy.visit('/iframe.html?id=board--dragging-a-clone');\n   8 |     // focusing on another handle\n>  9 |     cy.get(getHandleSelector('1')).focus();\n     |           ^ Lazy Test\n  10 |     cy.focused().should('contain', 'id:1');\n  11 |\n  12 |     cy.get(getHandleSelector('2'))","start":{"line":9,"column":11,"index":333}},{"frame":"  49 |     cy.visit('/iframe.html?id=board--dragging-a-clone');\n  50 |     // focusing on another handle\n> 51 |     cy.get(getHandleSelector('2')).focus();\n     |           ^ Lazy Test\n  52 |     cy.focused().should('contain', 'id:2');\n  53 |\n  54 |     cy.get(getHandleSelector('2')).trigger('keydown', {","start":{"line":51,"column":11,"index":1381}},{"frame":"  85 |   it('should give focus to a combine target', () => {\n  86 |     cy.visit('/iframe.html?id=board--with-combining-and-cloning');\n> 87 |     cy.get(getHandleSelector('2')).focus();\n     |           ^ Lazy Test\n  88 |     cy.focused().should('contain', 'id:2');\n  89 |\n  90 |     cy.get(getHandleSelector('2')).trigger('keydown', {","start":{"line":87,"column":11,"index":2511}},{"frame":"  118 |     cy.visit('/iframe.html?id=board--with-combining-and-cloning');\n  119 |     // focusing on something unrelated to the drag\n> 120 |     cy.get(getHandleSelector('3')).focus();\n      |           ^ Lazy Test\n  121 |\n  122 |     cy.get(getHandleSelector('2')).trigger('keydown', {\n  123 |       keyCode: keyCodes.space,","start":{"line":120,"column":11,"index":3605}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":4.688,"halstead":{"bugs":0.975,"difficulty":13.95,"effort":40808.884,"length":506,"time":2267.16,"vocabulary":55,"volume":2925.368,"operands":{"distinct":50,"total":279,"identifiers":["describe","\"focus\"","it","\"should not steal focus if not already focused when lifting\"","cy","visit","\"/iframe.html?id=board--dragging-a-clone\"","get","getHandleSelector","\"1\"","focus","focused","should","\"contain\"","\"id:1\"","\"2\"","as","\"id:2\"","trigger","\"mousedown\"","button","0","\"mousemove\"","clientX","200","clientY","300","force","true","\"have.attr\"","\"data-is-dragging\"","\"true\"","\"mouseup\"","\"not.exist\"","\"false\"","\"should maintain focus if dragging a clone\"","\"keydown\"","keyCode","keyCodes","space","arrowRight","closest","getDraggableSelector","\"BMO\"","\"should give focus to a combine target\"","\"/iframe.html?id=board--with-combining-and-cloning\"","arrowUp","\"should not give focus to a combine target if source did not have focus at start of drag\"","\"3\"","\"id:3\""]},"operators":{"distinct":5,"total":227,"identifiers":["()","function=>",".","{}",":"]}},"paramCount":0,"sloc":{"logical":128,"physical":149}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../src/view/key-codes","type":"esm"},{"line":3,"path":"./util","type":"esm"}],"errors":[],"lineEnd":149,"lineStart":1,"maintainability":91.242,"methods":[{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should not steal focus if not already focused when lifting\"","\"should maintain focus if dragging a clone\"","\"should give focus to a combine target\"","\"should not give focus to a combine target if source did not have focus at start of drag\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":144},"errors":[],"lineEnd":148,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.21,"difficulty":4.452,"effort":2808.531,"length":123,"time":156.029,"vocabulary":35,"volume":630.902,"operands":{"distinct":31,"total":69,"identifiers":["cy","visit","\"/iframe.html?id=board--dragging-a-clone\"","get","getHandleSelector","\"1\"","focus","focused","should","\"contain\"","\"id:1\"","\"2\"","as","\"id:2\"","trigger","\"mousedown\"","button","0","\"mousemove\"","clientX","200","clientY","300","force","true","\"have.attr\"","\"data-is-dragging\"","\"true\"","\"mouseup\"","\"not.exist\"","\"false\""]},"operators":{"distinct":4,"total":54,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":31,"physical":41},"errors":[],"lineEnd":46,"lineStart":6,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.211,"difficulty":5.259,"effort":3335.092,"length":128,"time":185.283,"vocabulary":31,"volume":634.137,"operands":{"distinct":27,"total":71,"identifiers":["cy","visit","\"/iframe.html?id=board--dragging-a-clone\"","get","getHandleSelector","\"2\"","focus","focused","should","\"contain\"","\"id:2\"","trigger","\"keydown\"","keyCode","keyCodes","space","\"have.attr\"","\"data-is-dragging\"","\"true\"","arrowRight","force","true","\"not.exist\"","\"false\"","closest","getDraggableSelector","\"BMO\""]},"operators":{"distinct":4,"total":57,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":31,"physical":36},"errors":[],"lineEnd":83,"lineStart":48,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.198,"difficulty":5.36,"effort":3176.731,"length":122,"time":176.485,"vocabulary":29,"volume":592.674,"operands":{"distinct":25,"total":67,"identifiers":["cy","visit","\"/iframe.html?id=board--with-combining-and-cloning\"","get","getHandleSelector","\"2\"","focus","focused","should","\"contain\"","\"id:2\"","trigger","\"keydown\"","keyCode","keyCodes","space","\"have.attr\"","\"data-is-dragging\"","\"true\"","arrowRight","force","true","arrowUp","\"not.exist\"","\"id:1\""]},"operators":{"distinct":4,"total":55,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":29,"physical":31},"errors":[],"lineEnd":115,"lineStart":85,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.183,"difficulty":4.96,"effort":2722.801,"length":113,"time":151.267,"vocabulary":29,"volume":548.952,"operands":{"distinct":25,"total":62,"identifiers":["cy","visit","\"/iframe.html?id=board--with-combining-and-cloning\"","get","getHandleSelector","\"3\"","focus","\"2\"","trigger","\"keydown\"","keyCode","keyCodes","space","should","\"have.attr\"","\"data-is-dragging\"","\"true\"","focused","\"contain\"","\"id:3\"","arrowRight","force","true","arrowUp","\"not.exist\""]},"operators":{"distinct":4,"total":51,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":27,"physical":31},"errors":[],"lineEnd":147,"lineStart":117,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.781,"halstead":{"bugs":0.163,"difficulty":2.325,"effort":6801.481,"length":84.333,"time":377.86,"vocabulary":9.167,"volume":487.561,"operands":{"distinct":8.333,"total":46.5},"operators":{"distinct":0.833,"total":37.833}},"paramCount":0,"sloc":{"logical":21.333,"physical":24.833}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":5.221,"halstead":{"bugs":0.163,"difficulty":4.326,"effort":2423.005,"length":100.4,"time":134.611,"vocabulary":26.2,"volume":490.316,"operands":{"distinct":22.6,"total":55.4},"operators":{"distinct":3.6,"total":45}},"paramCount":0,"sloc":{"logical":25.2,"physical":56.6}}}},{"path":"/home/gabriel/Desktop/research/projects/react-beautiful-dnd/cypress/integration/content-security-policy.spec.js","testCases":3,"smells":3,"smellInfo":[{"name":"Unknown Test","packageName":"unknownTest","items":[{"frame":"  35 |\n  36 | describe('content security policy', () => {\n> 37 |   it('should reorder a list without a nonce', () => {\n     |  ^ Unknown Test\n  38 |     commonTest(`http://localhost:${ports.cspServer}`, 'contain');\n  39 |   });\n  40 |","start":{"column":2,"line":37}},{"frame":"  39 |   });\n  40 |\n> 41 |   it('should reorder a list with a nonce', () => {\n     |  ^ Unknown Test\n  42 |     commonTest(`http://localhost:${ports.cspServer}/nonce`, 'contain');\n  43 |   });\n  44 |","start":{"column":2,"line":41}},{"frame":"  43 |   });\n  44 |\n> 45 |   it('should reorder a list with a wrong nonce', () => {\n     |  ^ Unknown Test\n  46 |     commonTest(\n  47 |       `http://localhost:${ports.cspServer}/wrong-nonce`,\n  48 |       'not.contain',","start":{"column":2,"line":45}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":13.043,"halstead":{"bugs":0.37,"difficulty":10.5,"effort":11662.28,"length":193,"time":647.904,"vocabulary":54,"volume":1110.693,"operands":{"distinct":45,"total":105,"identifiers":["commonTest","url","cspTest","cy","visit","get","getHandleSelector","eq","0","as","\"first\"","should","\"contain\"","\"item 0\"","1","\"item 1\"","\"@first\"","focus","trigger","\"keydown\"","keyCode","keyCodes","space","arrowDown","force","true","wait","timings","outOfTheWay","1000","focused","\"#cspErrors\"","\"0\"","describe","\"content security policy\"","it","\"should reorder a list without a nonce\"","ports","cspServer","http://localhost:","\"should reorder a list with a nonce\"","/nonce","\"should reorder a list with a wrong nonce\"","/wrong-nonce","\"not.contain\""]},"operators":{"distinct":9,"total":88,"identifiers":["function","()",".","{}",":","*","function=>","``","${}"]}},"paramCount":2,"sloc":{"logical":46,"physical":52}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../src/view/key-codes","type":"esm"},{"line":3,"path":"../../src/animation","type":"esm"},{"line":4,"path":"./util","type":"esm"},{"line":5,"path":"../../server-ports","type":"esm"}],"errors":[],"lineEnd":52,"lineStart":1,"maintainability":112.105,"methods":[{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.25,"difficulty":6.016,"effort":4512.689,"length":144,"time":250.705,"vocabulary":37,"volume":750.161,"operands":{"distinct":32,"total":77,"identifiers":["cy","visit","url","get","getHandleSelector","eq","0","as","\"first\"","should","\"contain\"","\"item 0\"","1","\"item 1\"","\"@first\"","focus","trigger","\"keydown\"","keyCode","keyCodes","space","arrowDown","force","true","wait","timings","outOfTheWay","1000","focused","\"#cspErrors\"","cspTest","\"0\""]},"operators":{"distinct":5,"total":67,"identifiers":["()",".","{}",":","*"]}},"paramCount":2,"sloc":{"logical":34,"physical":28},"errors":[],"lineEnd":34,"lineStart":7,"name":"commonTest","paramNames":["url","cspTest"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should reorder a list without a nonce\"","\"should reorder a list with a nonce\"","\"should reorder a list with a wrong nonce\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":16},"errors":[],"lineEnd":51,"lineStart":36,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.01,"difficulty":2,"effort":57.059,"length":9,"time":3.17,"vocabulary":9,"volume":28.529,"operands":{"distinct":5,"total":5,"identifiers":["commonTest","ports","cspServer","http://localhost:","\"contain\""]},"operators":{"distinct":4,"total":4,"identifiers":["()","``","${}","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":39,"lineStart":37,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.011,"difficulty":2,"effort":66.439,"length":10,"time":3.691,"vocabulary":10,"volume":33.219,"operands":{"distinct":6,"total":6,"identifiers":["commonTest","ports","cspServer","http://localhost:","/nonce","\"contain\""]},"operators":{"distinct":4,"total":4,"identifiers":["()","``","${}","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":43,"lineStart":41,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.011,"difficulty":2,"effort":66.439,"length":10,"time":3.691,"vocabulary":10,"volume":33.219,"operands":{"distinct":6,"total":6,"identifiers":["commonTest","ports","cspServer","http://localhost:","/wrong-nonce","\"not.contain\""]},"operators":{"distinct":4,"total":4,"identifiers":["()","``","${}","."]}},"paramCount":0,"sloc":{"logical":1,"physical":6},"errors":[],"lineEnd":50,"lineStart":45,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.174,"halstead":{"bugs":0.062,"difficulty":1.75,"effort":1943.713,"length":32.167,"time":107.984,"vocabulary":9,"volume":185.116,"operands":{"distinct":7.5,"total":17.5},"operators":{"distinct":1.5,"total":14.667}},"paramCount":0.333,"sloc":{"logical":7.667,"physical":8.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":63.922,"halstead":{"bugs":0.058,"difficulty":2.703,"effort":949.831,"length":37,"time":52.768,"vocabulary":14.4,"volume":175.23,"operands":{"distinct":10.6,"total":20},"operators":{"distinct":3.8,"total":17}},"paramCount":0.4,"sloc":{"logical":8.6,"physical":11.2}}}}]}