{"project":"steel","version":"","testSuites":121,"testCases":296,"smelledTestSuites":74,"smelledTestCases":0,"smells":557,"smelledFiles":[{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/bundles.test.js","testCases":3,"smells":4,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  16 | const check = (code, module = false) => {\n  17 |   const args = [\"-e\", code];\n> 18 |   if (module) args.push(\"--input-type=module\");\n     |  ^ Conditional Test Logic\n  19 |   const { status, stdout, stderr } = spawnSync(\"node\", args);\n  20 |   expect(stderr.toString()).toBe(\"\"); // No warnings or errors are printed\n  21 |   expect(stdout.toString()).toBe(TARGET_OUTPUT); // The output should match","start":{"line":18,"column":2,"index":597}}]},{"name":"Unknown Test","packageName":"unknownTest","items":[{"frame":"  24 |\n  25 | describe(\"Testing the bundle\", () => {\n> 26 |   it(\"ECMAScript Module (ESM)\", () => {\n     |  ^ Unknown Test\n  27 |     check(`import { pipeline } from \"${MODULE_NAME}\";${CODE_BODY}`, true);\n  28 |   });\n  29 |","start":{"column":2,"line":26}},{"frame":"  28 |   });\n  29 |\n> 30 |   it(\"CommonJS (CJS) with require\", () => {\n     |  ^ Unknown Test\n  31 |     check(`const { pipeline } = require(\"${MODULE_NAME}\");${wrap_async_iife(CODE_BODY)}`);\n  32 |   });\n  33 |","start":{"column":2,"line":30}},{"frame":"  32 |   });\n  33 |\n> 34 |   it(\"CommonJS (CJS) with dynamic import\", () => {\n     |  ^ Unknown Test\n  35 |     check(`${wrap_async_iife(`const { pipeline } = await import(\"${MODULE_NAME}\");${CODE_BODY}`)}`);\n  36 |   });\n  37 | });","start":{"column":2,"line":34}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":21.622,"halstead":{"bugs":0.254,"difficulty":10.013,"effort":7628.974,"length":135,"time":423.832,"vocabulary":50,"volume":761.921,"operands":{"distinct":39,"total":71,"identifiers":["MODULE_NAME","\"@huggingface/transformers\"","CODE_BODY","\nconst model_id = \"hf-internal-testing/tiny-random-LlamaForCausalLM\";\nconst generator = await pipeline(\"text-generation\", model_id, { dtype: \"fp32\" });\nconst result = await generator(\"hello\", { max_new_tokens: 3, return_full_text: false });\nprocess.stdout.write(result[0].generated_text);\n","TARGET_OUTPUT","\"erdingsAndroid Load\"","wrap_async_iife","code","(async function() { "," })();","check","module","false","args","\"-e\"","push","\"--input-type=module\"","status","stdout","stderr","spawnSync","\"node\"","expect","toString","toBe","\"\"","0","describe","\"Testing the bundle\"","it","\"ECMAScript Module (ESM)\"","import { pipeline } from \"","\";","true","\"CommonJS (CJS) with require\"","const { pipeline } = require(\"","\");","\"CommonJS (CJS) with dynamic import\"","const { pipeline } = await import(\""]},"operators":{"distinct":11,"total":64,"identifiers":["const","=","``","function=>","${}","[]",",","if","()",".","{}"]}},"paramCount":3,"sloc":{"logical":37,"physical":38}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"child_process","type":"esm"}],"errors":[],"lineEnd":38,"lineStart":1,"maintainability":119.975,"methods":[{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["code","(async function() { "," })();"]},"operators":{"distinct":2,"total":2,"identifiers":["``","${}"]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":14,"lineStart":14,"name":"<anon method-1>","paramNames":["code"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":12.5,"halstead":{"bugs":0.084,"difficulty":7.059,"effort":1770.129,"length":54,"time":98.34,"vocabulary":25,"volume":250.768,"operands":{"distinct":17,"total":30,"identifiers":["args","\"-e\"","code","module","push","\"--input-type=module\"","status","stdout","stderr","spawnSync","\"node\"","expect","toString","toBe","\"\"","TARGET_OUTPUT","0"]},"operators":{"distinct":8,"total":24,"identifiers":["const","=","[]",",","if","()",".","{}"]}},"paramCount":2,"sloc":{"logical":16,"physical":8},"errors":[],"lineEnd":23,"lineStart":16,"name":"<anon method-2>","paramNames":["code","module"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"ECMAScript Module (ESM)\"","\"CommonJS (CJS) with require\"","\"CommonJS (CJS) with dynamic import\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":13},"errors":[],"lineEnd":37,"lineStart":25,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.011,"difficulty":1.5,"effort":47.549,"length":10,"time":2.642,"vocabulary":9,"volume":31.699,"operands":{"distinct":6,"total":6,"identifiers":["check","MODULE_NAME","CODE_BODY","import { pipeline } from \"","\";","true"]},"operators":{"distinct":3,"total":4,"identifiers":["()","``","${}"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":28,"lineStart":26,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.012,"difficulty":1.5,"effort":52.304,"length":11,"time":2.906,"vocabulary":9,"volume":34.869,"operands":{"distinct":6,"total":6,"identifiers":["check","MODULE_NAME","wrap_async_iife","CODE_BODY","const { pipeline } = require(\"","\");"]},"operators":{"distinct":3,"total":5,"identifiers":["()","``","${}"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":32,"lineStart":30,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.014,"difficulty":1.5,"effort":61.814,"length":13,"time":3.434,"vocabulary":9,"volume":41.209,"operands":{"distinct":6,"total":6,"identifiers":["check","wrap_async_iife","MODULE_NAME","CODE_BODY","const { pipeline } = await import(\"","\");"]},"operators":{"distinct":3,"total":7,"identifiers":["()","``","${}"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":36,"lineStart":34,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.143,"cyclomaticDensity":3.089,"halstead":{"bugs":0.036,"difficulty":1.43,"effort":1089.853,"length":19.286,"time":60.547,"vocabulary":7.143,"volume":108.846,"operands":{"distinct":5.571,"total":10.143},"operators":{"distinct":1.571,"total":9.143}},"paramCount":0.429,"sloc":{"logical":5.286,"physical":5.429}},"methodAverage":{"cyclomatic":1.167,"cyclomaticDensity":54.861,"halstead":{"bugs":0.022,"difficulty":2.343,"effort":331.656,"length":17.5,"time":18.425,"vocabulary":10.5,"volume":66.862,"operands":{"distinct":7,"total":9.5},"operators":{"distinct":3.5,"total":8}},"paramCount":0.5,"sloc":{"logical":4.667,"physical":5.167}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/configs.test.js","testCases":0,"smells":2,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  13 |\n  14 | describe(\"Configs\", () => {\n> 15 |   for (const [model_id, minimal_config] of Object.entries(TEST_DATA)) {\n     |  ^ Conditional Test Logic\n  16 |     it(model_id, async () => {\n  17 |       const config = await AutoConfig.from_pretrained(model_id);\n  18 |       for (const [key, value] of Object.entries(minimal_config)) {","start":{"line":15,"column":2,"index":314}},{"frame":"  16 |     it(model_id, async () => {\n  17 |       const config = await AutoConfig.from_pretrained(model_id);\n> 18 |       for (const [key, value] of Object.entries(minimal_config)) {\n     |      ^ Conditional Test Logic\n  19 |         expect(config[key]).toEqual(value);\n  20 |       }\n  21 |     });","start":{"line":18,"column":6,"index":486}}]}],"metrics":{"aggregate":{"cyclomatic":3,"cyclomaticDensity":20,"halstead":{"bugs":0.108,"difficulty":7.5,"effort":2437.5,"length":65,"time":135.417,"vocabulary":32,"volume":325,"operands":{"distinct":22,"total":33,"identifiers":["env","allowLocalModels","false","useFSCache","TEST_DATA","\"Xenova/bert-base-uncased\"","model_type","\"bert\"","describe","\"Configs\"","model_id","minimal_config","Object","entries","it","config","AutoConfig","from_pretrained","key","value","expect","toEqual"]},"operators":{"distinct":10,"total":32,"identifiers":["=",".","const","{}",":","()","function=>","forof","[]",","]}},"paramCount":0,"sloc":{"logical":15,"physical":24}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../src/transformers.js","type":"esm"},{"line":2,"path":"../src/utils/hub.js","type":"esm"}],"errors":[],"lineEnd":24,"lineStart":1,"maintainability":122.013,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.017,"difficulty":4.083,"effort":211.542,"length":14,"time":11.752,"vocabulary":13,"volume":51.806,"operands":{"distinct":6,"total":7,"identifiers":["model_id","minimal_config","Object","entries","TEST_DATA","it"]},"operators":{"distinct":7,"total":7,"identifiers":["forof","const","[]",",",".","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":10},"errors":[],"lineEnd":23,"lineStart":14,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.038,"difficulty":4.455,"effort":501.528,"length":27,"time":27.863,"vocabulary":18,"volume":112.588,"operands":{"distinct":11,"total":14,"identifiers":["config","AutoConfig","from_pretrained","model_id","key","value","Object","entries","minimal_config","expect","toEqual"]},"operators":{"distinct":7,"total":13,"identifiers":["const","=","()",".","forof","[]",","]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":21,"lineStart":16,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.036,"difficulty":2.5,"effort":812.5,"length":21.667,"time":45.139,"vocabulary":10.667,"volume":108.333,"operands":{"distinct":7.333,"total":11},"operators":{"distinct":3.333,"total":10.667}},"paramCount":0,"sloc":{"logical":5,"physical":8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":26.667,"halstead":{"bugs":0.027,"difficulty":4.269,"effort":356.535,"length":20.5,"time":19.808,"vocabulary":15.5,"volume":82.197,"operands":{"distinct":8.5,"total":10.5},"operators":{"distinct":7,"total":10}},"paramCount":0,"sloc":{"logical":4,"physical":8}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models.test.js","testCases":0,"smells":7,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  23 |   const texts = [\"Once upon a time\", \"I like to eat apples\"];\n  24 |\n> 25 |   for (const [model_id, models, processors, modelOptions] of models_to_test) {\n     |  ^ Conditional Test Logic\n  26 |     // Test that both the auto model and the specific model work\n  27 |     for (let i = 0; i < processors.length; ++i) {\n  28 |       const processorClassToTest = processors[i];","start":{"line":25,"column":2,"index":1866}},{"frame":"  25 |   for (const [model_id, models, processors, modelOptions] of models_to_test) {\n  26 |     // Test that both the auto model and the specific model work\n> 27 |     for (let i = 0; i < processors.length; ++i) {\n     |    ^ Conditional Test Logic\n  28 |       const processorClassToTest = processors[i];\n  29 |       const modelClassToTest = models[i];\n  30 |","start":{"line":27,"column":4,"index":2012}},{"frame":"  45 |           const feature_extractor = model_type === \"whisper\" ? processor.feature_extractor : null;\n  46 |\n> 47 |           for (const test of tests) {\n     |          ^ Conditional Test Logic\n  48 |             const inputs = await tokenizer(test, { truncation: true, padding: true });\n  49 |             if (model.config.is_encoder_decoder) {\n  50 |               inputs.decoder_input_ids = inputs.input_ids;","start":{"line":47,"column":10,"index":2814}},{"frame":"  47 |           for (const test of tests) {\n  48 |             const inputs = await tokenizer(test, { truncation: true, padding: true });\n> 49 |             if (model.config.is_encoder_decoder) {\n     |            ^ Conditional Test Logic\n  50 |               inputs.decoder_input_ids = inputs.input_ids;\n  51 |             }\n  52 |             if (feature_extractor) {","start":{"line":49,"column":12,"index":2941}},{"frame":"  50 |               inputs.decoder_input_ids = inputs.input_ids;\n  51 |             }\n> 52 |             if (feature_extractor) {\n     |            ^ Conditional Test Logic\n  53 |               Object.assign(inputs, await feature_extractor(new Float32Array(16000)));\n  54 |             }\n  55 |","start":{"line":52,"column":12,"index":3065}},{"frame":"  56 |             const output = await model(inputs);\n  57 |\n> 58 |             if (output.logits) {\n     |            ^ Conditional Test Logic\n  59 |               // Ensure correct shapes\n  60 |               const input_ids = inputs.input_ids ?? inputs.decoder_input_ids;\n  61 |               const expected_shape = [...input_ids.dims, model.config.vocab_size];","start":{"line":58,"column":12,"index":3253}},{"frame":"  62 |               const actual_shape = output.logits.dims;\n  63 |               compare(expected_shape, actual_shape);\n> 64 |             } else if (output.last_hidden_state) {\n     |                   ^ Conditional Test Logic\n  65 |               const expected_shape = [...inputs.input_ids.dims, model.config.d_model];\n  66 |               const actual_shape = output.last_hidden_state.dims;\n  67 |               compare(expected_shape, actual_shape);","start":{"line":64,"column":19,"index":3601}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":20.408,"halstead":{"bugs":0.738,"difficulty":23.268,"effort":51504.036,"length":329,"time":2861.335,"vocabulary":106,"volume":2213.486,"operands":{"distinct":82,"total":159,"identifiers":["init","describe","\"Loading different architecture types\"","models_to_test","\"hf-internal-testing/tiny-random-BertForMaskedLM\"","AutoModelForMaskedLM","BertForMaskedLM","AutoTokenizer","BertTokenizer","\"hf-internal-testing/tiny-random-GPT2LMHeadModel\"","AutoModelForCausalLM","GPT2LMHeadModel","GPT2Tokenizer","\"hf-internal-testing/tiny-random-T5ForConditionalGeneration\"","AutoModelForSeq2SeqLM","T5ForConditionalGeneration","T5Tokenizer","\"onnx-internal-testing/tiny-random-LlamaForCausalLM-ONNX_external\"","LlamaForCausalLM","LlamaTokenizer","\"onnx-internal-testing/tiny-random-WhisperForConditionalGeneration-ONNX_external\"","AutoModelForSpeechSeq2Seq","WhisperForConditionalGeneration","AutoProcessor","WhisperProcessor","texts","\"Once upon a time\"","\"I like to eat apples\"","model_id","models","processors","modelOptions","i","0","length","processorClassToTest","modelClassToTest","it","name"," (",")","processor","from_pretrained","model","DEFAULT_MODEL_OPTIONS","tests","model_type","config","tokenizer","\"whisper\"","feature_extractor","null","test","inputs","truncation","true","padding","is_encoder_decoder","decoder_input_ids","input_ids","Object","assign","Float32Array","16000","output","logits","expected_shape","dims","vocab_size","actual_shape","compare","last_hidden_state","d_model","console","warn","\"Unexpected output\"","Error","dispose","MAX_TEST_EXECUTION_TIME","collect_and_execute_tests","\"Model-specific tests\"","\"modeling\""]},"operators":{"distinct":24,"total":170,"identifiers":["()","function=>","const","=","[]",",","{}","forof","for","let","<",".","++ (prefix)","``","${}","??",":?","===",":","if","new","else","... (spread)","throw"]}},"paramCount":0,"sloc":{"logical":49,"physical":82}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":5,"path":"../src/transformers.js","type":"esm"},{"line":6,"path":"./init.js","type":"esm"},{"line":7,"path":"./test_utils.js","type":"esm"}],"errors":[],"lineEnd":82,"lineStart":1,"maintainability":91.198,"methods":[{"cyclomatic":2,"cyclomaticDensity":25,"halstead":{"bugs":0.24,"difficulty":10.192,"effort":7331.948,"length":125,"time":407.33,"vocabulary":54,"volume":719.361,"operands":{"distinct":39,"total":53,"identifiers":["models_to_test","\"hf-internal-testing/tiny-random-BertForMaskedLM\"","AutoModelForMaskedLM","BertForMaskedLM","AutoTokenizer","BertTokenizer","\"hf-internal-testing/tiny-random-GPT2LMHeadModel\"","AutoModelForCausalLM","GPT2LMHeadModel","GPT2Tokenizer","\"hf-internal-testing/tiny-random-T5ForConditionalGeneration\"","AutoModelForSeq2SeqLM","T5ForConditionalGeneration","T5Tokenizer","\"onnx-internal-testing/tiny-random-LlamaForCausalLM-ONNX_external\"","LlamaForCausalLM","LlamaTokenizer","\"onnx-internal-testing/tiny-random-WhisperForConditionalGeneration-ONNX_external\"","AutoModelForSpeechSeq2Seq","WhisperForConditionalGeneration","AutoProcessor","WhisperProcessor","texts","\"Once upon a time\"","\"I like to eat apples\"","model_id","models","processors","modelOptions","i","0","length","processorClassToTest","modelClassToTest","it","name"," (",")","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":15,"total":72,"identifiers":["const","=","[]",",","{}","forof","for","let","<",".","++ (prefix)","()","``","${}","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":68},"errors":[],"lineEnd":79,"lineStart":12,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":7,"cyclomaticDensity":19.444,"halstead":{"bugs":0.382,"difficulty":19.767,"effort":22652.239,"length":194,"time":1258.458,"vocabulary":60,"volume":1145.937,"operands":{"distinct":43,"total":100,"identifiers":["processor","processorClassToTest","from_pretrained","model_id","model","modelClassToTest","modelOptions","DEFAULT_MODEL_OPTIONS","tests","texts","0","model_type","config","tokenizer","\"whisper\"","feature_extractor","null","test","inputs","truncation","true","padding","is_encoder_decoder","decoder_input_ids","input_ids","Object","assign","Float32Array","16000","output","logits","expected_shape","dims","vocab_size","actual_shape","compare","last_hidden_state","d_model","console","warn","\"Unexpected output\"","Error","dispose"]},"operators":{"distinct":17,"total":94,"identifiers":["const","=","()",".","??","[]",",","{}",":?","===","forof",":","if","new","else","... (spread)","throw"]}},"paramCount":0,"sloc":{"logical":36,"physical":42},"errors":[],"lineEnd":74,"lineStart":33,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":3.333,"cyclomaticDensity":6.803,"halstead":{"bugs":0.246,"difficulty":7.756,"effort":17168.012,"length":109.667,"time":953.778,"vocabulary":35.333,"volume":737.829,"operands":{"distinct":27.333,"total":53},"operators":{"distinct":8,"total":56.667}},"paramCount":0,"sloc":{"logical":16.333,"physical":27.333}},"methodAverage":{"cyclomatic":4.5,"cyclomaticDensity":22.222,"halstead":{"bugs":0.311,"difficulty":14.98,"effort":14992.093,"length":159.5,"time":832.894,"vocabulary":57,"volume":932.649,"operands":{"distinct":41,"total":76.5},"operators":{"distinct":16,"total":83}},"paramCount":0,"sloc":{"logical":22,"physical":55}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/audio_spectrogram_transformer/test_feature_extraction_audio_spectrogram_transformer.js","testCases":2,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  38 |         expect(input_values.dims).toEqual([1, 1024, 128]); // [1, 4, 128] -> (padded to) -> [1, 1024, 128]\n  39 |\n> 40 |         expect(input_values.mean().item()).toBeCloseTo(0.4647964835166931);\n     |                                                       ^ Magic Number\n  41 |         expect(input_values.data[0]).toBeCloseTo(-0.5662586092948914);\n  42 |         expect(input_values.data[1]).toBeCloseTo(-1.0300861597061157);\n  43 |         expect(input_values.data[129]).toBeCloseTo(-1.084834098815918);","start":{"line":40,"column":55,"index":1597}},{"frame":"  44 |\n  45 |         // padded values\n> 46 |         expect(input_values.data[1025]).toBeCloseTo(0.46703237295150757);\n     |                                                    ^ Magic Number\n  47 |         expect(input_values.data[2049]).toBeCloseTo(0.46703237295150757);\n  48 |         expect(input_values.data[10000]).toBeCloseTo(0.46703237295150757);\n  49 |       },","start":{"line":46,"column":52,"index":1910}},{"frame":"  45 |         // padded values\n  46 |         expect(input_values.data[1025]).toBeCloseTo(0.46703237295150757);\n> 47 |         expect(input_values.data[2049]).toBeCloseTo(0.46703237295150757);\n     |                                                    ^ Magic Number\n  48 |         expect(input_values.data[10000]).toBeCloseTo(0.46703237295150757);\n  49 |       },\n  50 |       MAX_TEST_EXECUTION_TIME,","start":{"line":47,"column":52,"index":1984}},{"frame":"  46 |         expect(input_values.data[1025]).toBeCloseTo(0.46703237295150757);\n  47 |         expect(input_values.data[2049]).toBeCloseTo(0.46703237295150757);\n> 48 |         expect(input_values.data[10000]).toBeCloseTo(0.46703237295150757);\n     |                                                     ^ Magic Number\n  49 |       },\n  50 |       MAX_TEST_EXECUTION_TIME,\n  51 |     );","start":{"line":48,"column":53,"index":2059}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":10.714,"halstead":{"bugs":0.448,"difficulty":14.634,"effort":19673.631,"length":237,"time":1092.98,"vocabulary":51,"volume":1344.365,"operands":{"distinct":41,"total":120,"identifiers":["describe","\"ASTFeatureExtractor\"","model_id","\"Xenova/ast-finetuned-audioset-10-10-0.4593\"","feature_extractor","beforeAll","AutoFeatureExtractor","from_pretrained","MAX_FEATURE_EXTRACTOR_LOAD_TIME","it","\"truncation\"","audio","load_cached_audio","\"mlk\"","input_values","expect","dims","toEqual","1","1024","128","mean","item","toBeCloseTo","0.04054912979309085","data","0","0.5662586092948914","1.0300861597061157","129","1.084834098815918","1025","1.1204065084457397","MAX_TEST_EXECUTION_TIME","\"padding\"","slice","1000","0.4647964835166931","0.46703237295150757","2049","10000"]},"operators":{"distinct":10,"total":117,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":56,"physical":54}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":54,"lineStart":1,"maintainability":107.13,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"ASTFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":48},"errors":[],"lineEnd":53,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":3.056,"effort":232.672,"length":20,"time":12.926,"vocabulary":14,"volume":76.147,"operands":{"distinct":9,"total":11,"identifiers":["model_id","\"Xenova/ast-finetuned-audioset-10-10-0.4593\"","feature_extractor","beforeAll","MAX_FEATURE_EXTRACTOR_LOAD_TIME","it","\"truncation\"","MAX_TEST_EXECUTION_TIME","\"padding\""]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":45},"errors":[],"lineEnd":52,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["feature_extractor","AutoFeatureExtractor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.149,"difficulty":7.652,"effort":3411.933,"length":90,"time":189.552,"vocabulary":31,"volume":445.878,"operands":{"distinct":23,"total":44,"identifiers":["audio","load_cached_audio","\"mlk\"","input_values","feature_extractor","expect","dims","toEqual","1","1024","128","mean","item","toBeCloseTo","0.04054912979309085","data","0","0.5662586092948914","1.0300861597061157","129","1.084834098815918","1025","1.1204065084457397"]},"operators":{"distinct":8,"total":46,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":19,"physical":11},"errors":[],"lineEnd":29,"lineStart":19,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.197,"difficulty":8.741,"effort":5155.879,"length":115,"time":286.438,"vocabulary":35,"volume":589.868,"operands":{"distinct":27,"total":59,"identifiers":["audio","load_cached_audio","\"mlk\"","input_values","feature_extractor","slice","0","1000","expect","dims","toEqual","1","1024","128","mean","item","toBeCloseTo","0.4647964835166931","data","0.5662586092948914","1.0300861597061157","129","1.084834098815918","1025","0.46703237295150757","2049","10000"]},"operators":{"distinct":8,"total":56,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":24,"physical":15},"errors":[],"lineEnd":49,"lineStart":35,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.786,"halstead":{"bugs":0.075,"difficulty":2.439,"effort":3278.939,"length":39.5,"time":182.163,"vocabulary":8.5,"volume":224.061,"operands":{"distinct":6.833,"total":20},"operators":{"distinct":1.667,"total":19.5}},"paramCount":0,"sloc":{"logical":9.333,"physical":9}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":24.386,"halstead":{"bugs":0.076,"difficulty":4.39,"effort":1767.592,"length":47.2,"time":98.2,"vocabulary":18.2,"volume":227.909,"operands":{"distinct":13,"total":24},"operators":{"distinct":5.2,"total":23.2}},"paramCount":0,"sloc":{"logical":11,"physical":24.4}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/beit/test_image_processing_beit.js","testCases":1,"smells":1,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  21 |\n  22 |         expect(pixel_values.dims).toEqual([1, 3, 224, 224]);\n> 23 |         expect(pixel_values.mean().item()).toBeCloseTo(-0.22706867939852762, 6);\n     |                                                                             ^ Magic Number\n  24 |\n  25 |         expect(original_sizes).toEqual([[408, 612]]);\n  26 |         expect(reshaped_input_sizes).toEqual([[224, 224]]);","start":{"line":23,"column":77,"index":889}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.175,"difficulty":8.065,"effort":4234.194,"length":98,"time":235.233,"vocabulary":41,"volume":525.04,"operands":{"distinct":31,"total":50,"identifiers":["describe","\"BeitFeatureExtractor\"","model_id","\"Xenova/beit-base-patch16-224-pt22k-ft22k\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.22706867939852762","6","408","612","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":10,"total":48,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":28,"physical":32}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":32,"lineStart":1,"maintainability":120.035,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"BeitFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":26},"errors":[],"lineEnd":31,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/beit-base-patch16-224-pt22k-ft22k\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":30,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":14,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.114,"difficulty":7.2,"effort":2457.52,"length":71,"time":136.529,"vocabulary":28,"volume":341.322,"operands":{"distinct":20,"total":36,"identifiers":["image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.22706867939852762","6","408","612"]},"operators":{"distinct":8,"total":35,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":27,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.035,"difficulty":1.613,"effort":846.839,"length":19.6,"time":47.047,"vocabulary":8.2,"volume":105.008,"operands":{"distinct":6.2,"total":10},"operators":{"distinct":2,"total":9.6}},"paramCount":0,"sloc":{"logical":5.6,"physical":6.4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.637,"halstead":{"bugs":0.035,"difficulty":3.05,"effort":658.441,"length":24.25,"time":36.58,"vocabulary":13,"volume":106.12,"operands":{"distinct":8.5,"total":12.5},"operators":{"distinct":4.5,"total":11.75}},"paramCount":0,"sloc":{"logical":6.75,"physical":15.75}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/bert/test_modeling_bert.js","testCases":10,"smells":20,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  22 |         const { last_hidden_state } = await model(inputs);\n  23 |         expect(last_hidden_state.dims).toEqual([1, 7, 32]);\n> 24 |         expect(last_hidden_state.mean().item()).toBeCloseTo(0.0, 5);\n     |                                                            ^ Magic Number\n  25 |       },\n  26 |       MAX_TEST_EXECUTION_TIME,\n  27 |     );","start":{"line":24,"column":60,"index":995}},{"frame":"  22 |         const { last_hidden_state } = await model(inputs);\n  23 |         expect(last_hidden_state.dims).toEqual([1, 7, 32]);\n> 24 |         expect(last_hidden_state.mean().item()).toBeCloseTo(0.0, 5);\n     |                                                                 ^ Magic Number\n  25 |       },\n  26 |       MAX_TEST_EXECUTION_TIME,\n  27 |     );","start":{"line":24,"column":65,"index":1000}},{"frame":"  33 |         const { last_hidden_state } = await model(inputs);\n  34 |         expect(last_hidden_state.dims).toEqual([2, 12, 32]);\n> 35 |         expect(last_hidden_state.mean().item()).toBeCloseTo(1.4901161193847656e-8, 5);\n     |                                                            ^ Magic Number\n  36 |       },\n  37 |       MAX_TEST_EXECUTION_TIME,\n  38 |     );","start":{"line":35,"column":60,"index":1361}},{"frame":"  33 |         const { last_hidden_state } = await model(inputs);\n  34 |         expect(last_hidden_state.dims).toEqual([2, 12, 32]);\n> 35 |         expect(last_hidden_state.mean().item()).toBeCloseTo(1.4901161193847656e-8, 5);\n     |                                                                                   ^ Magic Number\n  36 |       },\n  37 |       MAX_TEST_EXECUTION_TIME,\n  38 |     );","start":{"line":35,"column":83,"index":1384}},{"frame":"  63 |         const { logits } = await model(inputs);\n  64 |         expect(logits.dims).toEqual([1, 19, 1124]);\n> 65 |         expect(logits.mean().item()).toBeCloseTo(0.0016587056452408433, 5);\n     |                                                 ^ Magic Number\n  66 |       },\n  67 |       MAX_TEST_EXECUTION_TIME,\n  68 |     );","start":{"line":65,"column":49,"index":2283}},{"frame":"  63 |         const { logits } = await model(inputs);\n  64 |         expect(logits.dims).toEqual([1, 19, 1124]);\n> 65 |         expect(logits.mean().item()).toBeCloseTo(0.0016587056452408433, 5);\n     |                                                                        ^ Magic Number\n  66 |       },\n  67 |       MAX_TEST_EXECUTION_TIME,\n  68 |     );","start":{"line":65,"column":72,"index":2306}},{"frame":"  74 |         const { logits } = await model(inputs);\n  75 |         expect(logits.dims).toEqual([2, 22, 1124]);\n> 76 |         expect(logits.mean().item()).toBeCloseTo(0.0017160633578896523, 5);\n     |                                                 ^ Magic Number\n  77 |       },\n  78 |       MAX_TEST_EXECUTION_TIME,\n  79 |     );","start":{"line":76,"column":49,"index":2617}},{"frame":"  74 |         const { logits } = await model(inputs);\n  75 |         expect(logits.dims).toEqual([2, 22, 1124]);\n> 76 |         expect(logits.mean().item()).toBeCloseTo(0.0017160633578896523, 5);\n     |                                                                        ^ Magic Number\n  77 |       },\n  78 |       MAX_TEST_EXECUTION_TIME,\n  79 |     );","start":{"line":76,"column":72,"index":2640}},{"frame":"  146 |         const { logits } = await model(inputs);\n  147 |         expect(logits.dims).toEqual([1, 7, 2]);\n> 148 |         expect(logits.mean().item()).toBeCloseTo(0.07089076191186905, 5);\n      |                                                 ^ Magic Number\n  149 |       },\n  150 |       MAX_TEST_EXECUTION_TIME,\n  151 |     );","start":{"line":148,"column":49,"index":4920}},{"frame":"  146 |         const { logits } = await model(inputs);\n  147 |         expect(logits.dims).toEqual([1, 7, 2]);\n> 148 |         expect(logits.mean().item()).toBeCloseTo(0.07089076191186905, 5);\n      |                                                                      ^ Magic Number\n  149 |       },\n  150 |       MAX_TEST_EXECUTION_TIME,\n  151 |     );","start":{"line":148,"column":70,"index":4941}},{"frame":"  157 |         const { logits } = await model(inputs);\n  158 |         expect(logits.dims).toEqual([2, 12, 2]);\n> 159 |         expect(logits.mean().item()).toBeCloseTo(0.04702216014266014, 5);\n      |                                                 ^ Magic Number\n  160 |       },\n  161 |       MAX_TEST_EXECUTION_TIME,\n  162 |     );","start":{"line":159,"column":49,"index":5268}},{"frame":"  157 |         const { logits } = await model(inputs);\n  158 |         expect(logits.dims).toEqual([2, 12, 2]);\n> 159 |         expect(logits.mean().item()).toBeCloseTo(0.04702216014266014, 5);\n      |                                                                      ^ Magic Number\n  160 |       },\n  161 |       MAX_TEST_EXECUTION_TIME,\n  162 |     );","start":{"line":159,"column":70,"index":5289}},{"frame":"  185 |         const { start_logits, end_logits } = await model(inputs);\n  186 |         expect(start_logits.dims).toEqual([1, 7]);\n> 187 |         expect(start_logits.mean().item()).toBeCloseTo(0.12772157788276672, 5);\n      |                                                       ^ Magic Number\n  188 |         expect(end_logits.dims).toEqual([1, 7]);\n  189 |         expect(end_logits.mean().item()).toBeCloseTo(0.11811424791812897, 5);\n  190 |       },","start":{"line":187,"column":55,"index":6160}},{"frame":"  185 |         const { start_logits, end_logits } = await model(inputs);\n  186 |         expect(start_logits.dims).toEqual([1, 7]);\n> 187 |         expect(start_logits.mean().item()).toBeCloseTo(0.12772157788276672, 5);\n      |                                                                            ^ Magic Number\n  188 |         expect(end_logits.dims).toEqual([1, 7]);\n  189 |         expect(end_logits.mean().item()).toBeCloseTo(0.11811424791812897, 5);\n  190 |       },","start":{"line":187,"column":76,"index":6181}},{"frame":"  187 |         expect(start_logits.mean().item()).toBeCloseTo(0.12772157788276672, 5);\n  188 |         expect(end_logits.dims).toEqual([1, 7]);\n> 189 |         expect(end_logits.mean().item()).toBeCloseTo(0.11811424791812897, 5);\n      |                                                     ^ Magic Number\n  190 |       },\n  191 |       MAX_TEST_EXECUTION_TIME,\n  192 |     );","start":{"line":189,"column":53,"index":6287}},{"frame":"  187 |         expect(start_logits.mean().item()).toBeCloseTo(0.12772157788276672, 5);\n  188 |         expect(end_logits.dims).toEqual([1, 7]);\n> 189 |         expect(end_logits.mean().item()).toBeCloseTo(0.11811424791812897, 5);\n      |                                                                          ^ Magic Number\n  190 |       },\n  191 |       MAX_TEST_EXECUTION_TIME,\n  192 |     );","start":{"line":189,"column":74,"index":6308}},{"frame":"  198 |         const { start_logits, end_logits } = await model(inputs);\n  199 |         expect(start_logits.dims).toEqual([2, 12]);\n> 200 |         expect(start_logits.mean().item()).toBeCloseTo(0.12843115627765656, 5);\n      |                                                       ^ Magic Number\n  201 |         expect(end_logits.dims).toEqual([2, 12]);\n  202 |         expect(end_logits.mean().item()).toBeCloseTo(0.11745202541351318, 5);\n  203 |       },","start":{"line":200,"column":55,"index":6662}},{"frame":"  198 |         const { start_logits, end_logits } = await model(inputs);\n  199 |         expect(start_logits.dims).toEqual([2, 12]);\n> 200 |         expect(start_logits.mean().item()).toBeCloseTo(0.12843115627765656, 5);\n      |                                                                            ^ Magic Number\n  201 |         expect(end_logits.dims).toEqual([2, 12]);\n  202 |         expect(end_logits.mean().item()).toBeCloseTo(0.11745202541351318, 5);\n  203 |       },","start":{"line":200,"column":76,"index":6683}},{"frame":"  200 |         expect(start_logits.mean().item()).toBeCloseTo(0.12843115627765656, 5);\n  201 |         expect(end_logits.dims).toEqual([2, 12]);\n> 202 |         expect(end_logits.mean().item()).toBeCloseTo(0.11745202541351318, 5);\n      |                                                     ^ Magic Number\n  203 |       },\n  204 |       MAX_TEST_EXECUTION_TIME,\n  205 |     );","start":{"line":202,"column":53,"index":6790}},{"frame":"  200 |         expect(start_logits.mean().item()).toBeCloseTo(0.12843115627765656, 5);\n  201 |         expect(end_logits.dims).toEqual([2, 12]);\n> 202 |         expect(end_logits.mean().item()).toBeCloseTo(0.11745202541351318, 5);\n      |                                                                          ^ Magic Number\n  203 |       },\n  204 |       MAX_TEST_EXECUTION_TIME,\n  205 |     );","start":{"line":202,"column":74,"index":6811}}]}],"metrics":{"aggregate":{"cyclomatic":27,"cyclomaticDensity":12.217,"halstead":{"bugs":1.634,"difficulty":28.967,"effort":142030.519,"length":763,"time":7890.584,"vocabulary":86,"volume":4903.24,"operands":{"distinct":75,"total":395,"identifiers":["describe","\"BertModel\"","model_id","\"hf-internal-testing/tiny-random-BertModel\"","model","tokenizer","beforeAll","BertModel","from_pretrained","DEFAULT_MODEL_OPTIONS","BertTokenizer","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","inputs","\"hello\"","last_hidden_state","expect","dims","toEqual","1","7","32","mean","item","toBeCloseTo","0","5","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","\"hello world\"","padding","true","2","12","1.4901161193847656e-8","afterAll","dispose","MAX_MODEL_DISPOSE_TIME","\"BertForMaskedLM\"","\"hf-internal-testing/tiny-random-BertForMaskedLM\"","texts","\"The goal of life is [MASK].\"","\"Paris is the [MASK] of France.\"","BertForMaskedLM","logits","19","1124","0.0016587056452408433","22","0.0017160633578896523","\"BertForSequenceClassification\"","\"hf-internal-testing/tiny-random-BertForSequenceClassification\"","BertForSequenceClassification","target","0.00043986947275698185","0.030218850821256638","tolist","toBeCloseToNested","0.0003853091038763523","0.03022204339504242","\"BertForTokenClassification\"","\"hf-internal-testing/tiny-random-BertForTokenClassification\"","BertForTokenClassification","0.07089076191186905","0.04702216014266014","\"BertForQuestionAnswering\"","\"hf-internal-testing/tiny-random-BertForQuestionAnswering\"","BertForQuestionAnswering","start_logits","end_logits","0.12772157788276672","0.11811424791812897","0.12843115627765656","0.11745202541351318"]},"operators":{"distinct":11,"total":368,"identifiers":["function=>","()","const","=","let",".","{}","[]",",",":","- (prefix)"]}},"paramCount":0,"sloc":{"logical":221,"physical":212}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":212,"lineStart":1,"maintainability":107.64,"methods":[{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.02,"difficulty":1.667,"effort":100,"length":20,"time":5.556,"vocabulary":8,"volume":60,"operands":{"distinct":6,"total":10,"identifiers":["describe","\"BertModel\"","\"BertForMaskedLM\"","\"BertForSequenceClassification\"","\"BertForTokenClassification\"","\"BertForQuestionAnswering\""]},"operators":{"distinct":2,"total":10,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":207},"errors":[],"lineEnd":211,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.035,"difficulty":2.917,"effort":309.966,"length":26,"time":17.22,"vocabulary":17,"volume":106.274,"operands":{"distinct":12,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-BertModel\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":38},"errors":[],"lineEnd":43,"lineStart":6,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","BertModel","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","BertTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":16,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.063,"difficulty":4.594,"effort":872.765,"length":42,"time":48.487,"vocabulary":23,"volume":189.99,"operands":{"distinct":16,"total":21,"identifiers":["inputs","tokenizer","\"hello\"","last_hidden_state","model","expect","dims","toEqual","1","7","32","mean","item","toBeCloseTo","0","5"]},"operators":{"distinct":7,"total":21,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":11,"physical":6},"errors":[],"lineEnd":25,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.078,"difficulty":5.053,"effort":1177.21,"length":49,"time":65.401,"vocabulary":27,"volume":232.989,"operands":{"distinct":19,"total":24,"identifiers":["inputs","tokenizer","\"hello\"","\"hello world\"","padding","true","last_hidden_state","model","expect","dims","toEqual","2","12","32","mean","item","toBeCloseTo","1.4901161193847656e-8","5"]},"operators":{"distinct":8,"total":25,"identifiers":["const","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":6},"errors":[],"lineEnd":36,"lineStart":31,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":42,"lineStart":40,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.049,"difficulty":3.967,"effort":583.74,"length":33,"time":32.43,"vocabulary":22,"volume":147.161,"operands":{"distinct":15,"total":17,"identifiers":["model_id","\"hf-internal-testing/tiny-random-BertForMaskedLM\"","texts","\"The goal of life is [MASK].\"","\"Paris is the [MASK] of France.\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":7,"total":16,"identifiers":["const","=","[]",",","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":40},"errors":[],"lineEnd":84,"lineStart":45,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","BertForMaskedLM","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","BertTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":57,"lineStart":54,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.067,"difficulty":4.529,"effort":913.756,"length":44,"time":50.764,"vocabulary":24,"volume":201.738,"operands":{"distinct":17,"total":22,"identifiers":["inputs","tokenizer","texts","0","logits","model","expect","dims","toEqual","1","19","1124","mean","item","toBeCloseTo","0.0016587056452408433","5"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","()","[]","{}",".",","]}},"paramCount":0,"sloc":{"logical":11,"physical":6},"errors":[],"lineEnd":66,"lineStart":61,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.072,"difficulty":5.111,"effort":1105.126,"length":46,"time":61.396,"vocabulary":26,"volume":216.22,"operands":{"distinct":18,"total":23,"identifiers":["inputs","tokenizer","texts","padding","true","logits","model","expect","dims","toEqual","2","22","1124","mean","item","toBeCloseTo","0.0017160633578896523","5"]},"operators":{"distinct":8,"total":23,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":12,"physical":6},"errors":[],"lineEnd":77,"lineStart":72,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":83,"lineStart":81,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.035,"difficulty":2.917,"effort":309.966,"length":26,"time":17.22,"vocabulary":17,"volume":106.274,"operands":{"distinct":12,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-BertForSequenceClassification\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":43},"errors":[],"lineEnd":128,"lineStart":86,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","BertForSequenceClassification","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","BertTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":96,"lineStart":93,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.07,"difficulty":5.5,"effort":1159.996,"length":46,"time":64.444,"vocabulary":24,"volume":210.908,"operands":{"distinct":16,"total":22,"identifiers":["inputs","tokenizer","\"hello\"","logits","model","target","0.00043986947275698185","0.030218850821256638","expect","dims","toEqual","1","2","tolist","toBeCloseToNested","5"]},"operators":{"distinct":8,"total":24,"identifiers":["const","=","()","{}","[]",",","- (prefix)","."]}},"paramCount":0,"sloc":{"logical":11,"physical":7},"errors":[],"lineEnd":106,"lineStart":100,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.096,"difficulty":6.075,"effort":1741.222,"length":59,"time":96.735,"vocabulary":29,"volume":286.621,"operands":{"distinct":20,"total":27,"identifiers":["inputs","tokenizer","\"hello\"","\"hello world\"","padding","true","logits","model","target","0.00043986947275698185","0.030218850821256638","0.0003853091038763523","0.03022204339504242","expect","dims","toEqual","2","tolist","toBeCloseToNested","5"]},"operators":{"distinct":9,"total":32,"identifiers":["const","=","()","[]",",","{}",":","- (prefix)","."]}},"paramCount":0,"sloc":{"logical":12,"physical":10},"errors":[],"lineEnd":121,"lineStart":112,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":127,"lineStart":125,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.035,"difficulty":2.917,"effort":309.966,"length":26,"time":17.22,"vocabulary":17,"volume":106.274,"operands":{"distinct":12,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-BertForTokenClassification\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":38},"errors":[],"lineEnd":167,"lineStart":130,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","BertForTokenClassification","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","BertTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":140,"lineStart":137,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.063,"difficulty":4.594,"effort":872.765,"length":42,"time":48.487,"vocabulary":23,"volume":189.99,"operands":{"distinct":16,"total":21,"identifiers":["inputs","tokenizer","\"hello\"","logits","model","expect","dims","toEqual","1","7","2","mean","item","toBeCloseTo","0.07089076191186905","5"]},"operators":{"distinct":7,"total":21,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":11,"physical":6},"errors":[],"lineEnd":149,"lineStart":144,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.077,"difficulty":5.333,"effort":1228.382,"length":49,"time":68.243,"vocabulary":26,"volume":230.322,"operands":{"distinct":18,"total":24,"identifiers":["inputs","tokenizer","\"hello\"","\"hello world\"","padding","true","logits","model","expect","dims","toEqual","2","12","mean","item","toBeCloseTo","0.04702216014266014","5"]},"operators":{"distinct":8,"total":25,"identifiers":["const","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":6},"errors":[],"lineEnd":160,"lineStart":155,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":166,"lineStart":164,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.035,"difficulty":2.917,"effort":309.966,"length":26,"time":17.22,"vocabulary":17,"volume":106.274,"operands":{"distinct":12,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-BertForQuestionAnswering\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":42},"errors":[],"lineEnd":210,"lineStart":169,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","BertForQuestionAnswering","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","BertTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":179,"lineStart":176,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.104,"difficulty":7.206,"effort":2246.632,"length":68,"time":124.813,"vocabulary":24,"volume":311.777,"operands":{"distinct":17,"total":35,"identifiers":["inputs","tokenizer","\"hello\"","start_logits","end_logits","model","expect","dims","toEqual","1","7","mean","item","toBeCloseTo","0.12772157788276672","5","0.11811424791812897"]},"operators":{"distinct":7,"total":33,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":18,"physical":8},"errors":[],"lineEnd":190,"lineStart":183,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.12,"difficulty":7.6,"effort":2740.192,"length":75,"time":152.233,"vocabulary":28,"volume":360.552,"operands":{"distinct":20,"total":38,"identifiers":["inputs","tokenizer","\"hello\"","\"hello world\"","padding","true","start_logits","end_logits","model","expect","dims","toEqual","2","12","mean","item","toBeCloseTo","0.12843115627765656","5","0.11745202541351318"]},"operators":{"distinct":8,"total":37,"identifiers":["const","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":19,"physical":8},"errors":[],"lineEnd":203,"lineStart":196,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":209,"lineStart":207,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.452,"halstead":{"bugs":0.061,"difficulty":1.073,"effort":5260.39,"length":28.259,"time":292.244,"vocabulary":3.185,"volume":181.601,"operands":{"distinct":2.778,"total":14.63},"operators":{"distinct":0.407,"total":13.63}},"paramCount":0,"sloc":{"logical":8.185,"physical":7.852}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":29.239,"halstead":{"bugs":0.043,"difficulty":3.175,"effort":633.159,"length":29.308,"time":35.176,"vocabulary":15.846,"volume":127.789,"operands":{"distinct":11.192,"total":15.192},"operators":{"distinct":4.654,"total":14.115}},"paramCount":0,"sloc":{"logical":8.462,"physical":19.692}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/bit/test_image_processing_bit.js","testCases":1,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  21 |\n  22 |         expect(pixel_values.dims).toEqual([1, 3, 224, 224]);\n> 23 |         expect(pixel_values.mean().item()).toBeCloseTo(0.06262318789958954, 3);\n     |                                                       ^ Magic Number\n  24 |\n  25 |         expect(original_sizes).toEqual([[408, 612]]);\n  26 |         expect(reshaped_input_sizes).toEqual([[224, 224]]);","start":{"line":23,"column":55,"index":856}},{"frame":"  21 |\n  22 |         expect(pixel_values.dims).toEqual([1, 3, 224, 224]);\n> 23 |         expect(pixel_values.mean().item()).toBeCloseTo(0.06262318789958954, 3);\n     |                                                                            ^ Magic Number\n  24 |\n  25 |         expect(original_sizes).toEqual([[408, 612]]);\n  26 |         expect(reshaped_input_sizes).toEqual([[224, 224]]);","start":{"line":23,"column":76,"index":877}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.171,"difficulty":7.5,"effort":3845.13,"length":97,"time":213.618,"vocabulary":39,"volume":512.684,"operands":{"distinct":30,"total":50,"identifiers":["describe","\"BitImageProcessor\"","model_id","\"Xenova/dinov2-small-imagenet1k-1-layer\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.06262318789958954","408","612","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":9,"total":47,"identifiers":["function=>","()","const","=","let",".","{}","[]",","]}},"paramCount":0,"sloc":{"logical":28,"physical":32}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":32,"lineStart":1,"maintainability":120.365,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"BitImageProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":26},"errors":[],"lineEnd":31,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/dinov2-small-imagenet1k-1-layer\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":30,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":14,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.11,"difficulty":6.632,"effort":2181.994,"length":70,"time":121.222,"vocabulary":26,"volume":329.031,"operands":{"distinct":19,"total":36,"identifiers":["image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.06262318789958954","408","612"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":27,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.034,"difficulty":1.5,"effort":769.026,"length":19.4,"time":42.724,"vocabulary":7.8,"volume":102.537,"operands":{"distinct":6,"total":10},"operators":{"distinct":1.8,"total":9.4}},"paramCount":0,"sloc":{"logical":5.6,"physical":6.4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.637,"halstead":{"bugs":0.034,"difficulty":2.908,"effort":589.559,"length":24,"time":32.753,"vocabulary":12.5,"volume":103.047,"operands":{"distinct":8.25,"total":12.5},"operators":{"distinct":4.25,"total":11.5}},"paramCount":0,"sloc":{"logical":6.75,"physical":15.75}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/clip/test_image_processing_clip.js","testCases":1,"smells":1,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  23 |\n  24 |         expect(pixel_values.dims).toEqual([1, 3, 224, 224]);\n> 25 |         expect(pixel_values.mean().item()).toBeCloseTo(-0.06678297738282096, 6);\n     |                                                                             ^ Magic Number\n  26 |\n  27 |         expect(original_sizes).toEqual([[408, 612]]);\n  28 |         expect(reshaped_input_sizes).toEqual([[224, 224]]);","start":{"line":25,"column":77,"index":966}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.175,"difficulty":8.065,"effort":4234.194,"length":98,"time":235.233,"vocabulary":41,"volume":525.04,"operands":{"distinct":31,"total":50,"identifiers":["describe","\"CLIPFeatureExtractor\"","model_id","\"Xenova/clip-vit-base-patch16\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.06678297738282096","6","408","612","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":10,"total":48,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":28,"physical":34}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":34,"lineStart":1,"maintainability":120.035,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"CLIPFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":28},"errors":[],"lineEnd":33,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/clip-vit-base-patch16\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":32,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":16,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.114,"difficulty":7.2,"effort":2457.52,"length":71,"time":136.529,"vocabulary":28,"volume":341.322,"operands":{"distinct":20,"total":36,"identifiers":["image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.06678297738282096","6","408","612"]},"operators":{"distinct":8,"total":35,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":29,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.035,"difficulty":1.613,"effort":846.839,"length":19.6,"time":47.047,"vocabulary":8.2,"volume":105.008,"operands":{"distinct":6.2,"total":10},"operators":{"distinct":2,"total":9.6}},"paramCount":0,"sloc":{"logical":5.6,"physical":6.8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.637,"halstead":{"bugs":0.035,"difficulty":3.05,"effort":658.441,"length":24.25,"time":36.58,"vocabulary":13,"volume":106.12,"operands":{"distinct":8.5,"total":12.5},"operators":{"distinct":4.5,"total":11.75}},"paramCount":0,"sloc":{"logical":6.75,"physical":16.25}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/cohere/test_modeling_cohere.js","testCases":4,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  22 |         const { last_hidden_state } = await model(inputs);\n  23 |         expect(last_hidden_state.dims).toEqual([1, 4, 32]);\n> 24 |         expect(last_hidden_state.mean().item()).toBeCloseTo(0.0, 5);\n     |                                                            ^ Magic Number\n  25 |       },\n  26 |       MAX_TEST_EXECUTION_TIME,\n  27 |     );","start":{"line":24,"column":60,"index":966}},{"frame":"  22 |         const { last_hidden_state } = await model(inputs);\n  23 |         expect(last_hidden_state.dims).toEqual([1, 4, 32]);\n> 24 |         expect(last_hidden_state.mean().item()).toBeCloseTo(0.0, 5);\n     |                                                                 ^ Magic Number\n  25 |       },\n  26 |       MAX_TEST_EXECUTION_TIME,\n  27 |     );","start":{"line":24,"column":65,"index":971}},{"frame":"  33 |         const { last_hidden_state } = await model(inputs);\n  34 |         expect(last_hidden_state.dims).toEqual([2, 6, 32]);\n> 35 |         expect(last_hidden_state.mean().item()).toBeCloseTo(9.934107758624577e-9, 5);\n     |                                                            ^ Magic Number\n  36 |       },\n  37 |       MAX_TEST_EXECUTION_TIME,\n  38 |     );","start":{"line":35,"column":60,"index":1331}},{"frame":"  33 |         const { last_hidden_state } = await model(inputs);\n  34 |         expect(last_hidden_state.dims).toEqual([2, 6, 32]);\n> 35 |         expect(last_hidden_state.mean().item()).toBeCloseTo(9.934107758624577e-9, 5);\n     |                                                                                  ^ Magic Number\n  36 |       },\n  37 |       MAX_TEST_EXECUTION_TIME,\n  38 |     );","start":{"line":35,"column":82,"index":1353}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":15.19,"halstead":{"bugs":0.575,"difficulty":15.041,"effort":25942.581,"length":292,"time":1441.255,"vocabulary":60,"volume":1724.812,"operands":{"distinct":49,"total":134,"identifiers":["describe","\"CohereModel\"","model_id","\"hf-internal-testing/tiny-random-CohereModel\"","model","tokenizer","beforeAll","CohereModel","from_pretrained","DEFAULT_MODEL_OPTIONS","CohereTokenizer","padding_side","\"left\"","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","inputs","\"hello\"","last_hidden_state","expect","dims","toEqual","1","4","32","mean","item","toBeCloseTo","0","5","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","\"hello world\"","padding","true","2","6","9.934107758624577e-9","afterAll","dispose","MAX_MODEL_DISPOSE_TIME","\"CohereForCausalLM\"","\"hf-internal-testing/tiny-random-CohereForCausalLM\"","CohereForCausalLM","outputs","generate","max_length","10","tolist"]},"operators":{"distinct":11,"total":158,"identifiers":["function=>","()","const","=","let",".","{}","[]",",",":","... (spread)"]}},"paramCount":0,"sloc":{"logical":79,"physical":91}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":91,"lineStart":1,"maintainability":114.209,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"CohereModel\"","\"CohereForCausalLM\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":86},"errors":[],"lineEnd":90,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.035,"difficulty":2.917,"effort":309.966,"length":26,"time":17.22,"vocabulary":17,"volume":106.274,"operands":{"distinct":12,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-CohereModel\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":38},"errors":[],"lineEnd":43,"lineStart":6,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.024,"difficulty":2,"effort":143.399,"length":20,"time":7.967,"vocabulary":12,"volume":71.699,"operands":{"distinct":9,"total":12,"identifiers":["model","CohereModel","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","CohereTokenizer","padding_side","\"left\""]},"operators":{"distinct":3,"total":8,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":16,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.063,"difficulty":4.594,"effort":872.765,"length":42,"time":48.487,"vocabulary":23,"volume":189.99,"operands":{"distinct":16,"total":21,"identifiers":["inputs","tokenizer","\"hello\"","last_hidden_state","model","expect","dims","toEqual","1","4","32","mean","item","toBeCloseTo","0","5"]},"operators":{"distinct":7,"total":21,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":11,"physical":6},"errors":[],"lineEnd":25,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.078,"difficulty":5.053,"effort":1177.21,"length":49,"time":65.401,"vocabulary":27,"volume":232.989,"operands":{"distinct":19,"total":24,"identifiers":["inputs","tokenizer","\"hello\"","\"hello world\"","padding","true","last_hidden_state","model","expect","dims","toEqual","2","6","32","mean","item","toBeCloseTo","9.934107758624577e-9","5"]},"operators":{"distinct":8,"total":25,"identifiers":["const","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":6},"errors":[],"lineEnd":36,"lineStart":31,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":42,"lineStart":40,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.035,"difficulty":2.917,"effort":309.966,"length":26,"time":17.22,"vocabulary":17,"volume":106.274,"operands":{"distinct":12,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-CohereForCausalLM\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":45},"errors":[],"lineEnd":89,"lineStart":45,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.024,"difficulty":2,"effort":143.399,"length":20,"time":7.967,"vocabulary":12,"volume":71.699,"operands":{"distinct":9,"total":12,"identifiers":["model","CohereForCausalLM","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","CohereTokenizer","padding_side","\"left\""]},"operators":{"distinct":3,"total":8,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":55,"lineStart":51,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.056,"difficulty":5.318,"effort":896.407,"length":39,"time":49.8,"vocabulary":20,"volume":168.555,"operands":{"distinct":11,"total":13,"identifiers":["inputs","tokenizer","\"hello\"","outputs","model","generate","max_length","10","expect","tolist","toEqual"]},"operators":{"distinct":9,"total":26,"identifiers":["const","=","()",".","{}","... (spread)",":","[]",","]}},"paramCount":0,"sloc":{"logical":8,"physical":8},"errors":[],"lineEnd":66,"lineStart":59,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.086,"difficulty":5.143,"effort":1326.05,"length":57,"time":73.669,"vocabulary":23,"volume":257.843,"operands":{"distinct":14,"total":16,"identifiers":["inputs","tokenizer","\"hello\"","\"hello world\"","padding","true","outputs","model","generate","max_length","10","expect","tolist","toEqual"]},"operators":{"distinct":9,"total":41,"identifiers":["const","=","()","[]",",","{}",":",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":9,"physical":11},"errors":[],"lineEnd":82,"lineStart":72,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":88,"lineStart":86,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.266,"halstead":{"bugs":0.048,"difficulty":1.253,"effort":2161.882,"length":24.333,"time":120.105,"vocabulary":5,"volume":143.734,"operands":{"distinct":4.083,"total":11.167},"operators":{"distinct":0.917,"total":13.167}},"paramCount":0,"sloc":{"logical":6.583,"physical":7.583}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":29.474,"halstead":{"bugs":0.037,"difficulty":2.843,"effort":473.084,"length":26.455,"time":26.282,"vocabulary":14.545,"volume":111.627,"operands":{"distinct":9.909,"total":12.182},"operators":{"distinct":4.636,"total":14.273}},"paramCount":0,"sloc":{"logical":7.091,"physical":19.636}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/convnext/test_image_processing_convnext.js","testCases":1,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  22 |\n  23 |         expect(pixel_values.dims).toEqual([1, 3, 224, 224]);\n> 24 |         expect(pixel_values.mean().item()).toBeCloseTo(0.06262318789958954, 3);\n     |                                                       ^ Magic Number\n  25 |\n  26 |         expect(original_sizes).toEqual([[408, 612]]);\n  27 |         expect(reshaped_input_sizes).toEqual([[224, 224]]);","start":{"line":24,"column":55,"index":885}},{"frame":"  22 |\n  23 |         expect(pixel_values.dims).toEqual([1, 3, 224, 224]);\n> 24 |         expect(pixel_values.mean().item()).toBeCloseTo(0.06262318789958954, 3);\n     |                                                                            ^ Magic Number\n  25 |\n  26 |         expect(original_sizes).toEqual([[408, 612]]);\n  27 |         expect(reshaped_input_sizes).toEqual([[224, 224]]);","start":{"line":24,"column":76,"index":906}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.171,"difficulty":7.5,"effort":3845.13,"length":97,"time":213.618,"vocabulary":39,"volume":512.684,"operands":{"distinct":30,"total":50,"identifiers":["describe","\"ConvNextFeatureExtractor\"","model_id","\"Xenova/resnet-50\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.06262318789958954","408","612","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":9,"total":47,"identifiers":["function=>","()","const","=","let",".","{}","[]",","]}},"paramCount":0,"sloc":{"logical":28,"physical":33}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":33,"lineStart":1,"maintainability":120.365,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"ConvNextFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":27},"errors":[],"lineEnd":32,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/resnet-50\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":31,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.11,"difficulty":6.632,"effort":2181.994,"length":70,"time":121.222,"vocabulary":26,"volume":329.031,"operands":{"distinct":19,"total":36,"identifiers":["image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.06262318789958954","408","612"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":28,"lineStart":19,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.034,"difficulty":1.5,"effort":769.026,"length":19.4,"time":42.724,"vocabulary":7.8,"volume":102.537,"operands":{"distinct":6,"total":10},"operators":{"distinct":1.8,"total":9.4}},"paramCount":0,"sloc":{"logical":5.6,"physical":6.6}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.637,"halstead":{"bugs":0.034,"difficulty":2.908,"effort":589.559,"length":24,"time":32.753,"vocabulary":12.5,"volume":103.047,"operands":{"distinct":8.25,"total":12.5},"operators":{"distinct":4.25,"total":11.5}},"paramCount":0,"sloc":{"logical":6.75,"physical":16}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/deit/test_image_processing_deit.js","testCases":1,"smells":1,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  21 |\n  22 |         expect(pixel_values.dims).toEqual([1, 3, 224, 224]);\n> 23 |         expect(pixel_values.mean().item()).toBeCloseTo(-0.2760336682859463, 6);\n     |                                                                            ^ Magic Number\n  24 |\n  25 |         expect(original_sizes).toEqual([[408, 612]]);\n  26 |         expect(reshaped_input_sizes).toEqual([[224, 224]]);","start":{"line":23,"column":76,"index":886}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.175,"difficulty":8.065,"effort":4234.194,"length":98,"time":235.233,"vocabulary":41,"volume":525.04,"operands":{"distinct":31,"total":50,"identifiers":["describe","\"DeiTFeatureExtractor\"","model_id","\"Xenova/deit-tiny-distilled-patch16-224\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.2760336682859463","6","408","612","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":10,"total":48,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":28,"physical":32}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":32,"lineStart":1,"maintainability":120.035,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"DeiTFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":26},"errors":[],"lineEnd":31,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/deit-tiny-distilled-patch16-224\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":30,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":14,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.114,"difficulty":7.2,"effort":2457.52,"length":71,"time":136.529,"vocabulary":28,"volume":341.322,"operands":{"distinct":20,"total":36,"identifiers":["image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.2760336682859463","6","408","612"]},"operators":{"distinct":8,"total":35,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":27,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.035,"difficulty":1.613,"effort":846.839,"length":19.6,"time":47.047,"vocabulary":8.2,"volume":105.008,"operands":{"distinct":6.2,"total":10},"operators":{"distinct":2,"total":9.6}},"paramCount":0,"sloc":{"logical":5.6,"physical":6.4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.637,"halstead":{"bugs":0.035,"difficulty":3.05,"effort":658.441,"length":24.25,"time":36.58,"vocabulary":13,"volume":106.12,"operands":{"distinct":8.5,"total":12.5},"operators":{"distinct":4.5,"total":11.75}},"paramCount":0,"sloc":{"logical":6.75,"physical":15.75}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/detr/test_image_processing_detr.js","testCases":1,"smells":3,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  21 |\n  22 |         expect(pixel_values.dims).toEqual([1, 3, 888, 1333]);\n> 23 |         expect(pixel_values.mean().item()).toBeCloseTo(-0.27840224131001773, 6);\n     |                                                                             ^ Magic Number\n  24 |\n  25 |         expect(original_sizes).toEqual([[408, 612]]);\n  26 |         expect(reshaped_input_sizes).toEqual([[888, 1333]]);","start":{"line":23,"column":77,"index":883}},{"frame":"  27 |\n  28 |         expect(pixel_mask.dims).toEqual([1, 64, 64]);\n> 29 |         expect(pixel_mask.to(\"float32\").mean().item()).toBeCloseTo(1.0, 6);\n     |                                                                   ^ Magic Number\n  30 |       },\n  31 |       MAX_TEST_EXECUTION_TIME,\n  32 |     );","start":{"line":29,"column":67,"index":1125}},{"frame":"  27 |\n  28 |         expect(pixel_mask.dims).toEqual([1, 64, 64]);\n> 29 |         expect(pixel_mask.to(\"float32\").mean().item()).toBeCloseTo(1.0, 6);\n     |                                                                        ^ Magic Number\n  30 |       },\n  31 |       MAX_TEST_EXECUTION_TIME,\n  32 |     );","start":{"line":29,"column":72,"index":1130}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":13.889,"halstead":{"bugs":0.243,"difficulty":9.444,"effort":6886.041,"length":132,"time":382.558,"vocabulary":46,"volume":729.11,"operands":{"distinct":36,"total":68,"identifiers":["describe","\"DetrFeatureExtractor\"","model_id","\"Xenova/detr-resnet-50\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","pixel_mask","expect","dims","toEqual","1","3","888","1333","mean","item","toBeCloseTo","0.27840224131001773","6","408","612","64","to","\"float32\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":10,"total":64,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":36,"physical":35}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":35,"lineStart":1,"maintainability":114.301,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"DetrFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":29},"errors":[],"lineEnd":34,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/detr-resnet-50\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":27},"errors":[],"lineEnd":33,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":14,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.177,"difficulty":8.64,"effort":4576.274,"length":105,"time":254.237,"vocabulary":33,"volume":529.661,"operands":{"distinct":25,"total":54,"identifiers":["image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","pixel_mask","processor","expect","dims","toEqual","1","3","888","1333","mean","item","toBeCloseTo","0.27840224131001773","6","408","612","64","to","\"float32\""]},"operators":{"distinct":8,"total":51,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":25,"physical":13},"errors":[],"lineEnd":30,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.778,"halstead":{"bugs":0.049,"difficulty":1.889,"effort":1377.208,"length":26.4,"time":76.512,"vocabulary":9.2,"volume":145.822,"operands":{"distinct":7.2,"total":13.6},"operators":{"distinct":2,"total":12.8}},"paramCount":0,"sloc":{"logical":7.2,"physical":7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.167,"halstead":{"bugs":0.051,"difficulty":3.41,"effort":1188.13,"length":32.75,"time":66.007,"vocabulary":14.25,"volume":153.205,"operands":{"distinct":9.75,"total":17},"operators":{"distinct":4.5,"total":15.75}},"paramCount":0,"sloc":{"logical":8.75,"physical":18}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/donut/test_image_processing_donut.js","testCases":1,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  24 |\n  25 |         expect(pixel_values.dims).toEqual([1, 3, 1280, 960]);\n> 26 |         expect(pixel_values.mean().item()).toBeCloseTo(0.1229388610053704, 6);\n     |                                                       ^ Magic Number\n  27 |\n  28 |         expect(original_sizes).toEqual([[864, 576]]);\n  29 |         expect(reshaped_input_sizes).toEqual([[1280, 853]]);","start":{"line":26,"column":55,"index":1035}},{"frame":"  24 |\n  25 |         expect(pixel_values.dims).toEqual([1, 3, 1280, 960]);\n> 26 |         expect(pixel_values.mean().item()).toBeCloseTo(0.1229388610053704, 6);\n     |                                                                           ^ Magic Number\n  27 |\n  28 |         expect(original_sizes).toEqual([[864, 576]]);\n  29 |         expect(reshaped_input_sizes).toEqual([[1280, 853]]);","start":{"line":26,"column":75,"index":1055}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.174,"difficulty":6.818,"effort":3566.283,"length":97,"time":198.127,"vocabulary":42,"volume":523.055,"operands":{"distinct":33,"total":50,"identifiers":["describe","\"DonutFeatureExtractor\"","model_id","\"Xenova/donut-base-finetuned-cord-v2\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"receipt\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","1280","960","mean","item","toBeCloseTo","0.1229388610053704","6","864","576","853","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":9,"total":47,"identifiers":["function=>","()","const","=","let",".","{}","[]",","]}},"paramCount":0,"sloc":{"logical":28,"physical":35}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":35,"lineStart":1,"maintainability":120.622,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"DonutFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":29},"errors":[],"lineEnd":34,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/donut-base-finetuned-cord-v2\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":33,"lineStart":10,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":17,"lineStart":15,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.113,"difficulty":5.727,"effort":1947.609,"length":70,"time":108.2,"vocabulary":29,"volume":340.059,"operands":{"distinct":22,"total":36,"identifiers":["image","load_cached_image","\"receipt\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","1280","960","mean","item","toBeCloseTo","0.1229388610053704","6","864","576","853"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":30,"lineStart":21,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.035,"difficulty":1.364,"effort":713.257,"length":19.4,"time":39.625,"vocabulary":8.4,"volume":104.611,"operands":{"distinct":6.6,"total":10},"operators":{"distinct":1.8,"total":9.4}},"paramCount":0,"sloc":{"logical":5.6,"physical":7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.637,"halstead":{"bugs":0.035,"difficulty":2.682,"effort":530.963,"length":24,"time":29.498,"vocabulary":13.25,"volume":105.804,"operands":{"distinct":9,"total":12.5},"operators":{"distinct":4.25,"total":11.5}},"paramCount":0,"sloc":{"logical":6.75,"physical":16.5}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/dpt/test_image_processing_dpt.js","testCases":3,"smells":6,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  22 |\n  23 |         expect(pixel_values.dims).toEqual([1, 3, 384, 384]);\n> 24 |         expect(pixel_values.mean().item()).toBeCloseTo(0.0372855559389454, 6);\n     |                                                       ^ Magic Number\n  25 |\n  26 |         expect(original_sizes).toEqual([[480, 640]]);\n  27 |         expect(reshaped_input_sizes).toEqual([[384, 384]]);","start":{"line":24,"column":55,"index":899}},{"frame":"  22 |\n  23 |         expect(pixel_values.dims).toEqual([1, 3, 384, 384]);\n> 24 |         expect(pixel_values.mean().item()).toBeCloseTo(0.0372855559389454, 6);\n     |                                                                           ^ Magic Number\n  25 |\n  26 |         expect(original_sizes).toEqual([[480, 640]]);\n  27 |         expect(reshaped_input_sizes).toEqual([[384, 384]]);","start":{"line":24,"column":75,"index":919}},{"frame":"  51 |\n  52 |         expect(pixel_values.dims).toEqual([1, 3, 518, 686]);\n> 53 |         expect(pixel_values.mean().item()).toBeCloseTo(0.30337387323379517, 3);\n     |                                                       ^ Magic Number\n  54 |\n  55 |         expect(original_sizes).toEqual([[480, 640]]);\n  56 |         expect(reshaped_input_sizes).toEqual([[518, 686]]);","start":{"line":53,"column":55,"index":1837}},{"frame":"  51 |\n  52 |         expect(pixel_values.dims).toEqual([1, 3, 518, 686]);\n> 53 |         expect(pixel_values.mean().item()).toBeCloseTo(0.30337387323379517, 3);\n     |                                                                            ^ Magic Number\n  54 |\n  55 |         expect(original_sizes).toEqual([[480, 640]]);\n  56 |         expect(reshaped_input_sizes).toEqual([[518, 686]]);","start":{"line":53,"column":76,"index":1858}},{"frame":"  67 |         // NOTE: without bankers rounding, this would be [1, 3, 266, 518]\n  68 |         expect(pixel_values.dims).toEqual([1, 3, 252, 518]);\n> 69 |         expect(pixel_values.mean().item()).toBeCloseTo(0.2267402559518814, 1);\n     |                                                       ^ Magic Number\n  70 |\n  71 |         expect(original_sizes).toEqual([[32, 64]]);\n  72 |         expect(reshaped_input_sizes).toEqual([[252, 518]]);","start":{"line":69,"column":55,"index":2456}},{"frame":"  67 |         // NOTE: without bankers rounding, this would be [1, 3, 266, 518]\n  68 |         expect(pixel_values.dims).toEqual([1, 3, 252, 518]);\n> 69 |         expect(pixel_values.mean().item()).toBeCloseTo(0.2267402559518814, 1);\n     |                                                                           ^ Magic Number\n  70 |\n  71 |         expect(original_sizes).toEqual([[32, 64]]);\n  72 |         expect(reshaped_input_sizes).toEqual([[252, 518]]);","start":{"line":69,"column":75,"index":2476}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":12.162,"halstead":{"bugs":0.509,"difficulty":14.547,"effort":22222.965,"length":268,"time":1234.609,"vocabulary":52,"volume":1527.718,"operands":{"distinct":43,"total":139,"identifiers":["describe","\"DPTFeatureExtractor\"","model_id","\"Xenova/dpt-hybrid-midas\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"grayscale images\"","image","load_cached_image","\"cats\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","384","mean","item","toBeCloseTo","0.0372855559389454","6","480","640","MAX_TEST_EXECUTION_TIME","\"DPTImageProcessor\"","\"Xenova/depth-anything-small-hf\"","\"ensure_multiple_of w/ normal rounding\"","518","686","0.30337387323379517","\"ensure_multiple_of w/ bankers rounding\"","\"checkerboard_64x32\"","252","0.2267402559518814","32","64"]},"operators":{"distinct":9,"total":129,"identifiers":["function=>","()","const","=","let",".","{}","[]",","]}},"paramCount":0,"sloc":{"logical":74,"physical":78}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":78,"lineStart":1,"maintainability":110.153,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"DPTFeatureExtractor\"","\"DPTImageProcessor\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":72},"errors":[],"lineEnd":77,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/dpt-hybrid-midas\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"grayscale images\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":31,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.111,"difficulty":6.3,"effort":2096.905,"length":70,"time":116.495,"vocabulary":27,"volume":332.842,"operands":{"distinct":20,"total":36,"identifiers":["image","load_cached_image","\"cats\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","384","mean","item","toBeCloseTo","0.0372855559389454","6","480","640"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":28,"lineStart":19,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":3.056,"effort":232.672,"length":20,"time":12.926,"vocabulary":14,"volume":76.147,"operands":{"distinct":9,"total":11,"identifiers":["model_id","\"Xenova/depth-anything-small-hf\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"ensure_multiple_of w/ normal rounding\"","MAX_TEST_EXECUTION_TIME","\"ensure_multiple_of w/ bankers rounding\""]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":40},"errors":[],"lineEnd":76,"lineStart":37,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":44,"lineStart":42,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.111,"difficulty":6.3,"effort":2096.905,"length":70,"time":116.495,"vocabulary":27,"volume":332.842,"operands":{"distinct":20,"total":36,"identifiers":["image","load_cached_image","\"cats\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","518","686","mean","item","toBeCloseTo","0.30337387323379517","480","640"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":57,"lineStart":48,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.111,"difficulty":6.3,"effort":2096.905,"length":70,"time":116.495,"vocabulary":27,"volume":332.842,"operands":{"distinct":20,"total":36,"identifiers":["image","load_cached_image","\"checkerboard_64x32\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","252","518","mean","item","toBeCloseTo","0.2267402559518814","32","64"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":11},"errors":[],"lineEnd":73,"lineStart":63,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.351,"halstead":{"bugs":0.057,"difficulty":1.616,"effort":2469.218,"length":29.778,"time":137.179,"vocabulary":5.778,"volume":169.746,"operands":{"distinct":4.778,"total":15.444},"operators":{"distinct":1,"total":14.333}},"paramCount":0,"sloc":{"logical":8.222,"physical":8.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":21.477,"halstead":{"bugs":0.05,"difficulty":3.599,"effort":843.235,"length":33.375,"time":46.846,"vocabulary":15.875,"volume":148.507,"operands":{"distinct":11,"total":17.375},"operators":{"distinct":4.875,"total":16}},"paramCount":0,"sloc":{"logical":9.125,"physical":21.625}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/efficientnet/test_image_processing_efficientnet.js","testCases":1,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  37 |         const { pixel_values, original_sizes, reshaped_input_sizes } = await processor(image);\n  38 |         expect(pixel_values.dims).toEqual([1, 3, 224, 224]);\n> 39 |         expect(pixel_values.mean().item()).toBeCloseTo(0.3015307230282871, 6);\n     |                                                       ^ Magic Number\n  40 |         expect(original_sizes).toEqual([[480, 640]]);\n  41 |         expect(reshaped_input_sizes).toEqual([[224, 224]]);\n  42 |       },","start":{"line":39,"column":55,"index":1247}},{"frame":"  37 |         const { pixel_values, original_sizes, reshaped_input_sizes } = await processor(image);\n  38 |         expect(pixel_values.dims).toEqual([1, 3, 224, 224]);\n> 39 |         expect(pixel_values.mean().item()).toBeCloseTo(0.3015307230282871, 6);\n     |                                                                           ^ Magic Number\n  40 |         expect(original_sizes).toEqual([[480, 640]]);\n  41 |         expect(reshaped_input_sizes).toEqual([[224, 224]]);\n  42 |       },","start":{"line":39,"column":75,"index":1267}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":10,"halstead":{"bugs":0.292,"difficulty":7.596,"effort":6648.662,"length":147,"time":369.37,"vocabulary":62,"volume":875.267,"operands":{"distinct":52,"total":79,"identifiers":["describe","\"EfficientNetImageProcessor\"","processor","EfficientNetImageProcessor","crop_size","height","289","width","do_center_crop","false","do_normalize","true","do_rescale","do_resize","image_mean","0.485","0.456","0.406","image_processor_type","image_std","0.47853944","0.4732864","0.47434163","include_top","resample","0","rescale_factor","0.00392156862745098","rescale_offset","size","224","it","\"default\"","image","load_cached_image","\"cats\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","mean","item","toBeCloseTo","0.3015307230282871","6","480","640","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":10,"total":68,"identifiers":["function=>","()","const","=","new","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":40,"physical":47}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":47,"lineStart":1,"maintainability":108.336,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"EfficientNetImageProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":41},"errors":[],"lineEnd":46,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.129,"difficulty":5.591,"effort":2170.653,"length":72,"time":120.592,"vocabulary":42,"volume":388.247,"operands":{"distinct":33,"total":41,"identifiers":["processor","EfficientNetImageProcessor","crop_size","height","289","width","do_center_crop","false","do_normalize","true","do_rescale","do_resize","image_mean","0.485","0.456","0.406","image_processor_type","\"EfficientNetImageProcessor\"","image_std","0.47853944","0.4732864","0.47434163","include_top","resample","0","rescale_factor","0.00392156862745098","rescale_offset","size","224","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":9,"total":31,"identifiers":["const","=","new","{}",":","[]",",","()","function=>"]}},"paramCount":0,"sloc":{"logical":20,"physical":37},"errors":[],"lineEnd":45,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.111,"difficulty":6.3,"effort":2096.905,"length":70,"time":116.495,"vocabulary":27,"volume":332.842,"operands":{"distinct":20,"total":36,"identifiers":["image","load_cached_image","\"cats\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.3015307230282871","6","480","640"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":8},"errors":[],"lineEnd":42,"lineStart":35,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.5,"halstead":{"bugs":0.073,"difficulty":1.899,"effort":1662.165,"length":36.75,"time":92.343,"vocabulary":15.5,"volume":218.817,"operands":{"distinct":13,"total":19.75},"operators":{"distinct":2.5,"total":17}},"paramCount":0,"sloc":{"logical":10,"physical":11.75}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":20.294,"halstead":{"bugs":0.081,"difficulty":4.297,"effort":1425.186,"length":48.667,"time":79.177,"vocabulary":24.333,"volume":243.03,"operands":{"distinct":18.333,"total":26.333},"operators":{"distinct":6,"total":22.333}},"paramCount":0,"sloc":{"logical":13,"physical":28.667}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/florence2/test_modeling_florence2.js","testCases":3,"smells":4,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  42 |           const text_inputs = processor.tokenizer(texts[0]);\n  43 |           const generate_ids = await model.generate({ ...text_inputs, max_new_tokens: 10 });\n> 44 |           expect(generate_ids.tolist()).toEqual([[2n, 0n, 0n, 0n, 1n, 0n, 0n, 2n]]);\n     |          ^ Duplicate Assert\n  45 |         }\n  46 |         {\n  47 |           const inputs = await processor(image, texts[0]);","start":{"line":44,"column":10,"index":1593}},{"frame":"  47 |           const inputs = await processor(image, texts[0]);\n  48 |           const generate_ids = await model.generate({ ...inputs, max_new_tokens: 10 });\n> 49 |           expect(generate_ids.tolist()).toEqual([[2n, 0n, 48n, 48n, 48n, 48n, 48n, 48n, 48n, 48n, 2n]]);\n     |          ^ Duplicate Assert\n  50 |         }\n  51 |       },\n  52 |       MAX_TEST_EXECUTION_TIME,","start":{"line":49,"column":10,"index":1845}},{"frame":"  59 |           const text_inputs = processor.tokenizer(texts, { padding: true });\n  60 |           const generate_ids = await model.generate({ ...text_inputs, max_new_tokens: 10 });\n> 61 |           expect(generate_ids.tolist()).toEqual([\n     |          ^ Duplicate Assert\n  62 |             [2n, 0n, 0n, 0n, 1n, 0n, 0n, 2n],\n  63 |             [2n, 0n, 0n, 0n, 1n, 0n, 0n, 2n],\n  64 |           ]);","start":{"line":61,"column":10,"index":2238}},{"frame":"  68 |\n  69 |           const generate_ids = await model.generate({ ...inputs, max_new_tokens: 10 });\n> 70 |           expect(generate_ids.tolist()).toEqual([\n     |          ^ Duplicate Assert\n  71 |             [2n, 0n, 48n, 48n, 48n, 48n, 48n, 48n, 48n, 48n, 2n],\n  72 |             [2n, 0n, 48n, 48n, 48n, 48n, 48n, 48n, 48n, 48n, 2n],\n  73 |           ]);","start":{"line":70,"column":10,"index":2587}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":11.765,"halstead":{"bugs":0.658,"difficulty":17.16,"effort":33848.141,"length":330,"time":1880.452,"vocabulary":63,"volume":1972.502,"operands":{"distinct":50,"total":132,"identifiers":["texts","\"Describe with a paragraph what is shown in the image.\"","\"Locate the objects with category name in the image.\"","dims","224","3","image","RawImage","Uint8ClampedArray","0","1","2","fill","255","describe","\"Florence2ForConditionalGeneration\"","model_id","\"Xenova/tiny-random-Florence2ForConditionalGeneration\"","model","processor","beforeAll","Florence2ForConditionalGeneration","from_pretrained","DEFAULT_MODEL_OPTIONS","Florence2Processor","MAX_MODEL_LOAD_TIME","it","\"forward\"","inputs","logits","decoder_input_ids","full","expect","toEqual","51289","MAX_TEST_EXECUTION_TIME","\"batch_size=1\"","text_inputs","tokenizer","generate_ids","generate","max_new_tokens","10","tolist","\"batch_size>1\"","padding","true","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":13,"total":198,"identifiers":["function=>","const","=","[]",",","new","()",".","*","... (spread)","let","{}",":"]}},"paramCount":0,"sloc":{"logical":68,"physical":84}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":84,"lineStart":1,"maintainability":107.773,"methods":[{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.069,"difficulty":6.563,"effort":1357.252,"length":44,"time":75.403,"vocabulary":26,"volume":206.819,"operands":{"distinct":16,"total":21,"identifiers":["texts","\"Describe with a paragraph what is shown in the image.\"","\"Locate the objects with category name in the image.\"","dims","224","3","image","RawImage","Uint8ClampedArray","0","1","2","fill","255","describe","\"Florence2ForConditionalGeneration\""]},"operators":{"distinct":10,"total":23,"identifiers":["const","=","[]",",","new","()",".","*","... (spread)","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":79},"errors":[],"lineEnd":83,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.043,"difficulty":3.269,"effort":422.606,"length":31,"time":23.478,"vocabulary":18,"volume":129.268,"operands":{"distinct":13,"total":17,"identifiers":["model_id","\"Xenova/tiny-random-Florence2ForConditionalGeneration\"","model","processor","beforeAll","MAX_MODEL_LOAD_TIME","it","\"forward\"","MAX_TEST_EXECUTION_TIME","\"batch_size=1\"","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":71},"errors":[],"lineEnd":82,"lineStart":12,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","Florence2ForConditionalGeneration","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","processor","Florence2Processor"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":22,"lineStart":19,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.062,"difficulty":6.429,"effort":1192.282,"length":41,"time":66.238,"vocabulary":23,"volume":185.466,"operands":{"distinct":14,"total":20,"identifiers":["inputs","processor","image","texts","0","logits","model","decoder_input_ids","full","1","expect","dims","toEqual","51289"]},"operators":{"distinct":9,"total":21,"identifiers":["const","=","()","[]","{}","... (spread)",":",",","."]}},"paramCount":0,"sloc":{"logical":9,"physical":9},"errors":[],"lineEnd":34,"lineStart":26,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.128,"difficulty":9,"effort":3466.232,"length":84,"time":192.568,"vocabulary":24,"volume":385.137,"operands":{"distinct":15,"total":30,"identifiers":["text_inputs","processor","tokenizer","texts","0","generate_ids","model","generate","max_new_tokens","10","expect","tolist","toEqual","inputs","image"]},"operators":{"distinct":9,"total":54,"identifiers":["const","=","()",".","[]","{}","... (spread)",":",","]}},"paramCount":0,"sloc":{"logical":16,"physical":12},"errors":[],"lineEnd":51,"lineStart":40,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.173,"difficulty":9.281,"effort":4827.289,"length":112,"time":268.183,"vocabulary":25,"volume":520.112,"operands":{"distinct":16,"total":33,"identifiers":["text_inputs","processor","tokenizer","texts","padding","true","generate_ids","model","generate","max_new_tokens","10","expect","tolist","toEqual","inputs","image"]},"operators":{"distinct":9,"total":79,"identifiers":["const","=","()",".","{}",":","... (spread)","[]",","]}},"paramCount":0,"sloc":{"logical":18,"physical":19},"errors":[],"lineEnd":75,"lineStart":57,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":81,"lineStart":79,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.471,"halstead":{"bugs":0.082,"difficulty":2.145,"effort":4231.018,"length":41.25,"time":235.057,"vocabulary":7.875,"volume":246.563,"operands":{"distinct":6.25,"total":16.5},"operators":{"distinct":1.625,"total":24.75}},"paramCount":0,"sloc":{"logical":8.5,"physical":10.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":24.611,"halstead":{"bugs":0.07,"difficulty":5.21,"effort":1623.108,"length":47,"time":90.173,"vocabulary":18.286,"volume":211.233,"operands":{"distinct":11.857,"total":18.857},"operators":{"distinct":6.429,"total":28.143}},"paramCount":0,"sloc":{"logical":9.571,"physical":28.143}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/florence2/test_processor_florence2.js","testCases":2,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  208 |       ];\n  209 |\n> 210 |       for (const { task, generated_text, target, image } of TESTS) {\n      |      ^ Conditional Test Logic\n  211 |         it(\n  212 |           task,\n  213 |           () => {","start":{"line":210,"column":6,"index":21400}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":8.108,"halstead":{"bugs":1.65,"difficulty":11.418,"effort":56531.29,"length":669,"time":3140.627,"vocabulary":169,"volume":4951.188,"operands":{"distinct":158,"total":328,"identifiers":["describe","\"FlorenceProcessor\"","model_id","\"Xenova/tiny-random-Florence2ForConditionalGeneration\"","processor","images","beforeAll","AutoProcessor","from_pretrained","beetle","load_cached_image","\"beetle\"","book_cover","\"book_cover\"","MAX_PROCESSOR_LOAD_TIME","\"Prompt construction\"","it","\"Construct prompt\"","text","\"<OD>\"","prompts","construct_prompts","target","\"Locate the objects with category name in the image.\"","expect","toEqual","MAX_TEST_EXECUTION_TIME","\"Construct prompts\"","texts","\"<MORE_DETAILED_CAPTION>\"","\"<OPEN_VOCABULARY_DETECTION>cat\"","\"Describe with a paragraph what is shown in the image.\"","\"Locate cat in the image.\"","\"Post-process generation\"","TESTS","task","\"<CAPTION>\"","generated_text","\"</s><s>A green car parked in front of a yellow building.</s>\"","\"A green car parked in front of a yellow building.\"","image","\"<DETAILED_CAPTION>\"","\"</s><s>The image shows a green Volkswagen Beetle parked in front of a yellow building with two brown doors. The sky is a mix of blue and white, and there are a few green trees in the background.</s>\"","\"The image shows a green Volkswagen Beetle parked in front of a yellow building with two brown doors. The sky is a mix of blue and white, and there are a few green trees in the background.\"","\"</s><s>The image shows a vintage Volkswagen Beetle car parked on a cobblestone street in front of a yellow building with two wooden doors. The car is painted in a bright turquoise color and has a white stripe running along the side. It has two doors on either side of the car, one on top of the other, and a small window on the front. The building appears to be old and dilapidated, with peeling paint and crumbling walls. The sky is blue and there are trees in the background.</s>\"","\"The image shows a vintage Volkswagen Beetle car parked on a cobblestone street in front of a yellow building with two wooden doors. The car is painted in a bright turquoise color and has a white stripe running along the side. It has two doors on either side of the car, one on top of the other, and a small window on the front. The building appears to be old and dilapidated, with peeling paint and crumbling walls. The sky is blue and there are trees in the background.\"","\"</s><s><s><s>car<loc_53><loc_333><loc_933><loc_774>door<loc_712><loc_203><loc_906><loc_545>wheel<loc_704><loc_576><loc_866><loc_772><loc_149><loc_584><loc_310><loc_773></s>\"","bboxes","34.24","160.08","597.44","371.76","456","97.68","580.16","261.84","450.88","276.72","554.56","370.8","95.68","280.56","198.72","371.28","labels","\"car\"","\"door\"","\"wheel\"","\"<DENSE_REGION_CAPTION>\"","\"</s><s>turquoise Volkswagen Beetle<loc_52><loc_333><loc_932><loc_774>wheel<loc_704><loc_576><loc_864><loc_772><loc_148><loc_584><loc_308><loc_773></s>\"","33.6","596.8","553.28","95.04","197.44","\"turquoise Volkswagen Beetle\"","\"<REGION_PROPOSAL>\"","\"</s><s><s><s><loc_52><loc_333><loc_932><loc_774><loc_711><loc_203><loc_905><loc_545><loc_704><loc_576><loc_864><loc_772><loc_148><loc_584><loc_309><loc_773><loc_354><loc_184><loc_519><loc_342><loc_102><loc_555><loc_135><loc_616><loc_424><loc_503><loc_472><loc_514><loc_637><loc_642><loc_646><loc_668></s>\"","455.36","579.52","198.08","226.88","88.56","332.48","164.4","65.6","266.64","86.72","295.92","271.68","241.68","302.4","246.96","408","308.4","413.76","320.88","\"\"","\"<CAPTION_TO_PHRASE_GROUNDING>\"","text_input","\"</s><s><s><s>A green car<loc_54><loc_330><loc_911><loc_780>a yellow building<loc_0><loc_8><loc_998><loc_635></s>\"","34.88","158.64","583.36","374.64","0.32","4.08","639.04","305.04","\"A green car\"","\"a yellow building\"","\"<REGION_TO_CATEGORY>\"","\"<loc_52><loc_332><loc_932><loc_774>\"","\"</s><s>car<loc_52><loc_332><loc_932><loc_774></s>\"","\"car<loc_52><loc_332><loc_932><loc_774>\"","\"<REGION_TO_DESCRIPTION>\"","\"</s><s>turquoise Volkswagen Beetle<loc_52><loc_332><loc_932><loc_774></s>\"","\"turquoise Volkswagen Beetle<loc_52><loc_332><loc_932><loc_774>\"","\"<OCR>\"","\"</s><s>CUDAFOR ENGINEERSAn Introduction to High-PerformanceParallel ComputingDUANE STORTIMETE YURTOGLU</s>\"","\"CUDAFOR ENGINEERSAn Introduction to High-PerformanceParallel ComputingDUANE STORTIMETE YURTOGLU\"","\"<OCR_WITH_REGION>\"","\"</s><s><s><s>CUDA<loc_414><loc_100><loc_932><loc_100><loc_932><loc_229><loc_414><loc_229>FOR ENGINEERS<loc_359><loc_241><loc_932><loc_241><loc_932><loc_298><loc_359><loc_298>An Introduction to High-Performance<loc_287><loc_330><loc_934><loc_332><loc_934><loc_368><loc_287><loc_366>Parallel Computing<loc_595><loc_368><loc_934><loc_372><loc_934><loc_408><loc_595><loc_404>DUANE STORTI<loc_660><loc_882><loc_934><loc_882><loc_934><loc_912><loc_660><loc_912>METE YURTOGLU<loc_625><loc_920><loc_934><loc_920><loc_934><loc_950><loc_625><loc_950></s>\"","quad_boxes","167.0435028076172","50.25","375.7974853515625","114.75","144.8784942626953","120.75","149.25","115.86249542236328","165.25","376.6034851074219","166.25","184.25","183.25","239.9864959716797","186.25","204.25","202.25","266.1814880371094","441.25","456.25","252.0764923095703","460.25","475.25","\"CUDA\"","\"FOR ENGINEERS\"","\"An Introduction to High-Performance\"","\"Parallel Computing\"","\"DUANE STORTI\"","\"METE YURTOGLU\"","result","post_process_generation","size","toBeCloseToNested","4"]},"operators":{"distinct":11,"total":341,"identifiers":["function=>","()","const","=","let","{}",".",":","[]",",","forof"]}},"paramCount":0,"sloc":{"logical":111,"physical":223}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":2,"path":"../../init.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"}],"errors":[],"lineEnd":223,"lineStart":1,"maintainability":100.392,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"FlorenceProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":219},"errors":[],"lineEnd":222,"lineStart":4,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.029,"difficulty":3.333,"effort":286.505,"length":22,"time":15.917,"vocabulary":15,"volume":85.952,"operands":{"distinct":9,"total":10,"identifiers":["model_id","\"Xenova/tiny-random-Florence2ForConditionalGeneration\"","processor","images","beforeAll","MAX_PROCESSOR_LOAD_TIME","describe","\"Prompt construction\"","\"Post-process generation\""]},"operators":{"distinct":6,"total":12,"identifiers":["const","=","let","{}","()","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":217},"errors":[],"lineEnd":221,"lineStart":5,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.026,"difficulty":2.75,"effort":214.879,"length":20,"time":11.938,"vocabulary":15,"volume":78.138,"operands":{"distinct":10,"total":11,"identifiers":["processor","AutoProcessor","from_pretrained","model_id","images","beetle","load_cached_image","\"beetle\"","book_cover","\"book_cover\""]},"operators":{"distinct":5,"total":9,"identifiers":["=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":7,"physical":7},"errors":[],"lineEnd":18,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":38.774,"length":10,"time":2.154,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":6,"identifiers":["it","\"Construct prompt\"","MAX_TEST_EXECUTION_TIME","\"Construct prompts\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":23},"errors":[],"lineEnd":42,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.03,"difficulty":3.333,"effort":304.588,"length":24,"time":16.922,"vocabulary":14,"volume":91.377,"operands":{"distinct":9,"total":12,"identifiers":["text","\"<OD>\"","prompts","processor","construct_prompts","target","\"Locate the objects with category name in the image.\"","expect","toEqual"]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","()",".","[]"]}},"paramCount":0,"sloc":{"logical":6,"physical":6},"errors":[],"lineEnd":28,"lineStart":23,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.046,"difficulty":4,"effort":550.43,"length":33,"time":30.579,"vocabulary":18,"volume":137.608,"operands":{"distinct":12,"total":16,"identifiers":["texts","\"<MORE_DETAILED_CAPTION>\"","\"Locate the objects with category name in the image.\"","\"<OPEN_VOCABULARY_DETECTION>cat\"","prompts","processor","construct_prompts","target","\"Describe with a paragraph what is shown in the image.\"","\"Locate cat in the image.\"","expect","toEqual"]},"operators":{"distinct":6,"total":17,"identifiers":["const","=","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":6},"errors":[],"lineEnd":39,"lineStart":34,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.389,"halstead":{"bugs":1.257,"difficulty":9.214,"effort":34755.758,"length":533,"time":1930.875,"vocabulary":135,"volume":3771.943,"operands":{"distinct":126,"total":258,"identifiers":["TESTS","task","\"<CAPTION>\"","generated_text","\"</s><s>A green car parked in front of a yellow building.</s>\"","target","\"A green car parked in front of a yellow building.\"","image","\"beetle\"","\"<DETAILED_CAPTION>\"","\"</s><s>The image shows a green Volkswagen Beetle parked in front of a yellow building with two brown doors. The sky is a mix of blue and white, and there are a few green trees in the background.</s>\"","\"The image shows a green Volkswagen Beetle parked in front of a yellow building with two brown doors. The sky is a mix of blue and white, and there are a few green trees in the background.\"","\"<MORE_DETAILED_CAPTION>\"","\"</s><s>The image shows a vintage Volkswagen Beetle car parked on a cobblestone street in front of a yellow building with two wooden doors. The car is painted in a bright turquoise color and has a white stripe running along the side. It has two doors on either side of the car, one on top of the other, and a small window on the front. The building appears to be old and dilapidated, with peeling paint and crumbling walls. The sky is blue and there are trees in the background.</s>\"","\"The image shows a vintage Volkswagen Beetle car parked on a cobblestone street in front of a yellow building with two wooden doors. The car is painted in a bright turquoise color and has a white stripe running along the side. It has two doors on either side of the car, one on top of the other, and a small window on the front. The building appears to be old and dilapidated, with peeling paint and crumbling walls. The sky is blue and there are trees in the background.\"","\"<OD>\"","\"</s><s><s><s>car<loc_53><loc_333><loc_933><loc_774>door<loc_712><loc_203><loc_906><loc_545>wheel<loc_704><loc_576><loc_866><loc_772><loc_149><loc_584><loc_310><loc_773></s>\"","bboxes","34.24","160.08","597.44","371.76","456","97.68","580.16","261.84","450.88","276.72","554.56","370.8","95.68","280.56","198.72","371.28","labels","\"car\"","\"door\"","\"wheel\"","\"<DENSE_REGION_CAPTION>\"","\"</s><s>turquoise Volkswagen Beetle<loc_52><loc_333><loc_932><loc_774>wheel<loc_704><loc_576><loc_864><loc_772><loc_148><loc_584><loc_308><loc_773></s>\"","33.6","596.8","553.28","95.04","197.44","\"turquoise Volkswagen Beetle\"","\"<REGION_PROPOSAL>\"","\"</s><s><s><s><loc_52><loc_333><loc_932><loc_774><loc_711><loc_203><loc_905><loc_545><loc_704><loc_576><loc_864><loc_772><loc_148><loc_584><loc_309><loc_773><loc_354><loc_184><loc_519><loc_342><loc_102><loc_555><loc_135><loc_616><loc_424><loc_503><loc_472><loc_514><loc_637><loc_642><loc_646><loc_668></s>\"","455.36","579.52","198.08","226.88","88.56","332.48","164.4","65.6","266.64","86.72","295.92","271.68","241.68","302.4","246.96","408","308.4","413.76","320.88","\"\"","\"<CAPTION_TO_PHRASE_GROUNDING>\"","text_input","\"</s><s><s><s>A green car<loc_54><loc_330><loc_911><loc_780>a yellow building<loc_0><loc_8><loc_998><loc_635></s>\"","34.88","158.64","583.36","374.64","0.32","4.08","639.04","305.04","\"A green car\"","\"a yellow building\"","\"<REGION_TO_CATEGORY>\"","\"<loc_52><loc_332><loc_932><loc_774>\"","\"</s><s>car<loc_52><loc_332><loc_932><loc_774></s>\"","\"car<loc_52><loc_332><loc_932><loc_774>\"","\"<REGION_TO_DESCRIPTION>\"","\"</s><s>turquoise Volkswagen Beetle<loc_52><loc_332><loc_932><loc_774></s>\"","\"turquoise Volkswagen Beetle<loc_52><loc_332><loc_932><loc_774>\"","\"<OCR>\"","\"</s><s>CUDAFOR ENGINEERSAn Introduction to High-PerformanceParallel ComputingDUANE STORTIMETE YURTOGLU</s>\"","\"CUDAFOR ENGINEERSAn Introduction to High-PerformanceParallel ComputingDUANE STORTIMETE YURTOGLU\"","\"book_cover\"","\"<OCR_WITH_REGION>\"","\"</s><s><s><s>CUDA<loc_414><loc_100><loc_932><loc_100><loc_932><loc_229><loc_414><loc_229>FOR ENGINEERS<loc_359><loc_241><loc_932><loc_241><loc_932><loc_298><loc_359><loc_298>An Introduction to High-Performance<loc_287><loc_330><loc_934><loc_332><loc_934><loc_368><loc_287><loc_366>Parallel Computing<loc_595><loc_368><loc_934><loc_372><loc_934><loc_408><loc_595><loc_404>DUANE STORTI<loc_660><loc_882><loc_934><loc_882><loc_934><loc_912><loc_660><loc_912>METE YURTOGLU<loc_625><loc_920><loc_934><loc_920><loc_934><loc_950><loc_625><loc_950></s>\"","quad_boxes","167.0435028076172","50.25","375.7974853515625","114.75","144.8784942626953","120.75","149.25","115.86249542236328","165.25","376.6034851074219","166.25","184.25","183.25","239.9864959716797","186.25","204.25","202.25","266.1814880371094","441.25","456.25","252.0764923095703","460.25","475.25","\"CUDA\"","\"FOR ENGINEERS\"","\"An Introduction to High-Performance\"","\"Parallel Computing\"","\"DUANE STORTI\"","\"METE YURTOGLU\"","it","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":9,"total":275,"identifiers":["const","=","[]",",","{}",":","forof","()","function=>"]}},"paramCount":0,"sloc":{"logical":72,"physical":177},"errors":[],"lineEnd":220,"lineStart":44,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.03,"difficulty":2.708,"effort":243.545,"length":22,"time":13.53,"vocabulary":17,"volume":89.924,"operands":{"distinct":12,"total":13,"identifiers":["result","processor","post_process_generation","generated_text","task","images","image","size","expect","toBeCloseToNested","target","4"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","()",".","[]"]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":216,"lineStart":213,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.901,"halstead":{"bugs":0.183,"difficulty":1.269,"effort":6281.254,"length":74.333,"time":348.959,"vocabulary":18.778,"volume":550.132,"operands":{"distinct":17.556,"total":36.444},"operators":{"distinct":1.222,"total":37.889}},"paramCount":0,"sloc":{"logical":12.333,"physical":24.778}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":20.015,"halstead":{"bugs":0.179,"difficulty":3.48,"effort":4550.31,"length":83.5,"time":252.795,"vocabulary":28,"volume":536.099,"operands":{"distinct":23,"total":41},"operators":{"distinct":5,"total":42.5}},"paramCount":0,"sloc":{"logical":13.75,"physical":82.375}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/glpn/test_image_processing_glpn.js","testCases":2,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  22 |         const { pixel_values, original_sizes, reshaped_input_sizes } = await processor(image);\n  23 |         expect(pixel_values.dims).toEqual([1, 3, 480, 640]);\n> 24 |         expect(pixel_values.mean().item()).toBeCloseTo(0.5186172404123327, 6);\n     |                                                       ^ Magic Number\n  25 |\n  26 |         expect(original_sizes).toEqual([[480, 640]]);\n  27 |         expect(reshaped_input_sizes).toEqual([[480, 640]]);","start":{"line":24,"column":55,"index":944}},{"frame":"  22 |         const { pixel_values, original_sizes, reshaped_input_sizes } = await processor(image);\n  23 |         expect(pixel_values.dims).toEqual([1, 3, 480, 640]);\n> 24 |         expect(pixel_values.mean().item()).toBeCloseTo(0.5186172404123327, 6);\n     |                                                                           ^ Magic Number\n  25 |\n  26 |         expect(original_sizes).toEqual([[480, 640]]);\n  27 |         expect(reshaped_input_sizes).toEqual([[480, 640]]);","start":{"line":24,"column":75,"index":964}},{"frame":"  38 |\n  39 |         expect(pixel_values.dims).toEqual([1, 3, 384, 608]);\n> 40 |         expect(pixel_values.mean().item()).toBeCloseTo(0.38628831535989555, 6);\n     |                                                       ^ Magic Number\n  41 |\n  42 |         expect(original_sizes).toEqual([[408, 612]]);\n  43 |         expect(reshaped_input_sizes).toEqual([[384, 608]]);","start":{"line":40,"column":55,"index":1545}},{"frame":"  38 |\n  39 |         expect(pixel_values.dims).toEqual([1, 3, 384, 608]);\n> 40 |         expect(pixel_values.mean().item()).toBeCloseTo(0.38628831535989555, 6);\n     |                                                                            ^ Magic Number\n  41 |\n  42 |         expect(original_sizes).toEqual([[408, 612]]);\n  43 |         expect(reshaped_input_sizes).toEqual([[384, 608]]);","start":{"line":40,"column":76,"index":1566}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":12.766,"halstead":{"bugs":0.317,"difficulty":10.824,"effort":10283.678,"length":172,"time":571.315,"vocabulary":46,"volume":950.053,"operands":{"distinct":37,"total":89,"identifiers":["describe","\"GLPNFeatureExtractor\"","model_id","\"Xenova/glpn-kitti\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"multiple of size_divisor\"","image","load_cached_image","\"cats\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","480","640","mean","item","toBeCloseTo","0.5186172404123327","6","MAX_TEST_EXECUTION_TIME","\"non-multiple of size_divisor\"","\"tiger\"","384","608","0.38628831535989555","408","612"]},"operators":{"distinct":9,"total":83,"identifiers":["function=>","()","const","=","let",".","{}","[]",","]}},"paramCount":0,"sloc":{"logical":47,"physical":49}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":49,"lineStart":1,"maintainability":112.187,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"GLPNFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":43},"errors":[],"lineEnd":48,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":3.056,"effort":232.672,"length":20,"time":12.926,"vocabulary":14,"volume":76.147,"operands":{"distinct":9,"total":11,"identifiers":["model_id","\"Xenova/glpn-kitti\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"multiple of size_divisor\"","MAX_TEST_EXECUTION_TIME","\"non-multiple of size_divisor\""]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":39},"errors":[],"lineEnd":47,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":16,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.11,"difficulty":6.632,"effort":2181.994,"length":70,"time":121.222,"vocabulary":26,"volume":329.031,"operands":{"distinct":19,"total":36,"identifiers":["image","load_cached_image","\"cats\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","480","640","mean","item","toBeCloseTo","0.5186172404123327","6"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":9},"errors":[],"lineEnd":28,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.112,"difficulty":6,"effort":2019.089,"length":70,"time":112.172,"vocabulary":28,"volume":336.515,"operands":{"distinct":21,"total":36,"identifiers":["image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","384","608","mean","item","toBeCloseTo","0.38628831535989555","6","408","612"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":11},"errors":[],"lineEnd":44,"lineStart":34,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.128,"halstead":{"bugs":0.053,"difficulty":1.804,"effort":1713.946,"length":28.667,"time":95.219,"vocabulary":7.667,"volume":158.342,"operands":{"distinct":6.167,"total":14.833},"operators":{"distinct":1.5,"total":13.833}},"paramCount":0,"sloc":{"logical":7.833,"physical":8.167}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":24.853,"halstead":{"bugs":0.051,"difficulty":3.637,"effort":894.246,"length":34.2,"time":49.68,"vocabulary":15.8,"volume":153.869,"operands":{"distinct":11,"total":17.8},"operators":{"distinct":4.8,"total":16.4}},"paramCount":0,"sloc":{"logical":9.2,"physical":21}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/grounding_dino/test_modeling_grounding_dino.js","testCases":1,"smells":3,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  31 |         expect(logits.dims).toEqual([1, num_queries, d_model]);\n  32 |         expect(pred_boxes.dims).toEqual([1, num_queries, 4]);\n> 33 |         expect(logits.max().item()).toBeCloseTo(56.237613677978516, 2);\n     |                                                ^ Magic Number\n  34 |         expect(logits.min().item()).toEqual(-Infinity);\n  35 |         expect(pred_boxes.mean().item()).toEqual(0.2500016987323761);\n  36 |       },","start":{"line":33,"column":48,"index":1395}},{"frame":"  31 |         expect(logits.dims).toEqual([1, num_queries, d_model]);\n  32 |         expect(pred_boxes.dims).toEqual([1, num_queries, 4]);\n> 33 |         expect(logits.max().item()).toBeCloseTo(56.237613677978516, 2);\n     |                                                                    ^ Magic Number\n  34 |         expect(logits.min().item()).toEqual(-Infinity);\n  35 |         expect(pred_boxes.mean().item()).toEqual(0.2500016987323761);\n  36 |       },","start":{"line":33,"column":68,"index":1415}},{"frame":"  33 |         expect(logits.max().item()).toBeCloseTo(56.237613677978516, 2);\n  34 |         expect(logits.min().item()).toEqual(-Infinity);\n> 35 |         expect(pred_boxes.mean().item()).toEqual(0.2500016987323761);\n     |                                                 ^ Magic Number\n  36 |       },\n  37 |       MAX_TEST_EXECUTION_TIME,\n  38 |     );","start":{"line":35,"column":49,"index":1524}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":13.043,"halstead":{"bugs":0.348,"difficulty":12.323,"effort":12862.781,"length":176,"time":714.599,"vocabulary":61,"volume":1043.81,"operands":{"distinct":48,"total":91,"identifiers":["text","\"a cat.\"","dims","224","3","image","RawImage","Uint8ClampedArray","0","1","2","fill","255","describe","\"GroundingDinoForObjectDetection\"","model_id","\"hf-internal-testing/tiny-random-GroundingDinoForObjectDetection\"","model","processor","beforeAll","GroundingDinoForObjectDetection","from_pretrained","DEFAULT_MODEL_OPTIONS","GroundingDinoProcessor","MAX_MODEL_LOAD_TIME","it","\"forward\"","inputs","d_model","num_queries","config","logits","pred_boxes","expect","toEqual","4","max","item","toBeCloseTo","56.237613677978516","min","Infinity","mean","0.2500016987323761","MAX_TEST_EXECUTION_TIME","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":13,"total":85,"identifiers":["function=>","const","=","[]",",","new","()",".","*","... (spread)","let","{}","- (prefix)"]}},"paramCount":0,"sloc":{"logical":46,"physical":45}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":45,"lineStart":1,"maintainability":111.77,"methods":[{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.063,"difficulty":6.667,"effort":1269.321,"length":41,"time":70.518,"vocabulary":25,"volume":190.398,"operands":{"distinct":15,"total":20,"identifiers":["text","\"a cat.\"","dims","224","3","image","RawImage","Uint8ClampedArray","0","1","2","fill","255","describe","\"GroundingDinoForObjectDetection\""]},"operators":{"distinct":10,"total":21,"identifiers":["const","=","[]",",","new","()",".","*","... (spread)","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":40},"errors":[],"lineEnd":44,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.028,"difficulty":2.5,"effort":210,"length":21,"time":11.667,"vocabulary":16,"volume":84,"operands":{"distinct":11,"total":11,"identifiers":["model_id","\"hf-internal-testing/tiny-random-GroundingDinoForObjectDetection\"","model","processor","beforeAll","MAX_MODEL_LOAD_TIME","it","\"forward\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":32},"errors":[],"lineEnd":43,"lineStart":12,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","GroundingDinoForObjectDetection","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","processor","GroundingDinoProcessor"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":22,"lineStart":19,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.16,"difficulty":8.167,"effort":3920,"length":96,"time":217.778,"vocabulary":32,"volume":480,"operands":{"distinct":24,"total":49,"identifiers":["inputs","processor","image","text","d_model","num_queries","model","config","logits","pred_boxes","expect","dims","toEqual","1","4","max","item","toBeCloseTo","56.237613677978516","2","min","Infinity","mean","0.2500016987323761"]},"operators":{"distinct":8,"total":47,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":25,"physical":11},"errors":[],"lineEnd":36,"lineStart":26,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":42,"lineStart":40,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.174,"halstead":{"bugs":0.058,"difficulty":2.054,"effort":2143.797,"length":29.333,"time":119.1,"vocabulary":10.167,"volume":173.968,"operands":{"distinct":8,"total":15.167},"operators":{"distinct":2.167,"total":14.167}},"paramCount":0,"sloc":{"logical":7.667,"physical":7.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":31.356,"halstead":{"bugs":0.054,"difficulty":3.852,"effort":1099.084,"length":35,"time":61.06,"vocabulary":17,"volume":161.245,"operands":{"distinct":11.8,"total":18.2},"operators":{"distinct":5.2,"total":16.8}},"paramCount":0,"sloc":{"logical":9,"physical":18}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/grounding_dino/test_processor_grounding_dino.js","testCases":2,"smells":5,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  46 |         });\n  47 |         const { scores, boxes, labels } = results[0];\n> 48 |         expect(scores).toHaveLength(900);\n     |                                    ^ Magic Number\n  49 |         expect(boxes).toHaveLength(900);\n  50 |         expect(labels).toHaveLength(900);\n  51 |         expect(boxes[0]).toEqual([60, 90, 180, 270]);","start":{"line":48,"column":36,"index":1573}},{"frame":"  47 |         const { scores, boxes, labels } = results[0];\n  48 |         expect(scores).toHaveLength(900);\n> 49 |         expect(boxes).toHaveLength(900);\n     |                                   ^ Magic Number\n  50 |         expect(labels).toHaveLength(900);\n  51 |         expect(boxes[0]).toEqual([60, 90, 180, 270]);\n  52 |         expect(scores[0]).toBeCloseTo(0.622459352016449, 6);","start":{"line":49,"column":35,"index":1614}},{"frame":"  48 |         expect(scores).toHaveLength(900);\n  49 |         expect(boxes).toHaveLength(900);\n> 50 |         expect(labels).toHaveLength(900);\n     |                                    ^ Magic Number\n  51 |         expect(boxes[0]).toEqual([60, 90, 180, 270]);\n  52 |         expect(scores[0]).toBeCloseTo(0.622459352016449, 6);\n  53 |       },","start":{"line":50,"column":36,"index":1656}},{"frame":"  50 |         expect(labels).toHaveLength(900);\n  51 |         expect(boxes[0]).toEqual([60, 90, 180, 270]);\n> 52 |         expect(scores[0]).toBeCloseTo(0.622459352016449, 6);\n     |                                      ^ Magic Number\n  53 |       },\n  54 |       MAX_TEST_EXECUTION_TIME,\n  55 |     );","start":{"line":52,"column":38,"index":1754}},{"frame":"  50 |         expect(labels).toHaveLength(900);\n  51 |         expect(boxes[0]).toEqual([60, 90, 180, 270]);\n> 52 |         expect(scores[0]).toBeCloseTo(0.622459352016449, 6);\n     |                                                         ^ Magic Number\n  53 |       },\n  54 |       MAX_TEST_EXECUTION_TIME,\n  55 |     );","start":{"line":52,"column":57,"index":1773}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":11.538,"halstead":{"bugs":0.417,"difficulty":9.732,"effort":12176.756,"length":207,"time":676.486,"vocabulary":66,"volume":1251.19,"operands":{"distinct":56,"total":109,"identifiers":["model_id","\"hf-internal-testing/tiny-random-GroundingDinoForObjectDetection\"","describe","\"GroundingDinoProcessor\"","processor","images","beforeAll","AutoProcessor","from_pretrained","white_image","load_cached_image","\"white_image\"","MAX_PROCESSOR_LOAD_TIME","it","\"Single image & text\"","input_ids","pixel_values","\"a cat.\"","expect","dims","toEqual","1","5","3","800","MAX_TEST_EXECUTION_TIME","\"post_process_grounded_object_detection\"","outputs","logits","full","900","256","0.5","pred_boxes","4","inputs","results","post_process_grounded_object_detection","box_threshold","0.3","text_threshold","target_sizes","360","240","scores","boxes","labels","0","toHaveLength","60","90","180","270","toBeCloseTo","0.622459352016449","6"]},"operators":{"distinct":10,"total":98,"identifiers":["function=>","const","=","()","let","{}",".",":","[]",","]}},"paramCount":0,"sloc":{"logical":52,"physical":58}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":58,"lineStart":1,"maintainability":109.971,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.008,"difficulty":2,"effort":48,"length":8,"time":2.667,"vocabulary":8,"volume":24,"operands":{"distinct":4,"total":4,"identifiers":["model_id","\"hf-internal-testing/tiny-random-GroundingDinoForObjectDetection\"","describe","\"GroundingDinoProcessor\""]},"operators":{"distinct":4,"total":4,"identifiers":["const","=","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":52},"errors":[],"lineEnd":57,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":3.125,"effort":231.277,"length":20,"time":12.849,"vocabulary":13,"volume":74.009,"operands":{"distinct":8,"total":10,"identifiers":["processor","images","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"Single image & text\"","MAX_TEST_EXECUTION_TIME","\"post_process_grounded_object_detection\""]},"operators":{"distinct":5,"total":10,"identifiers":["let","=","{}","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":48},"errors":[],"lineEnd":56,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["processor","AutoProcessor","from_pretrained","model_id","images","white_image","load_cached_image","\"white_image\""]},"operators":{"distinct":5,"total":7,"identifiers":["=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":19,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.059,"difficulty":5.923,"effort":1049.564,"length":41,"time":58.309,"vocabulary":20,"volume":177.199,"operands":{"distinct":13,"total":22,"identifiers":["input_ids","pixel_values","processor","images","white_image","\"a cat.\"","expect","dims","toEqual","1","5","3","800"]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","{}","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":27,"lineStart":23,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.221,"difficulty":7.429,"effort":4917.746,"length":122,"time":273.208,"vocabulary":43,"volume":662.004,"operands":{"distinct":35,"total":65,"identifiers":["outputs","logits","full","1","900","256","0.5","pred_boxes","4","inputs","input_ids","5","results","processor","post_process_grounded_object_detection","box_threshold","0.3","text_threshold","target_sizes","360","240","scores","boxes","labels","0","expect","toHaveLength","toEqual","60","90","180","270","toBeCloseTo","0.622459352016449","6"]},"operators":{"distinct":8,"total":57,"identifiers":["const","=","{}",":","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":27,"physical":21},"errors":[],"lineEnd":53,"lineStart":33,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.923,"halstead":{"bugs":0.07,"difficulty":1.622,"effort":2029.459,"length":34.5,"time":112.748,"vocabulary":11,"volume":208.532,"operands":{"distinct":9.333,"total":18.167},"operators":{"distinct":1.667,"total":16.333}},"paramCount":0,"sloc":{"logical":8.667,"physical":9.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":16.407,"halstead":{"bugs":0.066,"difficulty":4.195,"effort":1277.071,"length":41.2,"time":70.948,"vocabulary":19.4,"volume":198.544,"operands":{"distinct":13.6,"total":21.8},"operators":{"distinct":5.8,"total":19.4}},"paramCount":0,"sloc":{"logical":10.2,"physical":26.4}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/idefics3/test_image_processing_idefics3.js","testCases":6,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  34 |         const { pixel_values, rows, cols } = await processor(images.image, { do_image_splitting: false, return_row_col_info: true });\n  35 |         expect(pixel_values.dims).toEqual([1, 1, 3, 364, 364]);\n> 36 |         expect(pixel_values.mean().item()).toBeCloseTo(-0.001035306602716446, 2);\n     |                                                                              ^ Magic Number\n  37 |         expect(rows).toEqual([[0]]);\n  38 |         expect(cols).toEqual([[0]]);\n  39 |       },","start":{"line":36,"column":78,"index":1554}},{"frame":"  46 |         const { pixel_values, pixel_attention_mask, rows, cols } = await processor([[images.white_image_1], [images.white_image_2], [images.white_image_1, images.white_image_2]], { do_image_splitting: false, return_row_col_info: true });\n  47 |         expect(pixel_values.dims).toEqual([3, 2, 3, 364, 364]);\n> 48 |         expect(pixel_values.mean().item()).toBeCloseTo(2 / 3, 2);\n     |                                                              ^ Magic Number\n  49 |         expect(pixel_attention_mask.dims).toEqual([3, 2, 364, 364]);\n  50 |         expect(pixel_attention_mask.to(\"float32\").mean().item()).toBeCloseTo(2 / 3, 3);\n  51 |         expect(rows).toEqual([[0], [0], [0, 0]]);","start":{"line":48,"column":62,"index":2108}},{"frame":"  48 |         expect(pixel_values.mean().item()).toBeCloseTo(2 / 3, 2);\n  49 |         expect(pixel_attention_mask.dims).toEqual([3, 2, 364, 364]);\n> 50 |         expect(pixel_attention_mask.to(\"float32\").mean().item()).toBeCloseTo(2 / 3, 3);\n     |                                                                                    ^ Magic Number\n  51 |         expect(rows).toEqual([[0], [0], [0, 0]]);\n  52 |         expect(cols).toEqual([[0], [0], [0, 0]]);\n  53 |","start":{"line":50,"column":84,"index":2265}},{"frame":"  53 |\n  54 |         // Test that the order of the pixel attention mask matches the python implementation\n> 55 |         expect(pixel_attention_mask.data.reduce((a, b, i) => a + i * b, 0)).toEqual(228217205216);\n     |                                                                                    ^ Magic Number\n  56 |       },\n  57 |       MAX_TEST_EXECUTION_TIME,\n  58 |     );","start":{"line":55,"column":84,"index":2547}}]}],"metrics":{"aggregate":{"cyclomatic":11,"cyclomaticDensity":8.088,"halstead":{"bugs":1.388,"difficulty":30.613,"effort":127470.754,"length":643,"time":7081.709,"vocabulary":89,"volume":4163.897,"operands":{"distinct":75,"total":328,"identifiers":["describe","\"Idefics3ImageProcessor\"","model_id","\"hf-internal-testing/tiny-random-Idefics3ForConditionalGeneration\"","images","processor","beforeAll","AutoImageProcessor","from_pretrained","image","load_cached_image","\"gradient_1280x640\"","white_image","\"white_image\"","image_1","resize","1600","1067","image_2","224","white_image_1","white_image_2","MAX_PROCESSOR_LOAD_TIME","it","\"no image splitting\"","pixel_values","rows","cols","do_image_splitting","false","return_row_col_info","true","expect","dims","toEqual","1","3","364","mean","item","toBeCloseTo","0.001035306602716446","2","0","MAX_TEST_EXECUTION_TIME","\"batched no image splitting\"","pixel_attention_mask","to","\"float32\"","data","reduce","a","b","i","228217205216","\"correct patching\"","9","flatten","tolist","toBeCloseToNested","0.7012196183204651","0.30104631185531616","0.09912905097007751","0.49929487705230713","0.5011996626853943","0.10103467106819153","0.2991456389427185","0.6993265151977539","0.0010353063698858023","4","\"unbatched, single image\"","13","\"unbatched, multiple images\"","30","\"batched, multiple images\""]},"operators":{"distinct":14,"total":315,"identifiers":["function=>","()","const","=","{}","let",".",":","[]",",","- (prefix)","/","+","*"]}},"paramCount":3,"sloc":{"logical":136,"physical":108}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":108,"lineStart":1,"maintainability":98.257,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Idefics3ImageProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":102},"errors":[],"lineEnd":107,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.063,"difficulty":5.143,"effort":977.991,"length":44,"time":54.333,"vocabulary":20,"volume":190.165,"operands":{"distinct":14,"total":24,"identifiers":["model_id","\"hf-internal-testing/tiny-random-Idefics3ForConditionalGeneration\"","images","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"no image splitting\"","MAX_TEST_EXECUTION_TIME","\"batched no image splitting\"","\"correct patching\"","\"unbatched, single image\"","\"unbatched, multiple images\"","\"batched, multiple images\""]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","{}","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":17,"physical":98},"errors":[],"lineEnd":106,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.103,"difficulty":4.444,"effort":1367.559,"length":69,"time":75.976,"vocabulary":22,"volume":307.701,"operands":{"distinct":18,"total":40,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id","image","load_cached_image","\"gradient_1280x640\"","white_image","\"white_image\"","images","image_1","resize","1600","1067","image_2","224","white_image_1","white_image_2"]},"operators":{"distinct":4,"total":29,"identifiers":["=","()",".","const"]}},"paramCount":0,"sloc":{"logical":16,"physical":14},"errors":[],"lineEnd":29,"lineStart":16,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.119,"difficulty":7.568,"effort":2699.587,"length":72,"time":149.977,"vocabulary":31,"volume":356.702,"operands":{"distinct":22,"total":37,"identifiers":["pixel_values","rows","cols","processor","images","image","do_image_splitting","false","return_row_col_info","true","expect","dims","toEqual","1","3","364","mean","item","toBeCloseTo","0.001035306602716446","2","0"]},"operators":{"distinct":9,"total":35,"identifiers":["const","=","{}","()",".",":","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":17,"physical":7},"errors":[],"lineEnd":39,"lineStart":33,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.284,"difficulty":13.333,"effort":11353.447,"length":160,"time":630.747,"vocabulary":40,"volume":851.508,"operands":{"distinct":30,"total":80,"identifiers":["pixel_values","pixel_attention_mask","rows","cols","processor","images","white_image_1","white_image_2","do_image_splitting","false","return_row_col_info","true","expect","dims","toEqual","3","2","364","mean","item","toBeCloseTo","to","\"float32\"","0","data","reduce","a","b","i","228217205216"]},"operators":{"distinct":10,"total":80,"identifiers":["const","=","{}","()","[]",",",".",":","/","function=>"]}},"paramCount":0,"sloc":{"logical":29,"physical":12},"errors":[],"lineEnd":56,"lineStart":45,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["a","i","b"]},"operators":{"distinct":2,"total":2,"identifiers":["+","*"]}},"paramCount":3,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":55,"lineStart":55,"name":"<anon method-6>","paramNames":["a","b","i"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.169,"difficulty":6.9,"effort":3501.05,"length":96,"time":194.503,"vocabulary":39,"volume":507.399,"operands":{"distinct":30,"total":46,"identifiers":["pixel_values","rows","cols","processor","images","image","return_row_col_info","true","expect","dims","toEqual","1","9","3","364","flatten","2","mean","tolist","toBeCloseToNested","0.7012196183204651","0.30104631185531616","0.09912905097007751","0.49929487705230713","0.5011996626853943","0.10103467106819153","0.2991456389427185","0.6993265151977539","0.0010353063698858023","4"]},"operators":{"distinct":9,"total":50,"identifiers":["const","=","{}","()",".",":","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":17,"physical":7},"errors":[],"lineEnd":68,"lineStart":62,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.083,"difficulty":7,"effort":1733.116,"length":54,"time":96.284,"vocabulary":24,"volume":247.588,"operands":{"distinct":16,"total":28,"identifiers":["pixel_values","rows","cols","processor","images","image_1","return_row_col_info","true","expect","dims","toEqual","1","13","3","364","4"]},"operators":{"distinct":8,"total":26,"identifiers":["const","=","{}","()",".",":","[]",","]}},"paramCount":0,"sloc":{"logical":12,"physical":7},"errors":[],"lineEnd":80,"lineStart":74,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.098,"difficulty":7.529,"effort":2202.827,"length":63,"time":122.379,"vocabulary":25,"volume":292.563,"operands":{"distinct":17,"total":32,"identifiers":["pixel_values","rows","cols","processor","images","image_1","image_2","return_row_col_info","true","expect","dims","toEqual","1","30","3","364","4"]},"operators":{"distinct":8,"total":31,"identifiers":["const","=","{}","()","[]",",",".",":"]}},"paramCount":0,"sloc":{"logical":12,"physical":7},"errors":[],"lineEnd":92,"lineStart":86,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.116,"difficulty":8.471,"effort":2950.215,"length":75,"time":163.901,"vocabulary":25,"volume":348.289,"operands":{"distinct":17,"total":36,"identifiers":["pixel_values","rows","cols","processor","images","image_1","image_2","return_row_col_info","true","expect","dims","toEqual","2","30","3","364","4"]},"operators":{"distinct":8,"total":39,"identifiers":["const","=","{}","()","[]",",",".",":"]}},"paramCount":0,"sloc":{"logical":12,"physical":6},"errors":[],"lineEnd":103,"lineStart":98,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.735,"halstead":{"bugs":0.126,"difficulty":2.783,"effort":11588.25,"length":58.455,"time":643.792,"vocabulary":8.091,"volume":378.536,"operands":{"distinct":6.818,"total":29.818},"operators":{"distinct":1.273,"total":28.636}},"paramCount":0.273,"sloc":{"logical":12.364,"physical":9.818}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":20.235,"halstead":{"bugs":0.104,"difficulty":6.239,"effort":2680.54,"length":64.2,"time":148.919,"vocabulary":23.5,"volume":312.152,"operands":{"distinct":16.9,"total":32.8},"operators":{"distinct":6.6,"total":31.4}},"paramCount":0.3,"sloc":{"logical":13.5,"physical":26.1}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/idefics3/test_modeling_idefics3.js","testCases":5,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  44 |         const { logits } = await model(inputs);\n  45 |         expect(logits.dims).toEqual([1, 3041, 128259]);\n> 46 |         expect(logits.mean().item()).toBeCloseTo(-0.0002692154666874558, 6);\n     |                                                                         ^ Magic Number\n  47 |       },\n  48 |       MAX_TEST_EXECUTION_TIME,\n  49 |     );","start":{"line":46,"column":73,"index":1848}},{"frame":"  58 |         const { logits } = await model(inputs);\n  59 |         expect(logits.dims).toEqual([1, 189, 128259]);\n> 60 |         expect(logits.mean().item()).toBeCloseTo(-0.00019743280427064747, 6);\n     |                                                                          ^ Magic Number\n  61 |       },\n  62 |       MAX_TEST_EXECUTION_TIME,\n  63 |     );","start":{"line":60,"column":74,"index":2252}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":8.333,"halstead":{"bugs":1.194,"difficulty":21.683,"effort":77673.005,"length":544,"time":4315.167,"vocabulary":96,"volume":3582.22,"operands":{"distinct":82,"total":254,"identifiers":["conversation","role","\"user\"","content","type","\"image\"","\"text\"","text","\"Can you describe this image?\"","white_image_dims","224","3","white_image","RawImage","Uint8ClampedArray","0","1","2","fill","255","black_image_dims","720","360","black_image","describe","\"Idefics3ForConditionalGeneration\"","model_id","\"hf-internal-testing/tiny-random-Idefics3ForConditionalGeneration\"","model","processor","beforeAll","Idefics3ForConditionalGeneration","from_pretrained","DEFAULT_MODEL_OPTIONS","Idefics3Processor","apply_chat_template","add_generation_prompt","true","MAX_MODEL_LOAD_TIME","it","\"forward w/ image splitting (default)\"","inputs","do_image_splitting","logits","expect","dims","toEqual","3041","128259","mean","item","toBeCloseTo","0.0002692154666874558","6","MAX_TEST_EXECUTION_TIME","\"forward w/o image splitting\"","false","189","0.00019743280427064747","\"batch_size=1 w/ image splitting\"","generate_ids","generate","max_new_tokens","10","repetition_penalty","3051","new_tokens","slice","null","input_ids","at","tolist","\"batch_size=1 w/o image splitting\"","199","\"batch_size=1 multi-image w/o image splitting\"","multi_image_conversation","\"Can you describe these images?\"","multi_image_text","374","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":14,"total":290,"identifiers":["function=>","const","=","[]","{}",":",",","new","()",".","*","... (spread)","let","- (prefix)"]}},"paramCount":0,"sloc":{"logical":120,"physical":143}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":143,"lineStart":1,"maintainability":100.109,"methods":[{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.163,"difficulty":10.154,"effort":4955.658,"length":93,"time":275.314,"vocabulary":38,"volume":488.057,"operands":{"distinct":26,"total":44,"identifiers":["conversation","role","\"user\"","content","type","\"image\"","\"text\"","text","\"Can you describe this image?\"","white_image_dims","224","3","white_image","RawImage","Uint8ClampedArray","0","1","2","fill","255","black_image_dims","720","360","black_image","describe","\"Idefics3ForConditionalGeneration\""]},"operators":{"distinct":12,"total":49,"identifiers":["const","=","[]","{}",":",",","new","()",".","*","... (spread)","function=>"]}},"paramCount":0,"sloc":{"logical":14,"physical":138},"errors":[],"lineEnd":142,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.063,"difficulty":3.75,"effort":708.261,"length":43,"time":39.348,"vocabulary":21,"volume":188.87,"operands":{"distinct":16,"total":24,"identifiers":["model_id","\"hf-internal-testing/tiny-random-Idefics3ForConditionalGeneration\"","model","processor","text","beforeAll","MAX_MODEL_LOAD_TIME","it","\"forward w/ image splitting (default)\"","MAX_TEST_EXECUTION_TIME","\"forward w/o image splitting\"","\"batch_size=1 w/ image splitting\"","\"batch_size=1 w/o image splitting\"","\"batch_size=1 multi-image w/o image splitting\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":19,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":18,"physical":123},"errors":[],"lineEnd":141,"lineStart":19,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.035,"difficulty":3.125,"effort":332.106,"length":26,"time":18.45,"vocabulary":17,"volume":106.274,"operands":{"distinct":12,"total":15,"identifiers":["model","Idefics3ForConditionalGeneration","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","processor","Idefics3Processor","text","apply_chat_template","conversation","add_generation_prompt","true"]},"operators":{"distinct":5,"total":11,"identifiers":["=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":7,"physical":8},"errors":[],"lineEnd":35,"lineStart":28,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.077,"difficulty":5.684,"effort":1311.649,"length":48,"time":72.869,"vocabulary":28,"volume":230.753,"operands":{"distinct":19,"total":24,"identifiers":["inputs","processor","text","white_image","do_image_splitting","true","logits","model","expect","dims","toEqual","1","3041","128259","mean","item","toBeCloseTo","0.0002692154666874558","6"]},"operators":{"distinct":9,"total":24,"identifiers":["const","=","()","{}",":",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":12,"physical":9},"errors":[],"lineEnd":47,"lineStart":39,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.077,"difficulty":5.684,"effort":1311.649,"length":48,"time":72.869,"vocabulary":28,"volume":230.753,"operands":{"distinct":19,"total":24,"identifiers":["inputs","processor","text","white_image","do_image_splitting","false","logits","model","expect","dims","toEqual","1","189","128259","mean","item","toBeCloseTo","0.00019743280427064747","6"]},"operators":{"distinct":9,"total":24,"identifiers":["const","=","()","{}",":",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":12,"physical":9},"errors":[],"lineEnd":61,"lineStart":53,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.136,"difficulty":7.083,"effort":2882.896,"length":80,"time":160.161,"vocabulary":34,"volume":406.997,"operands":{"distinct":24,"total":34,"identifiers":["inputs","processor","text","white_image","do_image_splitting","true","generate_ids","model","generate","max_new_tokens","10","repetition_penalty","2","expect","dims","toEqual","1","3051","new_tokens","slice","null","input_ids","at","tolist"]},"operators":{"distinct":10,"total":46,"identifiers":["const","=","()","{}",":",".","... (spread)","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":15,"physical":16},"errors":[],"lineEnd":82,"lineStart":67,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.136,"difficulty":7.083,"effort":2882.896,"length":80,"time":160.161,"vocabulary":34,"volume":406.997,"operands":{"distinct":24,"total":34,"identifiers":["inputs","processor","text","white_image","do_image_splitting","false","generate_ids","model","generate","max_new_tokens","10","repetition_penalty","2","expect","dims","toEqual","1","199","new_tokens","slice","null","input_ids","at","tolist"]},"operators":{"distinct":10,"total":46,"identifiers":["const","=","()","{}",":",".","... (spread)","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":15,"physical":16},"errors":[],"lineEnd":103,"lineStart":88,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.228,"difficulty":7.162,"effort":4893.293,"length":123,"time":271.85,"vocabulary":47,"volume":683.214,"operands":{"distinct":37,"total":53,"identifiers":["multi_image_conversation","role","\"user\"","content","type","\"image\"","\"text\"","text","\"Can you describe these images?\"","multi_image_text","processor","apply_chat_template","add_generation_prompt","true","inputs","white_image","black_image","do_image_splitting","false","generate_ids","model","generate","max_new_tokens","10","repetition_penalty","2","expect","dims","toEqual","1","374","new_tokens","slice","null","input_ids","at","tolist"]},"operators":{"distinct":10,"total":70,"identifiers":["const","=","[]","{}",":",",","()",".","... (spread)","- (prefix)"]}},"paramCount":0,"sloc":{"logical":25,"physical":26},"errors":[],"lineEnd":134,"lineStart":109,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":140,"lineStart":138,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.833,"halstead":{"bugs":0.119,"difficulty":2.168,"effort":7767.301,"length":54.4,"time":431.517,"vocabulary":9.6,"volume":358.222,"operands":{"distinct":8.2,"total":25.4},"operators":{"distinct":1.4,"total":29}},"paramCount":0,"sloc":{"logical":12,"physical":14.3}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":17.887,"halstead":{"bugs":0.102,"difficulty":5.525,"effort":2142.045,"length":60.333,"time":119.003,"vocabulary":27.667,"volume":304.879,"operands":{"distinct":19.889,"total":28.222},"operators":{"distinct":7.778,"total":32.111}},"paramCount":0,"sloc":{"logical":13.222,"physical":38.667}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/janus/test_processor_janus.js","testCases":1,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  33 |         expect(attention_mask.dims).toEqual([1, num_tokens]);\n  34 |         expect(images_seq_mask.dims).toEqual([1, num_tokens]);\n> 35 |         expect(images_seq_mask.to(\"float32\").mean().item()).toBeCloseTo(num_image_tokens / num_tokens, 6);\n     |                                                                                                       ^ Magic Number\n  36 |         expect(images_emb_mask.dims).toEqual([1, 1, num_image_tokens]);\n  37 |         expect(images_emb_mask.to(\"float32\").mean().item()).toBeCloseTo(1);\n  38 |         expect(pixel_values.dims).toEqual([1, 1, 3, image_size, image_size]);","start":{"line":35,"column":103,"index":1450}},{"frame":"  35 |         expect(images_seq_mask.to(\"float32\").mean().item()).toBeCloseTo(num_image_tokens / num_tokens, 6);\n  36 |         expect(images_emb_mask.dims).toEqual([1, 1, num_image_tokens]);\n> 37 |         expect(images_emb_mask.to(\"float32\").mean().item()).toBeCloseTo(1);\n     |                                                                        ^ Magic Number\n  38 |         expect(pixel_values.dims).toEqual([1, 1, 3, image_size, image_size]);\n  39 |         expect(pixel_values.mean().item()).toBeCloseTo(0.5999642610549927, 6);\n  40 |","start":{"line":37,"column":72,"index":1598}},{"frame":"  37 |         expect(images_emb_mask.to(\"float32\").mean().item()).toBeCloseTo(1);\n  38 |         expect(pixel_values.dims).toEqual([1, 1, 3, image_size, image_size]);\n> 39 |         expect(pixel_values.mean().item()).toBeCloseTo(0.5999642610549927, 6);\n     |                                                       ^ Magic Number\n  40 |\n  41 |         expect(original_sizes).toEqual([[206, 767]]);\n  42 |         expect(reshaped_input_sizes).toEqual([[103, image_size]]);","start":{"line":39,"column":55,"index":1735}},{"frame":"  37 |         expect(images_emb_mask.to(\"float32\").mean().item()).toBeCloseTo(1);\n  38 |         expect(pixel_values.dims).toEqual([1, 1, 3, image_size, image_size]);\n> 39 |         expect(pixel_values.mean().item()).toBeCloseTo(0.5999642610549927, 6);\n     |                                                                           ^ Magic Number\n  40 |\n  41 |         expect(original_sizes).toEqual([[206, 767]]);\n  42 |         expect(reshaped_input_sizes).toEqual([[103, image_size]]);","start":{"line":39,"column":75,"index":1755}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":8.772,"halstead":{"bugs":0.439,"difficulty":13.691,"effort":18046.009,"length":225,"time":1002.556,"vocabulary":58,"volume":1318.046,"operands":{"distinct":47,"total":117,"identifiers":["describe","\"VLChatProcessor\"","model_id","\"onnx-community/Janus-1.3B-ONNX\"","processor","beforeAll","AutoProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"Image and text\"","conversation","role","\"User\"","content","\"<image_placeholder>\nConvert the formula into latex code.\"","images","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/quadratic_formula.png\"","input_ids","attention_mask","images_seq_mask","images_emb_mask","pixel_values","original_sizes","reshaped_input_sizes","num_tokens","631","num_image_tokens","config","image_size","image_processor","expect","dims","toEqual","1","to","\"float32\"","mean","item","toBeCloseTo","6","3","0.5999642610549927","206","767","103","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":11,"total":108,"identifiers":["function=>","()","const","=","let",".","[]","{}",":",",","/"]}},"paramCount":0,"sloc":{"logical":57,"physical":48}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":48,"lineStart":1,"maintainability":103.561,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"VLChatProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":43},"errors":[],"lineEnd":47,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"onnx-community/Janus-1.3B-ONNX\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"Image and text\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":41},"errors":[],"lineEnd":46,"lineStart":6,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":13,"lineStart":11,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.174,"halstead":{"bugs":0.362,"difficulty":12.875,"effort":14000.107,"length":198,"time":777.784,"vocabulary":45,"volume":1087.387,"operands":{"distinct":36,"total":103,"identifiers":["conversation","role","\"User\"","content","\"<image_placeholder>\nConvert the formula into latex code.\"","images","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/quadratic_formula.png\"","input_ids","attention_mask","images_seq_mask","images_emb_mask","pixel_values","original_sizes","reshaped_input_sizes","processor","num_tokens","631","num_image_tokens","config","image_size","image_processor","expect","dims","toEqual","1","to","\"float32\"","mean","item","toBeCloseTo","6","3","0.5999642610549927","206","767","103"]},"operators":{"distinct":9,"total":95,"identifiers":["const","=","[]","{}",":","()",".",",","/"]}},"paramCount":0,"sloc":{"logical":46,"physical":27},"errors":[],"lineEnd":43,"lineStart":17,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.754,"halstead":{"bugs":0.088,"difficulty":2.738,"effort":3609.202,"length":45,"time":200.511,"vocabulary":11.6,"volume":263.609,"operands":{"distinct":9.4,"total":23.4},"operators":{"distinct":2.2,"total":21.6}},"paramCount":0,"sloc":{"logical":11.4,"physical":9.6}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":29.71,"halstead":{"bugs":0.098,"difficulty":4.469,"effort":3544.088,"length":56,"time":196.894,"vocabulary":17.25,"volume":292.636,"operands":{"distinct":12.5,"total":29.25},"operators":{"distinct":4.75,"total":26.75}},"paramCount":0,"sloc":{"logical":14,"physical":28.5}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/jina_clip/test_image_processing_jina_clip.js","testCases":1,"smells":1,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  23 |\n  24 |         expect(pixel_values.dims).toEqual([1, 3, 512, 512]);\n> 25 |         expect(pixel_values.mean().item()).toBeCloseTo(-0.06637834757566452, 3);\n     |                                                                             ^ Magic Number\n  26 |\n  27 |         expect(original_sizes).toEqual([[408, 612]]);\n  28 |         expect(reshaped_input_sizes).toEqual([[512, 512]]);","start":{"line":25,"column":77,"index":933}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.174,"difficulty":8.333,"effort":4346.241,"length":98,"time":241.458,"vocabulary":40,"volume":521.549,"operands":{"distinct":30,"total":50,"identifiers":["describe","\"JinaCLIPImageProcessor\"","model_id","\"jinaai/jina-clip-v2\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","512","mean","item","toBeCloseTo","0.06637834757566452","408","612","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":10,"total":48,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":28,"physical":34}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":34,"lineStart":1,"maintainability":119.946,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"JinaCLIPImageProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":28},"errors":[],"lineEnd":33,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"jinaai/jina-clip-v2\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":32,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":16,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.113,"difficulty":7.579,"effort":2558.63,"length":71,"time":142.146,"vocabulary":27,"volume":337.597,"operands":{"distinct":19,"total":36,"identifiers":["image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","512","mean","item","toBeCloseTo","0.06637834757566452","408","612"]},"operators":{"distinct":8,"total":35,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":29,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.035,"difficulty":1.667,"effort":869.248,"length":19.6,"time":48.292,"vocabulary":8,"volume":104.31,"operands":{"distinct":6,"total":10},"operators":{"distinct":2,"total":9.6}},"paramCount":0,"sloc":{"logical":5.6,"physical":6.8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.637,"halstead":{"bugs":0.035,"difficulty":3.145,"effort":683.718,"length":24.25,"time":37.984,"vocabulary":12.75,"volume":105.189,"operands":{"distinct":8.25,"total":12.5},"operators":{"distinct":4.5,"total":11.75}},"paramCount":0,"sloc":{"logical":6.75,"physical":16.25}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/jina_clip/test_processor_jina_clip.js","testCases":1,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  37 |         expect(attention_mask.dims).toEqual([sentences.length, 19]);\n  38 |         expect(pixel_values.dims).toEqual([images.length, 3, 512, 512]);\n> 39 |         expect(pixel_values.mean().item()).toBeCloseTo(0.7857685685157776, 6);\n     |                                                       ^ Magic Number\n  40 |       },\n  41 |       MAX_TEST_EXECUTION_TIME,\n  42 |     );","start":{"line":39,"column":55,"index":1629}},{"frame":"  37 |         expect(attention_mask.dims).toEqual([sentences.length, 19]);\n  38 |         expect(pixel_values.dims).toEqual([images.length, 3, 512, 512]);\n> 39 |         expect(pixel_values.mean().item()).toBeCloseTo(0.7857685685157776, 6);\n     |                                                                           ^ Magic Number\n  40 |       },\n  41 |       MAX_TEST_EXECUTION_TIME,\n  42 |     );","start":{"line":39,"column":75,"index":1649}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":15.625,"halstead":{"bugs":0.267,"difficulty":8.182,"effort":6544.877,"length":139,"time":363.604,"vocabulary":54,"volume":799.929,"operands":{"distinct":44,"total":72,"identifiers":["describe","\"JinaCLIPProcessor\"","model_id","\"jinaai/jina-clip-v2\"","processor","beforeAll","AutoProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"Image and text\"","images","load_cached_image","\"white_image\"","\"blue_image\"","sentences","\"غروب جميل على الشاطئ\"","\"海滩上美丽的日落\"","\"Un beau coucher de soleil sur la plage\"","\"Ein wunderschöner Sonnenuntergang am Strand\"","\"Ένα όμορφο ηλιοβασίλεμα πάνω από την παραλία\"","\"समुद्र तट पर एक खूबसूरत सूर्यास्त\"","\"Un bellissimo tramonto sulla spiaggia\"","\"浜辺に沈む美しい夕日\"","\"해변 위로 아름다운 일몰\"","input_ids","attention_mask","pixel_values","padding","true","truncation","expect","dims","toEqual","length","19","3","512","mean","item","toBeCloseTo","0.7857685685157776","6","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":10,"total":67,"identifiers":["function=>","()","const","=","let",".","[]",",","{}",":"]}},"paramCount":0,"sloc":{"logical":32,"physical":45}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":2,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":45,"lineStart":1,"maintainability":116.383,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"JinaCLIPProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":39},"errors":[],"lineEnd":44,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"jinaai/jina-clip-v2\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"Image and text\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":37},"errors":[],"lineEnd":43,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":14,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.2,"difficulty":7.03,"effort":4218.504,"length":112,"time":234.361,"vocabulary":41,"volume":600.046,"operands":{"distinct":33,"total":58,"identifiers":["images","load_cached_image","\"white_image\"","\"blue_image\"","sentences","\"غروب جميل على الشاطئ\"","\"海滩上美丽的日落\"","\"Un beau coucher de soleil sur la plage\"","\"Ein wunderschöner Sonnenuntergang am Strand\"","\"Ένα όμορφο ηλιοβασίλεμα πάνω από την παραλία\"","\"समुद्र तट पर एक खूबसूरत सूर्यास्त\"","\"Un bellissimo tramonto sulla spiaggia\"","\"浜辺に沈む美しい夕日\"","\"해변 위로 아름다운 일몰\"","input_ids","attention_mask","pixel_values","processor","padding","true","truncation","expect","dims","toEqual","length","19","3","512","mean","item","toBeCloseTo","0.7857685685157776","6"]},"operators":{"distinct":8,"total":54,"identifiers":["const","=","[]",",","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":21,"physical":23},"errors":[],"lineEnd":40,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.053,"difficulty":1.636,"effort":1308.975,"length":27.8,"time":72.721,"vocabulary":10.8,"volume":159.986,"operands":{"distinct":8.8,"total":14.4},"operators":{"distinct":2,"total":13.4}},"paramCount":0,"sloc":{"logical":6.4,"physical":9}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.357,"halstead":{"bugs":0.057,"difficulty":3.008,"effort":1098.687,"length":34.5,"time":61.038,"vocabulary":16.25,"volume":170.801,"operands":{"distinct":11.75,"total":18},"operators":{"distinct":4.5,"total":16.5}},"paramCount":0,"sloc":{"logical":7.75,"physical":25.5}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/llama/test_modeling_llama.js","testCases":2,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  61 |     const dtypes = [\"fp32\", \"fp16\", \"q4\", \"q4f16\"];\n  62 |\n> 63 |     for (const dtype of dtypes) {\n     |    ^ Conditional Test Logic\n  64 |       it(\n  65 |         `dtype=${dtype}`,\n  66 |         async () => {","start":{"line":63,"column":4,"index":2060}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":16.393,"halstead":{"bugs":0.461,"difficulty":16.833,"effort":23266.2,"length":238,"time":1292.567,"vocabulary":56,"volume":1382.15,"operands":{"distinct":42,"total":101,"identifiers":["describe","\"LlamaForCausalLM\"","model_id","\"hf-internal-testing/tiny-random-LlamaForCausalLM\"","model","tokenizer","beforeAll","LlamaForCausalLM","from_pretrained","DEFAULT_MODEL_OPTIONS","LlamaTokenizer","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","inputs","\"hello\"","outputs","generate","max_length","10","expect","tolist","toEqual","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","\"hello world\"","padding","true","afterAll","dispose","MAX_MODEL_DISPOSE_TIME","\"LlamaForCausalLM (onnxruntime-genai)\"","\"onnx-community/tiny-random-LlamaForCausalLM-ONNX\"","dtypes","\"fp32\"","\"fp16\"","\"q4\"","\"q4f16\"","dtype","dtype=","5","MAX_TEST_TIME"]},"operators":{"distinct":14,"total":137,"identifiers":["function=>","()","const","=","let",".","{}","... (spread)",":","[]",",","forof","``","${}"]}},"paramCount":0,"sloc":{"logical":61,"physical":86}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":86,"lineStart":1,"maintainability":115.193,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"LlamaForCausalLM\"","\"LlamaForCausalLM (onnxruntime-genai)\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":81},"errors":[],"lineEnd":85,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.035,"difficulty":2.917,"effort":309.966,"length":26,"time":17.22,"vocabulary":17,"volume":106.274,"operands":{"distinct":12,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-LlamaForCausalLM\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":44},"errors":[],"lineEnd":49,"lineStart":6,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","LlamaForCausalLM","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","LlamaTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":15,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.056,"difficulty":5.318,"effort":896.407,"length":39,"time":49.8,"vocabulary":20,"volume":168.555,"operands":{"distinct":11,"total":13,"identifiers":["inputs","tokenizer","\"hello\"","outputs","model","generate","max_length","10","expect","tolist","toEqual"]},"operators":{"distinct":9,"total":26,"identifiers":["const","=","()",".","{}","... (spread)",":","[]",","]}},"paramCount":0,"sloc":{"logical":8,"physical":8},"errors":[],"lineEnd":26,"lineStart":19,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.086,"difficulty":5.143,"effort":1326.05,"length":57,"time":73.669,"vocabulary":23,"volume":257.843,"operands":{"distinct":14,"total":16,"identifiers":["inputs","tokenizer","\"hello\"","\"hello world\"","padding","true","outputs","model","generate","max_length","10","expect","tolist","toEqual"]},"operators":{"distinct":9,"total":41,"identifiers":["const","=","()","[]",",","{}",":",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":9,"physical":11},"errors":[],"lineEnd":42,"lineStart":32,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":48,"lineStart":46,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.054,"difficulty":5.667,"effort":921.031,"length":35,"time":51.168,"vocabulary":25,"volume":162.535,"operands":{"distinct":15,"total":17,"identifiers":["model_id","\"onnx-community/tiny-random-LlamaForCausalLM-ONNX\"","tokenizer","inputs","beforeAll","MAX_MODEL_LOAD_TIME","dtypes","\"fp32\"","\"fp16\"","\"q4\"","\"q4f16\"","dtype","it","dtype=","MAX_TEST_TIME"]},"operators":{"distinct":10,"total":18,"identifiers":["const","=","let","()","function=>","[]",",","forof","``","${}"]}},"paramCount":0,"sloc":{"logical":9,"physical":34},"errors":[],"lineEnd":84,"lineStart":51,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.013,"difficulty":1.75,"effort":66.568,"length":12,"time":3.698,"vocabulary":9,"volume":38.039,"operands":{"distinct":6,"total":7,"identifiers":["tokenizer","LlamaTokenizer","from_pretrained","model_id","inputs","\"hello\""]},"operators":{"distinct":3,"total":5,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":59,"lineStart":56,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.066,"difficulty":5.7,"effort":1123.774,"length":43,"time":62.432,"vocabulary":24,"volume":197.153,"operands":{"distinct":15,"total":19,"identifiers":["model","LlamaForCausalLM","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","dtype","outputs","generate","inputs","max_length","5","expect","tolist","toEqual","dispose"]},"operators":{"distinct":9,"total":24,"identifiers":["const","=","()",".","{}","... (spread)",":","[]",","]}},"paramCount":0,"sloc":{"logical":10,"physical":15},"errors":[],"lineEnd":80,"lineStart":66,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.639,"halstead":{"bugs":0.046,"difficulty":1.683,"effort":2326.62,"length":23.8,"time":129.257,"vocabulary":5.6,"volume":138.215,"operands":{"distinct":4.2,"total":10.1},"operators":{"distinct":1.4,"total":13.7}},"paramCount":0,"sloc":{"logical":6.1,"physical":8.6}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":25.424,"halstead":{"bugs":0.037,"difficulty":3.306,"effort":529.407,"length":26.333,"time":29.412,"vocabulary":15,"volume":111.2,"operands":{"distinct":9.444,"total":11.222},"operators":{"distinct":5.556,"total":15.111}},"paramCount":0,"sloc":{"logical":6.667,"physical":22.667}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/llama/test_tokenization_llama.js","testCases":0,"smells":5,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  1269 |     TESTS[\"Xenova/llama2-tokenizer\"] = TESTS[\"Xenova/llama-tokenizer_new\"];\n  1270 |\n> 1271 |     for (const [tokenizerName, test_data] of Object.entries(TESTS)) {\n       |    ^ Conditional Test Logic\n  1272 |       it(\n  1273 |         tokenizerName,\n  1274 |         async () => {","start":{"line":1271,"column":4,"index":138003}},{"frame":"  1273 |         tokenizerName,\n  1274 |         async () => {\n> 1275 |           for (const { data, reversible, legacy, override } of test_data) {\n       |          ^ Conditional Test Logic\n  1276 |             const tokenizer = await LlamaTokenizer.from_pretrained(tokenizerName, { legacy });\n  1277 |             if (override) {\n  1278 |               override(tokenizer);","start":{"line":1275,"column":10,"index":138134}},{"frame":"  1275 |           for (const { data, reversible, legacy, override } of test_data) {\n  1276 |             const tokenizer = await LlamaTokenizer.from_pretrained(tokenizerName, { legacy });\n> 1277 |             if (override) {\n       |            ^ Conditional Test Logic\n  1278 |               override(tokenizer);\n  1279 |             }\n  1280 |             for (const [text, expected] of Object.entries(data)) {","start":{"line":1277,"column":12,"index":138307}},{"frame":"  1278 |               override(tokenizer);\n  1279 |             }\n> 1280 |             for (const [text, expected] of Object.entries(data)) {\n       |            ^ Conditional Test Logic\n  1281 |               const token_ids = tokenizer.encode(text, { add_special_tokens: false });\n  1282 |               expect(token_ids).toEqual(expected);\n  1283 |","start":{"line":1280,"column":12,"index":138384}},{"frame":"  1283 |\n  1284 |               // If reversible, test that decoding produces the original text\n> 1285 |               if (reversible) {\n       |              ^ Conditional Test Logic\n  1286 |                 const decoded = tokenizer.decode(token_ids);\n  1287 |                 expect(decoded).toEqual(text);\n  1288 |               }","start":{"line":1285,"column":14,"index":138670}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":0.672,"halstead":{"bugs":94.999,"difficulty":27.483,"effort":7832493.543,"length":25186,"time":435138.53,"vocabulary":2549,"volume":284997.615,"operands":{"distinct":2538,"total":12682,"identifiers":["TOKENIZER_CLASS","LlamaTokenizer","TEST_CONFIG","\"Xenova/llama-tokenizer\"","SIMPLE","text","BASE_TEST_STRINGS","tokens","\"▁How\"","\"▁are\"","\"▁you\"","\"▁doing\"","\"?\"","ids","1","1128","526","366","2599","29973","decoded","\"<s> How are you doing?\"","SIMPLE_WITH_PUNCTUATION","\"▁You\"","\"▁should\"","\"'\"","\"ve\"","\"▁done\"","\"▁this\"","887","881","29915","345","2309","445","\"<s> You should've done this\"","NUMBERS","\"▁\"","\"0\"","\"1\"","\"2\"","\"3\"","\"4\"","\"5\"","\"6\"","\"7\"","\"8\"","\"9\"","29871","29900","29896","29906","29941","29946","29945","29953","29955","29947","29929","\"<s> 0123456789 0 1 2 3 4 5 6 7 8 9 10 100 1000\"","TEXT_WITH_NUMBERS","\"▁The\"","\"▁company\"","\"▁was\"","\"▁founded\"","\"▁in\"","\".\"","450","5001","471","11091","297","29889","\"<s> The company was founded in 2016.\"","PUNCTUATION","\"▁A\"","\"<0x0A>\"","\"ll\"","\"▁!!\"","\"to\"","\"?'\"","\"d\"","\"''\"","\"▁of\"","\",\"","\"▁can\"","\"t\"","319","13","645","21443","517","17901","29881","4907","310","29892","508","29873","\"<s> A\n'll !!to?'d''d of, can't.\"","PYTHON_CODE","\"▁def\"","\"▁main\"","\"():\"","\"<0x09>\"","\"pass\"","822","1667","7295","12","3364","\"<s> def main():\n\tpass\"","JAVASCRIPT_CODE","\"▁let\"","\"▁a\"","\"▁=\"","\"▁obj\"","\"toString\"","\"();\"","1235","263","353","5446","7711","890","\"<s> let a = obj.toString();\ntoString();\"","NEWLINES","LLAMA_TEST_STRINGS","\"▁ax\"","\"####\"","\"bo\"","\"o\"","4853","4136","833","29877","\"<s> ax\n####\nboo\"","BASIC","\"▁UN\"","\"w\"","\"ant\"","\"éd\"","\"running\"","8291","29893","424","2487","21094","\"<s> UNwantéd,running\"","CONTROL_TOKENS","\"<0x00>\"","\"�\"","3","30140","\"<s> 1\u00002�3\"","HELLO_WORLD_TITLECASE","\"▁Hello\"","\"▁World\"","15043","2787","\"<s> Hello World\"","HELLO_WORLD_LOWERCASE","\"▁hello\"","\"▁world\"","22172","3186","\"<s> hello world\"","CHINESE_ONLY","\"生\"","\"活\"","\"的\"","\"真\"","\"<0xE8>\"","\"<0xB0>\"","\"<0x9B>\"","\"是\"","30486","31704","30210","30848","235","179","158","30392","\"<s> 生活的真谛是\"","LEADING_SPACE","\"▁▁▁\"","\"▁leading\"","\"▁space\"","1678","8236","2913","\"<s>    leading space\"","TRAILING_SPACE","\"▁trailing\"","25053","\"<s> trailing space   \"","DOUBLE_SPACE","\"▁Hi\"","6324","\"<s> Hi  Hello\"","CURRENCY","\"▁test\"","\"▁$\"","\"▁R\"","\"▁#\"","\"▁€\"","\"▁£\"","\"¥\"","\"<0xE2>\"","\"<0x82>\"","\"<0xA3>\"","\"₹\"","\"<0xB1>\"","1243","395","390","396","25540","15151","30563","229","133","166","30620","180","\"<s> test $1 R2 #3 €4 £5 ¥6 ₣7 ₹8 ₱9 test\"","CURRENCY_WITH_DECIMALS","\"▁I\"","\"▁bought\"","\"▁an\"","\"▁apple\"","\"▁for\"","\"▁at\"","\"▁the\"","\"▁store\"","306","18093","385","26163","363","472","278","3787","\"<s> I bought an apple for $1.00 at the store.\"","ELLIPSIS","\"…\"","\"▁▁\"","30098","259","\"<s> you…  \"","TEXT_WITH_ESCAPE_CHARACTERS","\"  \"","8655","\"<s> you…  \"","TEXT_WITH_ESCAPE_CHARACTERS_2","\"you\"","6293","\"<s> you…  you…  \"","TILDE_NORMALIZATION","\"▁weird\"","\"～\"","\"▁edge\"","\"▁case\"","13543","30739","7636","1206","\"<s> weird ～ edge ～ case\"","SPIECE_UNDERSCORE","\"▁This\"","\"▁is\"","\"▁.\"","910","338","869","\"<s>  This  is  a  test  .\"","POPULAR_EMOJIS","\"<0xF0>\"","\"<0x9F>\"","\"<0x98>\"","\"<0x91>\"","\"<0x8D>\"","\"<0xA4>\"","\"<0xAD>\"","\"<0x8E>\"","\"<0x89>\"","\"<0x99>\"","\"<0x8F>\"","\"<0x8A>\"","\"<0x94>\"","\"<0xA5>\"","\"<0x81>\"","\"<0x85>\"","\"<0x97>\"","\"<0x86>\"","\"<0x9D>\"","\"️\"","\"<0x92>\"","\"<0x9C>\"","\"<0x9A>\"","\"<0x96>\"","\"<0x8C>\"","\"<0xB3>\"","\"<0xAA>\"","\"<0xA8>\"","\"<0x80>\"","\"<0xAF>\"","\"<0x88>\"","\"<0x87>\"","\"<0x8B>\"","\"✅\"","\"<0x9E>\"","\"<0xB8>\"","243","162","155","148","144","167","176","145","140","156","146","141","151","168","132","136","154","137","160","30598","149","159","157","153","143","182","173","171","131","178","139","138","142","31681","161","187","\"<s> 😂 👍 🤣 😍 😭 🎉 🙏 😊 🔥 😁 😅 🤗 😆 👏 ❤️ 💜 💚 💗 💙 🖤 😎 👌 🥳 💪 ✨ 👉 👀 💯 🎈 🙈 🙌 💀 👇 👋 ✅ 🎁 🌞 🌸 💰\"","MULTIBYTE_EMOJIS","\"<0xBB>\"","\"<0x95>\"","\"<0xB5>\"","\"‍\"","\"♂\"","\"<0xA7>\"","\"<0xBE>\"","\"<0xA9>\"","\"<0xA6>\"","\"<0xB4>\"","\"<0xF3>\"","\"<0xA0>\"","\"<0xA2>\"","\"<0xAE>\"","\"<0xBF>\"","\"<0xBC>\"","190","152","184","30722","31135","170","193","172","169","183","246","163","165","177","194","191","\"<s> ✨ 🤗 👁️ 👱🏻 🕵‍♂️ 🧙🏻‍♂ 👨🏻‍🌾 🧑‍🤝‍🧑 👩‍❤‍💋‍👨 👩‍👩‍👧‍👦 🧑🏻‍🤝‍🧑🏻 🏴󠁧󠁢󠁥󠁮󠁧󠁿 👨🏻‍❤️‍💋‍👨🏼\"","BPE_SCORES_PRIORITY_1","\"▁gra\"","\"bb\"","\"ed\"","2646","1327","287","\"<s> grabbed\"","BPE_SCORES_PRIORITY_2","\"<s>  grabbed\"","BPE_SCORES_PRIORITY_3","\"▁▁▁▁▁▁▁▁▁▁▁\"","9651","\"<s>            grabbed\"","NEWLINE","\"<s> \n\"","NEWLINE_WITH_LEADING_SPACE","\"<s>  \n\"","TABS","\"tabs\"","\"out\"","\"▁here\"","21175","449","1244","\"<s> \ttabs\t\t\t\tout here\"","NEWLINE_AND_TAB","\"<s> \n\t\n\"","CHINESE_LETTER","\"镇\"","30411","\"<s> 镇\"","EMOJIS_1","\"<s> 🦙\"","EMOJIS_2","\"<0xEA>\"","237","\"<s> 🦙Ꙋ\"","EMOJIS_3","\"<s> Ꙋ🦙\"","PARAGRAPH","\"▁ll\"","\"ama\"","\"▁(/\"","\"ˈ\"","\"l\"","\"ɑ\"","\"ː\"","\"m\"","\"ə\"","\"/\"","\";\"","\"Span\"","\"ish\"","\"▁pron\"","\"unci\"","\"ation\"","\":\"","\"▁[\"","\"ʎ\"","\"])\"","\"▁(\"","\"L\"","\"▁gl\"","\")\"","\"▁domestic\"","\"ated\"","\"▁South\"","\"▁American\"","\"▁cam\"","\"el\"","\"id\"","\"▁widely\"","\"▁used\"","\"▁as\"","\"▁meat\"","\"▁and\"","\"▁pack\"","\"▁animal\"","\"▁by\"","\"▁And\"","\"e\"","\"an\"","\"▁cult\"","\"ures\"","\"▁since\"","\"▁Pre\"","\"-\"","\"Col\"","\"umb\"","\"ian\"","\"▁era\"","\"▁L\"","\"lam\"","\"as\"","\"▁social\"","\"▁animals\"","\"▁live\"","\"▁with\"","\"▁others\"","\"▁her\"","\"▁Their\"","\"▁w\"","\"ool\"","\"▁soft\"","\"▁contains\"","\"▁only\"","\"▁small\"","\"▁amount\"","\"▁lan\"","\"olin\"","\".[\"","\"]\"","\"▁learn\"","\"▁simple\"","\"▁tasks\"","\"▁after\"","\"▁few\"","\"▁repet\"","\"itions\"","\"▁When\"","\"▁using\"","\"▁they\"","\"▁carry\"","\"▁about\"","\"▁to\"","\"%\"","\"▁their\"","\"▁body\"","\"▁weight\"","\"▁km\"","\"–\"","\"▁miles\"","\").\"","\"[\"","\"▁name\"","\"in\"","\"▁past\"","\"▁also\"","\"▁sp\"","\"elled\"","\"▁\"\"","\"\"\"","\"▁or\"","\"gl\"","\"\")\"","\"▁adopted\"","\"▁European\"","\"▁sett\"","\"lers\"","\"▁from\"","\"▁native\"","\"▁Peru\"","\"vi\"","\"ans\"","\"▁ancest\"","\"ors\"","\"▁llam\"","\"▁thought\"","\"▁have\"","\"▁origin\"","\"▁Great\"","\"▁Pla\"","\"ins\"","\"▁North\"","\"▁America\"","\"▁million\"","\"▁years\"","\"▁ago\"","\"▁subsequently\"","\"▁migr\"","\"▁three\"","\"▁during\"","\"▁Inter\"","\"change\"","\"▁By\"","\"▁end\"","\"▁last\"","\"▁ice\"","\"▁age\"","\"),\"","\"ids\"","\"▁were\"","\"▁ext\"","\"inct\"","\"▁As\"","\"▁there\"","\"▁over\"","\"▁seven\"","\"▁al\"","\"p\"","\"ac\"","\"▁desc\"","\"ended\"","\"▁pro\"","\"gen\"","\"itors\"","\"▁imported\"","\"▁late\"","\"th\"","\"▁century\"","\"▁United\"","\"▁States\"","\"▁Canada\"","\"▁In\"","\"ym\"","\"ara\"","\"▁myth\"","\"ology\"","\"▁important\"","\"▁be\"","\"ings\"","\"▁Heaven\"","\"ly\"","\"▁said\"","\"▁drink\"","\"▁water\"","\"▁ocean\"","\"▁ur\"","\"ates\"","\"▁it\"","\"▁ra\"","\"▁According\"","\"▁es\"","\"chat\"","\"▁will\"","\"▁return\"","\"▁spr\"","\"▁l\"","\"ago\"","\"ons\"","\"▁where\"","\"▁come\"","\"▁time\"","11148","3304","20374","30176","29880","30426","30215","29885","30184","29914","29936","15495","728","11504","11173","362","29901","518","31743","2314","313","29931","3144","29897","21849","630","4275","3082","3949","295","333","17644","1304","408","27654","322","4870","13019","491","1126","29872","273","4185","1973","1951","4721","29899","1625","3774","713","3152","365","5288","294","5264","15006","5735","411","4045","902","11275","281","1507","4964","3743","871","2319","5253","10906","22878","7226","29962","5110","2560","9595","1156","2846","21159","2187","1932","773","896","8677","1048","304","29995","1009","3573","7688","2383","29994","7800","467","29961","1024","262","4940","884","805","14356","376","29908","470","3820","1159","16356","7824","3604","9306","515","7531","25493","1403","550","19525","943","11829","2714","505","3978","7027","13494","1144","4644","6813","7284","2440","8020","17602","9725","2211","2645","4124","3167","2648","1095","1833","14890","5046","511","4841","892","1294","5562","1094","727","975","9881","394","29886","562","5153","2760","410","1885","17259","19673","5683","386","6462","3303","3900","7400","512","962","2518","22082","3002","4100","367","886","22977","368","1497","13748","4094","23474","5065","1078","372","1153","7579","831","13496","674","736","7689","301","4425","787","988","2041","931","\"<s> The llama (/ˈlɑːmə/; 🦙Spanish pronunciation: [ˈʎama]) (Lama glama) is a domesticated South American camelid, widely used as a meat and pack animal by Andean cultures since the Pre-Columbian era. Llamas are social animals and live with others as a herd. Their wool is soft and contains only a small amount of lanolin.[2] Llamas can learn simple tasks after a few repetitions. When using a pack, they can carry about 25 to 30% of their body weight for 8 to 13 km (5–8 miles).[3] The name llama (in the past also spelled \"lama\" or \"glama\") was adopted by European settlers from native Peruvians.[4] The ancestors of llamas are thought to have originated from the Great Plains of North America about 40 million years ago, and subsequently migrated to South America about three million years ago during the Great American Interchange. By the end of the last ice age (10,000–12,000 years ago), camelids were extinct in North America.[3] As of 2007, there were over seven million llamas and alpacas in South America and over 158,000 llamas and 100,000Ꙋ🦙 alpacas, descended from progenitors imported late in the 20th century, in the United States and Canada.[5] In Aymara mythology, llamas are important beings. The Heavenly Llama is said to drink water from the ocean and urinates as it rains.[6] According to Aymara eschatology, llamas will return to the water springs and lagoons where they come from at the end of time.[6]\"","\"Xenova/llama3-tokenizer\"","\"How\"","\"Ġare\"","\"Ġyou\"","\"Ġdoing\"","4438","527","499","3815","30","\"How are you doing?\"","\"You\"","\"Ġshould\"","\"'ve\"","\"Ġdone\"","\"Ġthis\"","2675","1288","3077","2884","420","\"You should've done this\"","\"012\"","\"345\"","\"678\"","\"Ġ\"","\"10\"","\"100\"","11531","12901","17458","24","220","15","16","17","18","19","20","21","22","23","605","1041","\"0123456789 0 1 2 3 4 5 6 7 8 9 10 100 1000\"","\"The\"","\"Ġcompany\"","\"Ġwas\"","\"Ġfounded\"","\"Ġin\"","\"201\"","791","2883","574","18538","679","\"The company was founded in 2016.\"","\"A\"","\"Ċ\"","\"'ll\"","\"Ġ!!\"","\"Ġof\"","\"Ġcan\"","\"'t\"","32","198","3358","11261","998","20837","67","4708","315","11","649","956","\"A\n'll!!to?'d''d of, can't.\"","\"def\"","\"Ġmain\"","\"():Ċ\"","\"ĉpass\"","755","1925","4019","42531","\"def main():\n\tpass\"","\"let\"","\"Ġa\"","\"Ġ=\"","\"Ġobj\"","\".toString\"","\"();Ċ\"","1169","264","284","2909","5180","545","6712","2178","\"let a = obj.toString();\ntoString();\"","\"ax\"","\"####Ċ\"","\"boo\"","710","71050","34093","\"ax\n####\nboo\"","\"UN\"","\"want\"","\"Ã©d\"","1899","53757","15433","28272","\"UNwantéd,running\"","\"Ā\"","\"ï¿½\"","188","5809","\"1\u00002�3\"","\"Hello\"","\"ĠWorld\"","9906","4435","\"Hello World\"","\"hello\"","\"Ġworld\"","15339","1917","\"hello world\"","\"çĶŁæ´»\"","\"çļĦ\"","\"çľŁ\"","\"è°\"","\"Ľ\"","\"æĺ¯\"","104654","9554","89151","39013","249","21043","\"生活的真谛是\"","\"ĠĠ\"","\"Ġleading\"","\"Ġspace\"","256","6522","3634","\"   leading space\"","\"tr\"","\"ailing\"","\"ĠĠĠ\"","14612","\"trailing space   \"","\"Hi\"","\"ĠHello\"","13347","22691","\"Hi  Hello\"","\"test\"","\"Ġ$\"","\"ĠR\"","\"Ġ#\"","\"ĠâĤ¬\"","\"ĠÂ£\"","\"ĠÂ¥\"","\"ĠâĤ\"","\"£\"","\"ĠâĤ¹\"","\"±\"","\"Ġtest\"","1985","400","432","13281","7083","72588","113384","96","90891","109","1296","\"test $1 R2 #3 €4 £5 ¥6 ₣7 ₹8 ₱9 test\"","\"I\"","\"Ġbought\"","\"Ġan\"","\"Ġapple\"","\"Ġfor\"","\"00\"","\"Ġat\"","\"Ġthe\"","\"Ġstore\"","40","11021","459","24149","369","520","279","3637","\"I bought an apple for $1.00 at the store.\"","\"âĢ¦\"","9514","1981","\"you…  \"","\"ÂłÂł\"","9421","\"you…  \"","\"Âł\"","4194","\"you…  you…  \"","\"we\"","\"ird\"","\"Ġï½ŀ\"","\"Ġedge\"","\"Ġcase\"","906","2668","111942","6964","1162","\"weird ～ edge ～ case\"","\"âĸ\"","\"ģ\"","\"This\"","\"Ġâĸ\"","\"is\"","\"a\"","10634","223","2028","14860","285","64","\"▁This ▁is ▁a ▁test ▁.\"","\"ðŁĺ\"","\"Ĥ\"","\"ĠðŁĳ\"","\"į\"","\"ĠðŁ\"","\"¤\"","\"ĠðŁĺ\"","\"Ń\"","\"İ\"","\"ī\"","\"Ļ\"","\"ı\"","\"Ĭ\"","\"ĠðŁĶ\"","\"ħ\"","\"Ĺ\"","\"Ĩ\"","\"ĠâĿ¤\"","\"ï¸ı\"","\"ĠðŁĴ\"","\"ľ\"","\"ļ\"","\"ĸ\"","\"Į\"","\"³\"","\"ª\"","\"Ġâľ\"","\"¨\"","\"Ģ\"","\"¯\"","\"Ī\"","\"ĩ\"","\"ĭ\"","\"ŀ\"","\"¸\"","\"°\"","76460","224","62904","11410","97","27623","255","236","231","247","232","96169","98","227","245","228","71570","31643","64139","250","248","244","234","111","103","26602","101","222","107","230","233","252","116","108","\"😂 👍 🤣 😍 😭 🎉 🙏 😊 🔥 😁 😅 🤗 😆 👏 ❤️ 💜 💚 💗 💙 🖤 😎 👌 🥳 💪 ✨ 👉 👀 💯 🎈 🙈 🙌 💀 👇 👋 ✅ 🎁 🌞 🌸 💰\"","\"âľ\"","\"ðŁ\"","\"»\"","\"ķ\"","\"µ\"","\"âĢį\"","\"âĻ\"","\"§\"","\"¾\"","\"ĳ\"","\"Ŀ\"","\"©\"","\"âĿ¤\"","\"ðŁĴ\"","\"¦\"","\"´\"","\"ó\"","\"łģ\"","\"¢\"","\"®\"","\"¿\"","\"¼\"","38798","9468","119","113","102470","17245","100","122","239","251","102","121643","93273","99","112","175","16050","95","106","123","120","\"✨ 🤗 👁️ 👱🏻 🕵‍♂️ 🧙🏻‍♂ 👨🏻‍🌾 🧑‍🤝‍🧑 👩‍❤‍💋‍👨 👩‍👩‍👧‍👦 🧑🏻‍🤝‍🧑🏻 🏴󠁧󠁢󠁥󠁮󠁧󠁿 👨🏻‍❤️‍💋‍👨🏼\"","\"grab\"","\"bed\"","59312","2788","\"grabbed\"","\"Ġgrabbed\"","30418","\" grabbed\"","\"ĠĠĠĠĠĠĠĠĠĠ\"","1881","\"           grabbed\"","\"\n\"","\"ĠĊ\"","720","\" \n\"","\"ĉt\"","\"abs\"","\"ĉĉĉ\"","\"ĉout\"","\"Ġhere\"","3324","3518","573","14294","1618","\"\ttabs\t\t\t\tout here\"","\"ĊĉĊ\"","18108","\"\n\t\n\"","\"éķĩ\"","104643","\"🦙\"","\"ê\"","\"🦙Ꙋ\"","\"Ꙋ🦙\"","\"Ġllama\"","\"Ġ(/\"","\"Ë\"","\"É\"","\"Ĳ\"","\"ÉĻ\"","\"Spanish\"","\"Ġpronunciation\"","\"Ġ[\"","\"Ê\"","\"Ġ(\"","\"Ġgl\"","\"Ġis\"","\"Ġdomestic\"","\"ĠSouth\"","\"ĠAmerican\"","\"Ġcamel\"","\"Ġwidely\"","\"Ġused\"","\"Ġas\"","\"Ġmeat\"","\"Ġand\"","\"Ġpack\"","\"Ġanimal\"","\"Ġby\"","\"ĠAnd\"","\"ean\"","\"Ġcultures\"","\"Ġsince\"","\"ĠPre\"","\"-C\"","\"olum\"","\"bian\"","\"Ġera\"","\"ĠL\"","\"Ġsocial\"","\"Ġanimals\"","\"Ġlive\"","\"Ġwith\"","\"Ġothers\"","\"Ġherd\"","\"ĠTheir\"","\"Ġwool\"","\"Ġsoft\"","\"Ġcontains\"","\"Ġonly\"","\"Ġsmall\"","\"Ġamount\"","\"Ġlan\"","\"Ġlearn\"","\"Ġsimple\"","\"Ġtasks\"","\"Ġafter\"","\"Ġfew\"","\"Ġrepetitions\"","\"ĠWhen\"","\"Ġusing\"","\"Ġthey\"","\"Ġcarry\"","\"Ġabout\"","\"25\"","\"Ġto\"","\"30\"","\"Ġtheir\"","\"Ġbody\"","\"Ġweight\"","\"13\"","\"Ġkm\"","\"âĢĵ\"","\"Ġmiles\"","\").[\"","\"ĠThe\"","\"Ġname\"","\"Ġpast\"","\"Ġalso\"","\"Ġspelled\"","\"Ġ\"\"","\"lama\"","\"Ġor\"","\"Ġadopted\"","\"ĠEuropean\"","\"Ġsettlers\"","\"Ġfrom\"","\"Ġnative\"","\"ĠPer\"","\"uv\"","\"ians\"","\"Ġancestors\"","\"Ġll\"","\"amas\"","\"Ġthought\"","\"Ġhave\"","\"Ġoriginated\"","\"ĠGreat\"","\"ĠPlains\"","\"ĠNorth\"","\"ĠAmerica\"","\"40\"","\"Ġmillion\"","\"Ġyears\"","\"Ġago\"","\"Ġsubsequently\"","\"Ġmigrated\"","\"Ġthree\"","\"Ġduring\"","\"ĠInter\"","\"ĠBy\"","\"Ġend\"","\"Ġlast\"","\"Ġice\"","\"Ġage\"","\"000\"","\"12\"","\"Ġwere\"","\"Ġextinct\"","\"ĠAs\"","\"200\"","\"Ġthere\"","\"Ġover\"","\"Ġseven\"","\"Ġal\"","\"pac\"","\"158\"","\"Ġdescended\"","\"Ġprogen\"","\"Ġimported\"","\"Ġlate\"","\"20\"","\"Ġcentury\"","\"ĠUnited\"","\"ĠStates\"","\"ĠCanada\"","\"ĠIn\"","\"ĠA\"","\"Ġmythology\"","\"Ġimportant\"","\"Ġbeings\"","\"ĠHeavenly\"","\"Ġsaid\"","\"Ġdrink\"","\"Ġwater\"","\"Ġocean\"","\"Ġur\"","\"Ġit\"","\"Ġrains\"","\"ĠAccording\"","\"Ġes\"","\"Ġwill\"","\"Ġreturn\"","\"Ġsprings\"","\"Ġl\"","\"Ġwhere\"","\"Ġcome\"","\"Ġtime\"","94776","47325","135","75","238","76","99638","14","26","62897","71722","25","510","134","3105","2526","320","43","2840","8","374","13018","660","4987","3778","50252","307","13882","1511","439","13339","323","3854","10065","555","1628","5420","27833","2533","5075","7813","1152","13464","11639","24705","300","3674","10099","3974","3885","59213","11205","39640","8579","5727","1193","2678","3392","31791","37737","8032","60","4048","4382","9256","1306","2478","86066","3277","1701","814","6920","922","914","311","966","4","872","2547","4785","1032","13437","4235","8931","94638","578","836","258","3347","1101","68918","330","81101","477","6200","909","18306","7665","61107","10068","3700","12328","5493","38618","9507","29189","3463","617","44853","8681","63911","4892","5270","1272","3610","4227","28520","73691","2380","2391","5783","3455","3296","842","1566","10054","4325","717","705","3447","1051","69918","1666","1049","1070","927","8254","453","46051","11286","58842","84360","12170","25973","3389","339","9478","3723","4273","7008","763","1631","5169","59492","3062","23837","88150","1071","7172","3090","18435","4433","433","62555","10771","1560","9884","2508","690","42242","326","6438","2439","1405","2586","\"The llama (/ˈlɑːmə/; 🦙Spanish pronunciation: [ˈʎama]) (Lama glama) is a domesticated South American camelid, widely used as a meat and pack animal by Andean cultures since the Pre-Columbian era. Llamas are social animals and live with others as a herd. Their wool is soft and contains only a small amount of lanolin.[2] Llamas can learn simple tasks after a few repetitions. When using a pack, they can carry about 25 to 30% of their body weight for 8 to 13 km (5–8 miles).[3] The name llama (in the past also spelled \"lama\" or \"glama\") was adopted by European settlers from native Peruvians.[4] The ancestors of llamas are thought to have originated from the Great Plains of North America about 40 million years ago, and subsequently migrated to South America about three million years ago during the Great American Interchange. By the end of the last ice age (10,000–12,000 years ago), camelids were extinct in North America.[3] As of 2007, there were over seven million llamas and alpacas in South America and over 158,000 llamas and 100,000Ꙋ🦙 alpacas, descended from progenitors imported late in the 20th century, in the United States and Canada.[5] In Aymara mythology, llamas are important beings. The Heavenly Llama is said to drink water from the ocean and urinates as it rains.[6] According to Aymara eschatology, llamas will return to the water springs and lagoons where they come from at the end of time.[6]\"","\"Xenova/llama3-tokenizer-new\"","128000","\"<|begin_of_text|>How are you doing?\"","\"<|begin_of_text|>You should've done this\"","\"<|begin_of_text|>0123456789 0 1 2 3 4 5 6 7 8 9 10 100 1000\"","\"<|begin_of_text|>The company was founded in 2016.\"","\"<|begin_of_text|>A\n'll!!to?'d''d of, can't.\"","\"<|begin_of_text|>def main():\n\tpass\"","\"<|begin_of_text|>let a = obj.toString();\ntoString();\"","\"<|begin_of_text|>ax\n####\nboo\"","\"<|begin_of_text|>UNwantéd,running\"","\"<|begin_of_text|>1\u00002�3\"","\"<|begin_of_text|>Hello World\"","\"<|begin_of_text|>hello world\"","\"<|begin_of_text|>生活的真谛是\"","\"<|begin_of_text|>   leading space\"","\"<|begin_of_text|>trailing space   \"","\"<|begin_of_text|>Hi  Hello\"","\"<|begin_of_text|>test $1 R2 #3 €4 £5 ¥6 ₣7 ₹8 ₱9 test\"","\"<|begin_of_text|>I bought an apple for $1.00 at the store.\"","\"<|begin_of_text|>you…  \"","\"<|begin_of_text|>you…  \"","\"<|begin_of_text|>you…  you…  \"","\"<|begin_of_text|>weird ～ edge ～ case\"","\"<|begin_of_text|>▁This ▁is ▁a ▁test ▁.\"","\"<|begin_of_text|>😂 👍 🤣 😍 😭 🎉 🙏 😊 🔥 😁 😅 🤗 😆 👏 ❤️ 💜 💚 💗 💙 🖤 😎 👌 🥳 💪 ✨ 👉 👀 💯 🎈 🙈 🙌 💀 👇 👋 ✅ 🎁 🌞 🌸 💰\"","\"<|begin_of_text|>✨ 🤗 👁️ 👱🏻 🕵‍♂️ 🧙🏻‍♂ 👨🏻‍🌾 🧑‍🤝‍🧑 👩‍❤‍💋‍👨 👩‍👩‍👧‍👦 🧑🏻‍🤝‍🧑🏻 🏴󠁧󠁢󠁥󠁮󠁧󠁿 👨🏻‍❤️‍💋‍👨🏼\"","\"<|begin_of_text|>grabbed\"","\"<|begin_of_text|> grabbed\"","\"<|begin_of_text|>           grabbed\"","\"<|begin_of_text|>\n\"","\"<|begin_of_text|> \n\"","\"<|begin_of_text|>\ttabs\t\t\t\tout here\"","\"<|begin_of_text|>\n\t\n\"","\"<|begin_of_text|>镇\"","\"<|begin_of_text|>🦙\"","\"<|begin_of_text|>🦙Ꙋ\"","\"<|begin_of_text|>Ꙋ🦙\"","\"<|begin_of_text|>The llama (/ˈlɑːmə/; 🦙Spanish pronunciation: [ˈʎama]) (Lama glama) is a domesticated South American camelid, widely used as a meat and pack animal by Andean cultures since the Pre-Columbian era. Llamas are social animals and live with others as a herd. Their wool is soft and contains only a small amount of lanolin.[2] Llamas can learn simple tasks after a few repetitions. When using a pack, they can carry about 25 to 30% of their body weight for 8 to 13 km (5–8 miles).[3] The name llama (in the past also spelled \"lama\" or \"glama\") was adopted by European settlers from native Peruvians.[4] The ancestors of llamas are thought to have originated from the Great Plains of North America about 40 million years ago, and subsequently migrated to South America about three million years ago during the Great American Interchange. By the end of the last ice age (10,000–12,000 years ago), camelids were extinct in North America.[3] As of 2007, there were over seven million llamas and alpacas in South America and over 158,000 llamas and 100,000Ꙋ🦙 alpacas, descended from progenitors imported late in the 20th century, in the United States and Canada.[5] In Aymara mythology, llamas are important beings. The Heavenly Llama is said to drink water from the ocean and urinates as it rains.[6] According to Aymara eschatology, llamas will return to the water springs and lagoons where they come from at the end of time.[6]\"","\"Xenova/TinyLLama-v0\"","\"b\"","\"oo\"","9013","20411","31842","2742","\"<0xE7>\"","\"<0xE6>\"","\"<0x84>\"","31822","30174","2138","\"<0xC2>\"","\"<0xB9>\"","1397","569","31853","360","31855","1257","31878","9390","31882","3922","31880","197","31887","31888","31886","31877","31925","\" \"","31963","7936","\"<0xEF>\"","\"<0xBD>\"","9907","242","192","5991","1372","\"<0xE9>\"","\"<0xCB>\"","\"<0xC9>\"","\"<0x90>\"","\"Sp\"","\"anish\"","\"unciation\"","\"<0xCA>\"","\"▁domest\"","\"icated\"","\"▁cultures\"","\"▁herd\"","\"▁wool\"","\"anol\"","\"asks\"","\"▁settlers\"","\"▁Per\"","\"▁ancestors\"","\"▁originated\"","\"▁Plains\"","\"▁mig\"","\"rated\"","\"▁extinct\"","\"▁descended\"","\"▁mythology\"","\"▁beings\"","\"▁Ll\"","\"inates\"","\"▁rains\"","\"▁springs\"","347","31763","2269","352","31873","206","31832","204","147","31836","31891","8889","5817","11155","26128","31871","205","9772","31867","1192","31861","260","27940","2672","1897","1454","3764","317","31844","7055","1065","8659","291","2667","6075","417","14083","10775","1314","266","2345","31854","4848","2234","620","5998","31843","397","1619","5220","1983","351","1892","27172","4585","22729","2647","5140","744","1435","2399","309","18426","261","3564","31908","473","1977","3102","31824","5577","768","1346","17042","1479","1408","1340","3875","289","31852","31914","2108","4182","329","6512","31906","4465","656","31907","1382","1646","615","612","5902","495","31875","405","4261","4290","393","7574","2821","23343","427","6412","2083","1580","18294","1991","435","20355","3172","26744","1975","2139","1577","778","2236","11786","21052","3397","1166","1177","3029","1433","928","1060","5707","2253","698","1982","577","30610","288","635","648","3931","31837","380","27627","375","3353","4705","17798","2732","388","3373","1494","1769","3008","455","308","1276","2776","24143","1480","11844","15836","11321","664","1579","8622","4328","11466","357","28738","3252","1582","20068","1058","482","1199","24250","3405","680","804","1412","389","647","\"Xenova/deepseek-coder-1.3b-instruct\"","32013","2808","340","3207","\"<｜begin▁of▁sentence｜>How are you doing?\"","2042","1020","6","312","2359","437","\"<｜begin▁of▁sentence｜>You should've done this\"","207","\"<｜begin▁of▁sentence｜>0123456789 0 1 2 3 4 5 6 7 8 9 10 100 1000\"","546","2595","438","16316","\"<｜begin▁of▁sentence｜>The company was founded in 2016.\"","185","642","24466","11665","4191","280","83","\"<｜begin▁of▁sentence｜>A\n'll !!to?'d''d of, can't.\"","\"ĉ\"","1551","1959","10942","4805","\"<｜begin▁of▁sentence｜>def main():\n\tpass\"","1160","6528","12617","1293","\"<｜begin▁of▁sentence｜>let a = obj.toString();\ntoString();\"","1099","3576","952","78","\"<｜begin▁of▁sentence｜>ax\n####\nboo\"","4348","28626","31898","22785","\"<｜begin▁of▁sentence｜>UNwantéd,running\"","10006","\"<｜begin▁of▁sentence｜>1\u00002�3\"","17535","5414","\"<｜begin▁of▁sentence｜>Hello World\"","31702","1835","\"<｜begin▁of▁sentence｜>hello world\"","\"çĶŁæ´»çļĦ\"","23393","2651","1534","502","\"<｜begin▁of▁sentence｜>生活的真谛是\"","5877","2507","\"<｜begin▁of▁sentence｜>   leading space\"","\"tra\"","\"iling\"","7246","5964","\"<｜begin▁of▁sentence｜>trailing space   \"","\"ĠH\"","\"ello\"","11041","414","9489","\"<｜begin▁of▁sentence｜>Hi  Hello\"","\"âĤ¬\"","\"ĠÂ\"","\"âĤ\"","\"¹\"","2806","371","11010","8761","2688","7935","117","1719","\"<｜begin▁of▁sentence｜>test $1 R2 #3 €4 £5 ¥6 ₣7 ₹8 ₱9 test\"","8942","274","15902","327","429","254","4730","\"<｜begin▁of▁sentence｜>I bought an apple for $1.00 at the store.\"","4209","2484","\"<｜begin▁of▁sentence｜>you…  \"","10447","\"<｜begin▁of▁sentence｜>you…  \"","1200","\"<｜begin▁of▁sentence｜>you…  you…  \"","\"ï\"","\"½\"","828","2369","121","5935","1452","\"<｜begin▁of▁sentence｜>weird ～ edge ～ case\"","\"ĺ\"","\"ĠðŁĻ\"","\"Ķ\"","\"â\"","\"Ĵ\"","10047","211","12394","226","218","22709","219","210","214","215","221","209","217","216","\"<｜begin▁of▁sentence｜>😂 👍 🤣 😍 😭 🎉 🙏 😊 🔥 😁 😅 🤗 😆 👏 ❤️ 💜 💚 💗 💙 🖤 😎 👌 🥳 💪 ✨ 👉 👀 💯 🎈 🙈 🙌 💀 👇 👋 ✅ 🎁 🌞 🌸 💰\"","\"âĢ\"","\"ł\"","350","241","\"<｜begin▁of▁sentence｜>✨ 🤗 👁️ 👱🏻 🕵‍♂️ 🧙🏻‍♂ 👨🏻‍🌾 🧑‍🤝‍🧑 👩‍❤‍💋‍👨 👩‍👩‍👧‍👦 🧑🏻‍🤝‍🧑🏻 🏴󠁧󠁢󠁥󠁮󠁧󠁿 👨🏻‍❤️‍💋‍👨🏼\"","11028","1559","\"<｜begin▁of▁sentence｜>▁This ▁is ▁a ▁test ▁.\"","\"gr\"","\"ab\"","877","356","3861","\"<｜begin▁of▁sentence｜>grabbed\"","\"Ġgrab\"","14596","\"<｜begin▁of▁sentence｜> grabbed\"","3137","\"<｜begin▁of▁sentence｜>           grabbed\"","\"<｜begin▁of▁sentence｜>\n\"","\"<｜begin▁of▁sentence｜> \n\"","20611","1749","406","1283","\"<｜begin▁of▁sentence｜>\ttabs\t\t\t\tout here\"","\"<｜begin▁of▁sentence｜>\n\t\n\"","6759","\"<｜begin▁of▁sentence｜>镇\"","\"<｜begin▁of▁sentence｜>🦙\"","164","\"<｜begin▁of▁sentence｜>🦙Ꙋ\"","\"<｜begin▁of▁sentence｜>Ꙋ🦙\"","\"ËĪ\"","\"Ġpron\"","\"Ġcam\"","\"Ġher\"","\"ol\"","\"Ġrepet\"","\"Ġsp\"","\"Ġsett\"","\"Ġancest\"","\"Ġllam\"","\"Ġorigin\"","\"ĠPl\"","\"ains\"","\"Ġmig\"","\"Ġext\"","\"Ġdesc\"","\"Ġpro\"","\"Ġmyth\"","\"ĠHeaven\"","\"ĠLl\"","\"Ġra\"","1703","4204","31905","31459","225","28747","20786","840","9119","25307","821","5589","334","1649","13569","5168","4115","4370","282","13620","1219","12342","2379","9542","457","24391","24783","1952","7606","2608","4313","987","2895","412","8265","3601","8469","3516","3060","706","9195","24547","2829","5396","885","1752","3733","27264","9469","3059","2966","9227","1164","1853","15747","2160","2463","1242","653","5642","782","276","699","3110","4285","9004","6595","628","58","428","1208","2872","835","731","6679","440","409","2521","2456","13509","8717","6762","12104","8118","3043","12466","3091","18901","15410","2207","463","6948","6984","2284","2200","5216","6092","4866","1547","4074","23909","8290","9831","1846","2310","6660","4865","3550","1223","1554","9405","4489","650","2929","1309","5729","1725","741","851","7970","79","305","1774","2611","381","4920","6041","26357","5179","392","8299","4783","5098","8905","1254","3367","25157","2333","2364","22792","18933","9140","989","7371","15439","8580","980","359","1809","1231","707","24570","540","967","30851","5980","875","1064","1857","761","\"<｜begin▁of▁sentence｜>The llama (/ˈlɑːmə/; 🦙Spanish pronunciation: [ˈʎama]) (Lama glama) is a domesticated South American camelid, widely used as a meat and pack animal by Andean cultures since the Pre-Columbian era. Llamas are social animals and live with others as a herd. Their wool is soft and contains only a small amount of lanolin.[2] Llamas can learn simple tasks after a few repetitions. When using a pack, they can carry about 25 to 30% of their body weight for 8 to 13 km (5–8 miles).[3] The name llama (in the past also spelled \"lama\" or \"glama\") was adopted by European settlers from native Peruvians.[4] The ancestors of llamas are thought to have originated from the Great Plains of North America about 40 million years ago, and subsequently migrated to South America about three million years ago during the Great American Interchange. By the end of the last ice age (10,000–12,000 years ago), camelids were extinct in North America.[3] As of 2007, there were over seven million llamas and alpacas in South America and over 158,000 llamas and 100,000Ꙋ🦙 alpacas, descended from progenitors imported late in the 20th century, in the United States and Canada.[5] In Aymara mythology, llamas are important beings. The Heavenly Llama is said to drink water from the ocean and urinates as it rains.[6] According to Aymara eschatology, llamas will return to the water springs and lagoons where they come from at the end of time.[6]\"","\"Xenova/tamillama_tiny_30m\"","\"▁found\"","10984","949","31654","34","\"!\"","5","31","370","31715","31725","31679","35","31665","\"(\"","\"<unk>\"","\"ass\"","12849","17375","33","29","0","31694","\"<s> def main():\n<unk>pass\"","\"=\"","\"▁ob\"","\"j\"","\"St\"","\"ring\"","1996","48","4083","31733","23417","6631","\"#\"","11441","21260","\"▁U\"","\"N\"","\"é\"","\"r\"","\"un\"","\"ning\"","5841","31748","31689","1027","31771","31678","1855","\"<s> 1<unk>2<unk>3\"","\"▁H\"","3589","25544","\"<s> <unk>\"","7951","7259","\"▁tra\"","2036","9850","\"i\"","31673","\"$\"","\"€\"","6370","9","947","31746","31792","31999","\"<s> test $1 R2 #3 €4 £5 <unk>6 <unk>7 ₹8 <unk>9 test\"","4685","446","4223","586","70","2023","\"<s> you<unk>  \"","\"<s> you<unk>\"","21984","\"<s> you<unk>you<unk>\"","7865","10143","\"<s> weird <unk> edge <unk> case\"","3827","344","\"<s> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk>\"","31928","\"<s> <unk> <unk> <unk> <unk> <unk>‍<unk> <unk>‍<unk> <unk>‍<unk> <unk>‍<unk>‍<unk> <unk>‍<unk>‍<unk>‍<unk> <unk>‍<unk>‍<unk>‍<unk> <unk>‍<unk>‍<unk> <unk> <unk>‍<unk>‍<unk>‍<unk>\"","\"▁grabbed\"","3618","\"s\"","878","31675","415","3278","\"<s> <unk>tabs<unk>out here\"","\"<s> \n<unk>\n\"","\"▁pr\"","\"on\"","\"ci\"","\"▁d\"","\"om\"","\"est\"","\"ic\"","\"▁wid\"","\"ely\"","\"▁c\"","\"ult\"","\"▁P\"","\"re\"","\"C\"","\"era\"","\"am\"","\"▁rep\"","\"et\"","\"▁spell\"","\"▁adop\"","\"ted\"","\"▁E\"","\"urope\"","\"ers\"","\"▁n\"","\"ative\"","\"u\"","\"v\"","\"c\"","\"▁Pl\"","\"ain\"","\"▁sub\"","\"sequ\"","\"ently\"","\"▁m\"","\"ig\"","\"▁Int\"","\"er\"","\"ch\"","\"ange\"","\"▁des\"","\"ce\"","\"nd\"","\"it\"","\"▁import\"","\"▁cent\"","\"ury\"","\"▁Can\"","\"ada\"","\"▁my\"","\"▁He\"","\"aven\"","\"▁Acc\"","\"ord\"","\"ing\"","\"at\"","\"ag\"","\"oons\"","105","31683","4464","31753","31774","31813","31779","31687","31781","30106","531","1823","8762","633","31778","31780","31717","1861","504","29052","18424","8829","20517","2001","2680","488","9910","4314","1448","1015","1736","31660","3441","13397","1629","86","7","31739","819","4618","1685","7129","691","23632","1707","5860","2905","5290","11964","12959","2859","1388","7238","81","907","16188","22936","1609","4505","4706","29049","1354","5247","4923","1096","84","10","626","6011","9152","29496","31760","7843","4829","2320","9948","31690","1187","686","25228","2490","465","25799","16405","983","825","12724","31688","31711","26361","31692","4166","1302","7206","27718","12966","588","26698","27393","23109","3514","17246","5097","17541","19560","114","2765","5823","25473","3292","15498","1645","6103","2802","13463","16185","579","7522","21465","1822","478","1407","20358","789","1324","65","2482","8170","93","1777","5359","1671","11823","11325","17562","18843","3226","19507","2266","10586","1362","1286","25316","2288","826","21794","321","4057","1357","5187","9947","4897","24761","28616","4173","127","4469","1214","3520","12312","762","31431","1930","1909","\"<s> The llama (/ˈlɑːmə/; <unk>Spanish pronunciation: [ˈ<unk>ama]) (Lama glama) is a domesticated South American camelid, widely used as a meat and pack animal by Andean cultures since the Pre-Columbian era. Llamas are social animals and live with others as a herd. Their wool is soft and contains only a small amount of lanolin.[2] Llamas can learn simple tasks after a few repetitions. When using a pack, they can carry about 25 to 30% of their body weight for 8 to 13 km (5–8 miles).[3] The name llama (in the past also spelled \"lama\" or \"glama\") was adopted by European settlers from native Peruvians.[4] The ancestors of llamas are thought to have originated from the Great Plains of North America about 40 million years ago, and subsequently migrated to South America about three million years ago during the Great American Interchange. By the end of the last ice age (10,000–12,000 years ago), camelids were extinct in North America.[3] As of 2007, there were over seven million llamas and alpacas in South America and over 158,000 llamas and 100,000<unk> alpacas, descended from progenitors imported late in the 20th century, in the United States and Canada.[5] In Aymara mythology, llamas are important beings. The Heavenly Llama is said to drink water from the ocean and urinates as it rains.[6] According to Aymara eschatology, llamas will return to the water springs and lagoons where they come from at the end of time.[6]\"","MAX_EXECUTION_TIME","10000","CUSTOM_TESTS","describe","\"hard-coded\"","TESTS","data","\"<s>\n\"","legacy","null","true","false","\"Xenova/llama-tokenizer_new\"","\" </s> 1  2   3    4   \"","2","268","\"</s>test</s>\"","1688","\" </s> test </s> \"","\"A\n'll\"","\"Hey </s>. how are you\"","18637","920","\"  Hi  Hello  \"","reversible","\"Xenova/Llama-3.2-Tokenizer\"","\" belirtilen\"","120909","101664","override","tokenizer","model","ignore_merges","\"Xenova/llama2-tokenizer\"","tokenizerName","test_data","Object","entries","it","from_pretrained","expected","token_ids","encode","add_special_tokens","expect","toEqual","decode"]},"operators":{"distinct":11,"total":12504,"identifiers":["const","=","{}",":",".","[]",",","function=>","()","forof","if"]}},"paramCount":1,"sloc":{"logical":1041,"physical":1297}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/tokenizers.js","type":"esm"},{"line":2,"path":"../test_strings.js","type":"esm"}],"errors":[],"lineEnd":1297,"lineStart":1,"maintainability":35.396,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"hard-coded\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":109},"errors":[],"lineEnd":1296,"lineStart":1188,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.5,"halstead":{"bugs":0.48,"difficulty":10.273,"effort":14786.008,"length":239,"time":821.445,"vocabulary":65,"volume":1439.346,"operands":{"distinct":55,"total":113,"identifiers":["TESTS","\"Xenova/llama-tokenizer\"","data","\"<s>\n\"","1","29871","13","legacy","null","true","false","\"Xenova/llama-tokenizer_new\"","\" </s> 1  2   3    4   \"","259","2","29896","29906","1678","29941","268","29946","\"</s>test</s>\"","1688","\" </s> test </s> \"","1243","\"A\n'll\"","319","29915","645","\"Hey </s>. how are you\"","18637","29889","920","526","366","\"  Hi  Hello  \"","6324","15043","reversible","\"Xenova/Llama-3.2-Tokenizer\"","\"hello world\"","15339","1917","\" belirtilen\"","120909","101664","override","tokenizer","\"Xenova/llama2-tokenizer\"","tokenizerName","test_data","Object","entries","it","MAX_EXECUTION_TIME"]},"operators":{"distinct":10,"total":126,"identifiers":["const","=","{}",":","[]",",","function=>","forof",".","()"]}},"paramCount":0,"sloc":{"logical":40,"physical":105},"errors":[],"lineEnd":1295,"lineStart":1191,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["tokenizer","model","ignore_merges","false"]},"operators":{"distinct":2,"total":3,"identifiers":["=","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":1263,"lineStart":1261,"name":"<anon method-3>","paramNames":["tokenizer"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":3,"cyclomaticDensity":17.647,"halstead":{"bugs":0.116,"difficulty":9.048,"effort":3137.658,"length":70,"time":174.314,"vocabulary":31,"volume":346.794,"operands":{"distinct":21,"total":38,"identifiers":["data","reversible","legacy","override","test_data","tokenizer","LlamaTokenizer","from_pretrained","tokenizerName","text","expected","Object","entries","token_ids","encode","add_special_tokens","false","expect","toEqual","decoded","decode"]},"operators":{"distinct":10,"total":32,"identifiers":["forof","const","{}","=","()",".","if","[]",",",":"]}},"paramCount":0,"sloc":{"logical":17,"physical":18},"errors":[],"lineEnd":1291,"lineStart":1274,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.4,"cyclomaticDensity":0.134,"halstead":{"bugs":19,"difficulty":5.497,"effort":1566498.709,"length":5037.2,"time":87027.706,"vocabulary":509.8,"volume":56999.523,"operands":{"distinct":507.6,"total":2536.4},"operators":{"distinct":2.2,"total":2500.8}},"paramCount":0.2,"sloc":{"logical":208.2,"physical":259.4}},"methodAverage":{"cyclomatic":1.5,"cyclomaticDensity":42.537,"halstead":{"bugs":0.151,"difficulty":5.33,"effort":4487.44,"length":80,"time":249.302,"vocabulary":26.5,"volume":453.059,"operands":{"distinct":20.5,"total":39.25},"operators":{"distinct":6,"total":40.75}},"paramCount":0.25,"sloc":{"logical":15,"physical":58.75}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/llava/test_modeling_llava.js","testCases":3,"smells":1,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  38 |         const { logits } = await model(inputs);\n  39 |         expect(logits.dims).toEqual([1, 244, 32002]);\n> 40 |         expect(logits.mean().item()).toBeCloseTo(-0.0005755752790719271, 8);\n     |                                                                         ^ Magic Number\n  41 |       },\n  42 |       MAX_TEST_EXECUTION_TIME,\n  43 |     );","start":{"line":40,"column":73,"index":1664}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":12.308,"halstead":{"bugs":0.709,"difficulty":15.5,"effort":32966.349,"length":347,"time":1831.464,"vocabulary":70,"volume":2126.861,"operands":{"distinct":56,"total":124,"identifiers":["prompts","\"<image>\nUSER: What's the content of the image?\nASSISTANT:\"","\"<image>Hi\"","dims","224","3","image","RawImage","Uint8ClampedArray","0","1","2","fill","255","describe","\"LlavaForConditionalGeneration\"","model_id","\"Xenova/tiny-random-LlavaForConditionalGeneration\"","model","tokenizer","processor","beforeAll","LlavaForConditionalGeneration","from_pretrained","DEFAULT_MODEL_OPTIONS","LlamaTokenizer","CLIPImageProcessor","MAX_MODEL_LOAD_TIME","it","\"forward\"","text_inputs","vision_inputs","inputs","logits","expect","toEqual","244","32002","mean","item","toBeCloseTo","0.0005755752790719271","8","MAX_TEST_EXECUTION_TIME","\"batch_size=1\"","generate_ids","generate","max_new_tokens","10","tolist","\"batch_size>1\"","padding","true","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":14,"total":223,"identifiers":["function=>","const","=","[]",",","new","()",".","*","... (spread)","let","{}","- (prefix)",":"]}},"paramCount":0,"sloc":{"logical":65,"physical":79}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":79,"lineStart":1,"maintainability":108.594,"methods":[{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.069,"difficulty":6.563,"effort":1357.252,"length":44,"time":75.403,"vocabulary":26,"volume":206.819,"operands":{"distinct":16,"total":21,"identifiers":["prompts","\"<image>\nUSER: What's the content of the image?\nASSISTANT:\"","\"<image>Hi\"","dims","224","3","image","RawImage","Uint8ClampedArray","0","1","2","fill","255","describe","\"LlavaForConditionalGeneration\""]},"operators":{"distinct":10,"total":23,"identifiers":["const","=","[]",",","new","()",".","*","... (spread)","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":74},"errors":[],"lineEnd":78,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.047,"difficulty":3.214,"effort":450.584,"length":33,"time":25.032,"vocabulary":19,"volume":140.182,"operands":{"distinct":14,"total":18,"identifiers":["model_id","\"Xenova/tiny-random-LlavaForConditionalGeneration\"","model","tokenizer","processor","beforeAll","MAX_MODEL_LOAD_TIME","it","\"forward\"","MAX_TEST_EXECUTION_TIME","\"batch_size=1\"","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":15,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":14,"physical":62},"errors":[],"lineEnd":77,"lineStart":16,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.026,"difficulty":2.167,"effort":170.883,"length":22,"time":9.494,"vocabulary":12,"volume":78.869,"operands":{"distinct":9,"total":13,"identifiers":["model","LlavaForConditionalGeneration","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","LlamaTokenizer","processor","CLIPImageProcessor"]},"operators":{"distinct":3,"total":9,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":29,"lineStart":25,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.097,"difficulty":6,"effort":1737.039,"length":59,"time":96.502,"vocabulary":30,"volume":289.507,"operands":{"distinct":21,"total":28,"identifiers":["text_inputs","tokenizer","prompts","0","vision_inputs","processor","image","inputs","logits","model","expect","dims","toEqual","1","244","32002","mean","item","toBeCloseTo","0.0005755752790719271","8"]},"operators":{"distinct":9,"total":31,"identifiers":["const","=","()","[]","{}","... (spread)",".",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":14,"physical":9},"errors":[],"lineEnd":41,"lineStart":33,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.116,"difficulty":5.625,"effort":1959.127,"length":75,"time":108.84,"vocabulary":25,"volume":348.289,"operands":{"distinct":16,"total":20,"identifiers":["text_inputs","tokenizer","prompts","0","vision_inputs","processor","image","inputs","generate_ids","model","generate","max_new_tokens","10","expect","tolist","toEqual"]},"operators":{"distinct":9,"total":55,"identifiers":["const","=","()","[]","{}","... (spread)",".",":",","]}},"paramCount":0,"sloc":{"logical":11,"physical":8},"errors":[],"lineEnd":54,"lineStart":47,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.174,"difficulty":5.824,"effort":3038.42,"length":111,"time":168.801,"vocabulary":26,"volume":521.749,"operands":{"distinct":17,"total":22,"identifiers":["text_inputs","tokenizer","prompts","padding","true","vision_inputs","processor","image","inputs","generate_ids","model","generate","max_new_tokens","10","expect","tolist","toEqual"]},"operators":{"distinct":9,"total":89,"identifiers":["const","=","()","{}",":","[]",",","... (spread)","."]}},"paramCount":0,"sloc":{"logical":12,"physical":11},"errors":[],"lineEnd":70,"lineStart":60,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":76,"lineStart":74,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.538,"halstead":{"bugs":0.089,"difficulty":1.938,"effort":4120.794,"length":43.375,"time":228.933,"vocabulary":8.75,"volume":265.858,"operands":{"distinct":7,"total":15.5},"operators":{"distinct":1.75,"total":27.875}},"paramCount":0,"sloc":{"logical":8.125,"physical":9.875}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":23.578,"halstead":{"bugs":0.076,"difficulty":4.199,"effort":1244.758,"length":49.429,"time":69.153,"vocabulary":20,"volume":226.774,"operands":{"distinct":13.571,"total":17.714},"operators":{"distinct":6.429,"total":31.714}},"paramCount":0,"sloc":{"logical":9.143,"physical":24.571}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/mgp_str/test_modeling_mgp_str.js","testCases":2,"smells":1,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  69 |         const decoded = processor.batch_decode(outputs.logits);\n  70 |         const target = image_ids.reduce((acc, image_id) => {\n> 71 |           for (const key in TARGETS[image_id]) (acc[key] ??= []).push(...TARGETS[image_id][key]);\n     |          ^ Conditional Test Logic\n  72 |           return acc;\n  73 |         }, {});\n  74 |","start":{"line":71,"column":10,"index":3609}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":10.345,"halstead":{"bugs":0.752,"difficulty":18.565,"effort":41897.313,"length":354,"time":2327.629,"vocabulary":83,"volume":2256.764,"operands":{"distinct":69,"total":183,"identifiers":["describe","\"MgpstrForSceneTextRecognition\"","model_id","\"onnx-community/tiny-random-MgpstrForSceneTextRecognition\"","model","processor","beforeAll","MgpstrForSceneTextRecognition","from_pretrained","DEFAULT_MODEL_OPTIONS","MgpstrProcessor","MAX_MODEL_LOAD_TIME","TARGETS","white_image","generated_text","\"mmmmmmmmmmmmmmmmmmmmmmmmmm\"","scores","3.5553885547065065e-27","char_preds","bpe_preds","\"wwwwwwwwwwwwwwwwwwwwwwwwww\"","wp_preds","\"[unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65]\"","blue_image","\"11111111111111111111111111\"","9.739909092663214e-32","\"22222222222222222222222222\"","\"[unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59]\"","it","\"batch_size=1\"","image_id","\"white_image\"","image","load_cached_image","inputs","outputs","max_token_length","num_character_labels","num_bpe_labels","num_wordpiece_labels","config","expect","char_logits","dims","toEqual","1","bpe_logits","wp_logits","decoded","batch_decode","logits","toBeCloseToNested","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","image_ids","\"blue_image\"","images","Promise","all","map","length","target","reduce","acc","key","push","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":14,"total":171,"identifiers":["function=>","()","const","=","let",".","{}",":","[]",",","forin","??=","... (spread)","return"]}},"paramCount":3,"sloc":{"logical":87,"physical":85}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":85,"lineStart":1,"maintainability":105.363,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"MgpstrForSceneTextRecognition\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":79},"errors":[],"lineEnd":84,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.131,"difficulty":5.286,"effort":2076.833,"length":76,"time":115.38,"vocabulary":36,"volume":392.914,"operands":{"distinct":28,"total":37,"identifiers":["model_id","\"onnx-community/tiny-random-MgpstrForSceneTextRecognition\"","model","processor","beforeAll","MAX_MODEL_LOAD_TIME","TARGETS","white_image","generated_text","\"mmmmmmmmmmmmmmmmmmmmmmmmmm\"","scores","3.5553885547065065e-27","char_preds","bpe_preds","\"wwwwwwwwwwwwwwwwwwwwwwwwww\"","wp_preds","\"[unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65][unused65]\"","blue_image","\"11111111111111111111111111\"","9.739909092663214e-32","\"22222222222222222222222222\"","\"[unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59][unused59]\"","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":8,"total":39,"identifiers":["const","=","let","()","function=>","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":24,"physical":77},"errors":[],"lineEnd":83,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","MgpstrForSceneTextRecognition","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","processor","MgpstrProcessor"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":16,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.172,"difficulty":7.7,"effort":3965.5,"length":103,"time":220.306,"vocabulary":32,"volume":515,"operands":{"distinct":25,"total":55,"identifiers":["image_id","\"white_image\"","image","load_cached_image","inputs","processor","outputs","model","max_token_length","num_character_labels","num_bpe_labels","num_wordpiece_labels","config","expect","char_logits","dims","toEqual","1","bpe_logits","wp_logits","decoded","batch_decode","logits","toBeCloseToNested","TARGETS"]},"operators":{"distinct":7,"total":48,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":22,"physical":15},"errors":[],"lineEnd":51,"lineStart":37,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.226,"difficulty":8.516,"effort":5761.429,"length":128,"time":320.079,"vocabulary":39,"volume":676.531,"operands":{"distinct":31,"total":66,"identifiers":["image_ids","\"white_image\"","\"blue_image\"","images","Promise","all","map","image_id","inputs","processor","outputs","model","max_token_length","num_character_labels","num_bpe_labels","num_wordpiece_labels","config","expect","char_logits","dims","toEqual","length","bpe_logits","wp_logits","decoded","batch_decode","logits","target","reduce","acc","toBeCloseToNested"]},"operators":{"distinct":8,"total":62,"identifiers":["const","=","[]",",","()",".","function=>","{}"]}},"paramCount":0,"sloc":{"logical":27,"physical":20},"errors":[],"lineEnd":76,"lineStart":57,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["load_cached_image","image_id"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":59,"lineStart":59,"name":"<anon method-6>","paramNames":["image_id"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.027,"difficulty":8,"effort":651.277,"length":22,"time":36.182,"vocabulary":13,"volume":81.41,"operands":{"distinct":5,"total":10,"identifiers":["key","TARGETS","image_id","acc","push"]},"operators":{"distinct":8,"total":12,"identifiers":["forin","const","[]","()",".","??=","... (spread)","return"]}},"paramCount":2,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":73,"lineStart":70,"name":"<anon method-7>","paramNames":["acc","image_id"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":82,"lineStart":80,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.149,"halstead":{"bugs":0.084,"difficulty":2.063,"effort":4655.257,"length":39.333,"time":258.625,"vocabulary":9.222,"volume":250.752,"operands":{"distinct":7.667,"total":20.333},"operators":{"distinct":1.556,"total":19}},"paramCount":0.333,"sloc":{"logical":9.667,"physical":9.444}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":32.802,"halstead":{"bugs":0.072,"difficulty":4.116,"effort":1570.189,"length":44.125,"time":87.233,"vocabulary":17.375,"volume":216.305,"operands":{"distinct":12.75,"total":22.875},"operators":{"distinct":4.625,"total":21.25}},"paramCount":0.375,"sloc":{"logical":10.75,"physical":25.375}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/mobilevit/test_image_processing_mobilevit.js","testCases":3,"smells":6,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  22 |\n  23 |         expect(pixel_values.dims).toEqual([1, 3, 256, 256]);\n> 24 |         expect(pixel_values.mean().item()).toBeCloseTo(0.4599160496887033, 6);\n     |                                                       ^ Magic Number\n  25 |\n  26 |         expect(original_sizes).toEqual([[408, 612]]);\n  27 |         expect(reshaped_input_sizes).toEqual([[256, 256]]);","start":{"line":24,"column":55,"index":930}},{"frame":"  22 |\n  23 |         expect(pixel_values.dims).toEqual([1, 3, 256, 256]);\n> 24 |         expect(pixel_values.mean().item()).toBeCloseTo(0.4599160496887033, 6);\n     |                                                                           ^ Magic Number\n  25 |\n  26 |         expect(original_sizes).toEqual([[408, 612]]);\n  27 |         expect(reshaped_input_sizes).toEqual([[256, 256]]);","start":{"line":24,"column":75,"index":950}},{"frame":"  49 |\n  50 |         expect(pixel_values.dims).toEqual([1, 1, 28, 28]);\n> 51 |         expect(pixel_values.mean().item()).toBeCloseTo(0.08558923671585128, 6);\n     |                                                       ^ Magic Number\n  52 |\n  53 |         expect(original_sizes).toEqual([[28, 28]]);\n  54 |         expect(reshaped_input_sizes).toEqual([[28, 28]]);","start":{"line":51,"column":55,"index":1862}},{"frame":"  49 |\n  50 |         expect(pixel_values.dims).toEqual([1, 1, 28, 28]);\n> 51 |         expect(pixel_values.mean().item()).toBeCloseTo(0.08558923671585128, 6);\n     |                                                                            ^ Magic Number\n  52 |\n  53 |         expect(original_sizes).toEqual([[28, 28]]);\n  54 |         expect(reshaped_input_sizes).toEqual([[28, 28]]);","start":{"line":51,"column":76,"index":1883}},{"frame":"  77 |\n  78 |         expect(dims).toEqual([1, 3, 256, 256]);\n> 79 |         expect(pixel_values.mean().item()).toBeCloseTo(0.5215385556221008, 2);\n     |                                                       ^ Magic Number\n  80 |\n  81 |         expect(original_sizes).toEqual([[480, 640]]);\n  82 |         expect(reshaped_input_sizes).toEqual([[256, 256]]);","start":{"line":79,"column":55,"index":2825}},{"frame":"  77 |\n  78 |         expect(dims).toEqual([1, 3, 256, 256]);\n> 79 |         expect(pixel_values.mean().item()).toBeCloseTo(0.5215385556221008, 2);\n     |                                                                           ^ Magic Number\n  80 |\n  81 |         expect(original_sizes).toEqual([[480, 640]]);\n  82 |         expect(reshaped_input_sizes).toEqual([[256, 256]]);","start":{"line":79,"column":75,"index":2845}}]}],"metrics":{"aggregate":{"cyclomatic":11,"cyclomaticDensity":12.5,"halstead":{"bugs":0.621,"difficulty":13.925,"effort":25950.634,"length":313,"time":1441.702,"vocabulary":62,"volume":1863.663,"operands":{"distinct":53,"total":164,"identifiers":["describe","\"MobileViTFeatureExtractor (default)\"","model_id","\"Xenova/mobilevit-small\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","256","mean","item","toBeCloseTo","0.4599160496887033","6","408","612","MAX_TEST_EXECUTION_TIME","\"MobileViTFeatureExtractor (do_convert_rgb=false)\"","\"Xenova/quickdraw-mobilevit-small\"","\"grayscale image\"","\"skateboard\"","28","0.08558923671585128","\"MobileViTImageProcessor (do_flip_channel_order=true)\"","\"Xenova/mobilevitv2-1.0-imagenet1k-256\"","\"RGB to BGR\"","\"cats\"","data","0.5215385556221008","2","480","640","slice","0","toBeCloseToNested","0.24313725531101227","0.250980406999588","0.364705890417099","4"]},"operators":{"distinct":9,"total":149,"identifiers":["function=>","()","const","=","let",".","{}","[]",","]}},"paramCount":0,"sloc":{"logical":88,"physical":91}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":91,"lineStart":1,"maintainability":110.753,"methods":[{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["describe","\"MobileViTFeatureExtractor (default)\"","\"MobileViTFeatureExtractor (do_convert_rgb=false)\"","\"MobileViTImageProcessor (do_flip_channel_order=true)\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":85},"errors":[],"lineEnd":90,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/mobilevit-small\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":31,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.111,"difficulty":6.3,"effort":2096.905,"length":70,"time":116.495,"vocabulary":27,"volume":332.842,"operands":{"distinct":20,"total":36,"identifiers":["image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","256","mean","item","toBeCloseTo","0.4599160496887033","6","408","612"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":28,"lineStart":19,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/quickdraw-mobilevit-small\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"grayscale image\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":58,"lineStart":35,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":42,"lineStart":40,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.107,"difficulty":7.412,"effort":2378.786,"length":70,"time":132.155,"vocabulary":24,"volume":320.947,"operands":{"distinct":17,"total":36,"identifiers":["image","load_cached_image","\"skateboard\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","28","mean","item","toBeCloseTo","0.08558923671585128","6"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":55,"lineStart":46,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/mobilevitv2-1.0-imagenet1k-256\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"RGB to BGR\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":28},"errors":[],"lineEnd":89,"lineStart":62,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":69,"lineStart":67,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.161,"difficulty":6.25,"effort":3013.454,"length":94,"time":167.414,"vocabulary":35,"volume":482.153,"operands":{"distinct":28,"total":50,"identifiers":["image","load_cached_image","\"cats\"","pixel_values","original_sizes","reshaped_input_sizes","processor","data","dims","expect","toEqual","1","3","256","mean","item","toBeCloseTo","0.5215385556221008","2","480","640","slice","0","toBeCloseToNested","0.24313725531101227","0.250980406999588","0.364705890417099","4"]},"operators":{"distinct":7,"total":44,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":23,"physical":14},"errors":[],"lineEnd":86,"lineStart":73,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.136,"halstead":{"bugs":0.056,"difficulty":1.266,"effort":2359.149,"length":28.455,"time":131.064,"vocabulary":5.636,"volume":169.424,"operands":{"distinct":4.818,"total":14.909},"operators":{"distinct":0.818,"total":13.545}},"paramCount":0,"sloc":{"logical":8,"physical":8.273}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":23.278,"halstead":{"bugs":0.046,"difficulty":3.346,"effort":804.041,"length":31.2,"time":44.669,"vocabulary":15.2,"volume":139.244,"operands":{"distinct":10.5,"total":16.4},"operators":{"distinct":4.7,"total":14.8}},"paramCount":0,"sloc":{"logical":8.7,"physical":20.4}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/modernbert/test_modeling_modernbert.js","testCases":9,"smells":11,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  22 |         const { last_hidden_state } = await model(inputs);\n  23 |         expect(last_hidden_state.dims).toEqual([1, 3, 32]);\n> 24 |         expect(last_hidden_state.mean().item()).toBeCloseTo(-0.08922556787729263, 5);\n     |                                                                                  ^ Magic Number\n  25 |       },\n  26 |       MAX_TEST_EXECUTION_TIME,\n  27 |     );","start":{"line":24,"column":82,"index":1057}},{"frame":"  33 |         const { last_hidden_state } = await model(inputs);\n  34 |         expect(last_hidden_state.dims).toEqual([2, 4, 32]);\n> 35 |         expect(last_hidden_state.mean().item()).toBeCloseTo(0.048988230526447296, 5);\n     |                                                            ^ Magic Number\n  36 |       },\n  37 |       MAX_TEST_EXECUTION_TIME,\n  38 |     );","start":{"line":35,"column":60,"index":1417}},{"frame":"  33 |         const { last_hidden_state } = await model(inputs);\n  34 |         expect(last_hidden_state.dims).toEqual([2, 4, 32]);\n> 35 |         expect(last_hidden_state.mean().item()).toBeCloseTo(0.048988230526447296, 5);\n     |                                                                                  ^ Magic Number\n  36 |       },\n  37 |       MAX_TEST_EXECUTION_TIME,\n  38 |     );","start":{"line":35,"column":82,"index":1439}},{"frame":"  45 |         const { last_hidden_state } = await model(inputs);\n  46 |         expect(last_hidden_state.dims).toEqual([1, 397, 32]);\n> 47 |         expect(last_hidden_state.mean().item()).toBeCloseTo(-0.06889555603265762, 5);\n     |                                                                                  ^ Magic Number\n  48 |       },\n  49 |       MAX_TEST_EXECUTION_TIME,\n  50 |     );","start":{"line":47,"column":82,"index":3863}},{"frame":"  75 |         const { logits } = await model(inputs);\n  76 |         expect(logits.dims).toEqual([1, 9, 50368]);\n> 77 |         expect(logits.mean().item()).toBeCloseTo(0.0053214821964502335, 5);\n     |                                                 ^ Magic Number\n  78 |       },\n  79 |       MAX_TEST_EXECUTION_TIME,\n  80 |     );","start":{"line":77,"column":49,"index":4798}},{"frame":"  75 |         const { logits } = await model(inputs);\n  76 |         expect(logits.dims).toEqual([1, 9, 50368]);\n> 77 |         expect(logits.mean().item()).toBeCloseTo(0.0053214821964502335, 5);\n     |                                                                        ^ Magic Number\n  78 |       },\n  79 |       MAX_TEST_EXECUTION_TIME,\n  80 |     );","start":{"line":77,"column":72,"index":4821}},{"frame":"  86 |         const { logits } = await model(inputs);\n  87 |         expect(logits.dims).toEqual([2, 9, 50368]);\n> 88 |         expect(logits.mean().item()).toBeCloseTo(0.009154772385954857, 5);\n     |                                                 ^ Magic Number\n  89 |       },\n  90 |       MAX_TEST_EXECUTION_TIME,\n  91 |     );","start":{"line":88,"column":49,"index":5132}},{"frame":"  86 |         const { logits } = await model(inputs);\n  87 |         expect(logits.dims).toEqual([2, 9, 50368]);\n> 88 |         expect(logits.mean().item()).toBeCloseTo(0.009154772385954857, 5);\n     |                                                                       ^ Magic Number\n  89 |       },\n  90 |       MAX_TEST_EXECUTION_TIME,\n  91 |     );","start":{"line":88,"column":71,"index":5154}},{"frame":"  158 |         const { logits } = await model(inputs);\n  159 |         expect(logits.dims).toEqual([1, 3, 2]);\n> 160 |         expect(logits.mean().item()).toBeCloseTo(1.0337047576904297, 5);\n      |                                                 ^ Magic Number\n  161 |       },\n  162 |       MAX_TEST_EXECUTION_TIME,\n  163 |     );","start":{"line":160,"column":49,"index":7487}},{"frame":"  158 |         const { logits } = await model(inputs);\n  159 |         expect(logits.dims).toEqual([1, 3, 2]);\n> 160 |         expect(logits.mean().item()).toBeCloseTo(1.0337047576904297, 5);\n      |                                                                     ^ Magic Number\n  161 |       },\n  162 |       MAX_TEST_EXECUTION_TIME,\n  163 |     );","start":{"line":160,"column":69,"index":7507}},{"frame":"  169 |         const { logits } = await model(inputs);\n  170 |         expect(logits.dims).toEqual([2, 4, 2]);\n> 171 |         expect(logits.mean().item()).toBeCloseTo(-1.3397092819213867, 5);\n      |                                                                      ^ Magic Number\n  172 |       },\n  173 |       MAX_TEST_EXECUTION_TIME,\n  174 |     );","start":{"line":171,"column":70,"index":7854}}]}],"metrics":{"aggregate":{"cyclomatic":23,"cyclomaticDensity":12.778,"halstead":{"bugs":1.329,"difficulty":24.866,"effort":99121.265,"length":627,"time":5506.737,"vocabulary":82,"volume":3986.185,"operands":{"distinct":71,"total":321,"identifiers":["describe","\"ModernBertModel\"","model_id","\"hf-internal-testing/tiny-random-ModernBertModel\"","model","tokenizer","beforeAll","ModernBertModel","from_pretrained","DEFAULT_MODEL_OPTIONS","PreTrainedTokenizer","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","inputs","\"hello\"","last_hidden_state","expect","dims","toEqual","1","3","32","mean","item","toBeCloseTo","0.08922556787729263","5","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","\"hello world\"","padding","true","2","4","0.048988230526447296","\"sequence_length > local_attention_window\"","text","\"The sun cast long shadows across the weathered cobblestones as Thomas made his way through the ancient city. The evening air carried whispers of autumn, rustling through the golden leaves that danced and swirled around his feet. His thoughts wandered to the events that had brought him here, to this moment, in this forgotten corner of the world. The old buildings loomed above him, their facades telling stories of centuries past. Windows reflected the dying light of day, creating a kaleidoscope of amber and rose that painted the narrow streets. The distant sound of church bells echoed through the maze of alleyways, marking time's steady march forward. In his pocket, he fingered the small brass key that had belonged to his grandfather. Its weight seemed to grow heavier with each step, a tangible reminder of the promise he had made. The mystery of its purpose had consumed his thoughts for weeks, leading him through archives and dusty libraries, through conversations with local historians and elderly residents who remembered the old days. As the evening deepened into dusk, streetlamps flickered to life one by one, creating pools of warm light that guided his way. The smell of wood smoke and distant cooking fires drifted through the air, reminding him of childhood evenings spent by the hearth, listening to his grandfather's tales of hidden treasures and secret passages. His footsteps echoed against the stone walls, a rhythmic accompaniment to his journey. Each step brought him closer to his destination, though uncertainty still clouded his mind about what he might find. The old map in his other pocket, creased and worn from constant consultation, had led him this far. The street ahead narrowed, and the buildings seemed to lean in closer, their upper stories nearly touching above his head. The air grew cooler in this shadowed passage, and his breath formed small clouds in front of him. Something about this place felt different, charged with possibility and ancient secrets. He walked down the [MASK]\"","397","0.06889555603265762","afterAll","dispose","MAX_MODEL_DISPOSE_TIME","\"ModernBertForMaskedLM\"","\"hf-internal-testing/tiny-random-ModernBertForMaskedLM\"","texts","\"The goal of life is [MASK].\"","\"Paris is the [MASK] of France.\"","ModernBertForMaskedLM","0","logits","9","50368","0.0053214821964502335","0.009154772385954857","\"ModernBertForSequenceClassification\"","\"hf-internal-testing/tiny-random-ModernBertForSequenceClassification\"","ModernBertForSequenceClassification","target","0.7050137519836426","2.343430519104004","tolist","toBeCloseToNested","2.6860175132751465","3.993380546569824","\"ModernBertForTokenClassification\"","\"hf-internal-testing/tiny-random-ModernBertForTokenClassification\"","ModernBertForTokenClassification","1.0337047576904297","1.3397092819213867"]},"operators":{"distinct":11,"total":306,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)",":"]}},"paramCount":0,"sloc":{"logical":180,"physical":181}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":181,"lineStart":1,"maintainability":109.048,"methods":[{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["describe","\"ModernBertModel\"","\"ModernBertForMaskedLM\"","\"ModernBertForSequenceClassification\"","\"ModernBertForTokenClassification\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":176},"errors":[],"lineEnd":180,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.043,"difficulty":3.269,"effort":422.606,"length":31,"time":23.478,"vocabulary":18,"volume":129.268,"operands":{"distinct":13,"total":17,"identifiers":["model_id","\"hf-internal-testing/tiny-random-ModernBertModel\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","\"sequence_length > local_attention_window\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":50},"errors":[],"lineEnd":55,"lineStart":6,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","ModernBertModel","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","PreTrainedTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":16,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.066,"difficulty":5.25,"effort":1035.055,"length":43,"time":57.503,"vocabulary":24,"volume":197.153,"operands":{"distinct":16,"total":21,"identifiers":["inputs","tokenizer","\"hello\"","last_hidden_state","model","expect","dims","toEqual","1","3","32","mean","item","toBeCloseTo","0.08922556787729263","5"]},"operators":{"distinct":8,"total":22,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":11,"physical":6},"errors":[],"lineEnd":25,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.078,"difficulty":5.053,"effort":1177.21,"length":49,"time":65.401,"vocabulary":27,"volume":232.989,"operands":{"distinct":19,"total":24,"identifiers":["inputs","tokenizer","\"hello\"","\"hello world\"","padding","true","last_hidden_state","model","expect","dims","toEqual","2","4","32","mean","item","toBeCloseTo","0.048988230526447296","5"]},"operators":{"distinct":8,"total":25,"identifiers":["const","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":6},"errors":[],"lineEnd":36,"lineStart":31,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.073,"difficulty":5.412,"effort":1181.178,"length":47,"time":65.621,"vocabulary":25,"volume":218.261,"operands":{"distinct":17,"total":23,"identifiers":["text","\"The sun cast long shadows across the weathered cobblestones as Thomas made his way through the ancient city. The evening air carried whispers of autumn, rustling through the golden leaves that danced and swirled around his feet. His thoughts wandered to the events that had brought him here, to this moment, in this forgotten corner of the world. The old buildings loomed above him, their facades telling stories of centuries past. Windows reflected the dying light of day, creating a kaleidoscope of amber and rose that painted the narrow streets. The distant sound of church bells echoed through the maze of alleyways, marking time's steady march forward. In his pocket, he fingered the small brass key that had belonged to his grandfather. Its weight seemed to grow heavier with each step, a tangible reminder of the promise he had made. The mystery of its purpose had consumed his thoughts for weeks, leading him through archives and dusty libraries, through conversations with local historians and elderly residents who remembered the old days. As the evening deepened into dusk, streetlamps flickered to life one by one, creating pools of warm light that guided his way. The smell of wood smoke and distant cooking fires drifted through the air, reminding him of childhood evenings spent by the hearth, listening to his grandfather's tales of hidden treasures and secret passages. His footsteps echoed against the stone walls, a rhythmic accompaniment to his journey. Each step brought him closer to his destination, though uncertainty still clouded his mind about what he might find. The old map in his other pocket, creased and worn from constant consultation, had led him this far. The street ahead narrowed, and the buildings seemed to lean in closer, their upper stories nearly touching above his head. The air grew cooler in this shadowed passage, and his breath formed small clouds in front of him. Something about this place felt different, charged with possibility and ancient secrets. He walked down the [MASK]\"","inputs","tokenizer","last_hidden_state","model","expect","dims","toEqual","1","397","32","mean","item","toBeCloseTo","0.06889555603265762","5"]},"operators":{"distinct":8,"total":24,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":12,"physical":7},"errors":[],"lineEnd":48,"lineStart":42,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":54,"lineStart":52,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.049,"difficulty":3.967,"effort":583.74,"length":33,"time":32.43,"vocabulary":22,"volume":147.161,"operands":{"distinct":15,"total":17,"identifiers":["model_id","\"hf-internal-testing/tiny-random-ModernBertForMaskedLM\"","texts","\"The goal of life is [MASK].\"","\"Paris is the [MASK] of France.\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":7,"total":16,"identifiers":["const","=","[]",",","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":40},"errors":[],"lineEnd":96,"lineStart":57,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","ModernBertForMaskedLM","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","PreTrainedTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":69,"lineStart":66,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.067,"difficulty":4.529,"effort":913.756,"length":44,"time":50.764,"vocabulary":24,"volume":201.738,"operands":{"distinct":17,"total":22,"identifiers":["inputs","tokenizer","texts","0","logits","model","expect","dims","toEqual","1","9","50368","mean","item","toBeCloseTo","0.0053214821964502335","5"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","()","[]","{}",".",","]}},"paramCount":0,"sloc":{"logical":11,"physical":6},"errors":[],"lineEnd":78,"lineStart":73,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.072,"difficulty":5.111,"effort":1105.126,"length":46,"time":61.396,"vocabulary":26,"volume":216.22,"operands":{"distinct":18,"total":23,"identifiers":["inputs","tokenizer","texts","padding","true","logits","model","expect","dims","toEqual","2","9","50368","mean","item","toBeCloseTo","0.009154772385954857","5"]},"operators":{"distinct":8,"total":23,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":12,"physical":6},"errors":[],"lineEnd":89,"lineStart":84,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":95,"lineStart":93,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.035,"difficulty":2.917,"effort":309.966,"length":26,"time":17.22,"vocabulary":17,"volume":106.274,"operands":{"distinct":12,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-ModernBertForSequenceClassification\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":43},"errors":[],"lineEnd":140,"lineStart":98,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","ModernBertForSequenceClassification","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","PreTrainedTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":108,"lineStart":105,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.07,"difficulty":5.5,"effort":1159.996,"length":46,"time":64.444,"vocabulary":24,"volume":210.908,"operands":{"distinct":16,"total":22,"identifiers":["inputs","tokenizer","\"hello\"","logits","model","target","0.7050137519836426","2.343430519104004","expect","dims","toEqual","1","2","tolist","toBeCloseToNested","5"]},"operators":{"distinct":8,"total":24,"identifiers":["const","=","()","{}","[]",",","- (prefix)","."]}},"paramCount":0,"sloc":{"logical":11,"physical":7},"errors":[],"lineEnd":118,"lineStart":112,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.096,"difficulty":6.075,"effort":1741.222,"length":59,"time":96.735,"vocabulary":29,"volume":286.621,"operands":{"distinct":20,"total":27,"identifiers":["inputs","tokenizer","\"hello\"","\"hello world\"","padding","true","logits","model","target","0.7050137519836426","2.343430519104004","2.6860175132751465","3.993380546569824","expect","dims","toEqual","2","tolist","toBeCloseToNested","5"]},"operators":{"distinct":9,"total":32,"identifiers":["const","=","()","[]",",","{}",":","- (prefix)","."]}},"paramCount":0,"sloc":{"logical":12,"physical":10},"errors":[],"lineEnd":133,"lineStart":124,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":139,"lineStart":137,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.035,"difficulty":2.917,"effort":309.966,"length":26,"time":17.22,"vocabulary":17,"volume":106.274,"operands":{"distinct":12,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-ModernBertForTokenClassification\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":38},"errors":[],"lineEnd":179,"lineStart":142,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","ModernBertForTokenClassification","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","PreTrainedTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":152,"lineStart":149,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.063,"difficulty":4.594,"effort":872.765,"length":42,"time":48.487,"vocabulary":23,"volume":189.99,"operands":{"distinct":16,"total":21,"identifiers":["inputs","tokenizer","\"hello\"","logits","model","expect","dims","toEqual","1","3","2","mean","item","toBeCloseTo","1.0337047576904297","5"]},"operators":{"distinct":7,"total":21,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":11,"physical":6},"errors":[],"lineEnd":161,"lineStart":156,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.079,"difficulty":6,"effort":1426.466,"length":50,"time":79.248,"vocabulary":27,"volume":237.744,"operands":{"distinct":18,"total":24,"identifiers":["inputs","tokenizer","\"hello\"","\"hello world\"","padding","true","logits","model","expect","dims","toEqual","2","4","mean","item","toBeCloseTo","1.3397092819213867","5"]},"operators":{"distinct":9,"total":26,"identifiers":["const","=","()","[]",",","{}",":",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":12,"physical":6},"errors":[],"lineEnd":172,"lineStart":167,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":178,"lineStart":176,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.556,"halstead":{"bugs":0.058,"difficulty":1.081,"effort":4309.62,"length":27.261,"time":239.423,"vocabulary":3.565,"volume":173.312,"operands":{"distinct":3.087,"total":13.957},"operators":{"distinct":0.478,"total":13.304}},"paramCount":0,"sloc":{"logical":7.826,"physical":7.87}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":28.397,"halstead":{"bugs":0.041,"difficulty":3.178,"effort":577.06,"length":28.455,"time":32.059,"vocabulary":16.273,"volume":124.22,"operands":{"distinct":11.364,"total":14.591},"operators":{"distinct":4.909,"total":13.864}},"paramCount":0,"sloc":{"logical":8.136,"physical":19.773}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/moonshine/test_feature_extraction_moonshine.js","testCases":1,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  21 |         const { input_values } = await feature_extractor(audio);\n  22 |         expect(input_values.dims).toEqual([1, 208000]);\n> 23 |         expect(input_values.mean().item()).toBeCloseTo(-1.5654930507480458e-7, 6);\n     |                                                                               ^ Magic Number\n  24 |         expect(input_values.data[0]).toBeCloseTo(0.0067138671875, 6);\n  25 |         expect(input_values.data.at(-1)).toBeCloseTo(-0.013427734375, 6);\n  26 |       },","start":{"line":23,"column":79,"index":929}},{"frame":"  22 |         expect(input_values.dims).toEqual([1, 208000]);\n  23 |         expect(input_values.mean().item()).toBeCloseTo(-1.5654930507480458e-7, 6);\n> 24 |         expect(input_values.data[0]).toBeCloseTo(0.0067138671875, 6);\n     |                                                 ^ Magic Number\n  25 |         expect(input_values.data.at(-1)).toBeCloseTo(-0.013427734375, 6);\n  26 |       },\n  27 |       MAX_TEST_EXECUTION_TIME,","start":{"line":24,"column":49,"index":982}},{"frame":"  22 |         expect(input_values.dims).toEqual([1, 208000]);\n  23 |         expect(input_values.mean().item()).toBeCloseTo(-1.5654930507480458e-7, 6);\n> 24 |         expect(input_values.data[0]).toBeCloseTo(0.0067138671875, 6);\n     |                                                                  ^ Magic Number\n  25 |         expect(input_values.data.at(-1)).toBeCloseTo(-0.013427734375, 6);\n  26 |       },\n  27 |       MAX_TEST_EXECUTION_TIME,","start":{"line":24,"column":66,"index":999}},{"frame":"  23 |         expect(input_values.mean().item()).toBeCloseTo(-1.5654930507480458e-7, 6);\n  24 |         expect(input_values.data[0]).toBeCloseTo(0.0067138671875, 6);\n> 25 |         expect(input_values.data.at(-1)).toBeCloseTo(-0.013427734375, 6);\n     |                                                                      ^ Magic Number\n  26 |       },\n  27 |       MAX_TEST_EXECUTION_TIME,\n  28 |     );","start":{"line":25,"column":70,"index":1073}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":18.519,"halstead":{"bugs":0.171,"difficulty":7.903,"effort":4064.827,"length":96,"time":225.824,"vocabulary":41,"volume":514.325,"operands":{"distinct":31,"total":49,"identifiers":["describe","\"MoonshineFeatureExtractor\"","model_id","\"onnx-community/moonshine-tiny-ONNX\"","feature_extractor","beforeAll","AutoFeatureExtractor","from_pretrained","MAX_FEATURE_EXTRACTOR_LOAD_TIME","it","\"default\"","audio","load_cached_audio","\"mlk\"","input_values","expect","dims","toEqual","1","208000","mean","item","toBeCloseTo","1.5654930507480458e-7","6","data","0","0.0067138671875","at","0.013427734375","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":10,"total":47,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":27,"physical":31}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":31,"lineStart":1,"maintainability":120.764,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"MoonshineFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":25},"errors":[],"lineEnd":30,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"onnx-community/moonshine-tiny-ONNX\"","feature_extractor","beforeAll","MAX_FEATURE_EXTRACTOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":22},"errors":[],"lineEnd":29,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["feature_extractor","AutoFeatureExtractor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.111,"difficulty":7,"effort":2321.952,"length":69,"time":128.997,"vocabulary":28,"volume":331.707,"operands":{"distinct":20,"total":35,"identifiers":["audio","load_cached_audio","\"mlk\"","input_values","feature_extractor","expect","dims","toEqual","1","208000","mean","item","toBeCloseTo","1.5654930507480458e-7","6","data","0","0.0067138671875","at","0.013427734375"]},"operators":{"distinct":8,"total":34,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":16,"physical":8},"errors":[],"lineEnd":26,"lineStart":19,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.034,"difficulty":1.581,"effort":812.965,"length":19.2,"time":45.165,"vocabulary":8.2,"volume":102.865,"operands":{"distinct":6.2,"total":9.8},"operators":{"distinct":2,"total":9.4}},"paramCount":0,"sloc":{"logical":5.4,"physical":6.2}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.729,"halstead":{"bugs":0.035,"difficulty":3,"effort":624.549,"length":23.75,"time":34.697,"vocabulary":13,"volume":103.716,"operands":{"distinct":8.5,"total":12.25},"operators":{"distinct":4.5,"total":11.5}},"paramCount":0,"sloc":{"logical":6.5,"physical":14.5}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/moonshine/test_modeling_moonshine.js","testCases":2,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  27 |         });\n  28 |         expect(logits.dims).toEqual([1, 1, 32768]);\n> 29 |         expect(logits.mean().item()).toBeCloseTo(0.016709428280591965, 6);\n     |                                                 ^ Magic Number\n  30 |       },\n  31 |       MAX_TEST_EXECUTION_TIME,\n  32 |     );","start":{"line":29,"column":49,"index":1133}},{"frame":"  27 |         });\n  28 |         expect(logits.dims).toEqual([1, 1, 32768]);\n> 29 |         expect(logits.mean().item()).toBeCloseTo(0.016709428280591965, 6);\n     |                                                                       ^ Magic Number\n  30 |       },\n  31 |       MAX_TEST_EXECUTION_TIME,\n  32 |     );","start":{"line":29,"column":71,"index":1155}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":16.667,"halstead":{"bugs":0.274,"difficulty":10,"effort":8229.489,"length":143,"time":457.194,"vocabulary":54,"volume":822.949,"operands":{"distinct":42,"total":70,"identifiers":["describe","\"MoonshineForConditionalGeneration\"","model_id","\"hf-internal-testing/tiny-random-MoonshineForConditionalGeneration\"","model","processor","beforeAll","MoonshineForConditionalGeneration","from_pretrained","DEFAULT_MODEL_OPTIONS","Wav2Vec2Processor","MAX_MODEL_LOAD_TIME","input_values","Float32Array","16000","it","\"forward\"","inputs","logits","decoder_input_ids","ones","1","expect","dims","toEqual","32768","mean","item","toBeCloseTo","0.016709428280591965","6","MAX_TEST_EXECUTION_TIME","\"batch_size=1\"","generate_ids","generate","max_new_tokens","3","new_tokens","tolist","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":12,"total":73,"identifiers":["function=>","()","const","=","let",".","new","{}","... (spread)",":","[]",","]}},"paramCount":0,"sloc":{"logical":42,"physical":51}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":51,"lineStart":1,"maintainability":117.796,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"MoonshineForConditionalGeneration\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":46},"errors":[],"lineEnd":50,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.047,"difficulty":3.4,"effort":477.884,"length":32,"time":26.549,"vocabulary":21,"volume":140.554,"operands":{"distinct":15,"total":17,"identifiers":["model_id","\"hf-internal-testing/tiny-random-MoonshineForConditionalGeneration\"","model","processor","beforeAll","MAX_MODEL_LOAD_TIME","input_values","Float32Array","16000","it","\"forward\"","MAX_TEST_EXECUTION_TIME","\"batch_size=1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":6,"total":15,"identifiers":["const","=","let","()","function=>","new"]}},"paramCount":0,"sloc":{"logical":12,"physical":44},"errors":[],"lineEnd":49,"lineStart":6,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","MoonshineForConditionalGeneration","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","processor","Wav2Vec2Processor"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":16,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.081,"difficulty":6.618,"effort":1617.504,"length":52,"time":89.861,"vocabulary":26,"volume":244.423,"operands":{"distinct":17,"total":25,"identifiers":["inputs","processor","input_values","logits","model","decoder_input_ids","ones","1","expect","dims","toEqual","32768","mean","item","toBeCloseTo","0.016709428280591965","6"]},"operators":{"distinct":9,"total":27,"identifiers":["const","=","()","{}","... (spread)",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":13,"physical":9},"errors":[],"lineEnd":30,"lineStart":22,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.054,"difficulty":5.625,"effort":914.151,"length":37,"time":50.786,"vocabulary":21,"volume":162.516,"operands":{"distinct":12,"total":15,"identifiers":["inputs","processor","input_values","generate_ids","model","generate","max_new_tokens","3","new_tokens","expect","tolist","toEqual"]},"operators":{"distinct":9,"total":22,"identifiers":["const","=","()",".","{}","... (spread)",":","[]",","]}},"paramCount":0,"sloc":{"logical":9,"physical":7},"errors":[],"lineEnd":42,"lineStart":36,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":48,"lineStart":46,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.381,"halstead":{"bugs":0.039,"difficulty":1.429,"effort":1175.641,"length":20.429,"time":65.313,"vocabulary":7.714,"volume":117.564,"operands":{"distinct":6,"total":10},"operators":{"distinct":1.714,"total":10.429}},"paramCount":0,"sloc":{"logical":6,"physical":7.286}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":33.689,"halstead":{"bugs":0.034,"difficulty":3.095,"effort":518.94,"length":23.667,"time":28.83,"vocabulary":14,"volume":101.22,"operands":{"distinct":9.167,"total":11.667},"operators":{"distinct":4.833,"total":12}},"paramCount":0,"sloc":{"logical":6.833,"physical":18.833}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/musicgen/test_modeling_musicgen.js","testCases":3,"smells":5,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  28 |         const { logits } = await model({ ...inputs, decoder_input_ids });\n  29 |         expect(logits.dims).toEqual([8, 1, 99]);\n> 30 |         expect(logits.mean().item()).toBeCloseTo(-0.0018370470497757196, 4);\n     |                                                                         ^ Magic Number\n  31 |       },\n  32 |       MAX_TEST_EXECUTION_TIME,\n  33 |     );","start":{"line":30,"column":73,"index":1612}},{"frame":"  39 |         const audio_values = await model.generate({ ...inputs, max_length: 10 });\n  40 |         expect(audio_values.dims).toEqual([1, 1, 1920]);\n> 41 |         expect(audio_values.mean().item()).toBeCloseTo(0.16644205152988434, 5);\n     |                                                       ^ Magic Number\n  42 |       },\n  43 |       MAX_TEST_EXECUTION_TIME,\n  44 |     );","start":{"line":41,"column":55,"index":1952}},{"frame":"  39 |         const audio_values = await model.generate({ ...inputs, max_length: 10 });\n  40 |         expect(audio_values.dims).toEqual([1, 1, 1920]);\n> 41 |         expect(audio_values.mean().item()).toBeCloseTo(0.16644205152988434, 5);\n     |                                                                            ^ Magic Number\n  42 |       },\n  43 |       MAX_TEST_EXECUTION_TIME,\n  44 |     );","start":{"line":41,"column":76,"index":1973}},{"frame":"  50 |         const audio_values = await model.generate({ ...inputs, max_length: 10 });\n  51 |         expect(audio_values.dims).toEqual([2, 1, 1920]);\n> 52 |         expect(audio_values.mean().item()).toBeCloseTo(0.16644206643104553, 5);\n     |                                                       ^ Magic Number\n  53 |       },\n  54 |       MAX_TEST_EXECUTION_TIME,\n  55 |     );","start":{"line":52,"column":55,"index":2329}},{"frame":"  50 |         const audio_values = await model.generate({ ...inputs, max_length: 10 });\n  51 |         expect(audio_values.dims).toEqual([2, 1, 1920]);\n> 52 |         expect(audio_values.mean().item()).toBeCloseTo(0.16644206643104553, 5);\n     |                                                                            ^ Magic Number\n  53 |       },\n  54 |       MAX_TEST_EXECUTION_TIME,\n  55 |     );","start":{"line":52,"column":76,"index":2350}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":12.903,"halstead":{"bugs":0.501,"difficulty":14.14,"effort":21234.202,"length":245,"time":1179.678,"vocabulary":70,"volume":1501.674,"operands":{"distinct":57,"total":124,"identifiers":["describe","\"MusicgenForConditionalGeneration\"","model_id","\"hf-internal-testing/tiny-random-MusicgenForConditionalGeneration\"","texts","\"80s pop track with bassy drums and synth\"","\"90s rock song with loud guitars and heavy drums\"","model","tokenizer","beforeAll","MusicgenForConditionalGeneration","from_pretrained","DEFAULT_MODEL_OPTIONS","T5Tokenizer","MAX_MODEL_LOAD_TIME","it","\"forward\"","inputs","padding","true","pad_token_id","BigInt","generation_config","decoder_input_ids","full","input_ids","dims","0","config","decoder","num_codebooks","1","logits","expect","toEqual","8","99","mean","item","toBeCloseTo","0.0018370470497757196","4","MAX_TEST_EXECUTION_TIME","\"batch_size=1\"","audio_values","generate","max_length","10","1920","0.16644205152988434","5","\"batch_size>1\"","2","0.16644206643104553","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":13,"total":121,"identifiers":["function=>","()","const","=","[]",",","let",".","{}",":","*","... (spread)","- (prefix)"]}},"paramCount":0,"sloc":{"logical":62,"physical":62}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":62,"lineStart":1,"maintainability":110.864,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"MusicgenForConditionalGeneration\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":57},"errors":[],"lineEnd":61,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.057,"difficulty":4.375,"effort":752.042,"length":38,"time":41.78,"vocabulary":23,"volume":171.895,"operands":{"distinct":16,"total":20,"identifiers":["model_id","\"hf-internal-testing/tiny-random-MusicgenForConditionalGeneration\"","texts","\"80s pop track with bassy drums and synth\"","\"90s rock song with loud guitars and heavy drums\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"forward\"","MAX_TEST_EXECUTION_TIME","\"batch_size=1\"","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":7,"total":18,"identifiers":["const","=","[]",",","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":14,"physical":55},"errors":[],"lineEnd":60,"lineStart":6,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","MusicgenForConditionalGeneration","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","T5Tokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":19,"lineStart":16,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.15,"difficulty":8.25,"effort":3706.388,"length":85,"time":205.91,"vocabulary":39,"volume":449.259,"operands":{"distinct":28,"total":42,"identifiers":["inputs","tokenizer","texts","padding","true","pad_token_id","BigInt","model","generation_config","decoder_input_ids","full","input_ids","dims","0","config","decoder","num_codebooks","1","logits","expect","toEqual","8","99","mean","item","toBeCloseTo","0.0018370470497757196","4"]},"operators":{"distinct":11,"total":43,"identifiers":["const","=","()","{}",":",".","[]",",","*","... (spread)","- (prefix)"]}},"paramCount":0,"sloc":{"logical":17,"physical":9},"errors":[],"lineEnd":31,"lineStart":23,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.079,"difficulty":5.684,"effort":1338.975,"length":49,"time":74.387,"vocabulary":28,"volume":235.56,"operands":{"distinct":19,"total":24,"identifiers":["inputs","tokenizer","texts","0","audio_values","model","generate","max_length","10","expect","dims","toEqual","1","1920","mean","item","toBeCloseTo","0.16644205152988434","5"]},"operators":{"distinct":9,"total":25,"identifiers":["const","=","()","[]",".","{}","... (spread)",":",","]}},"paramCount":0,"sloc":{"logical":11,"physical":6},"errors":[],"lineEnd":42,"lineStart":37,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.083,"difficulty":5.357,"effort":1340.633,"length":51,"time":74.48,"vocabulary":30,"volume":250.251,"operands":{"distinct":21,"total":25,"identifiers":["inputs","tokenizer","texts","padding","true","audio_values","model","generate","max_length","10","expect","dims","toEqual","2","1","1920","mean","item","toBeCloseTo","0.16644206643104553","5"]},"operators":{"distinct":9,"total":26,"identifiers":["const","=","()","{}",":",".","... (spread)","[]",","]}},"paramCount":0,"sloc":{"logical":12,"physical":6},"errors":[],"lineEnd":53,"lineStart":48,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":59,"lineStart":57,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.613,"halstead":{"bugs":0.063,"difficulty":1.768,"effort":2654.275,"length":30.625,"time":147.46,"vocabulary":8.75,"volume":187.709,"operands":{"distinct":7.125,"total":15.5},"operators":{"distinct":1.625,"total":15.125}},"paramCount":0,"sloc":{"logical":7.75,"physical":7.75}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":29.35,"halstead":{"bugs":0.056,"difficulty":3.799,"effort":1034.591,"length":34.857,"time":57.477,"vocabulary":19.429,"volume":166.685,"operands":{"distinct":13.571,"total":17.714},"operators":{"distinct":5.857,"total":17.143}},"paramCount":0,"sloc":{"logical":8.714,"physical":20}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/nougat/test_image_processing_nougat.js","testCases":1,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  23 |\n  24 |         expect(pixel_values.dims).toEqual([1, 3, 896, 672]);\n> 25 |         expect(pixel_values.mean().item()).toBeCloseTo(1.8447155005897355, 6);\n     |                                                       ^ Magic Number\n  26 |\n  27 |         expect(original_sizes).toEqual([[850, 685]]);\n  28 |         expect(reshaped_input_sizes).toEqual([[833, 672]]);","start":{"line":25,"column":55,"index":972}},{"frame":"  23 |\n  24 |         expect(pixel_values.dims).toEqual([1, 3, 896, 672]);\n> 25 |         expect(pixel_values.mean().item()).toBeCloseTo(1.8447155005897355, 6);\n     |                                                                           ^ Magic Number\n  26 |\n  27 |         expect(original_sizes).toEqual([[850, 685]]);\n  28 |         expect(reshaped_input_sizes).toEqual([[833, 672]]);","start":{"line":25,"column":75,"index":992}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.174,"difficulty":6.818,"effort":3566.283,"length":97,"time":198.127,"vocabulary":42,"volume":523.055,"operands":{"distinct":33,"total":50,"identifiers":["describe","\"NougatImageProcessor\"","model_id","\"Xenova/nougat-small\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"padding after normalization\"","image","load_cached_image","\"paper\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","896","672","mean","item","toBeCloseTo","1.8447155005897355","6","850","685","833","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":9,"total":47,"identifiers":["function=>","()","const","=","let",".","{}","[]",","]}},"paramCount":0,"sloc":{"logical":28,"physical":34}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":34,"lineStart":1,"maintainability":120.622,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"NougatImageProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":28},"errors":[],"lineEnd":33,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/nougat-small\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"padding after normalization\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":32,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":16,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.113,"difficulty":5.727,"effort":1947.609,"length":70,"time":108.2,"vocabulary":29,"volume":340.059,"operands":{"distinct":22,"total":36,"identifiers":["image","load_cached_image","\"paper\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","896","672","mean","item","toBeCloseTo","1.8447155005897355","6","850","685","833"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":29,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.035,"difficulty":1.364,"effort":713.257,"length":19.4,"time":39.625,"vocabulary":8.4,"volume":104.611,"operands":{"distinct":6.6,"total":10},"operators":{"distinct":1.8,"total":9.4}},"paramCount":0,"sloc":{"logical":5.6,"physical":6.8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.637,"halstead":{"bugs":0.035,"difficulty":2.682,"effort":530.963,"length":24,"time":29.498,"vocabulary":13.25,"volume":105.804,"operands":{"distinct":9,"total":12.5},"operators":{"distinct":4.25,"total":11.5}},"paramCount":0,"sloc":{"logical":6.75,"physical":16.25}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/owlvit/test_image_processing_owlvit.js","testCases":1,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  21 |\n  22 |         expect(pixel_values.dims).toEqual([1, 3, 768, 768]);\n> 23 |         expect(pixel_values.mean().item()).toBeCloseTo(0.250620447910435, 6);\n     |                                                       ^ Magic Number\n  24 |\n  25 |         expect(original_sizes).toEqual([[480, 640]]);\n  26 |         expect(reshaped_input_sizes).toEqual([[768, 768]]);","start":{"line":23,"column":55,"index":858}},{"frame":"  21 |\n  22 |         expect(pixel_values.dims).toEqual([1, 3, 768, 768]);\n> 23 |         expect(pixel_values.mean().item()).toBeCloseTo(0.250620447910435, 6);\n     |                                                                          ^ Magic Number\n  24 |\n  25 |         expect(original_sizes).toEqual([[480, 640]]);\n  26 |         expect(reshaped_input_sizes).toEqual([[768, 768]]);","start":{"line":23,"column":74,"index":877}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.172,"difficulty":7.258,"effort":3746.809,"length":97,"time":208.156,"vocabulary":40,"volume":516.227,"operands":{"distinct":31,"total":50,"identifiers":["describe","\"OwlViTFeatureExtractor\"","model_id","\"Xenova/owlvit-base-patch32\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"cats\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","768","mean","item","toBeCloseTo","0.250620447910435","6","480","640","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":9,"total":47,"identifiers":["function=>","()","const","=","let",".","{}","[]",","]}},"paramCount":0,"sloc":{"logical":28,"physical":32}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":32,"lineStart":1,"maintainability":120.453,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"OwlViTFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":26},"errors":[],"lineEnd":31,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/owlvit-base-patch32\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":30,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":14,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.111,"difficulty":6.3,"effort":2096.905,"length":70,"time":116.495,"vocabulary":27,"volume":332.842,"operands":{"distinct":20,"total":36,"identifiers":["image","load_cached_image","\"cats\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","768","mean","item","toBeCloseTo","0.250620447910435","6","480","640"]},"operators":{"distinct":7,"total":34,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":27,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.034,"difficulty":1.452,"effort":749.362,"length":19.4,"time":41.631,"vocabulary":8,"volume":103.245,"operands":{"distinct":6.2,"total":10},"operators":{"distinct":1.8,"total":9.4}},"paramCount":0,"sloc":{"logical":5.6,"physical":6.4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.637,"halstead":{"bugs":0.035,"difficulty":2.825,"effort":568.287,"length":24,"time":31.572,"vocabulary":12.75,"volume":104,"operands":{"distinct":8.5,"total":12.5},"operators":{"distinct":4.25,"total":11.5}},"paramCount":0,"sloc":{"logical":6.75,"physical":15.75}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/paligemma/test_modeling_paligemma.js","testCases":2,"smells":1,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  29 |         const { logits } = await model(inputs);\n  30 |         expect(logits.dims).toEqual([1, 264, 257216]);\n> 31 |         expect(logits.mean().item()).toBeCloseTo(-0.0023024685215204954, 6);\n     |                                                                         ^ Magic Number\n  32 |       },\n  33 |       MAX_TEST_EXECUTION_TIME,\n  34 |     );","start":{"line":31,"column":73,"index":1245}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":15.556,"halstead":{"bugs":0.384,"difficulty":12.019,"effort":13852.43,"length":190,"time":769.579,"vocabulary":67,"volume":1152.557,"operands":{"distinct":53,"total":91,"identifiers":["text","\"<image>What is on the flower?\"","dims","224","3","image","RawImage","Uint8ClampedArray","0","1","2","fill","255","describe","\"PaliGemmaForConditionalGeneration\"","model_id","\"hf-internal-testing/tiny-random-PaliGemmaForConditionalGeneration\"","model","processor","beforeAll","PaliGemmaForConditionalGeneration","from_pretrained","DEFAULT_MODEL_OPTIONS","PaliGemmaProcessor","MAX_MODEL_LOAD_TIME","it","\"forward\"","inputs","logits","expect","toEqual","264","257216","mean","item","toBeCloseTo","0.0023024685215204954","6","MAX_TEST_EXECUTION_TIME","\"batch_size=1\"","generate_ids","generate","max_new_tokens","10","new_tokens","slice","null","input_ids","at","tolist","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":14,"total":99,"identifiers":["function=>","const","=","[]",",","new","()",".","*","... (spread)","let","{}","- (prefix)",":"]}},"paramCount":0,"sloc":{"logical":45,"physical":53}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":53,"lineStart":1,"maintainability":114.897,"methods":[{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.063,"difficulty":6.667,"effort":1269.321,"length":41,"time":70.518,"vocabulary":25,"volume":190.398,"operands":{"distinct":15,"total":20,"identifiers":["text","\"<image>What is on the flower?\"","dims","224","3","image","RawImage","Uint8ClampedArray","0","1","2","fill","255","describe","\"PaliGemmaForConditionalGeneration\""]},"operators":{"distinct":10,"total":21,"identifiers":["const","=","[]",",","new","()",".","*","... (spread)","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":48},"errors":[],"lineEnd":52,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.035,"difficulty":2.917,"effort":309.966,"length":26,"time":17.22,"vocabulary":17,"volume":106.274,"operands":{"distinct":12,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-PaliGemmaForConditionalGeneration\"","model","processor","beforeAll","MAX_MODEL_LOAD_TIME","it","\"forward\"","MAX_TEST_EXECUTION_TIME","\"batch_size=1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":12,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":40},"errors":[],"lineEnd":51,"lineStart":12,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","PaliGemmaForConditionalGeneration","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","processor","PaliGemmaProcessor"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":22,"lineStart":19,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.068,"difficulty":5.176,"effort":1057.707,"length":44,"time":58.761,"vocabulary":25,"volume":204.33,"operands":{"distinct":17,"total":22,"identifiers":["inputs","processor","image","text","logits","model","expect","dims","toEqual","1","264","257216","mean","item","toBeCloseTo","0.0023024685215204954","6"]},"operators":{"distinct":8,"total":22,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":11,"physical":7},"errors":[],"lineEnd":32,"lineStart":26,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.099,"difficulty":6.316,"effort":1871.601,"length":61,"time":103.978,"vocabulary":29,"volume":296.337,"operands":{"distinct":19,"total":24,"identifiers":["inputs","processor","image","text","generate_ids","model","generate","max_new_tokens","10","new_tokens","slice","null","input_ids","dims","at","1","expect","tolist","toEqual"]},"operators":{"distinct":10,"total":37,"identifiers":["const","=","()",".","{}","... (spread)",":","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":11,"physical":7},"errors":[],"lineEnd":44,"lineStart":38,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":50,"lineStart":48,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.222,"halstead":{"bugs":0.055,"difficulty":1.717,"effort":1978.919,"length":27.143,"time":109.94,"vocabulary":9.571,"volume":164.651,"operands":{"distinct":7.571,"total":13},"operators":{"distinct":2,"total":14.143}},"paramCount":0,"sloc":{"logical":6.429,"physical":7.571}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":28.157,"halstead":{"bugs":0.047,"difficulty":3.834,"effort":767.449,"length":31.5,"time":42.636,"vocabulary":18,"volume":141.528,"operands":{"distinct":12,"total":15.167},"operators":{"distinct":6,"total":16.333}},"paramCount":0,"sloc":{"logical":7.333,"physical":18.167}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/patchtsmixer/test_modeling_patchtsmixer.js","testCases":2,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  28 |         const { num_input_channels, num_patches, d_model } = model.config;\n  29 |         expect(last_hidden_state.dims).toEqual([dims[0], num_input_channels, num_patches, d_model]);\n> 30 |         expect(last_hidden_state.mean().item()).toBeCloseTo(0.03344963490962982, 5);\n     |                                                            ^ Magic Number\n  31 |       },\n  32 |       MAX_TEST_EXECUTION_TIME,\n  33 |     );","start":{"line":30,"column":60,"index":1117}},{"frame":"  28 |         const { num_input_channels, num_patches, d_model } = model.config;\n  29 |         expect(last_hidden_state.dims).toEqual([dims[0], num_input_channels, num_patches, d_model]);\n> 30 |         expect(last_hidden_state.mean().item()).toBeCloseTo(0.03344963490962982, 5);\n     |                                                                                 ^ Magic Number\n  31 |       },\n  32 |       MAX_TEST_EXECUTION_TIME,\n  33 |     );","start":{"line":30,"column":81,"index":1138}},{"frame":"  54 |         const { prediction_length, num_input_channels } = model.config;\n  55 |         expect(prediction_outputs.dims).toEqual([dims[0], prediction_length, num_input_channels]);\n> 56 |         expect(prediction_outputs.mean().item()).toBeCloseTo(0.5064773559570312, 5);\n     |                                                             ^ Magic Number\n  57 |       },\n  58 |       MAX_TEST_EXECUTION_TIME,\n  59 |     );","start":{"line":56,"column":61,"index":1967}},{"frame":"  54 |         const { prediction_length, num_input_channels } = model.config;\n  55 |         expect(prediction_outputs.dims).toEqual([dims[0], prediction_length, num_input_channels]);\n> 56 |         expect(prediction_outputs.mean().item()).toBeCloseTo(0.5064773559570312, 5);\n     |                                                                                 ^ Magic Number\n  57 |       },\n  58 |       MAX_TEST_EXECUTION_TIME,\n  59 |     );","start":{"line":56,"column":81,"index":1987}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":18.75,"halstead":{"bugs":0.432,"difficulty":14.625,"effort":18936.583,"length":215,"time":1052.032,"vocabulary":65,"volume":1294.809,"operands":{"distinct":52,"total":117,"identifiers":["dims","64","512","7","prod","reduce","a","b","1","past_values","Tensor","\"float32\"","Float32Array","from","length","_","i","describe","\"PatchTSMixerModel\"","model_id","\"hf-internal-testing/tiny-random-PatchTSMixerModel\"","model","beforeAll","PatchTSMixerModel","from_pretrained","DEFAULT_MODEL_OPTIONS","MAX_MODEL_LOAD_TIME","it","\"default\"","last_hidden_state","num_input_channels","num_patches","d_model","config","expect","toEqual","0","mean","item","toBeCloseTo","0.03344963490962982","5","MAX_TEST_EXECUTION_TIME","afterAll","dispose","MAX_MODEL_DISPOSE_TIME","\"PatchTSMixerForPrediction\"","\"onnx-community/granite-timeseries-patchtsmixer\"","PatchTSMixerForPrediction","prediction_outputs","prediction_length","0.5064773559570312"]},"operators":{"distinct":13,"total":98,"identifiers":["function=>","const","=","[]",",","()",".","*","new","{}",":","/","let"]}},"paramCount":4,"sloc":{"logical":64,"physical":66}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":66,"lineStart":1,"maintainability":118.697,"methods":[{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.075,"difficulty":6,"effort":1354.302,"length":46,"time":75.239,"vocabulary":30,"volume":225.717,"operands":{"distinct":20,"total":24,"identifiers":["dims","64","512","7","prod","reduce","a","b","1","past_values","Tensor","\"float32\"","Float32Array","from","length","_","i","describe","\"PatchTSMixerModel\"","\"PatchTSMixerForPrediction\""]},"operators":{"distinct":10,"total":22,"identifiers":["const","=","[]",",","()",".","function=>","new","{}",":"]}},"paramCount":0,"sloc":{"logical":12,"physical":61},"errors":[],"lineEnd":65,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["a","b"]},"operators":{"distinct":1,"total":1,"identifiers":["*"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":7,"lineStart":7,"name":"<anon method-2>","paramNames":["a","b"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["i","prod"]},"operators":{"distinct":1,"total":1,"identifiers":["/"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":10,"lineStart":10,"name":"<anon method-3>","paramNames":["_","i"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":2.5,"effort":185.577,"length":19,"time":10.31,"vocabulary":15,"volume":74.231,"operands":{"distinct":10,"total":10,"identifiers":["model_id","\"hf-internal-testing/tiny-random-PatchTSMixerModel\"","model","beforeAll","MAX_MODEL_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":25},"errors":[],"lineEnd":38,"lineStart":14,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1.5,"effort":36,"length":8,"time":2,"vocabulary":8,"volume":24,"operands":{"distinct":5,"total":5,"identifiers":["model","PatchTSMixerModel","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":21,"lineStart":19,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.081,"difficulty":6.344,"effort":1549.603,"length":54,"time":86.089,"vocabulary":23,"volume":244.272,"operands":{"distinct":16,"total":29,"identifiers":["last_hidden_state","model","past_values","num_input_channels","num_patches","d_model","config","expect","dims","toEqual","0","mean","item","toBeCloseTo","0.03344963490962982","5"]},"operators":{"distinct":7,"total":25,"identifiers":["const","=","{}","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":14,"physical":7},"errors":[],"lineEnd":31,"lineStart":25,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":37,"lineStart":35,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":2.5,"effort":185.577,"length":19,"time":10.31,"vocabulary":15,"volume":74.231,"operands":{"distinct":10,"total":10,"identifiers":["model_id","\"onnx-community/granite-timeseries-patchtsmixer\"","model","beforeAll","MAX_MODEL_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":25},"errors":[],"lineEnd":64,"lineStart":40,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1.5,"effort":36,"length":8,"time":2,"vocabulary":8,"volume":24,"operands":{"distinct":5,"total":5,"identifiers":["model","PatchTSMixerForPrediction","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":47,"lineStart":45,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.074,"difficulty":6.067,"effort":1352.694,"length":50,"time":75.15,"vocabulary":22,"volume":222.972,"operands":{"distinct":15,"total":26,"identifiers":["prediction_outputs","model","past_values","prediction_length","num_input_channels","config","expect","dims","toEqual","0","mean","item","toBeCloseTo","0.5064773559570312","5"]},"operators":{"distinct":7,"total":24,"identifiers":["const","=","{}","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":13,"physical":7},"errors":[],"lineEnd":57,"lineStart":51,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":63,"lineStart":61,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.563,"halstead":{"bugs":0.036,"difficulty":1.219,"effort":1578.049,"length":17.917,"time":87.669,"vocabulary":5.417,"volume":107.901,"operands":{"distinct":4.333,"total":9.75},"operators":{"distinct":1.083,"total":8.167}},"paramCount":0.333,"sloc":{"logical":5.333,"physical":5.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":49.833,"halstead":{"bugs":0.027,"difficulty":2.492,"effort":427.683,"length":19.455,"time":23.76,"vocabulary":11.909,"volume":82.085,"operands":{"distinct":8.091,"total":10.636},"operators":{"distinct":3.818,"total":8.818}},"paramCount":0.364,"sloc":{"logical":5.727,"physical":12.636}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/patchtst/test_modeling_patchtst.js","testCases":2,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  28 |         const { num_input_channels, d_model } = model.config;\n  29 |         expect(last_hidden_state.dims).toEqual([dims[0], num_input_channels, 43, d_model]);\n> 30 |         expect(last_hidden_state.mean().item()).toBeCloseTo(0.016672514379024506, 5);\n     |                                                            ^ Magic Number\n  31 |       },\n  32 |       MAX_TEST_EXECUTION_TIME,\n  33 |     );","start":{"line":30,"column":60,"index":1071}},{"frame":"  28 |         const { num_input_channels, d_model } = model.config;\n  29 |         expect(last_hidden_state.dims).toEqual([dims[0], num_input_channels, 43, d_model]);\n> 30 |         expect(last_hidden_state.mean().item()).toBeCloseTo(0.016672514379024506, 5);\n     |                                                                                  ^ Magic Number\n  31 |       },\n  32 |       MAX_TEST_EXECUTION_TIME,\n  33 |     );","start":{"line":30,"column":82,"index":1093}},{"frame":"  54 |         const { prediction_length, num_input_channels } = model.config;\n  55 |         expect(prediction_outputs.dims).toEqual([dims[0], prediction_length, num_input_channels]);\n> 56 |         expect(prediction_outputs.mean().item()).toBeCloseTo(0.506528377532959, 5);\n     |                                                             ^ Magic Number\n  57 |       },\n  58 |       MAX_TEST_EXECUTION_TIME,\n  59 |     );","start":{"line":56,"column":61,"index":1906}},{"frame":"  54 |         const { prediction_length, num_input_channels } = model.config;\n  55 |         expect(prediction_outputs.dims).toEqual([dims[0], prediction_length, num_input_channels]);\n> 56 |         expect(prediction_outputs.mean().item()).toBeCloseTo(0.506528377532959, 5);\n     |                                                                                ^ Magic Number\n  57 |       },\n  58 |       MAX_TEST_EXECUTION_TIME,\n  59 |     );","start":{"line":56,"column":80,"index":1925}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":19.048,"halstead":{"bugs":0.428,"difficulty":14.375,"effort":18439.737,"length":213,"time":1024.43,"vocabulary":65,"volume":1282.764,"operands":{"distinct":52,"total":115,"identifiers":["dims","64","512","7","prod","reduce","a","b","1","past_values","Tensor","\"float32\"","Float32Array","from","length","_","i","describe","\"PatchTSTModel\"","model_id","\"hf-internal-testing/tiny-random-PatchTSTModel\"","model","beforeAll","PatchTSTModel","from_pretrained","DEFAULT_MODEL_OPTIONS","MAX_MODEL_LOAD_TIME","it","\"default\"","last_hidden_state","num_input_channels","d_model","config","expect","toEqual","0","43","mean","item","toBeCloseTo","0.016672514379024506","5","MAX_TEST_EXECUTION_TIME","afterAll","dispose","MAX_MODEL_DISPOSE_TIME","\"PatchTSTForPrediction\"","\"onnx-community/granite-timeseries-patchtst\"","PatchTSTForPrediction","prediction_outputs","prediction_length","0.506528377532959"]},"operators":{"distinct":13,"total":98,"identifiers":["function=>","const","=","[]",",","()",".","*","new","{}",":","/","let"]}},"paramCount":4,"sloc":{"logical":63,"physical":66}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":66,"lineStart":1,"maintainability":119.043,"methods":[{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.075,"difficulty":6,"effort":1354.302,"length":46,"time":75.239,"vocabulary":30,"volume":225.717,"operands":{"distinct":20,"total":24,"identifiers":["dims","64","512","7","prod","reduce","a","b","1","past_values","Tensor","\"float32\"","Float32Array","from","length","_","i","describe","\"PatchTSTModel\"","\"PatchTSTForPrediction\""]},"operators":{"distinct":10,"total":22,"identifiers":["const","=","[]",",","()",".","function=>","new","{}",":"]}},"paramCount":0,"sloc":{"logical":12,"physical":61},"errors":[],"lineEnd":65,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["a","b"]},"operators":{"distinct":1,"total":1,"identifiers":["*"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":7,"lineStart":7,"name":"<anon method-2>","paramNames":["a","b"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["i","prod"]},"operators":{"distinct":1,"total":1,"identifiers":["/"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":10,"lineStart":10,"name":"<anon method-3>","paramNames":["_","i"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":2.5,"effort":185.577,"length":19,"time":10.31,"vocabulary":15,"volume":74.231,"operands":{"distinct":10,"total":10,"identifiers":["model_id","\"hf-internal-testing/tiny-random-PatchTSTModel\"","model","beforeAll","MAX_MODEL_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":25},"errors":[],"lineEnd":38,"lineStart":14,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1.5,"effort":36,"length":8,"time":2,"vocabulary":8,"volume":24,"operands":{"distinct":5,"total":5,"identifiers":["model","PatchTSTModel","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":21,"lineStart":19,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.078,"difficulty":5.906,"effort":1389.299,"length":52,"time":77.183,"vocabulary":23,"volume":235.225,"operands":{"distinct":16,"total":27,"identifiers":["last_hidden_state","model","past_values","num_input_channels","d_model","config","expect","dims","toEqual","0","43","mean","item","toBeCloseTo","0.016672514379024506","5"]},"operators":{"distinct":7,"total":25,"identifiers":["const","=","{}","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":13,"physical":7},"errors":[],"lineEnd":31,"lineStart":25,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":37,"lineStart":35,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":2.5,"effort":185.577,"length":19,"time":10.31,"vocabulary":15,"volume":74.231,"operands":{"distinct":10,"total":10,"identifiers":["model_id","\"onnx-community/granite-timeseries-patchtst\"","model","beforeAll","MAX_MODEL_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":25},"errors":[],"lineEnd":64,"lineStart":40,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1.5,"effort":36,"length":8,"time":2,"vocabulary":8,"volume":24,"operands":{"distinct":5,"total":5,"identifiers":["model","PatchTSTForPrediction","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":47,"lineStart":45,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.074,"difficulty":6.067,"effort":1352.694,"length":50,"time":75.15,"vocabulary":22,"volume":222.972,"operands":{"distinct":15,"total":26,"identifiers":["prediction_outputs","model","past_values","prediction_length","num_input_channels","config","expect","dims","toEqual","0","mean","item","toBeCloseTo","0.506528377532959","5"]},"operators":{"distinct":7,"total":24,"identifiers":["const","=","{}","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":13,"physical":7},"errors":[],"lineEnd":57,"lineStart":51,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":63,"lineStart":61,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.587,"halstead":{"bugs":0.036,"difficulty":1.198,"effort":1536.645,"length":17.75,"time":85.369,"vocabulary":5.417,"volume":106.897,"operands":{"distinct":4.333,"total":9.583},"operators":{"distinct":1.083,"total":8.167}},"paramCount":0.333,"sloc":{"logical":5.25,"physical":5.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":49.883,"halstead":{"bugs":0.027,"difficulty":2.452,"effort":413.11,"length":19.273,"time":22.951,"vocabulary":11.909,"volume":81.262,"operands":{"distinct":8.091,"total":10.455},"operators":{"distinct":3.818,"total":8.818}},"paramCount":0.364,"sloc":{"logical":5.636,"physical":12.636}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/phi3_v/test_image_processing_phi3_v.js","testCases":4,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  34 |         expect(pixel_values.dims).toEqual([1, 1 + num_crops, ...TARGET_IMAGE_SIZE]);\n  35 |         expect(pixel_values.flatten(2).mean(2).tolist()).toBeCloseToNested([[2.050372362136841, 2.050372362136841, 2.050372362136841, 2.050372362136841, 2.050372362136841]], 1);\n> 36 |         expect(pixel_values.mean().item()).toBeCloseTo(2.050372362136841, 1);\n     |                                                       ^ Magic Number\n  37 |\n  38 |         expect(image_sizes.tolist()).toEqual([[672n, 672n]]);\n  39 |         expect(num_img_tokens).toEqual([757]);","start":{"line":36,"column":55,"index":1538}},{"frame":"  34 |         expect(pixel_values.dims).toEqual([1, 1 + num_crops, ...TARGET_IMAGE_SIZE]);\n  35 |         expect(pixel_values.flatten(2).mean(2).tolist()).toBeCloseToNested([[2.050372362136841, 2.050372362136841, 2.050372362136841, 2.050372362136841, 2.050372362136841]], 1);\n> 36 |         expect(pixel_values.mean().item()).toBeCloseTo(2.050372362136841, 1);\n     |                                                                          ^ Magic Number\n  37 |\n  38 |         expect(image_sizes.tolist()).toEqual([[672n, 672n]]);\n  39 |         expect(num_img_tokens).toEqual([757]);","start":{"line":36,"column":74,"index":1557}},{"frame":"  68 |         const { pixel_values, image_sizes, num_img_tokens } = await processor(images.gradient_image, { num_crops });\n  69 |         expect(pixel_values.dims).toEqual([1, 1 + num_crops, 3, 336, 336]);\n> 70 |         expect(pixel_values.mean().item()).toBeCloseTo(0.4677375257015228, 1);\n     |                                                       ^ Magic Number\n  71 |\n  72 |         expect(image_sizes.tolist()).toEqual([[1008n, 1680n]]);\n  73 |         expect(num_img_tokens).toEqual([2353]);","start":{"line":70,"column":55,"index":2931}},{"frame":"  68 |         const { pixel_values, image_sizes, num_img_tokens } = await processor(images.gradient_image, { num_crops });\n  69 |         expect(pixel_values.dims).toEqual([1, 1 + num_crops, 3, 336, 336]);\n> 70 |         expect(pixel_values.mean().item()).toBeCloseTo(0.4677375257015228, 1);\n     |                                                                           ^ Magic Number\n  71 |\n  72 |         expect(image_sizes.tolist()).toEqual([[1008n, 1680n]]);\n  73 |         expect(num_img_tokens).toEqual([2353]);","start":{"line":70,"column":75,"index":2951}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":8.511,"halstead":{"bugs":0.737,"difficulty":22.598,"effort":49956.23,"length":379,"time":2775.346,"vocabulary":57,"volume":2210.665,"operands":{"distinct":46,"total":189,"identifiers":["TARGET_IMAGE_SIZE","3","336","describe","\"Phi3VImageProcessor\"","model_id","\"onnx-community/Phi-3.5-vision-instruct\"","images","processor","beforeAll","AutoImageProcessor","from_pretrained","gradient_image","load_cached_image","\"gradient_1280x640\"","white_image","\"white_image\"","MAX_PROCESSOR_LOAD_TIME","it","\"square image (num_crops=4)\"","num_crops","4","pixel_values","image_sizes","num_img_tokens","expect","dims","toEqual","1","flatten","2","mean","tolist","toBeCloseToNested","2.050372362136841","item","toBeCloseTo","757","MAX_TEST_EXECUTION_TIME","\"non-square image (num_crops=4)\"","457","\"single image (num_crops=16)\"","16","0.4677375257015228","2353","\"multiple images (num_crops=4)\""]},"operators":{"distinct":11,"total":190,"identifiers":["const","=","[]",",","function=>","()","{}","let",".","+","... (spread)"]}},"paramCount":0,"sloc":{"logical":94,"physical":94}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":94,"lineStart":1,"maintainability":101.197,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Phi3VImageProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":86},"errors":[],"lineEnd":93,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.047,"difficulty":4.5,"effort":637.999,"length":34,"time":35.444,"vocabulary":18,"volume":141.777,"operands":{"distinct":12,"total":18,"identifiers":["model_id","\"onnx-community/Phi-3.5-vision-instruct\"","images","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"square image (num_crops=4)\"","MAX_TEST_EXECUTION_TIME","\"non-square image (num_crops=4)\"","\"single image (num_crops=16)\"","\"multiple images (num_crops=4)\""]},"operators":{"distinct":6,"total":16,"identifiers":["const","=","{}","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":82},"errors":[],"lineEnd":92,"lineStart":11,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.037,"difficulty":3.2,"effort":353.323,"length":29,"time":19.629,"vocabulary":14,"volume":110.413,"operands":{"distinct":10,"total":16,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id","gradient_image","load_cached_image","\"gradient_1280x640\"","white_image","\"white_image\"","images"]},"operators":{"distinct":4,"total":13,"identifiers":["=","()",".","const"]}},"paramCount":0,"sloc":{"logical":8,"physical":10},"errors":[],"lineEnd":27,"lineStart":18,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.167,"difficulty":10.227,"effort":5117.46,"length":101,"time":284.303,"vocabulary":31,"volume":500.374,"operands":{"distinct":22,"total":50,"identifiers":["num_crops","4","pixel_values","image_sizes","num_img_tokens","processor","images","white_image","expect","dims","toEqual","1","TARGET_IMAGE_SIZE","flatten","2","mean","tolist","toBeCloseToNested","2.050372362136841","item","toBeCloseTo","757"]},"operators":{"distinct":9,"total":51,"identifiers":["const","=","{}","()",".","[]",",","+","... (spread)"]}},"paramCount":0,"sloc":{"logical":23,"physical":10},"errors":[],"lineEnd":40,"lineStart":31,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.089,"difficulty":8.7,"effort":2313.572,"length":58,"time":128.532,"vocabulary":24,"volume":265.928,"operands":{"distinct":15,"total":29,"identifiers":["num_crops","4","pixel_values","image_sizes","num_img_tokens","processor","images","gradient_image","expect","dims","toEqual","1","TARGET_IMAGE_SIZE","tolist","457"]},"operators":{"distinct":9,"total":29,"identifiers":["const","=","{}","()",".","[]",",","+","... (spread)"]}},"paramCount":0,"sloc":{"logical":14,"physical":15},"errors":[],"lineEnd":60,"lineStart":46,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.12,"difficulty":7.6,"effort":2740.192,"length":75,"time":152.233,"vocabulary":28,"volume":360.552,"operands":{"distinct":20,"total":38,"identifiers":["num_crops","16","pixel_values","image_sizes","num_img_tokens","processor","images","gradient_image","expect","dims","toEqual","1","3","336","mean","item","toBeCloseTo","0.4677375257015228","tolist","2353"]},"operators":{"distinct":8,"total":37,"identifiers":["const","=","{}","()",".","[]",",","+"]}},"paramCount":0,"sloc":{"logical":18,"physical":9},"errors":[],"lineEnd":74,"lineStart":66,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.108,"difficulty":8,"effort":2586.659,"length":68,"time":143.703,"vocabulary":27,"volume":323.332,"operands":{"distinct":18,"total":32,"identifiers":["num_crops","4","pixel_values","image_sizes","num_img_tokens","processor","images","gradient_image","white_image","expect","dims","toEqual","2","1","TARGET_IMAGE_SIZE","tolist","457","757"]},"operators":{"distinct":9,"total":36,"identifiers":["const","=","{}","()","[]",",",".","+","... (spread)"]}},"paramCount":0,"sloc":{"logical":14,"physical":10},"errors":[],"lineEnd":89,"lineStart":80,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.064,"halstead":{"bugs":0.092,"difficulty":2.825,"effort":6244.529,"length":47.375,"time":346.918,"vocabulary":7.125,"volume":276.333,"operands":{"distinct":5.75,"total":23.625},"operators":{"distinct":1.375,"total":23.75}},"paramCount":0,"sloc":{"logical":11.75,"physical":11.75}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":13.483,"halstead":{"bugs":0.081,"difficulty":6.175,"effort":1965.315,"length":52.714,"time":109.184,"vocabulary":20.857,"volume":244.339,"operands":{"distinct":14.143,"total":26.429},"operators":{"distinct":6.714,"total":26.286}},"paramCount":0,"sloc":{"logical":13.143,"physical":31.714}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/qwen2_vl/test_image_processing_qwen2_vl.js","testCases":1,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  23 |\n  24 |         expect(pixel_values.dims).toEqual([256, 1176]);\n> 25 |         expect(pixel_values.mean().item()).toBeCloseTo(2.050372362136841, 6);\n     |                                                       ^ Magic Number\n  26 |         expect(image_grid_thw.tolist()).toEqual([[1n, 16n, 16n]]);\n  27 |\n  28 |         expect(original_sizes).toEqual([[224, 224]]);","start":{"line":25,"column":55,"index":1009}},{"frame":"  23 |\n  24 |         expect(pixel_values.dims).toEqual([256, 1176]);\n> 25 |         expect(pixel_values.mean().item()).toBeCloseTo(2.050372362136841, 6);\n     |                                                                          ^ Magic Number\n  26 |         expect(image_grid_thw.tolist()).toEqual([[1n, 16n, 16n]]);\n  27 |\n  28 |         expect(original_sizes).toEqual([[224, 224]]);","start":{"line":25,"column":74,"index":1028}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":15.625,"halstead":{"bugs":0.192,"difficulty":7.839,"effort":4505.441,"length":108,"time":250.302,"vocabulary":40,"volume":574.768,"operands":{"distinct":31,"total":54,"identifiers":["describe","\"Qwen2VLImageProcessor\"","model_id","\"hf-internal-testing/tiny-random-Qwen2VLForConditionalGeneration\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"custom image processing\"","image","load_cached_image","\"white_image\"","pixel_values","image_grid_thw","original_sizes","reshaped_input_sizes","expect","dims","toEqual","256","1176","mean","item","toBeCloseTo","2.050372362136841","6","tolist","224","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":9,"total":54,"identifiers":["function=>","()","const","=","let",".","{}","[]",","]}},"paramCount":0,"sloc":{"logical":32,"physical":35}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":35,"lineStart":1,"maintainability":117.66,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Qwen2VLImageProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":29},"errors":[],"lineEnd":34,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"hf-internal-testing/tiny-random-Qwen2VLForConditionalGeneration\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"custom image processing\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":25},"errors":[],"lineEnd":33,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":16,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.128,"difficulty":7,"effort":2696.021,"length":81,"time":149.779,"vocabulary":27,"volume":385.146,"operands":{"distinct":20,"total":40,"identifiers":["image","load_cached_image","\"white_image\"","pixel_values","image_grid_thw","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","256","1176","mean","item","toBeCloseTo","2.050372362136841","6","tolist","224"]},"operators":{"distinct":7,"total":41,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":21,"physical":11},"errors":[],"lineEnd":30,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.038,"difficulty":1.568,"effort":901.088,"length":21.6,"time":50.06,"vocabulary":8,"volume":114.954,"operands":{"distinct":6.2,"total":10.8},"operators":{"distinct":1.8,"total":10.8}},"paramCount":0,"sloc":{"logical":6.4,"physical":7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.357,"halstead":{"bugs":0.039,"difficulty":3,"effort":718.066,"length":26.75,"time":39.893,"vocabulary":12.75,"volume":117.076,"operands":{"distinct":8.5,"total":13.5},"operators":{"distinct":4.25,"total":13.25}},"paramCount":0,"sloc":{"logical":7.75,"physical":17}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/qwen2_vl/test_modeling_qwen2_vl.js","testCases":3,"smells":1,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  43 |         const { logits } = await model(inputs);\n  44 |         expect(logits.dims).toEqual([1, 89, 152064]);\n> 45 |         expect(logits.mean().item()).toBeCloseTo(-0.0011299321195110679, 5);\n     |                                                                         ^ Magic Number\n  46 |       },\n  47 |       MAX_TEST_EXECUTION_TIME,\n  48 |     );","start":{"line":45,"column":73,"index":1654}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":10.39,"halstead":{"bugs":0.691,"difficulty":16.015,"effort":33208.897,"length":328,"time":1844.939,"vocabulary":80,"volume":2073.592,"operands":{"distinct":66,"total":151,"identifiers":["CONVERSATION","role","\"user\"","content","type","\"text\"","text","\"Hello\"","CONVERSATION_WITH_IMAGE","\"image\"","\"Describe this image.\"","dims","224","3","image","RawImage","Uint8ClampedArray","0","1","2","fill","255","describe","\"Qwen2VLForConditionalGeneration\"","model_id","\"hf-internal-testing/tiny-random-Qwen2VLForConditionalGeneration\"","model","processor","beforeAll","Qwen2VLForConditionalGeneration","from_pretrained","DEFAULT_MODEL_OPTIONS","Qwen2VLProcessor","MAX_MODEL_LOAD_TIME","it","\"forward\"","apply_chat_template","add_generation_prompt","true","inputs","logits","expect","toEqual","89","152064","mean","item","toBeCloseTo","0.0011299321195110679","5","MAX_TEST_EXECUTION_TIME","\"text-only (batch_size=1)\"","generate_ids","generate","max_new_tokens","10","new_tokens","slice","null","input_ids","at","tolist","\"text + image (batch_size=1)\"","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":14,"total":177,"identifiers":["function=>","const","=","[]","{}",":",",","new","()",".","*","... (spread)","let","- (prefix)"]}},"paramCount":0,"sloc":{"logical":77,"physical":91}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":91,"lineStart":1,"maintainability":105.825,"methods":[{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.134,"difficulty":9,"effort":3629.287,"length":78,"time":201.627,"vocabulary":36,"volume":403.254,"operands":{"distinct":24,"total":36,"identifiers":["CONVERSATION","role","\"user\"","content","type","\"text\"","text","\"Hello\"","CONVERSATION_WITH_IMAGE","\"image\"","\"Describe this image.\"","dims","224","3","image","RawImage","Uint8ClampedArray","0","1","2","fill","255","describe","\"Qwen2VLForConditionalGeneration\""]},"operators":{"distinct":12,"total":42,"identifiers":["const","=","[]","{}",":",",","new","()",".","*","... (spread)","function=>"]}},"paramCount":0,"sloc":{"logical":16,"physical":86},"errors":[],"lineEnd":90,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.043,"difficulty":3.269,"effort":422.606,"length":31,"time":23.478,"vocabulary":18,"volume":129.268,"operands":{"distinct":13,"total":17,"identifiers":["model_id","\"hf-internal-testing/tiny-random-Qwen2VLForConditionalGeneration\"","model","processor","beforeAll","MAX_MODEL_LOAD_TIME","it","\"forward\"","MAX_TEST_EXECUTION_TIME","\"text-only (batch_size=1)\"","\"text + image (batch_size=1)\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":66},"errors":[],"lineEnd":89,"lineStart":24,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","Qwen2VLForConditionalGeneration","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","processor","Qwen2VLProcessor"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":34,"lineStart":31,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.092,"difficulty":6,"effort":1648.715,"length":56,"time":91.595,"vocabulary":30,"volume":274.786,"operands":{"distinct":21,"total":28,"identifiers":["text","processor","apply_chat_template","CONVERSATION_WITH_IMAGE","add_generation_prompt","true","inputs","image","logits","model","expect","dims","toEqual","1","89","152064","mean","item","toBeCloseTo","0.0011299321195110679","5"]},"operators":{"distinct":9,"total":28,"identifiers":["const","=","()",".","{}",":","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":14,"physical":9},"errors":[],"lineEnd":46,"lineStart":38,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.12,"difficulty":6.591,"effort":2372.727,"length":72,"time":131.818,"vocabulary":32,"volume":360,"operands":{"distinct":22,"total":29,"identifiers":["text","processor","apply_chat_template","CONVERSATION","add_generation_prompt","true","inputs","generate_ids","model","generate","max_new_tokens","10","new_tokens","slice","null","input_ids","dims","at","1","expect","tolist","toEqual"]},"operators":{"distinct":10,"total":43,"identifiers":["const","=","()",".","{}",":","... (spread)","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":14,"physical":13},"errors":[],"lineEnd":64,"lineStart":52,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.123,"difficulty":6.522,"effort":2401.57,"length":73,"time":133.421,"vocabulary":33,"volume":368.241,"operands":{"distinct":23,"total":30,"identifiers":["text","processor","apply_chat_template","CONVERSATION_WITH_IMAGE","add_generation_prompt","true","inputs","image","generate_ids","model","generate","max_new_tokens","10","new_tokens","slice","null","input_ids","dims","at","1","expect","tolist","toEqual"]},"operators":{"distinct":10,"total":43,"identifiers":["const","=","()",".","{}",":","... (spread)","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":14,"physical":13},"errors":[],"lineEnd":82,"lineStart":70,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":88,"lineStart":86,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.299,"halstead":{"bugs":0.086,"difficulty":2.002,"effort":4151.112,"length":41,"time":230.617,"vocabulary":10,"volume":259.199,"operands":{"distinct":8.25,"total":18.875},"operators":{"distinct":1.75,"total":22.125}},"paramCount":0,"sloc":{"logical":9.625,"physical":11.375}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":22.91,"halstead":{"bugs":0.076,"difficulty":4.759,"effort":1510.144,"length":46.714,"time":83.897,"vocabulary":23,"volume":226.768,"operands":{"distinct":16,"total":21.571},"operators":{"distinct":7,"total":25.143}},"paramCount":0,"sloc":{"logical":10.857,"physical":27.714}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/sam/test_image_processing_sam.js","testCases":4,"smells":1,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  23 |         const { pixel_values, original_sizes, reshaped_input_sizes } = await processor(image);\n  24 |         expect(pixel_values.dims).toEqual([1, 3, 1024, 1024]);\n> 25 |         expect(pixel_values.mean().item()).toBeCloseTo(-0.4505715670146813, 6);\n     |                                                                            ^ Magic Number\n  26 |\n  27 |         expect(original_sizes).toEqual([[3, 3]]);\n  28 |         expect(reshaped_input_sizes).toEqual([[1024, 1024]]);","start":{"line":25,"column":76,"index":1042}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":9.524,"halstead":{"bugs":0.668,"difficulty":22.131,"effort":44367.517,"length":350,"time":2464.862,"vocabulary":53,"volume":2004.772,"operands":{"distinct":42,"total":169,"identifiers":["describe","\"SamImageProcessor\"","model_id","\"Xenova/sam-vit-base\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"without input points\"","image","load_cached_image","\"pattern_3x3\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","1024","mean","item","toBeCloseTo","0.4505715670146813","6","MAX_TEST_EXECUTION_TIME","\"with input points\"","input_points","2","tolist","toBeCloseToNested","341.3333","682.6667","4","\"multiple points with labels\"","input_labels","0","\"with input boxes\"","input_boxes"]},"operators":{"distinct":11,"total":181,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)",":"]}},"paramCount":0,"sloc":{"logical":84,"physical":96}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":96,"lineStart":1,"maintainability":103.425,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"SamImageProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":90},"errors":[],"lineEnd":95,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.04,"difficulty":3.864,"effort":463.636,"length":30,"time":25.758,"vocabulary":16,"volume":120,"operands":{"distinct":11,"total":17,"identifiers":["model_id","\"Xenova/sam-vit-base\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"without input points\"","MAX_TEST_EXECUTION_TIME","\"with input points\"","\"multiple points with labels\"","\"with input boxes\""]},"operators":{"distinct":5,"total":13,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":85},"errors":[],"lineEnd":94,"lineStart":10,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":17,"lineStart":15,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.111,"difficulty":8,"effort":2669.85,"length":71,"time":148.325,"vocabulary":26,"volume":333.731,"operands":{"distinct":18,"total":36,"identifiers":["image","load_cached_image","\"pattern_3x3\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","1024","mean","item","toBeCloseTo","0.4505715670146813","6"]},"operators":{"distinct":8,"total":35,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":17,"physical":9},"errors":[],"lineEnd":29,"lineStart":21,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.103,"difficulty":6.889,"effort":2137.133,"length":66,"time":118.73,"vocabulary":26,"volume":310.229,"operands":{"distinct":18,"total":31,"identifiers":["image","load_cached_image","\"pattern_3x3\"","original_sizes","reshaped_input_sizes","input_points","processor","1","2","expect","toEqual","3","1024","tolist","toBeCloseToNested","341.3333","682.6667","4"]},"operators":{"distinct":8,"total":35,"identifiers":["const","=","()","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":15,"physical":10},"errors":[],"lineEnd":44,"lineStart":35,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.157,"difficulty":8.8,"effort":4145.863,"length":98,"time":230.326,"vocabulary":28,"volume":471.121,"operands":{"distinct":20,"total":44,"identifiers":["image","load_cached_image","\"pattern_3x3\"","original_sizes","reshaped_input_sizes","input_points","input_labels","processor","1","2","0","expect","toEqual","3","1024","tolist","toBeCloseToNested","341.3333","682.6667","4"]},"operators":{"distinct":8,"total":54,"identifiers":["const","=","()","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":20,"physical":27},"errors":[],"lineEnd":76,"lineStart":50,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.116,"difficulty":7.368,"effort":2557.629,"length":73,"time":142.09,"vocabulary":27,"volume":347.107,"operands":{"distinct":19,"total":35,"identifiers":["image","load_cached_image","\"pattern_3x3\"","original_sizes","reshaped_input_sizes","input_boxes","processor","0","1","2","expect","toEqual","3","1024","tolist","toBeCloseToNested","341.3333","682.6667","4"]},"operators":{"distinct":8,"total":38,"identifiers":["const","=","()","{}",":","[]",",","."]}},"paramCount":0,"sloc":{"logical":15,"physical":10},"errors":[],"lineEnd":91,"lineStart":82,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.19,"halstead":{"bugs":0.084,"difficulty":2.766,"effort":5545.94,"length":43.75,"time":308.108,"vocabulary":6.625,"volume":250.597,"operands":{"distinct":5.25,"total":21.125},"operators":{"distinct":1.375,"total":22.625}},"paramCount":0,"sloc":{"logical":10.5,"physical":12}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":18.936,"halstead":{"bugs":0.077,"difficulty":5.346,"effort":1715.941,"length":49.857,"time":95.33,"vocabulary":19.143,"volume":229.977,"operands":{"distinct":13.143,"total":24.143},"operators":{"distinct":6,"total":25.714}},"paramCount":0,"sloc":{"logical":11.857,"physical":33.429}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/sam/test_modeling_sam.js","testCases":1,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  29 |\n  30 |         expect(pred_masks.dims).toEqual([1, 1, 3, 256, 256]);\n> 31 |         expect(pred_masks.mean().item()).toBeCloseTo(-5.76981782913208, 5);\n     |                                                                        ^ Magic Number\n  32 |         expect(iou_scores.dims).toEqual([1, 1, 3]);\n  33 |         expect(iou_scores.tolist()).toBeCloseToNested([[[0.8583833575248718, 0.9773167967796326, 0.8511142730712891]]]);\n  34 |","start":{"line":31,"column":72,"index":1179}},{"frame":"  35 |         // Post-process masks\n  36 |         const masks = await processor.post_process_masks(pred_masks, inputs.original_sizes, inputs.reshaped_input_sizes);\n> 37 |         expect(masks).toHaveLength(1);\n     |                                   ^ Magic Number\n  38 |         expect(masks[0].dims).toEqual([1, 3, 410, 614]);\n  39 |         expect(masks[0].type).toEqual(\"bool\");\n  40 |       },","start":{"line":37,"column":35,"index":1544}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":13.043,"halstead":{"bugs":0.381,"difficulty":9.245,"effort":10554.974,"length":191,"time":586.387,"vocabulary":63,"volume":1141.66,"operands":{"distinct":53,"total":98,"identifiers":["describe","\"SamModel\"","model_id","\"Xenova/slimsam-77-uniform\"","model","processor","beforeAll","SamModel","from_pretrained","DEFAULT_MODEL_OPTIONS","SamProcessor","MAX_MODEL_LOAD_TIME","it","\"w/ input_points\"","raw_image","load_cached_image","\"corgi\"","input_points","340","250","inputs","pred_masks","iou_scores","expect","dims","toEqual","1","3","256","mean","item","toBeCloseTo","5.76981782913208","5","tolist","toBeCloseToNested","0.8583833575248718","0.9773167967796326","0.8511142730712891","masks","post_process_masks","original_sizes","reshaped_input_sizes","toHaveLength","0","410","614","type","\"bool\"","MAX_TEST_EXECUTION_TIME","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":10,"total":93,"identifiers":["function=>","()","const","=","let",".","[]",",","{}","- (prefix)"]}},"paramCount":0,"sloc":{"logical":46,"physical":49}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":2,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":49,"lineStart":1,"maintainability":112.446,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"SamModel\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":43},"errors":[],"lineEnd":48,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.028,"difficulty":2.5,"effort":210,"length":21,"time":11.667,"vocabulary":16,"volume":84,"operands":{"distinct":11,"total":11,"identifiers":["model_id","\"Xenova/slimsam-77-uniform\"","model","processor","beforeAll","MAX_MODEL_LOAD_TIME","it","\"w/ input_points\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":41},"errors":[],"lineEnd":47,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","SamModel","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","processor","SamProcessor"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":17,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.271,"difficulty":8,"effort":6502.354,"length":148,"time":361.242,"vocabulary":45,"volume":812.794,"operands":{"distinct":37,"total":74,"identifiers":["raw_image","load_cached_image","\"corgi\"","input_points","340","250","inputs","processor","pred_masks","iou_scores","model","expect","dims","toEqual","1","3","256","mean","item","toBeCloseTo","5.76981782913208","5","tolist","toBeCloseToNested","0.8583833575248718","0.9773167967796326","0.8511142730712891","masks","post_process_masks","original_sizes","reshaped_input_sizes","toHaveLength","0","410","614","type","\"bool\""]},"operators":{"distinct":8,"total":74,"identifiers":["const","=","()","[]",",","{}",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":29,"physical":20},"errors":[],"lineEnd":40,"lineStart":21,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":46,"lineStart":44,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.174,"halstead":{"bugs":0.063,"difficulty":1.541,"effort":1759.162,"length":31.833,"time":97.731,"vocabulary":10.5,"volume":190.277,"operands":{"distinct":8.833,"total":16.333},"operators":{"distinct":1.667,"total":15.5}},"paramCount":0,"sloc":{"logical":7.667,"physical":8.167}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":37.912,"halstead":{"bugs":0.064,"difficulty":2.686,"effort":1363.291,"length":38,"time":75.738,"vocabulary":15.4,"volume":191.325,"operands":{"distinct":11.8,"total":19.6},"operators":{"distinct":3.6,"total":18.4}},"paramCount":0,"sloc":{"logical":9,"physical":22.2}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/seamless_m4t/test_feature_extraction_seamless_m4t.js","testCases":2,"smells":9,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  28 |\n  29 |         expect(input_features.mean().item()).toBeCloseTo(-2.938903875815413e-8);\n> 30 |         expect(data[0]).toBeCloseTo(1.1939343214035034);\n     |                                    ^ Magic Number\n  31 |         expect(data[1]).toBeCloseTo(0.7874255180358887);\n  32 |         expect(data[160]).toBeCloseTo(-0.712975025177002);\n  33 |         expect(data[161]).toBeCloseTo(0.045802414417266846);","start":{"line":30,"column":36,"index":1184}},{"frame":"  29 |         expect(input_features.mean().item()).toBeCloseTo(-2.938903875815413e-8);\n  30 |         expect(data[0]).toBeCloseTo(1.1939343214035034);\n> 31 |         expect(data[1]).toBeCloseTo(0.7874255180358887);\n     |                                    ^ Magic Number\n  32 |         expect(data[160]).toBeCloseTo(-0.712975025177002);\n  33 |         expect(data[161]).toBeCloseTo(0.045802414417266846);\n  34 |         expect(data.at(-1)).toBeCloseTo(-1.3328346014022827);","start":{"line":31,"column":36,"index":1241}},{"frame":"  31 |         expect(data[1]).toBeCloseTo(0.7874255180358887);\n  32 |         expect(data[160]).toBeCloseTo(-0.712975025177002);\n> 33 |         expect(data[161]).toBeCloseTo(0.045802414417266846);\n     |                                      ^ Magic Number\n  34 |         expect(data.at(-1)).toBeCloseTo(-1.3328346014022827);\n  35 |\n  36 |         expect(sum(attention_mask.data)).toEqual(649);","start":{"line":33,"column":38,"index":1359}},{"frame":"  34 |         expect(data.at(-1)).toBeCloseTo(-1.3328346014022827);\n  35 |\n> 36 |         expect(sum(attention_mask.data)).toEqual(649);\n     |                                                 ^ Magic Number\n  37 |       },\n  38 |       MAX_TEST_EXECUTION_TIME,\n  39 |     );","start":{"line":36,"column":49,"index":1494}},{"frame":"  51 |         expect(attention_mask.dims).toEqual([1, 31]);\n  52 |\n> 53 |         expect(input_features.mean().item()).toBeCloseTo(0.01612919569015503);\n     |                                                         ^ Magic Number\n  54 |         expect(data[0]).toBeCloseTo(0.9657132029533386);\n  55 |         expect(data[1]).toBeCloseTo(0.12912897765636444);\n  56 |         expect(data[160]).toBeCloseTo(-1.2364212274551392);","start":{"line":53,"column":57,"index":2028}},{"frame":"  52 |\n  53 |         expect(input_features.mean().item()).toBeCloseTo(0.01612919569015503);\n> 54 |         expect(data[0]).toBeCloseTo(0.9657132029533386);\n     |                                    ^ Magic Number\n  55 |         expect(data[1]).toBeCloseTo(0.12912897765636444);\n  56 |         expect(data[160]).toBeCloseTo(-1.2364212274551392);\n  57 |         expect(data[161]).toBeCloseTo(-0.9703778028488159);","start":{"line":54,"column":36,"index":2086}},{"frame":"  53 |         expect(input_features.mean().item()).toBeCloseTo(0.01612919569015503);\n  54 |         expect(data[0]).toBeCloseTo(0.9657132029533386);\n> 55 |         expect(data[1]).toBeCloseTo(0.12912897765636444);\n     |                                    ^ Magic Number\n  56 |         expect(data[160]).toBeCloseTo(-1.2364212274551392);\n  57 |         expect(data[161]).toBeCloseTo(-0.9703778028488159);\n  58 |         expect(data.at(-1)).toBeCloseTo(1); // padding value","start":{"line":55,"column":36,"index":2143}},{"frame":"  56 |         expect(data[160]).toBeCloseTo(-1.2364212274551392);\n  57 |         expect(data[161]).toBeCloseTo(-0.9703778028488159);\n> 58 |         expect(data.at(-1)).toBeCloseTo(1); // padding value\n     |                                        ^ Magic Number\n  59 |\n  60 |         expect(sum(attention_mask.data)).toEqual(30);\n  61 |       },","start":{"line":58,"column":40,"index":2325}},{"frame":"  58 |         expect(data.at(-1)).toBeCloseTo(1); // padding value\n  59 |\n> 60 |         expect(sum(attention_mask.data)).toEqual(30);\n     |                                                 ^ Magic Number\n  61 |       },\n  62 |       MAX_TEST_EXECUTION_TIME,\n  63 |     );","start":{"line":60,"column":49,"index":2396}}]}],"metrics":{"aggregate":{"cyclomatic":9,"cyclomaticDensity":10.843,"halstead":{"bugs":0.612,"difficulty":19.623,"effort":36056.522,"length":304,"time":2003.14,"vocabulary":66,"volume":1837.496,"operands":{"distinct":53,"total":160,"identifiers":["sum","array","Number","reduce","a","b","BigInt64Array","0","describe","\"SeamlessM4TFeatureExtractor\"","model_id","\"Xenova/wav2vec2-bert-CV16-en\"","feature_extractor","beforeAll","AutoFeatureExtractor","from_pretrained","MAX_FEATURE_EXTRACTOR_LOAD_TIME","it","\"default\"","audio","load_cached_audio","\"mlk\"","input_features","attention_mask","dims","data","expect","toEqual","1","649","160","mean","item","toBeCloseTo","2.938903875815413e-8","1.1939343214035034","0.7874255180358887","0.712975025177002","161","0.045802414417266846","at","1.3328346014022827","MAX_TEST_EXECUTION_TIME","\"padding (pad_to_multiple_of=2)\"","slice","10000","31","0.01612919569015503","0.9657132029533386","0.12912897765636444","1.2364212274551392","0.9703778028488159","30"]},"operators":{"distinct":13,"total":144,"identifiers":["const","=","function=>","()",".","+",":?","instanceof","let","{}","[]",",","- (prefix)"]}},"paramCount":3,"sloc":{"logical":83,"physical":66}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":66,"lineStart":1,"maintainability":104.21,"methods":[{"cyclomatic":2,"cyclomaticDensity":50,"halstead":{"bugs":0.017,"difficulty":2.857,"effort":143.399,"length":14,"time":7.967,"vocabulary":12,"volume":50.189,"operands":{"distinct":7,"total":8,"identifiers":["Number","array","reduce","a","b","BigInt64Array","0"]},"operators":{"distinct":5,"total":6,"identifiers":["()",".","function=>",":?","instanceof"]}},"paramCount":1,"sloc":{"logical":4,"physical":1},"errors":[],"lineEnd":6,"lineStart":6,"name":"<anon method-1>","paramNames":["array"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["a","b"]},"operators":{"distinct":1,"total":1,"identifiers":["+"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":6,"lineStart":6,"name":"<anon method-2>","paramNames":["a","b"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"SeamlessM4TFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":58},"errors":[],"lineEnd":65,"lineStart":8,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":3.056,"effort":232.672,"length":20,"time":12.926,"vocabulary":14,"volume":76.147,"operands":{"distinct":9,"total":11,"identifiers":["model_id","\"Xenova/wav2vec2-bert-CV16-en\"","feature_extractor","beforeAll","MAX_FEATURE_EXTRACTOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME","\"padding (pad_to_multiple_of=2)\""]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":55},"errors":[],"lineEnd":64,"lineStart":10,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["feature_extractor","AutoFeatureExtractor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":17,"lineStart":15,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.209,"difficulty":9.846,"effort":6161.309,"length":123,"time":342.295,"vocabulary":34,"volume":625.758,"operands":{"distinct":26,"total":64,"identifiers":["audio","load_cached_audio","\"mlk\"","input_features","attention_mask","feature_extractor","dims","data","expect","toEqual","1","649","160","mean","item","toBeCloseTo","2.938903875815413e-8","0","1.1939343214035034","0.7874255180358887","0.712975025177002","161","0.045802414417266846","at","1.3328346014022827","sum"]},"operators":{"distinct":8,"total":59,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":31,"physical":17},"errors":[],"lineEnd":37,"lineStart":21,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.219,"difficulty":9.571,"effort":6284.413,"length":127,"time":349.134,"vocabulary":36,"volume":656.58,"operands":{"distinct":28,"total":67,"identifiers":["audio","load_cached_audio","\"mlk\"","input_features","attention_mask","feature_extractor","slice","0","10000","dims","data","expect","toEqual","1","31","160","mean","item","toBeCloseTo","0.01612919569015503","0.9657132029533386","0.12912897765636444","1.2364212274551392","161","0.9703778028488159","at","sum","30"]},"operators":{"distinct":8,"total":60,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":32,"physical":19},"errors":[],"lineEnd":61,"lineStart":43,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.125,"cyclomaticDensity":1.355,"halstead":{"bugs":0.077,"difficulty":2.453,"effort":4507.065,"length":38,"time":250.393,"vocabulary":8.25,"volume":229.687,"operands":{"distinct":6.625,"total":20},"operators":{"distinct":1.625,"total":18}},"paramCount":0.375,"sloc":{"logical":10.375,"physical":8.25}},"methodAverage":{"cyclomatic":1.143,"cyclomaticDensity":38.407,"halstead":{"bugs":0.069,"difficulty":4.047,"effort":1837.378,"length":42.571,"time":102.077,"vocabulary":15.714,"volume":205.869,"operands":{"distinct":11.143,"total":22.571},"operators":{"distinct":4.571,"total":20}},"paramCount":0.429,"sloc":{"logical":11.429,"physical":22}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/swin2sr/test_image_processing_swin2sr.js","testCases":2,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  23 |\n  24 |         expect(pixel_values.dims).toEqual([1, 3, 8, 8]);\n> 25 |         expect(pixel_values.mean().item()).toBeCloseTo(0.5458333368102709, 6);\n     |                                                       ^ Magic Number\n  26 |       },\n  27 |       MAX_TEST_EXECUTION_TIME,\n  28 |     );","start":{"line":25,"column":55,"index":945}},{"frame":"  23 |\n  24 |         expect(pixel_values.dims).toEqual([1, 3, 8, 8]);\n> 25 |         expect(pixel_values.mean().item()).toBeCloseTo(0.5458333368102709, 6);\n     |                                                                           ^ Magic Number\n  26 |       },\n  27 |       MAX_TEST_EXECUTION_TIME,\n  28 |     );","start":{"line":25,"column":75,"index":965}},{"frame":"  34 |         const { pixel_values } = await processor(image);\n  35 |         expect(pixel_values.dims).toEqual([1, 3, 8, 8]);\n> 36 |         expect(pixel_values.mean().item()).toBeCloseTo(0.5, 6);\n     |                                                       ^ Magic Number\n  37 |       },\n  38 |       MAX_TEST_EXECUTION_TIME,\n  39 |     );","start":{"line":36,"column":55,"index":1341}},{"frame":"  34 |         const { pixel_values } = await processor(image);\n  35 |         expect(pixel_values.dims).toEqual([1, 3, 8, 8]);\n> 36 |         expect(pixel_values.mean().item()).toBeCloseTo(0.5, 6);\n     |                                                            ^ Magic Number\n  37 |       },\n  38 |       MAX_TEST_EXECUTION_TIME,\n  39 |     );","start":{"line":36,"column":60,"index":1346}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":17.143,"halstead":{"bugs":0.211,"difficulty":9.15,"effort":5803.372,"length":120,"time":322.41,"vocabulary":39,"volume":634.248,"operands":{"distinct":30,"total":61,"identifiers":["describe","\"Swin2SRImageProcessor\"","model_id","\"Xenova/swin2SR-classical-sr-x2-64\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"Pad to multiple of 8 (3x3 -> 8x8)\"","image","load_cached_image","\"pattern_3x3\"","pixel_values","expect","dims","toEqual","1","3","8","mean","item","toBeCloseTo","0.5458333368102709","6","MAX_TEST_EXECUTION_TIME","\"Do not pad if already a multiple of 8 (8x8 -> 8x8)\"","\"checkerboard_8x8\"","0.5"]},"operators":{"distinct":9,"total":59,"identifiers":["function=>","()","const","=","let",".","{}","[]",","]}},"paramCount":0,"sloc":{"logical":35,"physical":42}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":42,"lineStart":1,"maintainability":118.919,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Swin2SRImageProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":36},"errors":[],"lineEnd":41,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":3.056,"effort":232.672,"length":20,"time":12.926,"vocabulary":14,"volume":76.147,"operands":{"distinct":9,"total":11,"identifiers":["model_id","\"Xenova/swin2SR-classical-sr-x2-64\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"Pad to multiple of 8 (3x3 -> 8x8)\"","MAX_TEST_EXECUTION_TIME","\"Do not pad if already a multiple of 8 (8x8 -> 8x8)\""]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":32},"errors":[],"lineEnd":40,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":16,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.066,"difficulty":4.813,"effort":957.864,"length":44,"time":53.215,"vocabulary":23,"volume":199.037,"operands":{"distinct":16,"total":22,"identifiers":["image","load_cached_image","\"pattern_3x3\"","pixel_values","processor","expect","dims","toEqual","1","3","8","mean","item","toBeCloseTo","0.5458333368102709","6"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":11,"physical":7},"errors":[],"lineEnd":26,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.066,"difficulty":4.813,"effort":957.864,"length":44,"time":53.215,"vocabulary":23,"volume":199.037,"operands":{"distinct":16,"total":22,"identifiers":["image","load_cached_image","\"checkerboard_8x8\"","pixel_values","processor","expect","dims","toEqual","1","3","8","mean","item","toBeCloseTo","0.5","6"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","()","{}",".","[]",","]}},"paramCount":0,"sloc":{"logical":11,"physical":6},"errors":[],"lineEnd":37,"lineStart":32,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.035,"difficulty":1.525,"effort":967.229,"length":20,"time":53.735,"vocabulary":6.5,"volume":105.708,"operands":{"distinct":5,"total":10.167},"operators":{"distinct":1.5,"total":9.833}},"paramCount":0,"sloc":{"logical":5.833,"physical":7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":26.136,"halstead":{"bugs":0.033,"difficulty":3.036,"effort":437.175,"length":23.8,"time":24.288,"vocabulary":14.2,"volume":100.374,"operands":{"distinct":9.4,"total":12.2},"operators":{"distinct":4.8,"total":11.6}},"paramCount":0,"sloc":{"logical":6.8,"physical":16.8}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/t5/test_modeling_t5.js","testCases":4,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  25 |         const { last_hidden_state } = await model({ ...inputs, decoder_input_ids });\n  26 |         expect(last_hidden_state.dims).toEqual([1, 4, 32]);\n> 27 |         expect(last_hidden_state.mean().item()).toBeCloseTo(7.492632721550763e-5, 8);\n     |                                                            ^ Magic Number\n  28 |       },\n  29 |       MAX_TEST_EXECUTION_TIME,\n  30 |     );","start":{"line":27,"column":60,"index":1168}},{"frame":"  25 |         const { last_hidden_state } = await model({ ...inputs, decoder_input_ids });\n  26 |         expect(last_hidden_state.dims).toEqual([1, 4, 32]);\n> 27 |         expect(last_hidden_state.mean().item()).toBeCloseTo(7.492632721550763e-5, 8);\n     |                                                                                  ^ Magic Number\n  28 |       },\n  29 |       MAX_TEST_EXECUTION_TIME,\n  30 |     );","start":{"line":27,"column":82,"index":1190}},{"frame":"  56 |         const outputs = await model({ ...inputs, decoder_input_ids });\n  57 |         expect(outputs.logits.dims).toEqual([1, 4, 32100]);\n> 58 |         expect(outputs.logits.mean().item()).toBeCloseTo(8.867568901393952e-9, 12);\n     |                                                         ^ Magic Number\n  59 |       },\n  60 |       MAX_TEST_EXECUTION_TIME,\n  61 |     );","start":{"line":58,"column":57,"index":2422}},{"frame":"  56 |         const outputs = await model({ ...inputs, decoder_input_ids });\n  57 |         expect(outputs.logits.dims).toEqual([1, 4, 32100]);\n> 58 |         expect(outputs.logits.mean().item()).toBeCloseTo(8.867568901393952e-9, 12);\n     |                                                                               ^ Magic Number\n  59 |       },\n  60 |       MAX_TEST_EXECUTION_TIME,\n  61 |     );","start":{"line":58,"column":79,"index":2444}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":14.118,"halstead":{"bugs":0.624,"difficulty":14.84,"effort":27779.774,"length":312,"time":1543.321,"vocabulary":64,"volume":1872,"operands":{"distinct":53,"total":143,"identifiers":["describe","\"T5Model\"","model_id","\"hf-internal-testing/tiny-random-T5Model\"","model","tokenizer","beforeAll","T5Model","from_pretrained","DEFAULT_MODEL_OPTIONS","T5Tokenizer","MAX_MODEL_LOAD_TIME","it","\"forward\"","inputs","\"Studies have been shown that owning a dog is good for you\"","input_ids","decoder_input_ids","\"Studies show that\"","last_hidden_state","expect","dims","toEqual","1","4","32","mean","item","toBeCloseTo","0.00007492632721550763","8","MAX_TEST_EXECUTION_TIME","afterAll","dispose","MAX_MODEL_DISPOSE_TIME","\"T5ForConditionalGeneration\"","\"hf-internal-testing/tiny-random-T5ForConditionalGeneration\"","T5ForConditionalGeneration","outputs","logits","32100","8.867568901393952e-9","12","\"batch_size=1\"","\"hello\"","generate","max_length","10","tolist","\"batch_size>1\"","\"hello world\"","padding","true"]},"operators":{"distinct":11,"total":169,"identifiers":["function=>","()","const","=","let",".","{}",":","... (spread)","[]",","]}},"paramCount":0,"sloc":{"logical":85,"physical":97}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":97,"lineStart":1,"maintainability":112.789,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"T5Model\"","\"T5ForConditionalGeneration\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":92},"errors":[],"lineEnd":96,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.028,"difficulty":2.5,"effort":210,"length":21,"time":11.667,"vocabulary":16,"volume":84,"operands":{"distinct":11,"total":11,"identifiers":["model_id","\"hf-internal-testing/tiny-random-T5Model\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"forward\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":30},"errors":[],"lineEnd":35,"lineStart":6,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","T5Model","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","T5Tokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":16,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.088,"difficulty":6.395,"effort":1690.797,"length":55,"time":93.933,"vocabulary":28,"volume":264.405,"operands":{"distinct":19,"total":27,"identifiers":["inputs","tokenizer","\"Studies have been shown that owning a dog is good for you\"","input_ids","decoder_input_ids","\"Studies show that\"","last_hidden_state","model","expect","dims","toEqual","1","4","32","mean","item","toBeCloseTo","0.00007492632721550763","8"]},"operators":{"distinct":9,"total":28,"identifiers":["const","=","()","{}",":","... (spread)",".","[]",","]}},"paramCount":0,"sloc":{"logical":15,"physical":9},"errors":[],"lineEnd":28,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":34,"lineStart":32,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.043,"difficulty":3.269,"effort":422.606,"length":31,"time":23.478,"vocabulary":18,"volume":129.268,"operands":{"distinct":13,"total":17,"identifiers":["model_id","\"hf-internal-testing/tiny-random-T5ForConditionalGeneration\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"forward\"","MAX_TEST_EXECUTION_TIME","\"batch_size=1\"","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":60},"errors":[],"lineEnd":95,"lineStart":36,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","T5ForConditionalGeneration","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","T5Tokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":46,"lineStart":43,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.111,"difficulty":6.188,"effort":2060.004,"length":66,"time":114.445,"vocabulary":33,"volume":332.93,"operands":{"distinct":24,"total":33,"identifiers":["inputs","tokenizer","\"Studies have been shown that owning a dog is good for you\"","input_ids","decoder_input_ids","\"Studies show that\"","model","T5ForConditionalGeneration","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","outputs","expect","logits","dims","toEqual","1","4","32100","mean","item","toBeCloseTo","8.867568901393952e-9","12"]},"operators":{"distinct":9,"total":33,"identifiers":["const","=","()","{}",":",".","... (spread)","[]",","]}},"paramCount":0,"sloc":{"logical":16,"physical":10},"errors":[],"lineEnd":59,"lineStart":50,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.056,"difficulty":5.318,"effort":896.407,"length":39,"time":49.8,"vocabulary":20,"volume":168.555,"operands":{"distinct":11,"total":13,"identifiers":["inputs","tokenizer","\"hello\"","outputs","model","generate","max_length","10","expect","tolist","toEqual"]},"operators":{"distinct":9,"total":26,"identifiers":["const","=","()",".","{}","... (spread)",":","[]",","]}},"paramCount":0,"sloc":{"logical":8,"physical":8},"errors":[],"lineEnd":72,"lineStart":65,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.086,"difficulty":5.143,"effort":1326.05,"length":57,"time":73.669,"vocabulary":23,"volume":257.843,"operands":{"distinct":14,"total":16,"identifiers":["inputs","tokenizer","\"hello\"","\"hello world\"","padding","true","outputs","model","generate","max_length","10","expect","tolist","toEqual"]},"operators":{"distinct":9,"total":41,"identifiers":["const","=","()","[]",",","{}",":",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":9,"physical":11},"errors":[],"lineEnd":88,"lineStart":78,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":94,"lineStart":92,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.176,"halstead":{"bugs":0.052,"difficulty":1.237,"effort":2314.981,"length":26,"time":128.61,"vocabulary":5.333,"volume":156,"operands":{"distinct":4.417,"total":11.917},"operators":{"distinct":0.917,"total":14.083}},"paramCount":0,"sloc":{"logical":7.083,"physical":8.083}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.03,"halstead":{"bugs":0.041,"difficulty":3.091,"effort":620.257,"length":28.273,"time":34.459,"vocabulary":15.182,"volume":123.567,"operands":{"distinct":10.273,"total":13},"operators":{"distinct":4.909,"total":15.273}},"paramCount":0,"sloc":{"logical":7.636,"physical":21.273}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/t5/test_tokenization_t5.js","testCases":0,"smells":4,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  271 |     };\n  272 |\n> 273 |     for (const [tokenizerName, test_data] of Object.entries(TESTS)) {\n      |    ^ Conditional Test Logic\n  274 |       it(\n  275 |         tokenizerName,\n  276 |         async () => {","start":{"line":273,"column":4,"index":13167}},{"frame":"  275 |         tokenizerName,\n  276 |         async () => {\n> 277 |           for (const { data, reversible, legacy } of test_data) {\n      |          ^ Conditional Test Logic\n  278 |             const tokenizer = await T5Tokenizer.from_pretrained(tokenizerName, { legacy });\n  279 |\n  280 |             for (const [text, expected] of Object.entries(data)) {","start":{"line":277,"column":10,"index":13298}},{"frame":"  278 |             const tokenizer = await T5Tokenizer.from_pretrained(tokenizerName, { legacy });\n  279 |\n> 280 |             for (const [text, expected] of Object.entries(data)) {\n      |            ^ Conditional Test Logic\n  281 |               const token_ids = tokenizer.encode(text, { add_special_tokens: false });\n  282 |               expect(token_ids).toEqual(expected);\n  283 |","start":{"line":280,"column":12,"index":13459}},{"frame":"  283 |\n  284 |               // If reversible, test that decoding produces the original text\n> 285 |               if (reversible) {\n      |              ^ Conditional Test Logic\n  286 |                 const decoded = tokenizer.decode(token_ids);\n  287 |                 expect(decoded).toEqual(text);\n  288 |               }","start":{"line":285,"column":14,"index":13745}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":2.174,"halstead":{"bugs":6.506,"difficulty":16.343,"effort":319007.479,"length":2261,"time":17722.638,"vocabulary":397,"volume":19519.202,"operands":{"distinct":386,"total":1147,"identifiers":["TOKENIZER_CLASS","T5Tokenizer","TEST_CONFIG","\"Xenova/t5-small\"","SIMPLE","text","BASE_TEST_STRINGS","tokens","\"▁How\"","\"▁are\"","\"▁you\"","\"▁doing\"","\"?\"","ids","571","33","25","692","58","1","decoded","\"How are you doing?</s>\"","SIMPLE_WITH_PUNCTUATION","\"▁You\"","\"▁should\"","\"'\"","\"ve\"","\"▁done\"","\"▁this\"","148","225","31","162","612","48","\"You should've done this</s>\"","NUMBERS","\"▁01\"","\"23\"","\"45\"","\"67\"","\"89\"","\"▁\"","\"0\"","\"▁1\"","\"▁2\"","\"▁3\"","\"▁4\"","\"▁5\"","\"▁6\"","\"▁7\"","\"▁8\"","\"▁9\"","\"▁10\"","\"▁100\"","\"▁1000\"","7088","2773","2128","3708","3914","3","632","209","204","220","314","305","431","489","505","668","335","910","5580","\"0123456789 0 1 2 3 4 5 6 7 8 9 10 100 1000</s>\"","TEXT_WITH_NUMBERS","\"▁The\"","\"▁company\"","\"▁was\"","\"▁founded\"","\"▁in\"","\"▁2016.\"","37","349","47","5710","16","4619","\"The company was founded in 2016.</s>\"","PUNCTUATION","\"▁A\"","\"ll\"","\"!!\"","\"to\"","\"d\"","\"▁of\"","\",\"","\"▁can\"","\"t\"","\".\"","71","195","1603","235","26","13","6","54","17","5","\"A 'll!!to?'d''d of, can't.</s>\"","PYTHON_CODE","\"▁de\"","\"f\"","\"▁main\"","\"()\"","\":\"","\"▁pass\"","20","89","711","9960","10","1903","\"def main(): pass</s>\"","JAVASCRIPT_CODE","\"▁let\"","\"a\"","\"▁=\"","\"o\"","\"b\"","\"j\"","\"Str\"","\"ing\"","\";\"","\"▁to\"","752","9","3274","32","115","354","11500","53","117","12","\"let a = obj.toString(); toString();</s>\"","NEWLINES","\"▁This\"","\"▁is\"","\"▁test\"","100","19","794","\"This is a test.</s>\"","BASIC","\"▁UN\"","\"wan\"","\"té\"","\"running\"","4417","3877","2229","24549","\"UNwantéd,running</s>\"","CONTROL_TOKENS","\"\u0000\"","\"2\"","2","357","\"1<unk>2 3</s>\"","HELLO_WORLD_TITLECASE","\"▁Hello\"","\"▁World\"","8774","1150","\"Hello World</s>\"","HELLO_WORLD_LOWERCASE","\"▁hello\"","\"▁world\"","21820","296","\"hello world</s>\"","CHINESE_ONLY","\"生活的真谛是\"","\"<unk></s>\"","LEADING_SPACE","\"▁leading\"","\"▁space\"","1374","628","\"leading space</s>\"","TRAILING_SPACE","\"▁trail\"","5032","\"trailing space</s>\"","DOUBLE_SPACE","\"▁Hi\"","2018","\"Hi Hello</s>\"","CURRENCY","\"▁$1\"","\"▁R\"","\"▁#3\"","\"▁€\"","\"4\"","\"▁£5\"","\"¥\"","\"6\"","\"₣\"","\"7\"","\"₹\"","\"8\"","\"₱\"","\"9\"","1970","391","20206","3416","591","23978","948","940","927","1298","\"test $1 R2 #3 €4 £5 <unk>6 <unk>7 <unk>8 <unk>9 test</s>\"","CURRENCY_WITH_DECIMALS","\"▁I\"","\"▁bought\"","\"▁an\"","\"▁apple\"","\"▁for\"","\".00\"","\"▁at\"","\"▁the\"","\"▁store\"","27","2944","46","8947","21","4200","44","8","1078","\"I bought an apple for $1.00 at the store.</s>\"","ELLIPSIS","\"...\"","233","\"you...</s>\"","TEXT_WITH_ESCAPE_CHARACTERS","TEXT_WITH_ESCAPE_CHARACTERS_2","\"you... you...</s>\"","TILDE_NORMALIZATION","\"▁weird\"","\"～\"","\"▁edge\"","\"▁case\"","10088","3023","495","\"weird <unk> edge <unk> case</s>\"","SPIECE_UNDERSCORE","POPULAR_EMOJIS","\"😂\"","\"👍\"","\"🤣\"","\"😍\"","\"😭\"","\"🎉\"","\"🙏\"","\"😊\"","\"🔥\"","\"😁\"","\"😅\"","\"🤗\"","\"😆\"","\"👏\"","\"❤️\"","\"💜\"","\"💚\"","\"💗\"","\"💙\"","\"🖤\"","\"😎\"","\"👌\"","\"🥳\"","\"💪\"","\"✨\"","\"👉\"","\"👀\"","\"💯\"","\"🎈\"","\"🙈\"","\"🙌\"","\"💀\"","\"👇\"","\"👋\"","\"✅\"","\"🎁\"","\"🌞\"","\"🌸\"","\"💰\"","\"<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk></s>\"","MULTIBYTE_EMOJIS","\"👁️\"","\"👱🏻\"","\"🕵\"","\"♂️\"","\"🧙🏻\"","\"♂\"","\"👨🏻\"","\"🌾\"","\"🧑\"","\"🤝\"","\"👩\"","\"❤\"","\"💋\"","\"👨\"","\"👧\"","\"👦\"","\"🧑🏻\"","\"🏴󠁧󠁢󠁥󠁮󠁧󠁿\"","\"👨🏼\"","\"<unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk> <unk></s>\"","SPECIAL_WITH_TRAILING_WHITESPACE","SENTENCEPIECE_TEST_STRINGS","\"<\"","\"s\"","\">\"","7","3155","\"<unk>s></s>\"","SPECIAL_SURROUNDED_BY_WHITESPACE","\"</s>\"","\"</s> test</s></s>\"","SPECIAL_NO_WHITESPACE","PREPEND_SCHEME","T5_TEST_STRINGS","\"▁Hey\"","\"▁how\"","9459","149","\"Hey</s>. how are you</s>\"","\"Xenova/t5-tokenizer-new\"","\"trailing space </s>\"","\"you... </s>\"","\"you... you... </s>\"","\"<unk>s> </s>\"","\"</s> test </s> </s>\"","\"test\"","4377","\"</s>test</s></s>\"","\"Hey </s>. how are you</s>\"","\"Xenova/LaMini-Flan-T5-783M\"","\"google-t5/t5-small\"","MAX_EXECUTION_TIME","10000","CUSTOM_TESTS","describe","\"hard-coded\"","TESTS","data","\"Hey </s>. how are you\"","reversible","true","legacy","null","\"</s>\n\"","\"A\n'll\"","false","tokenizerName","test_data","Object","entries","it","tokenizer","from_pretrained","expected","token_ids","encode","add_special_tokens","expect","toEqual","decode"]},"operators":{"distinct":11,"total":1114,"identifiers":["const","=","{}",":",".","[]",",","function=>","()","forof","if"]}},"paramCount":0,"sloc":{"logical":230,"physical":297}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/tokenizers.js","type":"esm"},{"line":2,"path":"../test_strings.js","type":"esm"}],"errors":[],"lineEnd":297,"lineStart":1,"maintainability":66.538,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"hard-coded\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":51},"errors":[],"lineEnd":296,"lineStart":246,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.13,"difficulty":6.667,"effort":2604.727,"length":75,"time":144.707,"vocabulary":37,"volume":390.709,"operands":{"distinct":27,"total":36,"identifiers":["TESTS","\"Xenova/t5-tokenizer-new\"","data","\"Hey </s>. how are you\"","9459","3","1","5","149","33","25","reversible","true","legacy","null","\"</s>\n\"","\"A\n'll\"","71","31","195","false","tokenizerName","test_data","Object","entries","it","MAX_EXECUTION_TIME"]},"operators":{"distinct":10,"total":39,"identifiers":["const","=","{}",":","[]",",","forof",".","()","function=>"]}},"paramCount":0,"sloc":{"logical":14,"physical":47},"errors":[],"lineEnd":295,"lineStart":249,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":13.333,"halstead":{"bugs":0.105,"difficulty":8.5,"effort":2669.348,"length":64,"time":148.297,"vocabulary":30,"volume":314.041,"operands":{"distinct":20,"total":34,"identifiers":["data","reversible","legacy","test_data","tokenizer","T5Tokenizer","from_pretrained","tokenizerName","text","expected","Object","entries","token_ids","encode","add_special_tokens","false","expect","toEqual","decoded","decode"]},"operators":{"distinct":10,"total":30,"identifiers":["forof","const","{}","=","()",".","[]",",",":","if"]}},"paramCount":0,"sloc":{"logical":15,"physical":16},"errors":[],"lineEnd":291,"lineStart":276,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.25,"cyclomaticDensity":0.543,"halstead":{"bugs":1.627,"difficulty":4.086,"effort":79751.87,"length":565.25,"time":4430.659,"vocabulary":99.25,"volume":4879.801,"operands":{"distinct":96.5,"total":286.75},"operators":{"distinct":2.75,"total":278.5}},"paramCount":0,"sloc":{"logical":57.5,"physical":74.25}},"methodAverage":{"cyclomatic":1.333,"cyclomaticDensity":23.492,"halstead":{"bugs":0.079,"difficulty":5.389,"effort":1760.692,"length":47.667,"time":97.816,"vocabulary":23.667,"volume":237.583,"operands":{"distinct":16.333,"total":24},"operators":{"distinct":7.333,"total":23.667}},"paramCount":0,"sloc":{"logical":10.333,"physical":38}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/vit/test_image_processing_vit.js","testCases":1,"smells":1,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  21 |\n  22 |         expect(pixel_values.dims).toEqual([1, 3, 224, 224]);\n> 23 |         expect(pixel_values.mean().item()).toBeCloseTo(-0.22706867939852762, 6);\n     |                                                                             ^ Magic Number\n  24 |\n  25 |         expect(original_sizes).toEqual([[408, 612]]);\n  26 |         expect(reshaped_input_sizes).toEqual([[224, 224]]);","start":{"line":23,"column":77,"index":873}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.175,"difficulty":8.065,"effort":4234.194,"length":98,"time":235.233,"vocabulary":41,"volume":525.04,"operands":{"distinct":31,"total":50,"identifiers":["describe","\"ViTFeatureExtractor\"","model_id","\"Xenova/vit-base-patch16-224\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.22706867939852762","6","408","612","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":10,"total":48,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":28,"physical":32}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":32,"lineStart":1,"maintainability":120.035,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"ViTFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":26},"errors":[],"lineEnd":31,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/vit-base-patch16-224\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":30,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":14,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.114,"difficulty":7.2,"effort":2457.52,"length":71,"time":136.529,"vocabulary":28,"volume":341.322,"operands":{"distinct":20,"total":36,"identifiers":["image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","224","mean","item","toBeCloseTo","0.22706867939852762","6","408","612"]},"operators":{"distinct":8,"total":35,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":27,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.035,"difficulty":1.613,"effort":846.839,"length":19.6,"time":47.047,"vocabulary":8.2,"volume":105.008,"operands":{"distinct":6.2,"total":10},"operators":{"distinct":2,"total":9.6}},"paramCount":0,"sloc":{"logical":5.6,"physical":6.4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.637,"halstead":{"bugs":0.035,"difficulty":3.05,"effort":658.441,"length":24.25,"time":36.58,"vocabulary":13,"volume":106.12,"operands":{"distinct":8.5,"total":12.5},"operators":{"distinct":4.5,"total":11.75}},"paramCount":0,"sloc":{"logical":6.75,"physical":15.75}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/vitmatte/test_image_processing_vitmatte.js","testCases":2,"smells":3,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  36 |         expect(data[640 * 960]).toBeCloseTo(-1.0);\n  37 |         expect(data[640 * 960 + 1]).toBeCloseTo(-1.0);\n> 38 |         expect(data.at(-1)).toBeCloseTo(0.0);\n     |                                        ^ Magic Number\n  39 |\n  40 |         expect(original_sizes).toEqual([[640, 960]]);\n  41 |         expect(reshaped_input_sizes).toEqual([[640, 960]]);","start":{"line":38,"column":40,"index":1640}},{"frame":"  55 |         expect(data[0]).toBeCloseTo(-0.9921568632125854);\n  56 |         expect(data[1]).toBeCloseTo(-0.9686274528503418);\n> 57 |         expect(data[5]).toBeCloseTo(0.0);\n     |                                    ^ Magic Number\n  58 |         expect(data[32]).toBeCloseTo(-0.9215686321258545);\n  59 |         expect(data[33]).toBeCloseTo(-0.8980392217636108);\n  60 |         expect(data.at(-1)).toBeCloseTo(0.0);","start":{"line":57,"column":36,"index":2405}},{"frame":"  58 |         expect(data[32]).toBeCloseTo(-0.9215686321258545);\n  59 |         expect(data[33]).toBeCloseTo(-0.8980392217636108);\n> 60 |         expect(data.at(-1)).toBeCloseTo(0.0);\n     |                                        ^ Magic Number\n  61 |\n  62 |         expect(original_sizes).toEqual([[5, 3]]);\n  63 |         expect(reshaped_input_sizes).toEqual([[5, 3]]);","start":{"line":60,"column":40,"index":2569}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":6.897,"halstead":{"bugs":0.683,"difficulty":22.25,"effort":45605.626,"length":347,"time":2533.646,"vocabulary":60,"volume":2049.691,"operands":{"distinct":48,"total":178,"identifiers":["describe","\"VitMatteImageProcessor\"","model_id","\"Xenova/vitmatte-small-distinctions-646\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"w/o resize\"","image","load_cached_image","\"vitmatte_image\"","image2","\"vitmatte_trimap\"","pixel_values","original_sizes","reshaped_input_sizes","data","dims","expect","toEqual","1","4","640","960","mean","item","toBeCloseTo","0.4028555154800415","0","0.9921568632125854","5","0.6784313917160034","641","0.6705882549285889","at","MAX_TEST_EXECUTION_TIME","\"w/ resize\"","\"pattern_3x5\"","32","0.00867417361587286","0.9686274528503418","0.9215686321258545","33","0.8980392217636108","3"]},"operators":{"distinct":12,"total":169,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)","*","+"]}},"paramCount":0,"sloc":{"logical":87,"physical":69}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":69,"lineStart":1,"maintainability":97.118,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"VitMatteImageProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":63},"errors":[],"lineEnd":68,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":3.056,"effort":232.672,"length":20,"time":12.926,"vocabulary":14,"volume":76.147,"operands":{"distinct":9,"total":11,"identifiers":["model_id","\"Xenova/vitmatte-small-distinctions-646\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"w/o resize\"","MAX_TEST_EXECUTION_TIME","\"w/ resize\""]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":56},"errors":[],"lineEnd":67,"lineStart":12,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":19,"lineStart":17,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.299,"difficulty":15.536,"effort":13941.682,"length":171,"time":774.538,"vocabulary":38,"volume":897.396,"operands":{"distinct":28,"total":87,"identifiers":["image","load_cached_image","\"vitmatte_image\"","image2","\"vitmatte_trimap\"","pixel_values","original_sizes","reshaped_input_sizes","processor","data","dims","expect","toEqual","1","4","640","960","mean","item","toBeCloseTo","0.4028555154800415","0","0.9921568632125854","5","0.6784313917160034","641","0.6705882549285889","at"]},"operators":{"distinct":10,"total":84,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)","*","+"]}},"paramCount":0,"sloc":{"logical":39,"physical":20},"errors":[],"lineEnd":42,"lineStart":23,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.248,"difficulty":10.571,"effort":7870.103,"length":144,"time":437.228,"vocabulary":36,"volume":744.469,"operands":{"distinct":28,"total":74,"identifiers":["image","load_cached_image","\"pattern_3x5\"","image2","pixel_values","original_sizes","reshaped_input_sizes","processor","data","dims","expect","toEqual","1","4","32","mean","item","toBeCloseTo","0.00867417361587286","0","0.9921568632125854","0.9686274528503418","5","0.9215686321258545","33","0.8980392217636108","at","3"]},"operators":{"distinct":8,"total":70,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":35,"physical":17},"errors":[],"lineEnd":64,"lineStart":48,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.149,"halstead":{"bugs":0.114,"difficulty":3.708,"effort":7600.938,"length":57.833,"time":422.274,"vocabulary":10,"volume":341.615,"operands":{"distinct":8,"total":29.667},"operators":{"distinct":2,"total":28.167}},"paramCount":0,"sloc":{"logical":14.5,"physical":11.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":23.584,"halstead":{"bugs":0.116,"difficulty":6.333,"effort":4416.387,"length":69.2,"time":245.355,"vocabulary":19.8,"volume":349.133,"operands":{"distinct":14.2,"total":35.6},"operators":{"distinct":5.6,"total":33.6}},"paramCount":0,"sloc":{"logical":17.2,"physical":31.8}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/vitpose/test_image_processing_vitpose.js","testCases":2,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  21 |\n  22 |         expect(pixel_values.dims).toEqual([1, 3, 256, 192]);\n> 23 |         expect(pixel_values.mean().item()).toBeCloseTo(-0.2771204710006714, 6);\n     |                                                                            ^ Magic Number\n  24 |\n  25 |         expect(original_sizes).toEqual([[408, 612]]);\n  26 |         expect(reshaped_input_sizes).toEqual([[256, 192]]);","start":{"line":23,"column":76,"index":899}},{"frame":"  43 |         expect(labels).toHaveLength(num_classes);\n  44 |         expect(keypoints).toHaveLength(num_classes);\n> 45 |         expect(keypoints[0]).toHaveLength(2);\n     |                                          ^ Magic Number\n  46 |       },\n  47 |       MAX_TEST_EXECUTION_TIME,\n  48 |     );","start":{"line":45,"column":42,"index":1663}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":11.538,"halstead":{"bugs":0.398,"difficulty":10.896,"effort":13010.094,"length":199,"time":722.783,"vocabulary":64,"volume":1194,"operands":{"distinct":53,"total":105,"identifiers":["describe","\"VitPoseImageProcessor\"","model_id","\"onnx-community/vitpose-base-simple\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","256","192","mean","item","toBeCloseTo","0.2771204710006714","6","408","612","MAX_TEST_EXECUTION_TIME","\"post_process_pose_estimation\"","num_classes","17","size","0","1000","1500","heatmaps","rand","64","48","boxes","bbox","scores","labels","keypoints","post_process_pose_estimation","threshold","null","toHaveLength","2"]},"operators":{"distinct":11,"total":94,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)",":"]}},"paramCount":0,"sloc":{"logical":52,"physical":51}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":51,"lineStart":1,"maintainability":109.745,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"VitPoseImageProcessor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":45},"errors":[],"lineEnd":50,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":3.056,"effort":232.672,"length":20,"time":12.926,"vocabulary":14,"volume":76.147,"operands":{"distinct":9,"total":11,"identifiers":["model_id","\"onnx-community/vitpose-base-simple\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME","\"post_process_pose_estimation\""]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":43},"errors":[],"lineEnd":49,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":14,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.115,"difficulty":6.857,"effort":2365.143,"length":71,"time":131.397,"vocabulary":29,"volume":344.917,"operands":{"distinct":21,"total":36,"identifiers":["image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","256","192","mean","item","toBeCloseTo","0.2771204710006714","6","408","612"]},"operators":{"distinct":8,"total":35,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":27,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.16,"difficulty":8.667,"effort":4160,"length":96,"time":231.111,"vocabulary":32,"volume":480,"operands":{"distinct":24,"total":52,"identifiers":["num_classes","17","size","0","1000","1500","heatmaps","rand","1","64","48","boxes","bbox","scores","labels","keypoints","processor","post_process_pose_estimation","threshold","null","expect","toEqual","toHaveLength","2"]},"operators":{"distinct":8,"total":44,"identifiers":["const","=","[]",",","()","{}",".",":"]}},"paramCount":0,"sloc":{"logical":22,"physical":14},"errors":[],"lineEnd":46,"lineStart":33,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.923,"halstead":{"bugs":0.066,"difficulty":1.816,"effort":2168.349,"length":33.167,"time":120.464,"vocabulary":10.667,"volume":199,"operands":{"distinct":8.833,"total":17.5},"operators":{"distinct":1.833,"total":15.667}},"paramCount":0,"sloc":{"logical":8.667,"physical":8.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":24.586,"halstead":{"bugs":0.062,"difficulty":4.216,"effort":1359.058,"length":39.6,"time":75.503,"vocabulary":17.2,"volume":185.743,"operands":{"distinct":12,"total":21},"operators":{"distinct":5.2,"total":18.6}},"paramCount":0,"sloc":{"logical":10.2,"physical":23}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/wespeaker_resnet/test_feature_extraction_wespeaker_resnet.js","testCases":2,"smells":8,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  22 |         expect(dims).toEqual([1, 98, 80]);\n  23 |\n> 24 |         expect(input_features.mean().item()).toBeCloseTo(5.461731689138105e-8);\n     |                                                         ^ Magic Number\n  25 |         expect(data[0]).toBeCloseTo(-0.19300270080566406);\n  26 |         expect(data[1]).toBeCloseTo(-0.05825042724609375);\n  27 |         expect(data[78]).toBeCloseTo(0.2683420181274414);","start":{"line":24,"column":57,"index":923}},{"frame":"  25 |         expect(data[0]).toBeCloseTo(-0.19300270080566406);\n  26 |         expect(data[1]).toBeCloseTo(-0.05825042724609375);\n> 27 |         expect(data[78]).toBeCloseTo(0.2683420181274414);\n     |                                     ^ Magic Number\n  28 |         expect(data[79]).toBeCloseTo(0.26250171661376953);\n  29 |         expect(data[80]).toBeCloseTo(0.19062232971191406);\n  30 |         expect(data.at(-2)).toBeCloseTo(-0.43694400787353516);","start":{"line":27,"column":37,"index":1101}},{"frame":"  26 |         expect(data[1]).toBeCloseTo(-0.05825042724609375);\n  27 |         expect(data[78]).toBeCloseTo(0.2683420181274414);\n> 28 |         expect(data[79]).toBeCloseTo(0.26250171661376953);\n     |                                     ^ Magic Number\n  29 |         expect(data[80]).toBeCloseTo(0.19062232971191406);\n  30 |         expect(data.at(-2)).toBeCloseTo(-0.43694400787353516);\n  31 |         expect(data.at(-1)).toBeCloseTo(-0.4266204833984375);","start":{"line":28,"column":37,"index":1159}},{"frame":"  27 |         expect(data[78]).toBeCloseTo(0.2683420181274414);\n  28 |         expect(data[79]).toBeCloseTo(0.26250171661376953);\n> 29 |         expect(data[80]).toBeCloseTo(0.19062232971191406);\n     |                                     ^ Magic Number\n  30 |         expect(data.at(-2)).toBeCloseTo(-0.43694400787353516);\n  31 |         expect(data.at(-1)).toBeCloseTo(-0.4266204833984375);\n  32 |       },","start":{"line":29,"column":37,"index":1218}},{"frame":"  43 |\n  44 |         expect(input_features.mean().item()).toBeCloseTo(-0.0000010093053181966146);\n> 45 |         expect(data[0]).toBeCloseTo(20.761859893798828);\n     |                                    ^ Magic Number\n  46 |         expect(data[1]).toBeCloseTo(21.02924346923828);\n  47 |         expect(data[78]).toBeCloseTo(19.083993911743164);\n  48 |         expect(data[79]).toBeCloseTo(18.003454208374023);","start":{"line":45,"column":36,"index":1828}},{"frame":"  44 |         expect(input_features.mean().item()).toBeCloseTo(-0.0000010093053181966146);\n  45 |         expect(data[0]).toBeCloseTo(20.761859893798828);\n> 46 |         expect(data[1]).toBeCloseTo(21.02924346923828);\n     |                                    ^ Magic Number\n  47 |         expect(data[78]).toBeCloseTo(19.083993911743164);\n  48 |         expect(data[79]).toBeCloseTo(18.003454208374023);\n  49 |         expect(data[80]).toBeCloseTo(-2.595233917236328);","start":{"line":46,"column":36,"index":1885}},{"frame":"  45 |         expect(data[0]).toBeCloseTo(20.761859893798828);\n  46 |         expect(data[1]).toBeCloseTo(21.02924346923828);\n> 47 |         expect(data[78]).toBeCloseTo(19.083993911743164);\n     |                                     ^ Magic Number\n  48 |         expect(data[79]).toBeCloseTo(18.003454208374023);\n  49 |         expect(data[80]).toBeCloseTo(-2.595233917236328);\n  50 |         expect(data.at(-2)).toBeCloseTo(-2.385499954223633);","start":{"line":47,"column":37,"index":1942}},{"frame":"  46 |         expect(data[1]).toBeCloseTo(21.02924346923828);\n  47 |         expect(data[78]).toBeCloseTo(19.083993911743164);\n> 48 |         expect(data[79]).toBeCloseTo(18.003454208374023);\n     |                                     ^ Magic Number\n  49 |         expect(data[80]).toBeCloseTo(-2.595233917236328);\n  50 |         expect(data.at(-2)).toBeCloseTo(-2.385499954223633);\n  51 |         expect(data.at(-1)).toBeCloseTo(-2.2504329681396484);","start":{"line":48,"column":37,"index":2000}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":10.127,"halstead":{"bugs":0.605,"difficulty":16.393,"effort":29737.691,"length":298,"time":1652.094,"vocabulary":68,"volume":1814.064,"operands":{"distinct":56,"total":153,"identifiers":["describe","\"WeSpeakerFeatureExtractor\"","model_id","\"onnx-community/wespeaker-voxceleb-resnet34-LM\"","feature_extractor","beforeAll","AutoFeatureExtractor","from_pretrained","MAX_FEATURE_EXTRACTOR_LOAD_TIME","it","\"default\"","audio","Float32Array","16000","map","_","i","Math","sin","100","input_features","dims","data","expect","toEqual","1","98","80","mean","item","toBeCloseTo","5.461731689138105e-8","0","0.19300270080566406","0.05825042724609375","78","0.2683420181274414","79","0.26250171661376953","0.19062232971191406","at","2","0.43694400787353516","0.4266204833984375","MAX_TEST_EXECUTION_TIME","\"pad to `min_num_frames`\"","3","9","0.0000010093053181966146","20.761859893798828","21.02924346923828","19.083993911743164","18.003454208374023","2.595233917236328","2.385499954223633","2.2504329681396484"]},"operators":{"distinct":12,"total":145,"identifiers":["function=>","()","const","=","let",".","new","/","{}","[]",",","- (prefix)"]}},"paramCount":4,"sloc":{"logical":79,"physical":57}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":57,"lineStart":1,"maintainability":105.787,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"WeSpeakerFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":52},"errors":[],"lineEnd":56,"lineStart":5,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":3.056,"effort":232.672,"length":20,"time":12.926,"vocabulary":14,"volume":76.147,"operands":{"distinct":9,"total":11,"identifiers":["model_id","\"onnx-community/wespeaker-voxceleb-resnet34-LM\"","feature_extractor","beforeAll","MAX_FEATURE_EXTRACTOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME","\"pad to `min_num_frames`\""]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":49},"errors":[],"lineEnd":55,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["feature_extractor","AutoFeatureExtractor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":14,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.225,"difficulty":10.323,"effort":6968.274,"length":126,"time":387.126,"vocabulary":41,"volume":675.052,"operands":{"distinct":31,"total":64,"identifiers":["audio","Float32Array","16000","map","_","i","input_features","feature_extractor","dims","data","expect","toEqual","1","98","80","mean","item","toBeCloseTo","5.461731689138105e-8","0","0.19300270080566406","0.05825042724609375","78","0.2683420181274414","79","0.26250171661376953","0.19062232971191406","at","2","0.43694400787353516","0.4266204833984375"]},"operators":{"distinct":10,"total":62,"identifiers":["const","=","()",".","new","function=>","{}","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":31,"physical":15},"errors":[],"lineEnd":32,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["Math","sin","i","100"]},"operators":{"distinct":3,"total":3,"identifiers":["()",".","/"]}},"paramCount":2,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":19,"lineStart":19,"name":"<anon method-5>","paramNames":["_","i"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.225,"difficulty":10.323,"effort":6968.274,"length":126,"time":387.126,"vocabulary":41,"volume":675.052,"operands":{"distinct":31,"total":64,"identifiers":["audio","Float32Array","3","map","_","i","input_features","feature_extractor","dims","data","expect","toEqual","1","9","80","mean","item","toBeCloseTo","0.0000010093053181966146","0","20.761859893798828","21.02924346923828","78","19.083993911743164","79","18.003454208374023","2.595233917236328","at","2","2.385499954223633","2.2504329681396484"]},"operators":{"distinct":10,"total":62,"identifiers":["const","=","()",".","new","function=>","{}","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":31,"physical":15},"errors":[],"lineEnd":52,"lineStart":38,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["Math","sin","i","100"]},"operators":{"distinct":3,"total":3,"identifiers":["()",".","/"]}},"paramCount":2,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":39,"lineStart":39,"name":"<anon method-7>","paramNames":["_","i"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.266,"halstead":{"bugs":0.076,"difficulty":2.049,"effort":3717.211,"length":37.25,"time":206.512,"vocabulary":8.5,"volume":226.758,"operands":{"distinct":7,"total":19.125},"operators":{"distinct":1.5,"total":18.125}},"paramCount":0.5,"sloc":{"logical":9.875,"physical":7.125}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":31.279,"halstead":{"bugs":0.071,"difficulty":4.172,"effort":2037.95,"length":42.429,"time":113.219,"vocabulary":17.286,"volume":213.315,"operands":{"distinct":12.143,"total":21.857},"operators":{"distinct":5.143,"total":20.571}},"paramCount":0.571,"sloc":{"logical":11.143,"physical":19.429}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/whisper/test_feature_extraction_whisper.js","testCases":3,"smells":13,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  23 |         expect(dims).toEqual([1, 80, 3000]);\n  24 |         expect(input_features.mean().item()).toBeCloseTo(-0.2813588131551941);\n> 25 |         expect(data[0]).toBeCloseTo(0.33168578147888184);\n     |                                    ^ Magic Number\n  26 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n  27 |         expect(data[81]).toBeCloseTo(0.10727232694625854);\n  28 |         expect(data[3001]).toBeCloseTo(0.2555035352706909);","start":{"line":25,"column":36,"index":983}},{"frame":"  24 |         expect(input_features.mean().item()).toBeCloseTo(-0.2813588131551941);\n  25 |         expect(data[0]).toBeCloseTo(0.33168578147888184);\n> 26 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n     |                                    ^ Magic Number\n  27 |         expect(data[81]).toBeCloseTo(0.10727232694625854);\n  28 |         expect(data[3001]).toBeCloseTo(0.2555035352706909);\n  29 |       },","start":{"line":26,"column":36,"index":1041}},{"frame":"  25 |         expect(data[0]).toBeCloseTo(0.33168578147888184);\n  26 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n> 27 |         expect(data[81]).toBeCloseTo(0.10727232694625854);\n     |                                     ^ Magic Number\n  28 |         expect(data[3001]).toBeCloseTo(0.2555035352706909);\n  29 |       },\n  30 |       MAX_TEST_EXECUTION_TIME,","start":{"line":27,"column":37,"index":1100}},{"frame":"  26 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n  27 |         expect(data[81]).toBeCloseTo(0.10727232694625854);\n> 28 |         expect(data[3001]).toBeCloseTo(0.2555035352706909);\n     |                                       ^ Magic Number\n  29 |       },\n  30 |       MAX_TEST_EXECUTION_TIME,\n  31 |     );","start":{"line":28,"column":39,"index":1161}},{"frame":"  38 |         const { dims, data } = input_features;\n  39 |         expect(dims).toEqual([1, 80, 500]);\n> 40 |         expect(input_features.mean().item()).toBeCloseTo(0.20474646985530853);\n     |                                                         ^ Magic Number\n  41 |         expect(data[0]).toBeCloseTo(0.33168578147888184);\n  42 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n  43 |         expect(data[81]).toBeCloseTo(0.10727238655090332);","start":{"line":40,"column":57,"index":1620}},{"frame":"  39 |         expect(dims).toEqual([1, 80, 500]);\n  40 |         expect(input_features.mean().item()).toBeCloseTo(0.20474646985530853);\n> 41 |         expect(data[0]).toBeCloseTo(0.33168578147888184);\n     |                                    ^ Magic Number\n  42 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n  43 |         expect(data[81]).toBeCloseTo(0.10727238655090332);\n  44 |         expect(data[3001]).toBeCloseTo(0.4018087387084961);","start":{"line":41,"column":36,"index":1678}},{"frame":"  40 |         expect(input_features.mean().item()).toBeCloseTo(0.20474646985530853);\n  41 |         expect(data[0]).toBeCloseTo(0.33168578147888184);\n> 42 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n     |                                    ^ Magic Number\n  43 |         expect(data[81]).toBeCloseTo(0.10727238655090332);\n  44 |         expect(data[3001]).toBeCloseTo(0.4018087387084961);\n  45 |         expect(data.at(-1)).toBeCloseTo(-0.41003990173339844);","start":{"line":42,"column":36,"index":1736}},{"frame":"  41 |         expect(data[0]).toBeCloseTo(0.33168578147888184);\n  42 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n> 43 |         expect(data[81]).toBeCloseTo(0.10727238655090332);\n     |                                     ^ Magic Number\n  44 |         expect(data[3001]).toBeCloseTo(0.4018087387084961);\n  45 |         expect(data.at(-1)).toBeCloseTo(-0.41003990173339844);\n  46 |       },","start":{"line":43,"column":37,"index":1795}},{"frame":"  42 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n  43 |         expect(data[81]).toBeCloseTo(0.10727238655090332);\n> 44 |         expect(data[3001]).toBeCloseTo(0.4018087387084961);\n     |                                       ^ Magic Number\n  45 |         expect(data.at(-1)).toBeCloseTo(-0.41003990173339844);\n  46 |       },\n  47 |       MAX_TEST_EXECUTION_TIME,","start":{"line":44,"column":39,"index":1856}},{"frame":"  56 |         expect(dims).toEqual([1, 80, 2500]);\n  57 |         expect(input_features.mean().item()).toBeCloseTo(-0.20426231622695923);\n> 58 |         expect(data[0]).toBeCloseTo(0.33168578147888184);\n     |                                    ^ Magic Number\n  59 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n  60 |         expect(data[81]).toBeCloseTo(0.10727238655090332);\n  61 |         expect(data[3001]).toBeCloseTo(0.18040966987609863);","start":{"line":58,"column":36,"index":2439}},{"frame":"  57 |         expect(input_features.mean().item()).toBeCloseTo(-0.20426231622695923);\n  58 |         expect(data[0]).toBeCloseTo(0.33168578147888184);\n> 59 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n     |                                    ^ Magic Number\n  60 |         expect(data[81]).toBeCloseTo(0.10727238655090332);\n  61 |         expect(data[3001]).toBeCloseTo(0.18040966987609863);\n  62 |         expect(data.at(-1)).toBeCloseTo(-0.6668410897254944);","start":{"line":59,"column":36,"index":2497}},{"frame":"  58 |         expect(data[0]).toBeCloseTo(0.33168578147888184);\n  59 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n> 60 |         expect(data[81]).toBeCloseTo(0.10727238655090332);\n     |                                     ^ Magic Number\n  61 |         expect(data[3001]).toBeCloseTo(0.18040966987609863);\n  62 |         expect(data.at(-1)).toBeCloseTo(-0.6668410897254944);\n  63 |       },","start":{"line":60,"column":37,"index":2556}},{"frame":"  59 |         expect(data[1]).toBeCloseTo(0.30986475944519043);\n  60 |         expect(data[81]).toBeCloseTo(0.10727238655090332);\n> 61 |         expect(data[3001]).toBeCloseTo(0.18040966987609863);\n     |                                       ^ Magic Number\n  62 |         expect(data.at(-1)).toBeCloseTo(-0.6668410897254944);\n  63 |       },\n  64 |       MAX_TEST_EXECUTION_TIME,","start":{"line":61,"column":39,"index":2617}}]}],"metrics":{"aggregate":{"cyclomatic":7,"cyclomaticDensity":7.865,"halstead":{"bugs":0.647,"difficulty":20.4,"effort":39597.787,"length":326,"time":2199.877,"vocabulary":62,"volume":1941.068,"operands":{"distinct":50,"total":170,"identifiers":["describe","\"WhisperFeatureExtractor\"","model_id","\"Xenova/whisper-tiny.en\"","feature_extractor","beforeAll","AutoFeatureExtractor","from_pretrained","MAX_FEATURE_EXTRACTOR_LOAD_TIME","it","\"default\"","audio","load_cached_audio","\"mlk\"","input_features","dims","data","expect","toEqual","1","80","3000","mean","item","toBeCloseTo","0.2813588131551941","0","0.33168578147888184","0.30986475944519043","81","0.10727232694625854","3001","0.2555035352706909","MAX_TEST_EXECUTION_TIME","\"max_length (max_length < audio.length < max_num_samples)\"","max_length","5","16000","500","0.20474646985530853","0.10727238655090332","0.4018087387084961","at","0.41003990173339844","\"max_length (audio.length < max_length < max_num_samples)\"","25","2500","0.20426231622695923","0.18040966987609863","0.6668410897254944"]},"operators":{"distinct":12,"total":156,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)",":","*"]}},"paramCount":0,"sloc":{"logical":89,"physical":68}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":68,"lineStart":1,"maintainability":100.257,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"WhisperFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":62},"errors":[],"lineEnd":67,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.033,"difficulty":3.5,"effort":341.853,"length":25,"time":18.992,"vocabulary":15,"volume":97.672,"operands":{"distinct":10,"total":14,"identifiers":["model_id","\"Xenova/whisper-tiny.en\"","feature_extractor","beforeAll","MAX_FEATURE_EXTRACTOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME","\"max_length (max_length < audio.length < max_num_samples)\"","\"max_length (audio.length < max_length < max_num_samples)\""]},"operators":{"distinct":5,"total":11,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":59},"errors":[],"lineEnd":66,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["feature_extractor","AutoFeatureExtractor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.139,"difficulty":7.652,"effort":3184.471,"length":84,"time":176.915,"vocabulary":31,"volume":416.152,"operands":{"distinct":23,"total":44,"identifiers":["audio","load_cached_audio","\"mlk\"","input_features","feature_extractor","dims","data","expect","toEqual","1","80","3000","mean","item","toBeCloseTo","0.2813588131551941","0","0.33168578147888184","0.30986475944519043","81","0.10727232694625854","3001","0.2555035352706909"]},"operators":{"distinct":8,"total":40,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":22,"physical":11},"errors":[],"lineEnd":29,"lineStart":19,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.178,"difficulty":9.464,"effort":5066.124,"length":102,"time":281.451,"vocabulary":38,"volume":535.289,"operands":{"distinct":28,"total":53,"identifiers":["audio","load_cached_audio","\"mlk\"","input_features","feature_extractor","max_length","5","16000","dims","data","expect","toEqual","1","80","500","mean","item","toBeCloseTo","0.20474646985530853","0","0.33168578147888184","0.30986475944519043","81","0.10727238655090332","3001","0.4018087387084961","at","0.41003990173339844"]},"operators":{"distinct":10,"total":49,"identifiers":["const","=","()","{}",":","*",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":26,"physical":12},"errors":[],"lineEnd":46,"lineStart":35,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.18,"difficulty":9.464,"effort":5115.792,"length":103,"time":284.211,"vocabulary":38,"volume":540.537,"operands":{"distinct":28,"total":53,"identifiers":["audio","load_cached_audio","\"mlk\"","input_features","feature_extractor","max_length","25","16000","dims","data","expect","toEqual","1","80","2500","mean","item","toBeCloseTo","0.20426231622695923","0","0.33168578147888184","0.30986475944519043","81","0.10727238655090332","3001","0.18040966987609863","at","0.6668410897254944"]},"operators":{"distinct":10,"total":50,"identifiers":["const","=","()","{}",":","*",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":26,"physical":12},"errors":[],"lineEnd":63,"lineStart":52,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.124,"halstead":{"bugs":0.092,"difficulty":2.914,"effort":5656.827,"length":46.571,"time":314.268,"vocabulary":8.857,"volume":277.295,"operands":{"distinct":7.143,"total":24.286},"operators":{"distinct":1.714,"total":22.286}},"paramCount":0,"sloc":{"logical":12.714,"physical":9.714}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":20.373,"halstead":{"bugs":0.09,"difficulty":5.43,"effort":2290.953,"length":54.167,"time":127.275,"vocabulary":22.167,"volume":269.55,"operands":{"distinct":15.833,"total":28.333},"operators":{"distinct":6.333,"total":25.833}},"paramCount":0,"sloc":{"logical":14.667,"physical":26.5}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/whisper/test_tokenization_whisper.js","testCases":2,"smells":4,"smellInfo":[{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  633 |         ];\n  634 |\n> 635 |         compare(\n      |        ^ Lazy Test\n  636 |           tokenizer._decode_asr(model_outputs, {\n  637 |             return_timestamps: \"word\",\n  638 |             time_precision: 0.02,","start":{"line":635,"column":8,"index":41068}},{"frame":"  763 |         ];\n  764 |\n> 765 |         compare(\n      |        ^ Lazy Test\n  766 |           tokenizer._decode_asr(model_outputs, {\n  767 |             return_timestamps: \"word\",\n  768 |             time_precision: 0.02,","start":{"line":765,"column":8,"index":49532}}]},{"name":"Unknown Test","packageName":"unknownTest","items":[{"frame":"  515 | export const CUSTOM_TESTS = () => {\n  516 |   describe(\"Decode ASR\", () => {\n> 517 |     it(\n      |    ^ Unknown Test\n  518 |       \"should decode ASR outputs\",\n  519 |       async () => {\n  520 |         const tokenizer = await WhisperTokenizer.from_pretrained(\"onnx-community/whisper-tiny.en_timestamped\");","start":{"column":4,"line":517}},{"frame":"  646 |     );\n  647 |\n> 648 |     it(\n      |    ^ Unknown Test\n  649 |       \"should handle overlapping edge case\",\n  650 |       async () => {\n  651 |         const tokenizer = await WhisperTokenizer.from_pretrained(\"onnx-community/whisper-tiny.en_timestamped\");","start":{"column":4,"line":648}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":0.617,"halstead":{"bugs":25.982,"difficulty":18.458,"effort":1438690.555,"length":7913,"time":79927.253,"vocabulary":923,"volume":77944.528,"operands":{"distinct":914,"total":3749,"identifiers":["TOKENIZER_CLASS","WhisperTokenizer","TEST_CONFIG","\"onnx-community/whisper-tiny.en\"","SIMPLE","text","BASE_TEST_STRINGS","tokens","\"How\"","\"Ġare\"","\"Ġyou\"","\"Ġdoing\"","\"?\"","ids","50257","50362","2437","389","345","1804","30","50256","decoded","\"<|startoftranscript|><|notimestamps|>How are you doing?<|endoftext|>\"","SIMPLE_WITH_PUNCTUATION","\"You\"","\"Ġshould\"","\"'ve\"","\"Ġdone\"","\"Ġthis\"","1639","815","1053","1760","428","\"<|startoftranscript|><|notimestamps|>You should've done this<|endoftext|>\"","NUMBERS","\"01\"","\"23\"","\"45\"","\"67\"","\"89\"","\"Ġ0\"","\"Ġ1\"","\"Ġ2\"","\"Ġ3\"","\"Ġ4\"","\"Ġ5\"","\"Ġ6\"","\"Ġ7\"","\"Ġ8\"","\"Ġ9\"","\"Ġ10\"","\"Ġ100\"","\"Ġ1000\"","486","1954","2231","3134","4531","657","352","362","513","604","642","718","767","807","860","838","1802","8576","\"<|startoftranscript|><|notimestamps|>0123456789 0 1 2 3 4 5 6 7 8 9 10 100 1000<|endoftext|>\"","TEXT_WITH_NUMBERS","\"The\"","\"Ġcompany\"","\"Ġwas\"","\"Ġfounded\"","\"Ġin\"","\"Ġ2016\"","\".\"","464","1664","373","9393","287","1584","13","\"<|startoftranscript|><|notimestamps|>The company was founded in 2016.<|endoftext|>\"","PUNCTUATION","\"A\"","\"Ċ\"","\"'ll\"","\"Ġ!!\"","\"to\"","\"?'\"","\"d\"","\"''\"","\"Ġof\"","\",\"","\"Ġcan\"","\"'t\"","32","198","1183","37867","1462","8348","67","7061","286","11","460","470","\"<|startoftranscript|><|notimestamps|>A\n'll!!to?'d''d of, can't.<|endoftext|>\"","PYTHON_CODE","\"def\"","\"Ġmain\"","\"():\"","\"ĉ\"","\"pass\"","4299","1388","33529","197","6603","\"<|startoftranscript|><|notimestamps|>def main():\n\tpass<|endoftext|>\"","JAVASCRIPT_CODE","\"let\"","\"Ġa\"","\"Ġ=\"","\"Ġobj\"","\"String\"","\"();\"","1616","257","796","26181","10100","9783","\"<|startoftranscript|><|notimestamps|>let a = obj.toString();\ntoString();<|endoftext|>\"","NEWLINES","\"This\"","\"is\"","\"a\"","\"test\"","1212","271","64","9288","\"<|startoftranscript|><|notimestamps|>This\n\nis\na\ntest.<|endoftext|>\"","BASIC","\"UN\"","\"want\"","\"Ã©\"","\"running\"","4944","42949","2634","20270","\"<|startoftranscript|><|notimestamps|>UNwantéd,running<|endoftext|>\"","CONTROL_TOKENS","\"1\"","\"Ā\"","\"2\"","\"ï¿½\"","\"3\"","16","188","17","4210","18","\"<|startoftranscript|><|notimestamps|>1\u00002�3<|endoftext|>\"","HELLO_WORLD_TITLECASE","\"Hello\"","\"ĠWorld\"","15496","2159","\"<|startoftranscript|><|notimestamps|>Hello World<|endoftext|>\"","HELLO_WORLD_LOWERCASE","\"hello\"","\"Ġworld\"","31373","995","\"<|startoftranscript|><|notimestamps|>hello world<|endoftext|>\"","CHINESE_ONLY","\"çĶŁ\"","\"æ\"","\"´\"","\"»\"","\"çļĦ\"","\"çľ\"","\"Ł\"","\"è\"","\"°\"","\"Ľ\"","\"æĺ¯\"","37955","162","112","119","21410","40367","253","164","108","249","42468","\"<|startoftranscript|><|notimestamps|>生活的真谛是<|endoftext|>\"","LEADING_SPACE","\"Ġ\"","\"Ġleading\"","\"Ġspace\"","220","3756","2272","\"<|startoftranscript|><|notimestamps|>   leading space<|endoftext|>\"","TRAILING_SPACE","\"tra\"","\"iling\"","9535","4386","\"<|startoftranscript|><|notimestamps|>trailing space   <|endoftext|>\"","DOUBLE_SPACE","\"Hi\"","\"ĠHello\"","17250","18435","\"<|startoftranscript|><|notimestamps|>Hi  Hello<|endoftext|>\"","CURRENCY","\"Ġ$\"","\"ĠR\"","\"Ġ#\"","\"ĠâĤ¬\"","\"4\"","\"ĠÂ£\"","\"5\"","\"ĠÂ¥\"","\"6\"","\"Ġâ\"","\"Ĥ\"","\"£\"","\"7\"","\"¹\"","\"8\"","\"±\"","\"9\"","\"Ġtest\"","720","371","1303","10432","19","4248","20","38221","21","2343","224","96","22","117","23","109","24","1332","\"<|startoftranscript|><|notimestamps|>test $1 R2 #3 €4 £5 ¥6 ₣7 ₹8 ₱9 test<|endoftext|>\"","CURRENCY_WITH_DECIMALS","\"I\"","\"Ġbought\"","\"Ġan\"","\"Ġapple\"","\"Ġfor\"","\"00\"","\"Ġat\"","\"Ġthe\"","\"Ġstore\"","40","5839","281","17180","329","405","379","262","3650","\"<|startoftranscript|><|notimestamps|>I bought an apple for $1.00 at the store.<|endoftext|>\"","ELLIPSIS","\"you\"","\"âĢ¦\"","5832","1399","\"<|startoftranscript|><|notimestamps|>you…  <|endoftext|>\"","TEXT_WITH_ESCAPE_CHARACTERS","\"ÂłÂł\"","4603","\"<|startoftranscript|><|notimestamps|>you…  <|endoftext|>\"","TEXT_WITH_ESCAPE_CHARACTERS_2","\"Âł\"","1849","\"<|startoftranscript|><|notimestamps|>you…  you…  <|endoftext|>\"","TILDE_NORMALIZATION","\"we\"","\"ird\"","\"Ġï\"","\"½\"","\"ŀ\"","\"Ġedge\"","\"Ġcase\"","732","1447","27332","121","252","5743","1339","\"<|startoftranscript|><|notimestamps|>weird ～ edge ～ case<|endoftext|>\"","SPIECE_UNDERSCORE","\"âĸ\"","\"ģ\"","\"Ġâĸ\"","5008","223","11019","\"<|startoftranscript|><|notimestamps|>▁This ▁is ▁a ▁test ▁.<|endoftext|>\"","SPECIAL_TOKENS","WHISPER_TEST_STRINGS","\"<|startoftranscript|>\"","\"<|en|>\"","50258","\"<|startoftranscript|><|notimestamps|>   <|startoftranscript|> <|en|>   <|endoftext|>\"","\"distil-whisper/distil-large-v3\"","\"0\"","\"12\"","50364","15","4762","8465","22452","21115","1958","502","568","805","1017","1025","1386","1614","1649","1722","1266","2319","9714","\"(\"","\"):\"","20595","2135","7","4507","9216","\"Ġob\"","\"j\"","\"St\"","\"ring\"","\");\"","2631","6585","1111","73","1353","4520","2937","34446","\"w\"","\"ant\"","\"Ã©d\"","3979","86","394","7811","45482","\"he\"","\"llo\"","675","1913","1002","\"çĶŁæ´»\"","\"çľŁ\"","\"è°\"","49958","1546","6303","8897","1541","\"ĠÂ\"","\"¥\"","31636","1848","497","3536","17450","14378","1815","98","672","1500","\"Â\"","\"ł\"","5616","1260","126","254","\"distil-whisper/distil-large-v2\"","50259","50359","50363","6462","366","291","884","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>How are you doing?<|endoftext|>\"","\"this\"","3223","820","600","1096","11176","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>You should've done this<|endoftext|>\"","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>0123456789 0 1 2 3 4 5 6 7 8 9 10 100 1000<|endoftext|>\"","2278","2237","390","13234","294","6549","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>The company was founded in 2016.<|endoftext|>\"","603","15138","8569","15025","295","393","380","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>A\n'll!!to?'d''d of, can't.<|endoftext|>\"","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>def main():\n\tpass<|endoftext|>\"","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>let a = obj.toString();\ntoString();<|endoftext|>\"","5723","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>This\n\nis\na\ntest.<|endoftext|>\"","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>UNwantéd,running<|endoftext|>\"","5342","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>1\u00002�3<|endoftext|>\"","15947","3937","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>Hello World<|endoftext|>\"","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>hello world<|endoftext|>\"","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>生活的真谛是<|endoftext|>\"","5775","1901","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>   leading space<|endoftext|>\"","17227","4883","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>trailing space   <|endoftext|>\"","17155","2425","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>Hi  Hello<|endoftext|>\"","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>test $1 R2 #3 €4 £5 ¥6 ₣7 ₹8 ₱9 test<|endoftext|>\"","\"the\"","4243","364","10606","337","628","412","3322","3531","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>I bought an apple for $1.00 at the store.<|endoftext|>\"","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>you…  <|endoftext|>\"","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>you…  <|endoftext|>\"","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>you…  you…  <|endoftext|>\"","826","1271","25072","4691","1389","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>weird ～ edge ～ case<|endoftext|>\"","39984","29405","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>▁This ▁is ▁a ▁test ▁.<|endoftext|>\"","\"<|startoftranscript|><|en|><|transcribe|><|notimestamps|>   <|startoftranscript|> <|en|>   <|endoftext|>\"","\"distil-whisper/distil-small.en\"","\"<|startoftranscript|><|notimestamps|><|startoftranscript|><|en|><|endoftext|>\"","\"Xenova/nb-whisper-tiny-beta\"","\"ĠHow\"","50288","1012","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> How are you doing?<|endoftext|>\"","\"ĠYou\"","509","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> You should've done this<|endoftext|>\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> 0123456789 0 1 2 3 4 5 6 7 8 9 10 100 1000<|endoftext|>\"","\"ĠThe\"","440","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> The company was founded in 2016.<|endoftext|>\"","\"ĠA\"","316","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> A\n'll!!to?'d''d of, can't.<|endoftext|>\"","\"Ġdef\"","1060","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> def main():\n\tpass<|endoftext|>\"","\"Ġlet\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> let a = obj.toString();\ntoString();<|endoftext|>\"","\"ĠThis\"","639","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> This\n\nis\na\ntest.<|endoftext|>\"","\"ĠUN\"","8229","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> UNwantéd,running<|endoftext|>\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> 1\u00002�3<|endoftext|>\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> Hello World<|endoftext|>\"","\"Ġhello\"","7751","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> hello world<|endoftext|>\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> 生活的真谛是<|endoftext|>\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|>   leading space<|endoftext|>\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> trailing space   <|endoftext|>\"","\"ĠHi\"","2421","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> Hi  Hello<|endoftext|>\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> test $1 R2 #3 €4 £5 ¥6 ₣7 ₹8 ₱9 test<|endoftext|>\"","\"ĠI\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> I bought an apple for $1.00 at the store.<|endoftext|>\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> you…  <|endoftext|>\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> you…  <|endoftext|>\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> you…  you…  <|endoftext|>\"","\"Ġweird\"","3657","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> weird ～ edge ～ case<|endoftext|>\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|> ▁This ▁is ▁a ▁test ▁.<|endoftext|>\"","\"<|startoftranscript|><|no|><|transcribe|><|notimestamps|>   <|startoftranscript|> <|en|>   <|endoftext|>\"","MAX_EXECUTION_TIME","10000","CUSTOM_TESTS","describe","\"Decode ASR\"","it","\"should decode ASR outputs\"","tokenizer","from_pretrained","\"onnx-community/whisper-tiny.en_timestamped\"","model_outputs","stride","0","5","token_timestamps","3.78","4.22","5.34","6.04","6.56","7.92","8.58","8.88","9.14","9.54","9.94","10.58","11.38","11.88","12.42","12.62","13.36","13.64","14.26","14.76","15.12","15.4","15.74","16.12","16.66","17.14","17.24","17.72","18.38","18.6","19.38","19.92","22.66","22.9","23.24","23.5","24.14","24.56","24.7","24.72","24.94","25.18","25.54","25.72","26.02","26.34","26.44","26.84","27.04","27.16","27.54","28.06","29.92","2.92","3.24","3.48","4.14","4.56","4.7","4.74","4.92","5.18","5.54","5.72","6.34","6.46","6.84","7.04","7.16","7.54","8.12","10.16","10.7","10.9","11.12","11.24","11.48","11.84","12.44","12.82","13.2","13.46","13.72","14.06","14.28","14.34","14.56","14.8","15.16","15.9","16.42","16.82","16.86","17.02","17.1","17.22","17.56","18.06","19.28","19.62","20.26","21.96","22.64","24.28","24.76","25.56","25.78","26.28","27.12","27.82","28.22","29.48","23.7728125","2.44","4.3","5.04","5.06","5.56","5.8","6.32","7.12","7.56","7.8","8.9","10.92","12.96","13.28","13.44","13.96","14.84","15.5","16.06","17.88","20.92","target","\" DO IT! Just DO IT! Don't let your dreams be dreams. Yesterday you said tomorrow, so just DO IT! MAKE YOUR dreams! COME TRUE! JUST DO IT! Some people dream success while you're gonna wake up and work hard at it. Nothing is impossible. You should get to the point where anyone else would quit and you're not gonna stop there. No, what are you waiting for? Do it! Just do it! Yes you can! Just do it! If you're tired of starting over, stop giving up.\"","chunks","\" DO\"","timestamp","\" IT!\"","4.24","\" Just\"","7.02","\" Don't\"","\" let\"","\" your\"","\" dreams\"","\" be\"","\" dreams.\"","10.6","\" Yesterday\"","\" you\"","\" said\"","\" tomorrow,\"","13.02","\" so\"","\" just\"","15.14","\" MAKE\"","\" YOUR\"","\" dreams!\"","16.68","\" COME\"","\" TRUE!\"","17.74","\" JUST\"","19.94","\" Some\"","\" people\"","\" dream\"","\" success\"","\" while\"","\" you're\"","\" gonna\"","\" wake\"","\" up\"","\" and\"","\" work\"","26.04","\" hard\"","\" at\"","26.46","\" it.\"","26.86","\" Nothing\"","\" is\"","\" impossible.\"","28.14","\" You\"","30.16","30.7","\" should\"","30.9","\" get\"","31.12","\" to\"","31.24","\" the\"","31.48","\" point\"","31.84","\" where\"","32.44","\" anyone\"","32.82","\" else\"","33.2","\" would\"","33.46","\" quit\"","33.72","34.06","34.34","\" not\"","34.56","34.8","\" stop\"","35.16","\" there.\"","35.92","\" No,\"","36.42","36.84","\" what\"","36.86","37.02","\" are\"","37.1","37.22","\" waiting\"","37.56","\" for?\"","38.08","\" Do\"","39.28","39.62","\" it!\"","40.28","41.96","42.64","\" do\"","44.28","44.78","\" Yes\"","45.18","45.56","45.78","\" can!\"","45.8","46.34","47.12","47.56","47.8","48.92","\" If\"","50.92","52.96","53.28","\" tired\"","53.44","\" of\"","53.72","\" starting\"","53.96","\" over,\"","54.86","55.5","56.06","\" giving\"","56.86","\" up.\"","57.9","compare","_decode_asr","return_timestamps","\"word\"","time_precision","0.02","force_full_sequences","false","0.01","\"should handle overlapping edge case\"","5.26","6.54","7.94","9.16","12.38","14.24","14.74","16.1","16.54","16.78","17.08","17.2","17.36","18.08","18.58","19.88","22.54","27.14","3.5","5.74","7.18","9.68","10.88","11.1","11.82","12.46","14.08","14.82","15.72","19.6","20.28","25.84","26.36","28.16","8.72","10.04","13.3","13.98","14.86","16.88","17.76","20.9","\" DO IT! Just DO IT! Don't let your dreams be dreams. Yesterday, you said tomorrow, so just DO IT! MAKE YOUR DRIMS! CONTRO! JUST DO IT! Some people dream success while you're gonna wake up and work hard at it. Nothing is impossible. You should get to the point where anyone else would quit and you're not gonna stop there. No, what are you waiting for? Do it! Just do it! Yes, you can! Just do it! If your tire is starting over, stop giving up.\"","10.62","\" Yesterday,\"","11.9","\" DRIMS!\"","16.8","\" CONTRO!\"","17.58","19.9","25.74","27.18","27.56","29.68","30.88","31.1","31.82","32.46","34.08","34.82","35.74","37","37.2","39.6","40.3","\" Yes,\"","45.84","48.74","50.04","53.3","\" tire\"","53.98","54.88","56","56.88","57.78"]},"operators":{"distinct":9,"total":4164,"identifiers":["const","=","{}",":",".","[]",",","function=>","()"]}},"paramCount":0,"sloc":{"logical":810,"physical":779}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/tokenizers.js","type":"esm"},{"line":2,"path":"../test_strings.js","type":"esm"},{"line":3,"path":"../../test_utils.js","type":"esm"}],"errors":[],"lineEnd":779,"lineStart":1,"maintainability":45.592,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Decode ASR\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":264},"errors":[],"lineEnd":778,"lineStart":515,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":38.774,"length":10,"time":2.154,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should decode ASR outputs\"","MAX_EXECUTION_TIME","\"should handle overlapping edge case\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":262},"errors":[],"lineEnd":777,"lineStart":516,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0.518,"halstead":{"bugs":4.105,"difficulty":8.475,"effort":104366.966,"length":1494,"time":5798.165,"vocabulary":303,"volume":12315.302,"operands":{"distinct":295,"total":625,"identifiers":["tokenizer","WhisperTokenizer","from_pretrained","\"onnx-community/whisper-tiny.en_timestamped\"","model_outputs","stride","30","0","5","tokens","token_timestamps","3.78","4.22","5.34","6.04","6.56","7","7.92","8.58","8.88","9.14","9.54","9.94","10.58","11.38","11.88","12.42","12.62","13","13.36","13.64","14.26","14.76","15.12","15.4","15.74","16.12","16.66","17.14","17.24","17.72","18.38","18.6","19.38","19.92","22.66","22.9","23.24","23.5","24.14","24.56","24.7","24.72","24.94","25.18","25.54","25.72","26.02","26.34","26.44","26.84","27.04","27.16","27.54","28.06","29.92","2.92","3.24","3.48","4.14","4.56","4.7","4.74","4.92","5.18","5.54","5.72","6.34","6.46","6.84","7.04","7.16","7.54","8.12","10.16","10.7","10.9","11.12","11.24","11.48","11.84","12.44","12.82","13.2","13.46","13.72","14.06","14.28","14.34","14.56","14.8","15.16","15.9","16.42","16.82","16.86","17.02","17.1","17.22","17.56","18.06","19.28","19.62","20.26","21.96","22.64","24.28","24.76","25.56","25.78","26.28","27.12","27.82","28.22","29.48","23.7728125","2.44","4.3","5.04","5.06","5.56","5.8","6.32","7.12","7.56","7.8","8.9","10.92","12.96","13.28","13.44","13.96","14.84","15.5","16.06","17.88","20.92","target","\" DO IT! Just DO IT! Don't let your dreams be dreams. Yesterday you said tomorrow, so just DO IT! MAKE YOUR dreams! COME TRUE! JUST DO IT! Some people dream success while you're gonna wake up and work hard at it. Nothing is impossible. You should get to the point where anyone else would quit and you're not gonna stop there. No, what are you waiting for? Do it! Just do it! Yes you can! Just do it! If you're tired of starting over, stop giving up.\"","chunks","text","\" DO\"","timestamp","\" IT!\"","4.24","\" Just\"","7.02","\" Don't\"","\" let\"","\" your\"","\" dreams\"","\" be\"","\" dreams.\"","10.6","\" Yesterday\"","\" you\"","\" said\"","\" tomorrow,\"","13.02","\" so\"","\" just\"","15.14","\" MAKE\"","\" YOUR\"","\" dreams!\"","16.68","\" COME\"","\" TRUE!\"","17.74","\" JUST\"","19.94","\" Some\"","\" people\"","\" dream\"","\" success\"","\" while\"","\" you're\"","\" gonna\"","\" wake\"","\" up\"","\" and\"","\" work\"","26.04","\" hard\"","\" at\"","26.46","\" it.\"","26.86","\" Nothing\"","\" is\"","\" impossible.\"","28.14","\" You\"","30.16","30.7","\" should\"","30.9","\" get\"","31.12","\" to\"","31.24","\" the\"","31.48","\" point\"","31.84","\" where\"","32.44","\" anyone\"","32.82","\" else\"","33.2","\" would\"","33.46","\" quit\"","33.72","34.06","34.34","\" not\"","34.56","34.8","\" stop\"","35.16","\" there.\"","35.92","\" No,\"","36.42","36.84","\" what\"","36.86","37.02","\" are\"","37.1","37.22","\" waiting\"","37.56","\" for?\"","38.08","\" Do\"","39.28","39.62","\" it!\"","40.28","41.96","42.64","\" do\"","44.28","44.78","\" Yes\"","45.18","45.56","45.78","\" can!\"","45.8","46.34","47.12","47.56","47.8","48.92","\" If\"","50.92","52.96","53.28","\" tired\"","53.44","\" of\"","53.72","\" starting\"","53.96","\" over,\"","54.86","55.5","56.06","\" giving\"","56.86","\" up.\"","57.9","compare","_decode_asr","return_timestamps","\"word\"","time_precision","0.02","force_full_sequences","false","0.01"]},"operators":{"distinct":8,"total":869,"identifiers":["const","=","()",".","[]",",","{}",":"]}},"paramCount":0,"sloc":{"logical":193,"physical":126},"errors":[],"lineEnd":644,"lineStart":519,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0.524,"halstead":{"bugs":4.1,"difficulty":8.447,"effort":103893.724,"length":1492,"time":5771.874,"vocabulary":303,"volume":12298.816,"operands":{"distinct":295,"total":623,"identifiers":["tokenizer","WhisperTokenizer","from_pretrained","\"onnx-community/whisper-tiny.en_timestamped\"","model_outputs","stride","30","0","5","tokens","token_timestamps","3.78","4.22","5.26","6.04","6.54","7","7.94","8.58","8.88","9.16","9.54","9.94","10.6","11.38","11.88","12.38","12.44","12.62","13","13.36","13.64","14.24","14.74","15.12","15.4","15.74","16.1","16.54","16.78","17.08","17.2","17.36","17.56","18.08","18.58","19.38","19.88","22.54","22.9","23.24","23.5","24.14","24.56","24.7","24.94","25.18","25.54","25.72","26.04","26.34","26.46","26.84","27.04","27.14","27.54","28.06","29.92","2.92","3.24","3.5","4.14","4.56","4.7","4.74","4.92","5.18","5.54","5.74","6.34","6.46","6.84","7.04","7.18","7.56","8.12","9.68","10.7","10.88","11.1","11.24","11.48","11.82","12.46","12.82","13.2","13.46","13.72","14.08","14.28","14.34","14.56","14.82","15.16","15.72","16.42","16.82","16.86","17","17.1","18.06","19.28","19.6","20.28","21.96","22.64","24.28","24.76","25.56","25.84","26.36","27.12","27.82","28.16","29.48","23.7728125","2.44","4.3","5.04","5.06","5.56","5.8","6.32","7.12","7.8","8.72","10.04","12.96","13.3","13.44","13.98","14.86","15.5","16","16.88","17.76","20.9","target","\" DO IT! Just DO IT! Don't let your dreams be dreams. Yesterday, you said tomorrow, so just DO IT! MAKE YOUR DRIMS! CONTRO! JUST DO IT! Some people dream success while you're gonna wake up and work hard at it. Nothing is impossible. You should get to the point where anyone else would quit and you're not gonna stop there. No, what are you waiting for? Do it! Just do it! Yes, you can! Just do it! If your tire is starting over, stop giving up.\"","chunks","text","\" DO\"","timestamp","\" IT!\"","4.24","\" Just\"","7.02","\" Don't\"","\" let\"","\" your\"","\" dreams\"","\" be\"","\" dreams.\"","10.62","\" Yesterday,\"","11.9","\" you\"","\" said\"","\" tomorrow,\"","13.02","\" so\"","\" just\"","15.14","\" MAKE\"","\" YOUR\"","\" DRIMS!\"","16.8","\" CONTRO!\"","17.58","\" JUST\"","19.9","\" Some\"","\" people\"","\" dream\"","\" success\"","\" while\"","\" you're\"","\" gonna\"","\" wake\"","\" up\"","\" and\"","25.74","\" work\"","\" hard\"","\" at\"","\" it.\"","26.86","\" Nothing\"","27.18","\" is\"","27.56","\" impossible.\"","28.14","\" You\"","29.68","30.7","\" should\"","30.88","\" get\"","31.1","\" to\"","31.24","\" the\"","31.48","\" point\"","31.82","\" where\"","32.46","\" anyone\"","32.82","\" else\"","33.2","\" would\"","33.46","\" quit\"","33.72","34.08","34.34","\" not\"","34.56","34.82","\" stop\"","35.16","\" there.\"","35.74","\" No,\"","36.42","36.84","\" what\"","36.86","37","\" are\"","37.1","37.2","\" waiting\"","37.56","\" for?\"","38.08","\" Do\"","39.28","39.6","\" it!\"","40.3","41.96","42.64","\" do\"","44.28","44.78","\" Yes,\"","45.18","45.56","45.84","\" can!\"","45.8","46.34","47.12","47.56","47.8","48.74","\" If\"","50.04","52.96","53.3","\" tire\"","53.44","53.72","\" starting\"","53.98","\" over,\"","54.88","55.5","56","\" giving\"","56.88","\" up.\"","57.78","compare","_decode_asr","return_timestamps","\"word\"","time_precision","0.02","force_full_sequences","false","0.01"]},"operators":{"distinct":8,"total":869,"identifiers":["const","=","()",".","[]",",","{}",":"]}},"paramCount":0,"sloc":{"logical":191,"physical":125},"errors":[],"lineEnd":774,"lineStart":650,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.123,"halstead":{"bugs":5.196,"difficulty":3.692,"effort":287738.111,"length":1582.6,"time":15985.451,"vocabulary":184.6,"volume":15588.906,"operands":{"distinct":182.8,"total":749.8},"operators":{"distinct":1.8,"total":832.8}},"paramCount":0,"sloc":{"logical":162,"physical":155.8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":19.01,"halstead":{"bugs":2.054,"difficulty":4.856,"effort":52076.866,"length":750,"time":2893.159,"vocabulary":154,"volume":6161.992,"operands":{"distinct":149,"total":314},"operators":{"distinct":5,"total":436}},"paramCount":0,"sloc":{"logical":97.5,"physical":194.25}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/models/yolos/test_image_processing_yolos.js","testCases":1,"smells":1,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  21 |\n  22 |         expect(pixel_values.dims).toEqual([1, 3, 888, 1333]);\n> 23 |         expect(pixel_values.mean().item()).toBeCloseTo(-0.27840224131001773, 6);\n     |                                                                             ^ Magic Number\n  24 |\n  25 |         expect(original_sizes).toEqual([[408, 612]]);\n  26 |         expect(reshaped_input_sizes).toEqual([[888, 1333]]);","start":{"line":23,"column":77,"index":875}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.176,"difficulty":7.813,"effort":4128.493,"length":98,"time":229.361,"vocabulary":42,"volume":528.447,"operands":{"distinct":32,"total":50,"identifiers":["describe","\"YolosFeatureExtractor\"","model_id","\"Xenova/yolos-small-300\"","processor","beforeAll","AutoImageProcessor","from_pretrained","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","expect","dims","toEqual","1","3","888","1333","mean","item","toBeCloseTo","0.27840224131001773","6","408","612","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":10,"total":48,"identifiers":["function=>","()","const","=","let",".","{}","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":28,"physical":32}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../../src/transformers.js","type":"esm"},{"line":3,"path":"../../asset_cache.js","type":"esm"},{"line":4,"path":"../../init.js","type":"esm"}],"errors":[],"lineEnd":32,"lineStart":1,"maintainability":120.122,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"YolosFeatureExtractor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":26},"errors":[],"lineEnd":31,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.019,"difficulty":2.5,"effort":138.766,"length":15,"time":7.709,"vocabulary":13,"volume":55.507,"operands":{"distinct":8,"total":8,"identifiers":["model_id","\"Xenova/yolos-small-300\"","processor","beforeAll","MAX_PROCESSOR_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":7,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":24},"errors":[],"lineEnd":30,"lineStart":7,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["processor","AutoImageProcessor","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":14,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.115,"difficulty":6.857,"effort":2365.143,"length":71,"time":131.397,"vocabulary":29,"volume":344.917,"operands":{"distinct":21,"total":36,"identifiers":["image","load_cached_image","\"tiger\"","pixel_values","original_sizes","reshaped_input_sizes","processor","expect","dims","toEqual","1","3","888","1333","mean","item","toBeCloseTo","0.27840224131001773","6","408","612"]},"operators":{"distinct":8,"total":35,"identifiers":["const","=","()","{}",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":17,"physical":10},"errors":[],"lineEnd":27,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.035,"difficulty":1.563,"effort":825.699,"length":19.6,"time":45.872,"vocabulary":8.4,"volume":105.689,"operands":{"distinct":6.4,"total":10},"operators":{"distinct":2,"total":9.6}},"paramCount":0,"sloc":{"logical":5.6,"physical":6.4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":30.637,"halstead":{"bugs":0.036,"difficulty":2.964,"effort":635.347,"length":24.25,"time":35.297,"vocabulary":13.25,"volume":107.019,"operands":{"distinct":8.75,"total":12.5},"operators":{"distinct":4.5,"total":11.75}},"paramCount":0,"sloc":{"logical":6.75,"physical":15.75}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/pipelines.test.js","testCases":0,"smells":12,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  1201 |\n  1202 |           // check that all scores are null, and masks have correct dimensions\n> 1203 |           for (let output of outputs) {\n       |          ^ Conditional Test Logic\n  1204 |             expect(output.score).toBeNull();\n  1205 |             expect(output.mask.width).toEqual(970);\n  1206 |             expect(output.mask.height).toEqual(1455);","start":{"line":1203,"column":10,"index":41833}},{"frame":"  1318 |\n  1319 |           expect(output.length).toBeGreaterThan(0);\n> 1320 |           for (let cls of output) {\n       |          ^ Conditional Test Logic\n  1321 |             expect(typeof cls.score).toBe(\"number\");\n  1322 |             expect(typeof cls.label).toBe(\"string\");\n  1323 |             for (let key of [\"xmin\", \"ymin\", \"xmax\", \"ymax\"]) {","start":{"line":1320,"column":10,"index":45993}},{"frame":"  1321 |             expect(typeof cls.score).toBe(\"number\");\n  1322 |             expect(typeof cls.label).toBe(\"string\");\n> 1323 |             for (let key of [\"xmin\", \"ymin\", \"xmax\", \"ymax\"]) {\n       |            ^ Conditional Test Logic\n  1324 |               expect(typeof cls.box[key]).toBe(\"number\");\n  1325 |             }\n  1326 |           }","start":{"line":1323,"column":12,"index":46137}},{"frame":"  1363 |           expect(output).toHaveLength(urls.length); // Same number of inputs as outputs\n  1364 |\n> 1365 |           for (let i = 0; i < output.length; ++i) {\n       |          ^ Conditional Test Logic\n  1366 |             expect(output[i].length).toBeGreaterThan(0);\n  1367 |             for (let cls of output[i]) {\n  1368 |               expect(typeof cls.score).toBe(\"number\");","start":{"line":1365,"column":10,"index":47890}},{"frame":"  1365 |           for (let i = 0; i < output.length; ++i) {\n  1366 |             expect(output[i].length).toBeGreaterThan(0);\n> 1367 |             for (let cls of output[i]) {\n       |            ^ Conditional Test Logic\n  1368 |               expect(typeof cls.score).toBe(\"number\");\n  1369 |               expect(typeof cls.label).toBe(\"string\");\n  1370 |               for (let key of [\"xmin\", \"ymin\", \"xmax\", \"ymax\"]) {","start":{"line":1367,"column":12,"index":48001}},{"frame":"  1368 |               expect(typeof cls.score).toBe(\"number\");\n  1369 |               expect(typeof cls.label).toBe(\"string\");\n> 1370 |               for (let key of [\"xmin\", \"ymin\", \"xmax\", \"ymax\"]) {\n       |              ^ Conditional Test Logic\n  1371 |                 expect(typeof cls.box[key]).toBe(\"number\");\n  1372 |               }\n  1373 |             }","start":{"line":1370,"column":14,"index":48154}},{"frame":"  1421 |\n  1422 |           expect(output.length).toBeGreaterThan(0);\n> 1423 |           for (let cls of output) {\n       |          ^ Conditional Test Logic\n  1424 |             expect(typeof cls.score).toBe(\"number\");\n  1425 |             expect(typeof cls.label).toBe(\"string\");\n  1426 |             for (let key of [\"xmin\", \"ymin\", \"xmax\", \"ymax\"]) {","start":{"line":1423,"column":10,"index":49884}},{"frame":"  1424 |             expect(typeof cls.score).toBe(\"number\");\n  1425 |             expect(typeof cls.label).toBe(\"string\");\n> 1426 |             for (let key of [\"xmin\", \"ymin\", \"xmax\", \"ymax\"]) {\n       |            ^ Conditional Test Logic\n  1427 |               expect(typeof cls.box[key]).toBe(\"number\");\n  1428 |             }\n  1429 |           }","start":{"line":1426,"column":12,"index":50028}},{"frame":"  1465 |\n  1466 |           expect(output.length).toBeGreaterThan(0);\n> 1467 |           for (let cls of output) {\n       |          ^ Conditional Test Logic\n  1468 |             expect(typeof cls.score).toBe(\"number\");\n  1469 |             expect(typeof cls.label).toBe(\"string\");\n  1470 |             for (let key of [\"xmin\", \"ymin\", \"xmax\", \"ymax\"]) {","start":{"line":1467,"column":10,"index":51465}},{"frame":"  1468 |             expect(typeof cls.score).toBe(\"number\");\n  1469 |             expect(typeof cls.label).toBe(\"string\");\n> 1470 |             for (let key of [\"xmin\", \"ymin\", \"xmax\", \"ymax\"]) {\n       |            ^ Conditional Test Logic\n  1471 |               expect(typeof cls.box[key]).toBe(\"number\");\n  1472 |             }\n  1473 |           }","start":{"line":1470,"column":12,"index":51609}},{"frame":"  1505 |           let outputs = await upscaler([url, url]);\n  1506 |           expect(outputs).toHaveLength(2);\n> 1507 |           for (let output of outputs) {\n       |          ^ Conditional Test Logic\n  1508 |             expect(output.width).toEqual(16);\n  1509 |             expect(output.height).toEqual(16);\n  1510 |             expect(output.channels).toEqual(3);","start":{"line":1507,"column":10,"index":52677}},{"frame":"  1544 |           let outputs = await depth_estimator([url, url]);\n  1545 |           expect(outputs).toHaveLength(2);\n> 1546 |           for (let output of outputs) {\n       |          ^ Conditional Test Logic\n  1547 |             let { predicted_depth, depth } = output;\n  1548 |             compare(predicted_depth.dims, [384, 384]);\n  1549 |             expect(depth.width).toEqual(640);","start":{"line":1546,"column":10,"index":53858}}]}],"metrics":{"aggregate":{"cyclomatic":63,"cyclomaticDensity":5.307,"halstead":{"bugs":15.095,"difficulty":40.932,"effort":1853602.212,"length":4933,"time":102977.901,"vocabulary":580,"volume":45284.492,"operands":{"distinct":562,"total":2556,"identifiers":["init","collect_and_execute_pipeline_tests","\"Pipelines\"","xdescribe","\"Pipelines (ignored)\"","describe","\"Text classification\"","models","\"Xenova/distilbert-base-uncased-finetuned-sst-2-english\"","\"Xenova/toxic-bert\"","it","0","classifier","pipeline","\"text-classification\"","texts","\"This was a masterpiece. Not completely faithful to the books, but enthralling from beginning to end. Might be my favorite of the three.\"","\"I hated the movie\"","outputs","expected","label","\"NEGATIVE\"","score","0.9996212720870972","compare","topk","2","\"POSITIVE\"","0.0003787268069572747","0.9993746876716614","0.9996694326400757","0.0006253048195503652","0.00033057318069040775","dispose","MAX_TEST_EXECUTION_TIME","1","\"I like you. I love you\"","\"I hate you.\"","\"toxic\"","0.0007729064091108739","0.9475088119506836","\"Token classification\"","\"Xenova/bert-base-multilingual-cased-ner-hrl\"","\"token-classification\"","\"The Golden State Warriors are an American professional basketball team based in San Francisco.\"","\"My name is Sarah and I live in London.\"","entity","\"B-ORG\"","0.9998535513877869","index","word","\"Golden\"","start","null","end","\"I-ORG\"","0.9998612999916077","3","\"State\"","0.999866247177124","4","\"Warriors\"","\"B-LOC\"","0.9997050166130066","13","\"San\"","\"I-LOC\"","0.9987282156944275","14","\"Francisco\"","0.05","0.9998375773429871","0.9998642206192017","0.9998642802238464","0.9996914863586426","0.9989780783653259","\"B-PER\"","0.997977614402771","\"Sarah\"","0.9996902346611023","9","\"London\"","\"Zero-shot classification\"","\"Xenova/bart-large-mnli\"","\"zero-shot-classification\"","sequences_to_classify","\"one day I will see the world\"","\"I love making pizza\"","candidate_labels","\"travel\"","\"cooking\"","\"dancing\"","sequence","labels","scores","0.4261703487477968","0.2903585771517135","0.28347107410048983","0.2","0.4660367922118968","0.2756005926506238","0.2583626151374795","multi_label","true","0.7108286792234982","0.5763787804099745","0.44303326070949994","0.8527619536354446","0.7899589317978243","0.5838912691496106","\"Masked language modelling\"","\"Xenova/bert-base-uncased\"","unmasker","\"fill-mask\"","\"Once upon a [MASK].\"","\"[MASK] is the capital of England.\"","0.9405396580696106","token","2051","token_str","\"time\"","\"once upon a time.\"","0.01182964164763689","13342","\"mattress\"","\"once upon a mattress.\"","0.0017291896510869265","6480","\"lifetime\"","\"once upon a lifetime.\"","0.0010079898638650775","2504","\"level\"","\"once upon a level.\"","0.0009655007743276656","2154","\"day\"","\"once upon a day.\"","0.9900539517402649","0.0012258145725354552","0.0002977887343149632","2096","\"while\"","\"once upon a while.\"","0.0001899998023873195","0.00017618606216274202","2558","\"period\"","\"once upon a period.\"","0.2863538861274719","2414","\"london\"","\"london is the capital of england.\"","0.0607745461165905","2009","\"it\"","\"it is the capital of england.\"","0.037455108016729355","6484","\"birmingham\"","\"birmingham is the capital of england.\"","0.029375044628977776","5087","\"manchester\"","\"manchester is the capital of england.\"","0.0292277242988348","7067","\"bristol\"","\"bristol is the capital of england.\"","\"Question answering\"","question","\"Who was Jim Henson?\"","context","\"Jim Henson was a nice puppet.\"","\"Xenova/distilbert-base-uncased-distilled-squad\"","answerer","\"question-answering\"","answer","\"a nice puppet\"","0.5664517526948352","\"nice puppet\"","0.1698902336448853","\"puppet\"","0.14046057793125577","\"Summarization\"","\"Xenova/distilbart-cnn-6-6\"","\"Xenova/bart-large-cnn\"","The tower is 324 metres (1,063 ft) tall, about the same height as an 81-storey building, and the tallest structure in Paris. Its base is square, measuring 125 metres (410 ft) on each side. During its construction, the Eiffel Tower surpassed the Washington Monument to become the tallest man-made structure in the world, a title it held for 41 years until the Chrysler Building in New York City was finished in 1930. It was the first structure to reach a height of 300 metres. Due to the addition of a broadcasting aerial at the top of the tower in 1957, it is now taller than the Chrysler Building by 5.2 metres (17 ft). Excluding transmitters, the Eiffel Tower is the second tallest free-standing structure in France after the Millau Viaduct.","The Amazon rainforest (Portuguese: Floresta Amazônica or Amazônia; Spanish: Selva Amazónica, Amazonía or usually Amazonia; French: Forêt amazonienne; Dutch: Amazoneregenwoud), also known in English as Amazonia or the Amazon Jungle, is a moist broadleaf forest that covers most of the Amazon basin of South America. This basin encompasses 7,000,000 square kilometres (2,700,000 sq mi), of which 5,500,000 square kilometres (2,100,000 sq mi) are covered by the rainforest. This region includes territory belonging to nine nations. The majority of the forest is contained within Brazil, with 60% of the rainforest, followed by Peru with 13%, Colombia with 10%, and with minor amounts in Venezuela, Ecuador, Bolivia, Guyana, Suriname and French Guiana. States or departments in four nations contain \"Amazonas\" in their names. The Amazon represents over half of the planet's remaining rainforests, and comprises the largest and most biodiverse tract of tropical rainforest in the world, with an estimated 390 billion individual trees divided into 16,000 species.","summarizer","\"summarization\"","summary","top_k","do_sample","false","expect","toHaveLength","summary_text","length","toBeGreaterThan","50","\"Translation\"","\"Xenova/t5-small\"","\"Xenova/nllb-200-distilled-600M\"","translator","\"translation_en_to_de\"","\"Hello, how are you?\"","\"My name is Maria.\"","translation","translation_text","\"Hallo, wie sind Sie?\"","output","\"Mein Name ist Maria.\"","\"translation\"","\"Hello world!\"","\"I like to walk my dog.\"","src_lang","\"eng_Latn\"","tgt_lang","\"arb_Arab\"","\"مرحباً، يا عالم!\"","translation1","\"ell_Grek\"","translation2","\"Μου αρέσει να περπατάω το σκυλί μου.\"","expectedBack","\"Text-to-text generation\"","\"Xenova/flan-t5-small\"","\"Xenova/flan-t5-base\"","generator","\"text2text-generation\"","text","\"Premise:  At my age you will probably have learnt one lesson. \"","\"Hypothesis:  It's not certain how many lessons you'll learn by your thirties. \"","\"Does the premise entail the hypothesis?\"","generated_text","\n            Q: Roger has 5 tennis balls. He buys 2 more cans of tennis balls. Each can\n            has 3 tennis balls. How many tennis balls does he have now?\n            A: Roger started with 5 balls. 2 cans of 3 tennis balls each is 6 tennis balls.\n            5 + 6 = 11. The answer is 11.\n\n            Q: A juggler can juggle 16 balls. Half of the balls are golf balls, and half\n            of the golf balls are blue. How many blue golf balls are there?","10","\"Text generation\"","\"Xenova/distilgpt2\"","\"Xenova/codegen-350M-mono\"","\"text-generation\"","\"Once upon a time, there was a\"","\"I enjoy walking with my cute dog\"","max_new_tokens","num_beams","num_return_sequences","code","\"def fib(n):\"","45","\"Feature extraction\"","\"Xenova/all-MiniLM-L6-v2\"","extractor","\"feature-extraction\"","sentences","\"This framework generates embeddings for each input sentence\"","\"Sentences are passed as a list of string.\"","\"The quick brown fox jumps over the lazy dog.\"","dims","pooling","\"mean\"","normalize","tolist","pairwiseScores","map","x","cos_sim","0.502872309810269","0.11088411026413121","0.09602621986931259","\"Speech-to-text generation\"","\"Xenova/whisper-tiny.en\"","\"Xenova/whisper-small\"","\"output_attentions\"","\"jonatasgrosman/wav2vec2-large-xlsr-53-english\"","transcriber","\"automatic-speech-recognition\"","url","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav\"","audioData","loadAudio","return_timestamps","chunks","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/french-audio.wav\"","language","\"french\"","task","\"transcribe\"","20","\"translate\"","join","\" + \"","m","revision","quantized","\"word\"","target","\" And so my fellow Americans ask not what your country can do for you ask what you can do for your country.\"","\" And\"","timestamp","0.78","\" so\"","1.06","\" my\"","1.46","\" fellow\"","1.76","\" Americans\"","2.22","\" ask\"","3.88","\" not\"","4.52","\" what\"","5.68","\" your\"","6","\" country\"","6.36","\" can\"","6.76","\" do\"","7.02","\" for\"","7.24","\" you\"","8.02","8.28","8.66","8.94","9.28","9.5","9.72","9.92","10.22","\" country.\"","13.36","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/japanese-audio.wav\"","\"japanese\"","\"モリナガの美味しい牛乳は濃い青色に牛乳瓶を払ったゼザインのパック牛乳である。\"","\"モ\"","0.56","\"リ\"","0.64","\"ナ\"","0.8","\"ガ\"","0.88","\"の\"","1.04","\"美味\"","1.22","\"しい\"","\"牛\"","\"乳\"","1.94","\"は\"","2.14","\"濃\"","2.34","\"い\"","2.48","\"青\"","2.62","\"色\"","2.84","\"に\"","3.22","3.42","\"瓶\"","3.58","\"を\"","3.82","\"払\"","\"った\"","4.32","\"ゼ\"","4.56","\"ザ\"","4.6","\"イ\"","4.74","\"ン\"","4.8","4.94","\"パ\"","5.12","\"ック\"","5.26","5.52","5.72","\"で\"","5.86","\"ある。\"","6.62","\"Text-to-speech generation\"","\"Xenova/speecht5_tts\"","\"Xenova/mms-tts-fra\"","synthesizer","\"text-to-speech\"","speaker_embeddings","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/speaker_embeddings.bin\"","\"Hello, my dog is cute\"","audio","sampling_rate","toEqual","16000","\"Bonjour\"","\"Audio classification\"","\"Xenova/wav2vec2-large-xlsr-53-gender-recognition-librispeech\"","\"audio-classification\"","0.997512936592102","\"male\"","0.0024870133493095636","\"female\"","\"Image-to-text\"","\"Xenova/vit-gpt2-image-captioning\"","captioner","\"image-to-text\"","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/savanna.jpg\"","urls","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/football-match.jpg\"","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/airport.jpg\"","\"Image classification\"","\"Xenova/vit-base-patch16-224\"","\"image-classification\"","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/tiger.jpg\"","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/palace.jpg\"","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/teapot.jpg\"","\"tiger, Panthera tigris\"","0.607988178730011","\"tiger cat\"","0.3877776563167572","\"palace\"","0.9986862540245056","\"teapot\"","0.987880527973175","\"castle\"","0.00037879671435803175","\"coffeepot\"","0.006591461598873138","\"Image segmentation\"","\"Xenova/detr-resnet-50-panoptic\"","\"Xenova/segformer_b2_clothes\"","segmenter","\"image-segmentation\"","img","\"https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/coco_sample.png\"","0.9916538596153259","\"cat\"","mask","58998","0.9987397789955139","\"remote\"","4164","0.9994599223136902","2275","0.9730215072631836","\"couch\"","176980","0.9993911385536194","52670","outputLabels","expectedLabels","sort","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/young-man-standing-and-leaning-on-car.jpg\"","\"Background\"","\"Hair\"","\"Upper-clothes\"","\"Pants\"","\"Left-shoe\"","\"Right-shoe\"","\"Face\"","\"Left-leg\"","\"Right-leg\"","\"Left-arm\"","\"Right-arm\"","toBeNull","width","970","height","1455","channels","\"Zero-shot image classification\"","\"Xenova/clip-vit-base-patch32\"","\"zero-shot-image-classification\"","classes","\"football\"","\"airport\"","\"animals\"","0.9719080924987793","0.022564826533198357","0.005527070723474026","0.1","0.9712504148483276","0.022469401359558105","0.006280169822275639","0.997433602809906","0.0016500800848007202","0.0009163151844404638","0.9851226806640625","0.007516484707593918","0.007360846735537052","\"Object detection\"","\"Xenova/detr-resnet-50\"","detector","\"object-detection\"","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/cats.jpg\"","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/savanna.jpg\"","threshold","0.9","cls","toBe","\"number\"","\"string\"","key","\"xmin\"","\"ymin\"","\"xmax\"","\"ymax\"","box","percentage","i","\"Zero-shot object detection\"","\"Xenova/owlvit-base-patch32\"","\"zero-shot-object-detection\"","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/astronaut.png\"","\"human face\"","\"rocket\"","\"helmet\"","\"american flag\"","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/beach.png\"","\"hat\"","\"book\"","\"sunglasses\"","\"camera\"","\"Image-to-image\"","\"Xenova/swin2SR-classical-sr-x2-64\"","upscaler","\"image-to-image\"","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/pattern_3x3.png\"","16","data","768","\"Depth estimation\"","\"Xenova/dpt-hybrid-midas\"","depth_estimator","\"depth-estimation\"","predicted_depth","depth","384","640","480","307200","\"Document question answering\"","\"Xenova/donut-base-finetuned-docvqa\"","image","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/invoice.png\"","\"What is the invoice number?\"","qa_pipeline","\"document-question-answering\"","\"us-001\""]},"operators":{"distinct":18,"total":2377,"identifiers":["()","function=>","const","=","[]",",","let","{}",":",".","``","+","... (spread)","forof","typeof (prefix)","for","<","++ (prefix)"]}},"paramCount":5,"sloc":{"logical":1187,"physical":1586}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../src/transformers.js","type":"esm"},{"line":2,"path":"./init.js","type":"esm"},{"line":3,"path":"./test_utils.js","type":"esm"}],"errors":[],"lineEnd":1586,"lineStart":1,"maintainability":87.916,"methods":[{"cyclomatic":1,"cyclomaticDensity":2.273,"halstead":{"bugs":0.136,"difficulty":1.913,"effort":781.783,"length":88,"time":43.432,"vocabulary":25,"volume":408.659,"operands":{"distinct":23,"total":44,"identifiers":["describe","\"Text classification\"","\"Token classification\"","\"Zero-shot classification\"","\"Masked language modelling\"","\"Question answering\"","\"Summarization\"","\"Translation\"","\"Text-to-text generation\"","\"Text generation\"","\"Feature extraction\"","\"Speech-to-text generation\"","\"Text-to-speech generation\"","\"Audio classification\"","\"Image-to-text\"","\"Image classification\"","\"Image segmentation\"","\"Zero-shot image classification\"","\"Object detection\"","\"Zero-shot object detection\"","\"Image-to-image\"","\"Depth estimation\"","\"Document question answering\""]},"operators":{"distinct":2,"total":44,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":44,"physical":1572},"errors":[],"lineEnd":1585,"lineStart":14,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.026,"difficulty":4.714,"effort":366.344,"length":21,"time":20.352,"vocabulary":13,"volume":77.709,"operands":{"distinct":7,"total":11,"identifiers":["models","\"Xenova/distilbert-base-uncased-finetuned-sst-2-english\"","\"Xenova/toxic-bert\"","it","0","MAX_TEST_EXECUTION_TIME","1"]},"operators":{"distinct":6,"total":10,"identifiers":["const","=","[]",",","()","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":90},"errors":[],"lineEnd":104,"lineStart":15,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.439,"halstead":{"bugs":0.257,"difficulty":13,"effort":10010,"length":154,"time":556.111,"vocabulary":32,"volume":770,"operands":{"distinct":24,"total":78,"identifiers":["classifier","pipeline","\"text-classification\"","models","0","texts","\"This was a masterpiece. Not completely faithful to the books, but enthralling from beginning to end. Might be my favorite of the three.\"","\"I hated the movie\"","outputs","expected","label","\"NEGATIVE\"","score","0.9996212720870972","compare","topk","2","\"POSITIVE\"","0.0003787268069572747","0.9993746876716614","0.9996694326400757","0.0006253048195503652","0.00033057318069040775","dispose"]},"operators":{"distinct":8,"total":76,"identifiers":["let","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":41,"physical":57},"errors":[],"lineEnd":78,"lineStart":22,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.068,"difficulty":5.031,"effort":1024.163,"length":45,"time":56.898,"vocabulary":23,"volume":203.56,"operands":{"distinct":16,"total":23,"identifiers":["classifier","pipeline","\"text-classification\"","models","1","texts","\"I like you. I love you\"","\"I hate you.\"","outputs","expected","label","\"toxic\"","score","0.0007729064091108739","0.9475088119506836","compare"]},"operators":{"distinct":7,"total":22,"identifiers":["let","=","()","[]",",","{}",":"]}},"paramCount":0,"sloc":{"logical":11,"physical":17},"errors":[],"lineEnd":101,"lineStart":85,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["models","\"Xenova/bert-base-multilingual-cased-ner-hrl\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":51},"errors":[],"lineEnd":156,"lineStart":106,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.176,"halstead":{"bugs":0.57,"difficulty":13.68,"effort":23400.057,"length":292,"time":1300.003,"vocabulary":58,"volume":1710.53,"operands":{"distinct":50,"total":171,"identifiers":["classifier","pipeline","\"token-classification\"","models","0","texts","\"The Golden State Warriors are an American professional basketball team based in San Francisco.\"","\"My name is Sarah and I live in London.\"","outputs","expected","entity","\"B-ORG\"","score","0.9998535513877869","index","2","word","\"Golden\"","start","null","end","\"I-ORG\"","0.9998612999916077","3","\"State\"","0.999866247177124","4","\"Warriors\"","\"B-LOC\"","0.9997050166130066","13","\"San\"","\"I-LOC\"","0.9987282156944275","14","\"Francisco\"","compare","0.05","0.9998375773429871","0.9998642206192017","0.9998642802238464","0.9996914863586426","0.9989780783653259","\"B-PER\"","0.997977614402771","\"Sarah\"","0.9996902346611023","9","\"London\"","dispose"]},"operators":{"distinct":8,"total":121,"identifiers":["let","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":85,"physical":42},"errors":[],"lineEnd":153,"lineStart":112,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["models","\"Xenova/bart-large-mnli\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":69},"errors":[],"lineEnd":226,"lineStart":158,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.329,"difficulty":10.941,"effort":10796.688,"length":183,"time":599.816,"vocabulary":42,"volume":986.794,"operands":{"distinct":34,"total":93,"identifiers":["classifier","pipeline","\"zero-shot-classification\"","models","0","sequences_to_classify","\"one day I will see the world\"","\"I love making pizza\"","candidate_labels","\"travel\"","\"cooking\"","\"dancing\"","outputs","expected","sequence","labels","scores","0.4261703487477968","0.2903585771517135","0.28347107410048983","compare","0.2","0.4660367922118968","0.2756005926506238","0.2583626151374795","multi_label","true","0.7108286792234982","0.5763787804099745","0.44303326070949994","0.8527619536354446","0.7899589317978243","0.5838912691496106","dispose"]},"operators":{"distinct":8,"total":90,"identifiers":["let","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":34,"physical":60},"errors":[],"lineEnd":223,"lineStart":164,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["models","\"Xenova/bert-base-uncased\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":127},"errors":[],"lineEnd":354,"lineStart":228,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.37,"halstead":{"bugs":0.54,"difficulty":8.657,"effort":14019.49,"length":260,"time":778.861,"vocabulary":75,"volume":1619.493,"operands":{"distinct":67,"total":145,"identifiers":["unmasker","pipeline","\"fill-mask\"","models","0","texts","\"Once upon a [MASK].\"","\"[MASK] is the capital of England.\"","outputs","expected","score","0.9405396580696106","token","2051","token_str","\"time\"","sequence","\"once upon a time.\"","0.01182964164763689","13342","\"mattress\"","\"once upon a mattress.\"","0.0017291896510869265","6480","\"lifetime\"","\"once upon a lifetime.\"","0.0010079898638650775","2504","\"level\"","\"once upon a level.\"","0.0009655007743276656","2154","\"day\"","\"once upon a day.\"","compare","0.9900539517402649","0.0012258145725354552","0.0002977887343149632","2096","\"while\"","\"once upon a while.\"","0.0001899998023873195","0.00017618606216274202","2558","\"period\"","\"once upon a period.\"","0.2863538861274719","2414","\"london\"","\"london is the capital of england.\"","0.0607745461165905","2009","\"it\"","\"it is the capital of england.\"","0.037455108016729355","6484","\"birmingham\"","\"birmingham is the capital of england.\"","0.029375044628977776","5087","\"manchester\"","\"manchester is the capital of england.\"","0.0292277242988348","7067","\"bristol\"","\"bristol is the capital of england.\"","dispose"]},"operators":{"distinct":8,"total":115,"identifiers":["let","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":73,"physical":118},"errors":[],"lineEnd":351,"lineStart":234,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.026,"difficulty":3.333,"effort":260.459,"length":20,"time":14.47,"vocabulary":15,"volume":78.138,"operands":{"distinct":9,"total":10,"identifiers":["question","\"Who was Jim Henson?\"","context","\"Jim Henson was a nice puppet.\"","models","\"Xenova/distilbert-base-uncased-distilled-squad\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":6,"total":10,"identifiers":["let","=","const","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":38},"errors":[],"lineEnd":393,"lineStart":356,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.128,"difficulty":7.818,"effort":2992.311,"length":78,"time":166.24,"vocabulary":30,"volume":382.737,"operands":{"distinct":22,"total":43,"identifiers":["answerer","pipeline","\"question-answering\"","models","0","outputs","question","context","expected","answer","\"a nice puppet\"","score","0.5664517526948352","compare","0.2","topk","3","\"nice puppet\"","0.1698902336448853","\"puppet\"","0.14046057793125577","dispose"]},"operators":{"distinct":8,"total":35,"identifiers":["let","=","()","[]","{}",":",",","."]}},"paramCount":0,"sloc":{"logical":21,"physical":26},"errors":[],"lineEnd":390,"lineStart":365,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.042,"difficulty":5.6,"effort":700.547,"length":30,"time":38.919,"vocabulary":18,"volume":125.098,"operands":{"distinct":10,"total":14,"identifiers":["models","\"Xenova/distilbart-cnn-6-6\"","\"Xenova/bart-large-cnn\"","texts","The tower is 324 metres (1,063 ft) tall, about the same height as an 81-storey building, and the tallest structure in Paris. Its base is square, measuring 125 metres (410 ft) on each side. During its construction, the Eiffel Tower surpassed the Washington Monument to become the tallest man-made structure in the world, a title it held for 41 years until the Chrysler Building in New York City was finished in 1930. It was the first structure to reach a height of 300 metres. Due to the addition of a broadcasting aerial at the top of the tower in 1957, it is now taller than the Chrysler Building by 5.2 metres (17 ft). Excluding transmitters, the Eiffel Tower is the second tallest free-standing structure in France after the Millau Viaduct.","The Amazon rainforest (Portuguese: Floresta Amazônica or Amazônia; Spanish: Selva Amazónica, Amazonía or usually Amazonia; French: Forêt amazonienne; Dutch: Amazoneregenwoud), also known in English as Amazonia or the Amazon Jungle, is a moist broadleaf forest that covers most of the Amazon basin of South America. This basin encompasses 7,000,000 square kilometres (2,700,000 sq mi), of which 5,500,000 square kilometres (2,100,000 sq mi) are covered by the rainforest. This region includes territory belonging to nine nations. The majority of the forest is contained within Brazil, with 60% of the rainforest, followed by Peru with 13%, Colombia with 10%, and with minor amounts in Venezuela, Ecuador, Bolivia, Guyana, Suriname and French Guiana. States or departments in four nations contain \"Amazonas\" in their names. The Amazon represents over half of the planet's remaining rainforests, and comprises the largest and most biodiverse tract of tropical rainforest in the world, with an estimated 390 billion individual trees divided into 16,000 species.","it","0","MAX_TEST_EXECUTION_TIME","1"]},"operators":{"distinct":8,"total":16,"identifiers":["const","=","[]",",","let","``","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":46},"errors":[],"lineEnd":440,"lineStart":395,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.092,"difficulty":5.895,"effort":1634.763,"length":59,"time":90.82,"vocabulary":26,"volume":277.326,"operands":{"distinct":19,"total":32,"identifiers":["summarizer","pipeline","\"summarization\"","models","0","summary","texts","top_k","do_sample","false","expect","toHaveLength","2","summary_text","length","toBeGreaterThan","50","1","dispose"]},"operators":{"distinct":7,"total":27,"identifiers":["let","=","()","[]","{}",":","."]}},"paramCount":0,"sloc":{"logical":14,"physical":15},"errors":[],"lineEnd":417,"lineStart":403,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.074,"difficulty":5.056,"effort":1126.909,"length":48,"time":62.606,"vocabulary":25,"volume":222.905,"operands":{"distinct":18,"total":26,"identifiers":["summarizer","pipeline","\"summarization\"","models","1","summary","texts","0","top_k","do_sample","false","expect","toHaveLength","summary_text","length","toBeGreaterThan","50","dispose"]},"operators":{"distinct":7,"total":22,"identifiers":["let","=","()","[]","{}",":","."]}},"paramCount":0,"sloc":{"logical":12,"physical":15},"errors":[],"lineEnd":437,"lineStart":423,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.026,"difficulty":4.714,"effort":366.344,"length":21,"time":20.352,"vocabulary":13,"volume":77.709,"operands":{"distinct":7,"total":11,"identifiers":["models","\"Xenova/t5-small\"","\"Xenova/nllb-200-distilled-600M\"","it","0","MAX_TEST_EXECUTION_TIME","1"]},"operators":{"distinct":6,"total":10,"identifiers":["const","=","[]",",","()","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":86},"errors":[],"lineEnd":527,"lineStart":442,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.122,"difficulty":8.211,"effort":3006.09,"length":77,"time":167.005,"vocabulary":27,"volume":366.126,"operands":{"distinct":19,"total":39,"identifiers":["translator","pipeline","\"translation_en_to_de\"","models","0","texts","\"Hello, how are you?\"","\"My name is Maria.\"","translation","top_k","do_sample","false","expected","translation_text","\"Hallo, wie sind Sie?\"","compare","output","\"Mein Name ist Maria.\"","dispose"]},"operators":{"distinct":8,"total":38,"identifiers":["let","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":20,"physical":30},"errors":[],"lineEnd":482,"lineStart":453,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.17,"difficulty":8.667,"effort":4420,"length":102,"time":245.556,"vocabulary":32,"volume":510,"operands":{"distinct":24,"total":52,"identifiers":["translator","pipeline","\"translation\"","models","1","texts","\"Hello world!\"","\"I like to walk my dog.\"","translation","0","src_lang","\"eng_Latn\"","tgt_lang","\"arb_Arab\"","expected","translation_text","\"مرحباً، يا عالم!\"","compare","translation1","\"ell_Grek\"","translation2","\"Μου αρέσει να περπατάω το σκυλί μου.\"","expectedBack","dispose"]},"operators":{"distinct":8,"total":50,"identifiers":["let","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":25,"physical":37},"errors":[],"lineEnd":524,"lineStart":488,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.026,"difficulty":4.714,"effort":366.344,"length":21,"time":20.352,"vocabulary":13,"volume":77.709,"operands":{"distinct":7,"total":11,"identifiers":["models","\"Xenova/flan-t5-small\"","\"Xenova/flan-t5-base\"","it","0","MAX_TEST_EXECUTION_TIME","1"]},"operators":{"distinct":6,"total":10,"identifiers":["const","=","[]",",","()","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":51},"errors":[],"lineEnd":579,"lineStart":529,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.087,"difficulty":5.8,"effort":1505.664,"length":54,"time":83.648,"vocabulary":28,"volume":259.597,"operands":{"distinct":20,"total":29,"identifiers":["generator","pipeline","\"text2text-generation\"","models","0","text","\"Premise:  At my age you will probably have learnt one lesson. \"","\"Hypothesis:  It's not certain how many lessons you'll learn by your thirties. \"","\"Does the premise entail the hypothesis?\"","outputs","top_k","do_sample","false","expect","toHaveLength","1","generated_text","length","toBeGreaterThan","dispose"]},"operators":{"distinct":8,"total":25,"identifiers":["let","=","()","[]","+","{}",":","."]}},"paramCount":0,"sloc":{"logical":13,"physical":15},"errors":[],"lineEnd":549,"lineStart":535,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.081,"difficulty":5.684,"effort":1378.417,"length":51,"time":76.579,"vocabulary":27,"volume":242.499,"operands":{"distinct":19,"total":27,"identifiers":["generator","pipeline","\"text2text-generation\"","models","1","text","\n            Q: Roger has 5 tennis balls. He buys 2 more cans of tennis balls. Each can\n            has 3 tennis balls. How many tennis balls does he have now?\n            A: Roger started with 5 balls. 2 cans of 3 tennis balls each is 6 tennis balls.\n            5 + 6 = 11. The answer is 11.\n\n            Q: A juggler can juggle 16 balls. Half of the balls are golf balls, and half\n            of the golf balls are blue. How many blue golf balls are there?","outputs","top_k","0","do_sample","false","expect","toHaveLength","generated_text","length","toBeGreaterThan","10","dispose"]},"operators":{"distinct":8,"total":24,"identifiers":["let","=","()","[]","``","{}",":","."]}},"paramCount":0,"sloc":{"logical":13,"physical":22},"errors":[],"lineEnd":576,"lineStart":555,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.026,"difficulty":4.714,"effort":366.344,"length":21,"time":20.352,"vocabulary":13,"volume":77.709,"operands":{"distinct":7,"total":11,"identifiers":["models","\"Xenova/distilgpt2\"","\"Xenova/codegen-350M-mono\"","it","0","MAX_TEST_EXECUTION_TIME","1"]},"operators":{"distinct":6,"total":10,"identifiers":["const","=","[]",",","()","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":79},"errors":[],"lineEnd":659,"lineStart":581,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.083,"halstead":{"bugs":0.417,"difficulty":22.667,"effort":28333.333,"length":250,"time":1574.074,"vocabulary":32,"volume":1250,"operands":{"distinct":24,"total":136,"identifiers":["generator","pipeline","\"text-generation\"","models","0","texts","\"Once upon a time, there was a\"","\"I enjoy walking with my cute dog\"","output","max_new_tokens","10","top_k","do_sample","false","expect","toHaveLength","1","generated_text","length","toBeGreaterThan","num_beams","2","num_return_sequences","dispose"]},"operators":{"distinct":8,"total":114,"identifiers":["let","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":48,"physical":49},"errors":[],"lineEnd":635,"lineStart":587,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.087,"difficulty":5.25,"effort":1372.974,"length":55,"time":76.276,"vocabulary":27,"volume":261.519,"operands":{"distinct":20,"total":30,"identifiers":["generator","pipeline","\"text-generation\"","models","1","code","\"def fib(n):\"","output","max_new_tokens","45","top_k","0","do_sample","false","expect","toHaveLength","generated_text","length","toBeGreaterThan","dispose"]},"operators":{"distinct":7,"total":25,"identifiers":["let","=","()","[]","{}",":","."]}},"paramCount":0,"sloc":{"logical":14,"physical":16},"errors":[],"lineEnd":656,"lineStart":641,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["models","\"Xenova/all-MiniLM-L6-v2\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":40},"errors":[],"lineEnd":700,"lineStart":661,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.199,"difficulty":8.4,"effort":5016.904,"length":113,"time":278.717,"vocabulary":39,"volume":597.25,"operands":{"distinct":30,"total":56,"identifiers":["extractor","pipeline","\"feature-extraction\"","models","0","sentences","\"This framework generates embeddings for each input sentence\"","\"Sentences are passed as a list of string.\"","\"The quick brown fox jumps over the lazy dog.\"","output","expect","dims","toHaveLength","3","pooling","\"mean\"","normalize","true","2","tolist","pairwiseScores","1","map","x","expected","0.502872309810269","0.11088411026413121","0.09602621986931259","compare","dispose"]},"operators":{"distinct":9,"total":57,"identifiers":["let","=","()","[]",",",".","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":22,"physical":31},"errors":[],"lineEnd":697,"lineStart":667,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["cos_sim","x"]},"operators":{"distinct":2,"total":2,"identifiers":["()","... (spread)"]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":691,"lineStart":691,"name":"<anon method-27>","paramNames":["x"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.091,"difficulty":8,"effort":2178.589,"length":62,"time":121.033,"vocabulary":21,"volume":272.324,"operands":{"distinct":14,"total":32,"identifiers":["models","\"Xenova/whisper-tiny.en\"","\"Xenova/whisper-small\"","\"output_attentions\"","\"jonatasgrosman/wav2vec2-large-xlsr-53-english\"","it","0","MAX_TEST_EXECUTION_TIME","1","2","join","\" + \"","3","4"]},"operators":{"distinct":7,"total":30,"identifiers":["const","=","[]",",","()","function=>","."]}},"paramCount":0,"sloc":{"logical":13,"physical":201},"errors":[],"lineEnd":902,"lineStart":702,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.113,"difficulty":7,"effort":2369.022,"length":72,"time":131.612,"vocabulary":26,"volume":338.432,"operands":{"distinct":19,"total":38,"identifiers":["transcriber","pipeline","\"automatic-speech-recognition\"","models","0","url","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav\"","audioData","loadAudio","output","expect","text","length","toBeGreaterThan","50","return_timestamps","true","chunks","dispose"]},"operators":{"distinct":7,"total":34,"identifiers":["let","=","()","[]",".","{}",":"]}},"paramCount":0,"sloc":{"logical":18,"physical":28},"errors":[],"lineEnd":744,"lineStart":717,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.114,"difficulty":6.333,"effort":2161.707,"length":71,"time":120.095,"vocabulary":28,"volume":341.322,"operands":{"distinct":21,"total":38,"identifiers":["transcriber","pipeline","\"automatic-speech-recognition\"","models","1","url","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/french-audio.wav\"","audioData","loadAudio","output","language","\"french\"","task","\"transcribe\"","expect","text","length","toBeGreaterThan","20","\"translate\"","dispose"]},"operators":{"distinct":7,"total":33,"identifiers":["let","=","()","[]","{}",":","."]}},"paramCount":0,"sloc":{"logical":19,"physical":21},"errors":[],"lineEnd":770,"lineStart":750,"name":"<anon method-30>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.639,"halstead":{"bugs":0.623,"difficulty":10.143,"effort":18961.942,"length":303,"time":1053.441,"vocabulary":72,"volume":1869.487,"operands":{"distinct":63,"total":142,"identifiers":["transcriber","pipeline","\"automatic-speech-recognition\"","m","models","2","0","revision","1","quantized","false","url","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav\"","audioData","loadAudio","output","return_timestamps","\"word\"","target","text","\" And so my fellow Americans ask not what your country can do for you ask what you can do for your country.\"","chunks","\" And\"","timestamp","0.78","\" so\"","1.06","\" my\"","1.46","\" fellow\"","1.76","\" Americans\"","2.22","\" ask\"","3.88","\" not\"","4.52","\" what\"","5.68","\" your\"","6","\" country\"","6.36","\" can\"","6.76","\" do\"","7.02","\" for\"","7.24","\" you\"","8.02","8.28","8.66","8.94","9.28","9.5","9.72","9.92","10.22","\" country.\"","13.36","compare","dispose"]},"operators":{"distinct":9,"total":161,"identifiers":["let","=","()","[]","{}",":","const",",","."]}},"paramCount":0,"sloc":{"logical":61,"physical":45},"errors":[],"lineEnd":820,"lineStart":776,"name":"<anon method-31>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.22,"halstead":{"bugs":0.909,"difficulty":10.271,"effort":28004.905,"length":416,"time":1555.828,"vocabulary":94,"volume":2726.709,"operands":{"distinct":85,"total":194,"identifiers":["transcriber","pipeline","\"automatic-speech-recognition\"","m","models","3","0","revision","1","url","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/japanese-audio.wav\"","audioData","loadAudio","output","return_timestamps","\"word\"","language","\"japanese\"","task","\"transcribe\"","target","text","\"モリナガの美味しい牛乳は濃い青色に牛乳瓶を払ったゼザインのパック牛乳である。\"","chunks","\"モ\"","timestamp","0.56","\"リ\"","0.64","\"ナ\"","0.8","\"ガ\"","0.88","\"の\"","1.04","\"美味\"","1.22","\"しい\"","1.46","\"牛\"","1.76","\"乳\"","1.94","\"は\"","2.14","\"濃\"","2.34","\"い\"","2.48","\"青\"","2.62","\"色\"","2.84","\"に\"","3.22","3.42","\"瓶\"","3.58","\"を\"","3.82","\"払\"","4","\"った\"","4.32","\"ゼ\"","4.56","\"ザ\"","4.6","\"イ\"","4.74","\"ン\"","4.8","4.94","\"パ\"","5.12","\"ック\"","5.26","5.52","5.72","\"で\"","5.86","\"ある。\"","6.62","compare","dispose"]},"operators":{"distinct":9,"total":222,"identifiers":["let","=","()","[]","{}",":","const",",","."]}},"paramCount":0,"sloc":{"logical":82,"physical":54},"errors":[],"lineEnd":879,"lineStart":826,"name":"<anon method-32>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.062,"difficulty":3.235,"effort":605.958,"length":42,"time":33.664,"vocabulary":22,"volume":187.296,"operands":{"distinct":17,"total":22,"identifiers":["transcriber","pipeline","\"automatic-speech-recognition\"","m","models","4","url","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav\"","audioData","loadAudio","output","expect","text","length","toBeGreaterThan","50","dispose"]},"operators":{"distinct":5,"total":20,"identifiers":["let","=","()","[]","."]}},"paramCount":0,"sloc":{"logical":12,"physical":15},"errors":[],"lineEnd":899,"lineStart":885,"name":"<anon method-33>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.026,"difficulty":4.714,"effort":366.344,"length":21,"time":20.352,"vocabulary":13,"volume":77.709,"operands":{"distinct":7,"total":11,"identifiers":["models","\"Xenova/speecht5_tts\"","\"Xenova/mms-tts-fra\"","it","0","MAX_TEST_EXECUTION_TIME","1"]},"operators":{"distinct":6,"total":10,"identifiers":["const","=","[]",",","()","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":44},"errors":[],"lineEnd":947,"lineStart":904,"name":"<anon method-34>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.071,"difficulty":4.412,"effort":937.974,"length":47,"time":52.11,"vocabulary":23,"volume":212.607,"operands":{"distinct":17,"total":25,"identifiers":["synthesizer","pipeline","\"text-to-speech\"","models","0","speaker_embeddings","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/speaker_embeddings.bin\"","output","\"Hello, my dog is cute\"","expect","audio","length","toBeGreaterThan","sampling_rate","toEqual","16000","dispose"]},"operators":{"distinct":6,"total":22,"identifiers":["let","=","()","[]","{}","."]}},"paramCount":0,"sloc":{"logical":12,"physical":18},"errors":[],"lineEnd":927,"lineStart":910,"name":"<anon method-35>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.057,"difficulty":3.281,"effort":562.079,"length":39,"time":31.227,"vocabulary":21,"volume":171.3,"operands":{"distinct":16,"total":21,"identifiers":["synthesizer","pipeline","\"text-to-speech\"","models","1","output","\"Bonjour\"","expect","audio","length","toBeGreaterThan","0","sampling_rate","toEqual","16000","dispose"]},"operators":{"distinct":5,"total":18,"identifiers":["let","=","()","[]","."]}},"paramCount":0,"sloc":{"logical":10,"physical":12},"errors":[],"lineEnd":944,"lineStart":933,"name":"<anon method-36>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["models","\"Xenova/wav2vec2-large-xlsr-53-gender-recognition-librispeech\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":28},"errors":[],"lineEnd":976,"lineStart":949,"name":"<anon method-37>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.082,"difficulty":5.684,"effort":1405.445,"length":52,"time":78.08,"vocabulary":27,"volume":247.254,"operands":{"distinct":19,"total":27,"identifiers":["classifier","pipeline","\"audio-classification\"","models","0","url","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/jfk.wav\"","audioData","loadAudio","outputs","expected","score","0.997512936592102","label","\"male\"","0.0024870133493095636","\"female\"","compare","dispose"]},"operators":{"distinct":8,"total":25,"identifiers":["let","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":15,"physical":19},"errors":[],"lineEnd":973,"lineStart":955,"name":"<anon method-38>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["models","\"Xenova/vit-gpt2-image-captioning\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":95},"errors":[],"lineEnd":1072,"lineStart":978,"name":"<anon method-39>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.613,"halstead":{"bugs":0.491,"difficulty":23.259,"effort":34240.054,"length":287,"time":1902.225,"vocabulary":35,"volume":1472.104,"operands":{"distinct":27,"total":157,"identifiers":["captioner","pipeline","\"image-to-text\"","models","0","url","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/savanna.jpg\"","urls","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/football-match.jpg\"","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/airport.jpg\"","output","top_k","do_sample","false","expect","toHaveLength","1","generated_text","length","toBeGreaterThan","10","max_new_tokens","20","num_beams","2","num_return_sequences","dispose"]},"operators":{"distinct":8,"total":130,"identifiers":["let","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":62,"physical":86},"errors":[],"lineEnd":1069,"lineStart":984,"name":"<anon method-40>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["models","\"Xenova/vit-base-patch16-224\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":72},"errors":[],"lineEnd":1145,"lineStart":1074,"name":"<anon method-41>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.381,"halstead":{"bugs":0.282,"difficulty":10.581,"effort":8947.674,"length":160,"time":497.093,"vocabulary":39,"volume":845.664,"operands":{"distinct":31,"total":82,"identifiers":["classifier","pipeline","\"image-classification\"","models","0","url","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/tiger.jpg\"","urls","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/palace.jpg\"","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/teapot.jpg\"","outputs","expected","label","\"tiger, Panthera tigris\"","score","0.607988178730011","compare","0.2","topk","2","\"tiger cat\"","0.3877776563167572","\"palace\"","0.9986862540245056","\"teapot\"","0.987880527973175","\"castle\"","0.00037879671435803175","\"coffeepot\"","0.006591461598873138","dispose"]},"operators":{"distinct":8,"total":78,"identifiers":["let","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":42,"physical":63},"errors":[],"lineEnd":1142,"lineStart":1080,"name":"<anon method-42>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.026,"difficulty":4.714,"effort":366.344,"length":21,"time":20.352,"vocabulary":13,"volume":77.709,"operands":{"distinct":7,"total":11,"identifiers":["models","\"Xenova/detr-resnet-50-panoptic\"","\"Xenova/segformer_b2_clothes\"","it","0","MAX_TEST_EXECUTION_TIME","1"]},"operators":{"distinct":6,"total":10,"identifiers":["const","=","[]",",","()","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":69},"errors":[],"lineEnd":1215,"lineStart":1147,"name":"<anon method-43>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.778,"halstead":{"bugs":0.23,"difficulty":7.784,"effort":5374.276,"length":125,"time":298.571,"vocabulary":46,"volume":690.445,"operands":{"distinct":37,"total":64,"identifiers":["segmenter","pipeline","\"image-segmentation\"","models","0","quantized","false","img","\"https://huggingface.co/datasets/huggingface/documentation-images/resolve/main/coco_sample.png\"","outputs","expected","score","0.9916538596153259","label","\"cat\"","mask","58998","0.9987397789955139","\"remote\"","4164","0.9994599223136902","2275","0.9730215072631836","\"couch\"","176980","0.9993911385536194","52670","outputLabels","map","x","expectedLabels","expect","toHaveLength","length","sort","toEqual","dispose"]},"operators":{"distinct":9,"total":61,"identifiers":["let","=","()","[]","{}",":",",",".","function=>"]}},"paramCount":0,"sloc":{"logical":36,"physical":28},"errors":[],"lineEnd":1180,"lineStart":1153,"name":"<anon method-44>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["x","label"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":1172,"lineStart":1172,"name":"<anon method-45>","paramNames":["x"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["x","label"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":1173,"lineStart":1173,"name":"<anon method-46>","paramNames":["x"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.5,"halstead":{"bugs":0.312,"difficulty":9.75,"effort":9134.581,"length":166,"time":507.477,"vocabulary":50,"volume":936.88,"operands":{"distinct":40,"total":78,"identifiers":["segmenter","pipeline","\"image-segmentation\"","models","1","img","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/young-man-standing-and-leaning-on-car.jpg\"","outputs","expected","label","\"Background\"","\"Hair\"","\"Upper-clothes\"","\"Pants\"","\"Left-shoe\"","\"Right-shoe\"","\"Face\"","\"Left-leg\"","\"Right-leg\"","\"Left-arm\"","\"Right-arm\"","outputLabels","map","x","expectedLabels","expect","toHaveLength","length","sort","toEqual","output","score","toBeNull","mask","width","970","height","1455","channels","dispose"]},"operators":{"distinct":10,"total":88,"identifiers":["let","=","()","[]",",","{}",":",".","function=>","forof"]}},"paramCount":0,"sloc":{"logical":40,"physical":27},"errors":[],"lineEnd":1212,"lineStart":1186,"name":"<anon method-47>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["x","label"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":1196,"lineStart":1196,"name":"<anon method-48>","paramNames":["x"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["x","label"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":1197,"lineStart":1197,"name":"<anon method-49>","paramNames":["x"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["models","\"Xenova/clip-vit-base-patch32\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":54},"errors":[],"lineEnd":1270,"lineStart":1217,"name":"<anon method-50>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.293,"difficulty":10.061,"effort":8839.636,"length":164,"time":491.091,"vocabulary":41,"volume":878.639,"operands":{"distinct":33,"total":83,"identifiers":["classifier","pipeline","\"zero-shot-image-classification\"","models","0","url","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/football-match.jpg\"","urls","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/airport.jpg\"","\"https://huggingface.co/datasets/mishig/sample_images/resolve/main/savanna.jpg\"","classes","\"football\"","\"airport\"","\"animals\"","output","expected","score","0.9719080924987793","label","0.022564826533198357","0.005527070723474026","compare","0.1","0.9712504148483276","0.022469401359558105","0.006280169822275639","0.997433602809906","0.0016500800848007202","0.0009163151844404638","0.9851226806640625","0.007516484707593918","0.007360846735537052","dispose"]},"operators":{"distinct":8,"total":81,"identifiers":["let","=","()","[]",",","{}",":","."]}},"paramCount":0,"sloc":{"logical":39,"physical":45},"errors":[],"lineEnd":1267,"lineStart":1223,"name":"<anon method-51>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["models","\"Xenova/detr-resnet-50\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":110},"errors":[],"lineEnd":1381,"lineStart":1272,"name":"<anon method-52>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":5.556,"halstead":{"bugs":0.333,"difficulty":18.688,"effort":18678.479,"length":182,"time":1037.693,"vocabulary":45,"volume":999.517,"operands":{"distinct":32,"total":92,"identifiers":["detector","pipeline","\"object-detection\"","models","0","url","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/cats.jpg\"","urls","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/savanna.jpg\"","output","threshold","0.9","expect","length","toBeGreaterThan","cls","score","toBe","\"number\"","label","\"string\"","key","\"xmin\"","\"ymin\"","\"xmax\"","\"ymax\"","box","percentage","true","toHaveLength","i","dispose"]},"operators":{"distinct":13,"total":90,"identifiers":["let","=","()","[]","{}",":",".","forof","typeof (prefix)",",","for","<","++ (prefix)"]}},"paramCount":0,"sloc":{"logical":36,"physical":101},"errors":[],"lineEnd":1378,"lineStart":1278,"name":"<anon method-53>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["models","\"Xenova/owlvit-base-patch32\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":98},"errors":[],"lineEnd":1480,"lineStart":1383,"name":"<anon method-54>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.337,"difficulty":11.375,"effort":11491.597,"length":179,"time":638.422,"vocabulary":50,"volume":1010.25,"operands":{"distinct":40,"total":91,"identifiers":["detector","pipeline","\"zero-shot-object-detection\"","models","0","url","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/astronaut.png\"","candidate_labels","\"human face\"","\"rocket\"","\"helmet\"","\"american flag\"","output","expect","length","toBeGreaterThan","cls","score","toBe","\"number\"","label","\"string\"","key","\"xmin\"","\"ymin\"","\"xmax\"","\"ymax\"","box","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/beach.png\"","\"hat\"","\"book\"","\"sunglasses\"","\"camera\"","topk","4","threshold","0.05","percentage","true","dispose"]},"operators":{"distinct":10,"total":88,"identifiers":["let","=","()","[]",",",".","forof","typeof (prefix)","{}",":"]}},"paramCount":0,"sloc":{"logical":35,"physical":89},"errors":[],"lineEnd":1477,"lineStart":1389,"name":"<anon method-55>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["models","\"Xenova/swin2SR-classical-sr-x2-64\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":38},"errors":[],"lineEnd":1519,"lineStart":1482,"name":"<anon method-56>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.184,"difficulty":10.333,"effort":5712.74,"length":115,"time":317.374,"vocabulary":28,"volume":552.846,"operands":{"distinct":21,"total":62,"identifiers":["upscaler","pipeline","\"image-to-image\"","models","0","url","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/pattern_3x3.png\"","outputs","expect","width","toEqual","16","height","channels","3","data","toHaveLength","768","2","output","dispose"]},"operators":{"distinct":7,"total":53,"identifiers":["let","=","()","[]",".",",","forof"]}},"paramCount":0,"sloc":{"logical":28,"physical":29},"errors":[],"lineEnd":1516,"lineStart":1488,"name":"<anon method-57>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":3,"effort":119.589,"length":12,"time":6.644,"vocabulary":10,"volume":39.863,"operands":{"distinct":5,"total":6,"identifiers":["models","\"Xenova/dpt-hybrid-midas\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":6,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":40},"errors":[],"lineEnd":1560,"lineStart":1521,"name":"<anon method-58>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.857,"halstead":{"bugs":0.248,"difficulty":11.852,"effort":8814.768,"length":145,"time":489.709,"vocabulary":35,"volume":743.746,"operands":{"distinct":27,"total":80,"identifiers":["depth_estimator","pipeline","\"depth-estimation\"","models","0","url","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/cats.jpg\"","predicted_depth","depth","compare","dims","384","expect","width","toEqual","640","height","480","channels","1","data","toHaveLength","307200","outputs","2","output","dispose"]},"operators":{"distinct":8,"total":65,"identifiers":["let","=","()","[]","{}",".",",","forof"]}},"paramCount":0,"sloc":{"logical":35,"physical":31},"errors":[],"lineEnd":1557,"lineStart":1527,"name":"<anon method-59>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.025,"difficulty":2.778,"effort":211.52,"length":20,"time":11.751,"vocabulary":14,"volume":76.147,"operands":{"distinct":9,"total":10,"identifiers":["models","\"Xenova/donut-base-finetuned-docvqa\"","image","\"https://huggingface.co/datasets/Xenova/transformers.js-docs/resolve/main/invoice.png\"","question","\"What is the invoice number?\"","it","0","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","[]","()","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":23},"errors":[],"lineEnd":1584,"lineStart":1562,"name":"<anon method-60>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.046,"difficulty":4.577,"effort":632.996,"length":32,"time":35.166,"vocabulary":20,"volume":138.302,"operands":{"distinct":13,"total":17,"identifiers":["qa_pipeline","pipeline","\"document-question-answering\"","models","0","output","image","question","expected","answer","\"us-001\"","compare","dispose"]},"operators":{"distinct":7,"total":15,"identifiers":["let","=","()","[]","{}",":","."]}},"paramCount":0,"sloc":{"logical":9,"physical":12},"errors":[],"lineEnd":1581,"lineStart":1570,"name":"<anon method-61>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.016,"cyclomaticDensity":0.086,"halstead":{"bugs":0.243,"difficulty":0.66,"effort":29896.81,"length":79.565,"time":1660.934,"vocabulary":9.355,"volume":730.395,"operands":{"distinct":9.065,"total":41.226},"operators":{"distinct":0.29,"total":38.339}},"paramCount":0.081,"sloc":{"logical":19.145,"physical":25.581}},"methodAverage":{"cyclomatic":1.016,"cyclomaticDensity":19.62,"halstead":{"bugs":0.142,"difficulty":6.431,"effort":4667.166,"length":80.721,"time":259.287,"vocabulary":25.115,"volume":425.494,"operands":{"distinct":18.705,"total":41.82},"operators":{"distinct":6.41,"total":38.902}},"paramCount":0.082,"sloc":{"logical":19.377,"physical":72.115}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/pipelines/test_pipelines_background_removal.js","testCases":3,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  26 |\n  27 |           const output = await pipe(image);\n> 28 |           expect(output).toHaveLength(1);\n     |                                      ^ Magic Number\n  29 |           expect(output[0]).toBeInstanceOf(RawImage);\n  30 |           expect(output[0].width).toEqual(image.width);\n  31 |           expect(output[0].height).toEqual(image.height);","start":{"line":28,"column":38,"index":1014}},{"frame":"  30 |           expect(output[0].width).toEqual(image.width);\n  31 |           expect(output[0].height).toEqual(image.height);\n> 32 |           expect(output[0].channels).toEqual(4); // With alpha channel\n     |                                             ^ Magic Number\n  33 |         },\n  34 |         MAX_TEST_EXECUTION_TIME,\n  35 |       );","start":{"line":32,"column":45,"index":1231}},{"frame":"  54 |\n  55 |           const output = await pipe(image);\n> 56 |           expect(output).toHaveLength(1);\n     |                                      ^ Magic Number\n  57 |           expect(output[0]).toBeInstanceOf(RawImage);\n  58 |           expect(output[0].width).toEqual(image.width);\n  59 |           expect(output[0].height).toEqual(image.height);","start":{"line":56,"column":38,"index":1934}},{"frame":"  58 |           expect(output[0].width).toEqual(image.width);\n  59 |           expect(output[0].height).toEqual(image.height);\n> 60 |           expect(output[0].channels).toEqual(4); // With alpha channel\n     |                                             ^ Magic Number\n  61 |         },\n  62 |         MAX_TEST_EXECUTION_TIME,\n  63 |       );","start":{"line":60,"column":45,"index":2151}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":18.75,"halstead":{"bugs":0.397,"difficulty":11.162,"effort":13284.715,"length":218,"time":738.04,"vocabulary":44,"volume":1190.156,"operands":{"distinct":37,"total":118,"identifiers":["PIPELINE_ID","\"background-removal\"","describe","\"Background Removal\"","\"Portrait Segmentation\"","model_id","\"Xenova/modnet\"","pipe","beforeAll","pipeline","DEFAULT_MODEL_OPTIONS","MAX_MODEL_LOAD_TIME","it","\"should be an instance of BackgroundRemovalPipeline\"","expect","toBeInstanceOf","BackgroundRemovalPipeline","\"single\"","image","load_cached_image","\"portrait_of_woman\"","output","toHaveLength","1","0","RawImage","width","toEqual","height","channels","4","MAX_TEST_EXECUTION_TIME","afterAll","dispose","MAX_MODEL_DISPOSE_TIME","\"Selfie Segmentation\"","\"onnx-community/mediapipe_selfie_segmentation\""]},"operators":{"distinct":7,"total":100,"identifiers":["const","=","function=>","()","let",".","[]"]}},"paramCount":0,"sloc":{"logical":64,"physical":71}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/transformers.js","type":"esm"},{"line":3,"path":"../init.js","type":"esm"},{"line":4,"path":"../asset_cache.js","type":"esm"}],"errors":[],"lineEnd":71,"lineStart":1,"maintainability":119.909,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Background Removal\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":63},"errors":[],"lineEnd":70,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"Portrait Segmentation\"","\"Selfie Segmentation\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":61},"errors":[],"lineEnd":69,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.031,"difficulty":2.727,"effort":250.909,"length":23,"time":13.939,"vocabulary":16,"volume":92,"operands":{"distinct":11,"total":12,"identifiers":["model_id","\"Xenova/modnet\"","pipe","beforeAll","MAX_MODEL_LOAD_TIME","it","\"should be an instance of BackgroundRemovalPipeline\"","\"single\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":11,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":31},"errors":[],"lineEnd":40,"lineStart":10,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1,"effort":19.651,"length":7,"time":1.092,"vocabulary":7,"volume":19.651,"operands":{"distinct":5,"total":5,"identifiers":["pipe","pipeline","PIPELINE_ID","model_id","DEFAULT_MODEL_OPTIONS"]},"operators":{"distinct":2,"total":2,"identifiers":["=","()"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":16,"lineStart":14,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["expect","pipe","toBeInstanceOf","BackgroundRemovalPipeline"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":20,"lineStart":18,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.095,"difficulty":5.469,"effort":1561.332,"length":65,"time":86.741,"vocabulary":21,"volume":285.501,"operands":{"distinct":16,"total":35,"identifiers":["image","load_cached_image","\"portrait_of_woman\"","output","pipe","expect","toHaveLength","1","0","toBeInstanceOf","RawImage","width","toEqual","height","channels","4"]},"operators":{"distinct":5,"total":30,"identifiers":["const","=","()",".","[]"]}},"paramCount":0,"sloc":{"logical":14,"physical":10},"errors":[],"lineEnd":33,"lineStart":24,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":39,"lineStart":37,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":2.5,"effort":185.577,"length":19,"time":10.31,"vocabulary":15,"volume":74.231,"operands":{"distinct":10,"total":10,"identifiers":["model_id","\"onnx-community/mediapipe_selfie_segmentation\"","pipe","beforeAll","MAX_MODEL_LOAD_TIME","it","\"single\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":27},"errors":[],"lineEnd":68,"lineStart":42,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1,"effort":19.651,"length":7,"time":1.092,"vocabulary":7,"volume":19.651,"operands":{"distinct":5,"total":5,"identifiers":["pipe","pipeline","PIPELINE_ID","model_id","DEFAULT_MODEL_OPTIONS"]},"operators":{"distinct":2,"total":2,"identifiers":["=","()"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":48,"lineStart":46,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.095,"difficulty":5.469,"effort":1561.332,"length":65,"time":86.741,"vocabulary":21,"volume":285.501,"operands":{"distinct":16,"total":35,"identifiers":["image","load_cached_image","\"portrait_of_woman\"","output","pipe","expect","toHaveLength","1","0","toBeInstanceOf","RawImage","width","toEqual","height","channels","4"]},"operators":{"distinct":5,"total":30,"identifiers":["const","=","()",".","[]"]}},"paramCount":0,"sloc":{"logical":14,"physical":10},"errors":[],"lineEnd":61,"lineStart":52,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":67,"lineStart":65,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.563,"halstead":{"bugs":0.033,"difficulty":0.93,"effort":1107.06,"length":18.167,"time":61.503,"vocabulary":3.667,"volume":99.18,"operands":{"distinct":3.083,"total":9.833},"operators":{"distinct":0.583,"total":8.333}},"paramCount":0,"sloc":{"logical":5.333,"physical":5.917}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":32.89,"halstead":{"bugs":0.025,"difficulty":2.136,"effort":333.21,"length":19.364,"time":18.512,"vocabulary":10,"volume":76.11,"operands":{"distinct":6.909,"total":10.545},"operators":{"distinct":3.091,"total":8.818}},"paramCount":0,"sloc":{"logical":5.636,"physical":19.727}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/pipelines/test_pipelines_depth_estimation.js","testCases":3,"smells":6,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  27 |           const output = await pipe(images[0]);\n  28 |           expect(output.predicted_depth.dims).toEqual([224, 224]);\n> 29 |           expect(output.predicted_depth.mean().item()).toBeCloseTo(0.000006106501587055391, 6);\n     |                                                                   ^ Magic Number\n  30 |           expect(output.depth.size).toEqual(images[0].size);\n  31 |         },\n  32 |         MAX_TEST_EXECUTION_TIME,","start":{"line":29,"column":67,"index":1154}},{"frame":"  27 |           const output = await pipe(images[0]);\n  28 |           expect(output.predicted_depth.dims).toEqual([224, 224]);\n> 29 |           expect(output.predicted_depth.mean().item()).toBeCloseTo(0.000006106501587055391, 6);\n     |                                                                                            ^ Magic Number\n  30 |           expect(output.depth.size).toEqual(images[0].size);\n  31 |         },\n  32 |         MAX_TEST_EXECUTION_TIME,","start":{"line":29,"column":92,"index":1179}},{"frame":"  41 |           expect(output).toHaveLength(images.length);\n  42 |           expect(output[0].predicted_depth.dims).toEqual([224, 224]);\n> 43 |           expect(output[0].predicted_depth.mean().item()).toBeCloseTo(0.000006106501587055391, 6);\n     |                                                                      ^ Magic Number\n  44 |           expect(output[0].depth.size).toEqual(images[0].size);\n  45 |           expect(output[1].predicted_depth.dims).toEqual([224, 224]);\n  46 |           expect(output[1].predicted_depth.mean().item()).toBeCloseTo(0.0000014548650142387487, 6);","start":{"line":43,"column":70,"index":1633}},{"frame":"  41 |           expect(output).toHaveLength(images.length);\n  42 |           expect(output[0].predicted_depth.dims).toEqual([224, 224]);\n> 43 |           expect(output[0].predicted_depth.mean().item()).toBeCloseTo(0.000006106501587055391, 6);\n     |                                                                                               ^ Magic Number\n  44 |           expect(output[0].depth.size).toEqual(images[0].size);\n  45 |           expect(output[1].predicted_depth.dims).toEqual([224, 224]);\n  46 |           expect(output[1].predicted_depth.mean().item()).toBeCloseTo(0.0000014548650142387487, 6);","start":{"line":43,"column":95,"index":1658}},{"frame":"  44 |           expect(output[0].depth.size).toEqual(images[0].size);\n  45 |           expect(output[1].predicted_depth.dims).toEqual([224, 224]);\n> 46 |           expect(output[1].predicted_depth.mean().item()).toBeCloseTo(0.0000014548650142387487, 6);\n     |                                                                      ^ Magic Number\n  47 |           expect(output[1].depth.size).toEqual(images[1].size);\n  48 |         },\n  49 |         MAX_TEST_EXECUTION_TIME,","start":{"line":46,"column":70,"index":1866}},{"frame":"  44 |           expect(output[0].depth.size).toEqual(images[0].size);\n  45 |           expect(output[1].predicted_depth.dims).toEqual([224, 224]);\n> 46 |           expect(output[1].predicted_depth.mean().item()).toBeCloseTo(0.0000014548650142387487, 6);\n     |                                                                                                ^ Magic Number\n  47 |           expect(output[1].depth.size).toEqual(images[1].size);\n  48 |         },\n  49 |         MAX_TEST_EXECUTION_TIME,","start":{"line":46,"column":96,"index":1892}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":16.393,"halstead":{"bugs":0.478,"difficulty":11.217,"effort":16074.151,"length":249,"time":893.008,"vocabulary":54,"volume":1432.967,"operands":{"distinct":46,"total":129,"identifiers":["PIPELINE_ID","\"depth-estimation\"","describe","\"Depth Estimation\"","model_id","\"hf-internal-testing/tiny-random-DPTForDepthEstimation\"","pipe","images","beforeAll","pipeline","DEFAULT_MODEL_OPTIONS","Promise","all","load_cached_image","\"white_image\"","\"blue_image\"","MAX_MODEL_LOAD_TIME","it","\"should be an instance of DepthEstimationPipeline\"","expect","toBeInstanceOf","DepthEstimationPipeline","\"batch_size=1\"","\"default\"","output","0","predicted_depth","dims","toEqual","224","mean","item","toBeCloseTo","0.000006106501587055391","6","depth","size","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","toHaveLength","length","1","0.0000014548650142387487","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":8,"total":120,"identifiers":["const","=","function=>","()","let",".","[]",","]}},"paramCount":0,"sloc":{"logical":61,"physical":58}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/transformers.js","type":"esm"},{"line":3,"path":"../init.js","type":"esm"},{"line":4,"path":"../asset_cache.js","type":"esm"}],"errors":[],"lineEnd":58,"lineStart":1,"maintainability":116.458,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Depth Estimation\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":50},"errors":[],"lineEnd":57,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.039,"difficulty":2.692,"effort":314.348,"length":28,"time":17.464,"vocabulary":18,"volume":116.758,"operands":{"distinct":13,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-DPTForDepthEstimation\"","pipe","images","beforeAll","MAX_MODEL_LOAD_TIME","it","\"should be an instance of DepthEstimationPipeline\"","describe","\"batch_size=1\"","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":48},"errors":[],"lineEnd":56,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.028,"difficulty":2.727,"effort":229.091,"length":21,"time":12.727,"vocabulary":16,"volume":84,"operands":{"distinct":11,"total":12,"identifiers":["pipe","pipeline","PIPELINE_ID","model_id","DEFAULT_MODEL_OPTIONS","images","Promise","all","load_cached_image","\"white_image\"","\"blue_image\""]},"operators":{"distinct":5,"total":9,"identifiers":["=","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":17,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["expect","pipe","toBeInstanceOf","DepthEstimationPipeline"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":21,"lineStart":19,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":12},"errors":[],"lineEnd":34,"lineStart":23,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.079,"difficulty":5.063,"effort":1196.521,"length":53,"time":66.473,"vocabulary":22,"volume":236.35,"operands":{"distinct":16,"total":27,"identifiers":["output","pipe","images","0","expect","predicted_depth","dims","toEqual","224","mean","item","toBeCloseTo","0.000006106501587055391","6","depth","size"]},"operators":{"distinct":6,"total":26,"identifiers":["const","=","()","[]",".",","]}},"paramCount":0,"sloc":{"logical":10,"physical":6},"errors":[],"lineEnd":31,"lineStart":26,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":16},"errors":[],"lineEnd":51,"lineStart":36,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.183,"difficulty":9,"effort":4949.563,"length":117,"time":274.976,"vocabulary":26,"volume":549.951,"operands":{"distinct":20,"total":60,"identifiers":["output","pipe","images","expect","toHaveLength","length","0","predicted_depth","dims","toEqual","224","mean","item","toBeCloseTo","0.000006106501587055391","6","depth","size","1","0.0000014548650142387487"]},"operators":{"distinct":6,"total":57,"identifiers":["const","=","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":20,"physical":10},"errors":[],"lineEnd":48,"lineStart":39,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":55,"lineStart":53,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.639,"halstead":{"bugs":0.048,"difficulty":1.122,"effort":1607.415,"length":24.9,"time":89.301,"vocabulary":5.4,"volume":143.297,"operands":{"distinct":4.6,"total":12.9},"operators":{"distinct":0.8,"total":12}},"paramCount":0,"sloc":{"logical":6.1,"physical":5.8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":32.151,"halstead":{"bugs":0.039,"difficulty":2.72,"effort":749.649,"length":27.111,"time":41.647,"vocabulary":11.778,"volume":116.041,"operands":{"distinct":8.222,"total":14.111},"operators":{"distinct":3.556,"total":13}},"paramCount":0,"sloc":{"logical":6.556,"physical":16.889}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/pipelines/test_pipelines_feature_extraction.js","testCases":11,"smells":11,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  28 |           expect(output.dims).toEqual([1, 20, 32]);\n  29 |           expect(output.type).toEqual(\"float32\");\n> 30 |           expect(output.mean().item()).toBeCloseTo(-1.538501215314625e-9, 6);\n     |                                                                          ^ Magic Number\n  31 |         },\n  32 |         MAX_TEST_EXECUTION_TIME,\n  33 |       );","start":{"line":30,"column":74,"index":1085}},{"frame":"  38 |           expect(output.dims).toEqual([1, 32]);\n  39 |           expect(output.type).toEqual(\"float32\");\n> 40 |           expect(output.mean().item()).toBeCloseTo(2.491287887096405e-8, 6);\n     |                                                   ^ Magic Number\n  41 |         },\n  42 |         MAX_TEST_EXECUTION_TIME,\n  43 |       );","start":{"line":40,"column":51,"index":1416}},{"frame":"  38 |           expect(output.dims).toEqual([1, 32]);\n  39 |           expect(output.type).toEqual(\"float32\");\n> 40 |           expect(output.mean().item()).toBeCloseTo(2.491287887096405e-8, 6);\n     |                                                                         ^ Magic Number\n  41 |         },\n  42 |         MAX_TEST_EXECUTION_TIME,\n  43 |       );","start":{"line":40,"column":73,"index":1438}},{"frame":"  48 |           expect(output.dims).toEqual([1, 32]);\n  49 |           expect(output.type).toEqual(\"float32\");\n> 50 |           expect(output.mean().item()).toBeCloseTo(-2.0245352061465383e-9, 6);\n     |                                                                           ^ Magic Number\n  51 |         },\n  52 |         MAX_TEST_EXECUTION_TIME,\n  53 |       );","start":{"line":50,"column":75,"index":1828}},{"frame":"  66 |         expect(output.dims).toEqual([1, 32 / 8]);\n  67 |         expect(output.type).toEqual(\"uint8\");\n> 68 |         expect(output.mean().item()).toEqual(140);\n     |                                             ^ Magic Number\n  69 |       });\n  70 |     });\n  71 |","start":{"line":68,"column":45,"index":2584}},{"frame":"  77 |           expect(output.dims).toEqual([texts.length, 20, 32]);\n  78 |           expect(output.type).toEqual(\"float32\");\n> 79 |           expect(output.mean().item()).toBeCloseTo(2.345950544935249e-9, 6);\n     |                                                   ^ Magic Number\n  80 |         },\n  81 |         MAX_TEST_EXECUTION_TIME,\n  82 |       );","start":{"line":79,"column":51,"index":2905}},{"frame":"  77 |           expect(output.dims).toEqual([texts.length, 20, 32]);\n  78 |           expect(output.type).toEqual(\"float32\");\n> 79 |           expect(output.mean().item()).toBeCloseTo(2.345950544935249e-9, 6);\n     |                                                                         ^ Magic Number\n  80 |         },\n  81 |         MAX_TEST_EXECUTION_TIME,\n  82 |       );","start":{"line":79,"column":73,"index":2927}},{"frame":"  87 |           expect(output.dims).toEqual([texts.length, 32]);\n  88 |           expect(output.type).toEqual(\"float32\");\n> 89 |           expect(output.mean().item()).toBeCloseTo(1.6298145055770874e-8, 6);\n     |                                                   ^ Magic Number\n  90 |         },\n  91 |         MAX_TEST_EXECUTION_TIME,\n  92 |       );","start":{"line":89,"column":51,"index":3266}},{"frame":"  87 |           expect(output.dims).toEqual([texts.length, 32]);\n  88 |           expect(output.type).toEqual(\"float32\");\n> 89 |           expect(output.mean().item()).toBeCloseTo(1.6298145055770874e-8, 6);\n     |                                                                          ^ Magic Number\n  90 |         },\n  91 |         MAX_TEST_EXECUTION_TIME,\n  92 |       );","start":{"line":89,"column":74,"index":3289}},{"frame":"   97 |           expect(output.dims).toEqual([texts.length, 32]);\n   98 |           expect(output.type).toEqual(\"float32\");\n>  99 |           expect(output.mean().item()).toBeCloseTo(-1.538609240014921e-10, 6);\n      |                                                                           ^ Magic Number\n  100 |         },\n  101 |         MAX_TEST_EXECUTION_TIME,\n  102 |       );","start":{"line":99,"column":75,"index":3687}},{"frame":"  111 |         expect(output.dims).toEqual([texts.length, 32 / 8]);\n  112 |         expect(output.type).toEqual(\"uint8\");\n> 113 |         expect(output.mean().item()).toEqual(140);\n      |                                             ^ Magic Number\n  114 |       });\n  115 |     });\n  116 |","start":{"line":113,"column":45,"index":4391}}]}],"metrics":{"aggregate":{"cyclomatic":18,"cyclomaticDensity":11.18,"halstead":{"bugs":1.278,"difficulty":29.169,"effort":111871.974,"length":612,"time":6215.11,"vocabulary":77,"volume":3835.273,"operands":{"distinct":65,"total":316,"identifiers":["PIPELINE_ID","\"feature-extraction\"","describe","\"Feature Extraction\"","model_id","\"hf-internal-testing/tiny-random-BertModel\"","texts","\"This is a simple test.\"","\"Hello world\"","pipe","beforeAll","pipeline","DEFAULT_MODEL_OPTIONS","MAX_MODEL_LOAD_TIME","it","\"should be an instance of FeatureExtractionPipeline \"","expect","toBeInstanceOf","FeatureExtractionPipeline","\"batch_size=1\"","\"default\"","output","0","dims","toEqual","1","20","32","type","\"float32\"","mean","item","toBeCloseTo","1.538501215314625e-9","6","MAX_TEST_EXECUTION_TIME","\"w/ cls pooling\"","pooling","\"cls\"","2.491287887096405e-8","\"w/ mean pooling & normalization\"","\"mean\"","normalize","true","2.0245352061465383e-9","\"w/ mean pooling & binary quantization\"","quantize","precision","\"binary\"","8","\"int8\"","15","\"w/ cls pooling & ubinary quantization\"","\"ubinary\"","\"uint8\"","140","\"batch_size>1\"","length","2.345950544935249e-9","1.6298145055770874e-8","1.538609240014921e-10","14","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":12,"total":296,"identifiers":["const","=","function=>","()","[]",",","let",".","- (prefix)","{}",":","/"]}},"paramCount":0,"sloc":{"logical":161,"physical":122}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/transformers.js","type":"esm"},{"line":3,"path":"../init.js","type":"esm"}],"errors":[],"lineEnd":122,"lineStart":1,"maintainability":105.632,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Feature Extraction\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":115},"errors":[],"lineEnd":121,"lineStart":7,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.049,"difficulty":3.733,"effort":549.402,"length":33,"time":30.522,"vocabulary":22,"volume":147.161,"operands":{"distinct":15,"total":16,"identifiers":["model_id","\"hf-internal-testing/tiny-random-BertModel\"","texts","\"This is a simple test.\"","\"Hello world\"","pipe","beforeAll","MAX_MODEL_LOAD_TIME","it","\"should be an instance of FeatureExtractionPipeline \"","describe","\"batch_size=1\"","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":7,"total":17,"identifiers":["const","=","[]",",","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":113},"errors":[],"lineEnd":120,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1,"effort":19.651,"length":7,"time":1.092,"vocabulary":7,"volume":19.651,"operands":{"distinct":5,"total":5,"identifiers":["pipe","pipeline","PIPELINE_ID","model_id","DEFAULT_MODEL_OPTIONS"]},"operators":{"distinct":2,"total":2,"identifiers":["=","()"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":17,"lineStart":15,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["expect","pipe","toBeInstanceOf","FeatureExtractionPipeline"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":21,"lineStart":19,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.025,"difficulty":2,"effort":152.156,"length":24,"time":8.453,"vocabulary":9,"volume":76.078,"operands":{"distinct":7,"total":14,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME","\"w/ cls pooling\"","\"w/ mean pooling & normalization\"","\"w/ mean pooling & binary quantization\"","\"w/ cls pooling & ubinary quantization\""]},"operators":{"distinct":2,"total":10,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":48},"errors":[],"lineEnd":70,"lineStart":23,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.07,"difficulty":4.735,"effort":998.713,"length":46,"time":55.484,"vocabulary":24,"volume":210.908,"operands":{"distinct":17,"total":23,"identifiers":["output","pipe","texts","0","expect","dims","toEqual","1","20","32","type","\"float32\"","mean","item","toBeCloseTo","1.538501215314625e-9","6"]},"operators":{"distinct":7,"total":23,"identifiers":["const","=","()","[]",".",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":10,"physical":6},"errors":[],"lineEnd":31,"lineStart":26,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.074,"difficulty":5.333,"effort":1178.244,"length":47,"time":65.458,"vocabulary":26,"volume":220.921,"operands":{"distinct":18,"total":24,"identifiers":["output","pipe","texts","0","pooling","\"cls\"","expect","dims","toEqual","1","32","type","\"float32\"","mean","item","toBeCloseTo","2.491287887096405e-8","6"]},"operators":{"distinct":8,"total":23,"identifiers":["const","=","()","[]","{}",":",".",","]}},"paramCount":0,"sloc":{"logical":11,"physical":6},"errors":[],"lineEnd":41,"lineStart":36,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.083,"difficulty":5.85,"effort":1449.379,"length":51,"time":80.521,"vocabulary":29,"volume":247.757,"operands":{"distinct":20,"total":26,"identifiers":["output","pipe","texts","0","pooling","\"mean\"","normalize","true","expect","dims","toEqual","1","32","type","\"float32\"","mean","item","toBeCloseTo","2.0245352061465383e-9","6"]},"operators":{"distinct":9,"total":25,"identifiers":["const","=","()","[]","{}",":",".",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":12,"physical":6},"errors":[],"lineEnd":51,"lineStart":46,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.091,"difficulty":6.667,"effort":1816.539,"length":55,"time":100.919,"vocabulary":31,"volume":272.481,"operands":{"distinct":21,"total":28,"identifiers":["output","pipe","texts","0","pooling","\"mean\"","quantize","true","precision","\"binary\"","expect","dims","toEqual","1","32","8","type","\"int8\"","mean","item","15"]},"operators":{"distinct":10,"total":27,"identifiers":["const","=","()","[]","{}",":",".",",","/","- (prefix)"]}},"paramCount":0,"sloc":{"logical":13,"physical":6},"errors":[],"lineEnd":61,"lineStart":56,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.088,"difficulty":6,"effort":1589.833,"length":54,"time":88.324,"vocabulary":30,"volume":264.972,"operands":{"distinct":21,"total":28,"identifiers":["output","pipe","texts","0","pooling","\"cls\"","quantize","true","precision","\"ubinary\"","expect","dims","toEqual","1","32","8","type","\"uint8\"","mean","item","140"]},"operators":{"distinct":9,"total":26,"identifiers":["const","=","()","[]","{}",":",".",",","/"]}},"paramCount":0,"sloc":{"logical":13,"physical":6},"errors":[],"lineEnd":69,"lineStart":64,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.024,"difficulty":1.857,"effort":135.401,"length":23,"time":7.522,"vocabulary":9,"volume":72.908,"operands":{"distinct":7,"total":13,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME","\"w/ cls pooling\"","\"w/ mean pooling & normalization\"","\"w/ mean pooling & binary quantization\"","\"w/ cls pooling & ubinary quantization\""]},"operators":{"distinct":2,"total":10,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":44},"errors":[],"lineEnd":115,"lineStart":72,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.067,"difficulty":4.313,"effort":865.408,"length":45,"time":48.078,"vocabulary":22,"volume":200.674,"operands":{"distinct":16,"total":23,"identifiers":["output","pipe","texts","expect","dims","toEqual","length","20","32","type","\"float32\"","mean","item","toBeCloseTo","2.345950544935249e-9","6"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":10,"physical":6},"errors":[],"lineEnd":80,"lineStart":75,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.073,"difficulty":5.647,"effort":1232.534,"length":47,"time":68.474,"vocabulary":25,"volume":218.261,"operands":{"distinct":17,"total":24,"identifiers":["output","pipe","texts","pooling","\"cls\"","expect","dims","toEqual","length","32","type","\"float32\"","mean","item","toBeCloseTo","1.6298145055770874e-8","6"]},"operators":{"distinct":8,"total":23,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":11,"physical":6},"errors":[],"lineEnd":90,"lineStart":85,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.082,"difficulty":6.158,"effort":1509.762,"length":51,"time":83.876,"vocabulary":28,"volume":245.175,"operands":{"distinct":19,"total":26,"identifiers":["output","pipe","texts","pooling","\"mean\"","normalize","true","expect","dims","toEqual","length","32","type","\"float32\"","mean","item","toBeCloseTo","1.538609240014921e-10","6"]},"operators":{"distinct":9,"total":25,"identifiers":["const","=","()","{}",":",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":12,"physical":6},"errors":[],"lineEnd":100,"lineStart":95,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.09,"difficulty":7,"effort":1889.153,"length":55,"time":104.953,"vocabulary":30,"volume":269.879,"operands":{"distinct":20,"total":28,"identifiers":["output","pipe","texts","pooling","\"mean\"","quantize","true","precision","\"binary\"","expect","dims","toEqual","length","32","8","type","\"int8\"","mean","item","14"]},"operators":{"distinct":10,"total":27,"identifiers":["const","=","()","{}",":",".","[]",",","/","- (prefix)"]}},"paramCount":0,"sloc":{"logical":13,"physical":6},"errors":[],"lineEnd":108,"lineStart":103,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.087,"difficulty":6.3,"effort":1652.685,"length":54,"time":91.816,"vocabulary":29,"volume":262.331,"operands":{"distinct":20,"total":28,"identifiers":["output","pipe","texts","pooling","\"cls\"","quantize","true","precision","\"ubinary\"","expect","dims","toEqual","length","32","8","type","\"uint8\"","mean","item","140"]},"operators":{"distinct":9,"total":26,"identifiers":["const","=","()","{}",":",".","[]",",","/"]}},"paramCount":0,"sloc":{"logical":13,"physical":6},"errors":[],"lineEnd":114,"lineStart":109,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":119,"lineStart":117,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.621,"halstead":{"bugs":0.071,"difficulty":1.621,"effort":6215.11,"length":34,"time":345.284,"vocabulary":4.278,"volume":213.071,"operands":{"distinct":3.611,"total":17.556},"operators":{"distinct":0.667,"total":16.444}},"paramCount":0,"sloc":{"logical":8.944,"physical":6.778}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":18.43,"halstead":{"bugs":0.054,"difficulty":4.094,"effort":886.644,"length":35.706,"time":49.258,"vocabulary":19.706,"volume":162.544,"operands":{"distinct":13.588,"total":18.471},"operators":{"distinct":6.118,"total":17.235}},"paramCount":0,"sloc":{"logical":9.353,"physical":22.882}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/pipelines/test_pipelines_image_feature_extraction.js","testCases":6,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  28 |             const output = await pipe(images[0]);\n  29 |             expect(output.dims).toEqual([1, 91, 32]);\n> 30 |             expect(output.mean().item()).toBeCloseTo(-8.507473614471905e-10, 6);\n     |                                                                             ^ Magic Number\n  31 |           },\n  32 |           MAX_TEST_EXECUTION_TIME,\n  33 |         );","start":{"line":30,"column":77,"index":1249}},{"frame":"  40 |             const output = await pipe(images);\n  41 |             expect(output.dims).toEqual([images.length, 91, 32]);\n> 42 |             expect(output.mean().item()).toBeCloseTo(-5.997602414709036e-10, 6);\n     |                                                                             ^ Magic Number\n  43 |           },\n  44 |           MAX_TEST_EXECUTION_TIME,\n  45 |         );","start":{"line":42,"column":77,"index":1609}},{"frame":"  70 |             const output = await pipe(images[0]);\n  71 |             expect(output.dims).toEqual([1, 64]);\n> 72 |             expect(output.mean().item()).toBeCloseTo(-0.11340035498142242, 6);\n     |                                                                           ^ Magic Number\n  73 |           },\n  74 |           MAX_TEST_EXECUTION_TIME,\n  75 |         );","start":{"line":72,"column":75,"index":2643}},{"frame":"  82 |             const output = await pipe(images);\n  83 |             expect(output.dims).toEqual([images.length, 64]);\n> 84 |             expect(output.mean().item()).toBeCloseTo(-0.11006651818752289, 6);\n     |                                                                           ^ Magic Number\n  85 |           },\n  86 |           MAX_TEST_EXECUTION_TIME,\n  87 |         );","start":{"line":84,"column":75,"index":2997}}]}],"metrics":{"aggregate":{"cyclomatic":19,"cyclomaticDensity":20.213,"halstead":{"bugs":0.588,"difficulty":14.143,"effort":24937.425,"length":301,"time":1385.413,"vocabulary":58,"volume":1763.252,"operands":{"distinct":49,"total":154,"identifiers":["PIPELINE_ID","\"image-feature-extraction\"","describe","\"Image Feature Extraction\"","\"Default\"","model_id","\"hf-internal-testing/tiny-random-ViTMAEModel\"","pipe","images","beforeAll","pipeline","DEFAULT_MODEL_OPTIONS","Promise","all","load_cached_image","\"white_image\"","\"blue_image\"","MAX_MODEL_LOAD_TIME","it","\"should be an instance of ImageFeatureExtractionPipeline\"","expect","toBeInstanceOf","ImageFeatureExtractionPipeline","\"batch_size=1\"","\"default\"","output","0","dims","toEqual","1","91","32","mean","item","toBeCloseTo","8.507473614471905e-10","6","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","length","5.997602414709036e-10","afterAll","dispose","MAX_MODEL_DISPOSE_TIME","\"CLIP-like\"","\"hf-internal-testing/tiny-random-CLIPModel\"","64","0.11340035498142242","0.11006651818752289"]},"operators":{"distinct":9,"total":147,"identifiers":["const","=","function=>","()","let",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":94,"physical":96}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/transformers.js","type":"esm"},{"line":3,"path":"../init.js","type":"esm"},{"line":4,"path":"../asset_cache.js","type":"esm"}],"errors":[],"lineEnd":96,"lineStart":1,"maintainability":120.544,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Image Feature Extraction\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":88},"errors":[],"lineEnd":95,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"Default\"","\"CLIP-like\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":86},"errors":[],"lineEnd":94,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.039,"difficulty":2.692,"effort":314.348,"length":28,"time":17.464,"vocabulary":18,"volume":116.758,"operands":{"distinct":13,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-ViTMAEModel\"","pipe","images","beforeAll","MAX_MODEL_LOAD_TIME","it","\"should be an instance of ImageFeatureExtractionPipeline\"","describe","\"batch_size=1\"","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":42},"errors":[],"lineEnd":51,"lineStart":10,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.028,"difficulty":2.727,"effort":229.091,"length":21,"time":12.727,"vocabulary":16,"volume":84,"operands":{"distinct":11,"total":12,"identifiers":["pipe","pipeline","PIPELINE_ID","model_id","DEFAULT_MODEL_OPTIONS","images","Promise","all","load_cached_image","\"white_image\"","\"blue_image\""]},"operators":{"distinct":5,"total":9,"identifiers":["=","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":18,"lineStart":15,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["expect","pipe","toBeInstanceOf","ImageFeatureExtractionPipeline"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":22,"lineStart":20,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":11},"errors":[],"lineEnd":34,"lineStart":24,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.055,"difficulty":4.2,"effort":692.996,"length":37,"time":38.5,"vocabulary":22,"volume":164.999,"operands":{"distinct":15,"total":18,"identifiers":["output","pipe","images","0","expect","dims","toEqual","1","91","32","mean","item","toBeCloseTo","8.507473614471905e-10","6"]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","()","[]",".",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":31,"lineStart":27,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":11},"errors":[],"lineEnd":46,"lineStart":36,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.054,"difficulty":4.5,"effort":731.321,"length":37,"time":40.629,"vocabulary":21,"volume":162.516,"operands":{"distinct":14,"total":18,"identifiers":["output","pipe","images","expect","dims","toEqual","length","91","32","mean","item","toBeCloseTo","5.997602414709036e-10","6"]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","()",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":43,"lineStart":39,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":50,"lineStart":48,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.039,"difficulty":2.692,"effort":314.348,"length":28,"time":17.464,"vocabulary":18,"volume":116.758,"operands":{"distinct":13,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-CLIPModel\"","pipe","images","beforeAll","MAX_MODEL_LOAD_TIME","it","\"should be an instance of ImageFeatureExtractionPipeline\"","describe","\"batch_size=1\"","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":42},"errors":[],"lineEnd":93,"lineStart":52,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.028,"difficulty":2.727,"effort":229.091,"length":21,"time":12.727,"vocabulary":16,"volume":84,"operands":{"distinct":11,"total":12,"identifiers":["pipe","pipeline","PIPELINE_ID","model_id","DEFAULT_MODEL_OPTIONS","images","Promise","all","load_cached_image","\"white_image\"","\"blue_image\""]},"operators":{"distinct":5,"total":9,"identifiers":["=","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":60,"lineStart":57,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["expect","pipe","toBeInstanceOf","ImageFeatureExtractionPipeline"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":64,"lineStart":62,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":11},"errors":[],"lineEnd":76,"lineStart":66,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.051,"difficulty":4.25,"effort":653.357,"length":35,"time":36.298,"vocabulary":21,"volume":153.731,"operands":{"distinct":14,"total":17,"identifiers":["output","pipe","images","0","expect","dims","toEqual","1","64","mean","item","toBeCloseTo","0.11340035498142242","6"]},"operators":{"distinct":7,"total":18,"identifiers":["const","=","()","[]",".",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":73,"lineStart":69,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":11},"errors":[],"lineEnd":88,"lineStart":78,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.05,"difficulty":4.577,"effort":692.34,"length":35,"time":38.463,"vocabulary":20,"volume":151.267,"operands":{"distinct":13,"total":17,"identifiers":["output","pipe","images","expect","dims","toEqual","length","64","mean","item","toBeCloseTo","0.11006651818752289","6"]},"operators":{"distinct":7,"total":18,"identifiers":["const","=","()",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":85,"lineStart":81,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":92,"lineStart":90,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.064,"halstead":{"bugs":0.031,"difficulty":0.744,"effort":1312.496,"length":15.842,"time":72.916,"vocabulary":3.053,"volume":92.803,"operands":{"distinct":2.579,"total":8.105},"operators":{"distinct":0.474,"total":7.737}},"paramCount":0,"sloc":{"logical":4.947,"physical":5.053}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":31.873,"halstead":{"bugs":0.021,"difficulty":2.15,"effort":221.571,"length":16.444,"time":12.31,"vocabulary":11.167,"volume":64.402,"operands":{"distinct":7.389,"total":8.444},"operators":{"distinct":3.778,"total":8}},"paramCount":0,"sloc":{"logical":5.111,"physical":19}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/pipelines/test_pipelines_image_segmentation.js","testCases":3,"smells":4,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  28 |\n  29 |           // First, check mask shapes\n> 30 |           for (const item of output) {\n     |          ^ Conditional Test Logic\n  31 |             expect(item.mask.width).toEqual(image.width);\n  32 |             expect(item.mask.height).toEqual(image.height);\n  33 |             expect(item.mask.channels).toEqual(1);","start":{"line":30,"column":10,"index":1019}},{"frame":"  85 |\n  86 |           // First, check mask shapes\n> 87 |           for (const item of output) {\n     |          ^ Conditional Test Logic\n  88 |             expect(item.mask.width).toEqual(image.width);\n  89 |             expect(item.mask.height).toEqual(image.height);\n  90 |             expect(item.mask.channels).toEqual(1);","start":{"line":87,"column":10,"index":2584}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  31 |             expect(item.mask.width).toEqual(image.width);\n  32 |             expect(item.mask.height).toEqual(image.height);\n> 33 |             expect(item.mask.channels).toEqual(1);\n     |                                               ^ Magic Number\n  34 |             delete item.mask; // No longer needed\n  35 |           }\n  36 |","start":{"line":33,"column":47,"index":1213}},{"frame":"  88 |             expect(item.mask.width).toEqual(image.width);\n  89 |             expect(item.mask.height).toEqual(image.height);\n> 90 |             expect(item.mask.channels).toEqual(1);\n     |                                               ^ Magic Number\n  91 |             delete item.mask; // No longer needed\n  92 |           }\n  93 |","start":{"line":90,"column":47,"index":2778}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":12.245,"halstead":{"bugs":0.726,"difficulty":18.098,"effort":39433.038,"length":352,"time":2190.724,"vocabulary":73,"volume":2178.818,"operands":{"distinct":61,"total":184,"identifiers":["PIPELINE_ID","\"image-segmentation\"","describe","\"Image Segmentation\"","\"Panoptic Segmentation\"","model_id","\"Xenova/detr-resnet-50-panoptic\"","pipe","beforeAll","pipeline","DEFAULT_MODEL_OPTIONS","MAX_MODEL_LOAD_TIME","it","\"should be an instance of ImageSegmentationPipeline\"","expect","toBeInstanceOf","ImageSegmentationPipeline","\"single\"","image","load_cached_image","\"cats\"","output","item","mask","width","toEqual","height","channels","1","target","score","0.9918501377105713","label","\"cat\"","0.9985815286636353","\"remote\"","0.999537467956543","0.9919270277023315","\"couch\"","0.9993696808815002","toBeCloseToNested","2","MAX_TEST_EXECUTION_TIME","afterAll","dispose","MAX_MODEL_DISPOSE_TIME","\"Semantic Segmentation\"","\"Xenova/segformer_b0_clothes\"","\"man_on_car\"","null","\"Background\"","\"Hair\"","\"Upper-clothes\"","\"Pants\"","\"Left-shoe\"","\"Right-shoe\"","\"Face\"","\"Right-leg\"","\"Left-arm\"","\"Right-arm\"","\"Bag\""]},"operators":{"distinct":12,"total":168,"identifiers":["const","=","function=>","()","let",".","forof","delete (prefix)","[]",",","{}",":"]}},"paramCount":0,"sloc":{"logical":98,"physical":120}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/transformers.js","type":"esm"},{"line":3,"path":"../init.js","type":"esm"},{"line":4,"path":"../asset_cache.js","type":"esm"}],"errors":[],"lineEnd":120,"lineStart":1,"maintainability":109.286,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Image Segmentation\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":112},"errors":[],"lineEnd":119,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"Panoptic Segmentation\"","\"Semantic Segmentation\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":110},"errors":[],"lineEnd":118,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.031,"difficulty":2.727,"effort":250.909,"length":23,"time":13.939,"vocabulary":16,"volume":92,"operands":{"distinct":11,"total":12,"identifiers":["model_id","\"Xenova/detr-resnet-50-panoptic\"","pipe","beforeAll","MAX_MODEL_LOAD_TIME","it","\"should be an instance of ImageSegmentationPipeline\"","\"single\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":11,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":60},"errors":[],"lineEnd":69,"lineStart":10,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1,"effort":19.651,"length":7,"time":1.092,"vocabulary":7,"volume":19.651,"operands":{"distinct":5,"total":5,"identifiers":["pipe","pipeline","PIPELINE_ID","model_id","DEFAULT_MODEL_OPTIONS"]},"operators":{"distinct":2,"total":2,"identifiers":["=","()"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":16,"lineStart":14,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["expect","pipe","toBeInstanceOf","ImageSegmentationPipeline"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":20,"lineStart":18,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.186,"difficulty":10.769,"effort":6013.02,"length":108,"time":334.057,"vocabulary":36,"volume":558.352,"operands":{"distinct":26,"total":56,"identifiers":["image","load_cached_image","\"cats\"","output","pipe","item","expect","mask","width","toEqual","height","channels","1","target","score","0.9918501377105713","label","\"cat\"","0.9985815286636353","\"remote\"","0.999537467956543","0.9919270277023315","\"couch\"","0.9993696808815002","toBeCloseToNested","2"]},"operators":{"distinct":10,"total":52,"identifiers":["const","=","()","forof",".","delete (prefix)","[]",",","{}",":"]}},"paramCount":0,"sloc":{"logical":25,"physical":39},"errors":[],"lineEnd":62,"lineStart":24,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":68,"lineStart":66,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":2.5,"effort":185.577,"length":19,"time":10.31,"vocabulary":15,"volume":74.231,"operands":{"distinct":10,"total":10,"identifiers":["model_id","\"Xenova/segformer_b0_clothes\"","pipe","beforeAll","MAX_MODEL_LOAD_TIME","it","\"single\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":47},"errors":[],"lineEnd":117,"lineStart":71,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1,"effort":19.651,"length":7,"time":1.092,"vocabulary":7,"volume":19.651,"operands":{"distinct":5,"total":5,"identifiers":["pipe","pipeline","PIPELINE_ID","model_id","DEFAULT_MODEL_OPTIONS"]},"operators":{"distinct":2,"total":2,"identifiers":["=","()"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":77,"lineStart":75,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.703,"halstead":{"bugs":0.277,"difficulty":13.333,"effort":11069.61,"length":156,"time":614.978,"vocabulary":40,"volume":830.221,"operands":{"distinct":30,"total":80,"identifiers":["image","load_cached_image","\"man_on_car\"","output","pipe","item","expect","mask","width","toEqual","height","channels","1","target","score","null","label","\"Background\"","\"Hair\"","\"Upper-clothes\"","\"Pants\"","\"Left-shoe\"","\"Right-shoe\"","\"Face\"","\"Right-leg\"","\"Left-arm\"","\"Right-arm\"","\"Bag\"","toBeCloseToNested","2"]},"operators":{"distinct":10,"total":76,"identifiers":["const","=","()","forof",".","delete (prefix)","[]",",","{}",":"]}},"paramCount":0,"sloc":{"logical":37,"physical":30},"errors":[],"lineEnd":110,"lineStart":81,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":116,"lineStart":114,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.02,"halstead":{"bugs":0.061,"difficulty":1.508,"effort":3286.087,"length":29.333,"time":182.56,"vocabulary":6.083,"volume":181.568,"operands":{"distinct":5.083,"total":15.333},"operators":{"distinct":1,"total":14}},"paramCount":0,"sloc":{"logical":8.167,"physical":10}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":32.2,"halstead":{"bugs":0.05,"difficulty":3.333,"effort":1602.298,"length":31.545,"time":89.017,"vocabulary":13.091,"volume":150.434,"operands":{"distinct":9.091,"total":16.545},"operators":{"distinct":4,"total":15}},"paramCount":0,"sloc":{"logical":8.727,"physical":37.545}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/pipelines/test_pipelines_image_to_image.js","testCases":3,"smells":9,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  27 |           const output = await pipe(images[0]);\n  28 |           expect(output.size).toEqual([64, 64]);\n> 29 |           expect(output.channels).toEqual(3);\n     |                                          ^ Magic Number\n  30 |           expect(output.data.reduce((a, b) => a + b, 0) / output.data.length).toBeCloseTo(110.107421875, 3);\n  31 |         },\n  32 |         MAX_TEST_EXECUTION_TIME,","start":{"line":29,"column":42,"index":1104}},{"frame":"  28 |           expect(output.size).toEqual([64, 64]);\n  29 |           expect(output.channels).toEqual(3);\n> 30 |           expect(output.data.reduce((a, b) => a + b, 0) / output.data.length).toBeCloseTo(110.107421875, 3);\n     |                                                                                          ^ Magic Number\n  31 |         },\n  32 |         MAX_TEST_EXECUTION_TIME,\n  33 |       );","start":{"line":30,"column":90,"index":1198}},{"frame":"  28 |           expect(output.size).toEqual([64, 64]);\n  29 |           expect(output.channels).toEqual(3);\n> 30 |           expect(output.data.reduce((a, b) => a + b, 0) / output.data.length).toBeCloseTo(110.107421875, 3);\n     |                                                                                                         ^ Magic Number\n  31 |         },\n  32 |         MAX_TEST_EXECUTION_TIME,\n  33 |       );","start":{"line":30,"column":105,"index":1213}},{"frame":"  40 |           const output = await pipe(images);\n  41 |           expect(output[0].size).toEqual([64, 64]);\n> 42 |           expect(output[0].channels).toEqual(3);\n     |                                             ^ Magic Number\n  43 |           expect(output[0].data.reduce((a, b) => a + b, 0) / output[0].data.length).toBeCloseTo(110.107421875, 3);\n  44 |           expect(output[1].size).toEqual([64, 64]);\n  45 |           expect(output[1].channels).toEqual(3);","start":{"line":42,"column":45,"index":1509}},{"frame":"  41 |           expect(output[0].size).toEqual([64, 64]);\n  42 |           expect(output[0].channels).toEqual(3);\n> 43 |           expect(output[0].data.reduce((a, b) => a + b, 0) / output[0].data.length).toBeCloseTo(110.107421875, 3);\n     |                                                                                                ^ Magic Number\n  44 |           expect(output[1].size).toEqual([64, 64]);\n  45 |           expect(output[1].channels).toEqual(3);\n  46 |           expect(output[1].data.reduce((a, b) => a + b, 0) / output[1].data.length).toBeCloseTo(110.60196940104167, 3);","start":{"line":43,"column":96,"index":1609}},{"frame":"  41 |           expect(output[0].size).toEqual([64, 64]);\n  42 |           expect(output[0].channels).toEqual(3);\n> 43 |           expect(output[0].data.reduce((a, b) => a + b, 0) / output[0].data.length).toBeCloseTo(110.107421875, 3);\n     |                                                                                                               ^ Magic Number\n  44 |           expect(output[1].size).toEqual([64, 64]);\n  45 |           expect(output[1].channels).toEqual(3);\n  46 |           expect(output[1].data.reduce((a, b) => a + b, 0) / output[1].data.length).toBeCloseTo(110.60196940104167, 3);","start":{"line":43,"column":111,"index":1624}},{"frame":"  43 |           expect(output[0].data.reduce((a, b) => a + b, 0) / output[0].data.length).toBeCloseTo(110.107421875, 3);\n  44 |           expect(output[1].size).toEqual([64, 64]);\n> 45 |           expect(output[1].channels).toEqual(3);\n     |                                             ^ Magic Number\n  46 |           expect(output[1].data.reduce((a, b) => a + b, 0) / output[1].data.length).toBeCloseTo(110.60196940104167, 3);\n  47 |         },\n  48 |         MAX_TEST_EXECUTION_TIME,","start":{"line":45,"column":45,"index":1725}},{"frame":"  44 |           expect(output[1].size).toEqual([64, 64]);\n  45 |           expect(output[1].channels).toEqual(3);\n> 46 |           expect(output[1].data.reduce((a, b) => a + b, 0) / output[1].data.length).toBeCloseTo(110.60196940104167, 3);\n     |                                                                                                ^ Magic Number\n  47 |         },\n  48 |         MAX_TEST_EXECUTION_TIME,\n  49 |       );","start":{"line":46,"column":96,"index":1825}},{"frame":"  44 |           expect(output[1].size).toEqual([64, 64]);\n  45 |           expect(output[1].channels).toEqual(3);\n> 46 |           expect(output[1].data.reduce((a, b) => a + b, 0) / output[1].data.length).toBeCloseTo(110.60196940104167, 3);\n     |                                                                                                                    ^ Magic Number\n  47 |         },\n  48 |         MAX_TEST_EXECUTION_TIME,\n  49 |       );","start":{"line":46,"column":116,"index":1845}}]}],"metrics":{"aggregate":{"cyclomatic":13,"cyclomaticDensity":20.968,"halstead":{"bugs":0.482,"difficulty":15,"effort":21680.099,"length":250,"time":1204.45,"vocabulary":55,"volume":1445.34,"operands":{"distinct":45,"total":135,"identifiers":["PIPELINE_ID","\"image-to-image\"","describe","\"Image to Image\"","model_id","\"hf-internal-testing/tiny-random-Swin2SRForImageSuperResolution\"","pipe","images","beforeAll","pipeline","DEFAULT_MODEL_OPTIONS","Promise","all","load_cached_image","\"white_image\"","\"blue_image\"","MAX_MODEL_LOAD_TIME","it","\"should be an instance of ImageToImagePipeline\"","expect","toBeInstanceOf","ImageToImagePipeline","\"batch_size=1\"","\"default\"","output","0","size","toEqual","64","channels","3","data","reduce","a","b","length","toBeCloseTo","110.107421875","MAX_TEST_EXECUTION_TIME","\"batch_size>1\"","1","110.60196940104167","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":10,"total":115,"identifiers":["const","=","function=>","()","let",".","[]",",","/","+"]}},"paramCount":6,"sloc":{"logical":62,"physical":57}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/transformers.js","type":"esm"},{"line":3,"path":"../init.js","type":"esm"},{"line":4,"path":"../asset_cache.js","type":"esm"}],"errors":[],"lineEnd":57,"lineStart":1,"maintainability":120.319,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Image to Image\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":49},"errors":[],"lineEnd":56,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.039,"difficulty":2.692,"effort":314.348,"length":28,"time":17.464,"vocabulary":18,"volume":116.758,"operands":{"distinct":13,"total":14,"identifiers":["model_id","\"hf-internal-testing/tiny-random-Swin2SRForImageSuperResolution\"","pipe","images","beforeAll","MAX_MODEL_LOAD_TIME","it","\"should be an instance of ImageToImagePipeline\"","describe","\"batch_size=1\"","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":14,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":47},"errors":[],"lineEnd":55,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.028,"difficulty":2.727,"effort":229.091,"length":21,"time":12.727,"vocabulary":16,"volume":84,"operands":{"distinct":11,"total":12,"identifiers":["pipe","pipeline","PIPELINE_ID","model_id","DEFAULT_MODEL_OPTIONS","images","Promise","all","load_cached_image","\"white_image\"","\"blue_image\""]},"operators":{"distinct":5,"total":9,"identifiers":["=","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":17,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["expect","pipe","toBeInstanceOf","ImageToImagePipeline"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":21,"lineStart":19,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":12},"errors":[],"lineEnd":34,"lineStart":23,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.08,"difficulty":6.588,"effort":1590.93,"length":52,"time":88.385,"vocabulary":25,"volume":241.481,"operands":{"distinct":17,"total":28,"identifiers":["output","pipe","images","0","expect","size","toEqual","64","channels","3","data","reduce","a","b","length","toBeCloseTo","110.107421875"]},"operators":{"distinct":8,"total":24,"identifiers":["const","=","()","[]",".",",","/","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":6},"errors":[],"lineEnd":31,"lineStart":26,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["a","b"]},"operators":{"distinct":1,"total":1,"identifiers":["+"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":30,"lineStart":30,"name":"<anon method-7>","paramNames":["a","b"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":15},"errors":[],"lineEnd":50,"lineStart":36,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.174,"difficulty":12.421,"effort":6496.678,"length":110,"time":360.927,"vocabulary":27,"volume":523.038,"operands":{"distinct":19,"total":59,"identifiers":["output","pipe","images","expect","0","size","toEqual","64","channels","3","data","reduce","a","b","length","toBeCloseTo","110.107421875","1","110.60196940104167"]},"operators":{"distinct":8,"total":51,"identifiers":["const","=","()",".","[]",",","/","function=>"]}},"paramCount":0,"sloc":{"logical":18,"physical":9},"errors":[],"lineEnd":47,"lineStart":39,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["a","b"]},"operators":{"distinct":1,"total":1,"identifiers":["+"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":43,"lineStart":43,"name":"<anon method-10>","paramNames":["a","b"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["a","b"]},"operators":{"distinct":1,"total":1,"identifiers":["+"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":46,"lineStart":46,"name":"<anon method-11>","paramNames":["a","b"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":54,"lineStart":52,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.613,"halstead":{"bugs":0.037,"difficulty":1.154,"effort":1667.7,"length":19.231,"time":92.65,"vocabulary":4.231,"volume":111.18,"operands":{"distinct":3.462,"total":10.385},"operators":{"distinct":0.769,"total":8.846}},"paramCount":0.462,"sloc":{"logical":4.769,"physical":4.385}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":49.16,"halstead":{"bugs":0.029,"difficulty":2.577,"effort":724.624,"length":20.417,"time":40.257,"vocabulary":9.917,"volume":86.405,"operands":{"distinct":6.667,"total":11.083},"operators":{"distinct":3.25,"total":9.333}},"paramCount":0.5,"sloc":{"logical":5,"physical":12.583}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/pipelines/test_pipelines_text_to_audio.js","testCases":2,"smells":3,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  23 |       async () => {\n  24 |         const output = await pipe(\"hello\");\n> 25 |         expect(output.audio).toHaveLength(6400);\n     |                                          ^ Magic Number\n  26 |         // NOTE: The mean value is not deterministic, so we just check the first few digits\n  27 |         expect(output.audio.reduce((a, b) => a + b, 0) / output.audio.length).toBeCloseTo(-0.0125, 2);\n  28 |         expect(output.sampling_rate).toEqual(16000);","start":{"line":25,"column":42,"index":790}},{"frame":"  25 |         expect(output.audio).toHaveLength(6400);\n  26 |         // NOTE: The mean value is not deterministic, so we just check the first few digits\n> 27 |         expect(output.audio.reduce((a, b) => a + b, 0) / output.audio.length).toBeCloseTo(-0.0125, 2);\n     |                                                                                                   ^ Magic Number\n  28 |         expect(output.sampling_rate).toEqual(16000);\n  29 |       },\n  30 |       MAX_TEST_EXECUTION_TIME,","start":{"line":27,"column":99,"index":988}},{"frame":"  26 |         // NOTE: The mean value is not deterministic, so we just check the first few digits\n  27 |         expect(output.audio.reduce((a, b) => a + b, 0) / output.audio.length).toBeCloseTo(-0.0125, 2);\n> 28 |         expect(output.sampling_rate).toEqual(16000);\n     |                                             ^ Magic Number\n  29 |       },\n  30 |       MAX_TEST_EXECUTION_TIME,\n  31 |     );","start":{"line":28,"column":45,"index":1037}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":25.806,"halstead":{"bugs":0.186,"difficulty":6.689,"effort":3731.763,"length":101,"time":207.32,"vocabulary":46,"volume":557.88,"operands":{"distinct":37,"total":55,"identifiers":["PIPELINE_ID","\"text-to-audio\"","describe","\"Text to Audio\"","model_id","\"Xenova/tiny-random-vits\"","pipe","beforeAll","pipeline","DEFAULT_MODEL_OPTIONS","MAX_MODEL_LOAD_TIME","it","\"should be an instance of TextToAudioPipeline\"","expect","toBeInstanceOf","TextToAudioPipeline","\"default\"","output","\"hello\"","audio","toHaveLength","6400","reduce","a","b","0","length","toBeCloseTo","0.0125","2","sampling_rate","toEqual","16000","MAX_TEST_EXECUTION_TIME","afterAll","dispose","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":9,"total":46,"identifiers":["const","=","function=>","()","let",".","/","+","- (prefix)"]}},"paramCount":2,"sloc":{"logical":31,"physical":38}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/transformers.js","type":"esm"},{"line":3,"path":"../init.js","type":"esm"}],"errors":[],"lineEnd":38,"lineStart":1,"maintainability":128.04,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Text to Audio\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":31},"errors":[],"lineEnd":37,"lineStart":7,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.031,"difficulty":2.727,"effort":250.909,"length":23,"time":13.939,"vocabulary":16,"volume":92,"operands":{"distinct":11,"total":12,"identifiers":["model_id","\"Xenova/tiny-random-vits\"","pipe","beforeAll","MAX_MODEL_LOAD_TIME","it","\"should be an instance of TextToAudioPipeline\"","\"default\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":11,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":29},"errors":[],"lineEnd":36,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1,"effort":19.651,"length":7,"time":1.092,"vocabulary":7,"volume":19.651,"operands":{"distinct":5,"total":5,"identifiers":["pipe","pipeline","PIPELINE_ID","model_id","DEFAULT_MODEL_OPTIONS"]},"operators":{"distinct":2,"total":2,"identifiers":["=","()"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["expect","pipe","toBeInstanceOf","TextToAudioPipeline"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":19,"lineStart":17,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.074,"difficulty":5.056,"effort":1126.909,"length":48,"time":62.606,"vocabulary":25,"volume":222.905,"operands":{"distinct":18,"total":26,"identifiers":["output","pipe","\"hello\"","expect","audio","toHaveLength","6400","reduce","a","b","0","length","toBeCloseTo","0.0125","2","sampling_rate","toEqual","16000"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","()",".","/","function=>","- (prefix)"]}},"paramCount":0,"sloc":{"logical":10,"physical":7},"errors":[],"lineEnd":29,"lineStart":23,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["a","b"]},"operators":{"distinct":1,"total":1,"identifiers":["+"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":27,"lineStart":27,"name":"<anon method-6>","paramNames":["a","b"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":35,"lineStart":33,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.023,"difficulty":0.836,"effort":466.47,"length":12.625,"time":25.915,"vocabulary":5.75,"volume":69.735,"operands":{"distinct":4.625,"total":6.875},"operators":{"distinct":1.125,"total":5.75}},"paramCount":0.25,"sloc":{"logical":3.875,"physical":4.75}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":45.714,"halstead":{"bugs":0.018,"difficulty":1.755,"effort":204.849,"length":13.714,"time":11.38,"vocabulary":9.286,"volume":53.344,"operands":{"distinct":6.286,"total":7.571},"operators":{"distinct":3,"total":6.143}},"paramCount":0.286,"sloc":{"logical":4.143,"physical":11}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/pipelines/test_pipelines_zero_shot_object_detection.js","testCases":8,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  90 |           async () => {\n  91 |             const output = await pipe(images[0], candidate_labels);\n> 92 |             expect(output).toHaveLength(512);\n     |                                        ^ Magic Number\n  93 |\n  94 |             expect(output.slice(0, targets.white_image.length)).toBeCloseToNested(targets.white_image, 5);\n  95 |           },","start":{"line":92,"column":40,"index":3011}},{"frame":"  163 |           async () => {\n  164 |             const output = await pipe(image, candidate_labels);\n> 165 |             expect(output).toHaveLength(900);\n      |                                        ^ Magic Number\n  166 |             expect(output.slice(0, target.length)).toBeCloseToNested(target, 5);\n  167 |           },\n  168 |           MAX_TEST_EXECUTION_TIME,","start":{"line":165,"column":40,"index":5610}}]}],"metrics":{"aggregate":{"cyclomatic":22,"cyclomaticDensity":10.377,"halstead":{"bugs":1.566,"difficulty":20.911,"effort":98220.022,"length":690,"time":5456.668,"vocabulary":112,"volume":4697.075,"operands":{"distinct":101,"total":384,"identifiers":["PIPELINE_ID","\"zero-shot-object-detection\"","describe","\"Zero-shot Object Detection\"","\"w/ post_process_object_detection\"","model_id","\"hf-internal-testing/tiny-random-OwlViTForObjectDetection\"","candidate_labels","\"hello\"","\"hello world\"","pipe","images","beforeAll","pipeline","DEFAULT_MODEL_OPTIONS","Promise","all","load_cached_image","\"white_image\"","\"blue_image\"","MAX_MODEL_LOAD_TIME","targets","white_image","score","0.6028420329093933","label","box","xmin","47","ymin","117","xmax","62","ymax","134","0.6026064157485962","0.5987668037414551","145","160","63","0.5986272692680359","89","131","104","148","0.5985949039459229","blue_image","0.6622366309165955","48","45","61","0.6562080383300781","0.6493991613388062","34","58","74","0.6476974487304688","0.6391685009002686","103","59","75","it","\"should be an instance of ZeroShotObjectDetectionPipeline\"","expect","toBeInstanceOf","ZeroShotObjectDetectionPipeline","\"batch_size=1\"","\"default\"","output","0","toHaveLength","512","slice","length","toBeCloseToNested","5","MAX_TEST_EXECUTION_TIME","\"custom (w/ top_k & threshold)\"","top_k","3","threshold","0.05","\"batch_size>1\"","target","Object","values","map","x","i","afterAll","dispose","MAX_MODEL_DISPOSE_TIME","\"w/ post_process_grounded_object_detection\"","\"hf-internal-testing/tiny-random-GroundingDinoForObjectDetection\"","\"a cat.\"","image","112","111","\"a cat. [SEP]\"","1","900"]},"operators":{"distinct":11,"total":306,"identifiers":["const","=","function=>","()","[]",",","let",".","{}",":","- (prefix)"]}},"paramCount":3,"sloc":{"logical":212,"physical":187}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/transformers.js","type":"esm"},{"line":3,"path":"../init.js","type":"esm"},{"line":4,"path":"../asset_cache.js","type":"esm"}],"errors":[],"lineEnd":187,"lineStart":1,"maintainability":105.557,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"Zero-shot Object Detection\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":179},"errors":[],"lineEnd":186,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"w/ post_process_object_detection\"","\"w/ post_process_grounded_object_detection\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":177},"errors":[],"lineEnd":185,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.149,"halstead":{"bugs":0.548,"difficulty":12.054,"effort":19817.354,"length":273,"time":1100.964,"vocabulary":65,"volume":1644.106,"operands":{"distinct":56,"total":150,"identifiers":["model_id","\"hf-internal-testing/tiny-random-OwlViTForObjectDetection\"","candidate_labels","\"hello\"","\"hello world\"","pipe","images","beforeAll","MAX_MODEL_LOAD_TIME","targets","white_image","score","0.6028420329093933","label","box","xmin","47","ymin","117","xmax","62","ymax","134","0.6026064157485962","0.5987668037414551","145","160","63","0.5986272692680359","89","131","104","148","0.5985949039459229","blue_image","0.6622366309165955","48","45","61","0.6562080383300781","0.6493991613388062","34","58","74","0.6476974487304688","0.6391685009002686","103","59","75","it","\"should be an instance of ZeroShotObjectDetectionPipeline\"","describe","\"batch_size=1\"","\"batch_size>1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":9,"total":123,"identifiers":["const","=","[]",",","let","()","function=>","{}",":"]}},"paramCount":0,"sloc":{"logical":87,"physical":125},"errors":[],"lineEnd":134,"lineStart":10,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.028,"difficulty":2.727,"effort":229.091,"length":21,"time":12.727,"vocabulary":16,"volume":84,"operands":{"distinct":11,"total":12,"identifiers":["pipe","pipeline","PIPELINE_ID","model_id","DEFAULT_MODEL_OPTIONS","images","Promise","all","load_cached_image","\"white_image\"","\"blue_image\""]},"operators":{"distinct":5,"total":9,"identifiers":["=","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":21,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["expect","pipe","toBeInstanceOf","ZeroShotObjectDetectionPipeline"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":85,"lineStart":83,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":38.774,"length":10,"time":2.154,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":6,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME","\"custom (w/ top_k & threshold)\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":21},"errors":[],"lineEnd":107,"lineStart":87,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.05,"difficulty":3.571,"effort":530.991,"length":35,"time":29.499,"vocabulary":19,"volume":148.677,"operands":{"distinct":14,"total":20,"identifiers":["output","pipe","images","0","candidate_labels","expect","toHaveLength","512","slice","targets","white_image","length","toBeCloseToNested","5"]},"operators":{"distinct":5,"total":15,"identifiers":["const","=","()","[]","."]}},"paramCount":0,"sloc":{"logical":7,"physical":6},"errors":[],"lineEnd":95,"lineStart":90,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.051,"difficulty":4.667,"effort":707.563,"length":34,"time":39.309,"vocabulary":22,"volume":151.621,"operands":{"distinct":15,"total":20,"identifiers":["top_k","3","output","pipe","images","0","candidate_labels","threshold","0.05","expect","toBeCloseToNested","targets","white_image","slice","5"]},"operators":{"distinct":7,"total":14,"identifiers":["const","=","()","[]","{}",":","."]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":104,"lineStart":100,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":38.774,"length":10,"time":2.154,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":6,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME","\"custom (w/ top_k & threshold)\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":21},"errors":[],"lineEnd":129,"lineStart":109,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.041,"difficulty":2.857,"effort":351.971,"length":29,"time":19.554,"vocabulary":19,"volume":123.19,"operands":{"distinct":14,"total":16,"identifiers":["output","pipe","images","candidate_labels","target","Object","values","targets","expect","map","x","i","toBeCloseToNested","5"]},"operators":{"distinct":5,"total":13,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":116,"lineStart":112,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":1.5,"effort":47.549,"length":10,"time":2.642,"vocabulary":9,"volume":31.699,"operands":{"distinct":6,"total":6,"identifiers":["x","slice","0","target","i","length"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","[]"]}},"paramCount":2,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":115,"lineStart":115,"name":"<anon method-11>","paramNames":["x","i"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.058,"difficulty":4.324,"effort":753.282,"length":38,"time":41.849,"vocabulary":24,"volume":174.229,"operands":{"distinct":17,"total":21,"identifiers":["top_k","3","output","pipe","images","candidate_labels","threshold","0.05","target","Object","values","targets","map","x","expect","toBeCloseToNested","5"]},"operators":{"distinct":7,"total":17,"identifiers":["const","=","()","{}",":",".","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":6},"errors":[],"lineEnd":126,"lineStart":121,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1,"effort":15.51,"length":6,"time":0.862,"vocabulary":6,"volume":15.51,"operands":{"distinct":4,"total":4,"identifiers":["x","slice","0","top_k"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":124,"lineStart":124,"name":"<anon method-13>","paramNames":["x"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":133,"lineStart":131,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.181,"difficulty":10,"effort":5417.832,"length":104,"time":300.991,"vocabulary":37,"volume":541.783,"operands":{"distinct":27,"total":54,"identifiers":["model_id","\"hf-internal-testing/tiny-random-GroundingDinoForObjectDetection\"","candidate_labels","\"a cat.\"","pipe","image","beforeAll","MAX_MODEL_LOAD_TIME","target","box","xmax","112","xmin","111","ymax","0","ymin","label","\"a cat. [SEP]\"","score","1","it","\"should be an instance of ZeroShotObjectDetectionPipeline\"","describe","\"batch_size=1\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":10,"total":50,"identifiers":["const","=","[]","let","()","function=>",",","{}",":","- (prefix)"]}},"paramCount":0,"sloc":{"logical":34,"physical":49},"errors":[],"lineEnd":184,"lineStart":136,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.013,"difficulty":1,"effort":39.863,"length":12,"time":2.215,"vocabulary":10,"volume":39.863,"operands":{"distinct":8,"total":8,"identifiers":["pipe","pipeline","PIPELINE_ID","model_id","DEFAULT_MODEL_OPTIONS","image","load_cached_image","\"white_image\""]},"operators":{"distinct":2,"total":4,"identifiers":["=","()"]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":147,"lineStart":144,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1,"effort":18.095,"length":7,"time":1.005,"vocabulary":6,"volume":18.095,"operands":{"distinct":4,"total":4,"identifiers":["expect","pipe","toBeInstanceOf","ZeroShotObjectDetectionPipeline"]},"operators":{"distinct":2,"total":3,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":158,"lineStart":156,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":38.774,"length":10,"time":2.154,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":6,"identifiers":["it","\"default\"","MAX_TEST_EXECUTION_TIME","\"custom (w/ top_k & threshold)\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":20},"errors":[],"lineEnd":179,"lineStart":160,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.04,"difficulty":2.615,"effort":310.018,"length":29,"time":17.223,"vocabulary":17,"volume":118.536,"operands":{"distinct":13,"total":17,"identifiers":["output","pipe","image","candidate_labels","expect","toHaveLength","900","slice","0","target","length","toBeCloseToNested","5"]},"operators":{"distinct":4,"total":12,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":167,"lineStart":163,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.043,"difficulty":3.857,"effort":500.109,"length":30,"time":27.784,"vocabulary":20,"volume":129.658,"operands":{"distinct":14,"total":18,"identifiers":["top_k","3","output","pipe","image","candidate_labels","threshold","0.05","expect","toBeCloseToNested","target","slice","0","5"]},"operators":{"distinct":6,"total":12,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":176,"lineStart":172,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":183,"lineStart":181,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.472,"halstead":{"bugs":0.071,"difficulty":0.95,"effort":4464.546,"length":31.364,"time":248.03,"vocabulary":5.091,"volume":213.503,"operands":{"distinct":4.591,"total":17.455},"operators":{"distinct":0.5,"total":13.909}},"paramCount":0.136,"sloc":{"logical":9.636,"physical":8.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":27.187,"halstead":{"bugs":0.053,"difficulty":2.905,"effort":1377.258,"length":32.619,"time":76.514,"vocabulary":14.81,"volume":159.961,"operands":{"distinct":10.857,"total":18.19},"operators":{"distinct":3.952,"total":14.429}},"paramCount":0.143,"sloc":{"logical":10,"physical":30.762}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/test_utils.js","testCases":0,"smells":12,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  16 |   wav.toSampleRate(16000); // Whisper expects audio with a sampling rate of 16000\n  17 |   let audioData = wav.getSamples();\n> 18 |   if (Array.isArray(audioData)) {\n     |  ^ Conditional Test Logic\n  19 |     if (audioData.length > 1) {\n  20 |       const SCALING_FACTOR = Math.sqrt(2);\n  21 |","start":{"line":18,"column":2,"index":802}},{"frame":"  17 |   let audioData = wav.getSamples();\n  18 |   if (Array.isArray(audioData)) {\n> 19 |     if (audioData.length > 1) {\n     |    ^ Conditional Test Logic\n  20 |       const SCALING_FACTOR = Math.sqrt(2);\n  21 |\n  22 |       // Merge channels (into first channel to save memory)","start":{"line":19,"column":4,"index":838}},{"frame":"  21 |\n  22 |       // Merge channels (into first channel to save memory)\n> 23 |       for (let i = 0; i < audioData[0].length; ++i) {\n     |      ^ Conditional Test Logic\n  24 |         audioData[0][i] = (SCALING_FACTOR * (audioData[0][i] + audioData[1][i])) / 2;\n  25 |       }\n  26 |     }","start":{"line":23,"column":6,"index":976}},{"frame":"  38 |  */\n  39 | export function compare(val1, val2, tol = 0.1) {\n> 40 |   if (val1 !== null && val2 !== null && typeof val1 === \"object\" && typeof val2 === \"object\") {\n     |  ^ Conditional Test Logic\n  41 |     // Both are non-null objects\n  42 |\n  43 |     if (Array.isArray(val1) && Array.isArray(val2)) {","start":{"line":40,"column":2,"index":1490}},{"frame":"  41 |     // Both are non-null objects\n  42 |\n> 43 |     if (Array.isArray(val1) && Array.isArray(val2)) {\n     |    ^ Conditional Test Logic\n  44 |       expect(val1).toHaveLength(val2.length);\n  45 |\n  46 |       for (let i = 0; i < val1.length; ++i) {","start":{"line":43,"column":4,"index":1622}},{"frame":"  44 |       expect(val1).toHaveLength(val2.length);\n  45 |\n> 46 |       for (let i = 0; i < val1.length; ++i) {\n     |      ^ Conditional Test Logic\n  47 |         compare(val1[i], val2[i], tol);\n  48 |       }\n  49 |     } else {","start":{"line":46,"column":6,"index":1725}},{"frame":"  50 |       expect(Object.keys(val1)).toHaveLength(Object.keys(val2).length);\n  51 |\n> 52 |       for (let key in val1) {\n     |      ^ Conditional Test Logic\n  53 |         compare(val1[key], val2[key], tol);\n  54 |       }\n  55 |     }","start":{"line":52,"column":6,"index":1905}},{"frame":"  59 |     expect(typeof val1).toEqual(typeof val2);\n  60 |\n> 61 |     if (typeof val1 === \"number\" && (!Number.isInteger(val1) || !Number.isInteger(val2))) {\n     |    ^ Conditional Test Logic\n  62 |       // If both are numbers and at least one of them is not an integer\n  63 |       expect(val1).toBeCloseTo(val2, -Math.log10(tol));\n  64 |     } else {","start":{"line":61,"column":4,"index":2142}},{"frame":"  83 |   const model_types = fs.readdirSync(models_dir);\n  84 |   const all_tests = [];\n> 85 |   for (const model_type of model_types) {\n     |  ^ Conditional Test Logic\n  86 |     const dir = path.join(models_dir, model_type);\n  87 |\n  88 |     if (!fs.existsSync(dir) || !fs.statSync(dir).isDirectory()) {","start":{"line":85,"column":2,"index":3008}},{"frame":"  86 |     const dir = path.join(models_dir, model_type);\n  87 |\n> 88 |     if (!fs.existsSync(dir) || !fs.statSync(dir).isDirectory()) {\n     |    ^ Conditional Test Logic\n  89 |       continue;\n  90 |     }\n  91 |","start":{"line":88,"column":4,"index":3104}},{"frame":"  91 |\n  92 |     const file = path.join(dir, `test_${filename}_${model_type}.js`);\n> 93 |     if (!fs.existsSync(file)) {\n     |    ^ Conditional Test Logic\n  94 |       continue;\n  95 |     }\n  96 |","start":{"line":93,"column":4,"index":3263}},{"frame":"  123 |   const all_tests = [];\n  124 |   const pipeline_types = fs.readdirSync(pipelines_dir);\n> 125 |   for (const filename of pipeline_types) {\n      |  ^ Conditional Test Logic\n  126 |     const file = path.join(pipelines_dir, filename);\n  127 |     const items = await import(file);\n  128 |     all_tests.push(items);","start":{"line":125,"column":2,"index":4275}}]}],"metrics":{"aggregate":{"cyclomatic":27,"cyclomaticDensity":25,"halstead":{"bugs":1.067,"difficulty":44.424,"effort":142225.926,"length":466,"time":7901.44,"vocabulary":117,"volume":3201.59,"operands":{"distinct":85,"total":236,"identifiers":["loadAudio","url","wavefile","\"wavefile\"","default","buffer","Buffer","from","fetch","then","x","arrayBuffer","wav","WaveFile","toBitDepth","\"32f\"","toSampleRate","16000","audioData","getSamples","Array","isArray","length","1","SCALING_FACTOR","Math","sqrt","2","i","0","compare","val1","val2","tol","0.1","null","\"object\"","expect","toHaveLength","Object","keys","key","toEqual","\"number\"","Number","isInteger","toBeCloseTo","log10","__filename","fileURLToPath","import","meta","__dirname","path","dirname","models_dir","join","\"models\"","pipelines_dir","\"pipelines\"","collect_tests","filename","model_types","fs","readdirSync","all_tests","model_type","dir","existsSync","statSync","isDirectory","file","test_","_",".js","items","push","collect_and_execute_tests","title","describe","forEach","name","test","collect_and_execute_pipeline_tests","pipeline_types"]},"operators":{"distinct":32,"total":230,"identifiers":["function","let","=",".","()","function=>","new","if",">","const","for","<","[]","++ (prefix)","/","*","+","return","else","&&","!==","===","typeof (prefix)","forin","||","! (prefix)","- (prefix)","forof","continue","``","${}",","]}},"paramCount":12,"sloc":{"logical":108,"physical":134}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"fs","type":"esm"},{"line":2,"path":"path","type":"esm"},{"line":3,"path":"url","type":"esm"}],"errors":[],"lineEnd":134,"lineStart":1,"maintainability":100.719,"methods":[{"cyclomatic":4,"cyclomaticDensity":19.048,"halstead":{"bugs":0.2,"difficulty":16.696,"effort":9994.682,"length":109,"time":555.26,"vocabulary":45,"volume":598.612,"operands":{"distinct":28,"total":55,"identifiers":["wavefile","\"wavefile\"","default","buffer","Buffer","from","fetch","url","then","x","wav","WaveFile","toBitDepth","\"32f\"","toSampleRate","16000","audioData","getSamples","Array","isArray","length","1","SCALING_FACTOR","Math","sqrt","2","i","0"]},"operators":{"distinct":17,"total":54,"identifiers":["let","=",".","()","function=>","new","if",">","const","for","<","[]","++ (prefix)","/","*","+","return"]}},"paramCount":1,"sloc":{"logical":21,"physical":28},"errors":[],"lineEnd":32,"lineStart":5,"name":"loadAudio","paramNames":["url"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["x","arrayBuffer"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":11,"lineStart":11,"name":"<anon method-1>","paramNames":["x"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":11,"cyclomaticDensity":40.741,"halstead":{"bugs":0.252,"difficulty":27.783,"effort":20987.395,"length":141,"time":1165.966,"vocabulary":41,"volume":755.415,"operands":{"distinct":23,"total":71,"identifiers":["val1","null","val2","\"object\"","Array","isArray","expect","toHaveLength","length","i","0","compare","tol","Object","keys","key","toEqual","\"number\"","Number","isInteger","toBeCloseTo","Math","log10"]},"operators":{"distinct":18,"total":70,"identifiers":["if","else","&&","!==","===","typeof (prefix)","()",".","for","let","=","<","++ (prefix)","[]","forin","||","! (prefix)","- (prefix)"]}},"paramCount":3,"sloc":{"logical":27,"physical":31},"errors":[],"lineEnd":69,"lineStart":39,"name":"compare","paramNames":["val1","val2","tol"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":4,"cyclomaticDensity":20,"halstead":{"bugs":0.138,"difficulty":14,"effort":5790.964,"length":82,"time":321.72,"vocabulary":33,"volume":413.64,"operands":{"distinct":19,"total":38,"identifiers":["model_types","fs","readdirSync","models_dir","all_tests","model_type","dir","path","join","existsSync","statSync","isDirectory","file","filename","test_","_",".js","items","push"]},"operators":{"distinct":14,"total":44,"identifiers":["const","=","()",".","[]","forof","if","||","! (prefix)","continue","``","${}",",","return"]}},"paramCount":1,"sloc":{"logical":20,"physical":20},"errors":[],"lineEnd":101,"lineStart":82,"name":"collect_tests","paramNames":["filename"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.011,"difficulty":2,"effort":63.399,"length":10,"time":3.522,"vocabulary":9,"volume":31.699,"operands":{"distinct":5,"total":5,"identifiers":["all_tests","collect_tests","filename","describe","title"]},"operators":{"distinct":4,"total":5,"identifiers":["const","=","()","function=>"]}},"paramCount":2,"sloc":{"logical":4,"physical":7},"errors":[],"lineEnd":115,"lineStart":109,"name":"collect_and_execute_tests","paramNames":["title","filename"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":2.5,"effort":71.323,"length":9,"time":3.962,"vocabulary":9,"volume":28.529,"operands":{"distinct":4,"total":4,"identifiers":["all_tests","forEach","name","test"]},"operators":{"distinct":5,"total":5,"identifiers":["()",".","function=>","[]",","]}},"paramCount":0,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":114,"lineStart":114,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1,"effort":15.51,"length":6,"time":0.862,"vocabulary":6,"volume":15.51,"operands":{"distinct":4,"total":4,"identifiers":["describe","name","test","default"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":2,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":114,"lineStart":114,"name":"<anon method-3>","paramNames":["name","test"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.056,"difficulty":5.115,"effort":862.225,"length":39,"time":47.901,"vocabulary":20,"volume":168.555,"operands":{"distinct":13,"total":19,"identifiers":["all_tests","pipeline_types","fs","readdirSync","pipelines_dir","filename","file","path","join","items","push","describe","title"]},"operators":{"distinct":7,"total":20,"identifiers":["const","=","[]","()",".","forof","function=>"]}},"paramCount":1,"sloc":{"logical":11,"physical":13},"errors":[],"lineEnd":133,"lineStart":121,"name":"collect_and_execute_pipeline_tests","paramNames":["title"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["all_tests","forEach","test"]},"operators":{"distinct":3,"total":3,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":132,"lineStart":132,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["test","default"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":132,"lineStart":132,"name":"<anon method-5>","paramNames":["test"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":2.455,"cyclomaticDensity":2.273,"halstead":{"bugs":0.097,"difficulty":4.039,"effort":12929.63,"length":42.364,"time":718.313,"vocabulary":10.636,"volume":291.054,"operands":{"distinct":7.727,"total":21.455},"operators":{"distinct":2.909,"total":20.909}},"paramCount":1.091,"sloc":{"logical":9.818,"physical":12.182}},"methodAverage":{"cyclomatic":2.6,"cyclomaticDensity":33.055,"halstead":{"bugs":0.068,"difficulty":7.259,"effort":3782.476,"length":41,"time":210.138,"vocabulary":17.7,"volume":204.347,"operands":{"distinct":10.3,"total":20.3},"operators":{"distinct":7.4,"total":20.7}},"paramCount":1.2,"sloc":{"logical":9.5,"physical":10.4}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/tokenizers.test.js","testCases":16,"smells":46,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"   5 | const TOKENIZER_TESTS = await collect_tests(\"tokenization\");\n   6 | describe(\"Tokenizers (model-specific)\", () => {\n>  7 |   for (const [tokenizer_name, { TOKENIZER_CLASS, TEST_CONFIG, CUSTOM_TESTS }] of TOKENIZER_TESTS) {\n     |  ^ Conditional Test Logic\n   8 |     describe(tokenizer_name, () => {\n   9 |       for (const model_id in TEST_CONFIG) {\n  10 |         describe(model_id, () => {","start":{"line":7,"column":2,"index":302}},{"frame":"   7 |   for (const [tokenizer_name, { TOKENIZER_CLASS, TEST_CONFIG, CUSTOM_TESTS }] of TOKENIZER_TESTS) {\n   8 |     describe(tokenizer_name, () => {\n>  9 |       for (const model_id in TEST_CONFIG) {\n     |      ^ Conditional Test Logic\n  10 |         describe(model_id, () => {\n  11 |           /** @type {import('../src/tokenizers.js').PreTrainedTokenizer} */\n  12 |           let tokenizer;","start":{"line":9,"column":6,"index":443}},{"frame":"  15 |           }, MAX_TOKENIZER_LOAD_TIME);\n  16 |\n> 17 |           for (const [test_name, test_case] of Object.entries(TEST_CONFIG[model_id])) {\n     |          ^ Conditional Test Logic\n  18 |             test(test_name, () => {\n  19 |               if (test_case.ids) {\n  20 |                 const ids = tokenizer.encode(test_case.text, {","start":{"line":17,"column":10,"index":774}},{"frame":"  17 |           for (const [test_name, test_case] of Object.entries(TEST_CONFIG[model_id])) {\n  18 |             test(test_name, () => {\n> 19 |               if (test_case.ids) {\n     |              ^ Conditional Test Logic\n  20 |                 const ids = tokenizer.encode(test_case.text, {\n  21 |                   text_pair: test_case.text_pair,\n  22 |                 });","start":{"line":19,"column":14,"index":902}},{"frame":"  23 |                 expect(ids).toEqual(test_case.ids);\n  24 |               }\n> 25 |               if (test_case.tokens) {\n     |              ^ Conditional Test Logic\n  26 |                 const tokens = tokenizer.tokenize(test_case.text, {\n  27 |                   pair: test_case.text_pair,\n  28 |                 });","start":{"line":25,"column":14,"index":1138}},{"frame":"  29 |                 expect(tokens).toEqual(test_case.tokens);\n  30 |               }\n> 31 |               if (test_case.decoded) {\n     |              ^ Conditional Test Logic\n  32 |                 const decoded = tokenizer.decode(test_case.ids);\n  33 |                 expect(decoded).toEqual(test_case.decoded);\n  34 |               }","start":{"line":31,"column":14,"index":1383}},{"frame":"  309 |\n  310 |     const startMemory = process.memoryUsage().heapUsed;\n> 311 |     for (let i = 0; i < 2500; ++i) {\n      |    ^ Conditional Test Logic\n  312 |       const s = `${i} ${i} `.repeat(i);\n  313 |       tokenizer.encode(s);\n  314 |     }","start":{"line":311,"column":4,"index":8997}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  105 |         });\n  106 |\n> 107 |         expect(input_ids.tolist()).toEqual([[1037n], [1038n]]);\n      |        ^ Duplicate Assert\n  108 |         expect(attention_mask.tolist()).toEqual([[1n], [1n]]);\n  109 |         expect(token_type_ids.tolist()).toEqual([[0n], [0n]]);\n  110 |       }","start":{"line":107,"column":8,"index":3303}},{"frame":"  106 |\n  107 |         expect(input_ids.tolist()).toEqual([[1037n], [1038n]]);\n> 108 |         expect(attention_mask.tolist()).toEqual([[1n], [1n]]);\n      |        ^ Duplicate Assert\n  109 |         expect(token_type_ids.tolist()).toEqual([[0n], [0n]]);\n  110 |       }\n  111 |       {","start":{"line":108,"column":8,"index":3367}},{"frame":"  107 |         expect(input_ids.tolist()).toEqual([[1037n], [1038n]]);\n  108 |         expect(attention_mask.tolist()).toEqual([[1n], [1n]]);\n> 109 |         expect(token_type_ids.tolist()).toEqual([[0n], [0n]]);\n      |        ^ Duplicate Assert\n  110 |       }\n  111 |       {\n  112 |         // Truncation w/ text pair","start":{"line":109,"column":8,"index":3430}},{"frame":"  121 |         });\n  122 |\n> 123 |         expect(input_ids.tolist()).toEqual([\n      |        ^ Duplicate Assert\n  124 |           [1037n, 0n],\n  125 |           [1038n, 1039n],\n  126 |         ]);","start":{"line":123,"column":8,"index":3753}},{"frame":"  125 |           [1038n, 1039n],\n  126 |         ]);\n> 127 |         expect(attention_mask.tolist()).toEqual([\n      |        ^ Duplicate Assert\n  128 |           [1n, 0n],\n  129 |           [1n, 1n],\n  130 |         ]);","start":{"line":127,"column":8,"index":3859}},{"frame":"  129 |           [1n, 1n],\n  130 |         ]);\n> 131 |         expect(token_type_ids.tolist()).toEqual([\n      |        ^ Duplicate Assert\n  132 |           [0n, 0n],\n  133 |           [0n, 0n],\n  134 |         ]);","start":{"line":131,"column":8,"index":3961}},{"frame":"  142 |         });\n  143 |\n> 144 |         expect(input_ids.tolist()).toEqual([\n      |        ^ Duplicate Assert\n  145 |           [1037n, 1040n, 1041n, 0n, 0n],\n  146 |           [1038n, 1039n, 1042n, 1043n, 1044n],\n  147 |         ]);","start":{"line":144,"column":8,"index":4289}},{"frame":"  146 |           [1038n, 1039n, 1042n, 1043n, 1044n],\n  147 |         ]);\n> 148 |         expect(attention_mask.tolist()).toEqual([\n      |        ^ Duplicate Assert\n  149 |           [1n, 1n, 1n, 0n, 0n],\n  150 |           [1n, 1n, 1n, 1n, 1n],\n  151 |         ]);","start":{"line":148,"column":8,"index":4434}},{"frame":"  150 |           [1n, 1n, 1n, 1n, 1n],\n  151 |         ]);\n> 152 |         expect(token_type_ids.tolist()).toEqual([\n      |        ^ Duplicate Assert\n  153 |           [0n, 1n, 1n, 0n, 0n],\n  154 |           [0n, 0n, 1n, 1n, 1n],\n  155 |         ]);","start":{"line":152,"column":8,"index":4560}},{"frame":"  165 |         });\n  166 |\n> 167 |         expect(input_ids.tolist()).toEqual([\n      |        ^ Duplicate Assert\n  168 |           [1037n, 0n],\n  169 |           [1038n, 1039n],\n  170 |           [1040n, 1041n],","start":{"line":167,"column":8,"index":4960}},{"frame":"  170 |           [1040n, 1041n],\n  171 |         ]);\n> 172 |         expect(attention_mask.tolist()).toEqual([\n      |        ^ Duplicate Assert\n  173 |           [1n, 0n],\n  174 |           [1n, 1n],\n  175 |           [1n, 1n],","start":{"line":172,"column":8,"index":5092}},{"frame":"  175 |           [1n, 1n],\n  176 |         ]);\n> 177 |         expect(token_type_ids.tolist()).toEqual([\n      |        ^ Duplicate Assert\n  178 |           [0n, 0n],\n  179 |           [0n, 0n],\n  180 |           [0n, 0n],","start":{"line":177,"column":8,"index":5214}},{"frame":"  400 |       // Format message with the command-r-plus-08-2024 chat template\n  401 |       const prompt = tokenizer.apply_chat_template(messages, { tokenize: false, add_generation_prompt: true });\n> 402 |       expect(prompt).toEqual(\"<BOS_TOKEN><|START_OF_TURN_TOKEN|><|USER_TOKEN|>Hello, how are you?<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>\");\n      |      ^ Duplicate Assert\n  403 |     }\n  404 |\n  405 |     {","start":{"line":402,"column":6,"index":15997}},{"frame":"  430 |       // render the tool use prompt as a string:\n  431 |       const prompt = tokenizer.apply_chat_template(conversation, { tools, tokenize: false, add_generation_prompt: true });\n> 432 |       expect(prompt).toEqual('<BOS_TOKEN><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|># Safety Preamble\\nThe instructions in this section override those in the task description and style guide sections. Don\\'t answer questions that are harmful or immoral.\\n\\n# System Preamble\\n## Basic Rules\\nYou are a powerful conversational AI trained by Cohere to help people. You are augmented by a number of tools, and your job is to use and consume the output of these tools to best help the user. You will see a conversation history between yourself and a user, ending with an utterance from the user. You will then see a specific instruction instructing you what kind of response to generate. When you answer the user\\'s requests, you cite your sources in your answers, according to those instructions.\\n\\n# User Preamble\\n## Task and Context\\nYou help people answer their questions and other requests interactively. You will be asked a very wide array of requests on all kinds of topics. You will be equipped with a wide range of search engines or similar tools to help you, which you use to research your answer. You should focus on serving the user\\'s needs as best you can, which will be wide-ranging.\\n\\n## Style Guide\\nUnless the user asks for a different style of answer, you should answer in full sentences, using proper grammar and spelling.\\n\\n## Available Tools\\nHere is a list of tools that you have available to you:\\n\\n```python\\ndef internet_search(query: str) -> List[Dict]:\\n    \"\"\"Returns a list of relevant document snippets for a textual query retrieved from the internet\\n\\n    Args:\\n        query (str): Query to search the internet with\\n    \"\"\"\\n    pass\\n```\\n\\n```python\\ndef directly_answer() -> List[Dict]:\\n    \"\"\"Calls a standard (un-augmented) AI chatbot to generate a response given the conversation history\\n    \"\"\"\\n    pass\\n```<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|USER_TOKEN|>Whats the biggest penguin in the world?<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|>Write \\'Action:\\' followed by a json-formatted list of actions that you want to perform in order to produce a good response to the user\\'s last input. You can use any of the supplied tools any number of times, but you should aim to execute the minimum number of necessary actions for the input. You should use the `directly-answer` tool if calling the other tools is unnecessary. The list of actions you want to call should be formatted as a list of json objects, for example:\\n```json\\n[\\n    {\\n        \"tool_name\": title of the tool in the specification,\\n        \"parameters\": a dict of parameters to input into the tool as they are defined in the specs, or {} if it takes no parameters\\n    }\\n]```<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>');\n      |      ^ Duplicate Assert\n  433 |     }\n  434 |   });\n  435 |","start":{"line":432,"column":6,"index":17182}},{"frame":"  507 |       // `tools` unset (will default to `null`)\n  508 |       const text = tokenizer.apply_chat_template(chat, { tokenize: false });\n> 509 |       expect(text).toEqual(\"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\\n\\nCutting Knowledge Date: December 2023\\nToday Date: 26 Jul 2024\\n\\nYou are a bot that responds to weather queries.<|eot_id|><|start_header_id|>user<|end_header_id|>\\n\\nHey, what's the temperature in Paris right now?<|eot_id|>\");\n      |      ^ Duplicate Assert\n  510 |\n  511 |       const input_ids = tokenizer.apply_chat_template(chat, { tokenize: true, return_tensor: false });\n  512 |       compare(input_ids, [128000, 128006, 9125, 128007, 271, 38766, 1303, 33025, 2696, 25, 6790, 220, 2366, 18, 198, 15724, 2696, 25, 220, 1627, 10263, 220, 2366, 19, 271, 2675, 527, 264, 11164, 430, 31680, 311, 9282, 20126, 13, 128009, 128006, 882, 128007, 271, 19182, 11, 1148, 596, 279, 9499, 304, 12366, 1314, 1457, 30, 128009]);","start":{"line":509,"column":6,"index":24412}},{"frame":"  516 |       // `tools` set\n  517 |       const text = tokenizer.apply_chat_template(chat, { tools, tokenize: false });\n> 518 |       expect(text).toEqual('<|begin_of_text|><|start_header_id|>system<|end_header_id|>\\n\\nEnvironment: ipython\\nCutting Knowledge Date: December 2023\\nToday Date: 26 Jul 2024\\n\\nYou are a bot that responds to weather queries.<|eot_id|><|start_header_id|>user<|end_header_id|>\\n\\nGiven the following functions, please respond with a JSON for a function call with its proper arguments that best answers the given prompt.\\n\\nRespond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.Do not use variables.\\n\\n{\\n    \"type\": \"function\",\\n    \"function\": {\\n        \"name\": \"get_current_temperature\",\\n        \"description\": \"Get the current temperature at a location.\",\\n        \"parameters\": {\\n            \"type\": \"object\",\\n            \"properties\": {\\n                \"location\": {\\n                    \"type\": \"string\",\\n                    \"description\": \"The location to get the temperature for, in the format \\\\\"City, Country\\\\\"\"\\n                }\\n            },\\n            \"required\": [\\n                \"location\"\\n            ]\\n        },\\n        \"return\": {\\n            \"type\": \"number\",\\n            \"description\": \"The current temperature at the specified location in the specified units, as a float.\"\\n        }\\n    }\\n}\\n\\nHey, what\\'s the temperature in Paris right now?<|eot_id|>');\n      |      ^ Duplicate Assert\n  519 |\n  520 |       const input_ids = tokenizer.apply_chat_template(chat, { tools, tokenize: true, return_tensor: false });\n  521 |       compare(input_ids, [128000, 128006, 9125, 128007, 271, 13013, 25, 6125, 27993, 198, 38766, 1303, 33025, 2696, 25, 6790, 220, 2366, 18, 198, 15724, 2696, 25, 220, 1627, 10263, 220, 2366, 19, 271, 2675, 527, 264, 11164, 430, 31680, 311, 9282, 20126, 13, 128009, 128006, 882, 128007, 271, 22818, 279, 2768, 5865, 11, 4587, 6013, 449, 264, 4823, 369, 264, 734, 1650, 449, 1202, 6300, 6105, 430, 1888, 11503, 279, 2728, 10137, 382, 66454, 304, 279, 3645, 5324, 609, 794, 734, 836, 11, 330, 14105, 794, 11240, 315, 5811, 836, 323, 1202, 907, 7966, 5519, 539, 1005, 7482, 382, 517, 262, 330, 1337, 794, 330, 1723, 761, 262, 330, 1723, 794, 341, 286, 330, 609, 794, 330, 456, 11327, 54625, 761, 286, 330, 4789, 794, 330, 1991, 279, 1510, 9499, 520, 264, 3813, 10560, 286, 330, 14105, 794, 341, 310, 330, 1337, 794, 330, 1735, 761, 310, 330, 13495, 794, 341, 394, 330, 2588, 794, 341, 504, 330, 1337, 794, 330, 928, 761, 504, 330, 4789, 794, 330, 791, 3813, 311, 636, 279, 9499, 369, 11, 304, 279, 3645, 7393, 13020, 11, 14438, 2153, 702, 394, 457, 310, 1173, 310, 330, 6413, 794, 2330, 394, 330, 2588, 702, 310, 5243, 286, 1173, 286, 330, 693, 794, 341, 310, 330, 1337, 794, 330, 4174, 761, 310, 330, 4789, 794, 330, 791, 1510, 9499, 520, 279, 5300, 3813, 304, 279, 5300, 8316, 11, 439, 264, 2273, 10246, 286, 457, 262, 457, 633, 19182, 11, 1148, 596, 279, 9499, 304, 12366, 1314, 1457, 30, 128009]);","start":{"line":518,"column":6,"index":25287}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  69 |         ],\n  70 |       };\n> 71 |       compare(output, expected);\n     |      ^ Eager Test\n  72 |     }\n  73 |\n  74 |     {","start":{"line":71,"column":6,"index":2409}},{"frame":"  83 |         token_type_ids: [[0], [0, 0]],\n  84 |       };\n> 85 |       compare(output, expected);\n     |      ^ Eager Test\n  86 |     }\n  87 |   });\n  88 |","start":{"line":85,"column":6,"index":2752}},{"frame":"  235 |           token_type_ids: [0, 0],\n  236 |         };\n> 237 |         compare(model_inputs, expected);\n      |        ^ Eager Test\n  238 |       }\n  239 |\n  240 |       {","start":{"line":237,"column":8,"index":6722}},{"frame":"  250 |           token_type_ids: [0, 0, 1, 1],\n  251 |         };\n> 252 |         compare(model_inputs, expected);\n      |        ^ Eager Test\n  253 |       }\n  254 |     },\n  255 |     MAX_TEST_EXECUTION_TIME,","start":{"line":252,"column":8,"index":7140}},{"frame":"  284 |       {\n  285 |         let token_ids = tokenizer.encode(\"\\n\", { add_special_tokens: false });\n> 286 |         compare(token_ids, [108]);\n      |        ^ Eager Test\n  287 |       }\n  288 |       {\n  289 |         let token_ids = tokenizer.encode(\"\\n\\n\", { add_special_tokens: false });","start":{"line":286,"column":8,"index":8200}},{"frame":"  288 |       {\n  289 |         let token_ids = tokenizer.encode(\"\\n\\n\", { add_special_tokens: false });\n> 290 |         compare(token_ids, [109]); // Should not be [108, 108]\n      |        ^ Eager Test\n  291 |       }\n  292 |     },\n  293 |     MAX_TEST_EXECUTION_TIME,","start":{"line":290,"column":8,"index":8332}},{"frame":"  510 |\n  511 |       const input_ids = tokenizer.apply_chat_template(chat, { tokenize: true, return_tensor: false });\n> 512 |       compare(input_ids, [128000, 128006, 9125, 128007, 271, 38766, 1303, 33025, 2696, 25, 6790, 220, 2366, 18, 198, 15724, 2696, 25, 220, 1627, 10263, 220, 2366, 19, 271, 2675, 527, 264, 11164, 430, 31680, 311, 9282, 20126, 13, 128009, 128006, 882, 128007, 271, 19182, 11, 1148, 596, 279, 9499, 304, 12366, 1314, 1457, 30, 128009]);\n      |      ^ Eager Test\n  513 |     }\n  514 |\n  515 |     {","start":{"line":512,"column":6,"index":24835}},{"frame":"  519 |\n  520 |       const input_ids = tokenizer.apply_chat_template(chat, { tools, tokenize: true, return_tensor: false });\n> 521 |       compare(input_ids, [128000, 128006, 9125, 128007, 271, 13013, 25, 6125, 27993, 198, 38766, 1303, 33025, 2696, 25, 6790, 220, 2366, 18, 198, 15724, 2696, 25, 220, 1627, 10263, 220, 2366, 19, 271, 2675, 527, 264, 11164, 430, 31680, 311, 9282, 20126, 13, 128009, 128006, 882, 128007, 271, 22818, 279, 2768, 5865, 11, 4587, 6013, 449, 264, 4823, 369, 264, 734, 1650, 449, 1202, 6300, 6105, 430, 1888, 11503, 279, 2728, 10137, 382, 66454, 304, 279, 3645, 5324, 609, 794, 734, 836, 11, 330, 14105, 794, 11240, 315, 5811, 836, 323, 1202, 907, 7966, 5519, 539, 1005, 7482, 382, 517, 262, 330, 1337, 794, 330, 1723, 761, 262, 330, 1723, 794, 341, 286, 330, 609, 794, 330, 456, 11327, 54625, 761, 286, 330, 4789, 794, 330, 1991, 279, 1510, 9499, 520, 264, 3813, 10560, 286, 330, 14105, 794, 341, 310, 330, 1337, 794, 330, 1735, 761, 310, 330, 13495, 794, 341, 394, 330, 2588, 794, 341, 504, 330, 1337, 794, 330, 928, 761, 504, 330, 4789, 794, 330, 791, 3813, 311, 636, 279, 9499, 369, 11, 304, 279, 3645, 7393, 13020, 11, 14438, 2153, 702, 394, 457, 310, 1173, 310, 330, 6413, 794, 2330, 394, 330, 2588, 702, 310, 5243, 286, 1173, 286, 330, 693, 794, 341, 310, 330, 1337, 794, 330, 4174, 761, 310, 330, 4789, 794, 330, 791, 1510, 9499, 520, 279, 5300, 3813, 304, 279, 5300, 8316, 11, 439, 264, 2273, 10246, 286, 457, 262, 457, 633, 19182, 11, 1148, 596, 279, 9499, 304, 12366, 1314, 1457, 30, 128009]);\n      |      ^ Eager Test\n  522 |     }\n  523 |   });\n  524 | });","start":{"line":521,"column":6,"index":26748}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  69 |         ],\n  70 |       };\n> 71 |       compare(output, expected);\n     |      ^ Lazy Test\n  72 |     }\n  73 |\n  74 |     {","start":{"line":71,"column":6,"index":2409}},{"frame":"  214 |       };\n  215 |\n> 216 |       compare(model_inputs, expected);\n      |      ^ Lazy Test\n  217 |     },\n  218 |     MAX_TEST_EXECUTION_TIME,\n  219 |   );","start":{"line":216,"column":6,"index":6153}},{"frame":"  235 |           token_type_ids: [0, 0],\n  236 |         };\n> 237 |         compare(model_inputs, expected);\n      |        ^ Lazy Test\n  238 |       }\n  239 |\n  240 |       {","start":{"line":237,"column":8,"index":6722}},{"frame":"  275 |     let text = String.prototype.repeat.call(\"a\", 50000);\n  276 |     let token_ids = tokenizer.encode(text);\n> 277 |     compare(token_ids, [101, 100, 102]);\n      |    ^ Lazy Test\n  278 |   }, 5000); // NOTE: 5 seconds\n  279 |\n  280 |   it(","start":{"line":277,"column":4,"index":7874}},{"frame":"  284 |       {\n  285 |         let token_ids = tokenizer.encode(\"\\n\", { add_special_tokens: false });\n> 286 |         compare(token_ids, [108]);\n      |        ^ Lazy Test\n  287 |       }\n  288 |       {\n  289 |         let token_ids = tokenizer.encode(\"\\n\\n\", { add_special_tokens: false });","start":{"line":286,"column":8,"index":8200}},{"frame":"  299 |     let text = \"hello world!\";\n  300 |     let token_ids = tokenizer.encode(text);\n> 301 |     compare(token_ids, [128000, 15339, 1917, 0]);\n      |    ^ Lazy Test\n  302 |   }, 5000); // NOTE: 5 seconds\n  303 | });\n  304 |","start":{"line":301,"column":4,"index":8655}},{"frame":"  362 |\n  363 |     const input_ids = tokenizer.apply_chat_template(chat, { tokenize: true, return_tensor: false });\n> 364 |     compare(input_ids, [1, 733, 16289, 28793, 22557, 28725, 910, 460, 368, 28804, 733, 28748, 16289, 28793, 28737, 28742, 28719, 2548, 1598, 28723, 1602, 541, 315, 1316, 368, 3154, 28804, 2, 28705, 733, 16289, 28793, 315, 28742, 28715, 737, 298, 1347, 805, 910, 10706, 5752, 1077, 3791, 28808, 733, 28748, 16289, 28793]);\n      |    ^ Lazy Test\n  365 |   });\n  366 |\n  367 |   it(\"should support multiple chat templates\", async () => {","start":{"line":364,"column":4,"index":11259}},{"frame":"  510 |\n  511 |       const input_ids = tokenizer.apply_chat_template(chat, { tokenize: true, return_tensor: false });\n> 512 |       compare(input_ids, [128000, 128006, 9125, 128007, 271, 38766, 1303, 33025, 2696, 25, 6790, 220, 2366, 18, 198, 15724, 2696, 25, 220, 1627, 10263, 220, 2366, 19, 271, 2675, 527, 264, 11164, 430, 31680, 311, 9282, 20126, 13, 128009, 128006, 882, 128007, 271, 19182, 11, 1148, 596, 279, 9499, 304, 12366, 1314, 1457, 30, 128009]);\n      |      ^ Lazy Test\n  513 |     }\n  514 |\n  515 |     {","start":{"line":512,"column":6,"index":24835}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  265 |       let text = String.prototype.repeat.call(\"Hello world! \", 50000);\n  266 |       let encoded = tokenizer(text);\n> 267 |       expect(encoded.input_ids.data.length).toBeGreaterThan(100000);\n      |                                                            ^ Magic Number\n  268 |     },\n  269 |     MAX_TEST_EXECUTION_TIME,\n  270 |   );","start":{"line":267,"column":60,"index":7586}}]},{"name":"Unknown Test","packageName":"unknownTest","items":[{"frame":"  47 |   const text_pair = [\"d e\", \"f g h\"];\n  48 |\n> 49 |   it(\"should create a jagged array\", async () => {\n     |  ^ Unknown Test\n  50 |     const tokenizer = await AutoTokenizer.from_pretrained(\"Xenova/bert-base-uncased\");\n  51 |\n  52 |     {","start":{"column":2,"line":49}},{"frame":"  187 |\n  188 | describe(\"Token type ids\", () => {\n> 189 |   it(\n      |  ^ Unknown Test\n  190 |     \"should correctly add token type ids\",\n  191 |     async () => {\n  192 |       const tokenizer = await AutoTokenizer.from_pretrained(\"Xenova/bert-base-uncased\");","start":{"column":2,"line":189}},{"frame":"  219 |   );\n  220 |\n> 221 |   it(\n      |  ^ Unknown Test\n  222 |     \"should add token type ids if user requests them\",\n  223 |     async () => {\n  224 |       const tokenizer = await AutoTokenizer.from_pretrained(\"Xenova/llama3-tokenizer-new\");","start":{"column":2,"line":221}},{"frame":"  270 |   );\n  271 |\n> 272 |   it(\"should not take too long\", async () => {\n      |  ^ Unknown Test\n  273 |     let tokenizer = await AutoTokenizer.from_pretrained(\"Xenova/all-MiniLM-L6-v2\");\n  274 |\n  275 |     let text = String.prototype.repeat.call(\"a\", 50000);","start":{"column":2,"line":272}},{"frame":"  278 |   }, 5000); // NOTE: 5 seconds\n  279 |\n> 280 |   it(\n      |  ^ Unknown Test\n  281 |     \"Special/added tokens with earlier partial matches\",\n  282 |     async () => {\n  283 |       let tokenizer = await AutoTokenizer.from_pretrained(\"Xenova/gemini-nano\");","start":{"column":2,"line":280}},{"frame":"  294 |   );\n  295 |\n> 296 |   it(\"many added tokens\", async () => {\n      |  ^ Unknown Test\n  297 |     let tokenizer = await AutoTokenizer.from_pretrained(\"onnx-community/orpheus-3b-0.1-ft-ONNX\");\n  298 |\n  299 |     let text = \"hello world!\";","start":{"column":2,"line":296}}]}],"metrics":{"aggregate":{"cyclomatic":35,"cyclomaticDensity":8.14,"halstead":{"bugs":7.535,"difficulty":34.186,"effort":772792.028,"length":2584,"time":42932.89,"vocabulary":430,"volume":22605.33,"operands":{"distinct":408,"total":1268,"identifiers":["TOKENIZER_TESTS","collect_tests","\"tokenization\"","describe","\"Tokenizers (model-specific)\"","tokenizer_name","TOKENIZER_CLASS","TEST_CONFIG","CUSTOM_TESTS","model_id","tokenizer","beforeAll","from_pretrained","MAX_TOKENIZER_LOAD_TIME","test_name","test_case","Object","entries","test","ids","encode","text","text_pair","expect","toEqual","tokens","tokenize","pair","decoded","decode","\"custom\"","\"Tokenizer padding/truncation\"","inputs","\"a\"","\"b c\"","\"d e\"","\"f g h\"","it","\"should create a jagged array\"","AutoTokenizer","\"Xenova/bert-base-uncased\"","output","return_tensor","false","expected","input_ids","101","1037","102","1038","1039","attention_mask","1","token_type_ids","0","compare","truncation","true","add_special_tokens","\"should create a tensor\"","toThrow","\"Unable to create tensor\"","max_length","tolist","padding","\"d e f\"","2","MAX_TEST_EXECUTION_TIME","\"Token type ids\"","\"should correctly add token type ids\"","model_inputs","\"a b c\"","\"d\"","\"e f\"","\"g h\"","1041","1042","1040","1043","1044","\"should add token type ids if user requests them\"","\"Xenova/llama3-tokenizer-new\"","\"hello\"","return_token_type_ids","128000","15339","\"world\"","14957","\"Edge cases\"","\"should not crash when encoding a very long string\"","\"Xenova/t5-small\"","String","prototype","repeat","call","\"Hello world! \"","50000","encoded","data","length","toBeGreaterThan","100000","\"should not take too long\"","\"Xenova/all-MiniLM-L6-v2\"","token_ids","100","5000","\"Special/added tokens with earlier partial matches\"","\"Xenova/gemini-nano\"","\"\n\"","108","\"\n\n\"","109","\"many added tokens\"","\"onnx-community/orpheus-3b-0.1-ft-ONNX\"","\"hello world!\"","1917","\"Memory leak tests\"","\"should not leak memory\"","id","\"TinyLlama/TinyLlama-1.1B-Chat-v1.0\"","startMemory","process","memoryUsage","heapUsed","i","2500","s"," ","endMemory","memoryUsed","memoryLimit","1024","toBeLessThan","30000","\"Extra decoding tests\"","\"should be able to decode the output of encode\"","encodedTensor","decoded1","skip_special_tokens","decoded2","batch_decode","encodedList","decoded3","decoded4","\"Chat templates\"","\"should generate a chat template\"","\"Xenova/mistral-tokenizer-v1\"","chat","role","\"user\"","content","\"Hello, how are you?\"","\"assistant\"","\"I'm doing great. How can I help you today?\"","\"I'd like to show off how chat templating works!\"","apply_chat_template","\"<s>[INST] Hello, how are you? [/INST]I'm doing great. How can I help you today?</s> [INST] I'd like to show off how chat templating works! [/INST]\"","733","16289","28793","22557","28725","910","460","368","28804","28748","28737","28742","28719","2548","1598","28723","1602","541","315","1316","3154","28705","28715","737","298","1347","805","10706","5752","1077","3791","28808","\"should support multiple chat templates\"","\"Xenova/c4ai-command-r-v01-tokenizer\"","conversation","\"Whats the biggest penguin in the world?\"","documents","title","\"Tall penguins\"","\"Emperor penguins are the tallest growing up to 122 cm in height.\"","\"Penguin habitats\"","\"Emperor penguins only live in Antarctica.\"","grounded_generation_prompt","chat_template","\"rag\"","add_generation_prompt","citation_mode","\"accurate\"","\"<BOS_TOKEN><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|># Safety Preamble\nThe instructions in this section override those in the task description and style guide sections. Don't answer questions that are harmful or immoral.\n\n\"","\"# System Preamble\n## Basic Rules\nYou are a powerful conversational AI trained by Cohere to help people. You are augmented by a number of tools, and your job is to use and consume the output of these tools to best help the user. You will see a conversation history between yourself and a user, ending with an utterance from the user. You will then see a specific instruction instructing you what kind of response to generate. When you answer the user's requests, you cite your sources in your answers, according to those instructions.\n\n\"","\"# User Preamble\n## Task and Context\nYou help people answer their questions and other requests interactively. You will be asked a very wide array of requests on all kinds of topics. You will be equipped with a wide range of search engines or similar tools to help you, which you use to research your answer. You should focus on serving the user's needs as best you can, which will be wide-ranging.\n\n## Style Guide\nUnless the user asks for a different style of answer, you should answer in full sentences, using proper grammar and spelling.<|END_OF_TURN_TOKEN|>\"","\"<|START_OF_TURN_TOKEN|><|USER_TOKEN|>Whats the biggest penguin in the world?<|END_OF_TURN_TOKEN|>\"","\"<|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|><results>\nDocument: 0\ntitle: Tall penguins\ntext: Emperor penguins are the tallest growing up to 122 cm in height.\n\nDocument: 1\ntitle: Penguin habitats\ntext: Emperor penguins only live in Antarctica.\n</results><|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|>Carefully perform the following instructions, in order, starting each with a new line.\nFirstly, Decide which of the retrieved documents are relevant to the user's last input by writing 'Relevant Documents:' followed by comma-separated list of document numbers. If none are relevant, you should instead write 'None'.\nSecondly, Decide which of the retrieved documents contain facts that should be cited in a good answer to the user's last input by writing 'Cited Documents:' followed a comma-separated list of document numbers. If you dont want to cite any of them, you should instead write 'None'.\nThirdly, Write 'Answer:' followed by a response to the user's last input in high quality natural english. Use the retrieved documents to help you. Do not insert any citations or grounding markup.\nFinally, Write 'Grounded answer:' followed by a response to the user's last input in high quality natural english. Use the symbols <co: doc> and </co: doc> to indicate when a fact comes from a document in the search result, e.g <co: 0>my fact</co: 0> for a fact from document 0.<|END_OF_TURN_TOKEN|>\"","\"<|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>\"","\"should support automatic chat template detection based on inputs\"","\"Xenova/c4ai-command-r-plus-08-2024-tokenizer\"","messages","prompt","\"<BOS_TOKEN><|START_OF_TURN_TOKEN|><|USER_TOKEN|>Hello, how are you?<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>\"","tools","name","\"internet_search\"","description","\"Returns a list of relevant document snippets for a textual query retrieved from the internet\"","parameter_definitions","query","\"Query to search the internet with\"","type","\"str\"","required","\"directly_answer\"","\"Calls a standard (un-augmented) AI chatbot to generate a response given the conversation history\"","\"<BOS_TOKEN><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|># Safety Preamble\nThe instructions in this section override those in the task description and style guide sections. Don't answer questions that are harmful or immoral.\n\n# System Preamble\n## Basic Rules\nYou are a powerful conversational AI trained by Cohere to help people. You are augmented by a number of tools, and your job is to use and consume the output of these tools to best help the user. You will see a conversation history between yourself and a user, ending with an utterance from the user. You will then see a specific instruction instructing you what kind of response to generate. When you answer the user's requests, you cite your sources in your answers, according to those instructions.\n\n# User Preamble\n## Task and Context\nYou help people answer their questions and other requests interactively. You will be asked a very wide array of requests on all kinds of topics. You will be equipped with a wide range of search engines or similar tools to help you, which you use to research your answer. You should focus on serving the user's needs as best you can, which will be wide-ranging.\n\n## Style Guide\nUnless the user asks for a different style of answer, you should answer in full sentences, using proper grammar and spelling.\n\n## Available Tools\nHere is a list of tools that you have available to you:\n\n```python\ndef internet_search(query: str) -> List[Dict]:\n    \"\"\"Returns a list of relevant document snippets for a textual query retrieved from the internet\n\n    Args:\n        query (str): Query to search the internet with\n    \"\"\"\n    pass\n```\n\n```python\ndef directly_answer() -> List[Dict]:\n    \"\"\"Calls a standard (un-augmented) AI chatbot to generate a response given the conversation history\n    \"\"\"\n    pass\n```<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|USER_TOKEN|>Whats the biggest penguin in the world?<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|>Write 'Action:' followed by a json-formatted list of actions that you want to perform in order to produce a good response to the user's last input. You can use any of the supplied tools any number of times, but you should aim to execute the minimum number of necessary actions for the input. You should use the `directly-answer` tool if calling the other tools is unnecessary. The list of actions you want to call should be formatted as a list of json objects, for example:\n```json\n[\n    {\n        \"tool_name\": title of the tool in the specification,\n        \"parameters\": a dict of parameters to input into the tool as they are defined in the specs, or {} if it takes no parameters\n    }\n]```<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>\"","\"should support user-defined chat template\"","\"Xenova/llama-tokenizer\"","\"{% if messages[0]['role'] == 'system' %}\"","\"{% set loop_messages = messages[1:] %}\"","\"{% set system_message = messages[0]['content'] %}\"","\"{% elif USE_DEFAULT_PROMPT == true and not '<<SYS>>' in messages[0]['content'] %}\"","\"{% set loop_messages = messages %}\"","\"{% set system_message = 'DEFAULT_SYSTEM_MESSAGE' %}\"","\"{% else %}\"","\"{% set system_message = false %}\"","\"{% endif %}\"","\"{% if loop_messages|length == 0 and system_message %}\"","\"{{ bos_token + '[INST] <<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n [/INST]' }}\"","\"{% for message in loop_messages %}\"","\"{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}\"","\"{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}\"","\"{% if loop.index0 == 0 and system_message != false %}\"","\"{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}\"","\"{% set content = message['content'] %}\"","\"{% if message['role'] == 'user' %}\"","\"{{ bos_token + '[INST] ' + content.strip() + ' [/INST]' }}\"","\"{% elif message['role'] == 'system' %}\"","\"{{ '<<SYS>>\\n' + content.strip() + '\\n<</SYS>>\\n\\n' }}\"","\"{% elif message['role'] == 'assistant' %}\"","\"{{ ' '  + content.strip() + ' ' + eos_token }}\"","\"{% endfor %}\"","replaceAll","\"USE_DEFAULT_PROMPT\"","\"DEFAULT_SYSTEM_MESSAGE\"","\"You are a helpful, respectful and honest assistant.\"","\"<s>[INST] <<SYS>>\nYou are a helpful, respectful and honest assistant.\n<</SYS>>\n\nHello, how are you? [/INST] I'm doing great. How can I help you today? </s><s>[INST] I'd like to show off how chat templating works! [/INST]\"","\"should throw an error when no chat template is detected\"","\"Xenova/gpt-4o\"","\"tokenizer.chat_template is not set and no template argument was passed\"","\"should support default parameters\"","\"Xenova/Meta-Llama-3.1-Tokenizer\"","\"system\"","\"You are a bot that responds to weather queries.\"","\"Hey, what's the temperature in Paris right now?\"","\"function\"","function","\"get_current_temperature\"","\"Get the current temperature at a location.\"","parameters","\"object\"","properties","location","\"string\"","\"The location to get the temperature for, in the format \"City, Country\"\"","\"location\"","return","\"number\"","\"The current temperature at the specified location in the specified units, as a float.\"","\"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are a bot that responds to weather queries.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nHey, what's the temperature in Paris right now?<|eot_id|>\"","128006","9125","128007","271","38766","1303","33025","2696","25","6790","220","2366","18","198","15724","1627","10263","19","2675","527","264","11164","430","31680","311","9282","20126","13","128009","882","19182","11","1148","596","279","9499","304","12366","1314","1457","30","\"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nEnvironment: ipython\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are a bot that responds to weather queries.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nGiven the following functions, please respond with a JSON for a function call with its proper arguments that best answers the given prompt.\n\nRespond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.Do not use variables.\n\n{\n    \"type\": \"function\",\n    \"function\": {\n        \"name\": \"get_current_temperature\",\n        \"description\": \"Get the current temperature at a location.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"The location to get the temperature for, in the format \\\"City, Country\\\"\"\n                }\n            },\n            \"required\": [\n                \"location\"\n            ]\n        },\n        \"return\": {\n            \"type\": \"number\",\n            \"description\": \"The current temperature at the specified location in the specified units, as a float.\"\n        }\n    }\n}\n\nHey, what's the temperature in Paris right now?<|eot_id|>\"","13013","6125","27993","22818","2768","5865","4587","6013","449","4823","369","734","1650","1202","6300","6105","1888","11503","2728","10137","382","66454","3645","5324","609","794","836","330","14105","11240","5811","323","907","7966","5519","539","1005","7482","517","262","1337","1723","761","341","286","456","11327","54625","4789","1991","1510","520","3813","10560","310","1735","13495","394","2588","504","928","791","636","7393","13020","14438","2153","702","457","1173","6413","2330","5243","693","4174","5300","8316","439","2273","10246","633"]},"operators":{"distinct":22,"total":1316,"identifiers":["const","=","()","function=>","forof","[]",",","{}","forin","let",".","if",":","&&","for","<","++ (prefix)","``","${}","-","*","+"]}},"paramCount":0,"sloc":{"logical":430,"physical":525}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../src/tokenizers.js","type":"esm"},{"line":2,"path":"./init.js","type":"esm"},{"line":3,"path":"./test_utils.js","type":"esm"}],"errors":[],"lineEnd":525,"lineStart":1,"maintainability":92.976,"methods":[{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.017,"difficulty":4.083,"effort":211.542,"length":14,"time":11.752,"vocabulary":13,"volume":51.806,"operands":{"distinct":6,"total":7,"identifiers":["tokenizer_name","TOKENIZER_CLASS","TEST_CONFIG","CUSTOM_TESTS","TOKENIZER_TESTS","describe"]},"operators":{"distinct":7,"total":7,"identifiers":["forof","const","[]",",","{}","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":38},"errors":[],"lineEnd":43,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":40,"halstead":{"bugs":0.016,"difficulty":4,"effort":186.028,"length":14,"time":10.335,"vocabulary":10,"volume":46.507,"operands":{"distinct":5,"total":8,"identifiers":["model_id","TEST_CONFIG","describe","CUSTOM_TESTS","\"custom\""]},"operators":{"distinct":5,"total":6,"identifiers":["forin","const","()","function=>","&&"]}},"paramCount":0,"sloc":{"logical":5,"physical":34},"errors":[],"lineEnd":41,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.031,"difficulty":4.4,"effort":403.649,"length":22,"time":22.425,"vocabulary":18,"volume":91.738,"operands":{"distinct":10,"total":11,"identifiers":["tokenizer","beforeAll","MAX_TOKENIZER_LOAD_TIME","test_name","test_case","Object","entries","TEST_CONFIG","model_id","test"]},"operators":{"distinct":8,"total":11,"identifiers":["let","()","function=>","forof","const","[]",",","."]}},"paramCount":0,"sloc":{"logical":6,"physical":28},"errors":[],"lineEnd":37,"lineStart":10,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["tokenizer","TOKENIZER_CLASS","from_pretrained","model_id"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":4,"cyclomaticDensity":23.529,"halstead":{"bugs":0.117,"difficulty":11.308,"effort":3958.554,"length":81,"time":219.92,"vocabulary":20,"volume":350.076,"operands":{"distinct":13,"total":42,"identifiers":["test_case","ids","tokenizer","encode","text","text_pair","expect","toEqual","tokens","tokenize","pair","decoded","decode"]},"operators":{"distinct":7,"total":39,"identifiers":["if",".","const","=","()","{}",":"]}},"paramCount":0,"sloc":{"logical":17,"physical":18},"errors":[],"lineEnd":35,"lineStart":18,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.031,"difficulty":3.3,"effort":303.6,"length":23,"time":16.867,"vocabulary":16,"volume":92,"operands":{"distinct":10,"total":11,"identifiers":["inputs","\"a\"","\"b c\"","text_pair","\"d e\"","\"f g h\"","it","\"should create a jagged array\"","\"should create a tensor\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":6,"total":12,"identifiers":["const","=","[]",",","()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":142},"errors":[],"lineEnd":186,"lineStart":45,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.221,"difficulty":10.783,"effort":7158.167,"length":134,"time":397.676,"vocabulary":31,"volume":663.862,"operands":{"distinct":23,"total":62,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/bert-base-uncased\"","output","inputs","return_tensor","false","expected","input_ids","101","1037","102","1038","1039","attention_mask","1","token_type_ids","0","compare","truncation","true","add_special_tokens"]},"operators":{"distinct":8,"total":72,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":20,"physical":39},"errors":[],"lineEnd":87,"lineStart":49,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.37,"halstead":{"bugs":0.522,"difficulty":20.34,"effort":31871.53,"length":308,"time":1770.641,"vocabulary":34,"volume":1566.939,"operands":{"distinct":25,"total":113,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/bert-base-uncased\"","expect","toThrow","\"Unable to create tensor\"","input_ids","attention_mask","token_type_ids","inputs","truncation","true","max_length","1","add_special_tokens","false","tolist","toEqual","padding","text_pair","\"a\"","\"b c\"","\"d e f\"","2"]},"operators":{"distinct":9,"total":195,"identifiers":["const","=","()",".","function=>","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":73,"physical":93},"errors":[],"lineEnd":183,"lineStart":91,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["tokenizer","inputs"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":96,"lineStart":96,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":38.774,"length":10,"time":2.154,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should correctly add token type ids\"","MAX_TEST_EXECUTION_TIME","\"should add token type ids if user requests them\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":70},"errors":[],"lineEnd":257,"lineStart":188,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.264,"difficulty":9,"effort":7136.706,"length":149,"time":396.484,"vocabulary":40,"volume":792.967,"operands":{"distinct":32,"total":72,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/bert-base-uncased\"","model_inputs","\"a b c\"","\"d\"","text_pair","\"e f\"","\"g h\"","padding","true","truncation","return_tensor","false","expected","input_ids","101","1037","1038","1039","102","1041","1042","1040","1043","1044","0","token_type_ids","1","attention_mask","compare"]},"operators":{"distinct":8,"total":77,"identifiers":["const","=","()",".","[]",",","{}",":"]}},"paramCount":0,"sloc":{"logical":13,"physical":27},"errors":[],"lineEnd":217,"lineStart":191,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.165,"difficulty":9.455,"effort":4685.634,"length":101,"time":260.313,"vocabulary":30,"volume":495.596,"operands":{"distinct":22,"total":52,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/llama3-tokenizer-new\"","model_inputs","\"hello\"","return_tensor","false","return_token_type_ids","true","expected","input_ids","128000","15339","attention_mask","1","token_type_ids","0","compare","text_pair","\"world\"","14957"]},"operators":{"distinct":8,"total":49,"identifiers":["const","=","()",".","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":21,"physical":32},"errors":[],"lineEnd":254,"lineStart":223,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.021,"difficulty":1.714,"effort":108.683,"length":20,"time":6.038,"vocabulary":9,"volume":63.399,"operands":{"distinct":7,"total":12,"identifiers":["it","\"should not crash when encoding a very long string\"","MAX_TEST_EXECUTION_TIME","\"should not take too long\"","5000","\"Special/added tokens with earlier partial matches\"","\"many added tokens\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":45},"errors":[],"lineEnd":303,"lineStart":259,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.059,"difficulty":2.333,"effort":416.214,"length":40,"time":23.123,"vocabulary":22,"volume":178.377,"operands":{"distinct":18,"total":21,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/t5-small\"","text","String","prototype","repeat","call","\"Hello world! \"","50000","encoded","expect","input_ids","data","length","toBeGreaterThan","100000"]},"operators":{"distinct":4,"total":19,"identifiers":["let","=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":7},"errors":[],"lineEnd":268,"lineStart":262,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.057,"difficulty":3.529,"effort":606.689,"length":38,"time":33.705,"vocabulary":23,"volume":171.895,"operands":{"distinct":17,"total":20,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/all-MiniLM-L6-v2\"","text","String","prototype","repeat","call","\"a\"","50000","token_ids","encode","compare","101","100","102"]},"operators":{"distinct":6,"total":18,"identifiers":["let","=","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":7,"physical":7},"errors":[],"lineEnd":278,"lineStart":272,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.061,"difficulty":5.923,"effort":1075.163,"length":42,"time":59.731,"vocabulary":20,"volume":181.521,"operands":{"distinct":13,"total":22,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/gemini-nano\"","token_ids","encode","\"\n\"","add_special_tokens","false","compare","108","\"\n\n\"","109"]},"operators":{"distinct":7,"total":20,"identifiers":["let","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":10,"physical":11},"errors":[],"lineEnd":292,"lineStart":282,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.044,"difficulty":3.692,"effort":486.224,"length":31,"time":27.012,"vocabulary":19,"volume":131.686,"operands":{"distinct":13,"total":16,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"onnx-community/orpheus-3b-0.1-ft-ONNX\"","text","\"hello world!\"","token_ids","encode","compare","128000","15339","1917","0"]},"operators":{"distinct":6,"total":15,"identifiers":["let","=","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":302,"lineStart":296,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["it","\"should not leak memory\"","30000"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":16},"errors":[],"lineEnd":320,"lineStart":305,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":13.333,"halstead":{"bugs":0.137,"difficulty":10.435,"effort":4281.836,"length":80,"time":237.88,"vocabulary":35,"volume":410.343,"operands":{"distinct":23,"total":40,"identifiers":["id","\"TinyLlama/TinyLlama-1.1B-Chat-v1.0\"","tokenizer","AutoTokenizer","from_pretrained","startMemory","process","memoryUsage","heapUsed","i","0","2500","s"," ","repeat","encode","endMemory","memoryUsed","memoryLimit","100","1024","expect","toBeLessThan"]},"operators":{"distinct":12,"total":40,"identifiers":["const","=","()",".","for","let","<","++ (prefix)","``","${}","-","*"]}},"paramCount":0,"sloc":{"logical":15,"physical":14},"errors":[],"lineEnd":319,"lineStart":306,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["it","\"should be able to decode the output of encode\"","MAX_TEST_EXECUTION_TIME"]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":26},"errors":[],"lineEnd":347,"lineStart":322,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.571,"halstead":{"bugs":0.189,"difficulty":9.545,"effort":5425.482,"length":117,"time":301.416,"vocabulary":29,"volume":568.384,"operands":{"distinct":22,"total":60,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/bert-base-uncased\"","text","\"hello world!\"","encodedTensor","decoded1","decode","input_ids","skip_special_tokens","true","decoded2","batch_decode","0","expect","toEqual","encodedList","return_tensor","false","decoded3","decoded4"]},"operators":{"distinct":7,"total":57,"identifiers":["let","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":28,"physical":20},"errors":[],"lineEnd":344,"lineStart":325,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.025,"difficulty":1.714,"effort":130.42,"length":24,"time":7.246,"vocabulary":9,"volume":76.078,"operands":{"distinct":7,"total":12,"identifiers":["it","\"should generate a chat template\"","\"should support multiple chat templates\"","\"should support automatic chat template detection based on inputs\"","\"should support user-defined chat template\"","\"should throw an error when no chat template is detected\"","\"should support default parameters\""]},"operators":{"distinct":2,"total":12,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":176},"errors":[],"lineEnd":524,"lineStart":349,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.341,"difficulty":6.035,"effort":6178.738,"length":170,"time":343.263,"vocabulary":65,"volume":1023.803,"operands":{"distinct":57,"total":86,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/mistral-tokenizer-v1\"","chat","role","\"user\"","content","\"Hello, how are you?\"","\"assistant\"","\"I'm doing great. How can I help you today?\"","\"I'd like to show off how chat templating works!\"","text","apply_chat_template","tokenize","false","expect","toEqual","\"<s>[INST] Hello, how are you? [/INST]I'm doing great. How can I help you today?</s> [INST] I'd like to show off how chat templating works! [/INST]\"","input_ids","true","return_tensor","compare","1","733","16289","28793","22557","28725","910","460","368","28804","28748","28737","28742","28719","2548","1598","28723","1602","541","315","1316","3154","2","28705","28715","737","298","1347","805","10706","5752","1077","3791","28808"]},"operators":{"distinct":8,"total":84,"identifiers":["const","=","()",".","[]",",","{}",":"]}},"paramCount":0,"sloc":{"logical":19,"physical":16},"errors":[],"lineEnd":365,"lineStart":350,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.141,"difficulty":5.426,"effort":2296.746,"length":78,"time":127.597,"vocabulary":43,"volume":423.249,"operands":{"distinct":34,"total":41,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/c4ai-command-r-v01-tokenizer\"","conversation","role","\"user\"","content","\"Whats the biggest penguin in the world?\"","documents","title","\"Tall penguins\"","text","\"Emperor penguins are the tallest growing up to 122 cm in height.\"","\"Penguin habitats\"","\"Emperor penguins only live in Antarctica.\"","grounded_generation_prompt","apply_chat_template","chat_template","\"rag\"","tokenize","false","add_generation_prompt","true","citation_mode","\"accurate\"","expect","toEqual","\"<BOS_TOKEN><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|># Safety Preamble\nThe instructions in this section override those in the task description and style guide sections. Don't answer questions that are harmful or immoral.\n\n\"","\"# System Preamble\n## Basic Rules\nYou are a powerful conversational AI trained by Cohere to help people. You are augmented by a number of tools, and your job is to use and consume the output of these tools to best help the user. You will see a conversation history between yourself and a user, ending with an utterance from the user. You will then see a specific instruction instructing you what kind of response to generate. When you answer the user's requests, you cite your sources in your answers, according to those instructions.\n\n\"","\"# User Preamble\n## Task and Context\nYou help people answer their questions and other requests interactively. You will be asked a very wide array of requests on all kinds of topics. You will be equipped with a wide range of search engines or similar tools to help you, which you use to research your answer. You should focus on serving the user's needs as best you can, which will be wide-ranging.\n\n## Style Guide\nUnless the user asks for a different style of answer, you should answer in full sentences, using proper grammar and spelling.<|END_OF_TURN_TOKEN|>\"","\"<|START_OF_TURN_TOKEN|><|USER_TOKEN|>Whats the biggest penguin in the world?<|END_OF_TURN_TOKEN|>\"","\"<|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|><results>\nDocument: 0\ntitle: Tall penguins\ntext: Emperor penguins are the tallest growing up to 122 cm in height.\n\nDocument: 1\ntitle: Penguin habitats\ntext: Emperor penguins only live in Antarctica.\n</results><|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|>Carefully perform the following instructions, in order, starting each with a new line.\nFirstly, Decide which of the retrieved documents are relevant to the user's last input by writing 'Relevant Documents:' followed by comma-separated list of document numbers. If none are relevant, you should instead write 'None'.\nSecondly, Decide which of the retrieved documents contain facts that should be cited in a good answer to the user's last input by writing 'Cited Documents:' followed a comma-separated list of document numbers. If you dont want to cite any of them, you should instead write 'None'.\nThirdly, Write 'Answer:' followed by a response to the user's last input in high quality natural english. Use the retrieved documents to help you. Do not insert any citations or grounding markup.\nFinally, Write 'Grounded answer:' followed by a response to the user's last input in high quality natural english. Use the symbols <co: doc> and </co: doc> to indicate when a fact comes from a document in the search result, e.g <co: 0>my fact</co: 0> for a fact from document 0.<|END_OF_TURN_TOKEN|>\"","\"<|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>\""]},"operators":{"distinct":9,"total":37,"identifiers":["const","=","()",".","[]","{}",":",",","+"]}},"paramCount":0,"sloc":{"logical":19,"physical":22},"errors":[],"lineEnd":388,"lineStart":367,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.125,"halstead":{"bugs":0.203,"difficulty":6.824,"effort":4157.794,"length":113,"time":230.989,"vocabulary":42,"volume":609.332,"operands":{"distinct":34,"total":58,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/c4ai-command-r-plus-08-2024-tokenizer\"","messages","role","\"user\"","content","\"Hello, how are you?\"","prompt","apply_chat_template","tokenize","false","add_generation_prompt","true","expect","toEqual","\"<BOS_TOKEN><|START_OF_TURN_TOKEN|><|USER_TOKEN|>Hello, how are you?<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>\"","conversation","\"Whats the biggest penguin in the world?\"","tools","name","\"internet_search\"","description","\"Returns a list of relevant document snippets for a textual query retrieved from the internet\"","parameter_definitions","query","\"Query to search the internet with\"","type","\"str\"","required","\"directly_answer\"","\"Calls a standard (un-augmented) AI chatbot to generate a response given the conversation history\"","\"<BOS_TOKEN><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|># Safety Preamble\nThe instructions in this section override those in the task description and style guide sections. Don't answer questions that are harmful or immoral.\n\n# System Preamble\n## Basic Rules\nYou are a powerful conversational AI trained by Cohere to help people. You are augmented by a number of tools, and your job is to use and consume the output of these tools to best help the user. You will see a conversation history between yourself and a user, ending with an utterance from the user. You will then see a specific instruction instructing you what kind of response to generate. When you answer the user's requests, you cite your sources in your answers, according to those instructions.\n\n# User Preamble\n## Task and Context\nYou help people answer their questions and other requests interactively. You will be asked a very wide array of requests on all kinds of topics. You will be equipped with a wide range of search engines or similar tools to help you, which you use to research your answer. You should focus on serving the user's needs as best you can, which will be wide-ranging.\n\n## Style Guide\nUnless the user asks for a different style of answer, you should answer in full sentences, using proper grammar and spelling.\n\n## Available Tools\nHere is a list of tools that you have available to you:\n\n```python\ndef internet_search(query: str) -> List[Dict]:\n    \"\"\"Returns a list of relevant document snippets for a textual query retrieved from the internet\n\n    Args:\n        query (str): Query to search the internet with\n    \"\"\"\n    pass\n```\n\n```python\ndef directly_answer() -> List[Dict]:\n    \"\"\"Calls a standard (un-augmented) AI chatbot to generate a response given the conversation history\n    \"\"\"\n    pass\n```<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|USER_TOKEN|>Whats the biggest penguin in the world?<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|SYSTEM_TOKEN|>Write 'Action:' followed by a json-formatted list of actions that you want to perform in order to produce a good response to the user's last input. You can use any of the supplied tools any number of times, but you should aim to execute the minimum number of necessary actions for the input. You should use the `directly-answer` tool if calling the other tools is unnecessary. The list of actions you want to call should be formatted as a list of json objects, for example:\n```json\n[\n    {\n        \"tool_name\": title of the tool in the specification,\n        \"parameters\": a dict of parameters to input into the tool as they are defined in the specs, or {} if it takes no parameters\n    }\n]```<|END_OF_TURN_TOKEN|><|START_OF_TURN_TOKEN|><|CHATBOT_TOKEN|>\""]},"operators":{"distinct":8,"total":55,"identifiers":["const","=","()",".","[]","{}",":",","]}},"paramCount":0,"sloc":{"logical":32,"physical":45},"errors":[],"lineEnd":434,"lineStart":390,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.257,"difficulty":6.12,"effort":4716.233,"length":131,"time":262.013,"vocabulary":59,"volume":770.626,"operands":{"distinct":50,"total":68,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/llama-tokenizer\"","chat","role","\"user\"","content","\"Hello, how are you?\"","\"assistant\"","\"I'm doing great. How can I help you today?\"","\"I'd like to show off how chat templating works!\"","chat_template","\"{% if messages[0]['role'] == 'system' %}\"","\"{% set loop_messages = messages[1:] %}\"","\"{% set system_message = messages[0]['content'] %}\"","\"{% elif USE_DEFAULT_PROMPT == true and not '<<SYS>>' in messages[0]['content'] %}\"","\"{% set loop_messages = messages %}\"","\"{% set system_message = 'DEFAULT_SYSTEM_MESSAGE' %}\"","\"{% else %}\"","\"{% set system_message = false %}\"","\"{% endif %}\"","\"{% if loop_messages|length == 0 and system_message %}\"","\"{{ bos_token + '[INST] <<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n [/INST]' }}\"","\"{% for message in loop_messages %}\"","\"{% if (message['role'] == 'user') != (loop.index0 % 2 == 0) %}\"","\"{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}\"","\"{% if loop.index0 == 0 and system_message != false %}\"","\"{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}\"","\"{% set content = message['content'] %}\"","\"{% if message['role'] == 'user' %}\"","\"{{ bos_token + '[INST] ' + content.strip() + ' [/INST]' }}\"","\"{% elif message['role'] == 'system' %}\"","\"{{ '<<SYS>>\\n' + content.strip() + '\\n<</SYS>>\\n\\n' }}\"","\"{% elif message['role'] == 'assistant' %}\"","\"{{ ' '  + content.strip() + ' ' + eos_token }}\"","\"{% endfor %}\"","replaceAll","\"USE_DEFAULT_PROMPT\"","true","\"DEFAULT_SYSTEM_MESSAGE\"","\"You are a helpful, respectful and honest assistant.\"","text","apply_chat_template","tokenize","false","return_tensor","expect","toEqual","\"<s>[INST] <<SYS>>\nYou are a helpful, respectful and honest assistant.\n<</SYS>>\n\nHello, how are you? [/INST] I'm doing great. How can I help you today? </s><s>[INST] I'd like to show off how chat templating works! [/INST]\""]},"operators":{"distinct":9,"total":63,"identifiers":["const","=","()",".","[]",",","{}",":","+"]}},"paramCount":0,"sloc":{"logical":19,"physical":51},"errors":[],"lineEnd":486,"lineStart":436,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.037,"difficulty":4,"effort":449.481,"length":26,"time":24.971,"vocabulary":20,"volume":112.37,"operands":{"distinct":12,"total":12,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/gpt-4o\"","chat","role","\"user\"","content","\"Hello, how are you?\"","expect","toThrow","\"tokenizer.chat_template is not set and no template argument was passed\""]},"operators":{"distinct":8,"total":14,"identifiers":["const","=","()",".","[]","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":7},"errors":[],"lineEnd":494,"lineStart":488,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":2,"effort":57.059,"length":9,"time":3.17,"vocabulary":9,"volume":28.529,"operands":{"distinct":5,"total":5,"identifiers":["tokenizer","apply_chat_template","chat","tokenize","false"]},"operators":{"distinct":4,"total":4,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":493,"lineStart":493,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.273,"halstead":{"bugs":1.873,"difficulty":9.205,"effort":51725.767,"length":755,"time":2873.654,"vocabulary":174,"volume":5619.422,"operands":{"distinct":166,"total":382,"identifiers":["tokenizer","AutoTokenizer","from_pretrained","\"Xenova/Meta-Llama-3.1-Tokenizer\"","chat","role","\"system\"","content","\"You are a bot that responds to weather queries.\"","\"user\"","\"Hey, what's the temperature in Paris right now?\"","tools","type","\"function\"","function","name","\"get_current_temperature\"","description","\"Get the current temperature at a location.\"","parameters","\"object\"","properties","location","\"string\"","\"The location to get the temperature for, in the format \"City, Country\"\"","required","\"location\"","return","\"number\"","\"The current temperature at the specified location in the specified units, as a float.\"","text","apply_chat_template","tokenize","false","expect","toEqual","\"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are a bot that responds to weather queries.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nHey, what's the temperature in Paris right now?<|eot_id|>\"","input_ids","true","return_tensor","compare","128000","128006","9125","128007","271","38766","1303","33025","2696","25","6790","220","2366","18","198","15724","1627","10263","19","2675","527","264","11164","430","31680","311","9282","20126","13","128009","882","19182","11","1148","596","279","9499","304","12366","1314","1457","30","\"<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nEnvironment: ipython\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\nYou are a bot that responds to weather queries.<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nGiven the following functions, please respond with a JSON for a function call with its proper arguments that best answers the given prompt.\n\nRespond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.Do not use variables.\n\n{\n    \"type\": \"function\",\n    \"function\": {\n        \"name\": \"get_current_temperature\",\n        \"description\": \"Get the current temperature at a location.\",\n        \"parameters\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"location\": {\n                    \"type\": \"string\",\n                    \"description\": \"The location to get the temperature for, in the format \\\"City, Country\\\"\"\n                }\n            },\n            \"required\": [\n                \"location\"\n            ]\n        },\n        \"return\": {\n            \"type\": \"number\",\n            \"description\": \"The current temperature at the specified location in the specified units, as a float.\"\n        }\n    }\n}\n\nHey, what's the temperature in Paris right now?<|eot_id|>\"","13013","6125","27993","22818","2768","5865","4587","6013","449","4823","369","734","1650","1202","6300","6105","1888","11503","2728","10137","382","66454","3645","5324","609","794","836","330","14105","11240","315","5811","323","907","7966","5519","539","1005","7482","517","262","1337","1723","761","341","286","456","11327","54625","4789","1991","1510","520","3813","10560","310","1735","13495","394","2588","504","928","791","636","7393","13020","14438","2153","702","457","1173","6413","2330","5243","693","4174","5300","8316","439","2273","10246","633"]},"operators":{"distinct":8,"total":373,"identifiers":["const","=","()",".","[]",",","{}",":"]}},"paramCount":0,"sloc":{"logical":44,"physical":28},"errors":[],"lineEnd":523,"lineStart":496,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.167,"cyclomaticDensity":0.271,"halstead":{"bugs":0.251,"difficulty":1.14,"effort":25759.734,"length":86.133,"time":1431.096,"vocabulary":14.333,"volume":753.511,"operands":{"distinct":13.6,"total":42.267},"operators":{"distinct":0.733,"total":43.867}},"paramCount":0,"sloc":{"logical":14.333,"physical":17.5}},"methodAverage":{"cyclomatic":1.172,"cyclomaticDensity":18.353,"halstead":{"bugs":0.168,"difficulty":5.54,"effort":4762.82,"length":87.931,"time":264.601,"vocabulary":28.138,"volume":503.241,"operands":{"distinct":22.069,"total":43.138},"operators":{"distinct":6.069,"total":44.793}},"paramCount":0,"sloc":{"logical":14.276,"physical":35.31}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/utils/data_structures.test.js","testCases":11,"smells":17,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  24 |     const arr = Array.from({ length: 100 }, (_) => Math.random());\n  25 |     const max = Math.max(...arr);\n> 26 |     for (const size of sizes) {\n     |    ^ Conditional Test Logic\n  27 |       const queue = new PriorityQueue((a, b) => a > b, size);\n  28 |       queue.extend(arr);\n  29 |       expect(queue.pop()).toBe(max);","start":{"line":26,"column":4,"index":844}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  18 |     const queue = new PriorityQueue((a, b) => a > b, 3);\n  19 |     queue.extend([1, 2, 3, 4, 5, 4, 3, 2, 1]);\n> 20 |     expect(queue.pop()).toBe(5);\n     |    ^ Duplicate Assert\n  21 |\n  22 |     // Test with random sizes\n  23 |     const sizes = [1, 3, 4, 5, 8, 9, 15, 16, 31, 32, 127, 128];","start":{"line":20,"column":4,"index":615}},{"frame":"  27 |       const queue = new PriorityQueue((a, b) => a > b, size);\n  28 |       queue.extend(arr);\n> 29 |       expect(queue.pop()).toBe(max);\n     |      ^ Duplicate Assert\n  30 |       expect(queue.size).toBeLessThanOrEqual(size);\n  31 |     }\n  32 |   });","start":{"line":29,"column":6,"index":965}},{"frame":"  101 |     cache.put(\"c\", \"cherry\");\n  102 |     // Access \"a\" making it most recently used.\n> 103 |     expect(cache.get(\"a\")).toEqual(\"apple\");\n      |    ^ Duplicate Assert\n  104 |     // Insert new element to evict the least recently used (\"b\").\n  105 |     cache.put(\"d\", \"date\");\n  106 |     expect(cache.get(\"b\")).toEqual(undefined);","start":{"line":103,"column":4,"index":3407}},{"frame":"  101 |     cache.put(\"c\", \"cherry\");\n  102 |     // Access \"a\" making it most recently used.\n> 103 |     expect(cache.get(\"a\")).toEqual(\"apple\");\n      |    ^ Duplicate Assert\n  104 |     // Insert new element to evict the least recently used (\"b\").\n  105 |     cache.put(\"d\", \"date\");\n  106 |     expect(cache.get(\"b\")).toEqual(undefined);","start":{"line":103,"column":4,"index":3407}},{"frame":"  106 |     expect(cache.get(\"b\")).toEqual(undefined);\n  107 |     // \"a\", \"c\", and \"d\" should be present.\n> 108 |     expect(cache.get(\"a\")).toEqual(\"apple\");\n      |    ^ Duplicate Assert\n  109 |     expect(cache.get(\"c\")).toEqual(\"cherry\");\n  110 |     expect(cache.get(\"d\")).toEqual(\"date\");\n  111 |   });","start":{"line":108,"column":4,"index":3637}},{"frame":"  106 |     expect(cache.get(\"b\")).toEqual(undefined);\n  107 |     // \"a\", \"c\", and \"d\" should be present.\n> 108 |     expect(cache.get(\"a\")).toEqual(\"apple\");\n      |    ^ Duplicate Assert\n  109 |     expect(cache.get(\"c\")).toEqual(\"cherry\");\n  110 |     expect(cache.get(\"d\")).toEqual(\"date\");\n  111 |   });","start":{"line":108,"column":4,"index":3637}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"   6 |     const queue = new PriorityQueue();\n   7 |     queue.extend(EXAMPLE_ARRAY);\n>  8 |     expect(queue.pop()).toBe(5);\n     |                             ^ Magic Number\n   9 |   });\n  10 |\n  11 |   it(\"min heap\", () => {","start":{"line":8,"column":29,"index":311}},{"frame":"  12 |     const queue = new PriorityQueue((a, b) => a < b);\n  13 |     queue.extend(EXAMPLE_ARRAY);\n> 14 |     expect(queue.pop()).toBe(1);\n     |                             ^ Magic Number\n  15 |   });\n  16 |\n  17 |   it(\"heap w/ max size\", () => {","start":{"line":14,"column":29,"index":463}},{"frame":"  18 |     const queue = new PriorityQueue((a, b) => a > b, 3);\n  19 |     queue.extend([1, 2, 3, 4, 5, 4, 3, 2, 1]);\n> 20 |     expect(queue.pop()).toBe(5);\n     |                             ^ Magic Number\n  21 |\n  22 |     // Test with random sizes\n  23 |     const sizes = [1, 3, 4, 5, 8, 9, 15, 16, 31, 32, 127, 128];","start":{"line":20,"column":29,"index":640}},{"frame":"  61 |     cache.put(\"a\", 1);\n  62 |     cache.put(\"b\", 2);\n> 63 |     expect(cache.get(\"a\")).toEqual(1);\n     |                                   ^ Magic Number\n  64 |     expect(cache.get(\"b\")).toEqual(2);\n  65 |   });\n  66 |","start":{"line":63,"column":35,"index":2128}},{"frame":"  62 |     cache.put(\"b\", 2);\n  63 |     expect(cache.get(\"a\")).toEqual(1);\n> 64 |     expect(cache.get(\"b\")).toEqual(2);\n     |                                   ^ Magic Number\n  65 |   });\n  66 |\n  67 |   it(\"should update the value and refresh the usage\", () => {","start":{"line":64,"column":35,"index":2167}},{"frame":"  71 |     // Update key \"a\"\n  72 |     cache.put(\"a\", 10);\n> 73 |     expect(cache.get(\"a\")).toEqual(10);\n     |                                   ^ Magic Number\n  74 |     // Access \"a\" so \"b\" becomes the LRU\n  75 |     cache.get(\"a\");\n  76 |     cache.put(\"c\", 3);","start":{"line":73,"column":35,"index":2402}},{"frame":"  77 |     // \"b\" should be evicted since it is the least recently used.\n  78 |     expect(cache.get(\"b\")).toEqual(undefined);\n> 79 |     expect(cache.get(\"c\")).toEqual(3);\n     |                                   ^ Magic Number\n  80 |   });\n  81 |\n  82 |   it(\"should evict the least recently used item when capacity is exceeded\", () => {","start":{"line":79,"column":35,"index":2639}},{"frame":"  90 |     cache.put(\"d\", 4);\n  91 |     expect(cache.get(\"b\")).toEqual(undefined);\n> 92 |     expect(cache.get(\"a\")).toEqual(1);\n     |                                   ^ Magic Number\n  93 |     expect(cache.get(\"c\")).toEqual(3);\n  94 |     expect(cache.get(\"d\")).toEqual(4);\n  95 |   });","start":{"line":92,"column":35,"index":3089}},{"frame":"  91 |     expect(cache.get(\"b\")).toEqual(undefined);\n  92 |     expect(cache.get(\"a\")).toEqual(1);\n> 93 |     expect(cache.get(\"c\")).toEqual(3);\n     |                                   ^ Magic Number\n  94 |     expect(cache.get(\"d\")).toEqual(4);\n  95 |   });\n  96 |","start":{"line":93,"column":35,"index":3128}},{"frame":"  92 |     expect(cache.get(\"a\")).toEqual(1);\n  93 |     expect(cache.get(\"c\")).toEqual(3);\n> 94 |     expect(cache.get(\"d\")).toEqual(4);\n     |                                   ^ Magic Number\n  95 |   });\n  96 |\n  97 |   it(\"should update the usage order on get\", () => {","start":{"line":94,"column":35,"index":3167}}]}],"metrics":{"aggregate":{"cyclomatic":19,"cyclomaticDensity":12.102,"halstead":{"bugs":1.498,"difficulty":30.952,"effort":139114.156,"length":681,"time":7728.564,"vocabulary":97,"volume":4494.541,"operands":{"distinct":83,"total":367,"identifiers":["describe","\"Priority queue\"","EXAMPLE_ARRAY","2","5","3","1","4","it","\"default (max heap)\"","queue","PriorityQueue","extend","expect","pop","toBe","\"min heap\"","a","b","\"heap w/ max size\"","sizes","8","9","15","16","31","32","127","128","arr","Array","from","length","100","_","Math","random","max","size","toBeLessThanOrEqual","\"Dictionary splitter\"","\"should split on a defined dictionary\"","splitter","DictionarySplitter","\"a\"","\"b\"","\"c\"","\"abc\"","text","\".a.b.cc.abcdef.\"","expected","\".\"","\"def.\"","result","split","toEqual","\"should handle multi-byte characters\"","\"before🤗after\ud83etest\"","\"🤗\"","\"\ud83e\"","\"before\"","\"after\"","\"test\"","\"LRUCache\"","\"should return undefined for non-existent keys\"","cache","LRUCache","get","\"nonexistent\"","undefined","\"should store and retrieve values correctly\"","put","\"should update the value and refresh the usage\"","10","\"should evict the least recently used item when capacity is exceeded\"","\"d\"","\"should update the usage order on get\"","\"apple\"","\"banana\"","\"cherry\"","\"date\"","\"should clear the cache\"","clear"]},"operators":{"distinct":14,"total":314,"identifiers":["()","function=>","const","=","[]",",","new",".","<",">","{}",":","... (spread)","forof"]}},"paramCount":7,"sloc":{"logical":157,"physical":122}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/utils/data-structures.js","type":"esm"}],"errors":[],"lineEnd":122,"lineStart":1,"maintainability":106.355,"methods":[{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.033,"difficulty":3.6,"effort":360,"length":25,"time":20,"vocabulary":16,"volume":100,"operands":{"distinct":10,"total":12,"identifiers":["EXAMPLE_ARRAY","2","5","3","1","4","it","\"default (max heap)\"","\"min heap\"","\"heap w/ max size\""]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","[]",",","()","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":31},"errors":[],"lineEnd":33,"lineStart":3,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.025,"difficulty":3.125,"effort":231.277,"length":20,"time":12.849,"vocabulary":13,"volume":74.009,"operands":{"distinct":8,"total":10,"identifiers":["queue","PriorityQueue","extend","EXAMPLE_ARRAY","expect","pop","toBe","5"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","new","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":9,"lineStart":5,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.031,"difficulty":3.6,"effort":331.2,"length":23,"time":18.4,"vocabulary":16,"volume":92,"operands":{"distinct":10,"total":12,"identifiers":["queue","PriorityQueue","a","b","extend","EXAMPLE_ARRAY","expect","pop","toBe","1"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","new","function=>","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":15,"lineStart":11,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["a","b"]},"operators":{"distinct":1,"total":1,"identifiers":["<"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":12,"lineStart":12,"name":"<anon method-4>","paramNames":["a","b"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.231,"difficulty":12,"effort":8320.174,"length":127,"time":462.232,"vocabulary":44,"volume":693.348,"operands":{"distinct":32,"total":64,"identifiers":["queue","PriorityQueue","a","b","3","extend","1","2","4","5","expect","pop","toBe","sizes","8","9","15","16","31","32","127","128","arr","Array","from","length","100","_","max","Math","size","toBeLessThanOrEqual"]},"operators":{"distinct":12,"total":63,"identifiers":["const","=","new","function=>","()",".","[]",",","{}",":","... (spread)","forof"]}},"paramCount":0,"sloc":{"logical":22,"physical":16},"errors":[],"lineEnd":32,"lineStart":17,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["a","b"]},"operators":{"distinct":1,"total":1,"identifiers":[">"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":18,"lineStart":18,"name":"<anon method-6>","paramNames":["a","b"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["Math","random"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":24,"lineStart":24,"name":"<anon method-7>","paramNames":["_"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["a","b"]},"operators":{"distinct":1,"total":1,"identifiers":[">"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":27,"lineStart":27,"name":"<anon method-8>","paramNames":["a","b"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should split on a defined dictionary\"","\"should handle multi-byte characters\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":17},"errors":[],"lineEnd":51,"lineStart":35,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.082,"difficulty":6.3,"effort":1545.193,"length":55,"time":85.844,"vocabulary":22,"volume":245.269,"operands":{"distinct":15,"total":27,"identifiers":["splitter","DictionarySplitter","\"a\"","\"b\"","\"c\"","\"abc\"","text","\".a.b.cc.abcdef.\"","expected","\".\"","\"def.\"","result","split","expect","toEqual"]},"operators":{"distinct":7,"total":28,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":7},"errors":[],"lineEnd":42,"lineStart":36,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.06,"difficulty":5,"effort":900.425,"length":41,"time":50.024,"vocabulary":21,"volume":180.085,"operands":{"distinct":14,"total":20,"identifiers":["text","\"before🤗after\ud83etest\"","splitter","DictionarySplitter","\"🤗\"","\"\ud83e\"","expected","\"before\"","\"after\"","\"test\"","result","split","expect","toEqual"]},"operators":{"distinct":7,"total":21,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":7},"errors":[],"lineEnd":50,"lineStart":44,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.025,"difficulty":1.714,"effort":130.42,"length":24,"time":7.246,"vocabulary":9,"volume":76.078,"operands":{"distinct":7,"total":12,"identifiers":["it","\"should return undefined for non-existent keys\"","\"should store and retrieve values correctly\"","\"should update the value and refresh the usage\"","\"should evict the least recently used item when capacity is exceeded\"","\"should update the usage order on get\"","\"should clear the cache\""]},"operators":{"distinct":2,"total":12,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":69},"errors":[],"lineEnd":121,"lineStart":53,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.021,"difficulty":2.813,"effort":176.927,"length":17,"time":9.829,"vocabulary":13,"volume":62.907,"operands":{"distinct":8,"total":9,"identifiers":["cache","LRUCache","2","expect","get","\"nonexistent\"","toEqual","undefined"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","new","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":57,"lineStart":54,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.052,"difficulty":5.75,"effort":898.585,"length":40,"time":49.921,"vocabulary":15,"volume":156.276,"operands":{"distinct":10,"total":23,"identifiers":["cache","LRUCache","2","put","\"a\"","1","\"b\"","expect","get","toEqual"]},"operators":{"distinct":5,"total":17,"identifiers":["const","=","new","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":7},"errors":[],"lineEnd":65,"lineStart":59,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.096,"difficulty":7.143,"effort":2063.279,"length":68,"time":114.627,"vocabulary":19,"volume":288.859,"operands":{"distinct":14,"total":40,"identifiers":["cache","LRUCache","2","put","\"a\"","1","\"b\"","10","expect","get","toEqual","\"c\"","3","undefined"]},"operators":{"distinct":5,"total":28,"identifiers":["const","=","new","()","."]}},"paramCount":0,"sloc":{"logical":15,"physical":14},"errors":[],"lineEnd":80,"lineStart":67,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.114,"difficulty":7.667,"effort":2617.648,"length":79,"time":145.425,"vocabulary":20,"volume":341.432,"operands":{"distinct":15,"total":46,"identifiers":["cache","LRUCache","3","put","\"a\"","1","\"b\"","2","\"c\"","get","\"d\"","4","expect","toEqual","undefined"]},"operators":{"distinct":5,"total":33,"identifiers":["const","=","new","()","."]}},"paramCount":0,"sloc":{"logical":18,"physical":14},"errors":[],"lineEnd":95,"lineStart":82,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.124,"difficulty":7.656,"effort":2858.438,"length":85,"time":158.802,"vocabulary":21,"volume":373.347,"operands":{"distinct":16,"total":49,"identifiers":["cache","LRUCache","3","put","\"a\"","\"apple\"","\"b\"","\"banana\"","\"c\"","\"cherry\"","expect","get","toEqual","\"d\"","\"date\"","undefined"]},"operators":{"distinct":5,"total":36,"identifiers":["const","=","new","()","."]}},"paramCount":0,"sloc":{"logical":20,"physical":15},"errors":[],"lineEnd":111,"lineStart":97,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.06,"difficulty":5.208,"effort":936.71,"length":44,"time":52.039,"vocabulary":17,"volume":179.848,"operands":{"distinct":12,"total":25,"identifiers":["cache","LRUCache","2","put","\"a\"","1","\"b\"","clear","expect","get","toEqual","undefined"]},"operators":{"distinct":5,"total":19,"identifiers":["const","=","new","()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":8},"errors":[],"lineEnd":120,"lineStart":113,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.637,"halstead":{"bugs":0.079,"difficulty":1.629,"effort":7321.798,"length":35.842,"time":406.767,"vocabulary":5.105,"volume":236.555,"operands":{"distinct":4.368,"total":19.316},"operators":{"distinct":0.737,"total":16.526}},"paramCount":0.368,"sloc":{"logical":8.263,"physical":6.421}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":29.485,"halstead":{"bugs":0.054,"difficulty":4.189,"effort":1189.454,"length":37.167,"time":66.081,"vocabulary":14.667,"volume":161.35,"operands":{"distinct":10.111,"total":20.056},"operators":{"distinct":4.556,"total":17.111}},"paramCount":0.389,"sloc":{"logical":8.389,"physical":12.389}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/utils/generation.test.js","testCases":11,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  56 |       async () => {\n  57 |         const outputs = await generate(model, tokenizer, DUMMY_TEXT, {});\n> 58 |         expect(outputs.dims.at(-1)).toEqual(20);\n     |                                            ^ Magic Number\n  59 |       },\n  60 |       MAX_TEST_EXECUTION_TIME,\n  61 |     );","start":{"line":58,"column":44,"index":1549}},{"frame":"  125 |       async () => {\n  126 |         const outputs = await generate(model, tokenizer, DUMMY_TEXT, {});\n> 127 |         expect(outputs.dims.at(-1)).toEqual(20);\n      |                                            ^ Magic Number\n  128 |       },\n  129 |       MAX_TEST_EXECUTION_TIME,\n  130 |     );","start":{"line":127,"column":44,"index":3618}}]}],"metrics":{"aggregate":{"cyclomatic":33,"cyclomaticDensity":12.132,"halstead":{"bugs":2.419,"difficulty":40.699,"effort":295414.223,"length":1032,"time":16411.901,"vocabulary":131,"volume":7258.493,"operands":{"distinct":113,"total":511,"identifiers":["init","generate","model","tokenizer","text","options","inputs","describe","\"Generation parameters\"","models","\"hf-internal-testing/tiny-random-T5ForConditionalGeneration\"","\"hf-internal-testing/tiny-random-LlamaForCausalLM\"","DUMMY_TEXT","\"hello\"","0","encoder-decoder (",")","model_id","beforeAll","AutoModelForSeq2SeqLM","from_pretrained","DEFAULT_MODEL_OPTIONS","AutoTokenizer","MAX_MODEL_LOAD_TIME","it","\"default\"","outputs","expect","dims","at","1","toEqual","20","MAX_TEST_EXECUTION_TIME","\"max_new_tokens\"","MAX_NEW_TOKENS","5","max_new_tokens","\"min_length\"","MIN_LENGTH","3","MAX_LENGTH","eos_token_id","min_length","max_length","tolist","toBeGreaterThanOrEqual","\"min_new_tokens\"","MIN_NEW_TOKENS","2","min_new_tokens","afterAll","dispose","MAX_MODEL_DISPOSE_TIME","decoder-only (","AutoModelForCausalLM","PROMPT_LENGTH","expected_length","4","18547","16012","\"Streamers\"","\"decoder-only\"","\"batch_size=1\"","target_chunks","\"erdingsdelete \"","\"melytabular \"","\"Stadiumoba \"","\"alcune \"","\"drug\"","chunks","callback_function","push","streamer","TextStreamer","skip_special_tokens","true","10","\"PKV caching\"","\"LlamaForCausalLM\"","LlamaForCausalLM","LlamaTokenizer","\"1\"","past_key_values","sequences","do_sample","false","return_dict_in_generate","decoded","batch_decode","new_inputs","\"2\"","add_special_tokens","generated_ids","generated_ids_pkv","target","\"LlavaForConditionalGeneration\"","\"Xenova/tiny-random-LlavaForConditionalGeneration\"","processor","LlavaForConditionalGeneration","AutoProcessor","text_inputs","\"<image>hello\"","224","image","RawImage","Uint8ClampedArray","fill","255","vision_inputs","map","x","\"new\""]},"operators":{"distinct":18,"total":521,"identifiers":["()","const","=","function=>","return",".","{}","... (spread)","[]",",","``","${}","let","- (prefix)",":","+","new","*"]}},"paramCount":6,"sloc":{"logical":272,"physical":353}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":19,"path":"../../src/transformers.js","type":"esm"},{"line":21,"path":"../init.js","type":"esm"}],"errors":[],"lineEnd":353,"lineStart":1,"maintainability":105.709,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.02,"difficulty":4.083,"effort":241.762,"length":16,"time":13.431,"vocabulary":13,"volume":59.207,"operands":{"distinct":6,"total":7,"identifiers":["inputs","tokenizer","text","model","generate","options"]},"operators":{"distinct":7,"total":9,"identifiers":["const","=","()","return",".","{}","... (spread)"]}},"paramCount":4,"sloc":{"logical":4,"physical":7},"errors":[],"lineEnd":33,"lineStart":27,"name":"<anon method-1>","paramNames":["model","tokenizer","text","options"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.044,"difficulty":5.455,"effort":718.286,"length":31,"time":39.905,"vocabulary":19,"volume":131.686,"operands":{"distinct":11,"total":15,"identifiers":["models","\"hf-internal-testing/tiny-random-T5ForConditionalGeneration\"","\"hf-internal-testing/tiny-random-LlamaForCausalLM\"","DUMMY_TEXT","\"hello\"","describe","0","encoder-decoder (",")","1","decoder-only ("]},"operators":{"distinct":8,"total":16,"identifiers":["const","=","[]",",","()","``","${}","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":150},"errors":[],"lineEnd":184,"lineStart":35,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.056,"difficulty":4.2,"effort":701.014,"length":38,"time":38.945,"vocabulary":21,"volume":166.908,"operands":{"distinct":15,"total":21,"identifiers":["model_id","models","0","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME","\"max_new_tokens\"","\"min_length\"","\"min_new_tokens\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":6,"total":17,"identifiers":["const","=","[]","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":15,"physical":68},"errors":[],"lineEnd":110,"lineStart":43,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","AutoModelForSeq2SeqLM","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","AutoTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":51,"lineStart":48,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.031,"difficulty":3.273,"effort":307.674,"length":23,"time":17.093,"vocabulary":17,"volume":94.012,"operands":{"distinct":11,"total":12,"identifiers":["outputs","generate","model","tokenizer","DUMMY_TEXT","expect","dims","at","1","toEqual","20"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","()","{}",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":59,"lineStart":56,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.047,"difficulty":5.231,"effort":735.206,"length":32,"time":40.845,"vocabulary":21,"volume":140.554,"operands":{"distinct":13,"total":17,"identifiers":["MAX_NEW_TOKENS","5","outputs","generate","model","tokenizer","DUMMY_TEXT","max_new_tokens","expect","dims","at","1","toEqual"]},"operators":{"distinct":8,"total":15,"identifiers":["const","=","()","{}",":",".","- (prefix)","+"]}},"paramCount":0,"sloc":{"logical":7,"physical":7},"errors":[],"lineEnd":71,"lineStart":65,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.089,"difficulty":5.85,"effort":1563.055,"length":55,"time":86.836,"vocabulary":29,"volume":267.189,"operands":{"distinct":20,"total":26,"identifiers":["MIN_LENGTH","3","MAX_LENGTH","5","outputs","generate","model","tokenizer","DUMMY_TEXT","eos_token_id","0","min_length","max_length","expect","tolist","toEqual","dims","at","1","toBeGreaterThanOrEqual"]},"operators":{"distinct":9,"total":29,"identifiers":["const","=","()","{}",":",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":13,"physical":11},"errors":[],"lineEnd":87,"lineStart":77,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.089,"difficulty":5.85,"effort":1563.055,"length":55,"time":86.836,"vocabulary":29,"volume":267.189,"operands":{"distinct":20,"total":26,"identifiers":["MIN_NEW_TOKENS","2","MAX_LENGTH","5","outputs","generate","model","tokenizer","DUMMY_TEXT","eos_token_id","0","min_new_tokens","max_length","expect","tolist","toEqual","dims","at","1","toBeGreaterThanOrEqual"]},"operators":{"distinct":9,"total":29,"identifiers":["const","=","()","{}",":",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":13,"physical":11},"errors":[],"lineEnd":103,"lineStart":93,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":109,"lineStart":107,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.056,"difficulty":4.2,"effort":701.014,"length":38,"time":38.945,"vocabulary":21,"volume":166.908,"operands":{"distinct":15,"total":21,"identifiers":["model_id","models","1","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"default\"","MAX_TEST_EXECUTION_TIME","\"max_new_tokens\"","\"min_length\"","\"min_new_tokens\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":6,"total":17,"identifiers":["const","=","[]","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":15,"physical":72},"errors":[],"lineEnd":183,"lineStart":112,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","AutoModelForCausalLM","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","AutoTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":120,"lineStart":117,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.031,"difficulty":3.273,"effort":307.674,"length":23,"time":17.093,"vocabulary":17,"volume":94.012,"operands":{"distinct":11,"total":12,"identifiers":["outputs","generate","model","tokenizer","DUMMY_TEXT","expect","dims","at","1","toEqual","20"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","()","{}",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":128,"lineStart":125,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.061,"difficulty":5.25,"effort":962.842,"length":40,"time":53.491,"vocabulary":24,"volume":183.399,"operands":{"distinct":16,"total":21,"identifiers":["MAX_NEW_TOKENS","5","PROMPT_LENGTH","2","outputs","generate","model","tokenizer","DUMMY_TEXT","max_new_tokens","expected_length","expect","dims","at","1","toEqual"]},"operators":{"distinct":8,"total":19,"identifiers":["const","=","()","{}",":","+",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":9,"physical":9},"errors":[],"lineEnd":142,"lineStart":134,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.084,"difficulty":5.75,"effort":1449.052,"length":53,"time":80.503,"vocabulary":27,"volume":252.009,"operands":{"distinct":18,"total":23,"identifiers":["MIN_LENGTH","4","outputs","generate","model","tokenizer","DUMMY_TEXT","eos_token_id","18547","16012","min_length","expect","tolist","toEqual","dims","at","1","toBeGreaterThanOrEqual"]},"operators":{"distinct":9,"total":30,"identifiers":["const","=","()","{}",":","[]",",",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":11,"physical":12},"errors":[],"lineEnd":159,"lineStart":148,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.084,"difficulty":5.75,"effort":1449.052,"length":53,"time":80.503,"vocabulary":27,"volume":252.009,"operands":{"distinct":18,"total":23,"identifiers":["MIN_NEW_TOKENS","2","outputs","generate","model","tokenizer","DUMMY_TEXT","eos_token_id","18547","16012","min_new_tokens","expect","tolist","toEqual","dims","at","1","toBeGreaterThanOrEqual"]},"operators":{"distinct":9,"total":30,"identifiers":["const","=","()","{}",":","[]",",",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":11,"physical":12},"errors":[],"lineEnd":176,"lineStart":165,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":182,"lineStart":180,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"decoder-only\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":36},"errors":[],"lineEnd":221,"lineStart":186,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.027,"difficulty":2.5,"effort":200,"length":20,"time":11.111,"vocabulary":16,"volume":80,"operands":{"distinct":11,"total":11,"identifiers":["model_id","\"hf-internal-testing/tiny-random-LlamaForCausalLM\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":34},"errors":[],"lineEnd":220,"lineStart":187,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","AutoModelForCausalLM","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","AutoTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":193,"lineStart":190,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.144,"difficulty":8.25,"effort":3554.593,"length":84,"time":197.477,"vocabulary":35,"volume":430.86,"operands":{"distinct":24,"total":36,"identifiers":["target_chunks","\"hello\"","\"erdingsdelete \"","\"melytabular \"","\"Stadiumoba \"","\"alcune \"","\"drug\"","chunks","callback_function","text","streamer","TextStreamer","tokenizer","skip_special_tokens","true","inputs","outputs","model","generate","max_length","10","expect","tolist","toEqual"]},"operators":{"distinct":11,"total":48,"identifiers":["const","=","[]",",","function=>","new","{}",":","()",".","... (spread)"]}},"paramCount":0,"sloc":{"logical":18,"physical":17},"errors":[],"lineEnd":213,"lineStart":197,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["chunks","push","text"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":202,"lineStart":200,"name":"<anon method-21>","paramNames":["text"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":219,"lineStart":217,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"LlamaForCausalLM\"","\"LlavaForConditionalGeneration\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":130},"errors":[],"lineEnd":352,"lineStart":223,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.028,"difficulty":2.5,"effort":210,"length":21,"time":11.667,"vocabulary":16,"volume":84,"operands":{"distinct":11,"total":11,"identifiers":["model_id","\"hf-internal-testing/tiny-random-LlamaForCausalLM\"","model","tokenizer","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":60},"errors":[],"lineEnd":283,"lineStart":224,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.017,"difficulty":1.929,"effort":96.099,"length":15,"time":5.339,"vocabulary":10,"volume":49.829,"operands":{"distinct":7,"total":9,"identifiers":["model","LlamaForCausalLM","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","LlamaTokenizer"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":233,"lineStart":230,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.217,"difficulty":10.741,"effort":6994.174,"length":125,"time":388.565,"vocabulary":37,"volume":651.182,"operands":{"distinct":27,"total":58,"identifiers":["inputs","tokenizer","\"1\"","past_key_values","sequences","model","generate","max_new_tokens","5","do_sample","false","return_dict_in_generate","true","decoded","batch_decode","skip_special_tokens","0","new_inputs","\"2\"","add_special_tokens","generated_ids","3","generated_ids_pkv","target","expect","tolist","toEqual"]},"operators":{"distinct":10,"total":67,"identifiers":["const","=","()","{}",".","... (spread)",":","[]","+",","]}},"paramCount":0,"sloc":{"logical":31,"physical":40},"errors":[],"lineEnd":276,"lineStart":237,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":282,"lineStart":280,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.031,"difficulty":2.5,"effort":235.029,"length":23,"time":13.057,"vocabulary":17,"volume":94.012,"operands":{"distinct":12,"total":12,"identifiers":["model_id","\"Xenova/tiny-random-LlavaForConditionalGeneration\"","model","tokenizer","processor","beforeAll","MAX_MODEL_LOAD_TIME","it","\"batch_size=1\"","MAX_TEST_EXECUTION_TIME","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":11,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":67},"errors":[],"lineEnd":351,"lineStart":285,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.026,"difficulty":2.167,"effort":170.883,"length":22,"time":9.494,"vocabulary":12,"volume":78.869,"operands":{"distinct":9,"total":13,"identifiers":["model","LlavaForConditionalGeneration","from_pretrained","model_id","DEFAULT_MODEL_OPTIONS","tokenizer","AutoTokenizer","processor","AutoProcessor"]},"operators":{"distinct":3,"total":9,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":297,"lineStart":293,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.703,"halstead":{"bugs":0.316,"difficulty":12.158,"effort":11527.725,"length":168,"time":640.429,"vocabulary":50,"volume":948.168,"operands":{"distinct":38,"total":77,"identifiers":["text_inputs","tokenizer","\"<image>hello\"","dims","224","3","image","RawImage","Uint8ClampedArray","0","1","2","fill","255","vision_inputs","processor","past_key_values","sequences","model","generate","max_new_tokens","5","do_sample","false","return_dict_in_generate","true","decoded","batch_decode","map","x","new_inputs","add_special_tokens","generated_ids","generated_ids_pkv","target","expect","tolist","toEqual"]},"operators":{"distinct":12,"total":91,"identifiers":["const","=","()","[]",",","new",".","*","... (spread)","{}",":","function=>"]}},"paramCount":0,"sloc":{"logical":37,"physical":44},"errors":[],"lineEnd":344,"lineStart":301,"name":"<anon method-30>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["x","\"new\""]},"operators":{"distinct":1,"total":1,"identifiers":["+"]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":320,"lineStart":320,"name":"<anon method-31>","paramNames":["x"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["model","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":350,"lineStart":348,"name":"<anon method-32>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.368,"halstead":{"bugs":0.073,"difficulty":1.233,"effort":8951.946,"length":31.273,"time":497.33,"vocabulary":3.97,"volume":219.954,"operands":{"distinct":3.424,"total":15.485},"operators":{"distinct":0.545,"total":15.788}},"paramCount":0.182,"sloc":{"logical":8.242,"physical":10.697}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":34.042,"halstead":{"bugs":0.049,"difficulty":3.454,"effort":1063.226,"length":31.563,"time":59.068,"vocabulary":16.094,"volume":146.701,"operands":{"distinct":11.063,"total":15.594},"operators":{"distinct":5.031,"total":15.969}},"paramCount":0.188,"sloc":{"logical":8.219,"physical":26.094}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/utils/image.test.js","testCases":11,"smells":9,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  20 |\n  21 |       const avg = padded_image.data.reduce((acc, val) => acc + val, 0) / padded_image.data.length;\n> 22 |       expect(avg).toBeCloseTo((224 * 224 * 255) / (3 * 480 * 480), 6);\n     |                                                                   ^ Magic Number\n  23 |     });\n  24 |   });\n  25 |","start":{"line":22,"column":67,"index":1095}},{"frame":"  41 |       const grayscale = TEST_IMAGES.rgba.clone().grayscale();\n  42 |       expect(grayscale.size).toEqual(TEST_IMAGES.rgba.size);\n> 43 |       expect(grayscale.channels).toEqual(1);\n     |                                         ^ Magic Number\n  44 |     });\n  45 |\n  46 |     it(\"should convert RGB to L (grayscale)\", async () => {","start":{"line":43,"column":41,"index":1905}},{"frame":"  47 |       const grayscale = TEST_IMAGES.rgb.clone().grayscale();\n  48 |       expect(grayscale.size).toEqual(TEST_IMAGES.rgb.size);\n> 49 |       expect(grayscale.channels).toEqual(1);\n     |                                         ^ Magic Number\n  50 |     });\n  51 |\n  52 |     it(\"should convert L to RGB\", async () => {","start":{"line":49,"column":41,"index":2140}},{"frame":"  53 |       const rgb = TEST_IMAGES.l.clone().rgb();\n  54 |       expect(rgb.size).toEqual(TEST_IMAGES.l.size);\n> 55 |       expect(rgb.channels).toEqual(3);\n     |                                   ^ Magic Number\n  56 |     });\n  57 |\n  58 |     it(\"should convert L to RGBA\", async () => {","start":{"line":55,"column":35,"index":2335}},{"frame":"  59 |       const rgba = TEST_IMAGES.l.clone().rgba();\n  60 |       expect(rgba.size).toEqual(TEST_IMAGES.l.size);\n> 61 |       expect(rgba.channels).toEqual(4);\n     |                                    ^ Magic Number\n  62 |     });\n  63 |\n  64 |     it(\"should convert RGB to RGBA\", async () => {","start":{"line":61,"column":36,"index":2535}},{"frame":"  65 |       const rgba = TEST_IMAGES.rgb.clone().rgba();\n  66 |       expect(rgba.size).toEqual(TEST_IMAGES.rgb.size);\n> 67 |       expect(rgba.channels).toEqual(4);\n     |                                    ^ Magic Number\n  68 |     });\n  69 |\n  70 |     it(\"should convert RGBA to RGB\", async () => {","start":{"line":67,"column":36,"index":2741}},{"frame":"  71 |       const rgb = TEST_IMAGES.rgba.clone().rgb();\n  72 |       expect(rgb.size).toEqual(TEST_IMAGES.rgba.size);\n> 73 |       expect(rgb.channels).toEqual(3);\n     |                                   ^ Magic Number\n  74 |     });\n  75 |   });\n  76 |","start":{"line":73,"column":35,"index":2945}},{"frame":"  79 |       const rgba = TEST_IMAGES.rgb.clone().putAlpha(TEST_IMAGES.l);\n  80 |       expect(rgba.size).toEqual(TEST_IMAGES.rgb.size);\n> 81 |       expect(rgba.channels).toEqual(4);\n     |                                    ^ Magic Number\n  82 |     });\n  83 |     it(\"should add alpha to RGBA image\", async () => {\n  84 |       const rgba = TEST_IMAGES.rgba.clone().putAlpha(TEST_IMAGES.l);","start":{"line":81,"column":36,"index":3208}},{"frame":"  84 |       const rgba = TEST_IMAGES.rgba.clone().putAlpha(TEST_IMAGES.l);\n  85 |       expect(rgba.size).toEqual(TEST_IMAGES.rgb.size);\n> 86 |       expect(rgba.channels).toEqual(4);\n     |                                    ^ Magic Number\n  87 |     });\n  88 |   });\n  89 | });","start":{"line":86,"column":36,"index":3435}}]}],"metrics":{"aggregate":{"cyclomatic":20,"cyclomaticDensity":15.748,"halstead":{"bugs":1.464,"difficulty":26.705,"effort":117292.106,"length":667,"time":6516.228,"vocabulary":96,"volume":4392.17,"operands":{"distinct":83,"total":341,"identifiers":["TEST_IMAGES","rgba","RawImage","Uint8ClampedArray","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","rgb","la","l","describe","\"Image utilities\"","\"Padding\"","it","\"should pad image\"","padded_image","load_cached_image","\"blue_image\"","then","image","resize","224","pad","128","expect","size","toEqual","480","avg","data","reduce","acc","val","length","toBeCloseTo","255","\"Tensor to Image\"","\"should create an image from a tensor (CHW)\"","tensor_chw","rand","256","mul_","to","\"uint8\"","fromTensor","\"should create an image from a tensor (HWC)\"","tensor_hwc","\"HWC\"","\"Channel conversions\"","\"should convert RGBA to L (grayscale)\"","grayscale","clone","channels","\"should convert RGB to L (grayscale)\"","\"should convert L to RGB\"","\"should convert L to RGBA\"","\"should convert RGB to RGBA\"","\"should convert RGBA to RGB\"","\"putAlpha\"","\"should add alpha to RGB image\"","putAlpha","\"should add alpha to RGBA image\""]},"operators":{"distinct":13,"total":326,"identifiers":["const","=","{}",":","new","[]",",","()","function=>",".","/","+","*"]}},"paramCount":4,"sloc":{"logical":127,"physical":90}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/transformers.js","type":"esm"},{"line":2,"path":"../asset_cache.js","type":"esm"}],"errors":[],"lineEnd":90,"lineStart":1,"maintainability":111.381,"methods":[{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["describe","\"Padding\"","\"Tensor to Image\"","\"Channel conversions\"","\"putAlpha\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":79},"errors":[],"lineEnd":89,"lineStart":11,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should pad image\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":13},"errors":[],"lineEnd":24,"lineStart":12,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.106,"difficulty":7.071,"effort":2255.417,"length":65,"time":125.301,"vocabulary":30,"volume":318.948,"operands":{"distinct":21,"total":33,"identifiers":["padded_image","load_cached_image","\"blue_image\"","then","image","expect","size","toEqual","480","avg","data","reduce","acc","val","0","length","toBeCloseTo","224","255","3","6"]},"operators":{"distinct":9,"total":32,"identifiers":["const","=","()",".","function=>","[]",",","/","*"]}},"paramCount":0,"sloc":{"logical":13,"physical":11},"errors":[],"lineEnd":23,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1.333,"effort":18.575,"length":6,"time":1.032,"vocabulary":5,"volume":13.932,"operands":{"distinct":3,"total":4,"identifiers":["image","resize","224"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":16,"lineStart":16,"name":"<anon method-4>","paramNames":["image"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":4,"effort":134.753,"length":12,"time":7.486,"vocabulary":7,"volume":33.688,"operands":{"distinct":3,"total":6,"identifiers":["image","pad","128"]},"operators":{"distinct":4,"total":6,"identifiers":["()",".","[]",","]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":17,"lineStart":17,"name":"<anon method-5>","paramNames":["image"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["acc","val"]},"operators":{"distinct":1,"total":1,"identifiers":["+"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":21,"lineStart":21,"name":"<anon method-6>","paramNames":["acc","val"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should create an image from a tensor (CHW)\"","\"should create an image from a tensor (HWC)\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":12},"errors":[],"lineEnd":37,"lineStart":26,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.057,"difficulty":3.8,"effort":650.941,"length":39,"time":36.163,"vocabulary":21,"volume":171.3,"operands":{"distinct":15,"total":19,"identifiers":["tensor_chw","rand","3","128","256","mul_","255","to","\"uint8\"","image","RawImage","fromTensor","expect","size","toEqual"]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":31,"lineStart":27,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.059,"difficulty":3.75,"effort":668.915,"length":40,"time":37.162,"vocabulary":22,"volume":178.377,"operands":{"distinct":16,"total":20,"identifiers":["tensor_hwc","rand","128","256","3","mul_","255","to","\"uint8\"","image","RawImage","fromTensor","\"HWC\"","expect","size","toEqual"]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":36,"lineStart":32,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.025,"difficulty":1.714,"effort":130.42,"length":24,"time":7.246,"vocabulary":9,"volume":76.078,"operands":{"distinct":7,"total":12,"identifiers":["it","\"should convert RGBA to L (grayscale)\"","\"should convert RGB to L (grayscale)\"","\"should convert L to RGB\"","\"should convert L to RGBA\"","\"should convert RGB to RGBA\"","\"should convert RGBA to RGB\""]},"operators":{"distinct":2,"total":12,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":37},"errors":[],"lineEnd":75,"lineStart":39,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.042,"difficulty":3.778,"effort":475.301,"length":34,"time":26.406,"vocabulary":13,"volume":125.815,"operands":{"distinct":9,"total":17,"identifiers":["grayscale","TEST_IMAGES","rgba","clone","expect","size","toEqual","channels","1"]},"operators":{"distinct":4,"total":17,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":44,"lineStart":40,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.042,"difficulty":3.778,"effort":475.301,"length":34,"time":26.406,"vocabulary":13,"volume":125.815,"operands":{"distinct":9,"total":17,"identifiers":["grayscale","TEST_IMAGES","rgb","clone","expect","size","toEqual","channels","1"]},"operators":{"distinct":4,"total":17,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":50,"lineStart":46,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.042,"difficulty":3.778,"effort":475.301,"length":34,"time":26.406,"vocabulary":13,"volume":125.815,"operands":{"distinct":9,"total":17,"identifiers":["rgb","TEST_IMAGES","l","clone","expect","size","toEqual","channels","3"]},"operators":{"distinct":4,"total":17,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":56,"lineStart":52,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.042,"difficulty":3.778,"effort":475.301,"length":34,"time":26.406,"vocabulary":13,"volume":125.815,"operands":{"distinct":9,"total":17,"identifiers":["rgba","TEST_IMAGES","l","clone","expect","size","toEqual","channels","4"]},"operators":{"distinct":4,"total":17,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":62,"lineStart":58,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.042,"difficulty":3.778,"effort":475.301,"length":34,"time":26.406,"vocabulary":13,"volume":125.815,"operands":{"distinct":9,"total":17,"identifiers":["rgba","TEST_IMAGES","rgb","clone","expect","size","toEqual","channels","4"]},"operators":{"distinct":4,"total":17,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":68,"lineStart":64,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.042,"difficulty":3.778,"effort":475.301,"length":34,"time":26.406,"vocabulary":13,"volume":125.815,"operands":{"distinct":9,"total":17,"identifiers":["rgb","TEST_IMAGES","rgba","clone","expect","size","toEqual","channels","3"]},"operators":{"distinct":4,"total":17,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":74,"lineStart":70,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should add alpha to RGB image\"","\"should add alpha to RGBA image\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":12},"errors":[],"lineEnd":88,"lineStart":77,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.048,"difficulty":3.455,"effort":499.372,"length":37,"time":27.743,"vocabulary":15,"volume":144.555,"operands":{"distinct":11,"total":19,"identifiers":["rgba","TEST_IMAGES","rgb","clone","putAlpha","l","expect","size","toEqual","channels","4"]},"operators":{"distinct":4,"total":18,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":82,"lineStart":78,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.048,"difficulty":3.455,"effort":499.372,"length":37,"time":27.743,"vocabulary":15,"volume":144.555,"operands":{"distinct":11,"total":19,"identifiers":["rgba","TEST_IMAGES","clone","putAlpha","l","expect","size","toEqual","rgb","channels","4"]},"operators":{"distinct":4,"total":18,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":5},"errors":[],"lineEnd":87,"lineStart":83,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.787,"halstead":{"bugs":0.073,"difficulty":1.335,"effort":5864.605,"length":33.35,"time":325.811,"vocabulary":4.8,"volume":219.608,"operands":{"distinct":4.15,"total":17.05},"operators":{"distinct":0.65,"total":16.3}},"paramCount":0.2,"sloc":{"logical":6.35,"physical":4.5}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":24.622,"halstead":{"bugs":0.034,"difficulty":3.001,"effort":412.703,"length":26.474,"time":22.928,"vocabulary":11.895,"volume":101.639,"operands":{"distinct":8.211,"total":13.368},"operators":{"distinct":3.684,"total":13.105}},"paramCount":0.211,"sloc":{"logical":6.316,"physical":11.421}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/utils/logits_process.test.js","testCases":3,"smells":7,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  65 |           const bad_words_ids = [];\n  66 |           // default:  [22172n, 18547n, 8136n, 16012n, 28064n, 11361n]\n> 67 |           for (let i = 0; i < 100000; ++i) {\n     |          ^ Conditional Test Logic\n  68 |             bad_words_ids.push([i * 2]); // block all even numbers\n  69 |           }\n  70 |           // block #1: [22172n, 18547n, 8143n, 30327n, 20061n, 18193n]","start":{"line":67,"column":10,"index":1926}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  49 |             ],\n  50 |           });\n> 51 |           compare(output, text_target);\n     |          ^ Lazy Test\n  52 |         },\n  53 |         MAX_TEST_EXECUTION_TIME,\n  54 |       );","start":{"line":51,"column":10,"index":1427}},{"frame":"  76 |           // block #3: [22172n, 18547n, 8143n, 26465n, 6877n, 15459n]\n  77 |           const output = await pipe(text_input, { max_new_tokens: 5, bad_words_ids });\n> 78 |           compare(output, text_target);\n     |          ^ Lazy Test\n  79 |         },\n  80 |         MAX_TEST_EXECUTION_TIME,\n  81 |       );","start":{"line":78,"column":10,"index":2447}},{"frame":"  101 |             ],\n  102 |           });\n> 103 |           compare(output, text_target);\n      |          ^ Lazy Test\n  104 |         },\n  105 |         MAX_TEST_EXECUTION_TIME,\n  106 |       );","start":{"line":103,"column":10,"index":3380}}]},{"name":"Unknown Test","packageName":"unknownTest","items":[{"frame":"  31 |\n  32 |     describe(\"bad_word_ids\", () => {\n> 33 |       it(\n     |      ^ Unknown Test\n  34 |         \"basic\",\n  35 |         async () => {\n  36 |           const text_input = \"hello\";","start":{"column":6,"line":33}},{"frame":"  54 |       );\n  55 |\n> 56 |       it(\n     |      ^ Unknown Test\n  57 |         \"many bad words\",\n  58 |         async () => {\n  59 |           const text_input = \"hello\";","start":{"column":6,"line":56}},{"frame":"  81 |       );\n  82 |\n> 83 |       it(\n     |      ^ Unknown Test\n  84 |         \"different lengths\",\n  85 |         async () => {\n  86 |           const text_input = \"this is a test\";","start":{"column":6,"line":83}}]}],"metrics":{"aggregate":{"cyclomatic":10,"cyclomaticDensity":16.949,"halstead":{"bugs":0.534,"difficulty":20.308,"effort":32512.671,"length":263,"time":1806.259,"vocabulary":68,"volume":1601.003,"operands":{"distinct":52,"total":132,"identifiers":["init","MAX_MODEL_LOAD_TIME","10000","MAX_TEST_EXECUTION_TIME","MAX_MODEL_DISPOSE_TIME","1000","DEFAULT_MODEL_OPTIONS","dtype","\"fp32\"","describe","\"Logits Processors\"","\"text-generation\"","model_id","\"hf-internal-testing/tiny-random-LlamaForCausalLM\"","pipe","beforeAll","pipeline","\"bad_word_ids\"","it","\"basic\"","text_input","\"hello\"","generated_text_target","\" Bert explicit wed digasset\"","text_target","generated_text","output","max_new_tokens","5","bad_words_ids","18547","6261","18916","compare","\"many bad words\"","\"erdingsdeletearus)?nor\"","i","0","100000","push","2","8143","30327","29485","\"different lengths\"","\"this is a test\"","\"кт México constructed lake user\"","3931","14756","7811","afterAll","dispose"]},"operators":{"distinct":16,"total":131,"identifiers":["()","const","=","{}",":","function=>","let","... (spread)","[]","+",",","for","<","++ (prefix)",".","*"]}},"paramCount":0,"sloc":{"logical":59,"physical":114}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":5,"path":"../../src/transformers.js","type":"esm"},{"line":7,"path":"../init.js","type":"esm"},{"line":8,"path":"../test_utils.js","type":"esm"}],"errors":[],"lineEnd":114,"lineStart":1,"maintainability":112.416,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["describe","\"text-generation\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":95},"errors":[],"lineEnd":113,"lineStart":19,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.023,"difficulty":2.5,"effort":171.331,"length":18,"time":9.518,"vocabulary":14,"volume":68.532,"operands":{"distinct":9,"total":9,"identifiers":["model_id","\"hf-internal-testing/tiny-random-LlamaForCausalLM\"","pipe","beforeAll","MAX_MODEL_LOAD_TIME","describe","\"bad_word_ids\"","afterAll","MAX_MODEL_DISPOSE_TIME"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":93},"errors":[],"lineEnd":112,"lineStart":20,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.01,"difficulty":2,"effort":57.059,"length":9,"time":3.17,"vocabulary":9,"volume":28.529,"operands":{"distinct":5,"total":5,"identifiers":["pipe","pipeline","\"text-generation\"","model_id","DEFAULT_MODEL_OPTIONS"]},"operators":{"distinct":4,"total":4,"identifiers":["=","()","{}","... (spread)"]}},"paramCount":0,"sloc":{"logical":2,"physical":6},"errors":[],"lineEnd":30,"lineStart":25,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.014,"difficulty":1.8,"effort":75.799,"length":15,"time":4.211,"vocabulary":7,"volume":42.11,"operands":{"distinct":5,"total":9,"identifiers":["it","\"basic\"","MAX_TEST_EXECUTION_TIME","\"many bad words\"","\"different lengths\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":76},"errors":[],"lineEnd":107,"lineStart":32,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.063,"difficulty":5.333,"effort":1013.278,"length":42,"time":56.293,"vocabulary":23,"volume":189.99,"operands":{"distinct":15,"total":20,"identifiers":["text_input","\"hello\"","generated_text_target","\" Bert explicit wed digasset\"","text_target","generated_text","output","pipe","max_new_tokens","5","bad_words_ids","18547","6261","18916","compare"]},"operators":{"distinct":8,"total":22,"identifiers":["const","=","[]","{}",":","+","()",","]}},"paramCount":0,"sloc":{"logical":9,"physical":18},"errors":[],"lineEnd":52,"lineStart":35,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":14.286,"halstead":{"bugs":0.127,"difficulty":12.333,"effort":4681.326,"length":74,"time":260.074,"vocabulary":35,"volume":379.567,"operands":{"distinct":21,"total":37,"identifiers":["text_input","\"hello\"","generated_text_target","\"erdingsdeletearus)?nor\"","text_target","generated_text","bad_words_ids","i","0","100000","push","2","8143","30327","18547","29485","output","pipe","max_new_tokens","5","compare"]},"operators":{"distinct":14,"total":37,"identifiers":["const","=","[]","{}",":","+","for","let","<","++ (prefix)","()",".","*",","]}},"paramCount":0,"sloc":{"logical":14,"physical":22},"errors":[],"lineEnd":79,"lineStart":58,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.113,"difficulty":9,"effort":3053.585,"length":74,"time":169.644,"vocabulary":24,"volume":339.287,"operands":{"distinct":16,"total":36,"identifiers":["text_input","\"this is a test\"","generated_text_target","\"кт México constructed lake user\"","text_target","generated_text","output","pipe","max_new_tokens","5","bad_words_ids","0","3931","14756","7811","compare"]},"operators":{"distinct":8,"total":38,"identifiers":["const","=","[]","{}",":","+","()",","]}},"paramCount":0,"sloc":{"logical":9,"physical":20},"errors":[],"lineEnd":104,"lineStart":85,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0,"effort":0,"length":2,"time":0,"vocabulary":2,"volume":2,"operands":{"distinct":2,"total":2,"identifiers":["pipe","dispose"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":111,"lineStart":109,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.111,"cyclomaticDensity":1.883,"halstead":{"bugs":0.059,"difficulty":2.256,"effort":3612.519,"length":29.222,"time":200.695,"vocabulary":7.556,"volume":177.889,"operands":{"distinct":5.778,"total":14.667},"operators":{"distinct":1.778,"total":14.556}},"paramCount":0,"sloc":{"logical":6.556,"physical":12.667}},"methodAverage":{"cyclomatic":1.125,"cyclomaticDensity":33.209,"halstead":{"bugs":0.044,"difficulty":4.246,"effort":1132.547,"length":29.75,"time":62.919,"vocabulary":14.75,"volume":132.252,"operands":{"distinct":9.375,"total":15},"operators":{"distinct":5.375,"total":14.75}},"paramCount":0,"sloc":{"logical":6.375,"physical":41.625}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/utils/maths.test.js","testCases":9,"smells":41,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"   5 |   let output;\n   6 |   let fft;\n>  7 |   if (complex) {\n     |  ^ Conditional Test Logic\n   8 |     fft = new FFT(arr.length / 2);\n   9 |     output = new Float64Array(fft.outputBufferSize);\n  10 |     fft.transform(output, arr);","start":{"line":7,"column":2,"index":202}},{"frame":"  14 |     fft.realTransform(output, arr);\n  15 |   }\n> 16 |   if (!fft.isPowerOfTwo) {\n     |  ^ Conditional Test Logic\n  17 |     output = output.slice(0, complex ? arr.length : 2 * arr.length);\n  18 |   }\n  19 |   return output;","start":{"line":16,"column":2,"index":474}},{"frame":"  177 |   describe(\"FFT (random & dynamic)\", () => {\n  178 |     // Should match output of numpy fft\n> 179 |     for (const [name, test] of Object.entries(FFT_TEST_DATA)) {\n      |    ^ Conditional Test Logic\n  180 |       it(name, () => {\n  181 |         const output = fft(test.input, test.complex);\n  182 |","start":{"line":179,"column":4,"index":89642}},{"frame":"  181 |         const output = fft(test.input, test.complex);\n  182 |\n> 183 |         if (output.map((v, i) => Math.abs(v - test.output[i])).some((v) => v > 1e-4)) {\n      |        ^ Conditional Test Logic\n  184 |           console.log(\"input\", test.input);\n  185 |           console.log(\"output\", output);\n  186 |           console.log(\"target\", test.output);","start":{"line":183,"column":8,"index":89788}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  66 |   describe(\"bankers rounding\", () => {\n  67 |     it(\"should round up to nearest even\", () => {\n> 68 |       expect(bankers_round(-0.5)).toBeCloseTo(0);\n     |             ^ Eager Test\n  69 |       expect(bankers_round(1.5)).toBeCloseTo(2);\n  70 |       expect(bankers_round(19.5)).toBeCloseTo(20);\n  71 |     });","start":{"line":68,"column":13,"index":85282}},{"frame":"  67 |     it(\"should round up to nearest even\", () => {\n  68 |       expect(bankers_round(-0.5)).toBeCloseTo(0);\n> 69 |       expect(bankers_round(1.5)).toBeCloseTo(2);\n     |             ^ Eager Test\n  70 |       expect(bankers_round(19.5)).toBeCloseTo(20);\n  71 |     });\n  72 |     it(\"should round down to nearest even\", () => {","start":{"line":69,"column":13,"index":85332}},{"frame":"  68 |       expect(bankers_round(-0.5)).toBeCloseTo(0);\n  69 |       expect(bankers_round(1.5)).toBeCloseTo(2);\n> 70 |       expect(bankers_round(19.5)).toBeCloseTo(20);\n     |             ^ Eager Test\n  71 |     });\n  72 |     it(\"should round down to nearest even\", () => {\n  73 |       expect(bankers_round(-1.5)).toBeCloseTo(-2);","start":{"line":70,"column":13,"index":85381}},{"frame":"  71 |     });\n  72 |     it(\"should round down to nearest even\", () => {\n> 73 |       expect(bankers_round(-1.5)).toBeCloseTo(-2);\n     |             ^ Eager Test\n  74 |       expect(bankers_round(2.5)).toBeCloseTo(2);\n  75 |       expect(bankers_round(18.5)).toBeCloseTo(18);\n  76 |     });","start":{"line":73,"column":13,"index":85492}},{"frame":"  72 |     it(\"should round down to nearest even\", () => {\n  73 |       expect(bankers_round(-1.5)).toBeCloseTo(-2);\n> 74 |       expect(bankers_round(2.5)).toBeCloseTo(2);\n     |             ^ Eager Test\n  75 |       expect(bankers_round(18.5)).toBeCloseTo(18);\n  76 |     });\n  77 |   });","start":{"line":74,"column":13,"index":85543}},{"frame":"  73 |       expect(bankers_round(-1.5)).toBeCloseTo(-2);\n  74 |       expect(bankers_round(2.5)).toBeCloseTo(2);\n> 75 |       expect(bankers_round(18.5)).toBeCloseTo(18);\n     |             ^ Eager Test\n  76 |     });\n  77 |   });\n  78 |","start":{"line":75,"column":13,"index":85592}},{"frame":"  84 |       const target = new Float32Array([12, 5, 6, 3, 6, 9, 9, 4, 4, 8, 8, 11]);\n  85 |\n> 86 |       const output = medianFilter(t1, window);\n     |                     ^ Eager Test\n  87 |       compare(output, target, 1e-3);\n  88 |     });\n  89 |","start":{"line":86,"column":21,"index":85939}},{"frame":"  85 |\n  86 |       const output = medianFilter(t1, window);\n> 87 |       compare(output, target, 1e-3);\n     |      ^ Eager Test\n  88 |     });\n  89 |\n  90 |     // TODO add tests for errors","start":{"line":87,"column":6,"index":85971}},{"frame":"   96 |       const input = [0, 1, 2, 3];\n   97 |       const expected = [-3.4401896985611953, -2.4401896985611953, -1.4401896985611953, -0.44018969856119533];\n>  98 |       const output = log_softmax(input);\n      |                     ^ Eager Test\n   99 |       compare(output, expected, 1e-13);\n  100 |     });\n  101 |","start":{"line":98,"column":21,"index":86370}},{"frame":"   97 |       const expected = [-3.4401896985611953, -2.4401896985611953, -1.4401896985611953, -0.44018969856119533];\n   98 |       const output = log_softmax(input);\n>  99 |       compare(output, expected, 1e-13);\n      |      ^ Eager Test\n  100 |     });\n  101 |\n  102 |     it(\"should compute log softmax correctly for values with large differences\", () => {","start":{"line":99,"column":6,"index":86396}},{"frame":"  103 |       const input = [1000, 1];\n  104 |       const expected = [0, -999];\n> 105 |       const output = log_softmax(input);\n      |                     ^ Eager Test\n  106 |       compare(output, expected, 1e-13);\n  107 |     });\n  108 |   });","start":{"line":105,"column":21,"index":86614}},{"frame":"  104 |       const expected = [0, -999];\n  105 |       const output = log_softmax(input);\n> 106 |       compare(output, expected, 1e-13);\n      |      ^ Eager Test\n  107 |     });\n  108 |   });\n  109 |","start":{"line":106,"column":6,"index":86640}},{"frame":"  118 |\n  119 |         const output = fft(input);\n> 120 |         compare(output, target, 1e-3);\n      |        ^ Eager Test\n  121 |       }\n  122 |\n  123 |       {","start":{"line":120,"column":8,"index":87092}},{"frame":"  134 |\n  135 |         const output = fft(input);\n> 136 |         compare(output, target, 1e-3);\n      |        ^ Eager Test\n  137 |       }\n  138 |     });\n  139 |","start":{"line":136,"column":8,"index":88213}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  66 |   describe(\"bankers rounding\", () => {\n  67 |     it(\"should round up to nearest even\", () => {\n> 68 |       expect(bankers_round(-0.5)).toBeCloseTo(0);\n     |             ^ Lazy Test\n  69 |       expect(bankers_round(1.5)).toBeCloseTo(2);\n  70 |       expect(bankers_round(19.5)).toBeCloseTo(20);\n  71 |     });","start":{"line":68,"column":13,"index":85282}},{"frame":"  71 |     });\n  72 |     it(\"should round down to nearest even\", () => {\n> 73 |       expect(bankers_round(-1.5)).toBeCloseTo(-2);\n     |             ^ Lazy Test\n  74 |       expect(bankers_round(2.5)).toBeCloseTo(2);\n  75 |       expect(bankers_round(18.5)).toBeCloseTo(18);\n  76 |     });","start":{"line":73,"column":13,"index":85492}},{"frame":"  85 |\n  86 |       const output = medianFilter(t1, window);\n> 87 |       compare(output, target, 1e-3);\n     |      ^ Lazy Test\n  88 |     });\n  89 |\n  90 |     // TODO add tests for errors","start":{"line":87,"column":6,"index":85971}},{"frame":"   96 |       const input = [0, 1, 2, 3];\n   97 |       const expected = [-3.4401896985611953, -2.4401896985611953, -1.4401896985611953, -0.44018969856119533];\n>  98 |       const output = log_softmax(input);\n      |                     ^ Lazy Test\n   99 |       compare(output, expected, 1e-13);\n  100 |     });\n  101 |","start":{"line":98,"column":21,"index":86370}},{"frame":"   97 |       const expected = [-3.4401896985611953, -2.4401896985611953, -1.4401896985611953, -0.44018969856119533];\n   98 |       const output = log_softmax(input);\n>  99 |       compare(output, expected, 1e-13);\n      |      ^ Lazy Test\n  100 |     });\n  101 |\n  102 |     it(\"should compute log softmax correctly for values with large differences\", () => {","start":{"line":99,"column":6,"index":86396}},{"frame":"  103 |       const input = [1000, 1];\n  104 |       const expected = [0, -999];\n> 105 |       const output = log_softmax(input);\n      |                     ^ Lazy Test\n  106 |       compare(output, expected, 1e-13);\n  107 |     });\n  108 |   });","start":{"line":105,"column":21,"index":86614}},{"frame":"  104 |       const expected = [0, -999];\n  105 |       const output = log_softmax(input);\n> 106 |       compare(output, expected, 1e-13);\n      |      ^ Lazy Test\n  107 |     });\n  108 |   });\n  109 |","start":{"line":106,"column":6,"index":86640}},{"frame":"  118 |\n  119 |         const output = fft(input);\n> 120 |         compare(output, target, 1e-3);\n      |        ^ Lazy Test\n  121 |       }\n  122 |\n  123 |       {","start":{"line":120,"column":8,"index":87092}},{"frame":"  146 |\n  147 |         const output = fft(input);\n> 148 |         compare(output, target, 1e-3);\n      |        ^ Lazy Test\n  149 |       }\n  150 |     });\n  151 |","start":{"line":148,"column":8,"index":88617}},{"frame":"  158 |\n  159 |         const output = fft(input, true);\n> 160 |         compare(output, target, 1e-3);\n      |        ^ Lazy Test\n  161 |       }\n  162 |     });\n  163 |","start":{"line":160,"column":8,"index":89074}},{"frame":"  170 |\n  171 |         const output = fft(input, true);\n> 172 |         compare(output, target, 1e-3);\n      |        ^ Lazy Test\n  173 |       }\n  174 |     });\n  175 |   });","start":{"line":172,"column":8,"index":89499}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  66 |   describe(\"bankers rounding\", () => {\n  67 |     it(\"should round up to nearest even\", () => {\n> 68 |       expect(bankers_round(-0.5)).toBeCloseTo(0);\n     |                                              ^ Magic Number\n  69 |       expect(bankers_round(1.5)).toBeCloseTo(2);\n  70 |       expect(bankers_round(19.5)).toBeCloseTo(20);\n  71 |     });","start":{"line":68,"column":46,"index":85315}},{"frame":"  67 |     it(\"should round up to nearest even\", () => {\n  68 |       expect(bankers_round(-0.5)).toBeCloseTo(0);\n> 69 |       expect(bankers_round(1.5)).toBeCloseTo(2);\n     |                                             ^ Magic Number\n  70 |       expect(bankers_round(19.5)).toBeCloseTo(20);\n  71 |     });\n  72 |     it(\"should round down to nearest even\", () => {","start":{"line":69,"column":45,"index":85364}},{"frame":"  68 |       expect(bankers_round(-0.5)).toBeCloseTo(0);\n  69 |       expect(bankers_round(1.5)).toBeCloseTo(2);\n> 70 |       expect(bankers_round(19.5)).toBeCloseTo(20);\n     |                                              ^ Magic Number\n  71 |     });\n  72 |     it(\"should round down to nearest even\", () => {\n  73 |       expect(bankers_round(-1.5)).toBeCloseTo(-2);","start":{"line":70,"column":46,"index":85414}},{"frame":"  72 |     it(\"should round down to nearest even\", () => {\n  73 |       expect(bankers_round(-1.5)).toBeCloseTo(-2);\n> 74 |       expect(bankers_round(2.5)).toBeCloseTo(2);\n     |                                             ^ Magic Number\n  75 |       expect(bankers_round(18.5)).toBeCloseTo(18);\n  76 |     });\n  77 |   });","start":{"line":74,"column":45,"index":85575}},{"frame":"  73 |       expect(bankers_round(-1.5)).toBeCloseTo(-2);\n  74 |       expect(bankers_round(2.5)).toBeCloseTo(2);\n> 75 |       expect(bankers_round(18.5)).toBeCloseTo(18);\n     |                                              ^ Magic Number\n  76 |     });\n  77 |   });\n  78 |","start":{"line":75,"column":46,"index":85625}}]},{"name":"Unknown Test","packageName":"unknownTest","items":[{"frame":"  78 |\n  79 |   describe(\"median filtering\", () => {\n> 80 |     it(\"should compute median filter\", async () => {\n     |    ^ Unknown Test\n  81 |       const t1 = new Float32Array([5, 12, 2, 6, 3, 10, 9, 1, 4, 8, 11, 7]);\n  82 |       const window = 3;\n  83 |","start":{"column":4,"line":80}},{"frame":"  93 |   describe(\"log softmax\", () => {\n  94 |     // Should match output of scipy log_softmax\n> 95 |     it(\"should compute log softmax correctly for usual values\", () => {\n     |    ^ Unknown Test\n  96 |       const input = [0, 1, 2, 3];\n  97 |       const expected = [-3.4401896985611953, -2.4401896985611953, -1.4401896985611953, -0.44018969856119533];\n  98 |       const output = log_softmax(input);","start":{"column":4,"line":95}},{"frame":"  100 |     });\n  101 |\n> 102 |     it(\"should compute log softmax correctly for values with large differences\", () => {\n      |    ^ Unknown Test\n  103 |       const input = [1000, 1];\n  104 |       const expected = [0, -999];\n  105 |       const output = log_softmax(input);","start":{"column":4,"line":102}},{"frame":"  110 |   describe(\"FFT\", () => {\n  111 |     // Should match output of numpy fft\n> 112 |     it(\"should compute real FFT for power of two\", () => {\n      |    ^ Unknown Test\n  113 |       {\n  114 |         // size = 4\n  115 |         // np.fft.fft([1,2,3,4]) == array([10.+0.j, -2.+2.j, -2.+0.j, -2.-2.j])","start":{"column":4,"line":112}},{"frame":"  138 |     });\n  139 |\n> 140 |     it(\"should compute real FFT for non-power of two\", () => {\n      |    ^ Unknown Test\n  141 |       {\n  142 |         // size = 3\n  143 |         // np.fft.fft([1,2,3]) == array([ 6. +0.j, -1.5+0.8660254j, -1.5-0.8660254j])","start":{"column":4,"line":140}},{"frame":"  150 |     });\n  151 |\n> 152 |     it(\"should compute complex FFT for non-power of two\", () => {\n      |    ^ Unknown Test\n  153 |       {\n  154 |         // size = 3\n  155 |         // np.fft.fft([1+3j,2-2j,3+1j]) == array([ 6. +2.j, -4.09807621+4.3660254j, 1.09807621+2.6339746j])","start":{"column":4,"line":152}},{"frame":"  162 |     });\n  163 |\n> 164 |     it(\"should compute complex FFT for power of two\", () => {\n      |    ^ Unknown Test\n  165 |       {\n  166 |         // size = 4\n  167 |         // np.fft.fft([1+4j, 2-3j,3+2j, 4-1j]) == array([10. +2.j, -4. +4.j, -2.+10.j,  0. +0.j])","start":{"column":4,"line":164}}]}],"metrics":{"aggregate":{"cyclomatic":24,"cyclomaticDensity":9.562,"halstead":{"bugs":45.297,"difficulty":12.813,"effort":1741175.891,"length":11358,"time":96731.994,"vocabulary":3996,"volume":135890.984,"operands":{"distinct":3974,"total":4629,"identifiers":["fft","arr","complex","false","output","FFT","length","2","Float64Array","outputBufferSize","transform","realTransform","isPowerOfTwo","slice","0","FFT_TEST_DATA","fft_2_real","input","1.764052345967664","0.4001572083672233","2.1642095543348874","1.3638951376004407","fft_3_real","0.9787379841057392","2.240893199201458","1.8675579901499675","5.087189173457165","1.0754876105699736","0.3233177751657647","fft_4_real","0.977277879876411","0.9500884175255894","0.1513572082976979","0.10321885179355784","0.2817655224420774","0.8259206715787131","1.0533072693191472","1.9755046539061405","fft_5_real","0.41059850193837233","0.144043571160878","1.454273506962975","0.7610377251469934","0.12167501649282841","2.891628321702047","1.2995143733619916","0.4287475285900295","0.8801964673568988","0.6461585010760772","fft_7_real","0.44386323274542566","0.33367432737426683","1.4940790731576061","0.20515826376580087","0.31306770165090136","0.8540957393017248","2.5529898158340787","1.0275594839734046","1.1794900746698127","4.321336254238002","0.4283827622463364","2.2006199533718855","2.8184083690191684","1.0886333211894632","fft_8_real","0.6536185954403606","0.8644361988595057","0.7421650204064419","2.2697546239876076","1.4543656745987648","0.04575851730144607","0.1871838500258336","1.5327792143584575","2.9826326049163367","2.1657565005584045","0.5450316795716824","0.1286017912738714","2.8923391221851134","2.050212039519846","1.6549940203328992","6.442824504097697","fft_9_real","1.469358769900285","0.1549474256969163","0.37816251960217356","0.8877857476301128","1.980796468223927","0.3479121493261526","0.15634896910398005","1.2302906807277207","1.2023798487844113","1.3749938486352948","5.342425446245793","2.975185521629713","1.22457133247234","0.6308804310909996","0.41938606274358115","1.5832577539331407","1.3873773637166027","0.8933243837257328","1.3873773637166025","0.8933243837257323","1.2245713324723406","0.6308804310909994","5.342425446245792","2.975185521629712","fft_16_real","0.3873268174079523","0.30230275057533557","1.0485529650670926","1.4200179371789752","1.7062701906250126","1.9507753952317897","0.5096521817516535","0.4380743016111864","1.2527953600499262","0.7774903558319101","1.6138978475579515","0.2127402802139687","0.8954665611936756","0.386902497859262","0.510805137568873","1.180632184122412","8.363366266001053","1.4796937055641797","0.20983245542766216","0.3454288633172973","2.968909080470098","2.329350352646858","0.7633502808629014","0.5589507973309957","6.064330201474169","1.3963011418461777","1.659405903990098","2.2686580120389164","0.3150779061389377","4.008518665331395","0.6106258774446865","7.486167856443222","fft_25_real","0.028182228338654868","0.42833187053041766","0.06651722238316789","0.3024718977397814","0.6343220936809636","0.3627411659871381","0.672460447775951","0.3595531615405413","0.813146282044454","1.7262826023316769","0.17742614225375283","0.4017809362082619","1.6301983469660446","0.4627822555257742","0.9072983643832422","0.05194539579613895","0.7290905621775369","0.12898291075741067","1.1394006845433007","1.2348258203536526","0.402341641177549","0.6848100909403132","0.8707971491818818","0.5788496647644155","0.31155253212737266","7.327510303739734","1.377932222483735","3.044921011687328","0.06954965931518875","5.483478593023237","2.616166182267447","2.0815154752919764","0.1551657690860495","0.5208228796162939","0.3085012063215258","2.1386609330432687","0.566204290441261","0.012329506565646242","1.309786704987264","3.1736358514734673","1.0557581301013133","2.4635866620117564","2.579387724556426","1.9885603872002973","3.9572284078024613","5.498314280945309","0.6049416192890185","2.7215390337882552","2.8864443288170083","0.6099589663561517","2.8864443288170074","0.6099589663561518","0.604941619289019","2.721539033788255","1.988560387200297","1.3097867049872634","0.5662042904412615","0.012329506565646575","0.15516576908604957","0.520822879616294","2.6161661822674476","0.06954965931518836","5.4834785930232375","fft_27_real","0.05616534222974544","1.1651498407833565","0.9008264869541871","0.46566243973045984","1.5362436862772237","1.4882521937955997","1.8958891760305832","1.1787795711596507","0.17992483581235091","1.0707526215105425","1.0544517269311366","0.40317694697317963","1.2224450703824274","0.2082749780768603","0.9766390364837128","0.3563663971744019","0.7065731681919482","0.010500020720820478","1.7858704939058352","0.12691209270361992","0.40198936344470165","1.8831506970562544","1.3477590611424464","1.2704849984857336","0.9693967081580112","1.17312340511416","1.9436211856492926","9.485150752680255","3.3736195725050755","0.6576671739932465","1.4668314059671266","3.7345058492453083","0.41824676938222627","1.9663430754071836","5.709032912166549","5.528638987648501","1.8435730384179874","0.34683544424097734","4.963689356113413","0.5177297293983665","5.8830486994336315","3.207542182273314","1.8987452089640713","2.1505302726369","6.603715178395637","5.036393219486801","1.3865285438489818","10.275020532162417","0.1681971482993614","2.6656111808114664","3.3300735021919055","3.3923756439906483","2.9951195195022233","4.64643931476696","3.3923756439906487","0.16819714829936183","2.665611180811466","1.3865285438489812","10.275020532162415","1.8987452089640697","2.1505302726368996","3.207542182273315","4.963689356113414","0.5177297293983658","0.41824676938222605","1.9663430754071831","3.7345058492453087","3.373619572505076","0.6576671739932474","fft_32_real","0.41361898075974735","0.7474548114407578","1.9229420264803847","1.4805147914344243","1.8675589604265699","0.9060446582753853","0.8612256850547025","1.9100649530990337","0.2680033709513804","0.8024563957963952","0.947251967773748","0.1550100930908342","0.6140793703460803","0.9222066715665268","0.37642553115562943","1.0994007905841945","0.298238174206056","1.3263858966870303","0.6945678597313655","0.14963454032767076","0.43515355172163744","1.8492637284793418","0.6722947570124355","0.40746183624111043","0.7699160744453164","0.5392491912918173","0.6743326606573761","0.03183055827435118","0.635846078378881","0.6764332949464997","0.5765908166149409","0.20829875557799488","11.014830327385901","1.2409883700304647","5.276491159392059","1.534551501998357","4.8297133119274545","1.336708303789408","2.7137782948769944","4.424467817605524","0.843485461536611","6.581416660337224","0.1795449695375516","2.514517651560188","0.05943606215207886","4.207556144474312","7.447633642178459","2.0080404448719507","4.057057066134013","1.4811356128841098","3.432496305430468","1.3934203835489032","3.231520399869298","4.317592600060283","0.1993606400932625","0.7034100876395168","2.317901569810786","3.7371408499766874","5.7058540737147405","6.345803325381664","2.1851091826937408","1.6157350284647216","2.7643998907723595","5.969395642755025","1.6157350284647212","2.7643998907723604","3.737140849976688","4.317592600060284","0.19936064009326138","1.4811356128841102","4.207556144474311","6.581416660337223","0.1795449695375514","1.3367083037894085","1.2409883700304651","fft_49_real","0.3960067126616453","1.0930615087305058","1.4912575927056055","0.4393917012645369","0.16667349537252904","0.6350314368921064","2.383144774863942","0.9444794869904138","0.9128222254441586","1.117016288095853","1.3159074105115212","0.461584604814709","0.06824160532463124","1.7133427216493666","0.7447548220484399","0.8264385386590144","0.0984525244254323","0.6634782863621074","1.126635922106507","1.0799315083634233","1.1474686524111024","0.43782004474443403","0.4980324506923049","1.9295320538169858","0.9494208069257608","0.0875512413851909","1.225435518830168","0.8443629764015471","1.0002153473895647","1.5447710967776116","1.1880297923523018","0.3169426119248496","0.920858823780819","0.3187276529430212","0.8568306119026912","0.6510255933001469","1.0342428417844647","0.681594518281627","0.8034096641738411","0.6895497777502005","0.45553250351734315","0.01747915902505673","0.35399391125348395","1.3749512934180188","0.6436184028328905","2.2234031522244266","0.6252314510271875","1.6020576556067476","1.1043833394284506","7.887557633860811","5.014267769110843","4.376842071326452","2.3853231496935923","10.851256239812793","3.2717318894892826","5.326849080561187","2.7264013581332716","1.1514977438201093","7.652841900031138","3.7746076991956867","5.309279658846421","8.814060475350379","2.6168809007788796","4.677691230979557","7.6656963597889805","3.4858425270229887","0.2740709971425779","4.676330054757555","5.155232202781799","3.7556835779660136","5.001888119593458","3.6198301043995045","0.0953704694177091","3.6318583861463845","2.767000800593773","2.450144252684209","1.2540039367717049","9.279722666945066","3.815471636849461","3.3563499317203815","12.763423104544493","0.4158128174652558","3.995279461690892","6.6439121988180325","3.2201986963478983","0.6334206695259166","2.4912752816319514","1.9446295959593973","1.027982187347956","2.8785858483639863","1.3490313376869536","14.471900839049741","1.0215246227635422","0.4420763712931004","1.0162745955034818","0.3075325636480104","5.867850815975937","1.9145668225042987","1.9145668225042978","1.0162745955034822","0.3075325636480101","1.0215246227635417","0.4420763712931006","1.0279821873479558","2.878585848363986","2.491275281631952","1.9446295959593989","3.2201986963478975","0.633420669525917","3.9952794616908927","0.41581281746525595","2.767000800593772","2.4501442526842085","3.631858386146384","5.1552322027818","3.755683577966013","0.2740709971425781","4.676330054757556","7.665696359788981","3.4858425270229905","5.30927965884642","3.774607699195687","1.1514977438201108","5.326849080561189","2.385323149693591","10.851256239812795","5.014267769110844","fft_64_real","0.052165079260974405","0.7395629963913133","1.5430145954067358","1.2928569097234486","0.26705086934918293","0.0392828182274956","1.1680934977411974","0.5232766605317537","0.1715463312222481","0.7717905512136674","0.8235041539637314","2.16323594928069","1.336527949436392","0.3691818379424436","0.2393791775759264","1.0996595958871132","0.6552637307225978","0.640131526097592","1.6169560443108344","0.024326124398935636","0.7380309092056887","0.27992459904323824","0.09815038964295794","0.9101789080925919","0.31721821519130206","0.7863279621089762","0.46641909673594306","0.9444462559182504","0.41004969320254847","0.017020413861440594","0.3791517355550818","2.259308950690852","0.04225715166064269","0.955945000492777","0.34598177569938643","0.4635959746460942","0.4814814737734622","1.5407970144446248","0.06326199420033171","0.1565065379653756","0.23218103620027578","0.5973160689653627","0.237921729736007","1.4240609089825316","0.49331988336219407","0.5428614760167177","0.4160500462614255","1.1561824318219127","0.7811981017099934","1.4944845444913688","2.0699850250135325","0.42625873077810095","0.6769080350302455","0.637437025552229","0.39727181432879766","0.13288057758695562","0.2977908794017283","0.3090129690471222","1.6760038063299767","1.15233156478312","1.079618592036821","0.8133642592042029","1.466424327802514","0.5210648764527586","1.64663603068023","1.505825929177829","9.200008132744042","2.544735819316532","1.5339227544442826","7.4360215710438755","1.7984575917004604","1.3619465096845937","4.8456564834488915","5.070506185450519","4.849409603121612","3.777805068935999","0.17970844009281262","5.309242543498751","6.973066979348705","5.944277107889729","1.4068283873569305","7.321235075656323","8.916520841302049","5.0314030969029835","1.309770133246369","3.721064537404591","2.7547595090183408","3.8878856671539617","0.733440111196902","5.958504522515222","9.443751218054468","3.743781835570924","1.4088028338848555","1.4543498973854279","1.4051068307925165","10.284222394185964","6.362595288575114","5.69300272333881","2.3840261995408785","2.344460920124865","8.555867083200523","10.10946038896856","1.5537275998675408","0.8110283215952525","0.08930281805022311","0.3624099573254269","4.570396206585882","7.6585567061471576","9.739963432241709","4.941569815253301","0.6205797252271052","7.291786374000026","1.6649582074043856","5.388745981879483","1.3949577742938146","1.4070140670266627","11.226248771172266","4.869069031848913","4.140589494166391","1.0264270218179838","0.9000492064571382","4.80696917175708","0.26025510601075585","4.725688003441722","8.559147480463128","1.4773429342657596","6.3922359470118755","4.01533581906691","1.4773429342657578","6.392235947011875","4.7256880034417215","0.26025510601075497","4.869069031848914","1.4070140670266635","4.941569815253302","0.6205797252271044","7.658556706147157","9.739963432241707","0.36240995732542824","4.570396206585883","10.109460388968563","2.344460920124864","5.693002723338812","2.38402619954088","1.4051068307925176","3.743781835570923","1.4088028338848546","5.95850452251522","3.72106453740459","2.754759509018341","5.031403096902983","1.309770133246368","7.321235075656325","6.973066979348703","3.777805068936","0.1797084400928135","5.07050618545052","1.7984575917004595","2.544735819316533","fft_81_real","0.5757879698130661","0.14195316332077967","0.3193284171450952","0.6915387510701866","0.6947491436560059","0.7255973784635843","1.3833639553950554","1.582938397335082","0.6103793791072052","1.188859257784029","0.5068163542986875","0.5963140384505081","0.05256729626954629","1.936279805846507","0.18877859679382855","0.5238910238342056","0.08842208704466141","0.3108861716984717","0.09740016626878341","0.3990463456401302","2.77259275642665","1.9559123082506942","0.39009332268792646","0.65240858238702","0.3909533751876011","0.49374177734918845","0.11610393903436653","2.0306844677814944","2.0644928613593194","0.11054065723247261","1.0201727117157997","0.6920498477843912","1.5363770542457977","0.28634368889227957","0.6088438344754508","1.0452533661469547","1.2111452896827009","0.6898181645347884","1.3018462295649984","0.6280875596415789","0.4810271184607877","2.303916697683942","1.0600158227215473","0.13594970067832082","1.1368913626026953","0.0977249677148556","0.5829536797532936","0.3994490292628752","0.37005588784751875","1.3065268517353166","1.658130679618188","0.11816404512856976","0.6801782039968504","0.6663830820319143","0.4607197873885533","1.3342584714027534","1.3467175057975553","0.6937731526901325","0.1595734381462669","0.13370155966843916","1.0777438059762627","1.1268258087567435","0.7306777528648248","0.38487980918127546","0.094351589317074","0.042171451290578935","0.2868871923899076","0.0616264020956474","0.10730527629117469","0.7196043885517929","0.8129929885540773","0.2745163577239395","0.8909150829955279","1.1573552591908536","0.3122922511256933","0.1576670161638159","2.2567234972982093","0.7047002758562337","0.9432607249694948","0.7471883342046318","1.188944955203736","6.019981320094997","11.024215089600144","2.2296309610489784","7.885780110732945","6.9546439213354425","2.1468923343095865","2.0704996330469774","5.223342327125926","3.3335079943959576","6.670733097535111","3.059813085584419","1.291987686750553","0.4705982966401041","2.6851539401562734","0.13762863856647578","2.2292463073335753","1.3031715676222848","8.459551141726745","1.1728586245314498","5.19534088481691","4.1102647711302005","4.442176173858688","5.752409619199853","10.978436211517131","2.360518158521794","8.97056708617231","4.44028490950546","0.7378544972090442","0.3833473146759321","2.41788584599411","2.094126839887842","0.9134777730571964","0.6964431384964922","1.348881203926696","4.273283923628751","2.6990650914215637","0.04446227794217483","2.8201900136765587","10.405176121148552","4.561086132295523","4.8957475545660945","9.626965987488632","5.703554469280806","5.118571440405241","0.47801741518584884","4.087758685622818","16.982284140767902","1.672788156348311","8.247953480159863","15.76267685360949","6.557268666342","8.45494487748653","7.023784282842257","0.9696988388268291","0.6791846860727092","3.7628962341106327","6.731131201638246","0.3164269710342955","0.346532027732811","5.824835704304008","8.818250625842744","5.382334715219444","1.672571325598101","6.240545283378912","5.74548463471282","6.38340050971792","3.0747648212362937","11.52437440252928","1.3394713252215091","6.27611320575086","6.861171951341367","10.764313909223372","10.425524196300067","8.17856146704236","14.338103920769218","4.86550855683382","5.452700220702592","3.278038589307964","1.8007559828104207","0.6670476307446598","9.785124153822995","0.6670476307446602","9.785124153823","3.2780385893079633","1.8007559828104218","4.865508556833819","8.178561467042359","14.338103920769221","10.425524196300069","6.276113205750862","6.861171951341369","11.524374402529276","1.3394713252215045","6.3834005097179185","3.0747648212362932","6.2405452833789115","5.745484634712819","5.382334715219443","1.6725713255980996","0.31642697103429596","0.34653202773281055","3.762896234110635","6.731131201638245","7.023784282842258","15.762676853609491","6.557268666342001","1.67278815634831","8.247953480159865","4.087758685622817","5.118571440405242","0.47801741518584784","9.626965987488635","5.703554469280807","4.561086132295526","4.895747554566093","2.82019001367656","10.405176121148555","2.699065091421563","0.04446227794217439","1.3488812039266977","4.273283923628747","0.9134777730571959","0.6964431384964889","2.417885845994109","2.0941268398878425","0.7378544972090446","0.3833473146759312","4.4402849095054595","10.978436211517133","2.3605181585217934","5.752409619199854","5.195340884816912","1.1728586245314485","2.2292463073335775","1.3031715676222801","2.6851539401562716","0.13762863856647434","0.47059829664010344","6.670733097535112","3.0598130855844157","5.223342327125925","3.3335079943959554","2.1468923343095883","2.0704996330469765","7.8857801107329415","11.024215089600146","2.229630961048978","fft_125_real","0.7732529774025997","1.1838806401933177","2.659172237996741","0.6063195243593807","1.7558905834377194","0.45093446180591484","0.6840108977372166","1.6595507961898721","1.068509399316009","0.45338580385138766","0.6878376110286823","1.2140774030941206","0.4409226322925914","0.2803554951845091","0.3646935443916854","0.15670385527236397","0.5785214977288784","0.349654456993174","0.764143923906443","1.4377914738015785","1.3645318481024713","0.6894491845499376","0.6522935999350191","0.5211893123011109","1.8430695501566485","0.4779740040404867","0.47965581400794766","0.6203582983435125","0.698457149107336","0.00377088908626934","0.9318483741143037","0.339964983801262","0.01568211160255477","0.16092816829822298","0.19065349358139935","0.3948495140334503","0.26773353689396645","1.1280113314700069","0.280441705316296","0.9931236109295807","0.8416312640736364","0.24945858016094885","0.04949498165009074","0.49383677628095635","0.6433144650629279","1.5706234086334527","0.20690367616397173","0.8801789120807822","1.6981058194322545","0.3872804753950634","2.2555642294021894","1.0225068436356035","0.0386305518401881","1.6567151023219537","0.9855107376841507","1.4718350074635869","1.6481349322075596","0.16422775548733395","0.5672902778526694","0.2226751005151545","0.35343174875719907","1.6164741886510325","0.2918373627478628","0.7614922118116233","0.8579239242923363","1.1411018666575734","1.4665787155741776","0.852551939461232","0.5986539369229861","1.1158969859603944","0.7666631816450861","0.3562928174722889","1.7685384506770307","0.35548179274376907","0.8145198224878664","0.05892558918162996","0.18505367100934153","0.8076484876163557","1.4465346995633879","0.8002979493400275","0.3091144447717088","0.23346666154369272","1.7327211869191332","0.6845011068591904","0.3708250012811021","0.14206180518723566","1.5199948607657727","1.7195893074161945","0.9295051114795281","0.5822245913979243","2.0946030712061448","0.12372191423350658","0.130106954193704","0.09395322938556872","0.9430460873225178","2.7396771671895563","0.5693120534701851","0.26990435494076137","0.4668455460527625","1.4169061131262595","0.8689634868967954","0.27687190584612803","0.9711045704444846","0.3148172045158238","0.8215857120497958","0.005292646299360854","0.8005648034309968","0.07826017516166135","0.39522898265435435","1.159420516399913","0.08593076697161273","0.19429293804577166","0.8758327615873309","0.11510746848722672","0.4574156062209908","0.9646120137337284","0.7826291558275251","0.11038929902688775","1.0546284639850139","0.8202478373246812","0.4631303293186071","0.2790957643924534","0.33890412521594454","2.0210435614847975","0.46886418796679563","12.976781205595502","0.5336306740788994","9.664313658528595","2.250865418762321","6.399236976457672","4.984600678216093","10.085773094158728","4.054865444587319","1.1220280117249106","12.381959140729","4.245941970428558","11.300429673882508","3.867369304887277","1.924145132324413","15.625845728307613","3.683967210179358","9.246098611130797","6.678100602051274","5.8877245671287906","11.142505237356518","1.2462822325294702","4.950012182132614","15.368429468743631","2.7544743905540385","7.397618288416753","4.896491435868608","21.15703724867305","10.418689778983975","1.697253164520248","2.2518122169760852","14.869916845413385","5.553898084870594","3.616357859997289","8.688187732450988","9.51306110875087","1.8459884086796337","6.750879404311422","10.389191729731694","8.563754760867933","6.323482750892878","0.814569185033468","6.339262858307836","12.395809458636048","5.5325241155089815","4.087114562924723","5.264130311599194","5.174155710626681","0.07817803409444535","4.502699566709124","6.841988594388185","4.209615030635216","3.014915877040603","0.7642671251818629","4.979942269363006","0.7954973970411463","9.213201050170268","20.281572828473664","2.195700817994501","2.8150917630751158","3.66256874231074","4.947718687255637","2.417023995325397","6.311630702081038","8.910067289733103","1.3549619066609422","7.604782781699578","3.2671105424317712","0.9261608630826195","10.26033603214804","2.477431685753063","0.5368669007709066","6.588511626180253","3.6391310126388206","0.7696459233665145","10.849962526266822","0.8214214627634562","9.665598459357405","4.208875535725593","8.955547690168373","2.3998423294426914","6.900645072282014","10.561899982588944","6.1497412675557115","10.104315792100294","11.339404667032188","4.041967950367949","10.290041543502431","9.533068142456843","5.3782354906044025","4.12027245501964","0.5914284618824925","12.365588431711828","2.701635423848076","6.366846689539269","5.370727636437312","6.689816472907384","7.334498752981377","13.69756331474747","3.7921571289587113","0.2721490559996148","0.2084376847247582","9.275694421318246","16.06448352473527","1.3029488980606758","8.03640349313321","0.20226177706452786","6.0912757829407465","4.452961538391443","15.072885312247177","0.8419482730978101","7.04697219502747","12.864547051022127","6.206422060382598","6.149387177052475","15.825612767912974","0.5432046258303531","0.24636987696629387","0.5819230336105994","10.272301011724789","3.8285784744531433","1.1829320961516245","5.404044842034781","0.4066057531145235","1.2770351094581365","7.590779935818785","1.2770351094581383","7.590779935818781","0.4066057531145224","3.828578474453144","1.1829320961516248","0.5819230336105993","10.272301011724787","0.54320462583035","0.2463698769662941","6.149387177052476","15.825612767912975","12.864547051022129","0.8419482730978074","4.452961538391442","0.20226177706453008","6.091275782940745","9.27569442131825","3.792157128958717","6.689816472907385","7.334498752981374","6.366846689539267","2.7016354238480744","4.120272455019638","0.5914284618824928","5.378235490604402","4.041967950367946","11.339404667032191","2.399842329442692","4.208875535725592","0.8214214627634587","9.665598459357408","0.7696459233665118","6.588511626180252","3.6391310126388214","0.536866900770905","0.9261608630826198","10.260336032148041","8.9100672897331","1.354961906660943","2.4170239953253976","6.311630702081036","3.662568742310737","2.1957008179945006","2.815091763075113","9.213201050170266","4.979942269363008","0.7954973970411481","3.0149158770406013","0.7642671251818633","0.07817803409444402","4.502699566709122","5.264130311599196","5.174155710626682","5.532524115508983","4.087114562924725","6.339262858307835","6.323482750892879","0.8145691850334673","10.389191729731692","8.563754760867932","1.845988408679628","6.75087940431142","8.68818773245099","3.6163578599972883","2.251812216976085","10.418689778983971","1.6972531645202498","4.896491435868606","2.7544743905540354","7.397618288416755","15.368429468743635","11.142505237356517","1.2462822325294698","3.683967210179361","1.9241451323244125","15.625845728307619","11.30042967388251","3.8673693048872773","4.245941970428559","4.054865444587321","1.122028011724911","4.984600678216097","10.085773094158727","0.5336306740788972","9.664313658528593","fft_128_real","2.201441285500558","0.1993001968964652","0.050603540961665895","0.5175190425104033","0.9788298593587699","0.43918952180214793","0.18133842921782128","0.5028167006425383","2.4124536795437486","0.960504381633148","0.7931173627076716","2.2886200400145285","0.251484415021537","2.01640662779976","0.5394546333745014","0.27567053456055696","0.7097279658468882","1.738872677454511","0.9943943913154989","1.3191368763015756","0.8824188185499185","1.1285940645145685","0.4960009463439622","0.7714059486768455","1.0294388287827672","0.9087632459590531","0.4243176209779015","0.8625960113284511","2.655619092974933","1.5133280825732052","0.553132064207584","0.045703960660234855","0.2205076557571733","1.0299352833089765","0.34994336458910474","1.1002843382203737","1.2980219723262212","2.6962240525635797","0.07392466628041514","0.6585529668050037","0.5142339659399888","1.0180418752873648","0.07785475594085076","0.38273243001226814","0.03424228053195387","1.0963468456657985","0.23421580134453654","0.3474506524985633","0.5812684768603252","1.6326345262344952","1.567767724308454","1.1791579306376878","1.3014280716647608","0.8952602728899299","1.3749640663929898","1.3322116545945017","1.9686246897860202","0.6600563201340829","0.175818953296028","0.4986902749098275","1.0479721559680528","0.2842796708072146","1.7426687806556311","0.22260568094832048","0.9130792180417964","1.6812182154944335","0.8889713580954499","0.242117960985123","0.8887202573536308","0.9367424635352571","1.412327706037443","2.369586905226603","0.8640523004976479","2.2396040586617367","0.4014990550902875","1.2248705641936597","0.06485610634357618","1.2796891732042395","0.5854312042777726","0.2616454457109007","0.18224478378994294","0.20289684076666706","0.1098827793093138","0.2134800489101689","1.2085736537332212","0.2420198298702195","1.5182611703557054","0.38464542314251776","0.4438360931551978","1.0781973037142378","2.5591846663440965","1.1813786012882859","0.6319037580051673","0.16392857245258663","0.09632135592119682","0.9424681192203938","0.2675947462353477","0.6780257815644504","1.2978457906510987","2.36417381714118","0.02033418170524325","1.3479254226291204","0.761573388256559","2.011256681463137","0.044595426455857026","0.19506969715138117","1.7815628557055914","0.7290446587946957","0.19655740072878491","0.3547576931132181","0.6168865543932788","0.008627898917576322","0.5270042084546597","0.453781912635684","1.8297404110045314","0.03700572191014953","0.7679024077327037","0.5898798207345195","0.3638588099707899","0.8056265075393678","1.1183119243216322","0.13105401154141233","1.133079879559722","1.951804101481602","0.659891729729498","1.139802455426774","0.7849575212405001","0.5543096265713009","17.373351338172824","2.9147793143550498","7.299382227996462","12.507738907636103","1.0091552608283472","8.14898282968933","5.307325780993493","0.034750314603287924","4.577509972521205","7.468519860234688","2.7826003571131217","5.138209694069926","2.2706200801626815","10.580893461437023","11.281416288223713","2.4076277186241555","8.076888559746063","7.7255720166232775","7.240220313440044","11.221660986331635","5.410676842717731","0.7666763204502667","0.23941154418990696","1.1567394707746503","8.29598249679744","5.425512551243248","4.4002233124645125","4.01519747432619","9.515412040403152","17.306448507916105","15.673102695422665","9.901937950321809","18.738864037440322","19.21931801890001","4.139374296179019","15.995833331174268","14.354578092775146","1.028728623054629","10.403106776550125","2.312215325199424","0.9570154846116288","12.655685692773659","2.588769695009625","14.96829370833483","0.28008251578319854","19.11873843663264","1.1020798388070263","2.4267878006424475","2.4199460094928953","7.0321828345356066","2.542686317569949","7.804615781068486","7.887570592086873","6.609647506979987","10.661665300030329","13.524024198497745","11.81604749808395","1.07822493702058","1.484839411655623","11.897938634419027","8.105846942980566","5.44601793359646","6.0339961403022055","6.671236362873311","1.7118899285267464","0.9493422927794772","2.6019479213685455","0.783595826718674","1.6178298328406964","1.9230298563197574","5.115726520029282","7.036766891552735","8.977589519991337","6.579537548860962","0.34069352829828503","9.041064010465133","6.282136934564469","3.7117329189048838","5.394231282736409","11.177409462832511","2.636948493512454","6.698531905653285","6.518503941570649","8.905271814948328","12.87201877019853","7.090676972577299","8.341357540310314","4.648696854100845","6.957035567575479","2.241879985890022","15.193281739525478","1.2271924686489228","4.616886618458665","14.338441214676216","14.862058456971615","8.10221962201912","6.558552885146747","4.313458061854922","6.800570539708076","9.46963628765032","14.706255169181524","1.0508252086336558","14.12155372134561","10.30295927948794","1.482579183504495","9.087461443620512","7.457473719466465","10.18793804336269","25.247790452763812","4.02147223954335","15.36278457408435","6.138499904099753","0.4601627652745437","8.437677953855983","1.9355996291504027","16.216877073460964","6.537035151324876","4.1897004524761075","2.2519743698026677","0.6872691674164905","12.722533287194196","0.2882873356987652","5.116890429328395","20.226607459494886","1.290674771102844","2.800068989539933","1.5108108590900127","3.1832454973443687","2.8000689895399358","1.5108108590900131","0.2882873356987643","0.6872691674164899","4.189700452476105","2.2519743698026673","16.216877073460967","8.437677953855987","1.9355996291504054","4.021472239543354","15.362784574084351","10.187938043362688","7.457473719466468","1.4825791835044928","1.0508252086336576","14.121553721345606","4.31345806185492","6.800570539708074","14.862058456971612","2.241879985890021","15.193281739525482","7.090676972577298","8.341357540310312","12.872018770198533","6.698531905653283","6.518503941570645","3.7117329189048833","5.394231282736407","6.282136934564471","6.579537548860961","0.3406935282982859","7.036766891552734","1.9230298563197554","5.115726520029284","1.6178298328406973","2.601947921368547","5.446017933596458","6.033996140302204","8.105846942980568","1.0782249370205794","1.4848394116556225","6.609647506979986","7.032182834535609","2.5426863175699514","1.1020798388070299","0.2800825157832003","2.588769695009626","2.312215325199422","0.9570154846116292","1.02872862305463","10.403106776550121","4.139374296179023","17.3064485079161","15.673102695422664","4.400223312464516","1.1567394707746494","8.295982496797441","0.7666763204502649","0.23941154418990784","11.221660986331633","7.725572016623278","7.240220313440043","5.138209694069921","2.2706200801626824","7.468519860234687","2.782600357113122","0.0347503146032867","8.148982829689329","5.307325780993491","12.507738907636105","1.0091552608283463","7.299382227996464","fft_2_complex","true","0.3076825439929962","1.695198893547058","1.7243221998214722","0.2783026695251465","1.416639655828476","1.4168962240219116","2.0320047438144684","1.9735015630722046","fft_3_complex","0.9383012056350708","0.6457691788673401","0.8741029500961304","0.8208730816841125","1.1462081670761108","1.1436293125152588","1.0820099115371704","0.32301294803619385","0.24714778504918455","1.042797324689853","3.649765743393198","0.5714972638759733","fft_4_complex","1.4125794172286987","0.6605323553085327","0.28041958808898926","0.03313862159848213","1.6822501420974731","0.03843749687075615","0.424235999584198","0.8116567134857178","0.41348713636398315","0.22270047664642334","3.8733476512134075","0.005685735493898392","0.12585431337356567","1.4668901935219765","2.3163114674389362","1.4036254398524761","fft_5_complex","0.17418311536312103","1.2342511415481567","1.477837324142456","1.1353919506072998","0.21928854286670685","0.8536889553070068","0.5614511966705322","0.6619521379470825","0.8825250864028931","0.19404278695583344","0.011244386434555054","1.6108246892690659","1.9977527610189005","4.495568829702767","0.17773784354010536","2.9033977754116895","0.9196550557167773","0.7794573885094949","0.018199898511857437","0.39634359661410157","fft_7_complex","1.2519853115081787","0.8415557742118835","1.4540354013442993","2.404756546020508","1.4876911640167236","1.494455099105835","0.5286277532577515","2.204728603363037","0.5613620281219482","0.7104699611663818","0.4594193398952484","0.6865041255950928","0.4614850580692291","0.4871855676174164","1.0492441654205322","7.855284541845322","0.039888223328758965","2.182752912893351","0.22803454984866334","2.054368234099608","2.9522900484683143","1.8098744525563912","1.2074691685152796","2.159880155954229","2.3732051464911823","1.5194156322450416","7.354191521775993","0.03341189207448503","fft_8_complex","0.970332682132721","0.02602463774383068","0.019165080040693283","0.39630618691444397","0.030557435005903244","0.20711614191532135","2.1260392665863037","0.4882599413394928","0.38254037499427795","0.11685442924499512","0.10177633911371231","0.9286617040634155","1.243769645690918","1.106126070022583","0.0841875895857811","0.24541817605495453","4.9583684131503105","0.8362335879355669","1.6087226322558026","0.5188463473486555","0.5127437971532345","0.6852134335786104","3.193741520912889","3.0038725843536103","0.2960318624973297","3.2810584288090467","0.9862873903181653","2.1933362079990255","0.6698357500135899","3.493357440456748","0.22013705042147969","0.8632062969612324","fft_9_complex","0.06354460120201111","0.2525795102119446","1.3290656805038452","1.239378571510315","0.2628045976161957","0.6161656975746155","1.4840424060821533","0.8743874430656433","0.5852842926979065","1.1418819427490234","0.6792443990707397","0.5788629055023193","0.40828627347946167","2.353774309158325","0.34253063797950745","1.3391598463058472","0.5310598015785217","0.7086358070373535","1.5472092926502228","2.1770710349082947","6.615882017596261","0.6056449746473178","2.5839119815832605","0.5586794569181851","3.9573314649336995","0.4166996852974395","0.136326996045127","2.6370722903002877","1.4693146501411956","2.4984601837994824","0.6265124219185647","1.0866513474364776","3.439069243722412","5.861805640552551","2.529515620619202","3.879376023537104","fft_16_complex","1.0133312940597534","0.3585434854030609","0.6402965188026428","1.3225007057189941","0.4752223789691925","0.5362467765808105","1.2483383417129517","0.05567394196987152","0.041222695261240005","0.5106480717658997","0.34942546486854553","1.4202176332473755","1.2869471311569214","1.1659399271011353","1.326190710067749","0.7442878484725952","1.092625379562378","0.6453229188919067","0.3833552300930023","0.4733515679836273","0.6908642053604126","1.0344504117965698","0.07214371114969254","1.7793974876403809","0.4729478657245636","0.7470325827598572","0.46451860666275024","1.7667423486709595","0.8151687383651733","1.0275626182556152","0.7450098395347595","0.052204303443431854","1.5078198499977589","1.207284428179264","4.4806762050351825","1.1643592216953969","4.103445578388806","0.030867462785639788","0.10790451872168705","0.5227224508100916","1.532535444945097","1.991386003792286","2.03052393483773","6.085669694760458","7.229743305508964","3.4075612910619277","5.958691786804708","2.256651932037089","5.43960240855813","3.050593890249729","5.332886654634274","3.73714542609058","0.0764908827618398","8.509074812562861","0.7390405363915563","0.02108386955870034","4.735840562731028","2.3431448861956596","2.2543726824714905","2.586308038032556","3.6471191682769133","1.1870411745676497","4.064841383148511","0.2037700224509582","fft_25_complex","1.9739670753479004","0.837864100933075","1.1114044189453125","0.5064931511878967","0.32460978627204895","0.5005347728729248","0.3506036102771759","0.0742226392030716","0.37107688188552856","0.5423977971076965","1.9017586708068848","0.6719839572906494","2.0592153072357178","0.39552798867225647","0.16856394708156586","0.19291874766349792","0.04277687519788742","0.04168238118290901","1.3544977903366089","0.5823065638542175","0.5274385809898376","0.40750083327293396","0.8166235089302063","0.9344403743743896","0.633162260055542","1.6156861782073975","0.017774872481822968","0.4030669629573822","1.5376009941101074","0.5414798855781555","1.5840349197387695","0.37068140506744385","1.5073336362838745","0.4143368899822235","0.0665762796998024","1.2245029211044312","0.3779613673686981","1.7612340450286865","0.9021579623222351","0.02208423614501953","0.017875323072075844","0.09636616706848145","0.1060614064335823","0.9343460202217102","0.9497752785682678","2.030526876449585","1.145573616027832","0.636160671710968","1.1762216091156006","0.4195115566253662","0.08689814247190952","1.8966175056993961","4.5468912855738495","1.8818154119554684","0.5200552972284029","1.2734341399283204","0.4632869234518082","5.931840244626491","2.9589503069493865","0.5547667441139432","1.5273151665934335","6.215078295347433","15.640798930847374","2.4457132590529254","2.0174810051387153","0.018505660090085918","0.195679780600583","1.5733085555890094","2.608942923248818","1.8646958677420233","5.164085446696965","1.34215964208527","5.615886183114355","0.2185132207952143","5.847780025346529","4.8320068942200045","0.10823882684491926","0.9458843955572025","9.968247687952289","5.8960346192185416","1.8915989122741381","0.7760332258366917","5.750397961307298","3.3450370182735623","0.40650253504753975","3.1697133057132096","3.105915528359142","7.099303168364118","6.373188277089521","1.2862869596061528","4.01898105322616","1.3412458970644465","3.983941673212713","2.3932716249692954","4.4090529271307455","8.431989160831321","3.768856482573692","3.025597080828077","7.475676439572469","11.354418102217751","fft_27_complex","0.7116051316261292","1.037112832069397","0.6106399893760681","0.7972601652145386","0.2644272744655609","1.5348200798034668","0.42119401693344116","0.22403796017169952","1.1107473373413086","0.7211647629737854","0.6500771641731262","1.2391200065612793","0.15565899014472961","0.5251198410987854","1.8477299213409424","0.3672321140766144","1.4575940370559692","0.28738635778427124","0.4544501006603241","0.10830547660589218","0.5361469388008118","0.3605248034000397","1.8324573040008545","0.07127898186445236","0.04289998486638069","0.9799603819847107","0.5673006772994995","0.6624241471290588","0.3812290132045746","1.7817859649658203","0.15860582888126373","1.0848448276519775","0.7432076334953308","0.5504264831542969","2.300358772277832","0.41666755080223083","3.017878293991089","1.61266028881073","0.419252872467041","0.20492435991764069","0.36734986305236816","1.0211094617843628","0.3779532313346863","0.3455152213573456","0.3696709871292114","0.5317375659942627","0.7667483687400818","0.7377064824104309","1.1323468685150146","0.4188673496246338","0.1713690608739853","0.8521258234977722","1.9920309782028198","0.2819546163082123","2.560753207653761","0.9453208297491074","9.347935323529054","0.9253007594026554","3.3062934251957525","9.624685892964905","3.747491429172474","6.944443936382198","0.2846532016836547","2.186295990939281","1.6811782376183848","6.6863808498799235","6.517827112663515","0.14943438287348965","5.055696157497922","1.2377621172326654","5.652717825977259","5.273448677870682","5.183011380415665","1.6221043494072749","7.350588286919974","3.2159710253980176","6.887033244512073","2.2722794132317587","3.079426655802572","0.7414325238817026","3.3293146897618247","5.438193278707893","7.072286065035183","1.106348191005082","6.900230177764772","4.314765981558758","0.8251297022533834","3.636347937894679","0.8573794050807142","0.5671438615765814","4.513423924725758","8.05947784599932","2.720475531609292","11.224192327686906","1.8276595977578185","0.7655023451245344","1.4131230144639861","4.705230182137967","4.606202193101245","1.2945168184514193","14.000104083285905","4.499731058762659","2.1022427540436652","2.4753477036971208","4.917062359267286","7.812371522652364","7.895156658980767","2.736259449697491","fft_32_complex","0.8450640439987183","1.3659120798110962","1.0280054807662964","0.08084108680486679","0.9755204916000366","0.5328992605209351","0.06296933442354202","0.08816881477832794","0.6170272827148438","1.8309184312820435","1.3914250135421753","0.5434551239013672","1.1874107122421265","0.6239242553710938","0.13674135506153107","0.8248231410980225","0.44601964950561523","0.5365520715713501","1.2611466646194458","1.2415540218353271","0.03862550109624863","0.7438274025917053","0.964236855506897","1.1258167028427124","0.41451361775398254","0.16199752688407898","0.17522190511226654","0.2171468436717987","2.5754177570343018","0.09452058374881744","1.6540249586105347","0.7705362439155579","0.03492758423089981","0.2652542293071747","0.044895902276039124","0.3964420557022095","0.40189823508262634","1.0244829654693604","0.7180095911026001","1.4870411157608032","0.07942715287208557","0.15951769053936005","1.0193690061569214","2.5220484733581543","0.04660886898636818","0.8388492465019226","1.0369007587432861","1.2317235469818115","0.41559332609176636","0.9562405943870544","0.6224948167800903","0.6581323146820068","0.2363770604133606","0.2054009884595871","2.034836530685425","0.08647070080041885","1.3155070543289185","1.5467650890350342","1.402755856513977","0.016710011288523674","0.732329785823822","0.09752081334590912","1.2334948778152466","1.622504711151123","3.5246070064604282","6.892655847594142","14.091260128579158","2.401029930407454","2.680974992789798","3.8916277984556755","0.5252526044217629","7.272547842564242","4.888426456046666","0.1230857616321388","0.32227787389030693","8.837821222991312","6.797800467459476","5.336196554450358","0.3831869573992117","3.2695703626864097","5.256811993196607","0.1872110292315483","5.001142715544147","2.250221073549945","8.811058109636217","5.232778335556318","0.6512846517539874","2.242062163272187","9.451628634097027","8.879343426811909","2.0671711072014323","9.227474643353165","2.163253380148122","6.008848575681659","0.7074175020118927","9.617801820579668","2.4899496845901012","2.3832117300480604","2.562616988438002","5.25214449133264","0.2925401848541538","7.40888946314626","6.728447606715459","8.585534132159177","2.8502671899324317","2.9276655593856034","6.279407417654955","0.03356822185923569","0.5101090153146224","9.679261772566992","9.235685068269035","3.9845762833139267","3.263928959146142","10.372698850929737","7.636904664040565","9.25411350837314","5.141376625258181","7.840129391031544","1.7582723882580569","2.5429684456901556","1.7377452788371315","0.002180726241851616","2.8379890490594435","2.0202939805697477","0.396858681471695","0.8400442760030362","4.233191419326372","5.119549879368318","fft_49_complex","0.653186559677124","0.9652466773986816","1.1103789806365967","0.8953530192375183","0.17809812724590302","0.7561290264129639","1.412551999092102","0.4937201738357544","0.6659147143363953","0.35966482758522034","0.7821815013885498","0.9256682991981506","2.061739206314087","1.1828033924102783","0.8627902269363403","1.1108970642089844","0.38785845041275024","0.6139956712722778","0.1652761548757553","1.3882287740707397","0.014210155233740807","0.25180017948150635","0.04756239056587219","0.7563911080360413","0.8808799386024475","0.9352231621742249","0.09307317435741425","0.9392328858375549","1.9853578805923462","0.5460475087165833","0.2075347602367401","0.9603745937347412","0.04923528432846069","0.9488556385040283","1.8051396608352661","0.4981226325035095","0.5307197570800781","0.4026987552642822","1.1836994886398315","0.5920459032058716","2.3241052627563477","0.00905652716755867","0.3693919777870178","0.8863218426704407","0.03561544418334961","0.04909980669617653","1.7207887172698975","0.1781470775604248","0.02191477082669735","0.2800677418708801","1.0829179286956787","0.9707691669464111","1.5767006874084473","1.3887768983840942","0.1409223973751068","0.6077256202697754","1.3477866649627686","0.22426994144916534","0.15349310636520386","1.9329805374145508","1.1728582382202148","0.8913836479187012","0.7144800424575806","0.018777834251523018","0.22412529587745667","1.3015447854995728","0.35400378704071045","1.3718682527542114","0.11531352996826172","0.5478003025054932","0.9265352487564087","1.0495789051055908","0.16852520406246185","2.1708903312683105","0.6477338075637817","1.3192451000213623","0.5638371706008911","0.902698278427124","0.1049879938364029","1.401151418685913","0.08417209982872009","2.0441510677337646","0.5061149597167969","2.023317337036133","1.237672209739685","0.008067949675023556","1.2302114963531494","1.6217567920684814","0.24184295535087585","0.4429032802581787","0.04756205901503563","0.04733582213521004","0.34705546498298645","0.9135802388191223","0.790744960308075","0.045627497136592865","0.08297869563102722","0.028814325109124184","0.32149941846728325","0.011710121296346188","1.5719012837700608","11.9435719170496","7.889099849425332","2.349164232580148","3.101234046136667","0.9897723162237673","2.906207608358317","7.272673248354674","0.28567752458921314","7.807930436881056","9.98287287277238","2.170225845960604","3.9995455705964806","6.139724045667118","2.6586132853906514","7.769710705243423","0.9131703097247483","9.940238191191922","8.286631830021289","7.3493173799497","8.661878987183604","3.553867174039695","11.583726594048862","6.9528434851612655","9.85410942809862","6.509237172308493","3.264008317204529","8.95247219585599","1.0683784894257498","8.209758113014594","8.459077459978726","3.5851739864239787","3.130647641813152","14.882850815864773","12.112293562127494","12.761696026041244","8.867540664810484","5.336684447842124","6.405865160930168","4.524565520649802","3.1540883076724198","0.8664358168359105","14.034517102599953","1.5599303443084476","9.534876375145306","4.0920648890208","7.072712272425977","4.325977005204747","5.285935735332723","6.9699101614527","3.845638728726241","0.6627204864850933","11.368533948151075","9.810447058144453","2.880030910522577","3.760503532656639","0.5451509287272396","1.6597167211016912","8.58285942430189","11.129246819405175","2.030691093396224","1.6669154167624718","8.748833248959015","6.192014902704366","7.3302180587750225","0.08243838526629593","5.522485457006632","10.260949490755591","3.972158254442996","14.10516382807534","3.8678504886320235","0.06906298330718297","3.321736134975782","4.198418580926676","6.9491746204757945","3.9162914328571237","5.508243105428264","2.4542837759115645","0.26676806448008605","2.9368877862382843","16.784439087864854","7.618115164366894","3.8748624559849345","1.3062132611368762","0.5913456904524359","2.1117316472857373","0.6923707074676628","1.8519748031549472","4.596152734943953","1.3913510533714808","9.06246632833908","5.377389540572535","6.9033275845955755","0.20446700081688807","3.5466927958494017","9.661642666154053","fft_64_complex","0.5566142201423645","0.31118565797805786","0.16021257638931274","1.2795861959457397","0.789443850517273","1.4509670734405518","2.3435871601104736","0.908771276473999","0.8936960697174072","0.8750560879707336","0.63246089220047","0.6453881859779358","1.4873902797698975","2.564749240875244","0.7355272769927979","0.2437494695186615","0.01852554641664028","0.5734773278236389","0.29105886816978455","1.1027342081069946","1.8088326454162598","0.7475714683532715","1.217250108718872","2.0953369140625","1.4750502109527588","1.343973159790039","0.5276563763618469","1.297399640083313","2.03525447845459","1.159611701965332","0.4579901695251465","0.9503767490386963","0.05310674011707306","0.0014978965045884252","0.18816789984703064","0.1826970875263214","0.8126240968704224","0.18846499919891357","1.0810470581054688","0.39759552478790283","0.6841163635253906","0.6645811200141907","1.4170793294906616","0.13333140313625336","0.4437287151813507","2.8415510654449463","0.07697270810604095","0.41809648275375366","1.0915343761444092","2.776437282562256","0.43745681643486023","0.26580730080604553","1.6740102767944336","0.22755879163742065","2.9241530895233154","1.4011553525924683","1.6825302839279175","1.5555111169815063","0.14711306989192963","0.8428824543952942","0.36785921454429626","0.9028973579406738","0.1373748779296875","0.32123002409935","0.22010713815689087","0.599694013595581","2.5014238357543945","1.0242420434951782","0.6038212180137634","0.6158038377761841","0.7263562083244324","1.6927067041397095","1.2062644958496094","0.26875412464141846","1.0378527641296387","0.3995000422000885","0.24585849046707153","0.30057334899902344","1.389653205871582","0.22163736820220947","0.07863101363182068","0.22048908472061157","0.9795127511024475","0.6902763247489929","0.20713239908218384","1.416999340057373","0.4947267770767212","0.8151863813400269","1.6725231409072876","1.9904801845550537","0.21500161290168762","0.44239726662635803","0.6723101735115051","0.6706801056861877","0.21685439348220825","0.7185264825820923","0.9003168344497681","0.29727739095687866","1.247776985168457","1.110876441001892","0.17718446254730225","0.8177000284194946","0.6590757966041565","0.5754866600036621","1.1977955102920532","1.1977572441101074","1.5937381982803345","2.6281495094299316","0.7925133109092712","1.5867403745651245","0.6221466660499573","1.4161043167114258","1.6597610712051392","0.7671688199043274","0.4350447356700897","0.16583804786205292","2.573836088180542","0.8150725960731506","0.6248568296432495","1.627732753753662","0.3362247049808502","0.30031880736351013","1.0735864639282227","1.333678960800171","1.4852718114852905","0.8292962312698364","0.2946455478668213","0.4848930835723877","18.114436665549874","1.03589254419785","7.089877931654041","8.136593953551714","7.48613375743217","3.4058307917826487","0.11349749558287137","7.230611270566168","8.574244204990293","5.7986400915728815","5.473250096298479","7.160363687658917","5.13533852659519","1.8255020562058237","7.273548900259892","24.690830952503084","1.6868156269139245","8.810813815606256","6.6254795081932745","4.567693073247041","2.239049755279698","17.516871542107324","1.3976937653317711","4.659023464944261","3.498063522435509","1.042294081352104","10.872729327063226","18.927297144289987","4.267325206467068","6.680543926630708","6.4003803411255165","14.418237604405501","5.944847682490945","10.613565055537038","1.0402464930724309","4.733410202647864","10.284586844608768","7.495884983823905","10.978098280081051","5.653369285851954","17.957223243942725","3.3651604181690082","12.12841177766924","2.173315060592438","11.807254527678538","15.743279066172082","9.485910951122346","5.369406024705013","4.183827428022064","1.3953354113002816","5.236741461404014","0.8655702406244625","3.707989963955507","7.550554154083424","2.1556733662040837","8.35703936882244","1.893019665574852","14.917386376122955","0.5382039039277775","2.069340044414755","10.860091518498637","6.278499449945484","2.0427421023295516","17.14233054094595","11.975593766197562","10.740802941727452","12.646531404584593","0.13425425752591735","3.6872251499900193","1.9392344875845375","18.16736557788115","20.48335434059285","0.6875482818287537","1.3708837169699595","26.677807954665866","1.8603500541565219","6.790446289324352","0.7636112342571075","0.16202327721217014","2.890628934614975","13.405530896032472","10.423450139391665","3.2690754871155625","0.13370157023242735","17.421851422986148","7.428197970888403","2.696655432079798","3.6753472703589476","1.8393129488369242","3.9804913300385483","14.84575265792169","2.1073012152618524","1.9496145693049904","7.632750924513978","12.292581873003275","3.378658179390201","1.3949911389499903","4.731505962205119","4.453599350900657","8.2927961867939","2.890294756083995","8.32112212455824","7.313795240640941","13.541967260990265","0.3013408500166399","22.02939466419966","0.8879106014223499","0.9280433153423213","13.511110887018695","0.9068611379695746","13.278501353056239","4.253543634046318","6.101434519639574","2.2367887703037312","8.42198169225635","15.996815858908311","5.985629137333648","11.238301003546834","0.09940024194354224","1.4371628357505024","6.358283661511687","5.197077900987281","3.293723266284598","9.325758113839981","1.8329751785259507","8.745205075152134","0.42857376402367997","12.425414796091186","fft_81_complex","0.16182588040828705","2.0999834537506104","0.5849781632423401","0.24368105828762054","0.6967284083366394","0.034912507981061935","1.1470516920089722","0.7932613492012024","0.7196304798126221","1.1110419034957886","0.939569354057312","2.4974799156188965","1.2485228776931763","2.838197946548462","0.9772579669952393","1.0605124235153198","0.9749694466590881","1.0589070320129395","0.9194549322128296","0.9585606455802917","0.15526491403579712","0.8247618079185486","1.3407961130142212","2.523029088973999","1.0570300817489624","1.5672498941421509","0.07786913961172104","0.20268507301807404","1.7038300037384033","2.0308806896209717","0.27392077445983887","0.06376122683286667","0.310247540473938","0.5324293375015259","1.7548904418945312","0.9650161266326904","0.41914716362953186","0.35616472363471985","1.2825931310653687","2.2441608905792236","0.5296666622161865","0.5721330642700195","1.0294588804244995","0.04206320270895958","0.15277068316936493","0.8333802819252014","0.858043372631073","0.12947990000247955","0.46606531739234924","0.21820232272148132","0.2710532248020172","0.36254584789276123","0.7573392987251282","0.340090274810791","1.7085819244384766","1.3537571430206299","0.25935328006744385","1.2952094078063965","0.2727315127849579","0.7723783254623413","0.03050963208079338","0.06484062969684601","0.6543181538581848","1.2400768995285034","0.7176415920257568","1.6827946901321411","0.272500604391098","1.1401575803756714","1.164631724357605","1.5258969068527222","0.1886187493801117","0.8159262537956238","0.6548362374305725","1.195924997329712","0.7484856247901917","1.5505919456481934","1.5596144199371338","0.6034004092216492","1.260884404182434","0.6083353757858276","0.6304160356521606","1.0715056657791138","0.6321176886558533","0.11946370452642441","0.2912154495716095","0.014026062563061714","0.831264078617096","0.9964612126350403","0.20909088850021362","0.11727125197649002","0.705121636390686","0.5439452528953552","1.5571593046188354","1.6995549201965332","1.7400833368301392","0.0008625089540146291","1.17470383644104","0.997884213924408","0.3725011944770813","0.35961270332336426","0.3637978732585907","0.7026296854019165","0.4852464497089386","0.5324466824531555","1.6679120063781738","0.7600529193878174","0.40924522280693054","1.3232053518295288","0.48746198415756226","0.5340525507926941","0.06851266324520111","2.164428949356079","0.23488061130046844","0.4067259430885315","0.1828349083662033","1.640533208847046","1.0253461599349976","0.3487933874130249","0.39523687958717346","1.1609245538711548","1.0767440795898438","0.29041048884391785","0.4530940651893616","0.1469300389289856","0.5046754479408264","1.5347036123275757","0.49093714356422424","0.2856205403804779","0.3833635449409485","0.01342631783336401","1.825499176979065","2.1771950721740723","1.1022430658340454","1.0045795440673828","0.35692599415779114","0.8746539354324341","0.22437222301959991","1.1157619953155518","1.7885184288024902","0.09074169397354126","0.9822217226028442","1.47532320022583","1.4025393724441528","0.5067855715751648","0.8213406801223755","0.7191897630691528","0.3869772255420685","0.3575884699821472","1.186098337173462","0.10889001935720444","1.2052828073501587","0.4578658938407898","0.15333758294582367","1.691064715385437","1.8314754962921143","0.3512211740016937","0.8154265880584717","0.3477337062358856","1.0724186897277832","0.0016170362941920757","0.8384286761283875","1.601130723953247","8.58128398284316","11.439007951354142","0.210079195962251","5.283435256837555","3.729018054516872","4.172233149410547","6.0094247849082345","4.867406596990031","1.6896215297204356","8.254567899165185","1.5832996916764728","6.874626142064364","7.791926933815942","0.1113988953646401","6.157976194485636","7.908498593612423","2.1554616784825296","5.087697970296618","10.929793301868514","20.248492473955267","1.7673074913954707","4.926997195410063","3.7962336785471167","9.785487339090924","7.5509937732589805","4.618565996292649","1.2172725036089613","10.455295568854787","10.613583259389454","12.094708219848364","11.920648753075001","2.7422204833456965","14.39499933098191","7.986984514501212","1.4636316169286738","3.6526472221302644","1.7780382602070137","0.929515572223278","4.1263772762395785","17.702314875380782","3.8927335234933165","3.3808527564005315","20.656948077140108","10.291866793201438","10.429803208602253","3.2896163180066105","2.885996928025134","6.240479112191121","5.126031982460415","15.569134216773076","14.789597569471173","4.411143413971","11.01877897308899","18.4554008501283","13.452431942413536","12.210080319899106","2.7697215257400316","10.572091571648135","4.523764337963882","3.9530076132464806","1.2538076112045768","5.196509906553922","4.582902295841774","2.4578802622089864","16.85598763977452","13.658512440269673","3.7344804477869467","25.005764333536174","5.796885916344451","3.741579209020099","14.995322293493794","9.021964181821255","12.535576498170204","3.2115394425750283","5.316067284014389","15.73079791413737","5.410951763343561","2.179490941864971","17.59181683345424","0.35349287922924855","4.114985065194593","3.6153272922914104","5.362879738072423","6.115564376188364","10.568119159000045","15.318073540754956","4.64815841280388","21.68501783286247","13.224626602809812","2.219868377234576","4.00167448459214","1.4272276456380588","11.341596811743006","4.873948561987781","4.2861526759974895","5.96023765608868","3.9760305188050347","6.566800933990912","5.002198883369546","2.0309709147031416","1.2884460262093702","12.32833011496317","0.05382037687629326","10.78439574018218","1.534354885003597","13.264704159013437","12.280184562954279","11.35458553480188","9.869000609110085","0.9969714411418238","5.650404262545905","11.399256472642067","6.3488730387883825","17.807560792326566","17.456387259491258","8.437210476076581","3.5889363471995455","1.8943033185815557","4.734889441188521","5.865838952657386","1.197257968989023","16.13996530086823","6.139028694267207","3.1292836318406754","12.18828544229761","4.610631776769463","18.678240243897175","13.33540206528819","15.33449728617182","3.2382519818121347","7.4739674455797","6.838902240570333","2.105371692765212","1.5378787198749482","2.6243434923047406","0.11652216064202503","2.5272654877458214","4.532248506023914","1.954636472567441","3.4146656232065977","9.008911319126828","11.353937437276306","7.625555655430608","5.250709931084791","5.340100553320184","17.615583941013096","3.279927088522264","4.17250143308863","4.4785210214064195","6.400344186694214","3.7005380565285066","1.122575913062859","0.5038180980239875","2.5292421600004156","1.6061528617728151","14.630926203339426","4.481494466029414","5.292535421445056","6.4147407824254055","8.858967182263992","13.101978958787178","27.791783247323977","fft_125_complex","0.8124353885650635","1.2395265102386475","0.16039574146270752","1.9819504022598267","0.3600437343120575","0.5889578461647034","0.24872885644435883","0.7082515954971313","0.5773665904998779","0.13543199002742767","0.8298076391220093","0.4342207610607147","0.4896481931209564","0.8350552916526794","0.7197877764701843","1.5380432605743408","0.06107468158006668","2.201507568359375","0.3374556005001068","1.2920140027999878","1.5635737180709839","1.6503757238388062","0.6105449795722961","0.4370865225791931","0.5172725319862366","0.6922412514686584","1.2310928106307983","1.8327370882034302","0.6385520100593567","0.11756168305873871","0.23863999545574188","0.018904687836766243","1.5264911651611328","0.10709311813116074","0.5826241374015808","1.765297770500183","0.6799334287643433","0.571349561214447","0.5346289873123169","0.8332467079162598","0.20369751751422882","0.30775347352027893","0.7439308762550354","0.5451762676239014","0.4147465229034424","0.5432214736938477","0.0078077311627566814","0.9431089758872986","1.0435984134674072","0.23313158750534058","1.209730863571167","0.45955437421798706","0.3265855610370636","0.6053746342658997","0.8725820183753967","0.5241636633872986","1.7610948085784912","0.6633955836296082","0.9714349508285522","0.5136868357658386","1.5349853038787842","0.3695436716079712","0.2814086675643921","2.5949618816375732","1.2379722595214844","1.8505828380584717","0.47188371419906616","1.3736778497695923","1.1676279306411743","0.2972381114959717","1.2804001569747925","1.7225773334503174","1.577651023864746","0.3269241452217102","0.4372701346874237","0.9890488386154175","1.1033475399017334","1.9549521207809448","0.6475730538368225","0.5292824506759644","0.4473706781864166","0.6432071328163147","0.1467706263065338","0.20976980030536652","0.7794570922851562","0.31381580233573914","0.6803262233734131","0.011037338525056839","0.9622517824172974","0.8368542790412903","0.8587225079536438","0.633898138999939","1.2174996137619019","2.1725356578826904","0.2897004187107086","1.309606671333313","2.598196506500244","0.557666540145874","1.5418102741241455","0.8026767373085022","0.08196965605020523","0.002491528633981943","1.587324857711792","0.720113217830658","0.7349403500556946","1.192823052406311","0.729076087474823","0.2271231710910797","0.9269818663597107","0.006230967119336128","0.7080751061439514","2.3676698207855225","1.2577210664749146","0.24024532735347748","1.1770211458206177","0.5720393061637878","1.920380711555481","0.8346250057220459","0.7047927975654602","0.19386297464370728","1.093695044517517","0.6820136904716492","0.2829663157463074","0.11388272047042847","0.6887729167938232","0.09922466427087784","1.250266194343567","0.6323102712631226","0.1848202496767044","1.8433687686920166","0.4263668954372406","0.24713163077831268","0.01820266619324684","0.8616644144058228","1.5792089700698853","0.6367298364639282","0.3927980363368988","0.6539236307144165","0.8779292106628418","0.5544044971466064","0.4019509553909302","0.3177534341812134","0.4690700173377991","0.7643328905105591","1.5016077756881714","0.5900797843933105","0.36968597769737244","0.7913125157356262","0.9097312688827515","0.7577337622642517","0.7302269339561462","0.7785899639129639","0.7808380722999573","1.0440396070480347","0.5710436701774597","0.6633660197257996","0.6982168555259705","1.5012997388839722","1.8683104515075684","0.009162770584225655","0.053628917783498764","0.7560212016105652","2.734218120574951","0.8975538015365601","0.9965337514877319","0.9736179709434509","1.3732835054397583","0.22769349813461304","0.5279285311698914","0.9973939657211304","1.5946539640426636","0.3334585130214691","0.5114824771881104","0.8088312745094299","0.009309413842856884","0.3517300486564636","1.9116069078445435","2.348860740661621","0.5795866250991821","0.6854371428489685","1.3237437009811401","0.30641838908195496","0.9147019386291504","0.4391704797744751","0.5839483141899109","2.629678726196289","0.1468760073184967","0.2384973019361496","0.9125059247016907","0.9323630332946777","0.12135637551546097","0.1401946097612381","0.6303017139434814","0.8720086812973022","0.4348902702331543","0.707770824432373","1.0431065559387207","0.3136989176273346","0.34615302085876465","0.09326159954071045","1.0725315809249878","0.6460273265838623","0.9376847743988037","0.45695820450782776","0.6338280439376831","1.7222473621368408","1.7862892150878906","0.24867220222949982","0.8356691002845764","0.5947818756103516","0.46319833397865295","0.5724456310272217","1.3741754293441772","1.2928011417388916","0.15125389397144318","0.35185670852661133","0.45909401774406433","0.276844322681427","0.7534619569778442","0.17448769509792328","0.8041709065437317","0.7715813517570496","0.17985635995864868","0.3155222535133362","0.27937594056129456","0.6012001037597656","1.3496509790420532","0.07789217680692673","0.911784827709198","0.6547526121139526","0.6284425854682922","1.5268802642822266","0.11813484132289886","0.8698882460594177","0.5227888822555542","0.2165810912847519","0.807140588760376","1.1484020948410034","1.4427751302719116","0.6043649911880493","0.525101363658905","0.7420395612716675","0.4712083339691162","0.04465737193822861","0.4328814148902893","1.3837007284164429","0.06250803917646408","0.5973103046417236","0.2701307237148285","1.2017232179641724","8.60566947190091","9.047967813443393","6.678979661059562","8.360831755799953","3.115231761090947","6.697091460792556","0.7568358822534593","11.066622749967639","2.8466255459388927","6.27918164849176","1.982200342331545","0.3737138114008831","8.93599812413914","12.19410650368572","4.5824951902858615","4.643371981421932","11.975504695471635","19.79773110340414","16.894522457707588","11.40437941841762","0.5369639596199498","9.687637013191164","2.1092885577719587","10.925736950748426","2.630639119388632","2.8059934209514976","8.536957582736084","6.326392685852441","19.05482126619987","4.74321319044126","1.7193491466752984","17.828632923932844","11.48731740639608","11.824203873765583","17.4496745991033","14.886923392164112","8.857144569139852","18.45702795068501","1.7494909136262233","0.10810961271060027","11.536135407131509","12.549170934604959","5.461911779043582","9.93390865307337","7.577784660577098","11.044552867393765","0.38872990536666596","4.554231235610941","9.19372645559055","3.9372069026290077","0.01611898707200954","14.170353635176678","2.977419276887061","1.171732761405826","9.77702001582745","4.731009139477455","6.457985308398847","15.847828201326442","9.95926759256128","11.402544444287324","17.96375259440102","6.2530379131604725","4.938790863887686","10.135905976382034","5.383747427255329","6.230288801920859","6.384329417961547","1.3219731997515085","3.1738925777367895","11.969669020511425","7.174837958584151","14.303685689056584","0.7454990885394415","0.8185666838197116","8.849555077234482","3.9055874990272663","2.018206936296142","2.3395830964594415","9.60564366177047","5.769798601114195","0.7520113635166212","0.5065019274195421","10.25514045587141","9.637019763988052","18.803482381840155","2.3670620465003394","11.199527109220814","0.007833023989774368","8.625619052479255","9.951138032831594","7.758961547592464","1.8211300264093309","6.718724482310631","3.675823001520721","6.918876012140167","11.471658204308536","2.467033682197071","8.508193328034618","14.225276109269815","16.144776448129633","15.927933230731913","10.235538687304809","5.767881945940595","28.86811292326169","9.669928964930417","4.668293602235824","14.769201279257288","11.067653051718727","12.761530418035363","11.044953949483144","4.242003110570776","23.262991395970026","10.145352776759976","9.212885213669484","6.329756726823897","2.401697066728733","8.54352813832675","0.701551842851496","15.258656469035635","19.14394691246519","7.522186448172975","1.997676262113934","11.408489749207227","24.631586391822943","5.098355854851496","1.0410089604391717","22.688569178648756","19.097185694651152","0.16409737757445608","14.474036852523309","4.7859526448704734","19.558395170182035","10.633635125709178","3.0615977245039865","6.883177607599656","4.696650706016856","4.286737340380929","1.1391516077082633","17.043528019280284","7.2919743123329965","18.42867500955987","9.458517392981532","7.23747329102956","3.0801112402296056","19.46748520769718","19.760353803723497","4.916492200532298","11.492889148389452","18.97908975026986","9.61307230309599","31.333799318924978","6.6051904344747445","2.610154763269807","17.822400589161646","5.128110541635698","7.169102569854218","20.704759452278893","13.58731153366598","9.44388682655616","1.6262238850380326","2.4785447765146986","15.61067463907144","8.206847406028755","3.2188956590845867","10.069966894154257","17.811422869295264","7.333188700567103","7.277796245862989","5.975213239029163","0.0776494376891641","4.448473434391025","2.74774293836415","19.167307678242555","22.10574472079241","0.9176460422085646","2.698508980697669","2.9126695148592425","11.855087227776476","10.63642091855646","4.994794817859426","8.34646291775615","6.768483375508413","10.605502170349608","14.164919594071957","12.394208891449225","12.057338941547131","22.90400935226583","15.664600594740676","1.30010074910831","0.2199980758912563","0.13084869289575352","1.5514316991800943","6.207758174655294","21.281702562218502","0.6785363179803934","1.3313626670817715","4.335780044121057","0.5496189332641022","12.958391630849423","8.448073173532364","9.262064248245114","6.620464792278902","6.229199284276308","14.566232762792579","7.969523876692342","6.776657815077612","12.290319767193232","9.559089975820987","10.33865192053783","22.41131767867546","2.9821554944671256","4.62861355727904","1.556181975825081","15.142425835968055","7.526775680393509","16.871371735315304","16.91792120984387","10.94566759815768","7.919149545235784","2.721091872750706","11.568727749623791","6.404971618403414","0.9048111698914159","12.163107403321717","23.30918866848898","0.29599861864002963","21.938310258693168","2.3132157853956175","0.7524657263569949","5.613641198847075","8.631493933375305","17.933382465737296","15.905249964584621","0.12417131736795461","16.840693139623014","10.447828447732046","15.117925469220577","1.7000257658739502","14.07936041053577","12.445181510422046","0.09178864954511656","8.976039835817634","3.0952547078859665","4.42715006938438","2.016084671443174","1.299572020270631","5.764752453011912","5.767130951426552","4.024939854949247","6.303606982466311","fft_128_complexdescribe","\"Mathematical operations\"","\"bankers rounding\"","it","\"should round up to nearest even\"","expect","bankers_round","0.5","toBeCloseTo","1.5","19.5","20","\"should round down to nearest even\"","2.5","18.5","18","\"median filtering\"","\"should compute median filter\"","t1","Float32Array","5","12","6","3","10","9","1","4","8","11","7","window","target","medianFilter","compare","0.001","\"log softmax\"","\"should compute log softmax correctly for usual values\"","expected","3.4401896985611953","2.4401896985611953","1.4401896985611953","0.44018969856119533","log_softmax","1e-13","\"should compute log softmax correctly for values with large differences\"","1000","999","\"FFT\"","\"should compute real FFT for power of two\"","13","14","15","16","136","40.218715937006785","19.31370849898476","11.972846101323912","5.345429103354389","3.313708498984761","1.5912989390372658","\"should compute real FFT for non-power of two\"","0.8660254","\"should compute complex FFT for non-power of two\"","4.09807621","4.3660254","1.09807621","2.6339746","\"should compute complex FFT for power of two\"","\"FFT (random & dynamic)\"","name","test","Object","entries","map","v","i","Math","abs","some","0.0001","console","log","\"input\"","\"output\"","\"target\""]},"operators":{"distinct":22,"total":6729,"identifiers":["const","=","function=>","let","if","else","new","/",".","()","! (prefix)",":?","*","return","{}",":","[]",",","- (prefix)","forof","-",">"]}},"paramCount":5,"sloc":{"logical":251,"physical":193}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/utils/maths.js","type":"esm"},{"line":2,"path":"../test_utils.js","type":"esm"}],"errors":[],"lineEnd":193,"lineStart":1,"maintainability":90.936,"methods":[{"cyclomatic":4,"cyclomaticDensity":28.571,"halstead":{"bugs":0.114,"difficulty":17.571,"effort":6029.321,"length":73,"time":334.962,"vocabulary":26,"volume":343.132,"operands":{"distinct":14,"total":41,"identifiers":["output","fft","complex","FFT","arr","length","2","Float64Array","outputBufferSize","transform","realTransform","isPowerOfTwo","slice","0"]},"operators":{"distinct":12,"total":32,"identifiers":["let","if","else","=","new","/",".","()","! (prefix)",":?","*","return"]}},"paramCount":2,"sloc":{"logical":14,"physical":17},"errors":[],"lineEnd":20,"lineStart":4,"name":"<anon method-1>","paramNames":["arr","complex"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.02,"difficulty":1.667,"effort":100,"length":20,"time":5.556,"vocabulary":8,"volume":60,"operands":{"distinct":6,"total":10,"identifiers":["describe","\"bankers rounding\"","\"median filtering\"","\"log softmax\"","\"FFT\"","\"FFT (random & dynamic)\""]},"operators":{"distinct":2,"total":10,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":128},"errors":[],"lineEnd":192,"lineStart":65,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should round up to nearest even\"","\"should round down to nearest even\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":12},"errors":[],"lineEnd":77,"lineStart":66,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.033,"difficulty":2.5,"effort":250.947,"length":28,"time":13.942,"vocabulary":12,"volume":100.379,"operands":{"distinct":9,"total":15,"identifiers":["expect","bankers_round","0.5","toBeCloseTo","0","1.5","2","19.5","20"]},"operators":{"distinct":3,"total":13,"identifiers":["()",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":9,"physical":5},"errors":[],"lineEnd":71,"lineStart":67,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.033,"difficulty":2.813,"effort":282.16,"length":29,"time":15.676,"vocabulary":11,"volume":100.324,"operands":{"distinct":8,"total":15,"identifiers":["expect","bankers_round","1.5","toBeCloseTo","2","2.5","18.5","18"]},"operators":{"distinct":3,"total":14,"identifiers":["()",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":9,"physical":5},"errors":[],"lineEnd":76,"lineStart":72,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should compute median filter\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":13},"errors":[],"lineEnd":91,"lineStart":79,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.116,"difficulty":5.7,"effort":1982.645,"length":74,"time":110.147,"vocabulary":26,"volume":347.833,"operands":{"distinct":20,"total":38,"identifiers":["t1","Float32Array","5","12","2","6","3","10","9","1","4","8","11","7","window","target","output","medianFilter","compare","0.001"]},"operators":{"distinct":6,"total":36,"identifiers":["const","=","new","[]",",","()"]}},"paramCount":0,"sloc":{"logical":6,"physical":9},"errors":[],"lineEnd":88,"lineStart":80,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should compute log softmax correctly for usual values\"","\"should compute log softmax correctly for values with large differences\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":16},"errors":[],"lineEnd":108,"lineStart":93,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.053,"difficulty":3.643,"effort":582.534,"length":37,"time":32.363,"vocabulary":20,"volume":159.911,"operands":{"distinct":14,"total":17,"identifiers":["input","0","1","2","3","expected","3.4401896985611953","2.4401896985611953","1.4401896985611953","0.44018969856119533","output","log_softmax","compare","1e-13"]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","[]",",","- (prefix)","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":100,"lineStart":95,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.035,"difficulty":3.9,"effort":405.6,"length":26,"time":22.533,"vocabulary":16,"volume":104,"operands":{"distinct":10,"total":13,"identifiers":["input","1000","1","expected","0","999","output","log_softmax","compare","1e-13"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","[]",",","- (prefix)","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":107,"lineStart":102,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should compute real FFT for power of two\"","\"should compute real FFT for non-power of two\"","\"should compute complex FFT for non-power of two\"","\"should compute complex FFT for power of two\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":66},"errors":[],"lineEnd":175,"lineStart":110,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.329,"difficulty":9.258,"effort":9134.102,"length":188,"time":507.45,"vocabulary":38,"volume":986.61,"operands":{"distinct":31,"total":82,"identifiers":["input","Float32Array","1","2","3","4","target","10","0","output","fft","compare","0.001","5","6","7","8","9","11","12","13","14","15","16","136","40.218715937006785","19.31370849898476","11.972846101323912","5.345429103354389","3.313708498984761","1.5912989390372658"]},"operators":{"distinct":7,"total":106,"identifiers":["const","=","new","[]",",","- (prefix)","()"]}},"paramCount":0,"sloc":{"logical":10,"physical":27},"errors":[],"lineEnd":138,"lineStart":112,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.061,"difficulty":5,"effort":922.387,"length":42,"time":51.244,"vocabulary":21,"volume":184.477,"operands":{"distinct":14,"total":20,"identifiers":["input","Float32Array","1","2","3","target","6","0","1.5","0.8660254","output","fft","compare","0.001"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","new","[]",",","- (prefix)","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":11},"errors":[],"lineEnd":150,"lineStart":140,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.072,"difficulty":5.25,"effort":1139.938,"length":48,"time":63.33,"vocabulary":23,"volume":217.131,"operands":{"distinct":16,"total":24,"identifiers":["input","Float32Array","1","3","2","target","6","4.09807621","4.3660254","1.09807621","2.6339746","output","fft","true","compare","0.001"]},"operators":{"distinct":7,"total":24,"identifiers":["const","=","new","[]",",","- (prefix)","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":11},"errors":[],"lineEnd":162,"lineStart":152,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.085,"difficulty":7,"effort":1783.281,"length":58,"time":99.071,"vocabulary":21,"volume":254.754,"operands":{"distinct":14,"total":28,"identifiers":["input","Float32Array","1","4","2","3","target","10","0","output","fft","true","compare","0.001"]},"operators":{"distinct":7,"total":30,"identifiers":["const","=","new","[]",",","- (prefix)","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":11},"errors":[],"lineEnd":174,"lineStart":164,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.017,"difficulty":4.083,"effort":211.542,"length":14,"time":11.752,"vocabulary":13,"volume":51.806,"operands":{"distinct":6,"total":7,"identifiers":["name","test","Object","entries","FFT_TEST_DATA","it"]},"operators":{"distinct":7,"total":7,"identifiers":["forof","const","[]",",",".","()","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":15},"errors":[],"lineEnd":191,"lineStart":177,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":18.182,"halstead":{"bugs":0.079,"difficulty":5.813,"effort":1373.784,"length":53,"time":76.321,"vocabulary":22,"volume":236.35,"operands":{"distinct":16,"total":31,"identifiers":["output","fft","test","input","complex","map","v","i","some","console","log","\"input\"","\"output\"","\"target\"","compare","0.0001"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","()",".","if","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":10},"errors":[],"lineEnd":189,"lineStart":180,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.012,"difficulty":2,"effort":73.082,"length":11,"time":4.06,"vocabulary":10,"volume":36.541,"operands":{"distinct":6,"total":6,"identifiers":["Math","abs","v","test","output","i"]},"operators":{"distinct":4,"total":5,"identifiers":["()",".","-","[]"]}},"paramCount":2,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":183,"lineStart":183,"name":"<anon method-18>","paramNames":["v","i"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["v","0.0001"]},"operators":{"distinct":1,"total":1,"identifiers":[">"]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":183,"lineStart":183,"name":"<anon method-19>","paramNames":["v"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.2,"cyclomaticDensity":0.478,"halstead":{"bugs":2.265,"difficulty":0.641,"effort":87058.795,"length":567.9,"time":4836.6,"vocabulary":199.8,"volume":6794.549,"operands":{"distinct":198.7,"total":231.45},"operators":{"distinct":1.1,"total":336.45}},"paramCount":0.25,"sloc":{"logical":12.55,"physical":9.65}},"methodAverage":{"cyclomatic":1.211,"cyclomaticDensity":26.393,"halstead":{"bugs":0.058,"difficulty":4.314,"effort":1284.374,"length":38.947,"time":71.354,"vocabulary":15.316,"volume":172.53,"operands":{"distinct":10.474,"total":19.316},"operators":{"distinct":4.842,"total":19.632}},"paramCount":0.263,"sloc":{"logical":6.211,"physical":19.474}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/utils/tensor_ops.test.js","testCases":8,"smells":10,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  11 |\n  12 | function range(start, stop = undefined, step = 1) {\n> 13 |   if (stop === undefined) {\n     |  ^ Conditional Test Logic\n  14 |     stop = start;\n  15 |     start = 0;\n  16 |   }","start":{"line":13,"column":2,"index":398}},{"frame":"  17 |\n  18 |   const result = [];\n> 19 |   for (let i = start; i < stop; i += step) {\n     |  ^ Conditional Test Logic\n  20 |     result.push(i);\n  21 |   }\n  22 |   return result;","start":{"line":19,"column":2,"index":485}}]},{"name":"Unknown Test","packageName":"unknownTest","items":[{"frame":"  33 |\n  34 |       const size = [2, 3, 3, 2];\n> 35 |       it(\"bilinear\", async () => {\n     |      ^ Unknown Test\n  36 |         const resized = await interpolate_4d(input, { mode: \"bilinear\", size });\n  37 |         const target = new Float32Array(\n  38 |           [","start":{"column":6,"line":35}},{"frame":"  77 |       });\n  78 |\n> 79 |       it(\"bicubic\", async () => {\n     |      ^ Unknown Test\n  80 |         const resized = await interpolate_4d(input, { mode: \"bicubic\", size });\n  81 |\n  82 |         const target = new Float32Array(","start":{"column":6,"line":79}},{"frame":"  130 |\n  131 |       const size = [2, 3, 4, 5];\n> 132 |       it(\"bilinear\", async () => {\n      |      ^ Unknown Test\n  133 |         const resized = await interpolate_4d(input, { mode: \"bilinear\", size });\n  134 |         const target = new Float32Array(\n  135 |           [","start":{"column":6,"line":132}},{"frame":"  180 |       });\n  181 |\n> 182 |       it(\"bicubic\", async () => {\n      |      ^ Unknown Test\n  183 |         const resized = await interpolate_4d(input, { mode: \"bicubic\", size });\n  184 |\n  185 |         const target = new Float32Array(","start":{"column":6,"line":182}},{"frame":"  234 |\n  235 |   describe(\"matmul\", () => {\n> 236 |     it(\"(2, 5) @ (5, 4) -> (2, 4)\", async () => {\n      |    ^ Unknown Test\n  237 |       const a = new Tensor(\"float32\", range(10), [2, 5]);\n  238 |       const b = new Tensor(\"float32\", range(20), [5, 4]);\n  239 |","start":{"column":4,"line":236}},{"frame":"  252 |\n  253 |   describe(\"rfft\", () => {\n> 254 |     it(\"non-power of 2\", async () => {\n      |    ^ Unknown Test\n  255 |       const rows = 2;\n  256 |       const cols = 3;\n  257 |       const input = new Tensor(\"float32\", range(rows * cols), [rows, cols]);","start":{"column":4,"line":254}},{"frame":"  275 |     });\n  276 |\n> 277 |     it(\"power of 2\", async () => {\n      |    ^ Unknown Test\n  278 |       const rows = 2;\n  279 |       const cols = 4;\n  280 |       const input = new Tensor(\"float32\", range(rows * cols), [rows, cols]);","start":{"column":4,"line":277}},{"frame":"  302 |\n  303 |   describe(\"slice\", () => {\n> 304 |     it(\"should slice\", async () => {\n      |    ^ Unknown Test\n  305 |       const input = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6, 7, 8, 9], [3, 3]);\n  306 |\n  307 |       const target = new Float32Array(","start":{"column":4,"line":304}}]}],"metrics":{"aggregate":{"cyclomatic":23,"cyclomaticDensity":18.548,"halstead":{"bugs":4.019,"difficulty":16.512,"effort":199104.128,"length":1391,"time":11061.34,"vocabulary":407,"volume":12058.419,"operands":{"distinct":387,"total":639,"identifiers":["init","expectToBeCloseToArray","actual","expected","expect","length","toEqual","forEach","x","i","toBeCloseTo","6","range","start","stop","undefined","step","1","0","result","push","describe","\"Tensor operations\"","\"interpolate\"","\"downscale\"","input","Tensor","\"float32\"","Float32Array","2","3","4","5","map","_","size","it","\"bilinear\"","resized","interpolate_4d","mode","target","1.5833335","4.0833335","8.25","10.75","14.916668","17.416668","21.583332","24.083334","28.25","30.75","34.916668","37.416668","41.583332","44.083332","48.25","50.75","54.916668","57.416668","61.583332","64.083336","68.25","70.75","74.916664","77.41667","81.58333","84.083336","88.25","90.75","94.91667","97.41667","101.583336","104.08333","108.25","110.75","114.916664","117.416664","flat","Infinity","data","\"bicubic\"","1.2987545","3.9628172","8.167969","10.832031","15.037184","17.701244","21.298756","23.962818","28.167969","30.832031","35.037186","37.701252","41.298756","43.96282","48.16797","50.83203","55.037193","57.701256","61.29875","63.96282","68.16797","70.83203","75.03719","77.701256","81.29875","83.96282","88.16797","90.83203","95.03721","97.70126","101.29875","103.962814","108.16797","110.83203","115.03721","117.70127","\"upscale\"","0.1","0.5","0.9","1.25","1.35","1.75","2.15","2.25","2.75","2.85","3.25","3.65","3.75","4.1","4.5","4.9","6.1","6.5","6.9","7","7.25","7.35","7.75","8.15","8.75","8.85","9.25","9.65","9.75","10","10.1","10.5","10.9","11","12","12.1","12.5","12.9","13","13.25","13.35","13.75","14.15","14.25","14.75","14.85","15.25","15.65","15.75","16","16.1","16.5","16.9","17","18","18.1","18.5","18.9","19","19.25","19.35","19.75","20.15","20.25","20.75","20.85","21.25","21.65","21.75","22","22.1","22.5","22.9","23","24","24.1","24.5","24.9","25","25.25","25.35","25.75","26.15","26.25","26.75","26.85","27.25","27.65","27.75","28","28.1","28.5","28.9","29","30","30.1","30.5","30.9","31","31.25","31.35","31.75","32.15","32.25","32.75","32.85","33.25","33.65","33.75","34","34.1","34.5","34.9","35","0.253804475069046","0.06155451014637947","0.3564453125","0.7744455337524414","0.9666945934295654","0.9493208527565002","1.1415706872940063","1.5595703125","1.977570652961731","2.1698191165924072","2.8301806449890137","3.022430181503296","3.4404296875","3.8584301471710205","4.050677299499512","4.033306121826172","4.225555419921875","4.6435546875","5.061554908752441","5.253802299499512","5.746196269989014","5.938446998596191","6.3564453125","6.774445533752441","6.966691493988037","6.94932222366333","7.14157247543335","7.5595703125","7.977570056915283","8.169816970825195","8.830181121826172","9.022432327270508","9.4404296875","9.858429908752441","10.050675392150879","10.033307075500488","10.225557327270508","10.6435546875","11.061556816101074","11.253799438476562","11.746198654174805","11.938446998596191","12.3564453125","12.774446487426758","12.966689109802246","12.949322700500488","13.141572952270508","13.5595703125","13.977571487426758","14.16981315612793","14.830183029174805","15.022432327270508","15.4404296875","15.858430862426758","16.05067253112793","16.033309936523438","16.225557327270508","16.6435546875","17.061555862426758","17.25379753112793","17.746200561523438","17.938447952270508","18.3564453125","18.774446487426758","18.966686248779297","18.949325561523438","19.14157485961914","19.5595703125","19.977571487426758","20.169809341430664","20.830184936523438","21.02243423461914","21.4404296875","21.858430862426758","22.050668716430664","22.03331184387207","22.225557327270508","22.6435546875","23.061555862426758","23.25379180908203","23.746200561523438","23.93844985961914","24.3564453125","24.77444839477539","24.96668243408203","24.949325561523438","25.141576766967773","25.5595703125","25.977571487426758","26.1698055267334","26.830184936523438","27.022436141967773","27.4404296875","27.858430862426758","28.05066680908203","28.033313751220703","28.225557327270508","28.6435546875","29.061555862426758","29.25379180908203","29.74620246887207","29.93844985961914","30.3564453125","30.77444839477539","30.96668243408203","30.949325561523438","31.141578674316406","31.5595703125","31.977571487426758","32.16980743408203","32.8301887512207","33.022438049316406","33.4404296875","33.858428955078125","34.050662994384766","34.03330993652344","34.22556686401367","34.6435546875","35.06155014038086","35.253787994384766","\"matmul\"","\"(2, 5) @ (5, 4) -> (2, 4)\"","a","b","20","matmul","120","130","140","150","320","355","390","425","\"rfft\"","\"non-power of 2\"","rows","cols","dim","\"int64\"","rfft","1.5","0.8660262823104858","0.866027295589447","\"power of 2\"","\"slice\"","\"should slice\"","8","9","starts","ends","axes","steps","slice"]},"operators":{"distinct":20,"total":752,"identifiers":["()","function",".","function=>","[]","=","if","===","const","for","let","<","+=","return","new","*",",","{}",":","- (prefix)"]}},"paramCount":11,"sloc":{"logical":124,"physical":324}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/transformers.js","type":"esm"},{"line":2,"path":"../init.js","type":"esm"}],"errors":[],"lineEnd":324,"lineStart":1,"maintainability":110.825,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.023,"difficulty":1.833,"effort":124.876,"length":19,"time":6.938,"vocabulary":12,"volume":68.114,"operands":{"distinct":9,"total":11,"identifiers":["expect","actual","length","toEqual","expected","forEach","x","i","6"]},"operators":{"distinct":3,"total":8,"identifiers":["()",".","function=>"]}},"paramCount":2,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":10,"lineStart":7,"name":"expectToBeCloseToArray","paramNames":["actual","expected"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["expect","x","toBeCloseTo","expected","i"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","[]"]}},"paramCount":2,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":9,"lineStart":9,"name":"<anon method-1>","paramNames":["x","i"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":3,"cyclomaticDensity":42.857,"halstead":{"bugs":0.046,"difficulty":12.75,"effort":1763.347,"length":32,"time":97.964,"vocabulary":20,"volume":138.302,"operands":{"distinct":8,"total":17,"identifiers":["stop","undefined","start","0","result","i","step","push"]},"operators":{"distinct":12,"total":15,"identifiers":["if","===","=","const","[]","for","let","<","+=","()",".","return"]}},"paramCount":3,"sloc":{"logical":7,"physical":12},"errors":[],"lineEnd":23,"lineStart":12,"name":"range","paramNames":["start","stop","step"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["describe","\"interpolate\"","\"matmul\"","\"rfft\"","\"slice\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":299},"errors":[],"lineEnd":323,"lineStart":25,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["describe","\"downscale\"","\"upscale\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":208},"errors":[],"lineEnd":233,"lineStart":26,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.073,"difficulty":7.2,"effort":1584.563,"length":48,"time":88.031,"vocabulary":24,"volume":220.078,"operands":{"distinct":15,"total":24,"identifiers":["input","Tensor","\"float32\"","Float32Array","2","3","4","5","map","_","i","size","it","\"bilinear\"","\"bicubic\""]},"operators":{"distinct":9,"total":24,"identifiers":["const","=","new","()",".","*","function=>","[]",","]}},"paramCount":0,"sloc":{"logical":8,"physical":97},"errors":[],"lineEnd":123,"lineStart":27,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["i"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":30,"lineStart":30,"name":"<anon method-5>","paramNames":["_","i"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.243,"difficulty":4.781,"effort":3486.063,"length":125,"time":193.67,"vocabulary":57,"volume":729.111,"operands":{"distinct":48,"total":51,"identifiers":["resized","interpolate_4d","input","mode","\"bilinear\"","size","target","Float32Array","1.5833335","4.0833335","8.25","10.75","14.916668","17.416668","21.583332","24.083334","28.25","30.75","34.916668","37.416668","41.583332","44.083332","48.25","50.75","54.916668","57.416668","61.583332","64.083336","68.25","70.75","74.916664","77.41667","81.58333","84.083336","88.25","90.75","94.91667","97.41667","101.583336","104.08333","108.25","110.75","114.916664","117.416664","flat","Infinity","expectToBeCloseToArray","data"]},"operators":{"distinct":9,"total":74,"identifiers":["const","=","()","{}",":","new",".","[]",","]}},"paramCount":0,"sloc":{"logical":7,"physical":43},"errors":[],"lineEnd":77,"lineStart":35,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.243,"difficulty":4.781,"effort":3486.063,"length":125,"time":193.67,"vocabulary":57,"volume":729.111,"operands":{"distinct":48,"total":51,"identifiers":["resized","interpolate_4d","input","mode","\"bicubic\"","size","target","Float32Array","1.2987545","3.9628172","8.167969","10.832031","15.037184","17.701244","21.298756","23.962818","28.167969","30.832031","35.037186","37.701252","41.298756","43.96282","48.16797","50.83203","55.037193","57.701256","61.29875","63.96282","68.16797","70.83203","75.03719","77.701256","81.29875","83.96282","88.16797","90.83203","95.03721","97.70126","101.29875","103.962814","108.16797","110.83203","115.03721","117.70127","flat","Infinity","expectToBeCloseToArray","data"]},"operators":{"distinct":9,"total":74,"identifiers":["const","=","()","{}",":","new",".","[]",","]}},"paramCount":0,"sloc":{"logical":7,"physical":44},"errors":[],"lineEnd":122,"lineStart":79,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.073,"difficulty":7.2,"effort":1584.563,"length":48,"time":88.031,"vocabulary":24,"volume":220.078,"operands":{"distinct":15,"total":24,"identifiers":["input","Tensor","\"float32\"","Float32Array","2","3","map","_","i","size","4","5","it","\"bilinear\"","\"bicubic\""]},"operators":{"distinct":9,"total":24,"identifiers":["const","=","new","()",".","*","function=>","[]",","]}},"paramCount":0,"sloc":{"logical":8,"physical":109},"errors":[],"lineEnd":232,"lineStart":124,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["i"]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":127,"lineStart":127,"name":"<anon method-9>","paramNames":["_","i"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.712,"difficulty":4.602,"effort":9824.591,"length":299,"time":545.811,"vocabulary":141,"volume":2134.726,"operands":{"distinct":132,"total":135,"identifiers":["resized","interpolate_4d","input","mode","\"bilinear\"","size","target","Float32Array","0","0.1","0.5","0.9","1","1.25","1.35","1.75","2.15","2.25","2.75","2.85","3.25","3.65","3.75","4","4.1","4.5","4.9","5","6","6.1","6.5","6.9","7","7.25","7.35","7.75","8.15","8.25","8.75","8.85","9.25","9.65","9.75","10","10.1","10.5","10.9","11","12","12.1","12.5","12.9","13","13.25","13.35","13.75","14.15","14.25","14.75","14.85","15.25","15.65","15.75","16","16.1","16.5","16.9","17","18","18.1","18.5","18.9","19","19.25","19.35","19.75","20.15","20.25","20.75","20.85","21.25","21.65","21.75","22","22.1","22.5","22.9","23","24","24.1","24.5","24.9","25","25.25","25.35","25.75","26.15","26.25","26.75","26.85","27.25","27.65","27.75","28","28.1","28.5","28.9","29","30","30.1","30.5","30.9","31","31.25","31.35","31.75","32.15","32.25","32.75","32.85","33.25","33.65","33.75","34","34.1","34.5","34.9","35","flat","Infinity","expectToBeCloseToArray","data"]},"operators":{"distinct":9,"total":164,"identifiers":["const","=","()","{}",":","new",".","[]",","]}},"paramCount":0,"sloc":{"logical":7,"physical":49},"errors":[],"lineEnd":180,"lineStart":132,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.717,"difficulty":5.114,"effort":11004.923,"length":301,"time":611.385,"vocabulary":142,"volume":2152.074,"operands":{"distinct":132,"total":135,"identifiers":["resized","interpolate_4d","input","mode","\"bicubic\"","size","target","Float32Array","0.253804475069046","0.06155451014637947","0.3564453125","0.7744455337524414","0.9666945934295654","0.9493208527565002","1.1415706872940063","1.5595703125","1.977570652961731","2.1698191165924072","2.8301806449890137","3.022430181503296","3.4404296875","3.8584301471710205","4.050677299499512","4.033306121826172","4.225555419921875","4.6435546875","5.061554908752441","5.253802299499512","5.746196269989014","5.938446998596191","6.3564453125","6.774445533752441","6.966691493988037","6.94932222366333","7.14157247543335","7.5595703125","7.977570056915283","8.169816970825195","8.830181121826172","9.022432327270508","9.4404296875","9.858429908752441","10.050675392150879","10.033307075500488","10.225557327270508","10.6435546875","11.061556816101074","11.253799438476562","11.746198654174805","11.938446998596191","12.3564453125","12.774446487426758","12.966689109802246","12.949322700500488","13.141572952270508","13.5595703125","13.977571487426758","14.16981315612793","14.830183029174805","15.022432327270508","15.4404296875","15.858430862426758","16.05067253112793","16.033309936523438","16.225557327270508","16.6435546875","17.061555862426758","17.25379753112793","17.746200561523438","17.938447952270508","18.3564453125","18.774446487426758","18.966686248779297","18.949325561523438","19.14157485961914","19.5595703125","19.977571487426758","20.169809341430664","20.830184936523438","21.02243423461914","21.4404296875","21.858430862426758","22.050668716430664","22.03331184387207","22.225557327270508","22.6435546875","23.061555862426758","23.25379180908203","23.746200561523438","23.93844985961914","24.3564453125","24.77444839477539","24.96668243408203","24.949325561523438","25.141576766967773","25.5595703125","25.977571487426758","26.1698055267334","26.830184936523438","27.022436141967773","27.4404296875","27.858430862426758","28.05066680908203","28.033313751220703","28.225557327270508","28.6435546875","29.061555862426758","29.25379180908203","29.74620246887207","29.93844985961914","30.3564453125","30.77444839477539","30.96668243408203","30.949325561523438","31.141578674316406","31.5595703125","31.977571487426758","32.16980743408203","32.8301887512207","33.022438049316406","33.4404296875","33.858428955078125","34.050662994384766","34.03330993652344","34.22556686401367","34.6435546875","35.06155014038086","35.253787994384766","flat","Infinity","expectToBeCloseToArray","data"]},"operators":{"distinct":10,"total":166,"identifiers":["const","=","()","{}",":","new",".","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":7,"physical":50},"errors":[],"lineEnd":231,"lineStart":182,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"(2, 5) @ (5, 4) -> (2, 4)\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":17},"errors":[],"lineEnd":251,"lineStart":235,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.108,"difficulty":4.62,"effort":1501.5,"length":65,"time":83.417,"vocabulary":32,"volume":325,"operands":{"distinct":25,"total":33,"identifiers":["a","Tensor","\"float32\"","range","10","2","5","b","20","4","result","matmul","target","Float32Array","120","130","140","150","320","355","390","425","flat","expectToBeCloseToArray","data"]},"operators":{"distinct":7,"total":32,"identifiers":["const","=","new","()","[]",",","."]}},"paramCount":0,"sloc":{"logical":9,"physical":15},"errors":[],"lineEnd":250,"lineStart":236,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"non-power of 2\"","\"power of 2\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":49},"errors":[],"lineEnd":301,"lineStart":253,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.13,"difficulty":6.848,"effort":2670.652,"length":78,"time":148.37,"vocabulary":32,"volume":390,"operands":{"distinct":23,"total":35,"identifiers":["rows","2","cols","3","input","Tensor","\"float32\"","range","dim","\"int64\"","result","rfft","target","Float32Array","0","1.5","0.8660262823104858","12","0.866027295589447","flat","Infinity","expectToBeCloseToArray","data"]},"operators":{"distinct":9,"total":43,"identifiers":["const","=","new","()","*","[]",",","- (prefix)","."]}},"paramCount":0,"sloc":{"logical":10,"physical":22},"errors":[],"lineEnd":275,"lineStart":254,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.147,"difficulty":8.357,"effort":3690.683,"length":90,"time":205.038,"vocabulary":30,"volume":441.62,"operands":{"distinct":21,"total":39,"identifiers":["rows","2","cols","4","input","Tensor","\"float32\"","range","dim","\"int64\"","result","rfft","target","Float32Array","6","0","22","flat","Infinity","expectToBeCloseToArray","data"]},"operators":{"distinct":9,"total":51,"identifiers":["const","=","new","()","*","[]",",","- (prefix)","."]}},"paramCount":0,"sloc":{"logical":10,"physical":24},"errors":[],"lineEnd":300,"lineStart":277,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should slice\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":20},"errors":[],"lineEnd":322,"lineStart":303,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.152,"difficulty":6.3,"effort":2866.5,"length":91,"time":159.25,"vocabulary":32,"volume":455,"operands":{"distinct":25,"total":45,"identifiers":["input","Tensor","\"float32\"","1","2","3","4","5","6","7","8","9","target","Float32Array","flat","Infinity","starts","0","ends","axes","steps","result","slice","expectToBeCloseToArray","data"]},"operators":{"distinct":7,"total":46,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":18},"errors":[],"lineEnd":321,"lineStart":304,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.095,"cyclomaticDensity":0.883,"halstead":{"bugs":0.191,"difficulty":0.786,"effort":9481.149,"length":66.238,"time":526.73,"vocabulary":19.381,"volume":574.21,"operands":{"distinct":18.429,"total":30.429},"operators":{"distinct":0.952,"total":35.81}},"paramCount":0.524,"sloc":{"logical":5.905,"physical":15.429}},"methodAverage":{"cyclomatic":1.1,"cyclomaticDensity":29.347,"halstead":{"bugs":0.135,"difficulty":4.108,"effort":2188.311,"length":68.6,"time":121.573,"vocabulary":31.9,"volume":406.414,"operands":{"distinct":26.15,"total":31.35},"operators":{"distinct":5.75,"total":37.25}},"paramCount":0.55,"sloc":{"logical":5.95,"physical":54.15}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/utils/tensor.test.js","testCases":58,"smells":134,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  524 |       expect(random.dims).toEqual(shape);\n  525 |       random.data.forEach((val) => {\n> 526 |         expect(val).toBeGreaterThanOrEqual(0);\n      |        ^ Duplicate Assert\n  527 |         expect(val).toBeLessThan(1);\n  528 |       });\n  529 |     });","start":{"line":526,"column":8,"index":18725}},{"frame":"  525 |       random.data.forEach((val) => {\n  526 |         expect(val).toBeGreaterThanOrEqual(0);\n> 527 |         expect(val).toBeLessThan(1);\n      |        ^ Duplicate Assert\n  528 |       });\n  529 |     });\n  530 |   });","start":{"line":527,"column":8,"index":18772}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  17 |       // 2 tensors\n  18 |       const concatenated1 = cat([t1, t2], 0);\n> 19 |       compare(concatenated1, target1, 1e-3);\n     |      ^ Eager Test\n  20 |\n  21 |       // 3 tensors\n  22 |       const concatenated2 = cat([t1, t2, t3], 0);","start":{"line":19,"column":6,"index":763}},{"frame":"  21 |       // 3 tensors\n  22 |       const concatenated2 = cat([t1, t2, t3], 0);\n> 23 |       compare(concatenated2, target2, 1e-3);\n     |      ^ Eager Test\n  24 |     });\n  25 |\n  26 |     it(\"should concatenate on dim=1\", () => {","start":{"line":23,"column":6,"index":878}},{"frame":"  34 |       // 2 tensors\n  35 |       const concatenated1 = cat([t1, t2], 1);\n> 36 |       compare(concatenated1, target1, 1e-3);\n     |      ^ Eager Test\n  37 |\n  38 |       // 3 tensors\n  39 |       const concatenated2 = cat([t1, t2, t3], 1);","start":{"line":36,"column":6,"index":1432}},{"frame":"  38 |       // 3 tensors\n  39 |       const concatenated2 = cat([t1, t2, t3], 1);\n> 40 |       compare(concatenated2, target2, 1e-3);\n     |      ^ Eager Test\n  41 |     });\n  42 |\n  43 |     it(\"should concatenate on dim=-2\", () => {","start":{"line":40,"column":6,"index":1547}},{"frame":"   95 |       // 2 tensors\n   96 |       const stacked1 = stack([t1, t1], 0);\n>  97 |       compare(stacked1, target1, 1e-3);\n      |      ^ Eager Test\n   98 |\n   99 |       // 3 tensors\n  100 |       const stacked2 = stack([t1, t1, t1], 0);","start":{"line":97,"column":6,"index":3385}},{"frame":"   99 |       // 3 tensors\n  100 |       const stacked2 = stack([t1, t1, t1], 0);\n> 101 |       compare(stacked2, target2, 1e-3);\n      |      ^ Eager Test\n  102 |     });\n  103 |\n  104 |     it(\"should stack on dim=1\", () => {","start":{"line":101,"column":6,"index":3492}},{"frame":"  108 |       // 2 tensors\n  109 |       const stacked1 = stack([t1, t1], 1);\n> 110 |       compare(stacked1, target1, 1e-3);\n      |      ^ Eager Test\n  111 |\n  112 |       // 3 tensors\n  113 |       const stacked2 = stack([t1, t1, t1], 1);","start":{"line":110,"column":6,"index":3856}},{"frame":"  112 |       // 3 tensors\n  113 |       const stacked2 = stack([t1, t1, t1], 1);\n> 114 |       compare(stacked2, target2, 1e-3);\n      |      ^ Eager Test\n  115 |     });\n  116 |\n  117 |     it(\"should stack on dim=-1\", () => {","start":{"line":114,"column":6,"index":3963}},{"frame":"  121 |       // 2 tensors\n  122 |       const stacked1 = stack([t1, t1], -1);\n> 123 |       compare(stacked1, target1, 1e-3);\n      |      ^ Eager Test\n  124 |\n  125 |       // 3 tensors\n  126 |       const stacked2 = stack([t1, t1, t1], -1);","start":{"line":123,"column":6,"index":4329}},{"frame":"  125 |       // 3 tensors\n  126 |       const stacked2 = stack([t1, t1, t1], -1);\n> 127 |       compare(stacked2, target2, 1e-3);\n      |      ^ Eager Test\n  128 |     });\n  129 |   });\n  130 |","start":{"line":127,"column":6,"index":4437}},{"frame":"  135 |       const permuted_1 = x.permute(0, 1, 2);\n  136 |       const target_1 = x;\n> 137 |       compare(permuted_1, target_1, 1e-3);\n      |      ^ Eager Test\n  138 |\n  139 |       // Permute axes to (0, 2, 1)\n  140 |       const permuted_2 = x.permute(0, 2, 1);","start":{"line":137,"column":6,"index":4811}},{"frame":"  140 |       const permuted_2 = x.permute(0, 2, 1);\n  141 |       const target_2 = new Tensor(\"float32\", [0, 4, 8, 1, 5, 9, 2, 6, 10, 3, 7, 11, 12, 16, 20, 13, 17, 21, 14, 18, 22, 15, 19, 23], [2, 4, 3]);\n> 142 |       compare(permuted_2, target_2, 1e-3);\n      |      ^ Eager Test\n  143 |\n  144 |       // Permute axes to (1, 0, 2)\n  145 |       const permuted_3 = x.permute(1, 0, 2);","start":{"line":142,"column":6,"index":5080}},{"frame":"  145 |       const permuted_3 = x.permute(1, 0, 2);\n  146 |       const target_3 = new Tensor(\"float32\", [0, 1, 2, 3, 12, 13, 14, 15, 4, 5, 6, 7, 16, 17, 18, 19, 8, 9, 10, 11, 20, 21, 22, 23], [3, 2, 4]);\n> 147 |       compare(permuted_3, target_3, 1e-3);\n      |      ^ Eager Test\n  148 |\n  149 |       // Permute axes to (1, 2, 0)\n  150 |       const permuted_4 = x.permute(1, 2, 0);","start":{"line":147,"column":6,"index":5349}},{"frame":"  150 |       const permuted_4 = x.permute(1, 2, 0);\n  151 |       const target_4 = new Tensor(\"float32\", [0, 12, 1, 13, 2, 14, 3, 15, 4, 16, 5, 17, 6, 18, 7, 19, 8, 20, 9, 21, 10, 22, 11, 23], [3, 4, 2]);\n> 152 |       compare(permuted_4, target_4, 1e-3);\n      |      ^ Eager Test\n  153 |\n  154 |       // Permute axes to (2, 0, 1)\n  155 |       const permuted_5 = x.permute(2, 0, 1);","start":{"line":152,"column":6,"index":5618}},{"frame":"  155 |       const permuted_5 = x.permute(2, 0, 1);\n  156 |       const target_5 = new Tensor(\"float32\", [0, 4, 8, 12, 16, 20, 1, 5, 9, 13, 17, 21, 2, 6, 10, 14, 18, 22, 3, 7, 11, 15, 19, 23], [4, 2, 3]);\n> 157 |       compare(permuted_5, target_5, 1e-3);\n      |      ^ Eager Test\n  158 |\n  159 |       // Permute axes to (2, 1, 0)\n  160 |       const permuted_6 = x.permute(2, 1, 0);","start":{"line":157,"column":6,"index":5887}},{"frame":"  160 |       const permuted_6 = x.permute(2, 1, 0);\n  161 |       const target_6 = new Tensor(\"float32\", [0, 12, 4, 16, 8, 20, 1, 13, 5, 17, 9, 21, 2, 14, 6, 18, 10, 22, 3, 15, 7, 19, 11, 23], [4, 3, 2]);\n> 162 |       compare(permuted_6, target_6, 1e-3);\n      |      ^ Eager Test\n  163 |     });\n  164 |   });\n  165 |","start":{"line":162,"column":6,"index":6156}},{"frame":"  201 |       const t = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  202 |       const [stdVal, meanVal] = std_mean(t);\n> 203 |       compare(stdVal, new Tensor(\"float32\", [1.8708287477493286], []), 1e-3);\n      |      ^ Eager Test\n  204 |       compare(meanVal, new Tensor(\"float32\", [3.5], []), 1e-3);\n  205 |     });\n  206 |   });","start":{"line":203,"column":6,"index":7529}},{"frame":"  202 |       const [stdVal, meanVal] = std_mean(t);\n  203 |       compare(stdVal, new Tensor(\"float32\", [1.8708287477493286], []), 1e-3);\n> 204 |       compare(meanVal, new Tensor(\"float32\", [3.5], []), 1e-3);\n      |      ^ Eager Test\n  205 |     });\n  206 |   });\n  207 |","start":{"line":204,"column":6,"index":7607}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  17 |       // 2 tensors\n  18 |       const concatenated1 = cat([t1, t2], 0);\n> 19 |       compare(concatenated1, target1, 1e-3);\n     |      ^ Lazy Test\n  20 |\n  21 |       // 3 tensors\n  22 |       const concatenated2 = cat([t1, t2, t3], 0);","start":{"line":19,"column":6,"index":763}},{"frame":"  34 |       // 2 tensors\n  35 |       const concatenated1 = cat([t1, t2], 1);\n> 36 |       compare(concatenated1, target1, 1e-3);\n     |      ^ Lazy Test\n  37 |\n  38 |       // 3 tensors\n  39 |       const concatenated2 = cat([t1, t2, t3], 1);","start":{"line":36,"column":6,"index":1432}},{"frame":"  49 |       const concatenated = cat([t1, t2], -2);\n  50 |\n> 51 |       compare(concatenated, target, 1e-3);\n     |      ^ Lazy Test\n  52 |     });\n  53 |\n  54 |     // TODO add tests for errors","start":{"line":51,"column":6,"index":2011}},{"frame":"  61 |       const target = new Tensor(\"float32\", [3, 4], [2]);\n  62 |\n> 63 |       compare(t2, target);\n     |      ^ Lazy Test\n  64 |     });\n  65 |\n  66 |     it(\"should return a range of rows\", () => {","start":{"line":63,"column":6,"index":2335}},{"frame":"  69 |       const target = new Tensor(\"float32\", [3, 4, 5, 6], [2, 2]);\n  70 |\n> 71 |       compare(t2, target);\n     |      ^ Lazy Test\n  72 |     });\n  73 |\n  74 |     it(\"should return a crop\", () => {","start":{"line":71,"column":6,"index":2589}},{"frame":"  82 |       const target = new Tensor(\"float32\", [9, 10, 11, 12, 13, 16, 17, 18, 19, 20], [2, 5]);\n  83 |\n> 84 |       compare(t2, target);\n     |      ^ Lazy Test\n  85 |     });\n  86 |   });\n  87 |","start":{"line":84,"column":6,"index":2930}},{"frame":"   95 |       // 2 tensors\n   96 |       const stacked1 = stack([t1, t1], 0);\n>  97 |       compare(stacked1, target1, 1e-3);\n      |      ^ Lazy Test\n   98 |\n   99 |       // 3 tensors\n  100 |       const stacked2 = stack([t1, t1, t1], 0);","start":{"line":97,"column":6,"index":3385}},{"frame":"  108 |       // 2 tensors\n  109 |       const stacked1 = stack([t1, t1], 1);\n> 110 |       compare(stacked1, target1, 1e-3);\n      |      ^ Lazy Test\n  111 |\n  112 |       // 3 tensors\n  113 |       const stacked2 = stack([t1, t1, t1], 1);","start":{"line":110,"column":6,"index":3856}},{"frame":"  121 |       // 2 tensors\n  122 |       const stacked1 = stack([t1, t1], -1);\n> 123 |       compare(stacked1, target1, 1e-3);\n      |      ^ Lazy Test\n  124 |\n  125 |       // 3 tensors\n  126 |       const stacked2 = stack([t1, t1, t1], -1);","start":{"line":123,"column":6,"index":4329}},{"frame":"  135 |       const permuted_1 = x.permute(0, 1, 2);\n  136 |       const target_1 = x;\n> 137 |       compare(permuted_1, target_1, 1e-3);\n      |      ^ Lazy Test\n  138 |\n  139 |       // Permute axes to (0, 2, 1)\n  140 |       const permuted_2 = x.permute(0, 2, 1);","start":{"line":137,"column":6,"index":4811}},{"frame":"  170 |\n  171 |       const doubled = original.map((x) => x * 2);\n> 172 |       compare(doubled, target, 1e-3);\n      |      ^ Lazy Test\n  173 |     });\n  174 |   });\n  175 |","start":{"line":172,"column":6,"index":6471}},{"frame":"  178 |     it(\"should calculate mean over the entire tensor\", () => {\n  179 |       const target = new Tensor(\"float32\", [3.5], []);\n> 180 |       compare(t1.mean(), target, 1e-3);\n      |      ^ Lazy Test\n  181 |     });\n  182 |\n  183 |     it(\"should calculate mean over dimension 0\", () => {","start":{"line":180,"column":6,"index":6738}},{"frame":"  183 |     it(\"should calculate mean over dimension 0\", () => {\n  184 |       const target0 = new Tensor(\"float32\", [2.5, 3.5, 4.5], [3, 1]);\n> 185 |       compare(t1.mean(0), target0, 1e-3);\n      |      ^ Lazy Test\n  186 |     });\n  187 |\n  188 |     it(\"should calculate mean over dimension 1\", () => {","start":{"line":185,"column":6,"index":6914}},{"frame":"  188 |     it(\"should calculate mean over dimension 1\", () => {\n  189 |       const target1 = new Tensor(\"float32\", [2, 5], [2, 1]);\n> 190 |       compare(t1.mean(1), target1, 1e-3);\n      |      ^ Lazy Test\n  191 |     });\n  192 |\n  193 |     it(\"should calculate mean over dimension -1\", () => {","start":{"line":190,"column":6,"index":7083}},{"frame":"  193 |     it(\"should calculate mean over dimension -1\", () => {\n  194 |       const target2 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n> 195 |       compare(t1.mean(-1), target2, 1e-3);\n      |      ^ Lazy Test\n  196 |     });\n  197 |   });\n  198 |","start":{"line":195,"column":6,"index":7265}},{"frame":"  201 |       const t = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  202 |       const [stdVal, meanVal] = std_mean(t);\n> 203 |       compare(stdVal, new Tensor(\"float32\", [1.8708287477493286], []), 1e-3);\n      |      ^ Lazy Test\n  204 |       compare(meanVal, new Tensor(\"float32\", [3.5], []), 1e-3);\n  205 |     });\n  206 |   });","start":{"line":203,"column":6,"index":7529}},{"frame":"  211 |       const target = new Tensor(\"float32\", [-2], []);\n  212 |       const result = t1.min();\n> 213 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  214 |     });\n  215 |\n  216 |     it(\"should return the minimum over dimension 1\", () => {","start":{"line":213,"column":6,"index":7927}},{"frame":"  218 |       const target = new Tensor(\"float32\", [2, -1, 5], [3]);\n  219 |       const result = t2.min(1);\n> 220 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  221 |     });\n  222 |   });\n  223 |","start":{"line":220,"column":6,"index":8196}},{"frame":"  227 |       const target = new Tensor(\"float32\", [10], []);\n  228 |       const result = t1.max();\n> 229 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  230 |     });\n  231 |\n  232 |     it(\"should return the maximum over dimension 0\", () => {","start":{"line":229,"column":6,"index":8490}},{"frame":"  234 |       const target = new Tensor(\"float32\", [9, 5], [2]);\n  235 |       const result = t2.max(0);\n> 236 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  237 |     });\n  238 |   });\n  239 |","start":{"line":236,"column":6,"index":8754}},{"frame":"  243 |       const target = new Tensor(\"float32\", [21], []);\n  244 |       const result = t1.sum();\n> 245 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  246 |     });\n  247 |\n  248 |     it(\"should calculate sum over dimension 0\", () => {","start":{"line":245,"column":6,"index":9043}},{"frame":"  250 |       const target = new Tensor(\"float32\", [5, 7, 9], [3]);\n  251 |       const result = t1.sum(0);\n> 252 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  253 |     });\n  254 |\n  255 |     it(\"should calculate sum over dimension 1\", () => {","start":{"line":252,"column":6,"index":9305}},{"frame":"  257 |       const target = new Tensor(\"float32\", [6, 15], [2]);\n  258 |       const result = t1.sum(1);\n> 259 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  260 |     });\n  261 |   });\n  262 |","start":{"line":259,"column":6,"index":9565}},{"frame":"  266 |       const target = new Tensor(\"float32\", [5], []);\n  267 |       const result = t1.norm();\n> 268 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  269 |     });\n  270 |\n  271 |     it(\"should calculate L2 norm over dimension 0\", () => {","start":{"line":268,"column":6,"index":9844}},{"frame":"  273 |       const target = new Tensor(\"float32\", [6.7082, 8.9443], [2]);\n  274 |       const result = t1.norm(2, 0);\n> 275 |       compare(result, target, 1e-2);\n      |      ^ Lazy Test\n  276 |     });\n  277 |   });\n  278 |","start":{"line":275,"column":6,"index":10115}},{"frame":"  282 |       const target = new Tensor(\"float32\", [0.6, 0.8], [1, 2]);\n  283 |       const normalized = t1.normalize();\n> 284 |       compare(normalized, target, 1e-3);\n      |      ^ Lazy Test\n  285 |     });\n  286 |\n  287 |     it(\"should normalize along dimension\", () => {","start":{"line":284,"column":6,"index":10414}},{"frame":"  289 |       const target = new Tensor(\"float32\", [0.4472, 0.8944, 0.5547, 0.8321], [2, 2]);\n  290 |       const normalized = t1.normalize();\n> 291 |       compare(normalized, target, 1e-3);\n      |      ^ Lazy Test\n  292 |     });\n  293 |   });\n  294 |","start":{"line":291,"column":6,"index":10704}},{"frame":"  300 |\n  301 |       const norm = layer_norm(t1, [t1.dims.at(-1)]);\n> 302 |       compare(norm, target, 1e-3);\n      |      ^ Lazy Test\n  303 |     });\n  304 |   });\n  305 |","start":{"line":302,"column":6,"index":11127}},{"frame":"  310 |\n  311 |       const result = t1.sigmoid();\n> 312 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  313 |     });\n  314 |   });\n  315 |","start":{"line":312,"column":6,"index":11539}},{"frame":"  318 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [2, 2]);\n  319 |       const arr = t1.tolist();\n> 320 |       compare(arr, [\n      |      ^ Lazy Test\n  321 |         [1, 2],\n  322 |         [3, 4],\n  323 |       ]);","start":{"line":320,"column":6,"index":11775}},{"frame":"  331 |\n  332 |       const result = t1.mul(2);\n> 333 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  334 |     });\n  335 |   });\n  336 |","start":{"line":333,"column":6,"index":12083}},{"frame":"  341 |\n  342 |       const result = t1.div(2);\n> 343 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  344 |     });\n  345 |   });\n  346 |","start":{"line":343,"column":6,"index":12367}},{"frame":"  351 |\n  352 |       const result = t1.add(2);\n> 353 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  354 |     });\n  355 |   });\n  356 |","start":{"line":353,"column":6,"index":12644}},{"frame":"  361 |\n  362 |       const result = t1.sub(2);\n> 363 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  364 |     });\n  365 |   });\n  366 |   describe(\"gt\", () => {","start":{"line":363,"column":6,"index":12927}},{"frame":"  369 |       const target = new Tensor(\"bool\", [0, 1, 0, 1], [4]);\n  370 |       const result = t1.gt(4);\n> 371 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  372 |     });\n  373 |   });\n  374 |","start":{"line":371,"column":6,"index":13237}},{"frame":"  378 |       const target = new Tensor(\"bool\", [1, 0, 1, 0], [4]);\n  379 |       const result = t1.lt(4);\n> 380 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  381 |     });\n  382 |   });\n  383 |","start":{"line":380,"column":6,"index":13545}},{"frame":"  388 |\n  389 |       const result = t1.squeeze();\n> 390 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  391 |     });\n  392 |     it(\"should remove a specified dimension\", () => {\n  393 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [1, 1, 2, 2]);","start":{"line":390,"column":6,"index":13845}},{"frame":"  394 |       const result = t1.squeeze(1);\n  395 |       const target = new Tensor(\"float32\", [1, 2, 3, 4], [1, 2, 2]);\n> 396 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  397 |     });\n  398 |     it(\"should remove multiple dimensions\", () => {\n  399 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [1, 1, 2, 1, 2]);","start":{"line":396,"column":6,"index":14117}},{"frame":"  400 |       const result = t1.squeeze([0, 3]);\n  401 |       const target = new Tensor(\"float32\", [1, 2, 3, 4], [1, 2, 2]);\n> 402 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  403 |     });\n  404 |   });\n  405 |","start":{"line":402,"column":6,"index":14395}},{"frame":"  410 |\n  411 |       const result = t1.unsqueeze(0);\n> 412 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  413 |     });\n  414 |   });\n  415 |","start":{"line":412,"column":6,"index":14706}},{"frame":"  420 |\n  421 |       const result = t1.flatten();\n> 422 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  423 |     });\n  424 |   });\n  425 |","start":{"line":422,"column":6,"index":15025}},{"frame":"  430 |\n  431 |       const result = t1.neg();\n> 432 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  433 |     });\n  434 |   });\n  435 |","start":{"line":432,"column":6,"index":15337}},{"frame":"  440 |\n  441 |       const result = t1.view(3, 2);\n> 442 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  443 |     });\n  444 |\n  445 |     it(\"should reshape the tensor with an inferred dimension (-1)\", () => {","start":{"line":442,"column":6,"index":15665}},{"frame":"  448 |\n  449 |       const result = t1.view(1, -1);\n> 450 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  451 |     });\n  452 |\n  453 |     it(\"should throw if multiple inferred dimensions are used\", () => {","start":{"line":450,"column":6,"index":15965}},{"frame":"  463 |\n  464 |       const result = t1.clamp(-1, 2);\n> 465 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  466 |     });\n  467 |   });\n  468 |","start":{"line":465,"column":6,"index":16476}},{"frame":"  473 |\n  474 |       const result = t1.round();\n> 475 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  476 |     });\n  477 |   });\n  478 |","start":{"line":475,"column":6,"index":16793}},{"frame":"  482 |       const result = ones_like(t1);\n  483 |       const target = new Tensor(\"int64\", [1n, 1n, 1n, 1n], [2, 2]);\n> 484 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  485 |     });\n  486 |   });\n  487 |","start":{"line":484,"column":6,"index":17129}},{"frame":"  491 |       const result = zeros_like(t1);\n  492 |       const target = new Tensor(\"int64\", [0n, 0n, 0n, 0n], [2, 2]);\n> 493 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  494 |     });\n  495 |   });\n  496 |","start":{"line":493,"column":6,"index":17468}},{"frame":"  500 |       const result = full_like(t1, 10);\n  501 |       const target = new Tensor(\"float32\", [10, 10, 10, 10], [2, 2]);\n> 502 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  503 |     });\n  504 |     it(\"should create a boolean tensor with the same shape\", () => {\n  505 |       const t2 = new Tensor(\"bool\", [true, false], [2]);","start":{"line":502,"column":6,"index":17822}},{"frame":"  506 |       const result = full_like(t2, true);\n  507 |       const target = new Tensor(\"bool\", [true, true], [2]);\n> 508 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  509 |     });\n  510 |\n  511 |     it(\"should create a bigint tensor with the same shape\", () => {","start":{"line":508,"column":6,"index":18095}},{"frame":"  513 |       const result = full_like(t3, 123n);\n  514 |       const target = new Tensor(\"int64\", [123n, 123n], [2]);\n> 515 |       compare(result, target, 1e-3);\n      |      ^ Lazy Test\n  516 |     });\n  517 |   });\n  518 |","start":{"line":515,"column":6,"index":18365}},{"frame":"  537 |\n  538 |       const t2 = t1.to(\"int32\");\n> 539 |       compare(t2, target);\n      |      ^ Lazy Test\n  540 |     });\n  541 |     it(\"float32 to int64 (number to bigint)\", () => {\n  542 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);","start":{"line":539,"column":6,"index":19084}},{"frame":"  545 |\n  546 |       const t2 = t1.to(\"int64\");\n> 547 |       compare(t2, target);\n      |      ^ Lazy Test\n  548 |     });\n  549 |     it(\"int64 to float32 (bigint to number)\", () => {\n  550 |       const t1 = new Tensor(\"int64\", [1n, 2n, 3n, 4n, 5n, 6n], [2, 3]);","start":{"line":547,"column":6,"index":19352}},{"frame":"  553 |\n  554 |       const t2 = t1.to(\"float32\");\n> 555 |       compare(t2, target);\n      |      ^ Lazy Test\n  556 |     });\n  557 |     it(\"int32 to uint32\", () => {\n  558 |       const t1 = new Tensor(\"int32\", [-1, 2, -3, 4, -5, 6], [2, 3]);","start":{"line":555,"column":6,"index":19622}},{"frame":"  561 |\n  562 |       const t2 = t1.to(\"uint32\");\n> 563 |       compare(t2, target);\n      |      ^ Lazy Test\n  564 |     });\n  565 |     it(\"int16 to int8 (overflow)\", () => {\n  566 |       const t1 = new Tensor(\"int16\", [0, 1, 128, 256, 257, 512], [2, 3]);","start":{"line":563,"column":6,"index":19894}},{"frame":"  569 |\n  570 |       const t2 = t1.to(\"int8\");\n> 571 |       compare(t2, target);\n      |      ^ Lazy Test\n  572 |     });\n  573 |   });\n  574 | });","start":{"line":571,"column":6,"index":20152}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  524 |       expect(random.dims).toEqual(shape);\n  525 |       random.data.forEach((val) => {\n> 526 |         expect(val).toBeGreaterThanOrEqual(0);\n      |                                           ^ Magic Number\n  527 |         expect(val).toBeLessThan(1);\n  528 |       });\n  529 |     });","start":{"line":526,"column":43,"index":18760}},{"frame":"  525 |       random.data.forEach((val) => {\n  526 |         expect(val).toBeGreaterThanOrEqual(0);\n> 527 |         expect(val).toBeLessThan(1);\n      |                                 ^ Magic Number\n  528 |       });\n  529 |     });\n  530 |   });","start":{"line":527,"column":33,"index":18797}}]},{"name":"Unknown Test","packageName":"unknownTest","items":[{"frame":"   7 | describe(\"Tensor operations\", () => {\n   8 |   describe(\"cat\", () => {\n>  9 |     it(\"should concatenate on dim=0\", () => {\n     |    ^ Unknown Test\n  10 |       const t1 = new Tensor(\"float32\", [1, 2, 3], [1, 3]);\n  11 |       const t2 = new Tensor(\"float32\", [4, 5, 6, 7, 8, 9], [2, 3]);\n  12 |       const t3 = new Tensor(\"float32\", [10, 11, 12], [1, 3]);","start":{"column":4,"line":9}},{"frame":"  24 |     });\n  25 |\n> 26 |     it(\"should concatenate on dim=1\", () => {\n     |    ^ Unknown Test\n  27 |       const t1 = new Tensor(\"float32\", [1, 2, 3, -1, -2, -3], [2, 3, 1]);\n  28 |       const t2 = new Tensor(\"float32\", [4, -4], [2, 1, 1]);\n  29 |       const t3 = new Tensor(\"float32\", [5, 6, -5, -6], [2, 2, 1]);","start":{"column":4,"line":26}},{"frame":"  41 |     });\n  42 |\n> 43 |     it(\"should concatenate on dim=-2\", () => {\n     |    ^ Unknown Test\n  44 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 16], [2, 1, 3, 2]);\n  45 |       const t2 = new Tensor(\"float32\", [7, 8, 9, 10, 17, 18, 19, 20], [2, 1, 2, 2]);\n  46 |","start":{"column":4,"line":43}},{"frame":"  56 |\n  57 |   describe(\"slice\", () => {\n> 58 |     it(\"should return a given row dim\", () => {\n     |    ^ Unknown Test\n  59 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [3, 2]);\n  60 |       const t2 = t1.slice(1);\n  61 |       const target = new Tensor(\"float32\", [3, 4], [2]);","start":{"column":4,"line":58}},{"frame":"  64 |     });\n  65 |\n> 66 |     it(\"should return a range of rows\", () => {\n     |    ^ Unknown Test\n  67 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [3, 2]);\n  68 |       const t2 = t1.slice([1, 3]);\n  69 |       const target = new Tensor(\"float32\", [3, 4, 5, 6], [2, 2]);","start":{"column":4,"line":66}},{"frame":"  72 |     });\n  73 |\n> 74 |     it(\"should return a crop\", () => {\n     |    ^ Unknown Test\n  75 |       const t1 = new Tensor(\n  76 |         \"float32\",\n  77 |         Array.from({ length: 28 }, (_, i) => i + 1),","start":{"column":4,"line":74}},{"frame":"  89 |     const t1 = new Tensor(\"float32\", [0, 1, 2, 3, 4, 5], [1, 3, 2]);\n  90 |\n> 91 |     it(\"should stack on dim=0\", () => {\n     |    ^ Unknown Test\n  92 |       const target1 = new Tensor(\"float32\", [0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5], [2, 1, 3, 2]);\n  93 |       const target2 = new Tensor(\"float32\", [0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5], [3, 1, 3, 2]);\n  94 |","start":{"column":4,"line":91}},{"frame":"  102 |     });\n  103 |\n> 104 |     it(\"should stack on dim=1\", () => {\n      |    ^ Unknown Test\n  105 |       const target1 = new Tensor(\"float32\", [0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5], [1, 2, 3, 2]);\n  106 |       const target2 = new Tensor(\"float32\", [0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5, 0, 1, 2, 3, 4, 5], [1, 3, 3, 2]);\n  107 |","start":{"column":4,"line":104}},{"frame":"  115 |     });\n  116 |\n> 117 |     it(\"should stack on dim=-1\", () => {\n      |    ^ Unknown Test\n  118 |       const target1 = new Tensor(\"float32\", [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5], [1, 3, 2, 2]);\n  119 |       const target2 = new Tensor(\"float32\", [0, 0, 0, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4, 4, 5, 5, 5], [1, 3, 2, 3]);\n  120 |","start":{"column":4,"line":117}},{"frame":"  130 |\n  131 |   describe(\"permute\", () => {\n> 132 |     it(\"should permute\", () => {\n      |    ^ Unknown Test\n  133 |       const x = new Tensor(\"float32\", [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23], [2, 3, 4]);\n  134 |       // Permute axes to (0, 1, 2) - No change\n  135 |       const permuted_1 = x.permute(0, 1, 2);","start":{"column":4,"line":132}},{"frame":"  165 |\n  166 |   describe(\"map\", () => {\n> 167 |     it(\"should double\", () => {\n      |    ^ Unknown Test\n  168 |       const original = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  169 |       const target = new Tensor(\"float32\", [2, 4, 6, 8, 10, 12], [2, 3]);\n  170 |","start":{"column":4,"line":167}},{"frame":"  176 |   describe(\"mean\", () => {\n  177 |     const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3, 1]);\n> 178 |     it(\"should calculate mean over the entire tensor\", () => {\n      |    ^ Unknown Test\n  179 |       const target = new Tensor(\"float32\", [3.5], []);\n  180 |       compare(t1.mean(), target, 1e-3);\n  181 |     });","start":{"column":4,"line":178}},{"frame":"  181 |     });\n  182 |\n> 183 |     it(\"should calculate mean over dimension 0\", () => {\n      |    ^ Unknown Test\n  184 |       const target0 = new Tensor(\"float32\", [2.5, 3.5, 4.5], [3, 1]);\n  185 |       compare(t1.mean(0), target0, 1e-3);\n  186 |     });","start":{"column":4,"line":183}},{"frame":"  186 |     });\n  187 |\n> 188 |     it(\"should calculate mean over dimension 1\", () => {\n      |    ^ Unknown Test\n  189 |       const target1 = new Tensor(\"float32\", [2, 5], [2, 1]);\n  190 |       compare(t1.mean(1), target1, 1e-3);\n  191 |     });","start":{"column":4,"line":188}},{"frame":"  191 |     });\n  192 |\n> 193 |     it(\"should calculate mean over dimension -1\", () => {\n      |    ^ Unknown Test\n  194 |       const target2 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  195 |       compare(t1.mean(-1), target2, 1e-3);\n  196 |     });","start":{"column":4,"line":193}},{"frame":"  198 |\n  199 |   describe(\"std_mean\", () => {\n> 200 |     it(\"should return std_mean for the entire tensor\", () => {\n      |    ^ Unknown Test\n  201 |       const t = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  202 |       const [stdVal, meanVal] = std_mean(t);\n  203 |       compare(stdVal, new Tensor(\"float32\", [1.8708287477493286], []), 1e-3);","start":{"column":4,"line":200}},{"frame":"  207 |\n  208 |   describe(\"min\", () => {\n> 209 |     it(\"should return the minimum over the entire tensor\", () => {\n      |    ^ Unknown Test\n  210 |       const t1 = new Tensor(\"float32\", [3, -2, 5, 0], [2, 2]);\n  211 |       const target = new Tensor(\"float32\", [-2], []);\n  212 |       const result = t1.min();","start":{"column":4,"line":209}},{"frame":"  214 |     });\n  215 |\n> 216 |     it(\"should return the minimum over dimension 1\", () => {\n      |    ^ Unknown Test\n  217 |       const t2 = new Tensor(\"float32\", [4, 2, -1, 0, 6, 5], [3, 2]);\n  218 |       const target = new Tensor(\"float32\", [2, -1, 5], [3]);\n  219 |       const result = t2.min(1);","start":{"column":4,"line":216}},{"frame":"  223 |\n  224 |   describe(\"max\", () => {\n> 225 |     it(\"should return the maximum over the entire tensor\", () => {\n      |    ^ Unknown Test\n  226 |       const t1 = new Tensor(\"float32\", [3, 10, -2, 7], [2, 2]);\n  227 |       const target = new Tensor(\"float32\", [10], []);\n  228 |       const result = t1.max();","start":{"column":4,"line":225}},{"frame":"  230 |     });\n  231 |\n> 232 |     it(\"should return the maximum over dimension 0\", () => {\n      |    ^ Unknown Test\n  233 |       const t2 = new Tensor(\"float32\", [1, 2, 4, 5, 9, 3], [3, 2]);\n  234 |       const target = new Tensor(\"float32\", [9, 5], [2]);\n  235 |       const result = t2.max(0);","start":{"column":4,"line":232}},{"frame":"  239 |\n  240 |   describe(\"sum\", () => {\n> 241 |     it(\"should calculate sum over entire tensor\", () => {\n      |    ^ Unknown Test\n  242 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  243 |       const target = new Tensor(\"float32\", [21], []);\n  244 |       const result = t1.sum();","start":{"column":4,"line":241}},{"frame":"  246 |     });\n  247 |\n> 248 |     it(\"should calculate sum over dimension 0\", () => {\n      |    ^ Unknown Test\n  249 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  250 |       const target = new Tensor(\"float32\", [5, 7, 9], [3]);\n  251 |       const result = t1.sum(0);","start":{"column":4,"line":248}},{"frame":"  253 |     });\n  254 |\n> 255 |     it(\"should calculate sum over dimension 1\", () => {\n      |    ^ Unknown Test\n  256 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  257 |       const target = new Tensor(\"float32\", [6, 15], [2]);\n  258 |       const result = t1.sum(1);","start":{"column":4,"line":255}},{"frame":"  262 |\n  263 |   describe(\"norm\", () => {\n> 264 |     it(\"should calculate L2 norm over entire tensor\", () => {\n      |    ^ Unknown Test\n  265 |       const t1 = new Tensor(\"float32\", [3, 4], [2]);\n  266 |       const target = new Tensor(\"float32\", [5], []);\n  267 |       const result = t1.norm();","start":{"column":4,"line":264}},{"frame":"  269 |     });\n  270 |\n> 271 |     it(\"should calculate L2 norm over dimension 0\", () => {\n      |    ^ Unknown Test\n  272 |       const t1 = new Tensor(\"float32\", [3, 4, 6, 8], [2, 2]);\n  273 |       const target = new Tensor(\"float32\", [6.7082, 8.9443], [2]);\n  274 |       const result = t1.norm(2, 0);","start":{"column":4,"line":271}},{"frame":"  278 |\n  279 |   describe(\"normalize\", () => {\n> 280 |     it(\"should normalize a vector correctly\", () => {\n      |    ^ Unknown Test\n  281 |       const t1 = new Tensor(\"float32\", [3, 4], [1, 2]);\n  282 |       const target = new Tensor(\"float32\", [0.6, 0.8], [1, 2]);\n  283 |       const normalized = t1.normalize();","start":{"column":4,"line":280}},{"frame":"  285 |     });\n  286 |\n> 287 |     it(\"should normalize along dimension\", () => {\n      |    ^ Unknown Test\n  288 |       const t1 = new Tensor(\"float32\", [1, 2, 2, 3], [2, 2]);\n  289 |       const target = new Tensor(\"float32\", [0.4472, 0.8944, 0.5547, 0.8321], [2, 2]);\n  290 |       const normalized = t1.normalize();","start":{"column":4,"line":287}},{"frame":"  294 |\n  295 |   describe(\"layer_norm\", () => {\n> 296 |     it(\"should calculate layer norm\", () => {\n      |    ^ Unknown Test\n  297 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  298 |\n  299 |       const target = new Tensor(\"float32\", [-1.2247356176376343, 0.0, 1.2247356176376343, -1.2247357368469238, -1.1920928955078125e-7, 1.2247354984283447], [2, 3]);","start":{"column":4,"line":296}},{"frame":"  305 |\n  306 |   describe(\"sigmoid\", () => {\n> 307 |     it(\"should apply the sigmoid function to each element in the tensor\", () => {\n      |    ^ Unknown Test\n  308 |       const t1 = new Tensor(\"float32\", [0, 1, -1, 5, -5], [5]);\n  309 |       const target = new Tensor(\"float32\", [0.5, 1 / (1 + Math.exp(-1)), 1 / (1 + Math.exp(1)), 1 / (1 + Math.exp(-5)), 1 / (1 + Math.exp(5))], [5]);\n  310 |","start":{"column":4,"line":307}},{"frame":"  315 |\n  316 |   describe(\"tolist\", () => {\n> 317 |     it(\"should return nested arrays for a 2D tensor\", () => {\n      |    ^ Unknown Test\n  318 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [2, 2]);\n  319 |       const arr = t1.tolist();\n  320 |       compare(arr, [","start":{"column":4,"line":317}},{"frame":"  326 |\n  327 |   describe(\"mul\", () => {\n> 328 |     it(\"should multiply constant\", () => {\n      |    ^ Unknown Test\n  329 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [2, 2]);\n  330 |       const target = new Tensor(\"float32\", [2, 4, 6, 8], [2, 2]);\n  331 |","start":{"column":4,"line":328}},{"frame":"  336 |\n  337 |   describe(\"div\", () => {\n> 338 |     it(\"should divide constant\", () => {\n      |    ^ Unknown Test\n  339 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [2, 2]);\n  340 |       const target = new Tensor(\"float32\", [0.5, 1, 1.5, 2], [2, 2]);\n  341 |","start":{"column":4,"line":338}},{"frame":"  346 |\n  347 |   describe(\"add\", () => {\n> 348 |     it(\"should add constant\", () => {\n      |    ^ Unknown Test\n  349 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [2, 2]);\n  350 |       const target = new Tensor(\"float32\", [3, 4, 5, 6], [2, 2]);\n  351 |","start":{"column":4,"line":348}},{"frame":"  356 |\n  357 |   describe(\"sub\", () => {\n> 358 |     it(\"should subtract constant\", () => {\n      |    ^ Unknown Test\n  359 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [2, 2]);\n  360 |       const target = new Tensor(\"float32\", [-1, 0, 1, 2], [2, 2]);\n  361 |","start":{"column":4,"line":358}},{"frame":"  365 |   });\n  366 |   describe(\"gt\", () => {\n> 367 |     it(\"should perform element-wise greater than comparison with a scalar\", () => {\n      |    ^ Unknown Test\n  368 |       const t1 = new Tensor(\"float32\", [1, 5, 3, 7], [4]);\n  369 |       const target = new Tensor(\"bool\", [0, 1, 0, 1], [4]);\n  370 |       const result = t1.gt(4);","start":{"column":4,"line":367}},{"frame":"  374 |\n  375 |   describe(\"lt\", () => {\n> 376 |     it(\"should perform element-wise less than comparison with a scalar\", () => {\n      |    ^ Unknown Test\n  377 |       const t1 = new Tensor(\"float32\", [1, 5, 3, 7], [4]);\n  378 |       const target = new Tensor(\"bool\", [1, 0, 1, 0], [4]);\n  379 |       const result = t1.lt(4);","start":{"column":4,"line":376}},{"frame":"  383 |\n  384 |   describe(\"squeeze\", () => {\n> 385 |     it(\"should remove all dimensions of size 1\", () => {\n      |    ^ Unknown Test\n  386 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [1, 4]);\n  387 |       const target = new Tensor(\"float32\", [1, 2, 3, 4], [4]);\n  388 |","start":{"column":4,"line":385}},{"frame":"  390 |       compare(result, target, 1e-3);\n  391 |     });\n> 392 |     it(\"should remove a specified dimension\", () => {\n      |    ^ Unknown Test\n  393 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [1, 1, 2, 2]);\n  394 |       const result = t1.squeeze(1);\n  395 |       const target = new Tensor(\"float32\", [1, 2, 3, 4], [1, 2, 2]);","start":{"column":4,"line":392}},{"frame":"  396 |       compare(result, target, 1e-3);\n  397 |     });\n> 398 |     it(\"should remove multiple dimensions\", () => {\n      |    ^ Unknown Test\n  399 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [1, 1, 2, 1, 2]);\n  400 |       const result = t1.squeeze([0, 3]);\n  401 |       const target = new Tensor(\"float32\", [1, 2, 3, 4], [1, 2, 2]);","start":{"column":4,"line":398}},{"frame":"  405 |\n  406 |   describe(\"unsqueeze\", () => {\n> 407 |     it(\"should add a dimension at the specified axis\", () => {\n      |    ^ Unknown Test\n  408 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [4]);\n  409 |       const target = new Tensor(\"float32\", [1, 2, 3, 4], [1, 4]);\n  410 |","start":{"column":4,"line":407}},{"frame":"  415 |\n  416 |   describe(\"flatten\", () => {\n> 417 |     it(\"should flatten a 2D tensor into 1D by default\", () => {\n      |    ^ Unknown Test\n  418 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  419 |       const target = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [6]);\n  420 |","start":{"column":4,"line":417}},{"frame":"  425 |\n  426 |   describe(\"neg\", () => {\n> 427 |     it(\"should compute the negative of each element in the tensor\", () => {\n      |    ^ Unknown Test\n  428 |       const t1 = new Tensor(\"float32\", [1, -2, 0, 3], [4]);\n  429 |       const target = new Tensor(\"float32\", [-1, 2, -0, -3], [4]);\n  430 |","start":{"column":4,"line":427}},{"frame":"  435 |\n  436 |   describe(\"view\", () => {\n> 437 |     it(\"should reshape the tensor to the specified dimensions\", () => {\n      |    ^ Unknown Test\n  438 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  439 |       const target = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [3, 2]);\n  440 |","start":{"column":4,"line":437}},{"frame":"  443 |     });\n  444 |\n> 445 |     it(\"should reshape the tensor with an inferred dimension (-1)\", () => {\n      |    ^ Unknown Test\n  446 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  447 |       const target = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [1, 6]);\n  448 |","start":{"column":4,"line":445}},{"frame":"  458 |\n  459 |   describe(\"clamp\", () => {\n> 460 |     it(\"should clamp values between min and max\", () => {\n      |    ^ Unknown Test\n  461 |       const t1 = new Tensor(\"float32\", [-2, -1, 0, 1, 2, 3], [6]);\n  462 |       const target = new Tensor(\"float32\", [-1, -1, 0, 1, 2, 2], [6]);\n  463 |","start":{"column":4,"line":460}},{"frame":"  468 |\n  469 |   describe(\"round\", () => {\n> 470 |     it(\"should round elements to the nearest integer\", () => {\n      |    ^ Unknown Test\n  471 |       const t1 = new Tensor(\"float32\", [0.1, 1.4, 2.5, 3.9, -1.2], [5]);\n  472 |       const target = new Tensor(\"float32\", [0, 1, 3, 4, -1], [5]);\n  473 |","start":{"column":4,"line":470}},{"frame":"  478 |\n  479 |   describe(\"ones_like\", () => {\n> 480 |     it(\"should create a tensor of all ones with the same shape as the input\", () => {\n      |    ^ Unknown Test\n  481 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [2, 2]);\n  482 |       const result = ones_like(t1);\n  483 |       const target = new Tensor(\"int64\", [1n, 1n, 1n, 1n], [2, 2]);","start":{"column":4,"line":480}},{"frame":"  487 |\n  488 |   describe(\"zeros_like\", () => {\n> 489 |     it(\"should create a tensor of all zeros with the same shape as the input\", () => {\n      |    ^ Unknown Test\n  490 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [2, 2]);\n  491 |       const result = zeros_like(t1);\n  492 |       const target = new Tensor(\"int64\", [0n, 0n, 0n, 0n], [2, 2]);","start":{"column":4,"line":489}},{"frame":"  496 |\n  497 |   describe(\"full_like\", () => {\n> 498 |     it(\"should create a tensor filled with a number, matching the shape of the original\", () => {\n      |    ^ Unknown Test\n  499 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4], [2, 2]);\n  500 |       const result = full_like(t1, 10);\n  501 |       const target = new Tensor(\"float32\", [10, 10, 10, 10], [2, 2]);","start":{"column":4,"line":498}},{"frame":"  502 |       compare(result, target, 1e-3);\n  503 |     });\n> 504 |     it(\"should create a boolean tensor with the same shape\", () => {\n      |    ^ Unknown Test\n  505 |       const t2 = new Tensor(\"bool\", [true, false], [2]);\n  506 |       const result = full_like(t2, true);\n  507 |       const target = new Tensor(\"bool\", [true, true], [2]);","start":{"column":4,"line":504}},{"frame":"  509 |     });\n  510 |\n> 511 |     it(\"should create a bigint tensor with the same shape\", () => {\n      |    ^ Unknown Test\n  512 |       const t3 = new Tensor(\"int64\", [1n, 2n], [2]);\n  513 |       const result = full_like(t3, 123n);\n  514 |       const target = new Tensor(\"int64\", [123n, 123n], [2]);","start":{"column":4,"line":511}},{"frame":"  531 |\n  532 |   describe(\"to\", () => {\n> 533 |     it(\"float32 to int32 (number to number)\", () => {\n      |    ^ Unknown Test\n  534 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  535 |\n  536 |       const target = new Tensor(\"int32\", [1, 2, 3, 4, 5, 6], [2, 3]);","start":{"column":4,"line":533}},{"frame":"  539 |       compare(t2, target);\n  540 |     });\n> 541 |     it(\"float32 to int64 (number to bigint)\", () => {\n      |    ^ Unknown Test\n  542 |       const t1 = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);\n  543 |\n  544 |       const target = new Tensor(\"int64\", [1n, 2n, 3n, 4n, 5n, 6n], [2, 3]);","start":{"column":4,"line":541}},{"frame":"  547 |       compare(t2, target);\n  548 |     });\n> 549 |     it(\"int64 to float32 (bigint to number)\", () => {\n      |    ^ Unknown Test\n  550 |       const t1 = new Tensor(\"int64\", [1n, 2n, 3n, 4n, 5n, 6n], [2, 3]);\n  551 |\n  552 |       const target = new Tensor(\"float32\", [1, 2, 3, 4, 5, 6], [2, 3]);","start":{"column":4,"line":549}},{"frame":"  555 |       compare(t2, target);\n  556 |     });\n> 557 |     it(\"int32 to uint32\", () => {\n      |    ^ Unknown Test\n  558 |       const t1 = new Tensor(\"int32\", [-1, 2, -3, 4, -5, 6], [2, 3]);\n  559 |\n  560 |       const target = new Tensor(\"uint32\", [4294967295, 2, 4294967293, 4, 4294967291, 6], [2, 3]);","start":{"column":4,"line":557}},{"frame":"  563 |       compare(t2, target);\n  564 |     });\n> 565 |     it(\"int16 to int8 (overflow)\", () => {\n      |    ^ Unknown Test\n  566 |       const t1 = new Tensor(\"int16\", [0, 1, 128, 256, 257, 512], [2, 3]);\n  567 |\n  568 |       const target = new Tensor(\"int8\", [0, 1, -128, 0, 1, 0], [2, 3]);","start":{"column":4,"line":565}}]}],"metrics":{"aggregate":{"cyclomatic":97,"cyclomaticDensity":18.302,"halstead":{"bugs":11.078,"difficulty":59.655,"effort":1982495.439,"length":4134,"time":110138.636,"vocabulary":263,"volume":33232.891,"operands":{"distinct":249,"total":2122,"identifiers":["init","describe","\"Tensor operations\"","\"cat\"","it","\"should concatenate on dim=0\"","t1","Tensor","\"float32\"","1","2","3","t2","4","5","6","7","8","9","t3","10","11","12","target1","target2","concatenated1","cat","0","compare","0.001","concatenated2","\"should concatenate on dim=1\"","\"should concatenate on dim=-2\"","13","14","15","16","17","18","19","20","target","concatenated","\"slice\"","\"should return a given row dim\"","slice","\"should return a range of rows\"","\"should return a crop\"","Array","from","length","28","_","i","\"stack\"","\"should stack on dim=0\"","stacked1","stack","stacked2","\"should stack on dim=1\"","\"should stack on dim=-1\"","\"permute\"","\"should permute\"","x","21","22","23","permuted_1","permute","target_1","permuted_2","target_2","permuted_3","target_3","permuted_4","target_4","permuted_5","target_5","permuted_6","target_6","\"map\"","\"should double\"","original","doubled","map","\"mean\"","\"should calculate mean over the entire tensor\"","3.5","mean","\"should calculate mean over dimension 0\"","target0","2.5","4.5","\"should calculate mean over dimension 1\"","\"should calculate mean over dimension -1\"","\"std_mean\"","\"should return std_mean for the entire tensor\"","t","stdVal","meanVal","std_mean","1.8708287477493286","\"min\"","\"should return the minimum over the entire tensor\"","result","min","\"should return the minimum over dimension 1\"","\"max\"","\"should return the maximum over the entire tensor\"","max","\"should return the maximum over dimension 0\"","\"sum\"","\"should calculate sum over entire tensor\"","sum","\"should calculate sum over dimension 0\"","\"should calculate sum over dimension 1\"","\"norm\"","\"should calculate L2 norm over entire tensor\"","norm","\"should calculate L2 norm over dimension 0\"","6.7082","8.9443","0.01","\"normalize\"","\"should normalize a vector correctly\"","0.6","0.8","normalized","normalize","\"should normalize along dimension\"","0.4472","0.8944","0.5547","0.8321","\"layer_norm\"","\"should calculate layer norm\"","1.2247356176376343","1.2247357368469238","1.1920928955078125e-7","1.2247354984283447","layer_norm","dims","at","\"sigmoid\"","\"should apply the sigmoid function to each element in the tensor\"","0.5","Math","exp","sigmoid","\"tolist\"","\"should return nested arrays for a 2D tensor\"","arr","tolist","\"mul\"","\"should multiply constant\"","mul","\"div\"","\"should divide constant\"","1.5","div","\"add\"","\"should add constant\"","add","\"sub\"","\"should subtract constant\"","sub","\"gt\"","\"should perform element-wise greater than comparison with a scalar\"","\"bool\"","gt","\"lt\"","\"should perform element-wise less than comparison with a scalar\"","lt","\"squeeze\"","\"should remove all dimensions of size 1\"","squeeze","\"should remove a specified dimension\"","\"should remove multiple dimensions\"","\"unsqueeze\"","\"should add a dimension at the specified axis\"","unsqueeze","\"flatten\"","\"should flatten a 2D tensor into 1D by default\"","flatten","\"neg\"","\"should compute the negative of each element in the tensor\"","neg","\"view\"","\"should reshape the tensor to the specified dimensions\"","view","\"should reshape the tensor with an inferred dimension (-1)\"","\"should throw if multiple inferred dimensions are used\"","expect","toThrow","\"clamp\"","\"should clamp values between min and max\"","clamp","\"round\"","\"should round elements to the nearest integer\"","0.1","1.4","3.9","1.2","round","\"ones_like\"","\"should create a tensor of all ones with the same shape as the input\"","ones_like","\"int64\"","\"zeros_like\"","\"should create a tensor of all zeros with the same shape as the input\"","zeros_like","\"full_like\"","\"should create a tensor filled with a number, matching the shape of the original\"","full_like","\"should create a boolean tensor with the same shape\"","true","false","\"should create a bigint tensor with the same shape\"","\"rand\"","\"should create a tensor of random values between 0 and 1 with the given shape\"","shape","random","rand","type","toBe","toEqual","data","forEach","val","toBeGreaterThanOrEqual","toBeLessThan","\"to\"","\"float32 to int32 (number to number)\"","\"int32\"","to","\"float32 to int64 (number to bigint)\"","\"int64 to float32 (bigint to number)\"","\"int32 to uint32\"","\"uint32\"","4294967295","4294967293","4294967291","\"int16 to int8 (overflow)\"","\"int16\"","128","256","257","512","\"int8\""]},"operators":{"distinct":14,"total":2012,"identifiers":["()","function=>","const","=","new","[]",",","- (prefix)",".","{}",":","+","*","/"]}},"paramCount":4,"sloc":{"logical":530,"physical":575}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/transformers.js","type":"esm"},{"line":2,"path":"../init.js","type":"esm"},{"line":3,"path":"../test_utils.js","type":"esm"}],"errors":[],"lineEnd":575,"lineStart":1,"maintainability":109.546,"methods":[{"cyclomatic":1,"cyclomaticDensity":1.515,"halstead":{"bugs":0.227,"difficulty":1.941,"effort":1324.717,"length":132,"time":73.595,"vocabulary":36,"volume":682.43,"operands":{"distinct":34,"total":66,"identifiers":["describe","\"cat\"","\"slice\"","\"stack\"","\"permute\"","\"map\"","\"mean\"","\"std_mean\"","\"min\"","\"max\"","\"sum\"","\"norm\"","\"normalize\"","\"layer_norm\"","\"sigmoid\"","\"tolist\"","\"mul\"","\"div\"","\"add\"","\"sub\"","\"gt\"","\"lt\"","\"squeeze\"","\"unsqueeze\"","\"flatten\"","\"neg\"","\"view\"","\"clamp\"","\"round\"","\"ones_like\"","\"zeros_like\"","\"full_like\"","\"rand\"","\"to\""]},"operators":{"distinct":2,"total":66,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":66,"physical":568},"errors":[],"lineEnd":574,"lineStart":7,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should concatenate on dim=0\"","\"should concatenate on dim=1\"","\"should concatenate on dim=-2\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":48},"errors":[],"lineEnd":55,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.244,"difficulty":9.24,"effort":6774.963,"length":148,"time":376.387,"vocabulary":31,"volume":733.221,"operands":{"distinct":25,"total":77,"identifiers":["t1","Tensor","\"float32\"","1","2","3","t2","4","5","6","7","8","9","t3","10","11","12","target1","target2","concatenated1","cat","0","compare","0.001","concatenated2"]},"operators":{"distinct":6,"total":71,"identifiers":["const","=","new","[]",",","()"]}},"paramCount":0,"sloc":{"logical":11,"physical":16},"errors":[],"lineEnd":24,"lineStart":9,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.266,"difficulty":15.75,"effort":12580.206,"length":172,"time":698.9,"vocabulary":25,"volume":798.743,"operands":{"distinct":18,"total":81,"identifiers":["t1","Tensor","\"float32\"","1","2","3","t2","4","t3","5","6","target1","target2","concatenated1","cat","compare","0.001","concatenated2"]},"operators":{"distinct":7,"total":91,"identifiers":["const","=","new","[]",",","- (prefix)","()"]}},"paramCount":0,"sloc":{"logical":11,"physical":16},"errors":[],"lineEnd":41,"lineStart":26,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.238,"difficulty":8.448,"effort":6027.419,"length":138,"time":334.857,"vocabulary":36,"volume":713.45,"operands":{"distinct":29,"total":70,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","11","12","13","14","15","16","t2","7","8","9","10","17","18","19","20","target","concatenated","cat","compare","0.001"]},"operators":{"distinct":7,"total":68,"identifiers":["const","=","new","[]",",","()","- (prefix)"]}},"paramCount":0,"sloc":{"logical":6,"physical":10},"errors":[],"lineEnd":52,"lineStart":43,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should return a given row dim\"","\"should return a range of rows\"","\"should return a crop\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":30},"errors":[],"lineEnd":86,"lineStart":57,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.066,"difficulty":6.462,"effort":1284.61,"length":46,"time":71.367,"vocabulary":20,"volume":198.809,"operands":{"distinct":13,"total":24,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","t2","slice","target","compare"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":64,"lineStart":58,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.079,"difficulty":7.538,"effort":1791.938,"length":55,"time":99.552,"vocabulary":20,"volume":237.706,"operands":{"distinct":13,"total":28,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","t2","slice","target","compare"]},"operators":{"distinct":7,"total":27,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":72,"lineStart":66,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.127,"difficulty":7.071,"effort":2691.025,"length":72,"time":149.501,"vocabulary":39,"volume":380.549,"operands":{"distinct":28,"total":36,"identifiers":["t1","Tensor","\"float32\"","Array","from","length","28","_","i","4","7","t2","slice","1","target","9","10","11","12","13","16","17","18","19","20","2","5","compare"]},"operators":{"distinct":11,"total":36,"identifiers":["const","=","new","()",".","{}",":","function=>","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":8,"physical":12},"errors":[],"lineEnd":85,"lineStart":74,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["i","1"]},"operators":{"distinct":1,"total":1,"identifiers":["+"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":77,"lineStart":77,"name":"<anon method-10>","paramNames":["_","i"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.052,"difficulty":4.846,"effort":754.01,"length":36,"time":41.889,"vocabulary":20,"volume":155.589,"operands":{"distinct":13,"total":18,"identifiers":["t1","Tensor","\"float32\"","0","1","2","3","4","5","it","\"should stack on dim=0\"","\"should stack on dim=1\"","\"should stack on dim=-1\""]},"operators":{"distinct":7,"total":18,"identifiers":["const","=","new","[]",",","()","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":42},"errors":[],"lineEnd":129,"lineStart":88,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.178,"difficulty":11.813,"effort":6321.244,"length":120,"time":351.18,"vocabulary":22,"volume":535.132,"operands":{"distinct":16,"total":63,"identifiers":["target1","Tensor","\"float32\"","0","1","2","3","4","5","target2","stacked1","stack","t1","compare","0.001","stacked2"]},"operators":{"distinct":6,"total":57,"identifiers":["const","=","new","[]",",","()"]}},"paramCount":0,"sloc":{"logical":8,"physical":12},"errors":[],"lineEnd":102,"lineStart":91,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.178,"difficulty":11.813,"effort":6321.244,"length":120,"time":351.18,"vocabulary":22,"volume":535.132,"operands":{"distinct":16,"total":63,"identifiers":["target1","Tensor","\"float32\"","0","1","2","3","4","5","target2","stacked1","stack","t1","compare","0.001","stacked2"]},"operators":{"distinct":6,"total":57,"identifiers":["const","=","new","[]",",","()"]}},"paramCount":0,"sloc":{"logical":8,"physical":12},"errors":[],"lineEnd":115,"lineStart":104,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.184,"difficulty":13.781,"effort":7605.521,"length":122,"time":422.529,"vocabulary":23,"volume":551.875,"operands":{"distinct":16,"total":63,"identifiers":["target1","Tensor","\"float32\"","0","1","2","3","4","5","target2","stacked1","stack","t1","compare","0.001","stacked2"]},"operators":{"distinct":7,"total":59,"identifiers":["const","=","new","[]",",","()","- (prefix)"]}},"paramCount":0,"sloc":{"logical":8,"physical":12},"errors":[],"lineEnd":128,"lineStart":117,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should permute\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":34},"errors":[],"lineEnd":164,"lineStart":131,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.85,"difficulty":20.167,"effort":51406.412,"length":454,"time":2855.912,"vocabulary":49,"volume":2549.078,"operands":{"distinct":42,"total":242,"identifiers":["x","Tensor","\"float32\"","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","permuted_1","permute","target_1","compare","0.001","permuted_2","target_2","permuted_3","target_3","permuted_4","target_4","permuted_5","target_5","permuted_6","target_6"]},"operators":{"distinct":7,"total":212,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":25,"physical":32},"errors":[],"lineEnd":163,"lineStart":132,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should double\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":174,"lineStart":166,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.091,"difficulty":6.667,"effort":1817.503,"length":58,"time":100.972,"vocabulary":26,"volume":272.626,"operands":{"distinct":18,"total":30,"identifiers":["original","Tensor","\"float32\"","1","2","3","4","5","6","target","8","10","12","doubled","map","x","compare","0.001"]},"operators":{"distinct":8,"total":28,"identifiers":["const","=","new","[]",",","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":173,"lineStart":167,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["x","2"]},"operators":{"distinct":1,"total":1,"identifiers":["*"]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":171,"lineStart":171,"name":"<anon method-19>","paramNames":["x"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.059,"difficulty":5,"effort":878.463,"length":40,"time":48.804,"vocabulary":21,"volume":175.693,"operands":{"distinct":14,"total":20,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","it","\"should calculate mean over the entire tensor\"","\"should calculate mean over dimension 0\"","\"should calculate mean over dimension 1\"","\"should calculate mean over dimension -1\""]},"operators":{"distinct":7,"total":20,"identifiers":["const","=","new","[]",",","()","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":22},"errors":[],"lineEnd":197,"lineStart":176,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.022,"difficulty":3.375,"effort":218.447,"length":17,"time":12.136,"vocabulary":14,"volume":64.725,"operands":{"distinct":8,"total":9,"identifiers":["target","Tensor","\"float32\"","3.5","compare","t1","mean","0.001"]},"operators":{"distinct":6,"total":8,"identifiers":["const","=","new","[]","()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":181,"lineStart":178,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.036,"difficulty":3.769,"effort":407.259,"length":25,"time":22.625,"vocabulary":20,"volume":108.048,"operands":{"distinct":13,"total":14,"identifiers":["target0","Tensor","\"float32\"","2.5","3.5","4.5","3","1","compare","t1","mean","0","0.001"]},"operators":{"distinct":7,"total":11,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":186,"lineStart":183,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.031,"difficulty":4.55,"effort":427.753,"length":23,"time":23.764,"vocabulary":17,"volume":94.012,"operands":{"distinct":10,"total":13,"identifiers":["target1","Tensor","\"float32\"","2","5","1","compare","t1","mean","0.001"]},"operators":{"distinct":7,"total":10,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":191,"lineStart":188,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.047,"difficulty":5.231,"effort":735.206,"length":32,"time":40.845,"vocabulary":21,"volume":140.554,"operands":{"distinct":13,"total":17,"identifiers":["target2","Tensor","\"float32\"","1","2","3","4","5","6","compare","t1","mean","0.001"]},"operators":{"distinct":8,"total":15,"identifiers":["const","=","new","[]",",","()",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":196,"lineStart":193,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should return std_mean for the entire tensor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":8},"errors":[],"lineEnd":206,"lineStart":199,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.076,"difficulty":5.063,"effort":1151.37,"length":51,"time":63.965,"vocabulary":22,"volume":227.431,"operands":{"distinct":16,"total":27,"identifiers":["t","Tensor","\"float32\"","1","2","3","4","5","6","stdVal","meanVal","std_mean","compare","1.8708287477493286","0.001","3.5"]},"operators":{"distinct":6,"total":24,"identifiers":["const","=","new","[]",",","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":205,"lineStart":200,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should return the minimum over the entire tensor\"","\"should return the minimum over dimension 1\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":15},"errors":[],"lineEnd":222,"lineStart":208,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.059,"difficulty":6.667,"effort":1181.327,"length":41,"time":65.629,"vocabulary":20,"volume":177.199,"operands":{"distinct":12,"total":20,"identifiers":["t1","Tensor","\"float32\"","3","2","5","0","target","result","min","compare","0.001"]},"operators":{"distinct":8,"total":21,"identifiers":["const","=","new","[]",",","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":214,"lineStart":209,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.077,"difficulty":6.933,"effort":1599.532,"length":51,"time":88.863,"vocabulary":23,"volume":230.702,"operands":{"distinct":15,"total":26,"identifiers":["t2","Tensor","\"float32\"","4","2","1","0","6","5","3","target","result","min","compare","0.001"]},"operators":{"distinct":8,"total":25,"identifiers":["const","=","new","[]",",","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":221,"lineStart":216,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should return the maximum over the entire tensor\"","\"should return the maximum over dimension 0\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":15},"errors":[],"lineEnd":238,"lineStart":224,"name":"<anon method-30>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.058,"difficulty":6.667,"effort":1152.514,"length":40,"time":64.029,"vocabulary":20,"volume":172.877,"operands":{"distinct":12,"total":20,"identifiers":["t1","Tensor","\"float32\"","3","10","2","7","target","result","max","compare","0.001"]},"operators":{"distinct":8,"total":20,"identifiers":["const","=","new","[]",",","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":230,"lineStart":225,"name":"<anon method-31>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.07,"difficulty":5.833,"effort":1222.628,"length":47,"time":67.924,"vocabulary":22,"volume":209.593,"operands":{"distinct":15,"total":25,"identifiers":["t2","Tensor","\"float32\"","1","2","4","5","9","3","target","result","max","0","compare","0.001"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":237,"lineStart":232,"name":"<anon method-32>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should calculate sum over entire tensor\"","\"should calculate sum over dimension 0\"","\"should calculate sum over dimension 1\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":22},"errors":[],"lineEnd":261,"lineStart":240,"name":"<anon method-33>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.064,"difficulty":5.133,"effort":984.345,"length":43,"time":54.686,"vocabulary":22,"volume":191.756,"operands":{"distinct":15,"total":22,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","target","21","result","sum","compare","0.001"]},"operators":{"distinct":7,"total":21,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":246,"lineStart":241,"name":"<anon method-34>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.075,"difficulty":5.353,"effort":1202.609,"length":49,"time":66.812,"vocabulary":24,"volume":224.663,"operands":{"distinct":17,"total":26,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","target","7","9","result","sum","0","compare","0.001"]},"operators":{"distinct":7,"total":23,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":253,"lineStart":248,"name":"<anon method-35>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.07,"difficulty":5.833,"effort":1222.628,"length":47,"time":67.924,"vocabulary":22,"volume":209.593,"operands":{"distinct":15,"total":25,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","target","15","result","sum","compare","0.001"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":260,"lineStart":255,"name":"<anon method-36>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should calculate L2 norm over entire tensor\"","\"should calculate L2 norm over dimension 0\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":15},"errors":[],"lineEnd":277,"lineStart":263,"name":"<anon method-37>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.047,"difficulty":4.958,"effort":695.067,"length":33,"time":38.615,"vocabulary":19,"volume":140.182,"operands":{"distinct":12,"total":17,"identifiers":["t1","Tensor","\"float32\"","3","4","2","target","5","result","norm","compare","0.001"]},"operators":{"distinct":7,"total":16,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":269,"lineStart":264,"name":"<anon method-38>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.066,"difficulty":5.25,"effort":1044.943,"length":44,"time":58.052,"vocabulary":23,"volume":199.037,"operands":{"distinct":16,"total":24,"identifiers":["t1","Tensor","\"float32\"","3","4","6","8","2","target","6.7082","8.9443","result","norm","0","compare","0.01"]},"operators":{"distinct":7,"total":20,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":276,"lineStart":271,"name":"<anon method-39>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should normalize a vector correctly\"","\"should normalize along dimension\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":15},"errors":[],"lineEnd":293,"lineStart":279,"name":"<anon method-40>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.059,"difficulty":5.25,"effort":922.387,"length":40,"time":51.244,"vocabulary":21,"volume":175.693,"operands":{"distinct":14,"total":21,"identifiers":["t1","Tensor","\"float32\"","3","4","1","2","target","0.6","0.8","normalized","normalize","compare","0.001"]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":285,"lineStart":280,"name":"<anon method-41>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.071,"difficulty":5.833,"effort":1248.641,"length":48,"time":69.369,"vocabulary":22,"volume":214.053,"operands":{"distinct":15,"total":25,"identifiers":["t1","Tensor","\"float32\"","1","2","3","target","0.4472","0.8944","0.5547","0.8321","normalized","normalize","compare","0.001"]},"operators":{"distinct":7,"total":23,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":292,"lineStart":287,"name":"<anon method-42>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should calculate layer norm\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":10},"errors":[],"lineEnd":304,"lineStart":295,"name":"<anon method-43>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.108,"difficulty":6.286,"effort":2045.904,"length":67,"time":113.661,"vocabulary":29,"volume":325.485,"operands":{"distinct":21,"total":33,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","target","1.2247356176376343","0","1.2247357368469238","1.1920928955078125e-7","1.2247354984283447","norm","layer_norm","dims","at","compare","0.001"]},"operators":{"distinct":8,"total":34,"identifiers":["const","=","new","[]",",","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":8},"errors":[],"lineEnd":303,"lineStart":296,"name":"<anon method-44>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should apply the sigmoid function to each element in the tensor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":314,"lineStart":306,"name":"<anon method-45>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.128,"difficulty":14.643,"effort":5639.504,"length":84,"time":313.306,"vocabulary":24,"volume":385.137,"operands":{"distinct":14,"total":41,"identifiers":["t1","Tensor","\"float32\"","0","1","5","target","0.5","Math","exp","result","sigmoid","compare","0.001"]},"operators":{"distinct":10,"total":43,"identifiers":["const","=","new","[]",",","- (prefix)","/","+","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":7},"errors":[],"lineEnd":313,"lineStart":307,"name":"<anon method-46>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should return nested arrays for a 2D tensor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":10},"errors":[],"lineEnd":325,"lineStart":316,"name":"<anon method-47>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.052,"difficulty":6.3,"effort":978.539,"length":38,"time":54.363,"vocabulary":17,"volume":155.324,"operands":{"distinct":10,"total":18,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","arr","tolist","compare"]},"operators":{"distinct":7,"total":20,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":8},"errors":[],"lineEnd":324,"lineStart":317,"name":"<anon method-48>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should multiply constant\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":335,"lineStart":327,"name":"<anon method-49>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.072,"difficulty":6.5,"effort":1398.953,"length":49,"time":77.72,"vocabulary":21,"volume":215.224,"operands":{"distinct":14,"total":26,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","target","6","8","result","mul","compare","0.001"]},"operators":{"distinct":7,"total":23,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":334,"lineStart":328,"name":"<anon method-50>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should divide constant\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":345,"lineStart":337,"name":"<anon method-51>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.072,"difficulty":6.5,"effort":1398.953,"length":49,"time":77.72,"vocabulary":21,"volume":215.224,"operands":{"distinct":14,"total":26,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","target","0.5","1.5","result","div","compare","0.001"]},"operators":{"distinct":7,"total":23,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":344,"lineStart":338,"name":"<anon method-52>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should add constant\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":355,"lineStart":347,"name":"<anon method-53>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.072,"difficulty":6.5,"effort":1398.953,"length":49,"time":77.72,"vocabulary":21,"volume":215.224,"operands":{"distinct":14,"total":26,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","target","5","6","result","add","compare","0.001"]},"operators":{"distinct":7,"total":23,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":354,"lineStart":348,"name":"<anon method-54>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should subtract constant\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":365,"lineStart":357,"name":"<anon method-55>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.073,"difficulty":8,"effort":1756.927,"length":50,"time":97.607,"vocabulary":21,"volume":219.616,"operands":{"distinct":13,"total":26,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","target","0","result","sub","compare","0.001"]},"operators":{"distinct":8,"total":24,"identifiers":["const","=","new","[]",",","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":364,"lineStart":358,"name":"<anon method-56>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should perform element-wise greater than comparison with a scalar\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":8},"errors":[],"lineEnd":373,"lineStart":366,"name":"<anon method-57>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.067,"difficulty":5.6,"effort":1123.777,"length":45,"time":62.432,"vocabulary":22,"volume":200.674,"operands":{"distinct":15,"total":24,"identifiers":["t1","Tensor","\"float32\"","1","5","3","7","4","target","\"bool\"","0","result","gt","compare","0.001"]},"operators":{"distinct":7,"total":21,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":372,"lineStart":367,"name":"<anon method-58>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should perform element-wise less than comparison with a scalar\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":8},"errors":[],"lineEnd":382,"lineStart":375,"name":"<anon method-59>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.067,"difficulty":5.6,"effort":1123.777,"length":45,"time":62.432,"vocabulary":22,"volume":200.674,"operands":{"distinct":15,"total":24,"identifiers":["t1","Tensor","\"float32\"","1","5","3","7","4","target","\"bool\"","0","result","lt","compare","0.001"]},"operators":{"distinct":7,"total":21,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":381,"lineStart":376,"name":"<anon method-60>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should remove all dimensions of size 1\"","\"should remove a specified dimension\"","\"should remove multiple dimensions\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":21},"errors":[],"lineEnd":404,"lineStart":384,"name":"<anon method-61>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.065,"difficulty":7,"effort":1367.833,"length":46,"time":75.991,"vocabulary":19,"volume":195.405,"operands":{"distinct":12,"total":24,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","target","result","squeeze","compare","0.001"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":391,"lineStart":385,"name":"<anon method-62>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.078,"difficulty":8.458,"effort":1976.171,"length":55,"time":109.787,"vocabulary":19,"volume":233.636,"operands":{"distinct":12,"total":29,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","result","squeeze","target","compare","0.001"]},"operators":{"distinct":7,"total":26,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":397,"lineStart":392,"name":"<anon method-63>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.086,"difficulty":8.346,"effort":2164.289,"length":60,"time":120.238,"vocabulary":20,"volume":259.316,"operands":{"distinct":13,"total":31,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","result","squeeze","0","target","compare","0.001"]},"operators":{"distinct":7,"total":29,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":403,"lineStart":398,"name":"<anon method-64>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should add a dimension at the specified axis\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":414,"lineStart":406,"name":"<anon method-65>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.068,"difficulty":6.731,"effort":1367.225,"length":47,"time":75.957,"vocabulary":20,"volume":203.131,"operands":{"distinct":13,"total":25,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","target","result","unsqueeze","0","compare","0.001"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":413,"lineStart":407,"name":"<anon method-66>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should flatten a 2D tensor into 1D by default\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":424,"lineStart":416,"name":"<anon method-67>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.079,"difficulty":7,"effort":1660.296,"length":54,"time":92.239,"vocabulary":21,"volume":237.185,"operands":{"distinct":14,"total":28,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","target","result","flatten","compare","0.001"]},"operators":{"distinct":7,"total":26,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":423,"lineStart":417,"name":"<anon method-68>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should compute the negative of each element in the tensor\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":434,"lineStart":426,"name":"<anon method-69>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.07,"difficulty":7.077,"effort":1492.036,"length":48,"time":82.891,"vocabulary":21,"volume":210.831,"operands":{"distinct":13,"total":23,"identifiers":["t1","Tensor","\"float32\"","1","2","0","3","4","target","result","neg","compare","0.001"]},"operators":{"distinct":8,"total":25,"identifiers":["const","=","new","[]",",","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":433,"lineStart":427,"name":"<anon method-70>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should reshape the tensor to the specified dimensions\"","\"should reshape the tensor with an inferred dimension (-1)\"","\"should throw if multiple inferred dimensions are used\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":22},"errors":[],"lineEnd":457,"lineStart":436,"name":"<anon method-71>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.085,"difficulty":7.75,"effort":1974.347,"length":58,"time":109.686,"vocabulary":21,"volume":254.754,"operands":{"distinct":14,"total":31,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","target","result","view","compare","0.001"]},"operators":{"distinct":7,"total":27,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":443,"lineStart":437,"name":"<anon method-72>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.088,"difficulty":8.857,"effort":2330.372,"length":59,"time":129.465,"vocabulary":22,"volume":263.106,"operands":{"distinct":14,"total":31,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","target","result","view","compare","0.001"]},"operators":{"distinct":8,"total":28,"identifiers":["const","=","new","[]",",","()",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":451,"lineStart":445,"name":"<anon method-73>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.04,"difficulty":4.727,"effort":562.271,"length":28,"time":31.237,"vocabulary":19,"volume":118.942,"operands":{"distinct":11,"total":13,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","expect","toThrow"]},"operators":{"distinct":8,"total":15,"identifiers":["const","=","new","[]",",","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":456,"lineStart":453,"name":"<anon method-74>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":2,"effort":41.359,"length":8,"time":2.298,"vocabulary":6,"volume":20.68,"operands":{"distinct":3,"total":4,"identifiers":["t1","view","1"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":455,"lineStart":455,"name":"<anon method-75>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should clamp values between min and max\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":467,"lineStart":459,"name":"<anon method-76>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.086,"difficulty":8.923,"effort":2312.386,"length":59,"time":128.466,"vocabulary":21,"volume":259.147,"operands":{"distinct":13,"total":29,"identifiers":["t1","Tensor","\"float32\"","2","1","0","3","6","target","result","clamp","compare","0.001"]},"operators":{"distinct":8,"total":30,"identifiers":["const","=","new","[]",",","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":466,"lineStart":460,"name":"<anon method-77>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should round elements to the nearest integer\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":477,"lineStart":469,"name":"<anon method-78>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.078,"difficulty":5.556,"effort":1305.678,"length":50,"time":72.538,"vocabulary":26,"volume":235.022,"operands":{"distinct":18,"total":25,"identifiers":["t1","Tensor","\"float32\"","0.1","1.4","2.5","3.9","1.2","5","target","0","1","3","4","result","round","compare","0.001"]},"operators":{"distinct":8,"total":25,"identifiers":["const","=","new","[]",",","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":476,"lineStart":470,"name":"<anon method-79>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should create a tensor of all ones with the same shape as the input\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":8},"errors":[],"lineEnd":486,"lineStart":479,"name":"<anon method-80>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.061,"difficulty":4.846,"effort":885.203,"length":43,"time":49.178,"vocabulary":19,"volume":182.661,"operands":{"distinct":13,"total":21,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","result","ones_like","target","\"int64\"","compare","0.001"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","new","[]",",","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":485,"lineStart":480,"name":"<anon method-81>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should create a tensor of all zeros with the same shape as the input\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":8},"errors":[],"lineEnd":495,"lineStart":488,"name":"<anon method-82>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.061,"difficulty":4.846,"effort":885.203,"length":43,"time":49.178,"vocabulary":19,"volume":182.661,"operands":{"distinct":13,"total":21,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","result","zeros_like","target","\"int64\"","compare","0.001"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","new","[]",",","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":494,"lineStart":489,"name":"<anon method-83>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should create a tensor filled with a number, matching the shape of the original\"","\"should create a boolean tensor with the same shape\"","\"should create a bigint tensor with the same shape\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":21},"errors":[],"lineEnd":517,"lineStart":497,"name":"<anon method-84>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.068,"difficulty":6,"effort":1223.403,"length":48,"time":67.967,"vocabulary":19,"volume":203.901,"operands":{"distinct":13,"total":26,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","result","full_like","10","target","compare","0.001"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","new","[]",",","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":503,"lineStart":498,"name":"<anon method-85>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.049,"difficulty":5.455,"effort":802.629,"length":36,"time":44.591,"vocabulary":17,"volume":147.149,"operands":{"distinct":11,"total":20,"identifiers":["t2","Tensor","\"bool\"","true","false","2","result","full_like","target","compare","0.001"]},"operators":{"distinct":6,"total":16,"identifiers":["const","=","new","[]",",","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":509,"lineStart":504,"name":"<anon method-86>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.04,"difficulty":5,"effort":605.568,"length":31,"time":33.643,"vocabulary":15,"volume":121.114,"operands":{"distinct":9,"total":15,"identifiers":["t3","Tensor","\"int64\"","2","result","full_like","target","compare","0.001"]},"operators":{"distinct":6,"total":16,"identifiers":["const","=","new","[]",",","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":516,"lineStart":511,"name":"<anon method-87>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should create a tensor of random values between 0 and 1 with the given shape\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":12},"errors":[],"lineEnd":530,"lineStart":519,"name":"<anon method-88>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.056,"difficulty":5.385,"effort":907.605,"length":39,"time":50.422,"vocabulary":20,"volume":168.555,"operands":{"distinct":13,"total":20,"identifiers":["shape","2","random","rand","expect","type","toBe","\"float32\"","dims","toEqual","data","forEach","val"]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","[]",",","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":10},"errors":[],"lineEnd":529,"lineStart":520,"name":"<anon method-89>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.014,"difficulty":1.333,"effort":56,"length":14,"time":3.111,"vocabulary":8,"volume":42,"operands":{"distinct":6,"total":8,"identifiers":["expect","val","toBeGreaterThanOrEqual","0","toBeLessThan","1"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":528,"lineStart":525,"name":"<anon method-90>","paramNames":["val"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.02,"difficulty":1.667,"effort":100,"length":20,"time":5.556,"vocabulary":8,"volume":60,"operands":{"distinct":6,"total":10,"identifiers":["it","\"float32 to int32 (number to number)\"","\"float32 to int64 (number to bigint)\"","\"int64 to float32 (bigint to number)\"","\"int32 to uint32\"","\"int16 to int8 (overflow)\""]},"operators":{"distinct":2,"total":10,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":42},"errors":[],"lineEnd":573,"lineStart":532,"name":"<anon method-91>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.082,"difficulty":7.25,"effort":1783.281,"length":56,"time":99.071,"vocabulary":21,"volume":245.97,"operands":{"distinct":14,"total":29,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","target","\"int32\"","t2","to","compare"]},"operators":{"distinct":7,"total":27,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":8},"errors":[],"lineEnd":540,"lineStart":533,"name":"<anon method-92>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.073,"difficulty":5.75,"effort":1262.791,"length":50,"time":70.155,"vocabulary":21,"volume":219.616,"operands":{"distinct":14,"total":23,"identifiers":["t1","Tensor","\"float32\"","1","2","3","4","5","6","target","\"int64\"","t2","to","compare"]},"operators":{"distinct":7,"total":27,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":8},"errors":[],"lineEnd":548,"lineStart":541,"name":"<anon method-93>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.073,"difficulty":5.75,"effort":1262.791,"length":50,"time":70.155,"vocabulary":21,"volume":219.616,"operands":{"distinct":14,"total":23,"identifiers":["t1","Tensor","\"int64\"","2","3","target","\"float32\"","1","4","5","6","t2","to","compare"]},"operators":{"distinct":7,"total":27,"identifiers":["const","=","new","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":8},"errors":[],"lineEnd":556,"lineStart":549,"name":"<anon method-94>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.091,"difficulty":6.824,"effort":1869.562,"length":59,"time":103.865,"vocabulary":25,"volume":273.988,"operands":{"distinct":17,"total":29,"identifiers":["t1","Tensor","\"int32\"","1","2","3","4","5","6","target","\"uint32\"","4294967295","4294967293","4294967291","t2","to","compare"]},"operators":{"distinct":8,"total":30,"identifiers":["const","=","new","[]",",","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":8},"errors":[],"lineEnd":564,"lineStart":557,"name":"<anon method-95>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.087,"difficulty":7.25,"effort":1894.736,"length":57,"time":105.263,"vocabulary":24,"volume":261.343,"operands":{"distinct":16,"total":29,"identifiers":["t1","Tensor","\"int16\"","0","1","128","256","257","512","2","3","target","\"int8\"","t2","to","compare"]},"operators":{"distinct":8,"total":28,"identifiers":["const","=","new","[]",",","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":8},"errors":[],"lineEnd":572,"lineStart":565,"name":"<anon method-96>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.189,"halstead":{"bugs":0.114,"difficulty":0.615,"effort":20438.097,"length":42.619,"time":1135.45,"vocabulary":2.711,"volume":342.607,"operands":{"distinct":2.567,"total":21.876},"operators":{"distinct":0.144,"total":20.742}},"paramCount":0.041,"sloc":{"logical":5.464,"physical":5.928}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":27.496,"halstead":{"bugs":0.065,"difficulty":4.867,"effort":1796.846,"length":43,"time":99.825,"vocabulary":15.979,"volume":194.608,"operands":{"distinct":10.75,"total":22.073},"operators":{"distinct":5.229,"total":20.927}},"paramCount":0.042,"sloc":{"logical":5.49,"physical":16.208}}}},{"path":"/home/gabriel/Desktop/research/projects/transformers.js/tests/utils/utils.test.js","testCases":9,"smells":21,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  37 |           return Math.max(maxdiff, diff);\n  38 |         }, -Infinity);\n> 39 |         expect(maxdiff).toBeGreaterThanOrEqual(0);\n     |        ^ Duplicate Assert\n  40 |         expect(maxdiff).toBeLessThan(1e-6);\n  41 |       },\n  42 |       MAX_TEST_EXECUTION_TIME,","start":{"line":39,"column":8,"index":1467}},{"frame":"  38 |         }, -Infinity);\n  39 |         expect(maxdiff).toBeGreaterThanOrEqual(0);\n> 40 |         expect(maxdiff).toBeLessThan(1e-6);\n     |        ^ Duplicate Assert\n  41 |       },\n  42 |       MAX_TEST_EXECUTION_TIME,\n  43 |     );","start":{"line":40,"column":8,"index":1518}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  46 |       \"should calculate window\",\n  47 |       async () => {\n> 48 |         compare(hanning(10), new Float64Array([0.0, 0.11697777844051105, 0.41317591116653485, 0.75, 0.9698463103929542, 0.9698463103929542, 0.75, 0.41317591116653485, 0.11697777844051105, 0.0]));\n     |        ^ Eager Test\n  49 |         compare(hamming(10), new Float64Array([0.08000000000000002, 0.1876195561652702, 0.46012183827321207, 0.7700000000000001, 0.9722586055615179, 0.9722586055615179, 0.7700000000000001, 0.46012183827321207, 0.1876195561652702, 0.08000000000000002]));\n  50 |       },\n  51 |       MAX_TEST_EXECUTION_TIME,","start":{"line":48,"column":8,"index":1671}},{"frame":"  47 |       async () => {\n  48 |         compare(hanning(10), new Float64Array([0.0, 0.11697777844051105, 0.41317591116653485, 0.75, 0.9698463103929542, 0.9698463103929542, 0.75, 0.41317591116653485, 0.11697777844051105, 0.0]));\n> 49 |         compare(hamming(10), new Float64Array([0.08000000000000002, 0.1876195561652702, 0.46012183827321207, 0.7700000000000001, 0.9722586055615179, 0.9722586055615179, 0.7700000000000001, 0.46012183827321207, 0.1876195561652702, 0.08000000000000002]));\n     |        ^ Eager Test\n  50 |       },\n  51 |       MAX_TEST_EXECUTION_TIME,\n  52 |     );","start":{"line":49,"column":8,"index":1867}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  46 |       \"should calculate window\",\n  47 |       async () => {\n> 48 |         compare(hanning(10), new Float64Array([0.0, 0.11697777844051105, 0.41317591116653485, 0.75, 0.9698463103929542, 0.9698463103929542, 0.75, 0.41317591116653485, 0.11697777844051105, 0.0]));\n     |        ^ Lazy Test\n  49 |         compare(hamming(10), new Float64Array([0.08000000000000002, 0.1876195561652702, 0.46012183827321207, 0.7700000000000001, 0.9722586055615179, 0.9722586055615179, 0.7700000000000001, 0.46012183827321207, 0.1876195561652702, 0.08000000000000002]));\n  50 |       },\n  51 |       MAX_TEST_EXECUTION_TIME,","start":{"line":48,"column":8,"index":1671}},{"frame":"  81 |       ];\n  82 |\n> 83 |       compare(image_data, target);\n     |      ^ Lazy Test\n  84 |     });\n  85 |\n  86 |     it(\"Can splits channels for grayscale\", async () => {","start":{"line":83,"column":6,"index":3158}},{"frame":"  91 |       const target = [new Uint8Array([1, 3, 2, 1])];\n  92 |\n> 93 |       compare(image_data, target);\n     |      ^ Lazy Test\n  94 |     });\n  95 |\n  96 |     it(\"Read image from URL\", async () => {","start":{"line":93,"column":6,"index":3417}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  37 |           return Math.max(maxdiff, diff);\n  38 |         }, -Infinity);\n> 39 |         expect(maxdiff).toBeGreaterThanOrEqual(0);\n     |                                               ^ Magic Number\n  40 |         expect(maxdiff).toBeLessThan(1e-6);\n  41 |       },\n  42 |       MAX_TEST_EXECUTION_TIME,","start":{"line":39,"column":47,"index":1506}},{"frame":"  38 |         }, -Infinity);\n  39 |         expect(maxdiff).toBeGreaterThanOrEqual(0);\n> 40 |         expect(maxdiff).toBeLessThan(1e-6);\n     |                                     ^ Magic Number\n  41 |       },\n  42 |       MAX_TEST_EXECUTION_TIME,\n  43 |     );","start":{"line":40,"column":37,"index":1547}},{"frame":"   95 |\n   96 |     it(\"Read image from URL\", async () => {\n>  97 |       expect(image.width).toBe(300);\n      |                               ^ Magic Number\n   98 |       expect(image.height).toBe(200);\n   99 |       expect(image.channels).toBe(3);\n  100 |     });","start":{"line":97,"column":31,"index":3530}},{"frame":"   96 |     it(\"Read image from URL\", async () => {\n   97 |       expect(image.width).toBe(300);\n>  98 |       expect(image.height).toBe(200);\n      |                                ^ Magic Number\n   99 |       expect(image.channels).toBe(3);\n  100 |     });\n  101 |","start":{"line":98,"column":32,"index":3568}},{"frame":"   97 |       expect(image.width).toBe(300);\n   98 |       expect(image.height).toBe(200);\n>  99 |       expect(image.channels).toBe(3);\n      |                                  ^ Magic Number\n  100 |     });\n  101 |\n  102 |     it(\"Can resize image\", async () => {","start":{"line":99,"column":34,"index":3608}},{"frame":"  102 |     it(\"Can resize image\", async () => {\n  103 |       const resized = await image.resize(150, 100);\n> 104 |       expect(resized.width).toBe(150);\n      |                                 ^ Magic Number\n  105 |       expect(resized.height).toBe(100);\n  106 |     });\n  107 |","start":{"line":104,"column":33,"index":3747}},{"frame":"  103 |       const resized = await image.resize(150, 100);\n  104 |       expect(resized.width).toBe(150);\n> 105 |       expect(resized.height).toBe(100);\n      |                                  ^ Magic Number\n  106 |     });\n  107 |\n  108 |     it(\"Can resize with aspect ratio\", async () => {","start":{"line":105,"column":34,"index":3787}},{"frame":"  108 |     it(\"Can resize with aspect ratio\", async () => {\n  109 |       const resized = await image.resize(150, null);\n> 110 |       expect(resized.width).toBe(150);\n      |                                 ^ Magic Number\n  111 |       expect(resized.height).toBe(100);\n  112 |     });\n  113 |","start":{"line":110,"column":33,"index":3941}},{"frame":"  109 |       const resized = await image.resize(150, null);\n  110 |       expect(resized.width).toBe(150);\n> 111 |       expect(resized.height).toBe(100);\n      |                                  ^ Magic Number\n  112 |     });\n  113 |\n  114 |     it(\"Returns original image if width and height are null\", async () => {","start":{"line":111,"column":34,"index":3981}},{"frame":"  114 |     it(\"Returns original image if width and height are null\", async () => {\n  115 |       const resized = await image.resize(null, null);\n> 116 |       expect(resized.width).toBe(300);\n      |                                 ^ Magic Number\n  117 |       expect(resized.height).toBe(200);\n  118 |     });\n  119 |   });","start":{"line":116,"column":33,"index":4159}},{"frame":"  115 |       const resized = await image.resize(null, null);\n  116 |       expect(resized.width).toBe(300);\n> 117 |       expect(resized.height).toBe(200);\n      |                                  ^ Magic Number\n  118 |     });\n  119 |   });\n  120 | });","start":{"line":117,"column":34,"index":4199}}]},{"name":"Unknown Test","packageName":"unknownTest","items":[{"frame":"  43 |     );\n  44 |\n> 45 |     it(\n     |    ^ Unknown Test\n  46 |       \"should calculate window\",\n  47 |       async () => {\n  48 |         compare(hanning(10), new Float64Array([0.0, 0.11697777844051105, 0.41317591116653485, 0.75, 0.9698463103929542, 0.9698463103929542, 0.75, 0.41317591116653485, 0.11697777844051105, 0.0]));","start":{"column":4,"line":45}},{"frame":"  72 |     });\n  73 |\n> 74 |     it(\"Can split image into separate channels\", async () => {\n     |    ^ Unknown Test\n  75 |       const image_data = tiny_image.split().map((x) => x.data);\n  76 |\n  77 |       const target = [","start":{"column":4,"line":74}},{"frame":"  84 |     });\n  85 |\n> 86 |     it(\"Can splits channels for grayscale\", async () => {\n     |    ^ Unknown Test\n  87 |       const image_data = tiny_image\n  88 |         .grayscale()\n  89 |         .split()","start":{"column":4,"line":86}}]}],"metrics":{"aggregate":{"cyclomatic":19,"cyclomaticDensity":16.964,"halstead":{"bugs":1.176,"difficulty":22.629,"effort":79806.386,"length":508,"time":4433.688,"vocabulary":123,"volume":3526.797,"operands":{"distinct":105,"total":264,"identifiers":["describe","\"Utilities\"","\"Audio utilities\"","it","\"should calculate MEL filters\"","processor","AutoProcessor","from_pretrained","\"openai/whisper-tiny.en\"","config","feature_extractor","original_mel_filters","mel_filters","calculated_mel_filters","mel_filter_bank","Math","floor","1","n_fft","2","feature_size","0","8000","sampling_rate","\"slaney\"","original","flat","calculated","maxdiff","reduce","_","i","diff","abs","max","Infinity","expect","toBeGreaterThanOrEqual","toBeLessThan","0.000001","MAX_TEST_EXECUTION_TIME","\"should calculate window\"","compare","hanning","10","Float64Array","0.11697777844051105","0.41317591116653485","0.75","0.9698463103929542","hamming","0.08000000000000002","0.1876195561652702","0.46012183827321207","0.7700000000000001","0.9722586055615179","\"Hub utilities\"","\"Read data from blob\"","blob","Blob","\"Hello, world!\"","type","\"text/plain\"","blobUrl","URL","createObjectURL","data","getFile","text","toBe","\"Image utilities\"","width","height","channels","3","Uint8Array","from","length","5","tiny_image","RawImage","image","beforeAll","fromURL","\"https://picsum.photos/300/200\"","\"Can split image into separate channels\"","image_data","split","map","x","target","4","\"Can splits channels for grayscale\"","grayscale","\"Read image from URL\"","300","200","\"Can resize image\"","resized","resize","150","100","\"Can resize with aspect ratio\"","null","\"Returns original image if width and height are null\""]},"operators":{"distinct":18,"total":244,"identifiers":["()","function=>","const","=",".","+","/","-","[]","return","- (prefix)","new",",","{}",":","*","%","let"]}},"paramCount":7,"sloc":{"logical":112,"physical":121}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../src/transformers.js","type":"esm"},{"line":2,"path":"../../src/utils/hub.js","type":"esm"},{"line":3,"path":"../../src/utils/image.js","type":"esm"},{"line":5,"path":"../init.js","type":"esm"},{"line":6,"path":"../test_utils.js","type":"esm"}],"errors":[],"lineEnd":121,"lineStart":1,"maintainability":113.727,"methods":[{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["describe","\"Audio utilities\"","\"Hub utilities\"","\"Image utilities\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":113},"errors":[],"lineEnd":120,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":38.774,"length":10,"time":2.154,"vocabulary":6,"volume":25.85,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should calculate MEL filters\"","MAX_TEST_EXECUTION_TIME","\"should calculate window\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":45},"errors":[],"lineEnd":53,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.158,"difficulty":6,"effort":2841.91,"length":89,"time":157.884,"vocabulary":40,"volume":473.652,"operands":{"distinct":32,"total":48,"identifiers":["processor","AutoProcessor","from_pretrained","\"openai/whisper-tiny.en\"","config","feature_extractor","original_mel_filters","mel_filters","calculated_mel_filters","mel_filter_bank","Math","floor","1","n_fft","2","feature_size","0","8000","sampling_rate","\"slaney\"","original","flat","calculated","maxdiff","reduce","_","i","Infinity","expect","toBeGreaterThanOrEqual","toBeLessThan","0.000001"]},"operators":{"distinct":8,"total":41,"identifiers":["const","=","()",".","+","/","function=>","- (prefix)"]}},"paramCount":0,"sloc":{"logical":18,"physical":30},"errors":[],"lineEnd":41,"lineStart":12,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.027,"difficulty":4.813,"effort":394.84,"length":21,"time":21.936,"vocabulary":15,"volume":82.045,"operands":{"distinct":8,"total":11,"identifiers":["diff","Math","abs","original","i","calculated","max","maxdiff"]},"operators":{"distinct":7,"total":10,"identifiers":["const","=","()",".","-","[]","return"]}},"paramCount":3,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":38,"lineStart":35,"name":"<anon method-4>","paramNames":["maxdiff","_","i"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.076,"difficulty":3.733,"effort":856.382,"length":54,"time":47.577,"vocabulary":19,"volume":229.388,"operands":{"distinct":15,"total":28,"identifiers":["compare","hanning","10","Float64Array","0","0.11697777844051105","0.41317591116653485","0.75","0.9698463103929542","hamming","0.08000000000000002","0.1876195561652702","0.46012183827321207","0.7700000000000001","0.9722586055615179"]},"operators":{"distinct":4,"total":26,"identifiers":["()","new","[]",","]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":50,"lineStart":47,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"Read data from blob\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":8},"errors":[],"lineEnd":62,"lineStart":55,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.051,"difficulty":5.231,"effort":804.132,"length":35,"time":44.674,"vocabulary":21,"volume":153.731,"operands":{"distinct":13,"total":17,"identifiers":["blob","Blob","\"Hello, world!\"","type","\"text/plain\"","blobUrl","URL","createObjectURL","data","getFile","expect","text","toBe"]},"operators":{"distinct":8,"total":18,"identifiers":["const","=","new","[]","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":6},"errors":[],"lineEnd":61,"lineStart":56,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.119,"difficulty":9.545,"effort":3399.35,"length":70,"time":188.853,"vocabulary":34,"volume":356.122,"operands":{"distinct":22,"total":35,"identifiers":["width","height","channels","2","3","data","Uint8Array","from","length","_","i","tiny_image","RawImage","image","beforeAll","it","\"Can split image into separate channels\"","\"Can splits channels for grayscale\"","\"Read image from URL\"","\"Can resize image\"","\"Can resize with aspect ratio\"","\"Returns original image if width and height are null\""]},"operators":{"distinct":12,"total":35,"identifiers":["const","=","[]",",","()",".","{}",":","*","function=>","new","let"]}},"paramCount":0,"sloc":{"logical":21,"physical":56},"errors":[],"lineEnd":119,"lineStart":64,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["i","5"]},"operators":{"distinct":1,"total":1,"identifiers":["%"]}},"paramCount":2,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":66,"lineStart":66,"name":"<anon method-9>","paramNames":["_","i"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["image","RawImage","fromURL","\"https://picsum.photos/300/200\""]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":72,"lineStart":70,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.076,"difficulty":7.385,"effort":1686.65,"length":52,"time":93.703,"vocabulary":21,"volume":228.401,"operands":{"distinct":13,"total":24,"identifiers":["image_data","tiny_image","split","map","x","target","Uint8Array","0","3","1","4","2","compare"]},"operators":{"distinct":8,"total":28,"identifiers":["const","=","()",".","function=>","[]",",","new"]}},"paramCount":0,"sloc":{"logical":6,"physical":11},"errors":[],"lineEnd":84,"lineStart":74,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["x","data"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":75,"lineStart":75,"name":"<anon method-12>","paramNames":["x"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.048,"difficulty":5,"effort":713.118,"length":33,"time":39.618,"vocabulary":20,"volume":142.624,"operands":{"distinct":12,"total":15,"identifiers":["image_data","tiny_image","grayscale","split","map","x","target","Uint8Array","1","3","2","compare"]},"operators":{"distinct":8,"total":18,"identifiers":["const","=","()",".","function=>","[]","new",","]}},"paramCount":0,"sloc":{"logical":7,"physical":9},"errors":[],"lineEnd":94,"lineStart":86,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["x","data"]},"operators":{"distinct":1,"total":1,"identifiers":["."]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":90,"lineStart":90,"name":"<anon method-14>","paramNames":["x"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.031,"difficulty":1.667,"effort":155.674,"length":27,"time":8.649,"vocabulary":11,"volume":93.405,"operands":{"distinct":9,"total":15,"identifiers":["expect","image","width","toBe","300","height","200","channels","3"]},"operators":{"distinct":2,"total":12,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":100,"lineStart":96,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.033,"difficulty":3.333,"effort":333.04,"length":27,"time":18.502,"vocabulary":13,"volume":99.912,"operands":{"distinct":9,"total":15,"identifiers":["resized","image","resize","150","100","expect","width","toBe","height"]},"operators":{"distinct":4,"total":12,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":106,"lineStart":102,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.034,"difficulty":3,"effort":308.396,"length":27,"time":17.133,"vocabulary":14,"volume":102.799,"operands":{"distinct":10,"total":15,"identifiers":["resized","image","resize","150","null","expect","width","toBe","height","100"]},"operators":{"distinct":4,"total":12,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":112,"lineStart":108,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.034,"difficulty":3,"effort":308.396,"length":27,"time":17.133,"vocabulary":14,"volume":102.799,"operands":{"distinct":10,"total":15,"identifiers":["resized","image","resize","null","expect","width","toBe","300","height","200"]},"operators":{"distinct":4,"total":12,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":118,"lineStart":114,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.893,"halstead":{"bugs":0.062,"difficulty":1.191,"effort":4200.336,"length":26.737,"time":233.352,"vocabulary":6.474,"volume":185.621,"operands":{"distinct":5.526,"total":13.895},"operators":{"distinct":0.947,"total":12.842}},"paramCount":0.368,"sloc":{"logical":5.895,"physical":6.368}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":33.929,"halstead":{"bugs":0.04,"difficulty":3.317,"effort":662.878,"length":28,"time":36.827,"vocabulary":14.111,"volume":120.203,"operands":{"distinct":9.611,"total":14.556},"operators":{"distinct":4.5,"total":13.444}},"paramCount":0.389,"sloc":{"logical":6.111,"physical":17.333}}}}]}