file,type,smells,frame
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Duplicate Assert,"{'line': 58, 'column': 4, 'index': 1579}","  56 |     img.setAttribute(""data-srcset"", url400);
  57 |     setSources(img, settings, instance);
> 58 |     expect(img).toHaveAttribute(""src"", url200);
     |    ^ Duplicate Assert
  59 |     expect(img).toHaveAttribute(""srcset"", url400);
  60 |   });
  61 |"
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Duplicate Assert,"{'line': 59, 'column': 4, 'index': 1627}","  57 |     setSources(img, settings, instance);
  58 |     expect(img).toHaveAttribute(""src"", url200);
> 59 |     expect(img).toHaveAttribute(""srcset"", url400);
     |    ^ Duplicate Assert
  60 |   });
  61 |
  62 |   test(""with initial values in src and srcset"", () => {"
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Duplicate Assert,"{'line': 68, 'column': 4, 'index': 1942}","  66 |     img.setAttribute(""srcset"", url1);
  67 |     setSources(img, settings, instance);
> 68 |     expect(img).toHaveAttribute(""src"", url200);
     |    ^ Duplicate Assert
  69 |     expect(img).toHaveAttribute(""srcset"", url400);
  70 |   });
  71 |   test(""with initial values in src and srcset and empty data-*"", () => {"
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Duplicate Assert,"{'line': 69, 'column': 4, 'index': 1990}","  67 |     setSources(img, settings, instance);
  68 |     expect(img).toHaveAttribute(""src"", url200);
> 69 |     expect(img).toHaveAttribute(""srcset"", url400);
     |    ^ Duplicate Assert
  70 |   });
  71 |   test(""with initial values in src and srcset and empty data-*"", () => {
  72 |     img.setAttribute(""data-src"", """");"
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Duplicate Assert,"{'line': 77, 'column': 4, 'index': 2317}","  75 |     img.setAttribute(""srcset"", url400);
  76 |     setSources(img, settings, instance);
> 77 |     expect(img).toHaveAttribute(""src"", url200);
     |    ^ Duplicate Assert
  78 |     expect(img).toHaveAttribute(""srcset"", url400);
  79 |   });
  80 | });"
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Magic Number,"{'line': 29, 'column': 42, 'index': 889}","  27 |     const mockInstance = { toLoadCount: 5 };
  28 |     decreaseToLoadCount(mockInstance);
> 29 |     expect(mockInstance.toLoadCount).toBe(4);
     |                                          ^ Magic Number
  30 |   });
  31 |
  32 |   test('setToLoadCount sets toLoadCount to the given value', () => {"
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/set.test.js,Magic Number,"{'line': 35, 'column': 42, 'index': 1078}","  33 |     const mockInstance = {};
  34 |     setToLoadCount(mockInstance, 10);
> 35 |     expect(mockInstance.toLoadCount).toBe(10);
     |                                          ^ Magic Number
  36 |   });
  37 | })
  38 |"
/home/gabriel/Desktop/research/projects/vanilla-lazyload/tests/unit/cancelOnExit.test.js,Magic Number,"{'line': 84, 'column': 39, 'index': 2522}","  82 |     setSources(img, settings, instance);
  83 |     cancelLoading(img, entry, settings, instance);
> 84 |     expect(instance.loadingCount).toBe(0);
     |                                       ^ Magic Number
  85 |   });
  86 |
  87 |   test(""Resets internal status"", () => {"
