{"project":"steel","version":"","testSuites":4,"testCases":1,"smelledTestSuites":4,"smelledTestCases":0,"smells":48,"smelledFiles":[{"path":"/home/gabriel/Desktop/research/projects/ncc/test/cli.test.js","testCases":0,"smells":5,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"   6 | jest.setTimeout(20000);\n   7 |\n>  8 | for (const cliTest of cliTests) {\n   9 |   it(`should execute \"ncc ${(cliTest.args || []).join(\" \")}\"`, async () => {\n  10 |     const ps = fork(join(__dirname, file), cliTest.args || [], {\n  11 |       stdio: \"pipe\",","start":{"line":8,"column":0,"index":214}},{"frame":"  17 |     const expected = cliTest.expect || { code: 0 };\n  18 |     let timedOut = false;\n> 19 |     if (cliTest.timeout)\n     |    ^ Conditional Test Logic\n  20 |       setTimeout(() => {\n  21 |         timedOut = true;\n  22 |         ps.kill();","start":{"line":19,"column":4,"index":708}},{"frame":"  23 |       }, cliTest.timeout);\n  24 |     const code = await new Promise(resolve => ps.on(\"close\", resolve));\n> 25 |     if (typeof expected === \"function\")\n     |    ^ Conditional Test Logic\n  26 |       expect(expected(code, stdout, stderr, timedOut)).toBe(true);\n  27 |     else {\n  28 |       if (\"code\" in expected)","start":{"line":25,"column":4,"index":901}},{"frame":"  26 |       expect(expected(code, stdout, stderr, timedOut)).toBe(true);\n  27 |     else {\n> 28 |       if (\"code\" in expected)\n     |      ^ Conditional Test Logic\n  29 |         expect(code).toBe(expected.code);\n  30 |       if (\"timeout\" in expected)\n  31 |         expect(timedOut).toBe(true);","start":{"line":28,"column":6,"index":1021}},{"frame":"  28 |       if (\"code\" in expected)\n  29 |         expect(code).toBe(expected.code);\n> 30 |       if (\"timeout\" in expected)\n     |      ^ Conditional Test Logic\n  31 |         expect(timedOut).toBe(true);\n  32 |     }\n  33 |   });","start":{"line":30,"column":6,"index":1093}}]}],"metrics":{"aggregate":{"cyclomatic":14,"cyclomaticDensity":25.926,"halstead":{"bugs":0.43,"difficulty":23.76,"effort":30638.86,"length":209,"time":1702.159,"vocabulary":72,"volume":1289.514,"operands":{"distinct":50,"total":108,"identifiers":["fork","require","\"child_process\"","join","\"path\"","cliTests","\"./cli.js\"","file","global","coverage","\"/../src/cli.js\"","\"/../dist/ncc/cli.js\"","jest","setTimeout","20000","cliTest","it","args","\" \"","should execute \"ncc ","\"","ps","__dirname","stdio","\"pipe\"","env","process","stderr","\"\"","stdout","on","\"data\"","chunk","toString","expected","expect","code","0","timedOut","false","timeout","true","kill","Promise","resolve","\"close\"","\"function\"","toBe","\"code\"","\"timeout\""]},"operators":{"distinct":22,"total":101,"identifiers":["const","=","{}","()",":?",".","forof","``","${}","||","[]","function=>",":","... (spread)","let","+=","if","new","else","===","typeof (prefix)","in"]}},"paramCount":3,"sloc":{"logical":54,"physical":35}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[],"errors":[],"lineEnd":35,"lineStart":1,"maintainability":105.357,"methods":[{"cyclomatic":7,"cyclomaticDensity":23.333,"halstead":{"bugs":0.24,"difficulty":17.531,"effort":12599.409,"length":128,"time":699.967,"vocabulary":49,"volume":718.683,"operands":{"distinct":32,"total":66,"identifiers":["ps","fork","join","__dirname","file","cliTest","args","stdio","\"pipe\"","env","process","stderr","\"\"","stdout","on","\"data\"","chunk","expected","expect","code","0","timedOut","false","timeout","setTimeout","Promise","resolve","\"function\"","toBe","true","\"code\"","\"timeout\""]},"operators":{"distinct":17,"total":62,"identifiers":["const","=","()","||",".","[]","{}",":","... (spread)","let","function=>","if","new","else","===","typeof (prefix)","in"]}},"paramCount":0,"sloc":{"logical":30,"physical":25},"errors":[],"lineEnd":33,"lineStart":9,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["stderr","chunk","toString"]},"operators":{"distinct":3,"total":3,"identifiers":["+=","()","."]}},"paramCount":1,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":15,"lineStart":15,"name":"<anon method-2>","paramNames":["chunk"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.005,"difficulty":1.5,"effort":23.265,"length":6,"time":1.292,"vocabulary":6,"volume":15.51,"operands":{"distinct":3,"total":3,"identifiers":["stdout","chunk","toString"]},"operators":{"distinct":3,"total":3,"identifiers":["+=","()","."]}},"paramCount":1,"sloc":{"logical":3,"physical":1},"errors":[],"lineEnd":16,"lineStart":16,"name":"<anon method-3>","paramNames":["chunk"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["timedOut","true","ps","kill"]},"operators":{"distinct":3,"total":3,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":23,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1,"effort":15.51,"length":6,"time":0.862,"vocabulary":6,"volume":15.51,"operands":{"distinct":4,"total":4,"identifiers":["ps","on","\"close\"","resolve"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":24,"lineStart":24,"name":"<anon method-5>","paramNames":["resolve"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":2.333,"cyclomaticDensity":4.321,"halstead":{"bugs":0.072,"difficulty":3.96,"effort":5106.477,"length":34.833,"time":283.693,"vocabulary":12,"volume":214.919,"operands":{"distinct":8.333,"total":18},"operators":{"distinct":3.667,"total":16.833}},"paramCount":0.5,"sloc":{"logical":9,"physical":5.833}},"methodAverage":{"cyclomatic":2.2,"cyclomaticDensity":38,"halstead":{"bugs":0.052,"difficulty":4.606,"effort":2538.185,"length":30.6,"time":141.01,"vocabulary":14.8,"volume":156.973,"operands":{"distinct":9.2,"total":16},"operators":{"distinct":5.6,"total":14.6}},"paramCount":0.6,"sloc":{"logical":8,"physical":6.4}}}},{"path":"/home/gabriel/Desktop/research/projects/ncc/test/integration.test.js","testCases":0,"smells":15,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  20 |\n  21 | let nccRun;\n> 22 | if (coverage) {\n  23 |   nccRun = require(__dirname + \"/../src/cli.js\");\n  24 | }\n  25 | else {","start":{"line":22,"column":0,"index":417}},{"frame":"  40 | }\n  41 |\n> 42 | for (const integrationTest of fs.readdirSync(__dirname + \"/integration\")) {\n  43 |   // ignore e.g.: `.json` files\n  44 |   if (!/\\.(mjs|tsx?|js)$/.test(integrationTest)) continue;\n  45 |","start":{"line":42,"column":0,"index":786}},{"frame":"  42 | for (const integrationTest of fs.readdirSync(__dirname + \"/integration\")) {\n  43 |   // ignore e.g.: `.json` files\n> 44 |   if (!/\\.(mjs|tsx?|js)$/.test(integrationTest)) continue;\n     |  ^ Conditional Test Logic\n  45 |\n  46 |   // disabled pending https://github.com/zeit/ncc/issues/141\n  47 |   if (integrationTest.endsWith('loopback.js')) continue;","start":{"line":44,"column":2,"index":896}},{"frame":"  45 |\n  46 |   // disabled pending https://github.com/zeit/ncc/issues/141\n> 47 |   if (integrationTest.endsWith('loopback.js')) continue;\n     |  ^ Conditional Test Logic\n  48 |\n  49 |   // ignore a few tests known to fail on windows\n  50 |   if (process.platform === 'win32' && skipOnWindows.includes(integrationTest)) continue;","start":{"line":47,"column":2,"index":1017}},{"frame":"  48 |\n  49 |   // ignore a few tests known to fail on windows\n> 50 |   if (process.platform === 'win32' && skipOnWindows.includes(integrationTest)) continue;\n     |  ^ Conditional Test Logic\n  51 |\n  52 |   // ignore a few tests known to fail on macOS\n  53 |   if (process.platform === 'darwin' && skipOnMacOS.includes(integrationTest)) continue;","start":{"line":50,"column":2,"index":1124}},{"frame":"  51 |\n  52 |   // ignore a few tests known to fail on macOS\n> 53 |   if (process.platform === 'darwin' && skipOnMacOS.includes(integrationTest)) continue;\n     |  ^ Conditional Test Logic\n  54 |\n  55 |   it(`should execute \"ncc run ${integrationTest}\"`, async () => {\n  56 |     let expectedStdout;","start":{"line":53,"column":2,"index":1261}},{"frame":"  59 |     }\n  60 |     catch (e) {}\n> 61 |     if (global.gc) global.gc();\n     |    ^ Conditional Test Logic\n  62 |     const stdout = new StoreStream();\n  63 |     const stderr = new StoreStream();\n  64 |     try {","start":{"line":61,"column":4,"index":1580}},{"frame":"  66 |     }\n  67 |     catch (e) {\n> 68 |       if (e.silent) {\n     |      ^ Conditional Test Logic\n  69 |         let lastErr = stderr.data[stderr.data.length - 1];\n  70 |         if (lastErr)\n  71 |           throw new Error(lastErr);","start":{"line":68,"column":6,"index":1828}},{"frame":"  68 |       if (e.silent) {\n  69 |         let lastErr = stderr.data[stderr.data.length - 1];\n> 70 |         if (lastErr)\n     |        ^ Conditional Test Logic\n  71 |           throw new Error(lastErr);\n  72 |         else\n  73 |           throw new Error('Process exited with code ' + e.exitCode);","start":{"line":70,"column":8,"index":1911}},{"frame":"  75 |       throw e;\n  76 |     }\n> 77 |     if (expectedStdout) {\n     |    ^ Conditional Test Logic\n  78 |       let stdoutStr = '';\n  79 |       for (const chunk of stdout.data)\n  80 |         stdoutStr += chunk.toString();","start":{"line":77,"column":4,"index":2075}},{"frame":"  77 |     if (expectedStdout) {\n  78 |       let stdoutStr = '';\n> 79 |       for (const chunk of stdout.data)\n     |      ^ Conditional Test Logic\n  80 |         stdoutStr += chunk.toString();\n  81 |       expect(stdoutStr.startsWith(expectedStdout));\n  82 |     }","start":{"line":79,"column":6,"index":2129}},{"frame":"  85 |\n  86 | it(`should execute \"ncc build web-vitals\" with target config`, async () => {\n> 87 |   if (global.gc) global.gc();\n     |  ^ Conditional Test Logic\n  88 |   const stdout = new StoreStream();\n  89 |   const stderr = new StoreStream();\n  90 |","start":{"line":87,"column":2,"index":2347}},{"frame":"   95 |   }\n   96 |   catch (e) {\n>  97 |     if (e.silent) {\n      |    ^ Conditional Test Logic\n   98 |       let lastErr = stderr.data[stderr.data.length - 1];\n   99 |       if (lastErr)\n  100 |         throw new Error(lastErr);","start":{"line":97,"column":4,"index":2679}},{"frame":"   97 |     if (e.silent) {\n   98 |       let lastErr = stderr.data[stderr.data.length - 1];\n>  99 |       if (lastErr)\n      |      ^ Conditional Test Logic\n  100 |         throw new Error(lastErr);\n  101 |       else\n  102 |         throw new Error('Process exited with code ' + e.exitCode);","start":{"line":99,"column":6,"index":2758}},{"frame":"  120 |\n  121 | afterAll(() => {\n> 122 |   if (coverage)\n      |  ^ Conditional Test Logic\n  123 |     process.exit(0);\n  124 | });\n  125 |","start":{"line":122,"column":2,"index":3278}}]}],"metrics":{"aggregate":{"cyclomatic":23,"cyclomaticDensity":20.354,"halstead":{"bugs":1.039,"difficulty":31.728,"effort":98924.86,"length":444,"time":5495.826,"vocabulary":130,"volume":3117.931,"operands":{"distinct":101,"total":221,"identifiers":["os","require","\"os\"","fs","\"fs\"","path","\"path\"","coverage","global","jest","setTimeout","200000","skipOnWindows","\"binary-require.js\"","\"browserify-middleware.js\"","\"oracledb.js\"","\"tensorflow.js\"","skipOnMacOS","\"leveldown.js\"","nccRun","__dirname","\"/../src/cli.js\"","\"/../dist/ncc/cli.js\"","Writable","\"stream\"","StoreStream","constructor","options","data","_write","chunk","encoding","callback","push","integrationTest","readdirSync","\"/integration\"","/\\.(mjs|tsx?|js)$/","test","endsWith","\"loopback.js\"","process","platform","\"win32\"","includes","\"darwin\"","it","should execute \"ncc run ","\"","expectedStdout","readFileSync","/integration/",".stdout","toString","e","gc","stdout","stderr","\"run\"","\"--no-cache\"","silent","lastErr","length","1","Error","\"Process exited with code \"","exitCode","stdoutStr","\"\"","expect","startsWith","should execute \"ncc build web-vitals\" with target config","tmpOut","join","tmpdir","Math","random","ncc_","\"build\"","\"-o\"","\"--target\"","\"es5\"","resolve","\"web-vitals/dist/web-vitals.es5.min.js\"","outFile","\"index.js\"","output","\"utf8\"","unlinkSync","rmdirSync","toContain","\"function\"","not","\"=>\"","Promise","5000","afterAll","exit","0","on","\"unhandledRejection\""]},"operators":{"distinct":29,"total":223,"identifiers":["const","=","()",".","[]",",","let","if","else","+","{}","class","extends","super","this","forof","! (prefix)","continue","&&","===","``","${}","function=>","try","catch","new","-","throw","+="]}},"paramCount":6,"sloc":{"logical":113,"physical":130}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[{"aggregate":{"cyclomatic":2,"cyclomaticDensity":33.333,"halstead":{"bugs":0.029,"difficulty":4.5,"effort":394.061,"length":23,"time":21.892,"vocabulary":14,"volume":87.569,"operands":{"distinct":8,"total":12,"identifiers":["constructor","options","data","_write","chunk","encoding","callback","push"]},"operators":{"distinct":6,"total":11,"identifiers":["()","super","=",".","this","[]"]}},"paramCount":4,"sloc":{"logical":6,"physical":10}},"errors":[],"lineEnd":40,"lineStart":31,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":3,"effort":72,"length":8,"time":4,"vocabulary":8,"volume":24,"operands":{"distinct":2,"total":2,"identifiers":["options","data"]},"operators":{"distinct":6,"total":6,"identifiers":["()","super","=",".","this","[]"]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":35,"lineStart":32,"name":"constructor","paramNames":["options"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1.5,"effort":37.899,"length":9,"time":2.106,"vocabulary":7,"volume":25.266,"operands":{"distinct":4,"total":4,"identifiers":["data","push","chunk","callback"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","this"]}},"paramCount":3,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":39,"lineStart":36,"name":"_write","paramNames":["chunk","encoding","callback"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":0.667,"cyclomaticDensity":11.111,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":131.354,"length":7.667,"time":7.297,"vocabulary":4.667,"volume":29.19,"operands":{"distinct":2.667,"total":4},"operators":{"distinct":2,"total":3.667}},"paramCount":1.333,"sloc":{"logical":2,"physical":3.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":2.25,"effort":54.95,"length":8.5,"time":3.053,"vocabulary":7.5,"volume":24.633,"operands":{"distinct":3,"total":3},"operators":{"distinct":4.5,"total":5.5}},"paramCount":2,"sloc":{"logical":2,"physical":4}},"name":"StoreStream","superClassName":"Writable","maintainability":146.069}],"dependencies":[],"errors":[],"lineEnd":130,"lineStart":1,"maintainability":94.822,"methods":[{"cyclomatic":5,"cyclomaticDensity":17.857,"halstead":{"bugs":0.219,"difficulty":18.05,"effort":11857.425,"length":117,"time":658.746,"vocabulary":49,"volume":656.921,"operands":{"distinct":30,"total":57,"identifiers":["expectedStdout","fs","readFileSync","__dirname","integrationTest","/integration/",".stdout","toString","e","global","gc","stdout","StoreStream","stderr","nccRun","\"run\"","\"--no-cache\"","silent","lastErr","data","length","1","Error","\"Process exited with code \"","exitCode","stdoutStr","\"\"","chunk","expect","startsWith"]},"operators":{"distinct":19,"total":60,"identifiers":["let","try","=","()",".","``","${}","catch","if","const","new","[]",",","-","else","throw","+","forof","+="]}},"paramCount":0,"sloc":{"logical":28,"physical":29},"errors":[],"lineEnd":83,"lineStart":55,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":4,"cyclomaticDensity":12.5,"halstead":{"bugs":0.282,"difficulty":14.727,"effort":12451.848,"length":142,"time":691.769,"vocabulary":62,"volume":845.496,"operands":{"distinct":44,"total":72,"identifiers":["global","gc","stdout","StoreStream","stderr","tmpOut","path","join","os","tmpdir","Math","random","ncc_","nccRun","\"build\"","\"-o\"","\"--target\"","\"es5\"","require","resolve","\"web-vitals/dist/web-vitals.es5.min.js\"","e","silent","lastErr","data","length","1","Error","\"Process exited with code \"","exitCode","outFile","\"index.js\"","output","fs","readFileSync","\"utf8\"","unlinkSync","rmdirSync","expect","toContain","\"function\"","not","\"=>\"","Promise"]},"operators":{"distinct":18,"total":70,"identifiers":["if",".","()","const","=","new","``","${}","try","[]",",","catch","let","-","else","throw","+","function=>"]}},"paramCount":0,"sloc":{"logical":32,"physical":34},"errors":[],"lineEnd":119,"lineStart":86,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":0.5,"effort":4,"length":4,"time":0.222,"vocabulary":4,"volume":8,"operands":{"distinct":3,"total":3,"identifiers":["setTimeout","resolve","5000"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":118,"lineStart":118,"name":"<anon method-3>","paramNames":["resolve"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":100,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["coverage","process","exit","0"]},"operators":{"distinct":3,"total":3,"identifiers":["if","()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":124,"lineStart":121,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0.5,"effort":1,"length":2,"time":0.056,"vocabulary":2,"volume":2,"operands":{"distinct":1,"total":1,"identifiers":["e"]},"operators":{"distinct":1,"total":1,"identifiers":["throw"]}},"paramCount":1,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":129,"lineStart":127,"name":"<anon method-5>","paramNames":["e"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":2.875,"cyclomaticDensity":2.544,"halstead":{"bugs":0.13,"difficulty":3.966,"effort":12365.608,"length":55.5,"time":686.978,"vocabulary":16.25,"volume":389.741,"operands":{"distinct":12.625,"total":27.625},"operators":{"distinct":3.625,"total":27.875}},"paramCount":0.75,"sloc":{"logical":14.125,"physical":16.25}},"methodAverage":{"cyclomatic":2.143,"cyclomaticDensity":54.337,"halstead":{"bugs":0.075,"difficulty":5.682,"effort":3493.379,"length":41.286,"time":194.077,"vocabulary":19.857,"volume":225.905,"operands":{"distinct":12.571,"total":20.429},"operators":{"distinct":7.286,"total":20.857}},"paramCount":0.857,"sloc":{"logical":9.857,"physical":11.286}}}},{"path":"/home/gabriel/Desktop/research/projects/ncc/test/unit.test.js","testCases":0,"smells":7,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"   9 | }\n  10 |\n> 11 | for (const unitTest of fs.readdirSync(`${__dirname}/unit`)) {\n  12 |   if (process.platform === 'win32' && unitTest.includes('shebang')) {\n  13 |     continue;\n  14 |   }","start":{"line":11,"column":0,"index":270}},{"frame":"  10 |\n  11 | for (const unitTest of fs.readdirSync(`${__dirname}/unit`)) {\n> 12 |   if (process.platform === 'win32' && unitTest.includes('shebang')) {\n     |  ^ Conditional Test Logic\n  13 |     continue;\n  14 |   }\n  15 |   it(`should generate correct output for ${unitTest}`, async () => { ","start":{"line":12,"column":2,"index":334}},{"frame":"  35 |       transpileOnly: true,\n  36 |       customEmit (path) {\n> 37 |         if (path.endsWith('test.json'))\n     |        ^ Conditional Test Logic\n  38 |           return false;\n  39 |       },\n  40 |       externals: {","start":{"line":37,"column":8,"index":1392}},{"frame":"  46 |     }, opts)).then(\n  47 |       async ({ code, assets, map }) => {\n> 48 |         if (unitTest.startsWith('bundle-subasset')) {\n     |        ^ Conditional Test Logic\n  49 |           expect(assets['pi-bridge.js']).toBeDefined();\n  50 |           expect(assets['pi-bridge.js'].source.toString()).toContain('Math.PI');\n  51 |         }","start":{"line":48,"column":8,"index":1731}},{"frame":"  50 |           expect(assets['pi-bridge.js'].source.toString()).toContain('Math.PI');\n  51 |         }\n> 52 |         if (unitTest.includes('sourcemap-register')) {\n     |        ^ Conditional Test Logic\n  53 |           expect(assets['sourcemap-register.js']).toBeDefined()\n  54 |           expect(assets['sourcemap-register.js'].source.toString()).toEqual(fs.readFileSync(__dirname + '/../src/sourcemap-register.js.cache.js').toString())\n  55 |         }","start":{"line":52,"column":8,"index":1932}},{"frame":"  54 |           expect(assets['sourcemap-register.js'].source.toString()).toEqual(fs.readFileSync(__dirname + '/../src/sourcemap-register.js.cache.js').toString())\n  55 |         }\n> 56 |         if (unitTest.includes('minify') && !unitTest.includes('minify-err')) {\n     |        ^ Conditional Test Logic\n  57 |           expect(assets['index.js.map']).toBeDefined()\n  58 |         }\n  59 |         const actual = normalizeForWindows(code);","start":{"line":56,"column":8,"index":2219}},{"frame":"  66 |         }\n  67 |\n> 68 |         if (map) {\n     |        ^ Conditional Test Logic\n  69 |           const actualSourceMap = normalizeForWindows(map);\n  70 |           try {\n  71 |             expect(actualSourceMap).toBe(expectedSourceMap);","start":{"line":68,"column":8,"index":2622}}]}],"metrics":{"aggregate":{"cyclomatic":16,"cyclomaticDensity":16.495,"halstead":{"bugs":0.867,"difficulty":24.124,"effort":62757.656,"length":376,"time":3486.536,"vocabulary":121,"volume":2601.493,"operands":{"distinct":97,"total":195,"identifiers":["fs","require","\"fs\"","coverage","global","ncc","\"../src/index\"","\"../\"","jest","setTimeout","20000","normalizeForWindows","str","trim","replace","/\\\\r/g","\"\"","/\\r/g","/;+/g","\";\"","unitTest","readdirSync","__dirname","process","platform","\"win32\"","includes","\"shebang\"","it","should generate correct output for ","testDir","/unit/","expected","readFileSync","\"-coverage\"","/output",".js","\"utf8\"","expectedSourceMap",".js.map","_","opts","/opt.json","JSON","parse","env","TS_NODE_PROJECT","/tsconfig.json","inputFile","find","file","\"input\"","/","Object","assign","assetBuilds","true","transpileOnly","path","endsWith","\"test.json\"","false","externals","\"piscina\"","\"externaltest\"","\"externalmapped\"","\"/\\w+-regex/\"","\"regexexternal\"","\"/external-replace(/.*)/\"","\"external-replace/replaced$1\"","then","code","assets","map","startsWith","\"bundle-subasset\"","expect","\"pi-bridge.js\"","toBeDefined","source","toString","toContain","\"Math.PI\"","\"sourcemap-register\"","\"sourcemap-register.js\"","toEqual","\"/../src/sourcemap-register.js.cache.js\"","\"minify\"","\"minify-err\"","\"index.js.map\"","actual","toBe","e","writeFileSync","/actual.js","actualSourceMap","/actual.js.map"]},"operators":{"distinct":24,"total":181,"identifiers":["const","=","()",".",":?","function","return","forof","if","&&","===","continue","``","${}","function=>","let","try","catch","{}",":","[]","+","! (prefix)","throw"]}},"paramCount":5,"sloc":{"logical":97,"physical":82}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[],"errors":[],"lineEnd":82,"lineStart":1,"maintainability":89.523,"methods":[{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.023,"difficulty":2.063,"effort":142.702,"length":20,"time":7.928,"vocabulary":11,"volume":69.189,"operands":{"distinct":8,"total":11,"identifiers":["str","trim","replace","/\\\\r/g","\"\"","/\\r/g","/;+/g","\";\""]},"operators":{"distinct":3,"total":9,"identifiers":["return","()","."]}},"paramCount":1,"sloc":{"logical":5,"physical":3},"errors":[],"lineEnd":9,"lineStart":7,"name":"normalizeForWindows","paramNames":["str"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":4,"cyclomaticDensity":10.526,"halstead":{"bugs":0.305,"difficulty":11.538,"effort":10568.994,"length":151,"time":587.166,"vocabulary":67,"volume":915.979,"operands":{"distinct":52,"total":80,"identifiers":["testDir","__dirname","unitTest","/unit/","expected","normalizeForWindows","fs","readFileSync","coverage","\"-coverage\"","\"\"","/output",".js","\"utf8\"","expectedSourceMap",".js.map","_","opts","/opt.json","JSON","parse","process","env","TS_NODE_PROJECT","/tsconfig.json","inputFile","readdirSync","find","file","ncc","/","Object","assign","assetBuilds","true","transpileOnly","path","endsWith","\"test.json\"","false","externals","\"piscina\"","\"externaltest\"","\"externalmapped\"","\"/\\w+-regex/\"","\"regexexternal\"","\"/external-replace(/.*)/\"","\"external-replace/replaced$1\"","then","code","assets","map"]},"operators":{"distinct":15,"total":71,"identifiers":["const","=","``","${}","()",".",":?","let","try","catch","function=>","{}",":","if","return"]}},"paramCount":0,"sloc":{"logical":38,"physical":66},"errors":[],"lineEnd":80,"lineStart":15,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["file","includes","\"input\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":32,"lineStart":32,"name":"<anon method-2>","paramNames":["file"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":6,"cyclomaticDensity":15.789,"halstead":{"bugs":0.266,"difficulty":14.2,"effort":11321.501,"length":142,"time":628.972,"vocabulary":49,"volume":797.289,"operands":{"distinct":35,"total":71,"identifiers":["unitTest","startsWith","\"bundle-subasset\"","expect","assets","\"pi-bridge.js\"","toBeDefined","source","toString","toContain","\"Math.PI\"","includes","\"sourcemap-register\"","\"sourcemap-register.js\"","toEqual","fs","readFileSync","__dirname","\"/../src/sourcemap-register.js.cache.js\"","\"minify\"","\"minify-err\"","\"index.js.map\"","actual","normalizeForWindows","code","toBe","expected","e","writeFileSync","testDir","/actual.js","map","actualSourceMap","expectedSourceMap","/actual.js.map"]},"operators":{"distinct":14,"total":71,"identifiers":["if","()",".","[]","+","&&","! (prefix)","const","=","try","catch","``","${}","throw"]}},"paramCount":3,"sloc":{"logical":38,"physical":32},"errors":[],"lineEnd":78,"lineStart":47,"name":"<anon method-3>","paramNames":["code","assets","map"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":3.2,"cyclomaticDensity":3.299,"halstead":{"bugs":0.173,"difficulty":4.825,"effort":12551.531,"length":75.2,"time":697.307,"vocabulary":24.2,"volume":520.299,"operands":{"distinct":19.4,"total":39},"operators":{"distinct":4.8,"total":36.2}},"paramCount":1,"sloc":{"logical":19.4,"physical":16.4}},"methodAverage":{"cyclomatic":3,"cyclomaticDensity":24.079,"halstead":{"bugs":0.15,"difficulty":7.2,"effort":5511.201,"length":79.5,"time":306.178,"vocabulary":33,"volume":448.517,"operands":{"distinct":24.5,"total":41.25},"operators":{"distinct":8.5,"total":38.25}},"paramCount":1.25,"sloc":{"logical":20.75,"physical":25.5}}}},{"path":"/home/gabriel/Desktop/research/projects/ncc/test/watcher.test.js","testCases":1,"smells":21,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  31 |   \n  32 |   triggerChanges (changed, removed) {\n> 33 |     if (!this.paused) {\n     |    ^ Conditional Test Logic\n  34 |       const newTime = +Date.now();\n  35 |       for (const file of changed)\n  36 |         this.timestamps.set(file, {","start":{"line":33,"column":4,"index":1021}},{"frame":"  33 |     if (!this.paused) {\n  34 |       const newTime = +Date.now();\n> 35 |       for (const file of changed)\n     |      ^ Conditional Test Logic\n  36 |         this.timestamps.set(file, {\n  37 |           safeTime: newTime + 10,\n  38 |           accuracy: 10,","start":{"line":35,"column":6,"index":1082}},{"frame":"  39 |           timestamp: newTime\n  40 |         });\n> 41 |       for (const file of removed)\n     |      ^ Conditional Test Logic\n  42 |         this.timestamps.set(file, null);\n  43 |\n  44 |       for (const file of changed) {","start":{"line":41,"column":6,"index":1251}},{"frame":"  42 |         this.timestamps.set(file, null);\n  43 |\n> 44 |       for (const file of changed) {\n     |      ^ Conditional Test Logic\n  45 |         this.changes.add(file);\n  46 |         this.inputFileSystem.purge(file);\n  47 |       }","start":{"line":44,"column":6,"index":1327}},{"frame":"  46 |         this.inputFileSystem.purge(file);\n  47 |       }\n> 48 |       for (const file of removed) {\n     |      ^ Conditional Test Logic\n  49 |         this.removals.add(file);\n  50 |         this.inputFileSystem.purge(file);\n  51 |       }","start":{"line":48,"column":6,"index":1445}},{"frame":"  74 |     // empty object indicates \"unknown\" timestamp\n  75 |     // (that is, not cached)\n> 76 |     for (const item of files)\n     |    ^ Conditional Test Logic\n  77 |       this.timestamps.set(item, {});\n  78 |     for (const item of dirs)\n  79 |       this.timestamps.set(item, {});","start":{"line":76,"column":4,"index":2127}},{"frame":"  76 |     for (const item of files)\n  77 |       this.timestamps.set(item, {});\n> 78 |     for (const item of dirs)\n     |    ^ Conditional Test Logic\n  79 |       this.timestamps.set(item, {});\n  80 |     // null represents \"no file\"\n  81 |     for (const item of missing)","start":{"line":78,"column":4,"index":2194}},{"frame":"  79 |       this.timestamps.set(item, {});\n  80 |     // null represents \"no file\"\n> 81 |     for (const item of missing)\n     |    ^ Conditional Test Logic\n  82 |       this.timestamps.set(item, null);\n  83 |\n  84 |     this.paused = false;","start":{"line":81,"column":4,"index":2293}},{"frame":"  118 |     const watcher = new CustomWatchFileSystem(function watchStart (files, dirs, missing) {\n  119 |       expect(files._set.size).toBeGreaterThan(100);\n> 120 |       if (buildCnt < 3) {\n      |      ^ Conditional Test Logic\n  121 |         setTimeout(() => {\n  122 |           // NOTE: We actually have to make the change for the rebuild to happen!\n  123 |           fs.writeFileSync(buildFile, fs.readFileSync(buildFile).toString() + '\\n');","start":{"line":120,"column":6,"index":3379}},{"frame":"  136 |     \n  137 |     handler(({ err, code, map, assets, permissions }) => {\n> 138 |       if (err) return reject(err);\n      |      ^ Conditional Test Logic\n  139 |       buildCnt++;\n  140 |       if (buildCnt === 1) {\n  141 |         console.timeEnd('First Build');","start":{"line":138,"column":6,"index":3939}},{"frame":"  138 |       if (err) return reject(err);\n  139 |       buildCnt++;\n> 140 |       if (buildCnt === 1) {\n      |      ^ Conditional Test Logic\n  141 |         console.timeEnd('First Build');\n  142 |       }\n  143 |       else {","start":{"line":140,"column":6,"index":3992}},{"frame":"  144 |         console.timeEnd('Watched Build');\n  145 |       }\n> 146 |       if (buildCnt === 3) {\n      |      ^ Conditional Test Logic\n  147 |         close();\n  148 |         fs.writeFileSync(buildFile, fs.readFileSync(buildFile).toString().slice(0, -2));\n  149 |       }","start":{"line":146,"column":6,"index":4131}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  117 |   await new Promise((resolve, reject) => {\n  118 |     const watcher = new CustomWatchFileSystem(function watchStart (files, dirs, missing) {\n> 119 |       expect(files._set.size).toBeGreaterThan(100);\n      |                                              ^ Magic Number\n  120 |       if (buildCnt < 3) {\n  121 |         setTimeout(() => {\n  122 |           // NOTE: We actually have to make the change for the rebuild to happen!","start":{"line":119,"column":46,"index":3367}}]},{"name":"Mystery Guest","packageName":"mysteryGuest","items":[{"frame":"  113 |   let buildCnt = 0;\n  114 |   const buildFile = path.resolve('./test/integration/twilio.js');\n> 115 |   const initialBuildFileContents = fs.readFileSync(buildFile).toString();\n      |                                   ^ Mystery Guest\n  116 |\n  117 |   await new Promise((resolve, reject) => {\n  118 |     const watcher = new CustomWatchFileSystem(function watchStart (files, dirs, missing) {","start":{"column":35,"line":115}},{"frame":"  121 |         setTimeout(() => {\n  122 |           // NOTE: We actually have to make the change for the rebuild to happen!\n> 123 |           fs.writeFileSync(buildFile, fs.readFileSync(buildFile).toString() + '\\n');\n      |                                      ^ Mystery Guest\n  124 |           watcher.triggerChanges([buildFile], []);\n  125 |         }, 100);\n  126 |       }","start":{"column":38,"line":123}},{"frame":"  146 |       if (buildCnt === 3) {\n  147 |         close();\n> 148 |         fs.writeFileSync(buildFile, fs.readFileSync(buildFile).toString().slice(0, -2));\n      |                                    ^ Mystery Guest\n  149 |       }\n  150 |     });\n  151 |     rebuild(() => {","start":{"column":36,"line":148}}]},{"name":"Redundant Print","packageName":"redundantPrint","items":[{"frame":"  129 |     });\n  130 |\n> 131 |     console.time('First Build');\n      |    ^ Redundant Print\n  132 |     const { handler, rebuild, close } = ncc(buildFile, {\n  133 |       assetBuilds: true,\n  134 |       watch: watcher","start":{"line":131,"column":4,"index":3729}},{"frame":"  139 |       buildCnt++;\n  140 |       if (buildCnt === 1) {\n> 141 |         console.timeEnd('First Build');\n      |        ^ Redundant Print\n  142 |       }\n  143 |       else {\n  144 |         console.timeEnd('Watched Build');","start":{"line":141,"column":8,"index":4022}},{"frame":"  142 |       }\n  143 |       else {\n> 144 |         console.timeEnd('Watched Build');\n      |        ^ Redundant Print\n  145 |       }\n  146 |       if (buildCnt === 3) {\n  147 |         close();","start":{"line":144,"column":8,"index":4083}},{"frame":"  150 |     });\n  151 |     rebuild(() => {\n> 152 |       console.time('Watched Build');\n      |      ^ Redundant Print\n  153 |     });\n  154 |   });\n  155 |","start":{"line":152,"column":6,"index":4301}}]},{"name":"Sleepy Test","packageName":"sleepyTest","items":[{"frame":"  119 |       expect(files._set.size).toBeGreaterThan(100);\n  120 |       if (buildCnt < 3) {\n> 121 |         setTimeout(() => {\n      |        ^ Sleepy Test\n  122 |           // NOTE: We actually have to make the change for the rebuild to happen!\n  123 |           fs.writeFileSync(buildFile, fs.readFileSync(buildFile).toString() + '\\n');\n  124 |           watcher.triggerChanges([buildFile], []);","start":{"line":121,"column":8,"index":3407}}]}],"metrics":{"aggregate":{"cyclomatic":21,"cyclomaticDensity":17.073,"halstead":{"bugs":1.213,"difficulty":33.421,"effort":121650.337,"length":527,"time":6758.352,"vocabulary":120,"volume":3639.931,"operands":{"distinct":95,"total":254,"identifiers":["path","require","\"path\"","ncc","global","coverage","\"../src/index\"","\"../\"","fs","\"fs\"","CustomWatchFileSystem","constructor","watchStart","watchEnd","closed","false","paused","changeCallback","undefined","changeCallbackUndelayed","files","dirs","missing","timestamps","Map","changes","Set","removals","inputFileSystem","triggerChanges","changed","removed","newTime","Date","now","file","set","safeTime","10","accuracy","timestamp","null","add","purge","watch","startTime","options","item","setImmediate","close","pause","true","getInfo","fileTimeInfoEntries","contextTimeInfoEntries","jest","setTimeout","30000","it","\"Should support custom watch API\"","buildCnt","0","buildFile","resolve","\"./test/integration/twilio.js\"","initialBuildFileContents","readFileSync","toString","Promise","reject","watcher","expect","_set","size","toBeGreaterThan","100","3","writeFileSync","\"\n\"","console","time","\"First Build\"","handler","rebuild","assetBuilds","err","code","map","assets","permissions","1","timeEnd","\"Watched Build\"","slice","2"]},"operators":{"distinct":25,"total":273,"identifiers":["const","=","()",":?",".","class","this","new","if","! (prefix)","+ (prefix)","forof","{}",":","+","function=>","return","let","function","<","[]","++ (postfix)","else","===","- (prefix)"]}},"paramCount":21,"sloc":{"logical":123,"physical":159}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[{"aggregate":{"cyclomatic":8,"cyclomaticDensity":12.698,"halstead":{"bugs":0.614,"difficulty":23.523,"effort":43311.628,"length":313,"time":2406.202,"vocabulary":59,"volume":1841.267,"operands":{"distinct":44,"total":138,"identifiers":["constructor","watchStart","watchEnd","closed","false","paused","changeCallback","undefined","changeCallbackUndelayed","files","dirs","missing","timestamps","Map","changes","Set","removals","inputFileSystem","triggerChanges","changed","removed","newTime","Date","now","file","set","safeTime","10","accuracy","timestamp","null","add","purge","watch","startTime","options","item","setImmediate","close","pause","true","getInfo","fileTimeInfoEntries","contextTimeInfoEntries"]},"operators":{"distinct":15,"total":175,"identifiers":["=",".","this","new","if","! (prefix)","const","+ (prefix)","()","forof","{}",":","+","function=>","return"]}},"paramCount":11,"sloc":{"logical":63,"physical":99}},"errors":[],"lineEnd":108,"lineStart":10,"methods":[{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.1,"difficulty":3.059,"effort":913.602,"length":68,"time":50.756,"vocabulary":21,"volume":298.678,"operands":{"distinct":17,"total":26,"identifiers":["closed","false","paused","changeCallback","undefined","changeCallbackUndelayed","watchStart","watchEnd","files","dirs","missing","timestamps","Map","changes","Set","removals","inputFileSystem"]},"operators":{"distinct":4,"total":42,"identifiers":["=",".","this","new"]}},"paramCount":2,"sloc":{"logical":13,"physical":20},"errors":[],"lineEnd":30,"lineStart":11,"name":"constructor","paramNames":["watchStart","watchEnd"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":11.111,"halstead":{"bugs":0.182,"difficulty":13.714,"effort":7471.468,"length":108,"time":415.082,"vocabulary":33,"volume":544.795,"operands":{"distinct":21,"total":48,"identifiers":["paused","newTime","Date","now","file","changed","timestamps","set","safeTime","10","accuracy","timestamp","removed","null","changes","add","inputFileSystem","purge","removals","changeCallbackUndelayed","changeCallback"]},"operators":{"distinct":12,"total":60,"identifiers":["if","! (prefix)",".","this","const","=","+ (prefix)","()","forof","{}",":","+"]}},"paramCount":2,"sloc":{"logical":18,"physical":35},"errors":[],"lineEnd":66,"lineStart":32,"name":"triggerChanges","paramNames":["changed","removed"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.136,"difficulty":12.031,"effort":4919.823,"length":86,"time":273.323,"vocabulary":27,"volume":408.92,"operands":{"distinct":16,"total":35,"identifiers":["files","Set","dirs","missing","item","timestamps","set","null","paused","false","changeCallback","changeCallbackUndelayed","setImmediate","close","pause","getInfo"]},"operators":{"distinct":11,"total":51,"identifiers":["=",".","this","new","forof","const","()","{}","function=>","return",":"]}},"paramCount":7,"sloc":{"logical":21,"physical":39},"errors":[],"lineEnd":107,"lineStart":69,"name":"watch","paramNames":["files","dirs","missing","startTime","options","changeCallback","changeCallbackUndelayed"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":29.477,"length":7,"time":1.638,"vocabulary":7,"volume":19.651,"operands":{"distinct":4,"total":4,"identifiers":["watchStart","files","dirs","missing"]},"operators":{"distinct":3,"total":3,"identifiers":["()",".","this"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":91,"lineStart":89,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.003,"difficulty":1.5,"effort":12,"length":4,"time":0.667,"vocabulary":4,"volume":8,"operands":{"distinct":1,"total":1,"identifiers":["watchEnd"]},"operators":{"distinct":3,"total":3,"identifiers":["()",".","this"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":96,"lineStart":94,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1.5,"effort":17.414,"length":5,"time":0.967,"vocabulary":5,"volume":11.61,"operands":{"distinct":2,"total":2,"identifiers":["paused","true"]},"operators":{"distinct":3,"total":3,"identifiers":["=",".","this"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":99,"lineStart":97,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":3.2,"effort":213.019,"length":21,"time":11.834,"vocabulary":9,"volume":66.568,"operands":{"distinct":5,"total":8,"identifiers":["changes","removals","fileTimeInfoEntries","timestamps","contextTimeInfoEntries"]},"operators":{"distinct":4,"total":13,"identifiers":["{}",":",".","this"]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":105,"lineStart":100,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.587,"halstead":{"bugs":0.077,"difficulty":2.94,"effort":5413.953,"length":39.125,"time":300.775,"vocabulary":7.375,"volume":230.158,"operands":{"distinct":5.5,"total":17.25},"operators":{"distinct":1.875,"total":21.875}},"paramCount":1.375,"sloc":{"logical":7.875,"physical":12.375}},"methodAverage":{"cyclomatic":1.143,"cyclomaticDensity":49.081,"halstead":{"bugs":0.065,"difficulty":5.215,"effort":1939.543,"length":42.714,"time":107.752,"vocabulary":15.143,"volume":194.032,"operands":{"distinct":9.429,"total":17.714},"operators":{"distinct":5.714,"total":25}},"paramCount":1.571,"sloc":{"logical":8.571,"physical":15.571}},"name":"CustomWatchFileSystem","maintainability":110.172}],"dependencies":[],"errors":[],"lineEnd":159,"lineStart":1,"maintainability":105.794,"methods":[{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.049,"difficulty":4.846,"effort":712.121,"length":34,"time":39.562,"vocabulary":20,"volume":146.946,"operands":{"distinct":13,"total":18,"identifiers":["buildCnt","0","buildFile","path","resolve","\"./test/integration/twilio.js\"","initialBuildFileContents","fs","readFileSync","toString","Promise","reject","writeFileSync"]},"operators":{"distinct":7,"total":16,"identifiers":["let","=","const","()",".","new","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":46},"errors":[],"lineEnd":157,"lineStart":112,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.08,"difficulty":5.674,"effort":1361.739,"length":48,"time":75.652,"vocabulary":32,"volume":240,"operands":{"distinct":23,"total":29,"identifiers":["watcher","CustomWatchFileSystem","watchStart","files","dirs","missing","watchEnd","console","time","\"First Build\"","handler","rebuild","close","ncc","buildFile","assetBuilds","true","watch","err","code","map","assets","permissions"]},"operators":{"distinct":9,"total":19,"identifiers":["const","=","new","function","()",".","{}",":","function=>"]}},"paramCount":2,"sloc":{"logical":15,"physical":38},"errors":[],"lineEnd":154,"lineStart":117,"name":"<anon method-6>","paramNames":["resolve","reject"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":2,"cyclomaticDensity":40,"halstead":{"bugs":0.024,"difficulty":2.778,"effort":200.944,"length":19,"time":11.164,"vocabulary":14,"volume":72.34,"operands":{"distinct":9,"total":10,"identifiers":["expect","files","_set","size","toBeGreaterThan","100","buildCnt","3","setTimeout"]},"operators":{"distinct":5,"total":9,"identifiers":["()",".","if","<","function=>"]}},"paramCount":3,"sloc":{"logical":5,"physical":10},"errors":[],"lineEnd":127,"lineStart":118,"name":"watchStart","paramNames":["files","dirs","missing"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.026,"difficulty":2.75,"effort":216.89,"length":22,"time":12.049,"vocabulary":12,"volume":78.869,"operands":{"distinct":8,"total":11,"identifiers":["fs","writeFileSync","buildFile","readFileSync","toString","\"\n\"","watcher","triggerChanges"]},"operators":{"distinct":4,"total":11,"identifiers":["()",".","+","[]"]}},"paramCount":0,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":125,"lineStart":121,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.001,"difficulty":0.5,"effort":1,"length":2,"time":0.056,"vocabulary":2,"volume":2,"operands":{"distinct":1,"total":1,"identifiers":["resolve"]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":129,"lineStart":127,"name":"watchEnd","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":4,"cyclomaticDensity":28.571,"halstead":{"bugs":0.075,"difficulty":5.556,"effort":1253.451,"length":48,"time":69.636,"vocabulary":26,"volume":225.621,"operands":{"distinct":18,"total":25,"identifiers":["err","reject","buildCnt","1","console","timeEnd","\"First Build\"","\"Watched Build\"","3","close","fs","writeFileSync","buildFile","readFileSync","toString","slice","0","2"]},"operators":{"distinct":8,"total":23,"identifiers":["if","return","()","++ (postfix)","else","===",".","- (prefix)"]}},"paramCount":5,"sloc":{"logical":14,"physical":14},"errors":[],"lineEnd":150,"lineStart":137,"name":"<anon method-8>","paramNames":["err","code","map","assets","permissions"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["console","time","\"Watched Build\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":153,"lineStart":151,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.4,"cyclomaticDensity":1.138,"halstead":{"bugs":0.081,"difficulty":2.228,"effort":8110.022,"length":35.133,"time":450.557,"vocabulary":8,"volume":242.662,"operands":{"distinct":6.333,"total":16.933},"operators":{"distinct":1.667,"total":18.2}},"paramCount":1.4,"sloc":{"logical":8.2,"physical":10.6}},"methodAverage":{"cyclomatic":1.357,"cyclomaticDensity":46.78,"halstead":{"bugs":0.051,"difficulty":4.258,"effort":1238.183,"length":34.071,"time":68.788,"vocabulary":15.5,"volume":152.543,"operands":{"distinct":10.071,"total":15.786},"operators":{"distinct":5.429,"total":18.286}},"paramCount":1.5,"sloc":{"logical":7.786,"physical":16.286}}}}]}