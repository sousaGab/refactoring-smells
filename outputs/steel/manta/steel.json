{"project":"steel","version":"","testSuites":35,"testCases":218,"smelledTestSuites":19,"smelledTestCases":0,"smells":400,"smelledFiles":[{"path":"/home/gabriel/Desktop/research/projects/Manta/app/components/contacts/__tests__/Contact.spec.js","testCases":7,"smells":16,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  32 |\n  33 |   it('renders 1 TR row', () => {\n> 34 |     expect(wrapper.find(TR)).toHaveLength(1);\n     |    ^ Duplicate Assert\n  35 |     expect(wrapper.find(TR)).not.toHaveLength(2);\n  36 |   });\n  37 |","start":{"line":34,"column":4,"index":722}},{"frame":"  33 |   it('renders 1 TR row', () => {\n  34 |     expect(wrapper.find(TR)).toHaveLength(1);\n> 35 |     expect(wrapper.find(TR)).not.toHaveLength(2);\n     |    ^ Duplicate Assert\n  36 |   });\n  37 |\n  38 |   it('renders 4 TD columns', () => {","start":{"line":35,"column":4,"index":768}},{"frame":"  37 |\n  38 |   it('renders 4 TD columns', () => {\n> 39 |     expect(wrapper.find(TD)).toHaveLength(4);\n     |    ^ Duplicate Assert\n  40 |     expect(wrapper.find(TD)).not.toHaveLength(5);\n  41 |   });\n  42 |","start":{"line":39,"column":4,"index":862}},{"frame":"  38 |   it('renders 4 TD columns', () => {\n  39 |     expect(wrapper.find(TD)).toHaveLength(4);\n> 40 |     expect(wrapper.find(TD)).not.toHaveLength(5);\n     |    ^ Duplicate Assert\n  41 |   });\n  42 |\n  43 |   it('receive correct props', () => {","start":{"line":40,"column":4,"index":908}},{"frame":"  55 |\n  56 |   it('renders 2 buttons in the last TD', () => {\n> 57 |     expect(\n     |    ^ Duplicate Assert\n  58 |       wrapper\n  59 |         .find(TD)\n  60 |         .last()","start":{"line":57,"column":4,"index":1413}},{"frame":"  61 |         .find(Button)\n  62 |     ).toHaveLength(2);\n> 63 |     expect(\n     |    ^ Duplicate Assert\n  64 |       wrapper\n  65 |         .find(TD)\n  66 |         .last()","start":{"line":63,"column":4,"index":1518}},{"frame":"  87 |     it('handle click correctly', () => {\n  88 |       firstBtn.simulate('click');\n> 89 |       expect(newInvoice).toHaveBeenCalled();\n     |      ^ Duplicate Assert\n  90 |       expect(newInvoice).toHaveBeenCalledWith(contact);\n  91 |\n  92 |       lastBtn.simulate('click');","start":{"line":89,"column":6,"index":2270}},{"frame":"  88 |       firstBtn.simulate('click');\n  89 |       expect(newInvoice).toHaveBeenCalled();\n> 90 |       expect(newInvoice).toHaveBeenCalledWith(contact);\n     |      ^ Duplicate Assert\n  91 |\n  92 |       lastBtn.simulate('click');\n  93 |       expect(deleteContact).toHaveBeenCalled();","start":{"line":90,"column":6,"index":2315}},{"frame":"  91 |\n  92 |       lastBtn.simulate('click');\n> 93 |       expect(deleteContact).toHaveBeenCalled();\n     |      ^ Duplicate Assert\n  94 |       expect(deleteContact).toHaveBeenCalledWith('id-string');\n  95 |     });\n  96 |   });","start":{"line":93,"column":6,"index":2405}},{"frame":"  92 |       lastBtn.simulate('click');\n  93 |       expect(deleteContact).toHaveBeenCalled();\n> 94 |       expect(deleteContact).toHaveBeenCalledWith('id-string');\n     |      ^ Duplicate Assert\n  95 |     });\n  96 |   });\n  97 |","start":{"line":94,"column":6,"index":2453}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  32 |\n  33 |   it('renders 1 TR row', () => {\n> 34 |     expect(wrapper.find(TR)).toHaveLength(1);\n     |                                          ^ Magic Number\n  35 |     expect(wrapper.find(TR)).not.toHaveLength(2);\n  36 |   });\n  37 |","start":{"line":34,"column":42,"index":760}},{"frame":"  33 |   it('renders 1 TR row', () => {\n  34 |     expect(wrapper.find(TR)).toHaveLength(1);\n> 35 |     expect(wrapper.find(TR)).not.toHaveLength(2);\n     |                                              ^ Magic Number\n  36 |   });\n  37 |\n  38 |   it('renders 4 TD columns', () => {","start":{"line":35,"column":46,"index":810}},{"frame":"  37 |\n  38 |   it('renders 4 TD columns', () => {\n> 39 |     expect(wrapper.find(TD)).toHaveLength(4);\n     |                                          ^ Magic Number\n  40 |     expect(wrapper.find(TD)).not.toHaveLength(5);\n  41 |   });\n  42 |","start":{"line":39,"column":42,"index":900}},{"frame":"  38 |   it('renders 4 TD columns', () => {\n  39 |     expect(wrapper.find(TD)).toHaveLength(4);\n> 40 |     expect(wrapper.find(TD)).not.toHaveLength(5);\n     |                                              ^ Magic Number\n  41 |   });\n  42 |\n  43 |   it('receive correct props', () => {","start":{"line":40,"column":46,"index":950}},{"frame":"  60 |         .last()\n  61 |         .find(Button)\n> 62 |     ).toHaveLength(2);\n     |                   ^ Magic Number\n  63 |     expect(\n  64 |       wrapper\n  65 |         .find(TD)","start":{"line":62,"column":19,"index":1510}},{"frame":"  66 |         .last()\n  67 |         .find(Button)\n> 68 |     ).not.toHaveLength(3);\n     |                       ^ Magic Number\n  69 |   });\n  70 |\n  71 |   describe('renders buttons correctly', () => {","start":{"line":68,"column":23,"index":1619}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":11.111,"halstead":{"bugs":0.729,"difficulty":11.333,"effort":24771.579,"length":352,"time":1376.199,"vocabulary":74,"volume":2185.728,"operands":{"distinct":66,"total":187,"identifiers":["contact","_id","\"id-string\"","fullname","\"Jon Snow\"","email","\"jon@snow.hbo\"","phone","\"000-000-000\"","newInvoice","jest","fn","deleteContact","describe","\"Renders correctly to the DOM\"","wrapper","beforeEach","shallow","it","\"renders 1 TR row\"","expect","find","TR","toHaveLength","1","not","2","\"renders 4 TD columns\"","TD","4","5","\"receive correct props\"","mountWrapper","mount","prop","\"contact\"","toEqual","\"newInvoice\"","\"deleteContact\"","\"renders 2 buttons in the last TD\"","last","Button","3","\"renders buttons correctly\"","firstBtn","lastBtn","first","\"renders buttons with correct props\"","\"link\"","toBe","true","\"primary\"","\"success\"","false","\"danger\"","\"handle click correctly\"","simulate","\"click\"","toHaveBeenCalled","toHaveBeenCalledWith","\"matches snapshot\"","tree","renderer","create","toJSON","toMatchSnapshot"]},"operators":{"distinct":8,"total":165,"identifiers":["const","=","{}",":","()",".","function=>","let"]}},"paramCount":0,"sloc":{"logical":108,"physical":111}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":4,"path":"react-test-renderer","type":"esm"},{"line":7,"path":"../Contact","type":"esm"},{"line":8,"path":"../../shared/Table","type":"esm"},{"line":9,"path":"../../shared/Button","type":"esm"}],"errors":[],"lineEnd":111,"lineStart":1,"maintainability":109.302,"methods":[{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.036,"difficulty":2.1,"effort":225.357,"length":29,"time":12.52,"vocabulary":13,"volume":107.313,"operands":{"distinct":10,"total":14,"identifiers":["wrapper","beforeEach","it","\"renders 1 TR row\"","\"renders 4 TD columns\"","\"receive correct props\"","\"renders 2 buttons in the last TD\"","describe","\"renders buttons correctly\"","\"matches snapshot\""]},"operators":{"distinct":3,"total":15,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":15,"physical":90},"errors":[],"lineEnd":110,"lineStart":21,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1,"effort":19.651,"length":7,"time":1.092,"vocabulary":7,"volume":19.651,"operands":{"distinct":5,"total":5,"identifiers":["wrapper","shallow","contact","newInvoice","deleteContact"]},"operators":{"distinct":2,"total":2,"identifiers":["=","()"]}},"paramCount":0,"sloc":{"logical":2,"physical":9},"errors":[],"lineEnd":31,"lineStart":23,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":1.625,"effort":129.555,"length":24,"time":7.198,"vocabulary":10,"volume":79.726,"operands":{"distinct":8,"total":13,"identifiers":["expect","wrapper","find","TR","toHaveLength","1","not","2"]},"operators":{"distinct":2,"total":11,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":36,"lineStart":33,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":1.625,"effort":129.555,"length":24,"time":7.198,"vocabulary":10,"volume":79.726,"operands":{"distinct":8,"total":13,"identifiers":["expect","wrapper","find","TD","toHaveLength","4","not","5"]},"operators":{"distinct":2,"total":11,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":41,"lineStart":38,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.053,"difficulty":4.182,"effort":669.854,"length":41,"time":37.214,"vocabulary":15,"volume":160.183,"operands":{"distinct":11,"total":23,"identifiers":["mountWrapper","mount","contact","newInvoice","deleteContact","expect","prop","\"contact\"","toEqual","\"newInvoice\"","\"deleteContact\""]},"operators":{"distinct":4,"total":18,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":12},"errors":[],"lineEnd":54,"lineStart":43,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.045,"difficulty":1.9,"effort":258.834,"length":38,"time":14.38,"vocabulary":12,"volume":136.229,"operands":{"distinct":10,"total":19,"identifiers":["expect","wrapper","find","TD","last","Button","toHaveLength","2","not","3"]},"operators":{"distinct":2,"total":19,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":14},"errors":[],"lineEnd":69,"lineStart":56,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.75,"effort":77.663,"length":14,"time":4.315,"vocabulary":9,"volume":44.379,"operands":{"distinct":6,"total":7,"identifiers":["firstBtn","lastBtn","beforeEach","it","\"renders buttons with correct props\"","\"handle click correctly\""]},"operators":{"distinct":3,"total":7,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":26},"errors":[],"lineEnd":96,"lineStart":71,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.022,"difficulty":2.143,"effort":142.368,"length":20,"time":7.909,"vocabulary":10,"volume":66.439,"operands":{"distinct":7,"total":10,"identifiers":["firstBtn","wrapper","find","Button","first","lastBtn","last"]},"operators":{"distinct":3,"total":10,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":76,"lineStart":73,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.081,"difficulty":3.273,"effort":799.295,"length":66,"time":44.405,"vocabulary":13,"volume":244.229,"operands":{"distinct":11,"total":36,"identifiers":["expect","firstBtn","prop","\"link\"","toBe","true","\"primary\"","\"success\"","false","lastBtn","\"danger\""]},"operators":{"distinct":2,"total":30,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":18,"physical":8},"errors":[],"lineEnd":85,"lineStart":78,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.044,"difficulty":1.818,"effort":242.211,"length":36,"time":13.456,"vocabulary":13,"volume":133.216,"operands":{"distinct":11,"total":20,"identifiers":["firstBtn","simulate","\"click\"","expect","newInvoice","toHaveBeenCalled","toHaveBeenCalledWith","contact","lastBtn","deleteContact","\"id-string\""]},"operators":{"distinct":2,"total":16,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":10,"physical":9},"errors":[],"lineEnd":95,"lineStart":87,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.023,"difficulty":2.222,"effort":156.241,"length":19,"time":8.68,"vocabulary":13,"volume":70.308,"operands":{"distinct":9,"total":10,"identifiers":["tree","renderer","create","contact","newInvoice","deleteContact","toJSON","expect","toMatchSnapshot"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":12},"errors":[],"lineEnd":109,"lineStart":98,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.926,"halstead":{"bugs":0.061,"difficulty":0.944,"effort":2064.298,"length":29.333,"time":114.683,"vocabulary":6.167,"volume":182.144,"operands":{"distinct":5.5,"total":15.583},"operators":{"distinct":0.667,"total":13.75}},"paramCount":0,"sloc":{"logical":9,"physical":9.25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":15.801,"halstead":{"bugs":0.035,"difficulty":2.149,"effort":259.144,"length":28.909,"time":14.397,"vocabulary":11.364,"volume":103.764,"operands":{"distinct":8.727,"total":15.455},"operators":{"distinct":2.636,"total":13.455}},"paramCount":0,"sloc":{"logical":8.818,"physical":17.455}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/components/invoices/__tests__/Invoice.spec.js","testCases":12,"smells":15,"smellInfo":[{"name":"Conditional Test Logic","packageName":"conditionalTestLogic","items":[{"frame":"  42 |\n  43 | const t = jest.fn(status => {\n> 44 |   switch (status) {\n     |  ^ Conditional Test Logic\n  45 |     case 'invoices:status:cancelled': {\n  46 |       return 'Cancelled';\n  47 |     }","start":{"line":44,"column":2,"index":1057}}]},{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"   95 |\n   96 |   it('render with a class of .col-lg-6', () => {\n>  97 |     expect(wrapper.find('.col-lg-6')).toHaveLength(1);\n      |    ^ Duplicate Assert\n   98 |     expect(wrapper.find('.col-lg-6')).not.toHaveLength(2);\n   99 |   });\n  100 |","start":{"line":97,"column":4,"index":2413}},{"frame":"   96 |   it('render with a class of .col-lg-6', () => {\n   97 |     expect(wrapper.find('.col-lg-6')).toHaveLength(1);\n>  98 |     expect(wrapper.find('.col-lg-6')).not.toHaveLength(2);\n      |    ^ Duplicate Assert\n   99 |   });\n  100 |\n  101 |   it('render invoice status in the header', () => {","start":{"line":98,"column":4,"index":2468}},{"frame":"  254 |   it('handle edit action correctly', () => {\n  255 |     editBtn.simulate('click');\n> 256 |     expect(editInvoice).toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  257 |     expect(editInvoice).toHaveBeenCalledWith(invoice);\n  258 |   });\n  259 |","start":{"line":256,"column":4,"index":6832}},{"frame":"  255 |     editBtn.simulate('click');\n  256 |     expect(editInvoice).toHaveBeenCalled();\n> 257 |     expect(editInvoice).toHaveBeenCalledWith(invoice);\n      |    ^ Duplicate Assert\n  258 |   });\n  259 |\n  260 |   it('handle delete action correctly', () => {","start":{"line":257,"column":4,"index":6876}},{"frame":"  260 |   it('handle delete action correctly', () => {\n  261 |     deleteBtn.simulate('click');\n> 262 |     expect(deleteInvoice).toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  263 |     expect(deleteInvoice).toHaveBeenCalledWith(invoice._id);\n  264 |   });\n  265 |","start":{"line":262,"column":4,"index":7018}},{"frame":"  261 |     deleteBtn.simulate('click');\n  262 |     expect(deleteInvoice).toHaveBeenCalled();\n> 263 |     expect(deleteInvoice).toHaveBeenCalledWith(invoice._id);\n      |    ^ Duplicate Assert\n  264 |   });\n  265 |\n  266 |   it('handle duplicate action correctly', () => {","start":{"line":263,"column":4,"index":7064}},{"frame":"  266 |   it('handle duplicate action correctly', () => {\n  267 |     duplicateBtn.simulate('click');\n> 268 |     expect(duplicateInvoice).toHaveBeenCalled();\n      |    ^ Duplicate Assert\n  269 |     expect(duplicateInvoice).toHaveBeenCalledWith(invoice);\n  270 |   });\n  271 |","start":{"line":268,"column":4,"index":7218}},{"frame":"  267 |     duplicateBtn.simulate('click');\n  268 |     expect(duplicateInvoice).toHaveBeenCalled();\n> 269 |     expect(duplicateInvoice).toHaveBeenCalledWith(invoice);\n      |    ^ Duplicate Assert\n  270 |   });\n  271 |\n  272 |   it('handle view action correctly', () => {","start":{"line":269,"column":4,"index":7267}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"   95 |\n   96 |   it('render with a class of .col-lg-6', () => {\n>  97 |     expect(wrapper.find('.col-lg-6')).toHaveLength(1);\n      |                                                   ^ Magic Number\n   98 |     expect(wrapper.find('.col-lg-6')).not.toHaveLength(2);\n   99 |   });\n  100 |","start":{"line":97,"column":51,"index":2460}},{"frame":"   96 |   it('render with a class of .col-lg-6', () => {\n   97 |     expect(wrapper.find('.col-lg-6')).toHaveLength(1);\n>  98 |     expect(wrapper.find('.col-lg-6')).not.toHaveLength(2);\n      |                                                       ^ Magic Number\n   99 |   });\n  100 |\n  101 |   it('render invoice status in the header', () => {","start":{"line":98,"column":55,"index":2519}},{"frame":"  102 |     expect(\n  103 |       wrapper.find('Invoice__Header').find('Invoice__Status')\n> 104 |     ).toHaveLength(1);\n      |                   ^ Magic Number\n  105 |   });\n  106 |\n  107 |   it('render invoice status correctly', () => {","start":{"line":104,"column":19,"index":2675}},{"frame":"  188 |\n  189 |   it('render delete and duplicate button in the header', () => {\n> 190 |     expect(wrapper.find('Invoice__Header').find(Button)).toHaveLength(2);\n      |                                                                      ^ Magic Number\n  191 |   });\n  192 |\n  193 |   it('render a split button and 2 buttons in the footer', () => {","start":{"line":190,"column":70,"index":5029}},{"frame":"  192 |\n  193 |   it('render a split button and 2 buttons in the footer', () => {\n> 194 |     expect(wrapper.find('Invoice__Footer').find(SplitButton)).toHaveLength(1);\n      |                                                                           ^ Magic Number\n  195 |     expect(wrapper.find('Invoice__Footer').find(Button)).toHaveLength(2);\n  196 |   });\n  197 |","start":{"line":194,"column":75,"index":5181}},{"frame":"  193 |   it('render a split button and 2 buttons in the footer', () => {\n  194 |     expect(wrapper.find('Invoice__Footer').find(SplitButton)).toHaveLength(1);\n> 195 |     expect(wrapper.find('Invoice__Footer').find(Button)).toHaveLength(2);\n      |                                                                      ^ Magic Number\n  196 |   });\n  197 |\n  198 |   it('matches snapshot', () => {","start":{"line":195,"column":70,"index":5255}}]}],"metrics":{"aggregate":{"cyclomatic":21,"cyclomaticDensity":10.145,"halstead":{"bugs":1.687,"difficulty":18.465,"effort":93469.346,"length":709,"time":5192.741,"vocabulary":141,"volume":5061.942,"operands":{"distinct":129,"total":397,"identifiers":["invoice","_id","\"37b2804e-bfc1-4289-b1d7-226c5652ac91\"","status","\"pending\"","currency","code","\"USD\"","decimal_digits","2","name","\"US Dollar\"","name_plural","\"US dollars\"","rounding","0","symbol","\"$\"","symbol_native","subtotal","3843","grandTotal","recipient","\"3bd85cb9-7675-4d59-b9c3-305481cb77c9\"","company","\"Lindgren Group\"","email","\"Hattie42@gmail.com\"","fullname","\"Penelope Hettinger\"","phone","\"854-306-7837\"","editInvoice","jest","fn","deleteInvoice","duplicateInvoice","setInvoiceStatus","dateFormat","\"MM/DD/YY\"","currencyPlacement","\"before\"","Date","now","genMockFunction","mockReturnValue","t","\"Cancelled\"","\"invoices:status:cancelled\"","\"Refunded\"","\"invoices:status:refunded\"","\"Paid\"","\"invoices:status:paid\"","\"Pending\"","describe","\"Renders correctly to the DOM\"","wrapper","beforeEach","shallow","it","\"receives correct props\"","mountWrapper","mount","expect","prop","\"invoice\"","toEqual","\"deleteInvoice\"","\"setInvoiceStatus\"","\"render with a class of .col-lg-6\"","find","\".col-lg-6\"","toHaveLength","1","not","\"render invoice status in the header\"","\"Invoice__Header\"","\"Invoice__Status\"","\"render invoice status correctly\"","\"span\"","text","paidInvoice","Object","assign","\"paid\"","paidInvoiceWapper","\"en\"","cancelledInvoice","\"cancelled\"","cancelledInvoiceWapper","refundedInvoice","\"refunded\"","refundedInvoiceWapper","\"render delete and duplicate button in the header\"","Button","\"render a split button and 2 buttons in the footer\"","\"Invoice__Footer\"","SplitButton","\"matches snapshot\"","tree","renderer","create","toJSON","toMatchSnapshot","\"handle clicks correctly\"","editBtn","viewBtn","duplicateBtn","deleteBtn","spyViewAction","spyEditAction","spyDuplicateAction","spyOn","Invoice","prototype","\"viewInvoice\"","\"editInvoice\"","\"duplicateInvoice\"","last","first","at","\"handle edit action correctly\"","simulate","\"click\"","toHaveBeenCalled","toHaveBeenCalledWith","\"handle delete action correctly\"","\"handle duplicate action correctly\"","\"handle view action correctly\""]},"operators":{"distinct":12,"total":312,"identifiers":["const","=","{}",":","()",".","function=>","switch","case","return","default","let"]}},"paramCount":1,"sloc":{"logical":207,"physical":282}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":4,"path":"react-test-renderer","type":"esm"},{"line":7,"path":"../Invoice","type":"esm"},{"line":8,"path":"../../shared/Button","type":"esm"},{"line":9,"path":"../../shared/SplitButton","type":"esm"}],"errors":[],"lineEnd":282,"lineStart":1,"maintainability":102.022,"methods":[{"cyclomatic":4,"cyclomaticDensity":44.444,"halstead":{"bugs":0.02,"difficulty":2,"effort":121.889,"length":17,"time":6.772,"vocabulary":12,"volume":60.944,"operands":{"distinct":8,"total":8,"identifiers":["status","\"Cancelled\"","\"invoices:status:cancelled\"","\"Refunded\"","\"invoices:status:refunded\"","\"Paid\"","\"invoices:status:paid\"","\"Pending\""]},"operators":{"distinct":4,"total":9,"identifiers":["switch","case","return","default"]}},"paramCount":1,"sloc":{"logical":9,"physical":16},"errors":[],"lineEnd":58,"lineStart":43,"name":"<anon method-1>","paramNames":["status"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.041,"difficulty":2.4,"effort":293.075,"length":33,"time":16.282,"vocabulary":13,"volume":122.115,"operands":{"distinct":10,"total":16,"identifiers":["wrapper","beforeEach","it","\"receives correct props\"","\"render with a class of .col-lg-6\"","\"render invoice status in the header\"","\"render invoice status correctly\"","\"render delete and duplicate button in the header\"","\"render a split button and 2 buttons in the footer\"","\"matches snapshot\""]},"operators":{"distinct":3,"total":17,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":17,"physical":155},"errors":[],"lineEnd":215,"lineStart":61,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.014,"difficulty":1,"effort":43.02,"length":12,"time":2.39,"vocabulary":12,"volume":43.02,"operands":{"distinct":10,"total":10,"identifiers":["wrapper","shallow","t","invoice","editInvoice","deleteInvoice","duplicateInvoice","setInvoiceStatus","dateFormat","currencyPlacement"]},"operators":{"distinct":2,"total":2,"identifiers":["=","()"]}},"paramCount":0,"sloc":{"logical":2,"physical":14},"errors":[],"lineEnd":76,"lineStart":63,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.066,"difficulty":3.5,"effort":695.83,"length":46,"time":38.657,"vocabulary":20,"volume":198.809,"operands":{"distinct":16,"total":28,"identifiers":["mountWrapper","mount","t","invoice","editInvoice","deleteInvoice","duplicateInvoice","setInvoiceStatus","dateFormat","currencyPlacement","expect","prop","\"invoice\"","toEqual","\"deleteInvoice\"","\"setInvoiceStatus\""]},"operators":{"distinct":4,"total":18,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":17},"errors":[],"lineEnd":94,"lineStart":78,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":1.625,"effort":129.555,"length":24,"time":7.198,"vocabulary":10,"volume":79.726,"operands":{"distinct":8,"total":13,"identifiers":["expect","wrapper","find","\".col-lg-6\"","toHaveLength","1","not","2"]},"operators":{"distinct":2,"total":11,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":99,"lineStart":96,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.016,"difficulty":1.143,"effort":54.342,"length":15,"time":3.019,"vocabulary":9,"volume":47.549,"operands":{"distinct":7,"total":8,"identifiers":["expect","wrapper","find","\"Invoice__Header\"","\"Invoice__Status\"","toHaveLength","1"]},"operators":{"distinct":2,"total":7,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":105,"lineStart":101,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.3,"difficulty":8.382,"effort":7539.137,"length":169,"time":418.841,"vocabulary":40,"volume":899.406,"operands":{"distinct":34,"total":95,"identifiers":["expect","wrapper","find","\"Invoice__Header\"","\"Invoice__Status\"","\"span\"","text","toEqual","\"Pending\"","paidInvoice","Object","assign","invoice","status","\"paid\"","paidInvoiceWapper","shallow","t","\"en\"","editInvoice","deleteInvoice","duplicateInvoice","setInvoiceStatus","dateFormat","currencyPlacement","\"Paid\"","cancelledInvoice","\"cancelled\"","cancelledInvoiceWapper","\"Cancelled\"","refundedInvoice","\"refunded\"","refundedInvoiceWapper","\"Refunded\""]},"operators":{"distinct":6,"total":74,"identifiers":["()",".","const","=","{}",":"]}},"paramCount":0,"sloc":{"logical":39,"physical":81},"errors":[],"lineEnd":187,"lineStart":107,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.016,"difficulty":1.143,"effort":54.342,"length":15,"time":3.019,"vocabulary":9,"volume":47.549,"operands":{"distinct":7,"total":8,"identifiers":["expect","wrapper","find","\"Invoice__Header\"","Button","toHaveLength","2"]},"operators":{"distinct":2,"total":7,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":3},"errors":[],"lineEnd":191,"lineStart":189,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.035,"difficulty":1.778,"effort":184.503,"length":30,"time":10.25,"vocabulary":11,"volume":103.783,"operands":{"distinct":9,"total":16,"identifiers":["expect","wrapper","find","\"Invoice__Footer\"","SplitButton","toHaveLength","1","Button","2"]},"operators":{"distinct":2,"total":14,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":4},"errors":[],"lineEnd":196,"lineStart":193,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.033,"difficulty":2.143,"effort":214.453,"length":24,"time":11.914,"vocabulary":18,"volume":100.078,"operands":{"distinct":14,"total":15,"identifiers":["tree","renderer","create","t","invoice","editInvoice","deleteInvoice","duplicateInvoice","setInvoiceStatus","dateFormat","currencyPlacement","toJSON","expect","toMatchSnapshot"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":17},"errors":[],"lineEnd":214,"lineStart":198,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.044,"difficulty":2.036,"effort":266.269,"length":32,"time":14.793,"vocabulary":17,"volume":130.799,"operands":{"distinct":14,"total":19,"identifiers":["wrapper","editBtn","viewBtn","duplicateBtn","deleteBtn","spyViewAction","spyEditAction","spyDuplicateAction","beforeEach","it","\"handle edit action correctly\"","\"handle delete action correctly\"","\"handle duplicate action correctly\"","\"handle view action correctly\""]},"operators":{"distinct":3,"total":13,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":20,"physical":65},"errors":[],"lineEnd":281,"lineStart":217,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.154,"difficulty":2.565,"effort":1187.266,"length":91,"time":65.959,"vocabulary":34,"volume":462.959,"operands":{"distinct":31,"total":53,"identifiers":["spyViewAction","jest","spyOn","Invoice","prototype","\"viewInvoice\"","spyEditAction","\"editInvoice\"","spyDuplicateAction","\"duplicateInvoice\"","wrapper","shallow","t","invoice","editInvoice","deleteInvoice","duplicateInvoice","setInvoiceStatus","dateFormat","currencyPlacement","viewBtn","find","\"Invoice__Footer\"","Button","last","editBtn","first","deleteBtn","at","1","duplicateBtn"]},"operators":{"distinct":3,"total":38,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":22,"physical":27},"errors":[],"lineEnd":252,"lineStart":226,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.02,"difficulty":1.25,"effort":74.743,"length":18,"time":4.152,"vocabulary":10,"volume":59.795,"operands":{"distinct":8,"total":10,"identifiers":["editBtn","simulate","\"click\"","expect","editInvoice","toHaveBeenCalled","toHaveBeenCalledWith","invoice"]},"operators":{"distinct":2,"total":8,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":258,"lineStart":254,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.023,"difficulty":1.222,"effort":84.564,"length":20,"time":4.698,"vocabulary":11,"volume":69.189,"operands":{"distinct":9,"total":11,"identifiers":["deleteBtn","simulate","\"click\"","expect","deleteInvoice","toHaveBeenCalled","toHaveBeenCalledWith","invoice","_id"]},"operators":{"distinct":2,"total":9,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":264,"lineStart":260,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.02,"difficulty":1.25,"effort":74.743,"length":18,"time":4.152,"vocabulary":10,"volume":59.795,"operands":{"distinct":8,"total":10,"identifiers":["duplicateBtn","simulate","\"click\"","expect","duplicateInvoice","toHaveBeenCalled","toHaveBeenCalledWith","invoice"]},"operators":{"distinct":2,"total":8,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":270,"lineStart":266,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.011,"difficulty":1,"effort":33,"length":11,"time":1.833,"vocabulary":8,"volume":33,"operands":{"distinct":6,"total":6,"identifiers":["viewBtn","simulate","\"click\"","expect","spyViewAction","toHaveBeenCalled"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":275,"lineStart":272,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.011,"difficulty":1,"effort":33,"length":11,"time":1.833,"vocabulary":8,"volume":33,"operands":{"distinct":6,"total":6,"identifiers":["editBtn","simulate","\"click\"","expect","spyEditAction","toHaveBeenCalled"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":280,"lineStart":277,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1.167,"cyclomaticDensity":0.564,"halstead":{"bugs":0.094,"difficulty":1.026,"effort":5192.741,"length":39.389,"time":288.486,"vocabulary":7.833,"volume":281.219,"operands":{"distinct":7.167,"total":22.056},"operators":{"distinct":0.667,"total":17.333}},"paramCount":0.056,"sloc":{"logical":11.5,"physical":15.667}},"methodAverage":{"cyclomatic":1.176,"cyclomaticDensity":20.433,"halstead":{"bugs":0.05,"difficulty":2.084,"effort":651.984,"length":34.471,"time":36.221,"vocabulary":14.824,"volume":150.089,"operands":{"distinct":12.059,"total":19.529},"operators":{"distinct":2.765,"total":14.941}},"paramCount":0.059,"sloc":{"logical":9.882,"physical":25.353}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/components/layout/__tests__/AppNav.spec.js","testCases":3,"smells":3,"smellInfo":[{"name":"Empty Test","packageName":"emptyTest","items":[{"frame":"  19 |   });\n  20 |\n> 21 |   it('has correct porps', () => {\n     |  ^ Empty Test\n  22 |     // expect(wrapper.prop('activeTab')).toEqual('form');\n  23 |     // expect(wrapper.prop('activeTab')).not.toEqual('settings');\n  24 |   });","start":{"line":21,"column":2,"index":454}},{"frame":"  24 |   });\n  25 |\n> 26 |   it('contains active indicator', () => {\n     |  ^ Empty Test\n  27 |   //   const sideBar = shallow(<ActiveIndicator/>);\n  28 |   //   expect(wrapper.contains(sideBar)).toEqual(true);\n  29 |   });","start":{"line":26,"column":2,"index":619}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  16 |\n  17 |   it('renders 4 tabs', () => {\n> 18 |     expect(wrapper.find('a')).toHaveLength(4);\n     |                                           ^ Magic Number\n  19 |   });\n  20 |\n  21 |   it('has correct porps', () => {","start":{"line":18,"column":43,"index":441}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":31.579,"halstead":{"bugs":0.074,"difficulty":3.947,"effort":879.889,"length":48,"time":48.883,"vocabulary":25,"volume":222.905,"operands":{"distinct":19,"total":25,"identifiers":["changeTab","jest","fn","describe","\"Renders correctly to the DOM\"","wrapper","beforeEach","mount","\"form\"","it","\"renders 4 tabs\"","expect","find","\"a\"","toHaveLength","4","\"has correct porps\"","\"contains active indicator\"","\"shows active indicator at the correct position\""]},"operators":{"distinct":6,"total":23,"identifiers":["const","=","()",".","function=>","let"]}},"paramCount":0,"sloc":{"logical":19,"physical":32}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":6,"path":"../AppNav","type":"esm"}],"errors":[],"lineEnd":32,"lineStart":1,"maintainability":135.268,"methods":[{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.022,"difficulty":2.143,"effort":142.368,"length":20,"time":7.909,"vocabulary":10,"volume":66.439,"operands":{"distinct":7,"total":10,"identifiers":["wrapper","beforeEach","it","\"renders 4 tabs\"","\"has correct porps\"","\"contains active indicator\"","\"shows active indicator at the correct position\""]},"operators":{"distinct":3,"total":10,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":21},"errors":[],"lineEnd":31,"lineStart":11,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.005,"difficulty":1,"effort":15.51,"length":6,"time":0.862,"vocabulary":6,"volume":15.51,"operands":{"distinct":4,"total":4,"identifiers":["wrapper","mount","\"form\"","changeTab"]},"operators":{"distinct":2,"total":2,"identifiers":["=","()"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":15,"lineStart":13,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.011,"difficulty":1,"effort":33,"length":11,"time":1.833,"vocabulary":8,"volume":33,"operands":{"distinct":6,"total":6,"identifiers":["expect","wrapper","find","\"a\"","toHaveLength","4"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":19,"lineStart":17,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":4},"errors":[],"lineEnd":24,"lineStart":21,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":4},"errors":[],"lineEnd":29,"lineStart":26,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.012,"difficulty":0.658,"effort":146.648,"length":8,"time":8.147,"vocabulary":4.167,"volume":37.151,"operands":{"distinct":3.167,"total":4.167},"operators":{"distinct":1,"total":3.833}},"paramCount":0,"sloc":{"logical":3.167,"physical":5.333}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":18.667,"halstead":{"bugs":0.008,"difficulty":0.829,"effort":38.176,"length":7.4,"time":2.121,"vocabulary":4.8,"volume":22.99,"operands":{"distinct":3.4,"total":4},"operators":{"distinct":1.4,"total":3.4}},"paramCount":0,"sloc":{"logical":3,"physical":7}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/components/shared/_tests_/Button.spec.js","testCases":5,"smells":2,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"   9 |   it('renders a Link(a) element', () => {\n  10 |     const button = mount(<Button />);\n> 11 |     expect(button.find('a')).toHaveLength(0);\n     |                                          ^ Magic Number\n  12 |     expect(button.find('button')).toHaveLength(1);\n  13 |   });\n  14 |   it('renders its children element', () => {","start":{"line":11,"column":42,"index":285}},{"frame":"  10 |     const button = mount(<Button />);\n  11 |     expect(button.find('a')).toHaveLength(0);\n> 12 |     expect(button.find('button')).toHaveLength(1);\n     |                                               ^ Magic Number\n  13 |   });\n  14 |   it('renders its children element', () => {\n  15 |     const button = mount(<Button>A Button</Button>);","start":{"line":12,"column":47,"index":336}}]}],"metrics":{"aggregate":{"cyclomatic":8,"cyclomaticDensity":19.048,"halstead":{"bugs":0.2,"difficulty":5.673,"effort":3400.77,"length":121,"time":188.932,"vocabulary":31,"volume":599.458,"operands":{"distinct":26,"total":59,"identifiers":["describe","\"Renders correctly to the DOM\"","it","\"renders a Link(a) element\"","button","mount","expect","find","\"a\"","toHaveLength","0","\"button\"","1","\"renders its children element\"","text","toEqual","\"A Button\"","\"Allows us to set button type via props\"","\"set button type as info\"","props","primary","true","\"set button type as success\"","success","\"set button type as danger\"","danger"]},"operators":{"distinct":5,"total":62,"identifiers":["()","function=>","const","=","."]}},"paramCount":0,"sloc":{"logical":42,"physical":34}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":6,"path":"../Button","type":"esm"}],"errors":[],"lineEnd":34,"lineStart":1,"maintainability":123.438,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"renders a Link(a) element\"","\"renders its children element\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":11},"errors":[],"lineEnd":18,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.033,"difficulty":3.111,"effort":310.837,"length":27,"time":17.269,"vocabulary":13,"volume":99.912,"operands":{"distinct":9,"total":14,"identifiers":["button","mount","expect","find","\"a\"","toHaveLength","0","\"button\"","1"]},"operators":{"distinct":4,"total":13,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":13,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.017,"difficulty":2.333,"effort":116.267,"length":15,"time":6.459,"vocabulary":10,"volume":49.829,"operands":{"distinct":6,"total":7,"identifiers":["button","mount","expect","text","toEqual","\"A Button\""]},"operators":{"distinct":4,"total":8,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":17,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"set button type as info\"","\"set button type as success\"","\"set button type as danger\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":14},"errors":[],"lineEnd":33,"lineStart":20,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.02,"difficulty":2.286,"effort":134.424,"length":17,"time":7.468,"vocabulary":11,"volume":58.81,"operands":{"distinct":7,"total":8,"identifiers":["button","mount","expect","props","primary","toEqual","true"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":24,"lineStart":21,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.02,"difficulty":2.286,"effort":134.424,"length":17,"time":7.468,"vocabulary":11,"volume":58.81,"operands":{"distinct":7,"total":8,"identifiers":["button","mount","expect","props","success","toEqual","true"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":28,"lineStart":25,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.02,"difficulty":2.286,"effort":134.424,"length":17,"time":7.468,"vocabulary":11,"volume":58.81,"operands":{"distinct":7,"total":8,"identifiers":["button","mount","expect","props","danger","toEqual","true"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":32,"lineStart":29,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":2.381,"halstead":{"bugs":0.025,"difficulty":0.709,"effort":425.096,"length":15.125,"time":23.616,"vocabulary":3.875,"volume":74.932,"operands":{"distinct":3.25,"total":7.375},"operators":{"distinct":0.625,"total":7.75}},"paramCount":0,"sloc":{"logical":5.25,"physical":4.25}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":19.167,"halstead":{"bugs":0.018,"difficulty":2.162,"effort":128.81,"length":16.143,"time":7.156,"vocabulary":9.571,"volume":53.681,"operands":{"distinct":6.143,"total":7.857},"operators":{"distinct":3.429,"total":8.286}},"paramCount":0,"sloc":{"logical":5.429,"physical":6.571}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/components/shared/_tests_/Layout.spec.js","testCases":16,"smells":17,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  17 | describe('Renders correctly to the DOM', () => {\n  18 |   it('AppWrapper renders a DIV element', () => {\n> 19 |     expect(mount(<AppWrapper />).find('div')).toHaveLength(1);\n     |                                                           ^ Magic Number\n  20 |   });\n  21 |   it('AppMainContent renders a DIV element', () => {\n  22 |     expect(mount(<AppMainContent />).find('div')).toHaveLength(1);","start":{"line":19,"column":59,"index":398}},{"frame":"  20 |   });\n  21 |   it('AppMainContent renders a DIV element', () => {\n> 22 |     expect(mount(<AppMainContent />).find('div')).toHaveLength(1);\n     |                                                               ^ Magic Number\n  23 |   });\n  24 |   it('PageWrapper renders a DIV element', () => {\n  25 |     expect(mount(<PageWrapper />).find('div')).toHaveLength(1);","start":{"line":22,"column":63,"index":524}},{"frame":"  23 |   });\n  24 |   it('PageWrapper renders a DIV element', () => {\n> 25 |     expect(mount(<PageWrapper />).find('div')).toHaveLength(1);\n     |                                                            ^ Magic Number\n  26 |   });\n  27 |   it('PageHeader renders a DIV element', () => {\n  28 |     expect(mount(<PageHeader />).find('div')).toHaveLength(1);","start":{"line":25,"column":60,"index":644}},{"frame":"  26 |   });\n  27 |   it('PageHeader renders a DIV element', () => {\n> 28 |     expect(mount(<PageHeader />).find('div')).toHaveLength(1);\n     |                                                           ^ Magic Number\n  29 |   });\n  30 |   it('PageHeaderTitle renders a DIV element', () => {\n  31 |     expect(mount(<PageHeaderTitle />).find('p')).toHaveLength(1);","start":{"line":28,"column":59,"index":762}},{"frame":"  29 |   });\n  30 |   it('PageHeaderTitle renders a DIV element', () => {\n> 31 |     expect(mount(<PageHeaderTitle />).find('p')).toHaveLength(1);\n     |                                                              ^ Magic Number\n  32 |   });\n  33 |   it('PageHeaderActions renders a DIV element', () => {\n  34 |     expect(mount(<PageHeaderActions />).find('div')).toHaveLength(1);","start":{"line":31,"column":62,"index":888}},{"frame":"  32 |   });\n  33 |   it('PageHeaderActions renders a DIV element', () => {\n> 34 |     expect(mount(<PageHeaderActions />).find('div')).toHaveLength(1);\n     |                                                                  ^ Magic Number\n  35 |   });\n  36 |   it('PageContent renders a DIV element', () => {\n  37 |     expect(mount(<PageContent />).find('div')).toHaveLength(1);","start":{"line":34,"column":66,"index":1020}},{"frame":"  35 |   });\n  36 |   it('PageContent renders a DIV element', () => {\n> 37 |     expect(mount(<PageContent />).find('div')).toHaveLength(1);\n     |                                                            ^ Magic Number\n  38 |   });\n  39 |   it('PageFooter renders a DIV element', () => {\n  40 |     expect(mount(<PageFooter />).find('div')).toHaveLength(1);","start":{"line":37,"column":60,"index":1140}},{"frame":"  38 |   });\n  39 |   it('PageFooter renders a DIV element', () => {\n> 40 |     expect(mount(<PageFooter />).find('div')).toHaveLength(1);\n     |                                                           ^ Magic Number\n  41 |   });\n  42 | });\n  43 |","start":{"line":40,"column":59,"index":1258}},{"frame":"  49 |       </AppWrapper>\n  50 |     );\n> 51 |     expect(appWrapper.find('div')).toHaveLength(2);\n     |                                                ^ Magic Number\n  52 |     expect(appWrapper.text()).toEqual('Hello, World');\n  53 |   });\n  54 |","start":{"line":51,"column":48,"index":1526}},{"frame":"  59 |       </AppMainContent>\n  60 |     );\n> 61 |     expect(appMainContent.find('div')).toHaveLength(2);\n     |                                                    ^ Magic Number\n  62 |     expect(appMainContent.text()).toEqual('Hello, World');\n  63 |   });\n  64 |","start":{"line":61,"column":52,"index":1816}},{"frame":"  69 |       </PageWrapper>\n  70 |     );\n> 71 |     expect(pageWrapper.find('div')).toHaveLength(2);\n     |                                                 ^ Magic Number\n  72 |     expect(pageWrapper.text()).toEqual('Hello, World');\n  73 |   });\n  74 |","start":{"line":71,"column":49,"index":2095}},{"frame":"  79 |       </PageHeader>\n  80 |     );\n> 81 |     expect(pageHeader.find('div')).toHaveLength(2);\n     |                                                ^ Magic Number\n  82 |     expect(pageHeader.text()).toEqual('Hello, World');\n  83 |   });\n  84 |","start":{"line":81,"column":48,"index":2366}},{"frame":"  89 |       </PageHeaderTitle>\n  90 |     );\n> 91 |     expect(pageHeaderTitle.find('p')).toHaveLength(1);\n     |                                                   ^ Magic Number\n  92 |     expect(pageHeaderTitle.find('span')).toHaveLength(1);\n  93 |     expect(pageHeaderTitle.text()).toEqual('Hello, World');\n  94 |   });","start":{"line":91,"column":51,"index":2662}},{"frame":"  90 |     );\n  91 |     expect(pageHeaderTitle.find('p')).toHaveLength(1);\n> 92 |     expect(pageHeaderTitle.find('span')).toHaveLength(1);\n     |                                                      ^ Magic Number\n  93 |     expect(pageHeaderTitle.text()).toEqual('Hello, World');\n  94 |   });\n  95 |","start":{"line":92,"column":54,"index":2720}},{"frame":"  100 |       </PageHeaderActions>\n  101 |     );\n> 102 |     expect(pageHeaderActions.find('div')).toHaveLength(2);\n      |                                                       ^ Magic Number\n  103 |     expect(pageHeaderActions.text()).toEqual('Hello, World');\n  104 |   });\n  105 |","start":{"line":102,"column":55,"index":3030}},{"frame":"  110 |       </PageContent>\n  111 |     );\n> 112 |     expect(pageContent.find('div')).toHaveLength(2);\n      |                                                 ^ Magic Number\n  113 |     expect(pageContent.text()).toEqual('Hello, World');\n  114 |   });\n  115 |","start":{"line":112,"column":49,"index":3312}},{"frame":"  120 |       </PageFooter>\n  121 |     );\n> 122 |     expect(pageFooter.find('div')).toHaveLength(2);\n      |                                                ^ Magic Number\n  123 |     expect(pageFooter.text()).toEqual('Hello, World');\n  124 |   });\n  125 | });","start":{"line":122,"column":48,"index":3583}}]}],"metrics":{"aggregate":{"cyclomatic":19,"cyclomaticDensity":14.074,"halstead":{"bugs":0.704,"difficulty":12.436,"effort":26274.565,"length":387,"time":1459.698,"vocabulary":44,"volume":2112.8,"operands":{"distinct":39,"total":194,"identifiers":["describe","\"Renders correctly to the DOM\"","it","\"AppWrapper renders a DIV element\"","expect","mount","find","\"div\"","toHaveLength","1","\"AppMainContent renders a DIV element\"","\"PageWrapper renders a DIV element\"","\"PageHeader renders a DIV element\"","\"PageHeaderTitle renders a DIV element\"","\"p\"","\"PageHeaderActions renders a DIV element\"","\"PageContent renders a DIV element\"","\"PageFooter renders a DIV element\"","\"Renders its children element\"","\"AppWrapper renders its children\"","appWrapper","2","text","toEqual","\"Hello, World\"","\"AppMainContent renders its children\"","appMainContent","\"PageWrapper renders its children\"","pageWrapper","\"PageHeader renders its children\"","pageHeader","pageHeaderTitle","\"span\"","\"PageHeaderActions renders its children\"","pageHeaderActions","\"PageContent renders its children\"","pageContent","\"PageFooter renders its children\"","pageFooter"]},"operators":{"distinct":5,"total":193,"identifiers":["()","function=>",".","const","="]}},"paramCount":0,"sloc":{"logical":135,"physical":126}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":15,"path":"../Layout","type":"esm"}],"errors":[],"lineEnd":126,"lineStart":1,"maintainability":114.501,"methods":[{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.037,"difficulty":1.778,"effort":196.803,"length":32,"time":10.934,"vocabulary":11,"volume":110.702,"operands":{"distinct":9,"total":16,"identifiers":["it","\"AppWrapper renders a DIV element\"","\"AppMainContent renders a DIV element\"","\"PageWrapper renders a DIV element\"","\"PageHeader renders a DIV element\"","\"PageHeaderTitle renders a DIV element\"","\"PageHeaderActions renders a DIV element\"","\"PageContent renders a DIV element\"","\"PageFooter renders a DIV element\""]},"operators":{"distinct":2,"total":16,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":16,"physical":26},"errors":[],"lineEnd":42,"lineStart":17,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.012,"difficulty":1,"effort":36,"length":12,"time":2,"vocabulary":8,"volume":36,"operands":{"distinct":6,"total":6,"identifiers":["expect","mount","find","\"div\"","toHaveLength","1"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":3},"errors":[],"lineEnd":20,"lineStart":18,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.012,"difficulty":1,"effort":36,"length":12,"time":2,"vocabulary":8,"volume":36,"operands":{"distinct":6,"total":6,"identifiers":["expect","mount","find","\"div\"","toHaveLength","1"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":3},"errors":[],"lineEnd":23,"lineStart":21,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.012,"difficulty":1,"effort":36,"length":12,"time":2,"vocabulary":8,"volume":36,"operands":{"distinct":6,"total":6,"identifiers":["expect","mount","find","\"div\"","toHaveLength","1"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":3},"errors":[],"lineEnd":26,"lineStart":24,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.012,"difficulty":1,"effort":36,"length":12,"time":2,"vocabulary":8,"volume":36,"operands":{"distinct":6,"total":6,"identifiers":["expect","mount","find","\"div\"","toHaveLength","1"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":3},"errors":[],"lineEnd":29,"lineStart":27,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.012,"difficulty":1,"effort":36,"length":12,"time":2,"vocabulary":8,"volume":36,"operands":{"distinct":6,"total":6,"identifiers":["expect","mount","find","\"p\"","toHaveLength","1"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":3},"errors":[],"lineEnd":32,"lineStart":30,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.012,"difficulty":1,"effort":36,"length":12,"time":2,"vocabulary":8,"volume":36,"operands":{"distinct":6,"total":6,"identifiers":["expect","mount","find","\"div\"","toHaveLength","1"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":3},"errors":[],"lineEnd":35,"lineStart":33,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.012,"difficulty":1,"effort":36,"length":12,"time":2,"vocabulary":8,"volume":36,"operands":{"distinct":6,"total":6,"identifiers":["expect","mount","find","\"div\"","toHaveLength","1"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":3},"errors":[],"lineEnd":38,"lineStart":36,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.012,"difficulty":1,"effort":36,"length":12,"time":2,"vocabulary":8,"volume":36,"operands":{"distinct":6,"total":6,"identifiers":["expect","mount","find","\"div\"","toHaveLength","1"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":3},"errors":[],"lineEnd":41,"lineStart":39,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.037,"difficulty":1.778,"effort":196.803,"length":32,"time":10.934,"vocabulary":11,"volume":110.702,"operands":{"distinct":9,"total":16,"identifiers":["it","\"AppWrapper renders its children\"","\"AppMainContent renders its children\"","\"PageWrapper renders its children\"","\"PageHeader renders its children\"","\"PageHeaderTitle renders a DIV element\"","\"PageHeaderActions renders its children\"","\"PageContent renders its children\"","\"PageFooter renders its children\""]},"operators":{"distinct":2,"total":16,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":16,"physical":82},"errors":[],"lineEnd":125,"lineStart":44,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.033,"difficulty":2.6,"effort":257.377,"length":26,"time":14.299,"vocabulary":14,"volume":98.991,"operands":{"distinct":10,"total":13,"identifiers":["appWrapper","mount","expect","find","\"div\"","toHaveLength","2","text","toEqual","\"Hello, World\""]},"operators":{"distinct":4,"total":13,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":9},"errors":[],"lineEnd":53,"lineStart":45,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.033,"difficulty":2.6,"effort":257.377,"length":26,"time":14.299,"vocabulary":14,"volume":98.991,"operands":{"distinct":10,"total":13,"identifiers":["appMainContent","mount","expect","find","\"div\"","toHaveLength","2","text","toEqual","\"Hello, World\""]},"operators":{"distinct":4,"total":13,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":9},"errors":[],"lineEnd":63,"lineStart":55,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.033,"difficulty":2.6,"effort":257.377,"length":26,"time":14.299,"vocabulary":14,"volume":98.991,"operands":{"distinct":10,"total":13,"identifiers":["pageWrapper","mount","expect","find","\"div\"","toHaveLength","2","text","toEqual","\"Hello, World\""]},"operators":{"distinct":4,"total":13,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":9},"errors":[],"lineEnd":73,"lineStart":65,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.033,"difficulty":2.6,"effort":257.377,"length":26,"time":14.299,"vocabulary":14,"volume":98.991,"operands":{"distinct":10,"total":13,"identifiers":["pageHeader","mount","expect","find","\"div\"","toHaveLength","2","text","toEqual","\"Hello, World\""]},"operators":{"distinct":4,"total":13,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":9},"errors":[],"lineEnd":83,"lineStart":75,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.048,"difficulty":3.455,"effort":499.372,"length":37,"time":27.743,"vocabulary":15,"volume":144.555,"operands":{"distinct":11,"total":19,"identifiers":["pageHeaderTitle","mount","expect","find","\"p\"","toHaveLength","1","\"span\"","text","toEqual","\"Hello, World\""]},"operators":{"distinct":4,"total":18,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":10},"errors":[],"lineEnd":94,"lineStart":85,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.033,"difficulty":2.6,"effort":257.377,"length":26,"time":14.299,"vocabulary":14,"volume":98.991,"operands":{"distinct":10,"total":13,"identifiers":["pageHeaderActions","mount","expect","find","\"div\"","toHaveLength","2","text","toEqual","\"Hello, World\""]},"operators":{"distinct":4,"total":13,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":9},"errors":[],"lineEnd":104,"lineStart":96,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.033,"difficulty":2.6,"effort":257.377,"length":26,"time":14.299,"vocabulary":14,"volume":98.991,"operands":{"distinct":10,"total":13,"identifiers":["pageContent","mount","expect","find","\"div\"","toHaveLength","2","text","toEqual","\"Hello, World\""]},"operators":{"distinct":4,"total":13,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":9},"errors":[],"lineEnd":114,"lineStart":106,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.033,"difficulty":2.6,"effort":257.377,"length":26,"time":14.299,"vocabulary":14,"volume":98.991,"operands":{"distinct":10,"total":13,"identifiers":["pageFooter","mount","expect","find","\"div\"","toHaveLength","2","text","toEqual","\"Hello, World\""]},"operators":{"distinct":4,"total":13,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":9},"errors":[],"lineEnd":124,"lineStart":116,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.741,"halstead":{"bugs":0.037,"difficulty":0.655,"effort":1382.872,"length":20.368,"time":76.826,"vocabulary":2.316,"volume":111.2,"operands":{"distinct":2.053,"total":10.211},"operators":{"distinct":0.263,"total":10.158}},"paramCount":0,"sloc":{"logical":7.105,"physical":6.632}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":17.172,"halstead":{"bugs":0.025,"difficulty":1.845,"effort":165.701,"length":21.056,"time":9.206,"vocabulary":11.056,"volume":74.828,"operands":{"distinct":8.167,"total":10.556},"operators":{"distinct":2.889,"total":10.5}},"paramCount":0,"sloc":{"logical":7.278,"physical":11.389}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/components/shared/_tests_/Message.spec.js","testCases":10,"smells":1,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  18 |   it('renders a DIV element', () => {\n  19 |     const message = mount(<Message text=\"foo\" />);\n> 20 |     expect(message.find('div')).toHaveLength(1);\n     |                                             ^ Magic Number\n  21 |   });\n  22 | });\n  23 |","start":{"line":20,"column":45,"index":588}}]}],"metrics":{"aggregate":{"cyclomatic":16,"cyclomaticDensity":20,"halstead":{"bugs":0.437,"difficulty":7.083,"effort":9285.421,"length":236,"time":515.857,"vocabulary":47,"volume":1310.883,"operands":{"distinct":42,"total":119,"identifiers":["describe","\"Renders correct style\"","it","\"renders a DIV element\"","tree","renderer","create","\"foo\"","toJSON","expect","toHaveStyleRule","\"color\"","\"#4f555c\"","\"Renders correctly to the DOM\"","message","mount","find","\"div\"","toHaveLength","1","\"Allows us to set message types via props\"","\"set message type as info\"","props","info","toEqual","true","\"set message type as success\"","success","\"set message type as danger\"","danger","\"set message type as warning\"","warning","\"Allows us to set text props\"","\"set text prop to foo\"","text","\"set text prop to bar\"","\"bar\"","\"Renders correct content passed via props\"","\"prints out Hello, World\"","\"Hello, World\"","\"prints out Bye, World\"","\"Bye, World\""]},"operators":{"distinct":5,"total":117,"identifiers":["()","function=>","const","=","."]}},"paramCount":0,"sloc":{"logical":80,"physical":64}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":4,"path":"react-test-renderer","type":"esm"},{"line":5,"path":"jest-styled-components","type":"esm"},{"line":8,"path":"../Message","type":"esm"}],"errors":[],"lineEnd":64,"lineStart":1,"maintainability":123.164,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"renders a DIV element\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":6},"errors":[],"lineEnd":15,"lineStart":10,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.023,"difficulty":2.222,"effort":156.241,"length":19,"time":8.68,"vocabulary":13,"volume":70.308,"operands":{"distinct":9,"total":10,"identifiers":["tree","renderer","create","\"foo\"","toJSON","expect","toHaveStyleRule","\"color\"","\"#4f555c\""]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":14,"lineStart":11,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"renders a DIV element\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":6},"errors":[],"lineEnd":22,"lineStart":17,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.02,"difficulty":2.25,"effort":137.125,"length":17,"time":7.618,"vocabulary":12,"volume":60.944,"operands":{"distinct":8,"total":9,"identifiers":["message","mount","\"foo\"","expect","find","\"div\"","toHaveLength","1"]},"operators":{"distinct":4,"total":8,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":21,"lineStart":18,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"set message type as info\"","\"set message type as success\"","\"set message type as danger\"","\"set message type as warning\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":18},"errors":[],"lineEnd":41,"lineStart":24,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":2.25,"effort":145.191,"length":18,"time":8.066,"vocabulary":12,"volume":64.529,"operands":{"distinct":8,"total":9,"identifiers":["message","mount","\"foo\"","expect","props","info","toEqual","true"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":28,"lineStart":25,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":2.25,"effort":145.191,"length":18,"time":8.066,"vocabulary":12,"volume":64.529,"operands":{"distinct":8,"total":9,"identifiers":["message","mount","\"foo\"","expect","props","success","toEqual","true"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":32,"lineStart":29,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":2.25,"effort":145.191,"length":18,"time":8.066,"vocabulary":12,"volume":64.529,"operands":{"distinct":8,"total":9,"identifiers":["message","mount","\"foo\"","expect","props","danger","toEqual","true"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":36,"lineStart":33,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":2.25,"effort":145.191,"length":18,"time":8.066,"vocabulary":12,"volume":64.529,"operands":{"distinct":8,"total":9,"identifiers":["message","mount","\"foo\"","expect","props","warning","toEqual","true"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":40,"lineStart":37,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"set text prop to foo\"","\"set text prop to bar\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":10},"errors":[],"lineEnd":52,"lineStart":43,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.021,"difficulty":2.571,"effort":160.122,"length":18,"time":8.896,"vocabulary":11,"volume":62.27,"operands":{"distinct":7,"total":9,"identifiers":["message","mount","\"foo\"","expect","props","text","toEqual"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":47,"lineStart":44,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.021,"difficulty":2.571,"effort":160.122,"length":18,"time":8.896,"vocabulary":11,"volume":62.27,"operands":{"distinct":7,"total":9,"identifiers":["message","mount","\"bar\"","expect","props","text","toEqual"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":51,"lineStart":48,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"prints out Hello, World\"","\"prints out Bye, World\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":10},"errors":[],"lineEnd":63,"lineStart":54,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.018,"difficulty":2.667,"effort":141.736,"length":16,"time":7.874,"vocabulary":10,"volume":53.151,"operands":{"distinct":6,"total":8,"identifiers":["message","mount","\"Hello, World\"","expect","text","toEqual"]},"operators":{"distinct":4,"total":8,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":58,"lineStart":55,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.018,"difficulty":2.667,"effort":141.736,"length":16,"time":7.874,"vocabulary":10,"volume":53.151,"operands":{"distinct":6,"total":8,"identifiers":["message","mount","\"Bye, World\"","expect","text","toEqual"]},"operators":{"distinct":4,"total":8,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":62,"lineStart":59,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.25,"halstead":{"bugs":0.027,"difficulty":0.443,"effort":580.339,"length":14.75,"time":32.241,"vocabulary":2.938,"volume":81.93,"operands":{"distinct":2.625,"total":7.438},"operators":{"distinct":0.313,"total":7.313}},"paramCount":0,"sloc":{"logical":5,"physical":4}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":24.167,"halstead":{"bugs":0.016,"difficulty":2.014,"effort":107.683,"length":14.4,"time":5.982,"vocabulary":9.333,"volume":47.885,"operands":{"distinct":6,"total":7.267},"operators":{"distinct":3.333,"total":7.133}},"paramCount":0,"sloc":{"logical":4.667,"physical":6}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/components/shared/_tests_/Section.spec.js","testCases":2,"smells":4,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"   9 |   it('renders a DIV element', () => {\n  10 |     const section = mount(<Section />);\n> 11 |     expect(section.find('div')).toHaveLength(1);\n     |                                             ^ Magic Number\n  12 |   });\n  13 |\n  14 |   it('renders its children', () => {","start":{"line":11,"column":45,"index":292}},{"frame":"  21 |       </Section>\n  22 |     );\n> 23 |     expect(section.find('div')).toHaveLength(2);\n     |                                             ^ Magic Number\n  24 |     expect(section.find('h4')).toHaveLength(1);\n  25 |     expect(section.find('p')).toHaveLength(1);\n  26 |   });","start":{"line":23,"column":45,"index":550}},{"frame":"  22 |     );\n  23 |     expect(section.find('div')).toHaveLength(2);\n> 24 |     expect(section.find('h4')).toHaveLength(1);\n     |                                            ^ Magic Number\n  25 |     expect(section.find('p')).toHaveLength(1);\n  26 |   });\n  27 | });","start":{"line":24,"column":44,"index":598}},{"frame":"  23 |     expect(section.find('div')).toHaveLength(2);\n  24 |     expect(section.find('h4')).toHaveLength(1);\n> 25 |     expect(section.find('p')).toHaveLength(1);\n     |                                           ^ Magic Number\n  26 |   });\n  27 | });\n  28 |","start":{"line":25,"column":43,"index":645}}]}],"metrics":{"aggregate":{"cyclomatic":4,"cyclomaticDensity":18.182,"halstead":{"bugs":0.095,"difficulty":5.667,"effort":1616.401,"length":66,"time":89.8,"vocabulary":20,"volume":285.247,"operands":{"distinct":15,"total":34,"identifiers":["describe","\"Renders correctly to the DOM\"","it","\"renders a DIV element\"","section","mount","expect","find","\"div\"","toHaveLength","1","\"renders its children\"","2","\"h4\"","\"p\""]},"operators":{"distinct":5,"total":32,"identifiers":["()","function=>","const","=","."]}},"paramCount":0,"sloc":{"logical":22,"physical":28}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":6,"path":"../Section","type":"esm"}],"errors":[],"lineEnd":28,"lineStart":1,"maintainability":122.857,"methods":[{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"renders a DIV element\"","\"renders its children\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":20},"errors":[],"lineEnd":27,"lineStart":8,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.018,"difficulty":2.286,"effort":126.516,"length":16,"time":7.029,"vocabulary":11,"volume":55.351,"operands":{"distinct":7,"total":8,"identifiers":["section","mount","expect","find","\"div\"","toHaveLength","1"]},"operators":{"distinct":4,"total":8,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":4},"errors":[],"lineEnd":12,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.048,"difficulty":4,"effort":578.718,"length":38,"time":32.151,"vocabulary":14,"volume":144.679,"operands":{"distinct":10,"total":20,"identifiers":["section","mount","expect","find","\"div\"","toHaveLength","2","\"h4\"","1","\"p\""]},"operators":{"distinct":4,"total":18,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":13},"errors":[],"lineEnd":26,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.024,"difficulty":1.417,"effort":404.1,"length":16.5,"time":22.45,"vocabulary":5,"volume":71.312,"operands":{"distinct":3.75,"total":8.5},"operators":{"distinct":1.25,"total":8}},"paramCount":0,"sloc":{"logical":5.5,"physical":7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":18.03,"halstead":{"bugs":0.024,"difficulty":2.54,"effort":243.334,"length":20.667,"time":13.519,"vocabulary":10,"volume":72.869,"operands":{"distinct":6.667,"total":10.667},"operators":{"distinct":3.333,"total":10}},"paramCount":0,"sloc":{"logical":6.667,"physical":12.333}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/components/shared/_tests_/SplitButton.spec.js","testCases":7,"smells":5,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  43 |\n  44 |   it('renders links as a element', () => {\n> 45 |     expect(wrapper.find('a')).toHaveLength(2);\n     |                                           ^ Magic Number\n  46 |     expect(wrapper.find('button')).toHaveLength(0);\n  47 |   });\n  48 |","start":{"line":45,"column":43,"index":960}},{"frame":"  44 |   it('renders links as a element', () => {\n  45 |     expect(wrapper.find('a')).toHaveLength(2);\n> 46 |     expect(wrapper.find('button')).toHaveLength(0);\n     |                                                ^ Magic Number\n  47 |   });\n  48 |\n  49 |   it('hide options by default', () => {","start":{"line":46,"column":48,"index":1012}},{"frame":"  49 |   it('hide options by default', () => {\n  50 |     expect(wrapper.state().showOptions).toEqual(false);\n> 51 |     expect(wrapper.find('SplitButton__Addon')).toHaveLength(0);\n     |                                                            ^ Magic Number\n  52 |   });\n  53 |\n  54 |   it('renders options list correctly', () => {","start":{"line":51,"column":60,"index":1179}},{"frame":"  55 |     toggleBtn.simulate('click');\n  56 |     expect(wrapper.state().showOptions).toEqual(true);\n> 57 |     expect(wrapper.find('SplitButton__Addon')).toHaveLength(1);\n     |                                                            ^ Magic Number\n  58 |     expect(wrapper.find('SplitButton__Addon').children()).toHaveLength(\n  59 |       options.length\n  60 |     );","start":{"line":57,"column":60,"index":1385}},{"frame":"  115 |     // The dropdown will be removed\n  116 |     expect(wrapper.state().showOptions).toEqual(false);\n> 117 |     expect(wrapper.find('SplitButton__Addon')).toHaveLength(0);\n      |                                                            ^ Magic Number\n  118 |   });\n  119 | });\n  120 |","start":{"line":117,"column":60,"index":3173}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":9.836,"halstead":{"bugs":0.824,"difficulty":15.923,"effort":39375.238,"length":397,"time":2187.513,"vocabulary":75,"volume":2472.841,"operands":{"distinct":65,"total":207,"identifiers":["mainAction","jest","fn","mainButton","label","\"Main Action\"","action","optionAction1","optionAction2","optionAction3","options","\"Option A\"","\"Option B\"","\"Option C\"","describe","\"Renders correctly to the DOM\"","wrapper","toggleBtn","mainBtn","beforeEach","shallow","find","\"a\"","first","last","it","\"renders links as a element\"","expect","toHaveLength","2","\"button\"","0","\"hide options by default\"","state","showOptions","toEqual","false","\"SplitButton__Addon\"","\"renders options list correctly\"","simulate","\"click\"","true","1","children","length","\"matches snapshot\"","tree","renderer","create","toJSON","toMatchSnapshot","\"Handles click correctly\"","spyHandleClick","spyHandleOutsideClick","spyOn","SplitButton","prototype","\"handleClick\"","\"handleOutsideClick\"","\"handle main button click correcrtly\"","toHaveBeenCalled","\"handle options click correcrtly\"","firstBtn","lastBtn","\"handle click outside correctly\""]},"operators":{"distinct":10,"total":190,"identifiers":["const","=","()",".","{}",":","[]",",","function=>","let"]}},"paramCount":0,"sloc":{"logical":122,"physical":120}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"react","type":"esm"},{"line":3,"path":"enzyme","type":"esm"},{"line":4,"path":"react-test-renderer","type":"esm"},{"line":7,"path":"../SplitButton","type":"esm"}],"errors":[],"lineEnd":120,"lineStart":1,"maintainability":105.742,"methods":[{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.027,"difficulty":2,"effort":164.908,"length":23,"time":9.162,"vocabulary":12,"volume":82.454,"operands":{"distinct":9,"total":12,"identifiers":["wrapper","toggleBtn","mainBtn","beforeEach","it","\"renders links as a element\"","\"hide options by default\"","\"renders options list correctly\"","\"matches snapshot\""]},"operators":{"distinct":3,"total":11,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":36},"errors":[],"lineEnd":69,"lineStart":34,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.032,"difficulty":2.1,"effort":202.044,"length":26,"time":11.225,"vocabulary":13,"volume":96.211,"operands":{"distinct":10,"total":14,"identifiers":["wrapper","shallow","mainButton","options","mainBtn","find","\"a\"","first","toggleBtn","last"]},"operators":{"distinct":3,"total":12,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":7},"errors":[],"lineEnd":42,"lineStart":36,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.024,"difficulty":1.5,"effort":109.624,"length":22,"time":6.09,"vocabulary":10,"volume":73.082,"operands":{"distinct":8,"total":12,"identifiers":["expect","wrapper","find","\"a\"","toHaveLength","2","\"button\"","0"]},"operators":{"distinct":2,"total":10,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":47,"lineStart":44,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":1.2,"effort":98.945,"length":23,"time":5.497,"vocabulary":12,"volume":82.454,"operands":{"distinct":10,"total":12,"identifiers":["expect","wrapper","state","showOptions","toEqual","false","find","\"SplitButton__Addon\"","toHaveLength","0"]},"operators":{"distinct":2,"total":11,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":52,"lineStart":49,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.061,"difficulty":1.438,"effort":263.748,"length":44,"time":14.653,"vocabulary":18,"volume":183.477,"operands":{"distinct":16,"total":23,"identifiers":["toggleBtn","simulate","\"click\"","expect","wrapper","state","showOptions","toEqual","true","find","\"SplitButton__Addon\"","toHaveLength","1","children","options","length"]},"operators":{"distinct":2,"total":21,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":8},"errors":[],"lineEnd":61,"lineStart":54,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":2.25,"effort":145.191,"length":18,"time":8.066,"vocabulary":12,"volume":64.529,"operands":{"distinct":8,"total":9,"identifiers":["tree","renderer","create","mainButton","options","toJSON","expect","toMatchSnapshot"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":68,"lineStart":63,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.026,"difficulty":1.8,"effort":139.877,"length":21,"time":7.771,"vocabulary":13,"volume":77.709,"operands":{"distinct":10,"total":12,"identifiers":["wrapper","toggleBtn","mainBtn","spyHandleClick","spyHandleOutsideClick","beforeEach","it","\"handle main button click correcrtly\"","\"handle options click correcrtly\"","\"handle click outside correctly\""]},"operators":{"distinct":3,"total":9,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":49},"errors":[],"lineEnd":119,"lineStart":71,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.067,"difficulty":2.167,"effort":437.768,"length":46,"time":24.32,"vocabulary":21,"volume":202.047,"operands":{"distinct":18,"total":26,"identifiers":["spyHandleClick","jest","spyOn","SplitButton","prototype","\"handleClick\"","spyHandleOutsideClick","\"handleOutsideClick\"","wrapper","shallow","mainButton","options","mainBtn","find","\"a\"","first","toggleBtn","last"]},"operators":{"distinct":3,"total":20,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":12,"physical":12},"errors":[],"lineEnd":84,"lineStart":73,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.011,"difficulty":1,"effort":33,"length":11,"time":1.833,"vocabulary":8,"volume":33,"operands":{"distinct":6,"total":6,"identifiers":["mainBtn","simulate","\"click\"","expect","mainAction","toHaveBeenCalled"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":89,"lineStart":86,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.081,"difficulty":3.867,"effort":936.243,"length":57,"time":52.014,"vocabulary":19,"volume":242.132,"operands":{"distinct":15,"total":29,"identifiers":["toggleBtn","simulate","\"click\"","firstBtn","wrapper","find","\"SplitButton__Addon\"","\"a\"","first","lastBtn","last","expect","optionAction1","toHaveBeenCalled","optionAction3"]},"operators":{"distinct":4,"total":28,"identifiers":["()",".","const","="]}},"paramCount":0,"sloc":{"logical":15,"physical":18},"errors":[],"lineEnd":108,"lineStart":91,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.044,"difficulty":1.286,"effort":169.714,"length":33,"time":9.429,"vocabulary":16,"volume":132,"operands":{"distinct":14,"total":18,"identifiers":["toggleBtn","simulate","\"click\"","mainBtn","expect","wrapper","state","showOptions","toEqual","false","find","\"SplitButton__Addon\"","toHaveLength","0"]},"operators":{"distinct":2,"total":15,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":9},"errors":[],"lineEnd":118,"lineStart":110,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.82,"halstead":{"bugs":0.069,"difficulty":1.327,"effort":3281.27,"length":33.083,"time":182.293,"vocabulary":6.25,"volume":206.07,"operands":{"distinct":5.417,"total":17.25},"operators":{"distinct":0.833,"total":15.833}},"paramCount":0,"sloc":{"logical":10.167,"physical":10}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":13.74,"halstead":{"bugs":0.038,"difficulty":1.873,"effort":245.551,"length":29.455,"time":13.642,"vocabulary":14,"volume":115.372,"operands":{"distinct":11.273,"total":15.727},"operators":{"distinct":2.727,"total":13.727}},"paramCount":0,"sloc":{"logical":9.091,"physical":14.273}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/containers/__tests__/Invoices.spec.js","testCases":8,"smells":14,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  74 |     expect(wrapper.find(PageHeaderTitle)).toHaveLength(1);\n  75 |     expect(wrapper.find(PageHeaderActions)).toHaveLength(1);\n> 76 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n     |    ^ Duplicate Assert\n  77 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n  78 |   });\n  79 |","start":{"line":76,"column":4,"index":2009}},{"frame":"  74 |     expect(wrapper.find(PageHeaderTitle)).toHaveLength(1);\n  75 |     expect(wrapper.find(PageHeaderActions)).toHaveLength(1);\n> 76 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n     |    ^ Duplicate Assert\n  77 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n  78 |   });\n  79 |","start":{"line":76,"column":4,"index":2009}},{"frame":"  75 |     expect(wrapper.find(PageHeaderActions)).toHaveLength(1);\n  76 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n> 77 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n     |    ^ Duplicate Assert\n  78 |   });\n  79 |\n  80 |   it('renders filter with four options', () => {","start":{"line":77,"column":4,"index":2064}},{"frame":"  75 |     expect(wrapper.find(PageHeaderActions)).toHaveLength(1);\n  76 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n> 77 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n     |    ^ Duplicate Assert\n  78 |   });\n  79 |\n  80 |   it('renders filter with four options', () => {","start":{"line":77,"column":4,"index":2064}},{"frame":"  112 |     expect(spySetFilter).toHaveBeenCalled();\n  113 |     const filter = wrapper.state().filter;\n> 114 |     expect(filter).toEqual('paid');\n      |    ^ Duplicate Assert\n  115 |     expect(filter).not.toEqual('pending');\n  116 |   });\n  117 |","start":{"line":114,"column":4,"index":3128}},{"frame":"  113 |     const filter = wrapper.state().filter;\n  114 |     expect(filter).toEqual('paid');\n> 115 |     expect(filter).not.toEqual('pending');\n      |    ^ Duplicate Assert\n  116 |   });\n  117 |\n  118 |   it('display only invoices with matched status', () => {","start":{"line":115,"column":4,"index":3164}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  66 |       <Invoices t={t} invoices={[]} dispatch={dispatch} />\n  67 |     );\n> 68 |     expect(newWrapper.find('.message')).toHaveLength(1);\n     |                                                     ^ Magic Number\n  69 |   });\n  70 |\n  71 |   it('render a correct page layout', () => {","start":{"line":68,"column":53,"index":1720}},{"frame":"  70 |\n  71 |   it('render a correct page layout', () => {\n> 72 |     expect(wrapper.find(PageWrapper)).toHaveLength(1);\n     |                                                   ^ Magic Number\n  73 |     expect(wrapper.find(PageHeader)).toHaveLength(1);\n  74 |     expect(wrapper.find(PageHeaderTitle)).toHaveLength(1);\n  75 |     expect(wrapper.find(PageHeaderActions)).toHaveLength(1);","start":{"line":72,"column":51,"index":1827}},{"frame":"  71 |   it('render a correct page layout', () => {\n  72 |     expect(wrapper.find(PageWrapper)).toHaveLength(1);\n> 73 |     expect(wrapper.find(PageHeader)).toHaveLength(1);\n     |                                                  ^ Magic Number\n  74 |     expect(wrapper.find(PageHeaderTitle)).toHaveLength(1);\n  75 |     expect(wrapper.find(PageHeaderActions)).toHaveLength(1);\n  76 |     expect(wrapper.find(PageContent)).toHaveLength(1);","start":{"line":73,"column":50,"index":1881}},{"frame":"  72 |     expect(wrapper.find(PageWrapper)).toHaveLength(1);\n  73 |     expect(wrapper.find(PageHeader)).toHaveLength(1);\n> 74 |     expect(wrapper.find(PageHeaderTitle)).toHaveLength(1);\n     |                                                       ^ Magic Number\n  75 |     expect(wrapper.find(PageHeaderActions)).toHaveLength(1);\n  76 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n  77 |     expect(wrapper.find(PageContent)).toHaveLength(1);","start":{"line":74,"column":55,"index":1940}},{"frame":"  73 |     expect(wrapper.find(PageHeader)).toHaveLength(1);\n  74 |     expect(wrapper.find(PageHeaderTitle)).toHaveLength(1);\n> 75 |     expect(wrapper.find(PageHeaderActions)).toHaveLength(1);\n     |                                                         ^ Magic Number\n  76 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n  77 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n  78 |   });","start":{"line":75,"column":57,"index":2001}},{"frame":"  74 |     expect(wrapper.find(PageHeaderTitle)).toHaveLength(1);\n  75 |     expect(wrapper.find(PageHeaderActions)).toHaveLength(1);\n> 76 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n     |                                                   ^ Magic Number\n  77 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n  78 |   });\n  79 |","start":{"line":76,"column":51,"index":2056}},{"frame":"  75 |     expect(wrapper.find(PageHeaderActions)).toHaveLength(1);\n  76 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n> 77 |     expect(wrapper.find(PageContent)).toHaveLength(1);\n     |                                                   ^ Magic Number\n  78 |   });\n  79 |\n  80 |   it('renders filter with four options', () => {","start":{"line":77,"column":51,"index":2111}},{"frame":"  80 |   it('renders filter with four options', () => {\n  81 |     const HeaderActions = wrapper.find(PageHeaderActions).first();\n> 82 |     expect(HeaderActions.find(Button)).toHaveLength(4);\n     |                                                    ^ Magic Number\n  83 |   });\n  84 |\n  85 |   it('matches snapshot', () => {","start":{"line":82,"column":52,"index":2290}}]}],"metrics":{"aggregate":{"cyclomatic":18,"cyclomaticDensity":13.534,"halstead":{"bugs":0.922,"difficulty":15.074,"effort":41694.742,"length":424,"time":2316.375,"vocabulary":92,"volume":2765.99,"operands":{"distinct":81,"total":222,"identifiers":["dispatch","jest","fn","t","invoices","_id","\"first-invoice\"","status","\"pending\"","\"second-invoice\"","\"refunded\"","\"third-invoice\"","\"paid\"","\"fourth-invoice\"","\"cancelled\"","mock","\"../../components/invoices/Invoice\"","\"invoice\"","\"../../components/shared/Message\"","\"message\"","describe","\"render component correctly\"","wrapper","beforeEach","mount","it","\"receives correct props\"","mountWrapper","expect","prop","\"t\"","toEqual","\"dispatch\"","\"invoices\"","\"render correct number of invoices\"","find","\".invoice\"","toHaveLength","length","\"render empty message when there is no invoice in the DB\"","newWrapper","\".message\"","1","\"render a correct page layout\"","PageWrapper","PageHeader","PageHeaderTitle","PageHeaderActions","PageContent","\"renders filter with four options\"","HeaderActions","first","Button","4","\"matches snapshot\"","tree","renderer","create","toJSON","toMatchSnapshot","\"handle actions correcrtly\"","spySetFilter","actions","filterBtn","spyOn","Invoices","prototype","\"setFilter\"","last","simulate","\"click\"","target","dataset","filter","\"set correct filter\"","toHaveBeenCalled","state","not","\"display only invoices with matched status\"","filteredInvoices","invoice"]},"operators":{"distinct":11,"total":202,"identifiers":["const","=","()",".","[]",",","{}",":","function=>","let","==="]}},"paramCount":1,"sloc":{"logical":133,"physical":126}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"react","type":"esm"},{"line":2,"path":"enzyme","type":"esm"},{"line":3,"path":"react-test-renderer","type":"esm"},{"line":12,"path":"../../components/shared/Layout","type":"esm"},{"line":13,"path":"../Invoices","type":"esm"},{"line":14,"path":"../../components/shared/Button","type":"esm"}],"errors":[],"lineEnd":126,"lineStart":1,"maintainability":112.103,"methods":[{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0,"difficulty":0.5,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":39,"lineStart":37,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["\"invoice\""]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":39,"lineStart":37,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0,"difficulty":0.5,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":1,"total":1,"identifiers":["function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":43,"lineStart":41,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["\"message\""]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":3},"errors":[],"lineEnd":43,"lineStart":41,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.035,"difficulty":2.333,"effort":242.582,"length":29,"time":13.477,"vocabulary":12,"volume":103.964,"operands":{"distinct":9,"total":14,"identifiers":["wrapper","beforeEach","it","\"receives correct props\"","\"render correct number of invoices\"","\"render empty message when there is no invoice in the DB\"","\"render a correct page layout\"","\"renders filter with four options\"","\"matches snapshot\""]},"operators":{"distinct":3,"total":15,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":15,"physical":47},"errors":[],"lineEnd":91,"lineStart":45,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.007,"difficulty":1,"effort":19.651,"length":7,"time":1.092,"vocabulary":7,"volume":19.651,"operands":{"distinct":5,"total":5,"identifiers":["wrapper","mount","t","invoices","dispatch"]},"operators":{"distinct":2,"total":2,"identifiers":["=","()"]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":49,"lineStart":47,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.053,"difficulty":4.182,"effort":669.854,"length":41,"time":37.214,"vocabulary":15,"volume":160.183,"operands":{"distinct":11,"total":23,"identifiers":["mountWrapper","mount","t","invoices","dispatch","expect","prop","\"t\"","toEqual","\"dispatch\"","\"invoices\""]},"operators":{"distinct":4,"total":18,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":8},"errors":[],"lineEnd":58,"lineStart":51,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.014,"difficulty":1,"effort":41.209,"length":13,"time":2.289,"vocabulary":9,"volume":41.209,"operands":{"distinct":7,"total":7,"identifiers":["expect","wrapper","find","\".invoice\"","toHaveLength","invoices","length"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":62,"lineStart":60,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.024,"difficulty":2.778,"effort":200.944,"length":19,"time":11.164,"vocabulary":14,"volume":72.34,"operands":{"distinct":9,"total":10,"identifiers":["newWrapper","mount","t","dispatch","expect","find","\".message\"","toHaveLength","1"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","()","[]","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":69,"lineStart":64,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.079,"difficulty":3.6,"effort":851.787,"length":66,"time":47.322,"vocabulary":12,"volume":236.608,"operands":{"distinct":10,"total":36,"identifiers":["expect","wrapper","find","PageWrapper","toHaveLength","1","PageHeader","PageHeaderTitle","PageHeaderActions","PageContent"]},"operators":{"distinct":2,"total":30,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":18,"physical":8},"errors":[],"lineEnd":78,"lineStart":71,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":2.444,"effort":199.001,"length":22,"time":11.056,"vocabulary":13,"volume":81.41,"operands":{"distinct":9,"total":11,"identifiers":["HeaderActions","wrapper","find","PageHeaderActions","first","expect","Button","toHaveLength","4"]},"operators":{"distinct":4,"total":11,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":4},"errors":[],"lineEnd":83,"lineStart":80,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.023,"difficulty":2.222,"effort":156.241,"length":19,"time":8.68,"vocabulary":13,"volume":70.308,"operands":{"distinct":9,"total":10,"identifiers":["tree","renderer","create","t","dispatch","invoices","toJSON","expect","toMatchSnapshot"]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":90,"lineStart":85,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.018,"difficulty":1.688,"effort":93.405,"length":16,"time":5.189,"vocabulary":11,"volume":55.351,"operands":{"distinct":8,"total":9,"identifiers":["wrapper","spySetFilter","actions","filterBtn","beforeEach","it","\"set correct filter\"","\"display only invoices with matched status\""]},"operators":{"distinct":3,"total":7,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":33},"errors":[],"lineEnd":125,"lineStart":93,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.084,"difficulty":2.917,"effort":736.794,"length":52,"time":40.933,"vocabulary":29,"volume":252.615,"operands":{"distinct":24,"total":28,"identifiers":["spySetFilter","jest","spyOn","Invoices","prototype","\"setFilter\"","wrapper","mount","t","invoices","dispatch","actions","find","PageHeaderActions","first","filterBtn","Button","last","simulate","\"click\"","target","dataset","filter","\"paid\""]},"operators":{"distinct":5,"total":24,"identifiers":["=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":14,"physical":15},"errors":[],"lineEnd":109,"lineStart":95,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.039,"difficulty":3.2,"effort":377.69,"length":31,"time":20.983,"vocabulary":14,"volume":118.028,"operands":{"distinct":10,"total":16,"identifiers":["expect","spySetFilter","toHaveBeenCalled","filter","wrapper","state","toEqual","\"paid\"","not","\"pending\""]},"operators":{"distinct":4,"total":15,"identifiers":["()",".","const","="]}},"paramCount":0,"sloc":{"logical":8,"physical":6},"errors":[],"lineEnd":116,"lineStart":111,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.041,"difficulty":3.409,"effort":422.727,"length":31,"time":23.485,"vocabulary":16,"volume":124,"operands":{"distinct":11,"total":15,"identifiers":["filter","wrapper","state","filteredInvoices","invoices","invoice","expect","find","\".invoice\"","toHaveLength","length"]},"operators":{"distinct":5,"total":16,"identifiers":["const","=",".","()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":7},"errors":[],"lineEnd":124,"lineStart":118,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["invoice","status","filter"]},"operators":{"distinct":2,"total":2,"identifiers":["===","."]}},"paramCount":1,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":121,"lineStart":121,"name":"<anon method-17>","paramNames":["invoice"],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.752,"halstead":{"bugs":0.051,"difficulty":0.837,"effort":2316.375,"length":23.556,"time":128.687,"vocabulary":5.111,"volume":153.666,"operands":{"distinct":4.5,"total":12.333},"operators":{"distinct":0.611,"total":11.222}},"paramCount":0.056,"sloc":{"logical":7.389,"physical":7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":35.497,"halstead":{"bugs":0.026,"difficulty":1.928,"effort":236.676,"length":20.882,"time":13.149,"vocabulary":10.235,"volume":79.252,"operands":{"distinct":7.471,"total":11.118},"operators":{"distinct":2.765,"total":9.765}},"paramCount":0.059,"sloc":{"logical":6.588,"physical":9.353}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/helpers/__tests__/form.spec.js","testCases":45,"smells":86,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  107 |     const invoiceData = getInvoiceData(formData);\n  108 |     // Include custom invoiceID\n> 109 |     expect(invoiceData).not.toHaveProperty('invoiceID');\n      |    ^ Duplicate Assert\n  110 |     // Include Rows & Recipient Data\n  111 |     expect(invoiceData).toHaveProperty('rows');\n  112 |     expect(invoiceData).toHaveProperty('recipient');","start":{"line":109,"column":4,"index":2494}},{"frame":"  109 |     expect(invoiceData).not.toHaveProperty('invoiceID');\n  110 |     // Include Rows & Recipient Data\n> 111 |     expect(invoiceData).toHaveProperty('rows');\n      |    ^ Duplicate Assert\n  112 |     expect(invoiceData).toHaveProperty('recipient');\n  113 |     expect(invoiceData).toHaveProperty('currency');\n  114 |     // Not include non-required data","start":{"line":111,"column":4,"index":2588}},{"frame":"  110 |     // Include Rows & Recipient Data\n  111 |     expect(invoiceData).toHaveProperty('rows');\n> 112 |     expect(invoiceData).toHaveProperty('recipient');\n      |    ^ Duplicate Assert\n  113 |     expect(invoiceData).toHaveProperty('currency');\n  114 |     // Not include non-required data\n  115 |     expect(invoiceData).not.toHaveProperty('dueDate');","start":{"line":112,"column":4,"index":2636}},{"frame":"  111 |     expect(invoiceData).toHaveProperty('rows');\n  112 |     expect(invoiceData).toHaveProperty('recipient');\n> 113 |     expect(invoiceData).toHaveProperty('currency');\n      |    ^ Duplicate Assert\n  114 |     // Not include non-required data\n  115 |     expect(invoiceData).not.toHaveProperty('dueDate');\n  116 |     expect(invoiceData).not.toHaveProperty('discount');","start":{"line":113,"column":4,"index":2689}},{"frame":"  113 |     expect(invoiceData).toHaveProperty('currency');\n  114 |     // Not include non-required data\n> 115 |     expect(invoiceData).not.toHaveProperty('dueDate');\n      |    ^ Duplicate Assert\n  116 |     expect(invoiceData).not.toHaveProperty('discount');\n  117 |     expect(invoiceData).not.toHaveProperty('tax');\n  118 |     expect(invoiceData).not.toHaveProperty('note');","start":{"line":115,"column":4,"index":2778}},{"frame":"  114 |     // Not include non-required data\n  115 |     expect(invoiceData).not.toHaveProperty('dueDate');\n> 116 |     expect(invoiceData).not.toHaveProperty('discount');\n      |    ^ Duplicate Assert\n  117 |     expect(invoiceData).not.toHaveProperty('tax');\n  118 |     expect(invoiceData).not.toHaveProperty('note');\n  119 |     expect(invoiceData).not.toHaveProperty('settings');","start":{"line":116,"column":4,"index":2833}},{"frame":"  115 |     expect(invoiceData).not.toHaveProperty('dueDate');\n  116 |     expect(invoiceData).not.toHaveProperty('discount');\n> 117 |     expect(invoiceData).not.toHaveProperty('tax');\n      |    ^ Duplicate Assert\n  118 |     expect(invoiceData).not.toHaveProperty('note');\n  119 |     expect(invoiceData).not.toHaveProperty('settings');\n  120 |     expect(invoiceData).not.toHaveProperty('savedSettings');","start":{"line":117,"column":4,"index":2889}},{"frame":"  116 |     expect(invoiceData).not.toHaveProperty('discount');\n  117 |     expect(invoiceData).not.toHaveProperty('tax');\n> 118 |     expect(invoiceData).not.toHaveProperty('note');\n      |    ^ Duplicate Assert\n  119 |     expect(invoiceData).not.toHaveProperty('settings');\n  120 |     expect(invoiceData).not.toHaveProperty('savedSettings');\n  121 |   });","start":{"line":118,"column":4,"index":2940}},{"frame":"  117 |     expect(invoiceData).not.toHaveProperty('tax');\n  118 |     expect(invoiceData).not.toHaveProperty('note');\n> 119 |     expect(invoiceData).not.toHaveProperty('settings');\n      |    ^ Duplicate Assert\n  120 |     expect(invoiceData).not.toHaveProperty('savedSettings');\n  121 |   });\n  122 |","start":{"line":119,"column":4,"index":2992}},{"frame":"  118 |     expect(invoiceData).not.toHaveProperty('note');\n  119 |     expect(invoiceData).not.toHaveProperty('settings');\n> 120 |     expect(invoiceData).not.toHaveProperty('savedSettings');\n      |    ^ Duplicate Assert\n  121 |   });\n  122 |\n  123 |   it('Should return rows data correctly', () => {","start":{"line":120,"column":4,"index":3048}},{"frame":"  129 |     let invoiceData = getInvoiceData(formData);\n  130 |     // Filter out data\n> 131 |     expect(invoiceData.recipient).not.toHaveProperty('new');\n      |    ^ Duplicate Assert\n  132 |     expect(invoiceData.recipient).not.toHaveProperty('select');\n  133 |     expect(invoiceData.recipient).not.toHaveProperty('newRecipient');\n  134 |","start":{"line":131,"column":4,"index":3395}},{"frame":"  130 |     // Filter out data\n  131 |     expect(invoiceData.recipient).not.toHaveProperty('new');\n> 132 |     expect(invoiceData.recipient).not.toHaveProperty('select');\n      |    ^ Duplicate Assert\n  133 |     expect(invoiceData.recipient).not.toHaveProperty('newRecipient');\n  134 |\n  135 |     // Choose new contact data","start":{"line":132,"column":4,"index":3456}},{"frame":"  131 |     expect(invoiceData.recipient).not.toHaveProperty('new');\n  132 |     expect(invoiceData.recipient).not.toHaveProperty('select');\n> 133 |     expect(invoiceData.recipient).not.toHaveProperty('newRecipient');\n      |    ^ Duplicate Assert\n  134 |\n  135 |     // Choose new contact data\n  136 |     expect(invoiceData.recipient).toHaveProperty('fullname');","start":{"line":133,"column":4,"index":3520}},{"frame":"  134 |\n  135 |     // Choose new contact data\n> 136 |     expect(invoiceData.recipient).toHaveProperty('fullname');\n      |    ^ Duplicate Assert\n  137 |     expect(invoiceData.recipient).toHaveProperty('email');\n  138 |     expect(invoiceData.recipient).not.toHaveProperty('company');\n  139 |     expect(invoiceData.recipient).not.toHaveProperty('phone');","start":{"line":136,"column":4,"index":3622}},{"frame":"  134 |\n  135 |     // Choose new contact data\n> 136 |     expect(invoiceData.recipient).toHaveProperty('fullname');\n      |    ^ Duplicate Assert\n  137 |     expect(invoiceData.recipient).toHaveProperty('email');\n  138 |     expect(invoiceData.recipient).not.toHaveProperty('company');\n  139 |     expect(invoiceData.recipient).not.toHaveProperty('phone');","start":{"line":136,"column":4,"index":3622}},{"frame":"  135 |     // Choose new contact data\n  136 |     expect(invoiceData.recipient).toHaveProperty('fullname');\n> 137 |     expect(invoiceData.recipient).toHaveProperty('email');\n      |    ^ Duplicate Assert\n  138 |     expect(invoiceData.recipient).not.toHaveProperty('company');\n  139 |     expect(invoiceData.recipient).not.toHaveProperty('phone');\n  140 |","start":{"line":137,"column":4,"index":3684}},{"frame":"  135 |     // Choose new contact data\n  136 |     expect(invoiceData.recipient).toHaveProperty('fullname');\n> 137 |     expect(invoiceData.recipient).toHaveProperty('email');\n      |    ^ Duplicate Assert\n  138 |     expect(invoiceData.recipient).not.toHaveProperty('company');\n  139 |     expect(invoiceData.recipient).not.toHaveProperty('phone');\n  140 |","start":{"line":137,"column":4,"index":3684}},{"frame":"  136 |     expect(invoiceData.recipient).toHaveProperty('fullname');\n  137 |     expect(invoiceData.recipient).toHaveProperty('email');\n> 138 |     expect(invoiceData.recipient).not.toHaveProperty('company');\n      |    ^ Duplicate Assert\n  139 |     expect(invoiceData.recipient).not.toHaveProperty('phone');\n  140 |\n  141 |     // Choose selected contact data","start":{"line":138,"column":4,"index":3743}},{"frame":"  137 |     expect(invoiceData.recipient).toHaveProperty('email');\n  138 |     expect(invoiceData.recipient).not.toHaveProperty('company');\n> 139 |     expect(invoiceData.recipient).not.toHaveProperty('phone');\n      |    ^ Duplicate Assert\n  140 |\n  141 |     // Choose selected contact data\n  142 |     (formData.recipient.newRecipient = false),","start":{"line":139,"column":4,"index":3808}},{"frame":"  142 |     (formData.recipient.newRecipient = false),\n  143 |       (invoiceData = getInvoiceData(formData));\n> 144 |     expect(invoiceData.recipient).toHaveProperty('fullname');\n      |    ^ Duplicate Assert\n  145 |     expect(invoiceData.recipient).toHaveProperty('email');\n  146 |     expect(invoiceData.recipient).toHaveProperty('company');\n  147 |     expect(invoiceData.recipient).toHaveProperty('phone');","start":{"line":144,"column":4,"index":4003}},{"frame":"  142 |     (formData.recipient.newRecipient = false),\n  143 |       (invoiceData = getInvoiceData(formData));\n> 144 |     expect(invoiceData.recipient).toHaveProperty('fullname');\n      |    ^ Duplicate Assert\n  145 |     expect(invoiceData.recipient).toHaveProperty('email');\n  146 |     expect(invoiceData.recipient).toHaveProperty('company');\n  147 |     expect(invoiceData.recipient).toHaveProperty('phone');","start":{"line":144,"column":4,"index":4003}},{"frame":"  143 |       (invoiceData = getInvoiceData(formData));\n  144 |     expect(invoiceData.recipient).toHaveProperty('fullname');\n> 145 |     expect(invoiceData.recipient).toHaveProperty('email');\n      |    ^ Duplicate Assert\n  146 |     expect(invoiceData.recipient).toHaveProperty('company');\n  147 |     expect(invoiceData.recipient).toHaveProperty('phone');\n  148 |     expect(invoiceData.recipient).toHaveProperty('id');","start":{"line":145,"column":4,"index":4065}},{"frame":"  143 |       (invoiceData = getInvoiceData(formData));\n  144 |     expect(invoiceData.recipient).toHaveProperty('fullname');\n> 145 |     expect(invoiceData.recipient).toHaveProperty('email');\n      |    ^ Duplicate Assert\n  146 |     expect(invoiceData.recipient).toHaveProperty('company');\n  147 |     expect(invoiceData.recipient).toHaveProperty('phone');\n  148 |     expect(invoiceData.recipient).toHaveProperty('id');","start":{"line":145,"column":4,"index":4065}},{"frame":"  144 |     expect(invoiceData.recipient).toHaveProperty('fullname');\n  145 |     expect(invoiceData.recipient).toHaveProperty('email');\n> 146 |     expect(invoiceData.recipient).toHaveProperty('company');\n      |    ^ Duplicate Assert\n  147 |     expect(invoiceData.recipient).toHaveProperty('phone');\n  148 |     expect(invoiceData.recipient).toHaveProperty('id');\n  149 |   });","start":{"line":146,"column":4,"index":4124}},{"frame":"  145 |     expect(invoiceData.recipient).toHaveProperty('email');\n  146 |     expect(invoiceData.recipient).toHaveProperty('company');\n> 147 |     expect(invoiceData.recipient).toHaveProperty('phone');\n      |    ^ Duplicate Assert\n  148 |     expect(invoiceData.recipient).toHaveProperty('id');\n  149 |   });\n  150 |","start":{"line":147,"column":4,"index":4185}},{"frame":"  146 |     expect(invoiceData.recipient).toHaveProperty('company');\n  147 |     expect(invoiceData.recipient).toHaveProperty('phone');\n> 148 |     expect(invoiceData.recipient).toHaveProperty('id');\n      |    ^ Duplicate Assert\n  149 |   });\n  150 |\n  151 |   it('should return dueDate data when required', () => {","start":{"line":148,"column":4,"index":4244}},{"frame":"  167 |     });\n  168 |     const invoiceData = getInvoiceData(newFormData);\n> 169 |     expect(invoiceData.dueDate).toEqual({\n      |    ^ Duplicate Assert\n  170 |       selectedDate: {\n  171 |         date: 20,\n  172 |         months: 9,","start":{"line":169,"column":4,"index":4838}},{"frame":"  176 |       paymentTerm: null,\n  177 |     });\n> 178 |     expect(invoiceData.dueDate).not.toEqual({\n      |    ^ Duplicate Assert\n  179 |       date: 2,\n  180 |       months: 10,\n  181 |       years: 2016,","start":{"line":178,"column":4,"index":5025}},{"frame":"  555 |     const validation = validateRows(rows);\n  556 |     expect(validation).toEqual(false);\n> 557 |     expect(openDialog).toBeCalledWith({\n      |    ^ Duplicate Assert\n  558 |       type: 'warning',\n  559 |       title: i18n.t('dialog:validation:rows:qtyZero:title'),\n  560 |       message: i18n.t('dialog:validation:rows:qtyZero:message'),","start":{"line":557,"column":4,"index":15828}},{"frame":"  570 |     const validation2 = validateRows(rows2);\n  571 |     expect(validation2).toEqual(false);\n> 572 |     expect(openDialog).toBeCalledWith({\n      |    ^ Duplicate Assert\n  573 |       type: 'warning',\n  574 |       title: i18n.t('dialog:validation:rows:qtyZero:title'),\n  575 |       message: i18n.t('dialog:validation:rows:qtyZero:message'),","start":{"line":572,"column":4,"index":16267}},{"frame":"  696 |     const validation1 = validateTax(true, tax1);\n  697 |     expect(validation1).toEqual(false);\n> 698 |     expect(openDialog).toBeCalledWith({\n      |    ^ Duplicate Assert\n  699 |       type: 'warning',\n  700 |       title: i18n.t('dialog:validation:tax:title'),\n  701 |       message: i18n.t('dialog:validation:tax:message'),","start":{"line":698,"column":4,"index":19749}},{"frame":"  704 |     const validation2 = validateTax(true, tax2);\n  705 |     expect(validation2).toEqual(false);\n> 706 |     expect(openDialog).toBeCalledWith({\n      |    ^ Duplicate Assert\n  707 |       type: 'warning',\n  708 |       title: i18n.t('dialog:validation:tax:title'),\n  709 |       message: i18n.t('dialog:validation:tax:message'),","start":{"line":706,"column":4,"index":20018}},{"frame":"  712 |     const validation3 = validateTax(true, tax3);\n  713 |     expect(validation3).toEqual(false);\n> 714 |     expect(openDialog).toBeCalledWith({\n      |    ^ Duplicate Assert\n  715 |       type: 'warning',\n  716 |       title: i18n.t('dialog:validation:tax:title'),\n  717 |       message: i18n.t('dialog:validation:tax:message'),","start":{"line":714,"column":4,"index":20287}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  127 |\n  128 |   it('should return correct recipient data', () => {\n> 129 |     let invoiceData = getInvoiceData(formData);\n      |                      ^ Eager Test\n  130 |     // Filter out data\n  131 |     expect(invoiceData.recipient).not.toHaveProperty('new');\n  132 |     expect(invoiceData.recipient).not.toHaveProperty('select');","start":{"line":129,"column":22,"index":3342}},{"frame":"  141 |     // Choose selected contact data\n  142 |     (formData.recipient.newRecipient = false),\n> 143 |       (invoiceData = getInvoiceData(formData));\n      |                     ^ Eager Test\n  144 |     expect(invoiceData.recipient).toHaveProperty('fullname');\n  145 |     expect(invoiceData.recipient).toHaveProperty('email');\n  146 |     expect(invoiceData.recipient).toHaveProperty('company');","start":{"line":143,"column":21,"index":3972}},{"frame":"  553 |       },\n  554 |     ];\n> 555 |     const validation = validateRows(rows);\n      |                       ^ Eager Test\n  556 |     expect(validation).toEqual(false);\n  557 |     expect(openDialog).toBeCalledWith({\n  558 |       type: 'warning',","start":{"line":555,"column":23,"index":15765}},{"frame":"  568 |       },\n  569 |     ];\n> 570 |     const validation2 = validateRows(rows2);\n      |                        ^ Eager Test\n  571 |     expect(validation2).toEqual(false);\n  572 |     expect(openDialog).toBeCalledWith({\n  573 |       type: 'warning',","start":{"line":570,"column":24,"index":16202}},{"frame":"  694 |     const tax2 = { amount: '' };\n  695 |     const tax3 = { amount: -1 };\n> 696 |     const validation1 = validateTax(true, tax1);\n      |                        ^ Eager Test\n  697 |     expect(validation1).toEqual(false);\n  698 |     expect(openDialog).toBeCalledWith({\n  699 |       type: 'warning',","start":{"line":696,"column":24,"index":19680}},{"frame":"  702 |     });\n  703 |\n> 704 |     const validation2 = validateTax(true, tax2);\n      |                        ^ Eager Test\n  705 |     expect(validation2).toEqual(false);\n  706 |     expect(openDialog).toBeCalledWith({\n  707 |       type: 'warning',","start":{"line":704,"column":24,"index":19949}},{"frame":"  710 |     });\n  711 |\n> 712 |     const validation3 = validateTax(true, tax3);\n      |                        ^ Eager Test\n  713 |     expect(validation3).toEqual(false);\n  714 |     expect(openDialog).toBeCalledWith({\n  715 |       type: 'warning',","start":{"line":712,"column":24,"index":20218}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  105 |\n  106 |   it('Should return correct data shape', () => {\n> 107 |     const invoiceData = getInvoiceData(formData);\n      |                        ^ Lazy Test\n  108 |     // Include custom invoiceID\n  109 |     expect(invoiceData).not.toHaveProperty('invoiceID');\n  110 |     // Include Rows & Recipient Data","start":{"line":107,"column":24,"index":2432}},{"frame":"  122 |\n  123 |   it('Should return rows data correctly', () => {\n> 124 |     const invoiceData = getInvoiceData(formData);\n      |                        ^ Lazy Test\n  125 |     expect(invoiceData.rows.length).toEqual(2);\n  126 |   });\n  127 |","start":{"line":124,"column":24,"index":3186}},{"frame":"  127 |\n  128 |   it('should return correct recipient data', () => {\n> 129 |     let invoiceData = getInvoiceData(formData);\n      |                      ^ Lazy Test\n  130 |     // Filter out data\n  131 |     expect(invoiceData.recipient).not.toHaveProperty('new');\n  132 |     expect(invoiceData.recipient).not.toHaveProperty('select');","start":{"line":129,"column":22,"index":3342}},{"frame":"  166 |       }),\n  167 |     });\n> 168 |     const invoiceData = getInvoiceData(newFormData);\n      |                        ^ Lazy Test\n  169 |     expect(invoiceData.dueDate).toEqual({\n  170 |       selectedDate: {\n  171 |         date: 20,","start":{"line":168,"column":24,"index":4805}},{"frame":"  192 |     });\n  193 |\n> 194 |     const invoiceData = getInvoiceData(newFormData);\n      |                        ^ Lazy Test\n  195 |     expect(invoiceData.currency).toEqual({\n  196 |       code: 'USD',\n  197 |       placement: 'before',","start":{"line":194,"column":24,"index":5462}},{"frame":"  220 |       }),\n  221 |     });\n> 222 |     const invoiceData = getInvoiceData(newFormData);\n      |                        ^ Lazy Test\n  223 |     expect(invoiceData.tax).toEqual(newFormData.tax);\n  224 |   });\n  225 |","start":{"line":222,"column":24,"index":6225}},{"frame":"  236 |       }),\n  237 |     });\n> 238 |     const invoiceData = getInvoiceData(newFormData);\n      |                        ^ Lazy Test\n  239 |     expect(invoiceData.discount).toEqual({\n  240 |       type: newFormData.discount.type,\n  241 |       amount: newFormData.discount.amount,","start":{"line":238,"column":24,"index":6727}},{"frame":"  254 |       }),\n  255 |     });\n> 256 |     const invoiceData = getInvoiceData(newFormData);\n      |                        ^ Lazy Test\n  257 |     expect(invoiceData.note).toEqual(newFormData.note.content);\n  258 |   });\n  259 |","start":{"line":256,"column":24,"index":7280}},{"frame":"  266 |       }),\n  267 |     });\n> 268 |     const invoiceData = getInvoiceData(newFormData);\n      |                        ^ Lazy Test\n  269 |     expect(invoiceData.invoiceID).toEqual('Invoice: 123-456-789');\n  270 |   });\n  271 |","start":{"line":268,"column":24,"index":7709}},{"frame":"  288 |       }),\n  289 |     });\n> 290 |     const invoiceData = getInvoiceData(newFormData);\n      |                        ^ Lazy Test\n  291 |     expect(invoiceData._id).toEqual(invoiceID);\n  292 |     expect(invoiceData._rev).toEqual(invoiceRev);\n  293 |     expect(invoiceData.created_at).toEqual(createdDate);","start":{"line":290,"column":24,"index":8444}},{"frame":"  383 |\n  384 |   it('should PASS with CORRECT data', () => {\n> 385 |     const validation = validateFormData(formData);\n      |                       ^ Lazy Test\n  386 |     expect(validation).toEqual(true);\n  387 |   });\n  388 |","start":{"line":385,"column":23,"index":10762}},{"frame":"  393 |       }),\n  394 |     });\n> 395 |     const validation = validateFormData(newFormData);\n      |                       ^ Lazy Test\n  396 |     expect(validation).toEqual(false);\n  397 |   });\n  398 |","start":{"line":395,"column":23,"index":11066}},{"frame":"  399 |   it('should NOT pass with INCORRECT rows data', () => {\n  400 |     formData.rows[0].price = 0;\n> 401 |     const validation = validateFormData(formData);\n      |                       ^ Lazy Test\n  402 |     expect(validation).toEqual(false);\n  403 |   });\n  404 |","start":{"line":401,"column":23,"index":11255}},{"frame":"  405 |   it('should NOT pass with INCORRECT dueDate data', () => {\n  406 |     formData.dueDate.selectedDate = null;\n> 407 |     const validation = validateFormData(formData);\n      |                       ^ Lazy Test\n  408 |     expect(validation).toEqual(false);\n  409 |   });\n  410 |","start":{"line":407,"column":23,"index":11454}},{"frame":"  416 |       placement: 'before'\n  417 |     };\n> 418 |     const validation = validateFormData(formData);\n      |                       ^ Lazy Test\n  419 |     expect(validation).toEqual(false);\n  420 |   });\n  421 |","start":{"line":418,"column":23,"index":11739}},{"frame":"  422 |   it('should NOT pass with INCORRECT discount data', () => {\n  423 |     formData.discount.amount = 0;\n> 424 |     const validation = validateFormData(formData);\n      |                       ^ Lazy Test\n  425 |     expect(validation).toEqual(false);\n  426 |   });\n  427 |","start":{"line":424,"column":23,"index":11931}},{"frame":"  428 |   it('should NOT pass with INCORRECT tax data', () => {\n  429 |     formData.tax.amount = 0;\n> 430 |     const validation = validateFormData(formData);\n      |                       ^ Lazy Test\n  431 |     expect(validation).toEqual(false);\n  432 |   });\n  433 |","start":{"line":430,"column":23,"index":12113}},{"frame":"  434 |   it('should NOT pass with INCORRECT note data', () => {\n  435 |     formData.note.content = '';\n> 436 |     const validation = validateFormData(formData);\n      |                       ^ Lazy Test\n  437 |     expect(validation).toEqual(false);\n  438 |   });\n  439 |","start":{"line":436,"column":23,"index":12299}},{"frame":"  440 |   it('should NOT pass with INCORRECT invoiceID', () => {\n  441 |     formData.invoiceID = '';\n> 442 |     const validation = validateFormData(formData);\n      |                       ^ Lazy Test\n  443 |     expect(validation).toEqual(false);\n  444 |   });\n  445 | });","start":{"line":442,"column":23,"index":12482}},{"frame":"  451 |       new: {},\n  452 |     };\n> 453 |     const validation = validateRecipient(recipient);\n      |                       ^ Lazy Test\n  454 |     expect(validation).toEqual(false);\n  455 |     expect(openDialog).toBeCalledWith({\n  456 |       type: 'warning',","start":{"line":453,"column":23,"index":12739}},{"frame":"  468 |       },\n  469 |     };\n> 470 |     const validation = validateRecipient(recipient);\n      |                       ^ Lazy Test\n  471 |     expect(validation).toEqual(false);\n  472 |     expect(openDialog).toBeCalledWith({\n  473 |       type: 'warning',","start":{"line":470,"column":23,"index":13258}},{"frame":"  485 |       },\n  486 |     };\n> 487 |     const validation = validateRecipient(recipient);\n      |                       ^ Lazy Test\n  488 |     expect(validation).toEqual(false);\n  489 |     expect(openDialog).toBeCalledWith({\n  490 |       type: 'warning',","start":{"line":487,"column":23,"index":13783}},{"frame":"  498 |       newRecipient: false,\n  499 |     };\n> 500 |     const validation = validateRecipient(recipient);\n      |                       ^ Lazy Test\n  501 |     expect(validation).toEqual(true);\n  502 |   });\n  503 |","start":{"line":500,"column":23,"index":14196}},{"frame":"  512 |       },\n  513 |     };\n> 514 |     const validation = validateRecipient(recipient);\n      |                       ^ Lazy Test\n  515 |     expect(validation).toEqual(true);\n  516 |   });\n  517 | });","start":{"line":514,"column":23,"index":14592}},{"frame":"  520 |   it('should validate item description', () => {\n  521 |     const rows = [{ description: '' }];\n> 522 |     const validation = validateRows(rows);\n      |                       ^ Lazy Test\n  523 |     expect(validation).toEqual(false);\n  524 |     expect(openDialog).toBeCalledWith({\n  525 |       type: 'warning',","start":{"line":522,"column":23,"index":14816}},{"frame":"  536 |       },\n  537 |     ];\n> 538 |     const validation = validateRows(rows);\n      |                       ^ Lazy Test\n  539 |     expect(validation).toEqual(false);\n  540 |     expect(openDialog).toBeCalledWith({\n  541 |       type: 'warning',","start":{"line":538,"column":23,"index":15275}},{"frame":"  553 |       },\n  554 |     ];\n> 555 |     const validation = validateRows(rows);\n      |                       ^ Lazy Test\n  556 |     expect(validation).toEqual(false);\n  557 |     expect(openDialog).toBeCalledWith({\n  558 |       type: 'warning',","start":{"line":555,"column":23,"index":15765}},{"frame":"  585 |       },\n  586 |     ];\n> 587 |     const validation = validateRows(rows);\n      |                       ^ Lazy Test\n  588 |     expect(validation).toEqual(true);\n  589 |   });\n  590 | });","start":{"line":587,"column":23,"index":16713}},{"frame":"  597 |       paymentTerm: null,\n  598 |     };\n> 599 |     const validation = validateDueDate(true, dueDate);\n      |                       ^ Lazy Test\n  600 |     expect(validation).toEqual(false);\n  601 |     expect(openDialog).toBeCalledWith({\n  602 |       type: 'warning',","start":{"line":599,"column":23,"index":16989}},{"frame":"  610 |       selectedDate: null,\n  611 |     };\n> 612 |     const validation = validateDueDate(false, dueDate);\n      |                       ^ Lazy Test\n  613 |     expect(validation).toEqual(true);\n  614 |   });\n  615 |","start":{"line":612,"column":23,"index":17378}},{"frame":"  618 |       selectedDate: faker.date.future(),\n  619 |     };\n> 620 |     const validation = validateDueDate(true, dueDate);\n      |                       ^ Lazy Test\n  621 |     expect(validation).toEqual(true);\n  622 |   });\n  623 | });","start":{"line":620,"column":23,"index":17598}},{"frame":"  631 |       placement: 'before'\n  632 |     };\n> 633 |     const validation = validateCurrency(true, currency);\n      |                       ^ Lazy Test\n  634 |     expect(validation).toEqual(false);\n  635 |     expect(openDialog).toBeCalledWith({\n  636 |       type: 'warning',","start":{"line":633,"column":23,"index":17904}},{"frame":"  642 |   it('should pass when not required', () => {\n  643 |     const currency = {};\n> 644 |     const validation = validateCurrency(false, currency);\n      |                       ^ Lazy Test\n  645 |     expect(validation).toEqual(true);\n  646 |   });\n  647 |","start":{"line":644,"column":23,"index":18285}},{"frame":"  653 |       separator: 'commaDot',\n  654 |     };\n> 655 |     const validation = validateCurrency(true, currency);\n      |                       ^ Lazy Test\n  656 |     expect(validation).toEqual(true);\n  657 |   });\n  658 | });","start":{"line":655,"column":23,"index":18562}},{"frame":"  664 |       amount: 0,\n  665 |     };\n> 666 |     const validation = validateDiscount(true, discount);\n      |                       ^ Lazy Test\n  667 |     expect(validation).toEqual(false);\n  668 |     expect(openDialog).toBeCalledWith({\n  669 |       type: 'warning',","start":{"line":666,"column":23,"index":18818}},{"frame":"  675 |   it('should pass when not required', () => {\n  676 |     const discount = {};\n> 677 |     const validation = validateDiscount(false, discount);\n      |                       ^ Lazy Test\n  678 |     expect(validation).toEqual(true);\n  679 |   });\n  680 |","start":{"line":677,"column":23,"index":19181}},{"frame":"  684 |       amount: 10,\n  685 |     };\n> 686 |     const validation = validateDiscount(true, discount);\n      |                       ^ Lazy Test\n  687 |     expect(validation).toEqual(true);\n  688 |   });\n  689 | });","start":{"line":686,"column":23,"index":19402}},{"frame":"  694 |     const tax2 = { amount: '' };\n  695 |     const tax3 = { amount: -1 };\n> 696 |     const validation1 = validateTax(true, tax1);\n      |                        ^ Lazy Test\n  697 |     expect(validation1).toEqual(false);\n  698 |     expect(openDialog).toBeCalledWith({\n  699 |       type: 'warning',","start":{"line":696,"column":24,"index":19680}},{"frame":"  721 |   it('should pass when not required', () => {\n  722 |     const tax = {};\n> 723 |     const validation = validateTax(false, tax);\n      |                       ^ Lazy Test\n  724 |     expect(validation).toEqual(true);\n  725 |   });\n  726 |","start":{"line":723,"column":23,"index":20558}},{"frame":"  729 |       amount: 10,\n  730 |     };\n> 731 |     const validation = validateTax(true, tax);\n      |                       ^ Lazy Test\n  732 |     expect(validation).toEqual(true);\n  733 |   });\n  734 | });","start":{"line":731,"column":23,"index":20739}},{"frame":"  739 |       content: '',\n  740 |     };\n> 741 |     const validation = validateNote(true, note);\n      |                       ^ Lazy Test\n  742 |     expect(validation).toEqual(false);\n  743 |     expect(openDialog).toBeCalledWith({\n  744 |       type: 'warning',","start":{"line":741,"column":23,"index":20955}},{"frame":"  750 |   it('should pass when not required', () => {\n  751 |     const note = {};\n> 752 |     const validation = validateNote(false, note);\n      |                       ^ Lazy Test\n  753 |     expect(validation).toEqual(true);\n  754 |   });\n  755 |","start":{"line":752,"column":23,"index":21298}},{"frame":"  758 |       content: faker.lorem.paragraph(),\n  759 |     };\n> 760 |     const validation = validateNote(true, note);\n      |                       ^ Lazy Test\n  761 |     expect(validation).toEqual(true);\n  762 |   });\n  763 | });","start":{"line":760,"column":23,"index":21505}},{"frame":"  793 |   it('should return current contact if it exist', () => {\n  794 |     const currentContact = allContacts[1];\n> 795 |     const editRecipient = setEditRecipient(allContacts, currentContact);\n      |                          ^ Lazy Test\n  796 |     expect(editRecipient).toEqual({\n  797 |       newRecipient: false,\n  798 |       select: currentContact,","start":{"line":795,"column":26,"index":22479}},{"frame":"  808 |       phone: faker.phone.phoneNumber(),\n  809 |     };\n> 810 |     const editRecipient = setEditRecipient(allContacts, currentContact);\n      |                          ^ Lazy Test\n  811 |     expect(editRecipient).toEqual({\n  812 |       newRecipient: true,\n  813 |       new: {","start":{"line":810,"column":26,"index":22966}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  123 |   it('Should return rows data correctly', () => {\n  124 |     const invoiceData = getInvoiceData(formData);\n> 125 |     expect(invoiceData.rows.length).toEqual(2);\n      |                                            ^ Magic Number\n  126 |   });\n  127 |\n  128 |   it('should return correct recipient data', () => {","start":{"line":125,"column":44,"index":3256}}]}],"metrics":{"aggregate":{"cyclomatic":59,"cyclomaticDensity":6.766,"halstead":{"bugs":8.009,"difficulty":37.357,"effort":897536.403,"length":3034,"time":49863.134,"vocabulary":242,"volume":24025.831,"operands":{"distinct":231,"total":1569,"identifiers":["jest","mock","\"../../renderers/dialog\"","openDialog","require","describe","\"getInvoiceData\"","formData","beforeEach","invoiceID","\"Invoice: 123-456-789\"","recipient","newRecipient","true","select","id","uuidv4","fullname","faker","name","findName","email","internet","company","companyName","phone","phoneNumber","new","rows","description","commerce","productName","price","quantity","random","number","100","dueDate","selectedDate","null","paymentTerm","useCustom","currency","code","\"USD\"","placement","\"before\"","fraction","2","separator","\"commaDot\"","discount","tax","note","settings","editMode","active","false","open","required_fields","savedSettings","it","\"Should return correct data shape\"","invoiceData","getInvoiceData","expect","not","toHaveProperty","\"invoiceID\"","\"rows\"","\"recipient\"","\"currency\"","\"dueDate\"","\"discount\"","\"tax\"","\"note\"","\"settings\"","\"savedSettings\"","\"Should return rows data correctly\"","length","toEqual","\"should return correct recipient data\"","\"new\"","\"select\"","\"newRecipient\"","\"fullname\"","\"email\"","\"company\"","\"phone\"","\"id\"","\"should return dueDate data when required\"","newFormData","Object","assign","date","20","months","9","years","2017","10","2016","\"should return currency data when required\"","\"VND\"","\"after\"","0","\"spaceDot\"","\"should return tax data when required\"","amount","method","\"reverse\"","tin","\"123-456-789\"","\"should return discount when required\"","type","\"flat\"","\"should return note data when required\"","content","lorem","paragraph","\"should return invoiceID data when required\"","\"should return correct metadata on editMode\"","invoiceRev","createdDate","Date","now","data","omit","\"settings, savedSettings\"","_id","_rev","created_at","\"set status as pending when creating a new invoice\"","\"always generate _id when creating a new invoice\"","\"does not include _rev when creating a new invoice\"","\"always recalculate subTotal and grandTotal\"","\"validateFormData\"","\"Invoice 123-456-789\"","future","\"percentage\"","\"should PASS with CORRECT data\"","validation","validateFormData","\"should NOT pass with INCORRECT recipient data\"","\"should NOT pass with INCORRECT rows data\"","\"should NOT pass with INCORRECT dueDate data\"","\"should NOT pass with INCORRECT currency data\"","1","\"should NOT pass with INCORRECT discount data\"","\"should NOT pass with INCORRECT tax data\"","\"should NOT pass with INCORRECT note data\"","\"\"","\"should NOT pass with INCORRECT invoiceID\"","\"validateRecipient\"","\"should validate data presence\"","validateRecipient","toBeCalledWith","\"warning\"","title","i18n","t","\"dialog:validation:recipient:empty:title\"","message","\"dialog:validation:recipient:empty:message\"","\"should validate required fields data\"","\"dialog:validation:recipient:requiredFields:title\"","\"dialog:validation:recipient:requiredFields:message\"","\"should validate email format\"","\"invalid-email-address\"","\"dialog:validation:recipient:email:title\"","\"dialog:validation:recipient:email:message\"","\"should not validate selected contact\"","\"should pass correct recipient data\"","\"validateRows\"","\"should validate item description\"","validateRows","\"dialog:validation:rows:emptyDescription:title\"","\"dialog:validation:rows:emptyDescription:message\"","\"should validate item price\"","\"dialog:validation:rows:priceZero:title\"","\"dialog:validation:rows:priceZero:message\"","\"should validate item quantity\"","\"dialog:validation:rows:qtyZero:title\"","\"dialog:validation:rows:qtyZero:message\"","rows2","validation2","\"should pass correct rows data\"","\"validateDueDate\"","\"should validate selectedDate\"","validateDueDate","\"dialog:validation:dueDate:title\"","\"dialog:validation:dueDate:message\"","\"should pass when not required\"","\"should pass correct dueDate data\"","\"validateCurrency\"","\"should validate Currency\"","validateCurrency","\"dialog:validation:currency:fraction:title\"","\"dialog:validation:currency:fraction:message\"","\"should pass correct currency data\"","\"validateDiscount\"","\"should validate discount data\"","validateDiscount","\"dialog:validation:discount:title\"","\"dialog:validation:discount:message\"","\"should pass correct discount data\"","\"validateTax\"","\"should validate tax data\"","tax1","tax2","tax3","validation1","validateTax","\"dialog:validation:tax:title\"","\"dialog:validation:tax:message\"","validation3","\"should pass correct tax data\"","\"validateNote\"","\"should validate note data\"","validateNote","\"dialog:validation:note:title\"","\"dialog:validation:note:message\"","\"should pass correct note data\"","\"set correct recipient information to use in edit mode\"","allContacts","\"should return current contact if it exist\"","currentContact","editRecipient","setEditRecipient","\"should create a new contact if the current contact does not exist\"","\"random-string\""]},"operators":{"distinct":11,"total":1465,"identifiers":["()",".","const","=","function=>","let","{}",":","[]",",","- (prefix)"]}},"paramCount":0,"sloc":{"logical":872,"physical":822}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"faker","type":"esm"},{"line":3,"path":"uuid/v4","type":"esm"},{"line":4,"path":"../../../i18n/i18n","type":"esm"},{"line":5,"path":"lodash","type":"esm"},{"line":19,"path":"../form","type":"esm"}],"errors":[],"lineEnd":822,"lineStart":1,"maintainability":94.435,"methods":[{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.082,"difficulty":2.647,"effort":652.103,"length":57,"time":36.228,"vocabulary":20,"volume":246.35,"operands":{"distinct":17,"total":30,"identifiers":["formData","beforeEach","it","\"Should return correct data shape\"","\"Should return rows data correctly\"","\"should return correct recipient data\"","\"should return dueDate data when required\"","\"should return currency data when required\"","\"should return tax data when required\"","\"should return discount when required\"","\"should return note data when required\"","\"should return invoiceID data when required\"","\"should return correct metadata on editMode\"","\"set status as pending when creating a new invoice\"","\"always generate _id when creating a new invoice\"","\"does not include _rev when creating a new invoice\"","\"always recalculate subTotal and grandTotal\""]},"operators":{"distinct":3,"total":27,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":27,"physical":277},"errors":[],"lineEnd":301,"lineStart":25,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.351,"halstead":{"bugs":0.482,"difficulty":8.387,"effort":12137.267,"length":245,"time":674.293,"vocabulary":60,"volume":1447.188,"operands":{"distinct":53,"total":127,"identifiers":["formData","invoiceID","\"Invoice: 123-456-789\"","recipient","newRecipient","true","select","id","uuidv4","fullname","faker","name","findName","email","internet","company","companyName","phone","phoneNumber","new","rows","description","commerce","productName","price","quantity","random","number","100","dueDate","selectedDate","null","paymentTerm","useCustom","currency","code","\"USD\"","placement","\"before\"","fraction","2","separator","\"commaDot\"","discount","tax","note","settings","editMode","active","false","open","required_fields","savedSettings"]},"operators":{"distinct":7,"total":118,"identifiers":["=","{}",":","()",".","[]",","]}},"paramCount":0,"sloc":{"logical":74,"physical":78},"errors":[],"lineEnd":104,"lineStart":27,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.13,"difficulty":6.25,"effort":2431.085,"length":90,"time":135.06,"vocabulary":20,"volume":388.974,"operands":{"distinct":16,"total":50,"identifiers":["invoiceData","getInvoiceData","formData","expect","not","toHaveProperty","\"invoiceID\"","\"rows\"","\"recipient\"","\"currency\"","\"dueDate\"","\"discount\"","\"tax\"","\"note\"","\"settings\"","\"savedSettings\""]},"operators":{"distinct":4,"total":40,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":22,"physical":16},"errors":[],"lineEnd":121,"lineStart":106,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.02,"difficulty":2.25,"effort":137.125,"length":17,"time":7.618,"vocabulary":12,"volume":60.944,"operands":{"distinct":8,"total":9,"identifiers":["invoiceData","getInvoiceData","formData","expect","rows","length","toEqual","2"]},"operators":{"distinct":4,"total":8,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":126,"lineStart":123,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.333,"halstead":{"bugs":0.199,"difficulty":8.824,"effort":5270.781,"length":136,"time":292.821,"vocabulary":21,"volume":597.355,"operands":{"distinct":17,"total":75,"identifiers":["invoiceData","getInvoiceData","formData","expect","recipient","not","toHaveProperty","\"new\"","\"select\"","\"newRecipient\"","\"fullname\"","\"email\"","\"company\"","\"phone\"","newRecipient","false","\"id\""]},"operators":{"distinct":4,"total":61,"identifiers":["let","=","()","."]}},"paramCount":0,"sloc":{"logical":30,"physical":22},"errors":[],"lineEnd":149,"lineStart":128,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.185,"difficulty":6.692,"effort":3714.231,"length":111,"time":206.346,"vocabulary":32,"volume":555,"operands":{"distinct":26,"total":58,"identifiers":["newFormData","Object","assign","formData","dueDate","selectedDate","date","20","months","9","years","2017","useCustom","true","paymentTerm","null","settings","required_fields","invoiceData","getInvoiceData","expect","toEqual","not","2","10","2016"]},"operators":{"distinct":6,"total":53,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":29,"physical":33},"errors":[],"lineEnd":183,"lineStart":151,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.145,"difficulty":5.192,"effort":2258.654,"length":87,"time":125.481,"vocabulary":32,"volume":435,"operands":{"distinct":26,"total":45,"identifiers":["newFormData","Object","assign","formData","settings","required_fields","currency","true","invoiceData","getInvoiceData","expect","toEqual","code","\"USD\"","placement","\"before\"","fraction","2","separator","\"commaDot\"","dueDate","not","\"VND\"","\"after\"","0","\"spaceDot\""]},"operators":{"distinct":6,"total":42,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":21,"physical":23},"errors":[],"lineEnd":207,"lineStart":185,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.114,"difficulty":5.143,"effort":1760.667,"length":72,"time":97.815,"vocabulary":27,"volume":342.352,"operands":{"distinct":21,"total":36,"identifiers":["newFormData","Object","assign","formData","tax","amount","faker","random","number","20","method","\"reverse\"","tin","\"123-456-789\"","settings","required_fields","true","invoiceData","getInvoiceData","expect","toEqual"]},"operators":{"distinct":6,"total":36,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":16,"physical":16},"errors":[],"lineEnd":224,"lineStart":209,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.125,"difficulty":6.316,"effort":2375.699,"length":81,"time":131.983,"vocabulary":25,"volume":376.152,"operands":{"distinct":19,"total":40,"identifiers":["newFormData","Object","assign","formData","discount","amount","faker","random","number","20","type","\"flat\"","settings","required_fields","true","invoiceData","getInvoiceData","expect","toEqual"]},"operators":{"distinct":6,"total":41,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":17,"physical":18},"errors":[],"lineEnd":243,"lineStart":226,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.1,"difficulty":6,"effort":1792.692,"length":67,"time":99.594,"vocabulary":22,"volume":298.782,"operands":{"distinct":16,"total":32,"identifiers":["newFormData","Object","assign","formData","note","content","faker","lorem","paragraph","settings","required_fields","true","invoiceData","getInvoiceData","expect","toEqual"]},"operators":{"distinct":6,"total":35,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":14,"physical":14},"errors":[],"lineEnd":258,"lineStart":245,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.074,"difficulty":5.769,"effort":1274.378,"length":52,"time":70.799,"vocabulary":19,"volume":220.892,"operands":{"distinct":13,"total":25,"identifiers":["newFormData","Object","assign","formData","settings","required_fields","invoiceID","true","invoiceData","getInvoiceData","expect","toEqual","\"Invoice: 123-456-789\""]},"operators":{"distinct":6,"total":27,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":11,"physical":11},"errors":[],"lineEnd":270,"lineStart":260,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.704,"halstead":{"bugs":0.18,"difficulty":7.875,"effort":4252.558,"length":109,"time":236.253,"vocabulary":31,"volume":540.007,"operands":{"distinct":24,"total":54,"identifiers":["invoiceID","uuidv4","invoiceRev","createdDate","Date","now","newFormData","Object","assign","formData","settings","editMode","active","true","data","omit","\"settings, savedSettings\"","_id","_rev","created_at","invoiceData","getInvoiceData","expect","toEqual"]},"operators":{"distinct":7,"total":55,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":27,"physical":23},"errors":[],"lineEnd":294,"lineStart":272,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.762,"halstead":{"bugs":0.053,"difficulty":2.5,"effort":400.456,"length":41,"time":22.248,"vocabulary":15,"volume":160.183,"operands":{"distinct":12,"total":20,"identifiers":["formData","beforeEach","it","\"should PASS with CORRECT data\"","\"should NOT pass with INCORRECT recipient data\"","\"should NOT pass with INCORRECT rows data\"","\"should NOT pass with INCORRECT dueDate data\"","\"should NOT pass with INCORRECT currency data\"","\"should NOT pass with INCORRECT discount data\"","\"should NOT pass with INCORRECT tax data\"","\"should NOT pass with INCORRECT note data\"","\"should NOT pass with INCORRECT invoiceID\""]},"operators":{"distinct":3,"total":21,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":21,"physical":143},"errors":[],"lineEnd":445,"lineStart":303,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":1.449,"halstead":{"bugs":0.46,"difficulty":5.672,"effort":7822.019,"length":225,"time":434.557,"vocabulary":70,"volume":1379.089,"operands":{"distinct":64,"total":121,"identifiers":["formData","invoiceID","\"Invoice 123-456-789\"","recipient","newRecipient","true","select","new","fullname","faker","name","findName","email","internet","company","companyName","phone","phoneNumber","rows","id","uuidv4","description","commerce","productName","price","quantity","random","number","100","dueDate","selectedDate","date","future","useCustom","paymentTerm","null","currency","code","\"USD\"","placement","\"before\"","fraction","2","separator","\"commaDot\"","discount","type","\"percentage\"","amount","10","tax","method","\"reverse\"","tin","\"123-456-789\"","note","content","lorem","paragraph","settings","open","false","required_fields","savedSettings"]},"operators":{"distinct":6,"total":104,"identifiers":["=","{}",":","()",".","[]"]}},"paramCount":0,"sloc":{"logical":69,"physical":78},"errors":[],"lineEnd":382,"lineStart":305,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.014,"difficulty":2.333,"effort":100.765,"length":13,"time":5.598,"vocabulary":10,"volume":43.185,"operands":{"distinct":6,"total":7,"identifiers":["validation","validateFormData","formData","expect","toEqual","true"]},"operators":{"distinct":4,"total":6,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":387,"lineStart":384,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.05,"difficulty":4.636,"effort":701.186,"length":37,"time":38.955,"vocabulary":17,"volume":151.236,"operands":{"distinct":11,"total":17,"identifiers":["newFormData","Object","assign","formData","recipient","new","validation","validateFormData","expect","toEqual","false"]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":9,"physical":9},"errors":[],"lineEnd":397,"lineStart":389,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.028,"difficulty":3.333,"effort":279.206,"length":22,"time":15.511,"vocabulary":14,"volume":83.762,"operands":{"distinct":9,"total":12,"identifiers":["formData","rows","0","price","validation","validateFormData","expect","toEqual","false"]},"operators":{"distinct":5,"total":10,"identifiers":["=",".","[]","const","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":403,"lineStart":399,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.025,"difficulty":2.444,"effort":180.91,"length":20,"time":10.051,"vocabulary":13,"volume":74.009,"operands":{"distinct":9,"total":11,"identifiers":["formData","dueDate","selectedDate","null","validation","validateFormData","expect","toEqual","false"]},"operators":{"distinct":4,"total":9,"identifiers":["=",".","const","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":409,"lineStart":405,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.046,"difficulty":3.967,"effort":548.361,"length":31,"time":30.465,"vocabulary":22,"volume":138.242,"operands":{"distinct":15,"total":17,"identifiers":["formData","currency","code","\"USD\"","fraction","1","separator","\"commaDot\"","placement","\"before\"","validation","validateFormData","expect","toEqual","false"]},"operators":{"distinct":7,"total":14,"identifiers":["=",".","{}",":","- (prefix)","const","()"]}},"paramCount":0,"sloc":{"logical":9,"physical":10},"errors":[],"lineEnd":420,"lineStart":411,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.025,"difficulty":2.444,"effort":180.91,"length":20,"time":10.051,"vocabulary":13,"volume":74.009,"operands":{"distinct":9,"total":11,"identifiers":["formData","discount","amount","0","validation","validateFormData","expect","toEqual","false"]},"operators":{"distinct":4,"total":9,"identifiers":["=",".","const","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":426,"lineStart":422,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.025,"difficulty":2.444,"effort":180.91,"length":20,"time":10.051,"vocabulary":13,"volume":74.009,"operands":{"distinct":9,"total":11,"identifiers":["formData","tax","amount","0","validation","validateFormData","expect","toEqual","false"]},"operators":{"distinct":4,"total":9,"identifiers":["=",".","const","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":432,"lineStart":428,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.025,"difficulty":2.444,"effort":180.91,"length":20,"time":10.051,"vocabulary":13,"volume":74.009,"operands":{"distinct":9,"total":11,"identifiers":["formData","note","content","\"\"","validation","validateFormData","expect","toEqual","false"]},"operators":{"distinct":4,"total":9,"identifiers":["=",".","const","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":438,"lineStart":434,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":2.5,"effort":161.323,"length":18,"time":8.962,"vocabulary":12,"volume":64.529,"operands":{"distinct":8,"total":10,"identifiers":["formData","invoiceID","\"\"","validation","validateFormData","expect","toEqual","false"]},"operators":{"distinct":4,"total":8,"identifiers":["=",".","const","()"]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":444,"lineStart":440,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.02,"difficulty":1.667,"effort":100,"length":20,"time":5.556,"vocabulary":8,"volume":60,"operands":{"distinct":6,"total":10,"identifiers":["it","\"should validate data presence\"","\"should validate required fields data\"","\"should validate email format\"","\"should not validate selected contact\"","\"should pass correct recipient data\""]},"operators":{"distinct":2,"total":10,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":71},"errors":[],"lineEnd":517,"lineStart":447,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.073,"difficulty":3.789,"effort":827.095,"length":47,"time":45.95,"vocabulary":25,"volume":218.261,"operands":{"distinct":19,"total":24,"identifiers":["recipient","newRecipient","true","new","validation","validateRecipient","expect","toEqual","false","openDialog","toBeCalledWith","type","\"warning\"","title","i18n","t","\"dialog:validation:recipient:empty:title\"","message","\"dialog:validation:recipient:empty:message\""]},"operators":{"distinct":6,"total":23,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":14,"physical":13},"errors":[],"lineEnd":460,"lineStart":448,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.103,"difficulty":4,"effort":1236.536,"length":63,"time":68.696,"vocabulary":30,"volume":309.134,"operands":{"distinct":24,"total":32,"identifiers":["recipient","newRecipient","true","new","email","faker","internet","company","companyName","validation","validateRecipient","expect","toEqual","false","openDialog","toBeCalledWith","type","\"warning\"","title","i18n","t","\"dialog:validation:recipient:requiredFields:title\"","message","\"dialog:validation:recipient:requiredFields:message\""]},"operators":{"distinct":6,"total":31,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":18,"physical":16},"errors":[],"lineEnd":477,"lineStart":462,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.096,"difficulty":3.6,"effort":1034.436,"length":58,"time":57.469,"vocabulary":31,"volume":287.343,"operands":{"distinct":25,"total":30,"identifiers":["recipient","newRecipient","true","new","fullname","faker","name","findName","email","\"invalid-email-address\"","validation","validateRecipient","expect","toEqual","false","openDialog","toBeCalledWith","type","\"warning\"","title","i18n","t","\"dialog:validation:recipient:email:title\"","message","\"dialog:validation:recipient:email:message\""]},"operators":{"distinct":6,"total":28,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":17,"physical":16},"errors":[],"lineEnd":494,"lineStart":479,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.025,"difficulty":3.75,"effort":285.552,"length":20,"time":15.864,"vocabulary":14,"volume":76.147,"operands":{"distinct":8,"total":10,"identifiers":["recipient","newRecipient","false","validation","validateRecipient","expect","toEqual","true"]},"operators":{"distinct":6,"total":10,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":502,"lineStart":496,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.084,"difficulty":4.5,"effort":1134.778,"length":55,"time":63.043,"vocabulary":24,"volume":252.173,"operands":{"distinct":18,"total":27,"identifiers":["recipient","newRecipient","true","new","fullname","faker","name","findName","company","companyName","email","internet","phone","phoneNumber","validation","validateRecipient","expect","toEqual"]},"operators":{"distinct":6,"total":28,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":15,"physical":13},"errors":[],"lineEnd":516,"lineStart":504,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should validate item description\"","\"should validate item price\"","\"should validate item quantity\"","\"should pass correct rows data\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":72},"errors":[],"lineEnd":590,"lineStart":519,"name":"<anon method-30>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.07,"difficulty":4.472,"effort":934.576,"length":45,"time":51.921,"vocabulary":25,"volume":208.974,"operands":{"distinct":18,"total":23,"identifiers":["rows","description","\"\"","validation","validateRows","expect","toEqual","false","openDialog","toBeCalledWith","type","\"warning\"","title","i18n","t","\"dialog:validation:rows:emptyDescription:title\"","message","\"dialog:validation:rows:emptyDescription:message\""]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","[]","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":13,"physical":10},"errors":[],"lineEnd":529,"lineStart":520,"name":"<anon method-31>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.086,"difficulty":4.295,"effort":1105.964,"length":53,"time":61.442,"vocabulary":29,"volume":257.473,"operands":{"distinct":22,"total":27,"identifiers":["rows","description","faker","commerce","productName","price","0","validation","validateRows","expect","toEqual","false","openDialog","toBeCalledWith","type","\"warning\"","title","i18n","t","\"dialog:validation:rows:priceZero:title\"","message","\"dialog:validation:rows:priceZero:message\""]},"operators":{"distinct":7,"total":26,"identifiers":["const","=","[]","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":15,"physical":15},"errors":[],"lineEnd":545,"lineStart":531,"name":"<anon method-32>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.941,"halstead":{"bugs":0.209,"difficulty":9.538,"effort":5968.768,"length":123,"time":331.598,"vocabulary":34,"volume":625.758,"operands":{"distinct":26,"total":62,"identifiers":["rows","description","faker","commerce","productName","price","quantity","0","validation","validateRows","expect","toEqual","false","openDialog","toBeCalledWith","type","\"warning\"","title","i18n","t","\"dialog:validation:rows:qtyZero:title\"","message","\"dialog:validation:rows:qtyZero:message\"","rows2","1","validation2"]},"operators":{"distinct":8,"total":61,"identifiers":["const","=","[]","{}",":","()",".","- (prefix)"]}},"paramCount":0,"sloc":{"logical":34,"physical":31},"errors":[],"lineEnd":577,"lineStart":547,"name":"<anon method-33>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.064,"difficulty":4.9,"effort":939.602,"length":43,"time":52.2,"vocabulary":22,"volume":191.756,"operands":{"distinct":15,"total":21,"identifiers":["rows","description","faker","commerce","productName","price","quantity","random","number","100","validation","validateRows","expect","toEqual","true"]},"operators":{"distinct":7,"total":22,"identifiers":["const","=","[]","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":11},"errors":[],"lineEnd":589,"lineStart":579,"name":"<anon method-34>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should validate selectedDate\"","\"should pass when not required\"","\"should pass correct dueDate data\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":32},"errors":[],"lineEnd":623,"lineStart":592,"name":"<anon method-35>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.081,"difficulty":4,"effort":969.997,"length":51,"time":53.889,"vocabulary":27,"volume":242.499,"operands":{"distinct":21,"total":28,"identifiers":["dueDate","useCustom","true","selectedDate","null","paymentTerm","validation","validateDueDate","expect","toEqual","false","openDialog","toBeCalledWith","type","\"warning\"","title","i18n","t","\"dialog:validation:dueDate:title\"","message","\"dialog:validation:dueDate:message\""]},"operators":{"distinct":6,"total":23,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":15,"physical":14},"errors":[],"lineEnd":606,"lineStart":593,"name":"<anon method-36>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":3.667,"effort":300.831,"length":21,"time":16.713,"vocabulary":15,"volume":82.045,"operands":{"distinct":9,"total":11,"identifiers":["dueDate","selectedDate","null","validation","validateDueDate","false","expect","toEqual","true"]},"operators":{"distinct":6,"total":10,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":614,"lineStart":608,"name":"<anon method-37>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.035,"difficulty":3.9,"effort":405.6,"length":26,"time":22.533,"vocabulary":16,"volume":104,"operands":{"distinct":10,"total":13,"identifiers":["dueDate","selectedDate","faker","date","future","validation","validateDueDate","true","expect","toEqual"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":7},"errors":[],"lineEnd":622,"lineStart":616,"name":"<anon method-38>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should validate Currency\"","\"should pass when not required\"","\"should pass correct currency data\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":34},"errors":[],"lineEnd":658,"lineStart":625,"name":"<anon method-39>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.092,"difficulty":4.2,"effort":1155,"length":55,"time":64.167,"vocabulary":32,"volume":275,"operands":{"distinct":25,"total":30,"identifiers":["currency","code","\"USD\"","fraction","1","separator","\"commaDot\"","placement","\"before\"","validation","validateCurrency","true","expect","toEqual","false","openDialog","toBeCalledWith","type","\"warning\"","title","i18n","t","\"dialog:validation:currency:fraction:title\"","message","\"dialog:validation:currency:fraction:message\""]},"operators":{"distinct":7,"total":25,"identifiers":["const","=","{}",":","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":16,"physical":15},"errors":[],"lineEnd":640,"lineStart":626,"name":"<anon method-40>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":3.214,"effort":207.416,"length":18,"time":11.523,"vocabulary":12,"volume":64.529,"operands":{"distinct":7,"total":9,"identifiers":["currency","validation","validateCurrency","false","expect","toEqual","true"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":646,"lineStart":642,"name":"<anon method-41>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.043,"difficulty":3.643,"effort":472.325,"length":30,"time":26.24,"vocabulary":20,"volume":129.658,"operands":{"distinct":14,"total":17,"identifiers":["currency","code","\"USD\"","placement","\"before\"","fraction","2","separator","\"commaDot\"","validation","validateCurrency","true","expect","toEqual"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":10},"errors":[],"lineEnd":657,"lineStart":648,"name":"<anon method-42>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should validate discount data\"","\"should pass when not required\"","\"should pass correct discount data\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":30},"errors":[],"lineEnd":689,"lineStart":660,"name":"<anon method-43>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.075,"difficulty":3.9,"effort":879.922,"length":48,"time":48.885,"vocabulary":26,"volume":225.621,"operands":{"distinct":20,"total":26,"identifiers":["discount","type","\"flat\"","amount","0","validation","validateDiscount","true","expect","toEqual","false","openDialog","toBeCalledWith","\"warning\"","title","i18n","t","\"dialog:validation:discount:title\"","message","\"dialog:validation:discount:message\""]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":14,"physical":13},"errors":[],"lineEnd":673,"lineStart":661,"name":"<anon method-44>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":3.214,"effort":207.416,"length":18,"time":11.523,"vocabulary":12,"volume":64.529,"operands":{"distinct":7,"total":9,"identifiers":["discount","validation","validateDiscount","false","expect","toEqual","true"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":679,"lineStart":675,"name":"<anon method-45>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.032,"difficulty":3.9,"effort":374.4,"length":24,"time":20.8,"vocabulary":16,"volume":96,"operands":{"distinct":10,"total":13,"identifiers":["discount","type","\"flat\"","amount","10","validation","validateDiscount","true","expect","toEqual"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":8},"errors":[],"lineEnd":688,"lineStart":681,"name":"<anon method-46>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should validate tax data\"","\"should pass when not required\"","\"should pass correct tax data\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":44},"errors":[],"lineEnd":734,"lineStart":691,"name":"<anon method-47>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":2.564,"halstead":{"bugs":0.227,"difficulty":10.08,"effort":6854.4,"length":136,"time":380.8,"vocabulary":32,"volume":680,"operands":{"distinct":25,"total":72,"identifiers":["tax1","amount","0","tax2","\"\"","tax3","1","validation1","validateTax","true","expect","toEqual","false","openDialog","toBeCalledWith","type","\"warning\"","title","i18n","t","\"dialog:validation:tax:title\"","message","\"dialog:validation:tax:message\"","validation2","validation3"]},"operators":{"distinct":7,"total":64,"identifiers":["const","=","{}",":","- (prefix)","()","."]}},"paramCount":0,"sloc":{"logical":39,"physical":28},"errors":[],"lineEnd":719,"lineStart":692,"name":"<anon method-48>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":3.214,"effort":207.416,"length":18,"time":11.523,"vocabulary":12,"volume":64.529,"operands":{"distinct":7,"total":9,"identifiers":["tax","validation","validateTax","false","expect","toEqual","true"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":725,"lineStart":721,"name":"<anon method-49>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":4.125,"effort":329.812,"length":21,"time":18.323,"vocabulary":14,"volume":79.954,"operands":{"distinct":8,"total":11,"identifiers":["tax","amount","10","validation","validateTax","true","expect","toEqual"]},"operators":{"distinct":6,"total":10,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":733,"lineStart":727,"name":"<anon method-50>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should validate note data\"","\"should pass when not required\"","\"should pass correct note data\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":28},"errors":[],"lineEnd":763,"lineStart":736,"name":"<anon method-51>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.07,"difficulty":3.789,"effort":791.9,"length":45,"time":43.994,"vocabulary":25,"volume":208.974,"operands":{"distinct":19,"total":24,"identifiers":["note","content","\"\"","validation","validateNote","true","expect","toEqual","false","openDialog","toBeCalledWith","type","\"warning\"","title","i18n","t","\"dialog:validation:note:title\"","message","\"dialog:validation:note:message\""]},"operators":{"distinct":6,"total":21,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":13,"physical":12},"errors":[],"lineEnd":748,"lineStart":737,"name":"<anon method-52>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.022,"difficulty":3.214,"effort":207.416,"length":18,"time":11.523,"vocabulary":12,"volume":64.529,"operands":{"distinct":7,"total":9,"identifiers":["note","validation","validateNote","false","expect","toEqual","true"]},"operators":{"distinct":5,"total":9,"identifiers":["const","=","{}","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":754,"lineStart":750,"name":"<anon method-53>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.035,"difficulty":3.9,"effort":405.6,"length":26,"time":22.533,"vocabulary":16,"volume":104,"operands":{"distinct":10,"total":13,"identifiers":["note","content","faker","lorem","paragraph","validation","validateNote","true","expect","toEqual"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":7,"physical":7},"errors":[],"lineEnd":762,"lineStart":756,"name":"<anon method-54>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.013,"difficulty":1.8,"effort":70.2,"length":13,"time":3.9,"vocabulary":8,"volume":39,"operands":{"distinct":5,"total":6,"identifiers":["allContacts","beforeEach","it","\"should return current contact if it exist\"","\"should create a new contact if the current contact does not exist\""]},"operators":{"distinct":3,"total":7,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":57},"errors":[],"lineEnd":821,"lineStart":765,"name":"<anon method-55>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.226,"halstead":{"bugs":0.167,"difficulty":14.808,"effort":7423.743,"length":116,"time":412.43,"vocabulary":20,"volume":501.344,"operands":{"distinct":13,"total":55,"identifiers":["allContacts","_id","uuidv4","fullname","faker","name","findName","email","internet","company","companyName","phone","phoneNumber"]},"operators":{"distinct":7,"total":61,"identifiers":["=","[]",",","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":31,"physical":25},"errors":[],"lineEnd":791,"lineStart":767,"name":"<anon method-56>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.035,"difficulty":4.9,"effort":520.743,"length":26,"time":28.93,"vocabulary":17,"volume":106.274,"operands":{"distinct":10,"total":14,"identifiers":["currentContact","allContacts","1","editRecipient","setEditRecipient","expect","toEqual","newRecipient","false","select"]},"operators":{"distinct":7,"total":12,"identifiers":["const","=","[]","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":7,"physical":8},"errors":[],"lineEnd":800,"lineStart":793,"name":"<anon method-57>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.125,"difficulty":5.857,"effort":2200.154,"length":79,"time":122.231,"vocabulary":27,"volume":375.636,"operands":{"distinct":21,"total":41,"identifiers":["currentContact","_id","\"random-string\"","fullname","faker","name","findName","email","internet","company","companyName","phone","phoneNumber","editRecipient","setEditRecipient","allContacts","expect","toEqual","newRecipient","true","new"]},"operators":{"distinct":6,"total":38,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":20,"physical":19},"errors":[],"lineEnd":820,"lineStart":802,"name":"<anon method-58>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.115,"halstead":{"bugs":0.136,"difficulty":0.633,"effort":15212.481,"length":51.424,"time":845.138,"vocabulary":4.102,"volume":407.217,"operands":{"distinct":3.915,"total":26.593},"operators":{"distinct":0.186,"total":24.831}},"paramCount":0,"sloc":{"logical":14.78,"physical":13.932}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":11.383,"halstead":{"bugs":0.081,"difficulty":4.293,"effort":1493.971,"length":51.431,"time":82.998,"vocabulary":20.19,"volume":241.731,"operands":{"distinct":15.017,"total":26.603},"operators":{"distinct":5.172,"total":24.828}},"paramCount":0,"sloc":{"logical":14.638,"physical":26.017}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/helpers/__tests__/invoice.spec.js","testCases":4,"smells":66,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  40 |\n  41 | it('should return correct subtotal value', () => {\n> 42 |   expect(getInvoiceValue(data1).subtotal).toEqual(200);\n     |  ^ Duplicate Assert\n  43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);","start":{"line":42,"column":2,"index":650}},{"frame":"  41 | it('should return correct subtotal value', () => {\n  42 |   expect(getInvoiceValue(data1).subtotal).toEqual(200);\n> 43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n     |  ^ Duplicate Assert\n  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n  46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);","start":{"line":43,"column":2,"index":706}},{"frame":"  42 |   expect(getInvoiceValue(data1).subtotal).toEqual(200);\n  43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n> 44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n     |  ^ Duplicate Assert\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n  46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);\n  47 |   expect(getInvoiceValue(data3).subtotal).not.toEqual(310);","start":{"line":44,"column":2,"index":766}},{"frame":"  43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n> 45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n     |  ^ Duplicate Assert\n  46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);\n  47 |   expect(getInvoiceValue(data3).subtotal).not.toEqual(310);\n  48 | });","start":{"line":45,"column":2,"index":822}},{"frame":"  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n> 46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);\n     |  ^ Duplicate Assert\n  47 |   expect(getInvoiceValue(data3).subtotal).not.toEqual(310);\n  48 | });\n  49 |","start":{"line":46,"column":2,"index":882}},{"frame":"  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n  46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);\n> 47 |   expect(getInvoiceValue(data3).subtotal).not.toEqual(310);\n     |  ^ Duplicate Assert\n  48 | });\n  49 |\n  50 | it('should return correct discount', () => {","start":{"line":47,"column":2,"index":938}},{"frame":"  49 |\n  50 | it('should return correct discount', () => {\n> 51 |   expect(getInvoiceValue(data1).discount).toEqual(100);\n     |  ^ Duplicate Assert\n  52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n  53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n  54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);","start":{"line":51,"column":2,"index":1048}},{"frame":"  50 | it('should return correct discount', () => {\n  51 |   expect(getInvoiceValue(data1).discount).toEqual(100);\n> 52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n     |  ^ Duplicate Assert\n  53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n  54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);\n  55 |   expect(getInvoiceValue(data3).discount).toEqual(undefined);","start":{"line":52,"column":2,"index":1104}},{"frame":"  51 |   expect(getInvoiceValue(data1).discount).toEqual(100);\n  52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n> 53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n     |  ^ Duplicate Assert\n  54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);\n  55 |   expect(getInvoiceValue(data3).discount).toEqual(undefined);\n  56 | });","start":{"line":53,"column":2,"index":1164}},{"frame":"  52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n  53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n> 54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);\n     |  ^ Duplicate Assert\n  55 |   expect(getInvoiceValue(data3).discount).toEqual(undefined);\n  56 | });\n  57 |","start":{"line":54,"column":2,"index":1219}},{"frame":"  57 |\n  58 | it('should return correct tax value', () => {\n> 59 |   expect(getInvoiceValue(data1).taxAmount).toEqual(10);\n     |  ^ Duplicate Assert\n  60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n  61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n  62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);","start":{"line":59,"column":2,"index":1391}},{"frame":"  58 | it('should return correct tax value', () => {\n  59 |   expect(getInvoiceValue(data1).taxAmount).toEqual(10);\n> 60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n     |  ^ Duplicate Assert\n  61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n  62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);\n  63 |   expect(getInvoiceValue(data3).taxAmount).toEqual(undefined);","start":{"line":60,"column":2,"index":1447}},{"frame":"  59 |   expect(getInvoiceValue(data1).taxAmount).toEqual(10);\n  60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n> 61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n     |  ^ Duplicate Assert\n  62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);\n  63 |   expect(getInvoiceValue(data3).taxAmount).toEqual(undefined);\n  64 | });","start":{"line":61,"column":2,"index":1507}},{"frame":"  60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n  61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n> 62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);\n     |  ^ Duplicate Assert\n  63 |   expect(getInvoiceValue(data3).taxAmount).toEqual(undefined);\n  64 | });\n  65 |","start":{"line":62,"column":2,"index":1564}},{"frame":"  65 |\n  66 | it('should return correct grandTotal value', () => {\n> 67 |   expect(getInvoiceValue(data1).grandTotal).toEqual(110);\n     |  ^ Duplicate Assert\n  68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);","start":{"line":67,"column":2,"index":1744}},{"frame":"  66 | it('should return correct grandTotal value', () => {\n  67 |   expect(getInvoiceValue(data1).grandTotal).toEqual(110);\n> 68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n     |  ^ Duplicate Assert\n  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n  71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);","start":{"line":68,"column":2,"index":1802}},{"frame":"  67 |   expect(getInvoiceValue(data1).grandTotal).toEqual(110);\n  68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n> 69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n     |  ^ Duplicate Assert\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n  71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);\n  72 |   expect(getInvoiceValue(data3).grandTotal).not.toEqual(310);","start":{"line":69,"column":2,"index":1864}},{"frame":"  68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n> 70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n     |  ^ Duplicate Assert\n  71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);\n  72 |   expect(getInvoiceValue(data3).grandTotal).not.toEqual(310);\n  73 | });","start":{"line":70,"column":2,"index":1922}},{"frame":"  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n> 71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);\n     |  ^ Duplicate Assert\n  72 |   expect(getInvoiceValue(data3).grandTotal).not.toEqual(310);\n  73 | });\n  74 |","start":{"line":71,"column":2,"index":1986}},{"frame":"  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n  71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);\n> 72 |   expect(getInvoiceValue(data3).grandTotal).not.toEqual(310);\n     |  ^ Duplicate Assert\n  73 | });\n  74 |","start":{"line":72,"column":2,"index":2044}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  40 |\n  41 | it('should return correct subtotal value', () => {\n> 42 |   expect(getInvoiceValue(data1).subtotal).toEqual(200);\n     |         ^ Eager Test\n  43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);","start":{"line":42,"column":9,"index":657}},{"frame":"  41 | it('should return correct subtotal value', () => {\n  42 |   expect(getInvoiceValue(data1).subtotal).toEqual(200);\n> 43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n     |         ^ Eager Test\n  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n  46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);","start":{"line":43,"column":9,"index":713}},{"frame":"  42 |   expect(getInvoiceValue(data1).subtotal).toEqual(200);\n  43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n> 44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n     |         ^ Eager Test\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n  46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);\n  47 |   expect(getInvoiceValue(data3).subtotal).not.toEqual(310);","start":{"line":44,"column":9,"index":773}},{"frame":"  43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n> 45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n     |         ^ Eager Test\n  46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);\n  47 |   expect(getInvoiceValue(data3).subtotal).not.toEqual(310);\n  48 | });","start":{"line":45,"column":9,"index":829}},{"frame":"  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n> 46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);\n     |         ^ Eager Test\n  47 |   expect(getInvoiceValue(data3).subtotal).not.toEqual(310);\n  48 | });\n  49 |","start":{"line":46,"column":9,"index":889}},{"frame":"  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n  46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);\n> 47 |   expect(getInvoiceValue(data3).subtotal).not.toEqual(310);\n     |         ^ Eager Test\n  48 | });\n  49 |\n  50 | it('should return correct discount', () => {","start":{"line":47,"column":9,"index":945}},{"frame":"  49 |\n  50 | it('should return correct discount', () => {\n> 51 |   expect(getInvoiceValue(data1).discount).toEqual(100);\n     |         ^ Eager Test\n  52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n  53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n  54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);","start":{"line":51,"column":9,"index":1055}},{"frame":"  50 | it('should return correct discount', () => {\n  51 |   expect(getInvoiceValue(data1).discount).toEqual(100);\n> 52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n     |         ^ Eager Test\n  53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n  54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);\n  55 |   expect(getInvoiceValue(data3).discount).toEqual(undefined);","start":{"line":52,"column":9,"index":1111}},{"frame":"  51 |   expect(getInvoiceValue(data1).discount).toEqual(100);\n  52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n> 53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n     |         ^ Eager Test\n  54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);\n  55 |   expect(getInvoiceValue(data3).discount).toEqual(undefined);\n  56 | });","start":{"line":53,"column":9,"index":1171}},{"frame":"  52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n  53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n> 54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);\n     |         ^ Eager Test\n  55 |   expect(getInvoiceValue(data3).discount).toEqual(undefined);\n  56 | });\n  57 |","start":{"line":54,"column":9,"index":1226}},{"frame":"  53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n  54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);\n> 55 |   expect(getInvoiceValue(data3).discount).toEqual(undefined);\n     |         ^ Eager Test\n  56 | });\n  57 |\n  58 | it('should return correct tax value', () => {","start":{"line":55,"column":9,"index":1285}},{"frame":"  57 |\n  58 | it('should return correct tax value', () => {\n> 59 |   expect(getInvoiceValue(data1).taxAmount).toEqual(10);\n     |         ^ Eager Test\n  60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n  61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n  62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);","start":{"line":59,"column":9,"index":1398}},{"frame":"  58 | it('should return correct tax value', () => {\n  59 |   expect(getInvoiceValue(data1).taxAmount).toEqual(10);\n> 60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n     |         ^ Eager Test\n  61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n  62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);\n  63 |   expect(getInvoiceValue(data3).taxAmount).toEqual(undefined);","start":{"line":60,"column":9,"index":1454}},{"frame":"  59 |   expect(getInvoiceValue(data1).taxAmount).toEqual(10);\n  60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n> 61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n     |         ^ Eager Test\n  62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);\n  63 |   expect(getInvoiceValue(data3).taxAmount).toEqual(undefined);\n  64 | });","start":{"line":61,"column":9,"index":1514}},{"frame":"  60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n  61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n> 62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);\n     |         ^ Eager Test\n  63 |   expect(getInvoiceValue(data3).taxAmount).toEqual(undefined);\n  64 | });\n  65 |","start":{"line":62,"column":9,"index":1571}},{"frame":"  61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n  62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);\n> 63 |   expect(getInvoiceValue(data3).taxAmount).toEqual(undefined);\n     |         ^ Eager Test\n  64 | });\n  65 |\n  66 | it('should return correct grandTotal value', () => {","start":{"line":63,"column":9,"index":1630}},{"frame":"  65 |\n  66 | it('should return correct grandTotal value', () => {\n> 67 |   expect(getInvoiceValue(data1).grandTotal).toEqual(110);\n     |         ^ Eager Test\n  68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);","start":{"line":67,"column":9,"index":1751}},{"frame":"  66 | it('should return correct grandTotal value', () => {\n  67 |   expect(getInvoiceValue(data1).grandTotal).toEqual(110);\n> 68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n     |         ^ Eager Test\n  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n  71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);","start":{"line":68,"column":9,"index":1809}},{"frame":"  67 |   expect(getInvoiceValue(data1).grandTotal).toEqual(110);\n  68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n> 69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n     |         ^ Eager Test\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n  71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);\n  72 |   expect(getInvoiceValue(data3).grandTotal).not.toEqual(310);","start":{"line":69,"column":9,"index":1871}},{"frame":"  68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n> 70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n     |         ^ Eager Test\n  71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);\n  72 |   expect(getInvoiceValue(data3).grandTotal).not.toEqual(310);\n  73 | });","start":{"line":70,"column":9,"index":1929}},{"frame":"  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n> 71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);\n     |         ^ Eager Test\n  72 |   expect(getInvoiceValue(data3).grandTotal).not.toEqual(310);\n  73 | });\n  74 |","start":{"line":71,"column":9,"index":1993}},{"frame":"  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n  71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);\n> 72 |   expect(getInvoiceValue(data3).grandTotal).not.toEqual(310);\n     |         ^ Eager Test\n  73 | });\n  74 |","start":{"line":72,"column":9,"index":2051}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  40 |\n  41 | it('should return correct subtotal value', () => {\n> 42 |   expect(getInvoiceValue(data1).subtotal).toEqual(200);\n     |         ^ Lazy Test\n  43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);","start":{"line":42,"column":9,"index":657}},{"frame":"  49 |\n  50 | it('should return correct discount', () => {\n> 51 |   expect(getInvoiceValue(data1).discount).toEqual(100);\n     |         ^ Lazy Test\n  52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n  53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n  54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);","start":{"line":51,"column":9,"index":1055}},{"frame":"  57 |\n  58 | it('should return correct tax value', () => {\n> 59 |   expect(getInvoiceValue(data1).taxAmount).toEqual(10);\n     |         ^ Lazy Test\n  60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n  61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n  62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);","start":{"line":59,"column":9,"index":1398}},{"frame":"  65 |\n  66 | it('should return correct grandTotal value', () => {\n> 67 |   expect(getInvoiceValue(data1).grandTotal).toEqual(110);\n     |         ^ Lazy Test\n  68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);","start":{"line":67,"column":9,"index":1751}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  40 |\n  41 | it('should return correct subtotal value', () => {\n> 42 |   expect(getInvoiceValue(data1).subtotal).toEqual(200);\n     |                                                  ^ Magic Number\n  43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);","start":{"line":42,"column":50,"index":698}},{"frame":"  41 | it('should return correct subtotal value', () => {\n  42 |   expect(getInvoiceValue(data1).subtotal).toEqual(200);\n> 43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n     |                                                      ^ Magic Number\n  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n  46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);","start":{"line":43,"column":54,"index":758}},{"frame":"  42 |   expect(getInvoiceValue(data1).subtotal).toEqual(200);\n  43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n> 44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n     |                                                  ^ Magic Number\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n  46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);\n  47 |   expect(getInvoiceValue(data3).subtotal).not.toEqual(310);","start":{"line":44,"column":50,"index":814}},{"frame":"  43 |   expect(getInvoiceValue(data1).subtotal).not.toEqual(100);\n  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n> 45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n     |                                                      ^ Magic Number\n  46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);\n  47 |   expect(getInvoiceValue(data3).subtotal).not.toEqual(310);\n  48 | });","start":{"line":45,"column":54,"index":874}},{"frame":"  44 |   expect(getInvoiceValue(data2).subtotal).toEqual(160);\n  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n> 46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);\n     |                                                  ^ Magic Number\n  47 |   expect(getInvoiceValue(data3).subtotal).not.toEqual(310);\n  48 | });\n  49 |","start":{"line":46,"column":50,"index":930}},{"frame":"  45 |   expect(getInvoiceValue(data2).subtotal).not.toEqual(180);\n  46 |   expect(getInvoiceValue(data3).subtotal).toEqual(300);\n> 47 |   expect(getInvoiceValue(data3).subtotal).not.toEqual(310);\n     |                                                      ^ Magic Number\n  48 | });\n  49 |\n  50 | it('should return correct discount', () => {","start":{"line":47,"column":54,"index":990}},{"frame":"  49 |\n  50 | it('should return correct discount', () => {\n> 51 |   expect(getInvoiceValue(data1).discount).toEqual(100);\n     |                                                  ^ Magic Number\n  52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n  53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n  54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);","start":{"line":51,"column":50,"index":1096}},{"frame":"  50 | it('should return correct discount', () => {\n  51 |   expect(getInvoiceValue(data1).discount).toEqual(100);\n> 52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n     |                                                      ^ Magic Number\n  53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n  54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);\n  55 |   expect(getInvoiceValue(data3).discount).toEqual(undefined);","start":{"line":52,"column":54,"index":1156}},{"frame":"  51 |   expect(getInvoiceValue(data1).discount).toEqual(100);\n  52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n> 53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n     |                                                  ^ Magic Number\n  54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);\n  55 |   expect(getInvoiceValue(data3).discount).toEqual(undefined);\n  56 | });","start":{"line":53,"column":50,"index":1212}},{"frame":"  52 |   expect(getInvoiceValue(data1).discount).not.toEqual(200);\n  53 |   expect(getInvoiceValue(data2).discount).toEqual(16);\n> 54 |   expect(getInvoiceValue(data2).discount).not.toEqual(18);\n     |                                                      ^ Magic Number\n  55 |   expect(getInvoiceValue(data3).discount).toEqual(undefined);\n  56 | });\n  57 |","start":{"line":54,"column":54,"index":1271}},{"frame":"  57 |\n  58 | it('should return correct tax value', () => {\n> 59 |   expect(getInvoiceValue(data1).taxAmount).toEqual(10);\n     |                                                   ^ Magic Number\n  60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n  61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n  62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);","start":{"line":59,"column":51,"index":1440}},{"frame":"  58 | it('should return correct tax value', () => {\n  59 |   expect(getInvoiceValue(data1).taxAmount).toEqual(10);\n> 60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n     |                                                       ^ Magic Number\n  61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n  62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);\n  63 |   expect(getInvoiceValue(data3).taxAmount).toEqual(undefined);","start":{"line":60,"column":55,"index":1500}},{"frame":"  59 |   expect(getInvoiceValue(data1).taxAmount).toEqual(10);\n  60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n> 61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n     |                                                   ^ Magic Number\n  62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);\n  63 |   expect(getInvoiceValue(data3).taxAmount).toEqual(undefined);\n  64 | });","start":{"line":61,"column":51,"index":1556}},{"frame":"  60 |   expect(getInvoiceValue(data1).taxAmount).not.toEqual(11);\n  61 |   expect(getInvoiceValue(data2).taxAmount).toEqual(7.2);\n> 62 |   expect(getInvoiceValue(data2).taxAmount).not.toEqual(8);\n     |                                                       ^ Magic Number\n  63 |   expect(getInvoiceValue(data3).taxAmount).toEqual(undefined);\n  64 | });\n  65 |","start":{"line":62,"column":55,"index":1617}},{"frame":"  65 |\n  66 | it('should return correct grandTotal value', () => {\n> 67 |   expect(getInvoiceValue(data1).grandTotal).toEqual(110);\n     |                                                    ^ Magic Number\n  68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);","start":{"line":67,"column":52,"index":1794}},{"frame":"  66 | it('should return correct grandTotal value', () => {\n  67 |   expect(getInvoiceValue(data1).grandTotal).toEqual(110);\n> 68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n     |                                                        ^ Magic Number\n  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n  71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);","start":{"line":68,"column":56,"index":1856}},{"frame":"  67 |   expect(getInvoiceValue(data1).grandTotal).toEqual(110);\n  68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n> 69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n     |                                                    ^ Magic Number\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n  71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);\n  72 |   expect(getInvoiceValue(data3).grandTotal).not.toEqual(310);","start":{"line":69,"column":52,"index":1914}},{"frame":"  68 |   expect(getInvoiceValue(data1).grandTotal).not.toEqual(100);\n  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n> 70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n     |                                                        ^ Magic Number\n  71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);\n  72 |   expect(getInvoiceValue(data3).grandTotal).not.toEqual(310);\n  73 | });","start":{"line":70,"column":56,"index":1976}},{"frame":"  69 |   expect(getInvoiceValue(data2).grandTotal).toEqual(144);\n  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n> 71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);\n     |                                                    ^ Magic Number\n  72 |   expect(getInvoiceValue(data3).grandTotal).not.toEqual(310);\n  73 | });\n  74 |","start":{"line":71,"column":52,"index":2036}},{"frame":"  70 |   expect(getInvoiceValue(data2).grandTotal).not.toEqual(151.2);\n  71 |   expect(getInvoiceValue(data3).grandTotal).toEqual(300);\n> 72 |   expect(getInvoiceValue(data3).grandTotal).not.toEqual(310);\n     |                                                        ^ Magic Number\n  73 | });\n  74 |","start":{"line":72,"column":56,"index":2098}}]}],"metrics":{"aggregate":{"cyclomatic":5,"cyclomaticDensity":4.854,"halstead":{"bugs":0.759,"difficulty":17.82,"effort":40568.707,"length":387,"time":2253.817,"vocabulary":59,"volume":2276.583,"operands":{"distinct":50,"total":198,"identifiers":["data1","rows","subtotal","20","40","60","80","discount","type","\"flat\"","amount","100","tax","10","method","\"default\"","data2","30","50","70","\"percentage\"","5","\"reverse\"","data3","150","it","\"should return correct subtotal value\"","expect","getInvoiceValue","toEqual","200","not","160","180","300","310","\"should return correct discount\"","16","18","undefined","\"should return correct tax value\"","taxAmount","11","7.2","8","\"should return correct grandTotal value\"","grandTotal","110","144","151.2"]},"operators":{"distinct":9,"total":189,"identifiers":["const","=","{}",":","[]",",","()","function=>","."]}},"paramCount":0,"sloc":{"logical":103,"physical":74}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../invoice","type":"esm"}],"errors":[],"lineEnd":74,"lineStart":1,"maintainability":91.206,"methods":[{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.096,"difficulty":2.786,"effort":802.286,"length":72,"time":44.571,"vocabulary":16,"volume":288,"operands":{"distinct":14,"total":39,"identifiers":["expect","getInvoiceValue","data1","subtotal","toEqual","200","not","100","data2","160","180","data3","300","310"]},"operators":{"distinct":2,"total":33,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":18,"physical":8},"errors":[],"lineEnd":48,"lineStart":41,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.077,"difficulty":2.462,"effort":567.401,"length":59,"time":31.522,"vocabulary":15,"volume":230.507,"operands":{"distinct":13,"total":32,"identifiers":["expect","getInvoiceValue","data1","discount","toEqual","100","not","200","data2","16","18","data3","undefined"]},"operators":{"distinct":2,"total":27,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":15,"physical":7},"errors":[],"lineEnd":56,"lineStart":50,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.077,"difficulty":2.462,"effort":567.401,"length":59,"time":31.522,"vocabulary":15,"volume":230.507,"operands":{"distinct":13,"total":32,"identifiers":["expect","getInvoiceValue","data1","taxAmount","toEqual","10","not","11","data2","7.2","8","data3","undefined"]},"operators":{"distinct":2,"total":27,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":15,"physical":7},"errors":[],"lineEnd":64,"lineStart":58,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.096,"difficulty":2.786,"effort":802.286,"length":72,"time":44.571,"vocabulary":16,"volume":288,"operands":{"distinct":14,"total":39,"identifiers":["expect","getInvoiceValue","data1","grandTotal","toEqual","110","not","100","data2","144","151.2","data3","300","310"]},"operators":{"distinct":2,"total":33,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":18,"physical":8},"errors":[],"lineEnd":73,"lineStart":66,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.971,"halstead":{"bugs":0.152,"difficulty":3.564,"effort":8113.741,"length":77.4,"time":450.763,"vocabulary":11.8,"volume":455.317,"operands":{"distinct":10,"total":39.6},"operators":{"distinct":1.8,"total":37.8}},"paramCount":0,"sloc":{"logical":20.6,"physical":14.8}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":6.111,"halstead":{"bugs":0.086,"difficulty":2.624,"effort":684.843,"length":65.5,"time":38.047,"vocabulary":15.5,"volume":259.253,"operands":{"distinct":13.5,"total":35.5},"operators":{"distinct":2,"total":30}},"paramCount":0,"sloc":{"logical":16.5,"physical":7.5}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/middlewares/__tests__/ContactsMW.spec.js","testCases":13,"smells":31,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  29 |       // Expect\n  30 |       // Call correct function\n> 31 |       expect(getAllDocs).toHaveBeenCalled();\n     |      ^ Duplicate Assert\n  32 |       expect(getAllDocs).toHaveBeenCalledWith('contacts');\n  33 |       expect(getAllDocs).not.toHaveBeenCalledWith('invoices');\n  34 |       expect(getAllDocs).not.toHaveBeenCalledWith('');","start":{"line":31,"column":6,"index":841}},{"frame":"  30 |       // Call correct function\n  31 |       expect(getAllDocs).toHaveBeenCalled();\n> 32 |       expect(getAllDocs).toHaveBeenCalledWith('contacts');\n     |      ^ Duplicate Assert\n  33 |       expect(getAllDocs).not.toHaveBeenCalledWith('invoices');\n  34 |       expect(getAllDocs).not.toHaveBeenCalledWith('');\n  35 |       // Correctly resolves","start":{"line":32,"column":6,"index":886}},{"frame":"  31 |       expect(getAllDocs).toHaveBeenCalled();\n  32 |       expect(getAllDocs).toHaveBeenCalledWith('contacts');\n> 33 |       expect(getAllDocs).not.toHaveBeenCalledWith('invoices');\n     |      ^ Duplicate Assert\n  34 |       expect(getAllDocs).not.toHaveBeenCalledWith('');\n  35 |       // Correctly resolves\n  36 |       expect(getAllDocs('contacts')).resolves.toBe(mockData.contactsRecords);","start":{"line":33,"column":6,"index":945}},{"frame":"  32 |       expect(getAllDocs).toHaveBeenCalledWith('contacts');\n  33 |       expect(getAllDocs).not.toHaveBeenCalledWith('invoices');\n> 34 |       expect(getAllDocs).not.toHaveBeenCalledWith('');\n     |      ^ Duplicate Assert\n  35 |       // Correctly resolves\n  36 |       expect(getAllDocs('contacts')).resolves.toBe(mockData.contactsRecords);\n  37 |     });","start":{"line":34,"column":6,"index":1008}},{"frame":"  60 |       // Execute\n  61 |       middleware(Actions.getAllContacts()).then(() => {\n> 62 |         expect(next).toHaveBeenCalled();\n     |        ^ Duplicate Assert\n  63 |         expect(next).toHaveBeenCalledWith({\n  64 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  65 |           payload: {","start":{"line":62,"column":8,"index":2046}},{"frame":"  61 |       middleware(Actions.getAllContacts()).then(() => {\n  62 |         expect(next).toHaveBeenCalled();\n> 63 |         expect(next).toHaveBeenCalledWith({\n     |        ^ Duplicate Assert\n  64 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  65 |           payload: {\n  66 |             type: 'warning',","start":{"line":63,"column":8,"index":2087}},{"frame":"  76 |       middleware(Actions.getAllContacts()).then(() =>\n  77 |         getAllDocs().catch(err => {\n> 78 |           expect(next).toHaveBeenCalled();\n     |          ^ Duplicate Assert\n  79 |           expect(next).toHaveBeenCalledWith({\n  80 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  81 |             payload: {","start":{"line":78,"column":10,"index":2594}},{"frame":"  77 |         getAllDocs().catch(err => {\n  78 |           expect(next).toHaveBeenCalled();\n> 79 |           expect(next).toHaveBeenCalledWith({\n     |          ^ Duplicate Assert\n  80 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  81 |             payload: {\n  82 |               type: 'warning',","start":{"line":79,"column":10,"index":2637}},{"frame":"   99 |       middleware(Actions.saveContact(newContact));\n  100 |       // Expect\n> 101 |       expect(saveDoc).toHaveBeenCalled();\n      |      ^ Duplicate Assert\n  102 |       expect(saveDoc).toHaveBeenCalledWith('contacts', newContact);\n  103 |     });\n  104 |","start":{"line":101,"column":6,"index":3222}},{"frame":"  100 |       // Expect\n  101 |       expect(saveDoc).toHaveBeenCalled();\n> 102 |       expect(saveDoc).toHaveBeenCalledWith('contacts', newContact);\n      |      ^ Duplicate Assert\n  103 |     });\n  104 |\n  105 |     it('should save records to DB', () => {","start":{"line":102,"column":6,"index":3264}},{"frame":"  178 |       middleware(Actions.saveContact(newContact)).then(() => {\n  179 |         // Expect\n> 180 |         expect(next).toHaveBeenCalled();\n      |        ^ Duplicate Assert\n  181 |         expect(next).toHaveBeenCalledWith({\n  182 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  183 |           payload: {","start":{"line":180,"column":8,"index":5745}},{"frame":"  179 |         // Expect\n  180 |         expect(next).toHaveBeenCalled();\n> 181 |         expect(next).toHaveBeenCalledWith({\n      |        ^ Duplicate Assert\n  182 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  183 |           payload: {\n  184 |             type: 'warning',","start":{"line":181,"column":8,"index":5786}},{"frame":"  238 |       middleware(Actions.deleteContact(contactID)).then(() => {\n  239 |         // Expect\n> 240 |         expect(next).toHaveBeenCalled();\n      |        ^ Duplicate Assert\n  241 |         expect(next).toHaveBeenCalledWith({\n  242 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  243 |           payload: {","start":{"line":240,"column":8,"index":7563}},{"frame":"  239 |         // Expect\n  240 |         expect(next).toHaveBeenCalled();\n> 241 |         expect(next).toHaveBeenCalledWith({\n      |        ^ Duplicate Assert\n  242 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  243 |           payload: {\n  244 |             type: 'warning',","start":{"line":241,"column":8,"index":7604}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  162 |         const dbError = new Error('No database found!');\n  163 |         const docError = new Error('No doc found!');\n> 164 |         expect(saveDoc()).rejects.toEqual(dbError);\n      |               ^ Eager Test\n  165 |         expect(saveDoc('invoices')).rejects.toEqual(docError);\n  166 |       });\n  167 |     });","start":{"line":164,"column":15,"index":5205}},{"frame":"  163 |         const docError = new Error('No doc found!');\n  164 |         expect(saveDoc()).rejects.toEqual(dbError);\n> 165 |         expect(saveDoc('invoices')).rejects.toEqual(docError);\n      |               ^ Eager Test\n  166 |       });\n  167 |     });\n  168 |","start":{"line":165,"column":15,"index":5257}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  34 |       expect(getAllDocs).not.toHaveBeenCalledWith('');\n  35 |       // Correctly resolves\n> 36 |       expect(getAllDocs('contacts')).resolves.toBe(mockData.contactsRecords);\n     |             ^ Lazy Test\n  37 |     });\n  38 |\n  39 |     it('calls next after the promised is returned', () => {","start":{"line":36,"column":13,"index":1098}},{"frame":"  43 |         expect(dispatch.mock.calls.length).toBe(0);\n  44 |         // Calling next with resolved data\n> 45 |         return getAllDocs('contacts').then(data => {\n     |               ^ Lazy Test\n  46 |           expect(next.mock.calls.length).toBe(1);\n  47 |           expect(next).toHaveBeenCalledWith(\n  48 |             Object.assign({}, action, {","start":{"line":45,"column":15,"index":1458}},{"frame":"  56 |     it('handle error correctly', () => {\n  57 |       // Make sure getAllDocs will be called with incorrect dbName\n> 58 |       getAllDocs.mockImplementationOnce(() => getAllDocs('random-string'));\n     |                                              ^ Lazy Test\n  59 |       const expectedError = new Error('Incorrect database!');\n  60 |       // Execute\n  61 |       middleware(Actions.getAllContacts()).then(() => {","start":{"line":58,"column":46,"index":1873}},{"frame":"  75 |       getAllDocs.mockImplementationOnce(() => Promise.reject(unknownError));\n  76 |       middleware(Actions.getAllContacts()).then(() =>\n> 77 |         getAllDocs().catch(err => {\n     |        ^ Lazy Test\n  78 |           expect(next).toHaveBeenCalled();\n  79 |           expect(next).toHaveBeenCalledWith({\n  80 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,","start":{"line":77,"column":8,"index":2556}},{"frame":"  111 |       // Execute\n  112 |       middleware(Actions.saveContact(newContact)).then(() =>\n> 113 |         saveDoc('contacts', newContact).then(data => {\n      |        ^ Lazy Test\n  114 |           // Expect\n  115 |           expect(data).toEqual([...mockData.contactsRecords, newContact]);\n  116 |         })","start":{"line":113,"column":8,"index":3596}},{"frame":"  130 |       // Execute\n  131 |       middleware(action).then(() =>\n> 132 |         saveDoc('contacts', newContact).then(data => {\n      |        ^ Lazy Test\n  133 |           // Expect calling next\n  134 |           expect(next.mock.calls.length).toBe(1);\n  135 |           expect(next).toHaveBeenCalledWith(","start":{"line":132,"column":8,"index":4129}},{"frame":"  162 |         const dbError = new Error('No database found!');\n  163 |         const docError = new Error('No doc found!');\n> 164 |         expect(saveDoc()).rejects.toEqual(dbError);\n      |               ^ Lazy Test\n  165 |         expect(saveDoc('invoices')).rejects.toEqual(docError);\n  166 |       });\n  167 |     });","start":{"line":164,"column":15,"index":5205}},{"frame":"  197 |       // Execute\n  198 |       middleware(action).then(() =>\n> 199 |         deleteDoc('contacts', contactID).then(data => {\n      |        ^ Lazy Test\n  200 |           expect(data).toEqual([]);\n  201 |         })\n  202 |       );","start":{"line":199,"column":8,"index":6298}},{"frame":"  209 |       // Execute\n  210 |       middleware(action).then(() =>\n> 211 |         deleteDoc('contacts', contactID).then(data => {\n      |        ^ Lazy Test\n  212 |           // Call next after the promised is returned\n  213 |           expect(next.mock.calls.length).toBe(1);\n  214 |           expect(next).toHaveBeenCalledWith(","start":{"line":211,"column":8,"index":6640}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  41 |       middleware(action).then(() => {\n  42 |         // Never call dispatch\n> 43 |         expect(dispatch.mock.calls.length).toBe(0);\n     |                                                ^ Magic Number\n  44 |         // Calling next with resolved data\n  45 |         return getAllDocs('contacts').then(data => {\n  46 |           expect(next.mock.calls.length).toBe(1);","start":{"line":43,"column":48,"index":1396}},{"frame":"  44 |         // Calling next with resolved data\n  45 |         return getAllDocs('contacts').then(data => {\n> 46 |           expect(next.mock.calls.length).toBe(1);\n     |                                              ^ Magic Number\n  47 |           expect(next).toHaveBeenCalledWith(\n  48 |             Object.assign({}, action, {\n  49 |               payload: data,","start":{"line":46,"column":46,"index":1542}},{"frame":"  132 |         saveDoc('contacts', newContact).then(data => {\n  133 |           // Expect calling next\n> 134 |           expect(next.mock.calls.length).toBe(1);\n      |                                              ^ Magic Number\n  135 |           expect(next).toHaveBeenCalledWith(\n  136 |             Object.assign({}, action, {\n  137 |               payload: [","start":{"line":134,"column":46,"index":4255}},{"frame":"  142 |           );\n  143 |           // Dispatch success notification\n> 144 |           expect(dispatch.mock.calls.length).toBe(1);\n      |                                                  ^ Magic Number\n  145 |           expect(dispatch).toHaveBeenCalledWith({\n  146 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  147 |             payload: {","start":{"line":144,"column":50,"index":4579}},{"frame":"  211 |         deleteDoc('contacts', contactID).then(data => {\n  212 |           // Call next after the promised is returned\n> 213 |           expect(next.mock.calls.length).toBe(1);\n      |                                              ^ Magic Number\n  214 |           expect(next).toHaveBeenCalledWith(\n  215 |             Object.assign({}, action, {\n  216 |               payload: [],","start":{"line":213,"column":46,"index":6788}},{"frame":"  218 |           );\n  219 |           // Dispatch success notification\n> 220 |           expect(dispatch.mock.calls.length).toBe(1);\n      |                                                  ^ Magic Number\n  221 |           expect(dispatch).toHaveBeenCalledWith({\n  222 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  223 |             payload: {","start":{"line":220,"column":50,"index":7025}}]}],"metrics":{"aggregate":{"cyclomatic":39,"cyclomaticDensity":14.338,"halstead":{"bugs":2.031,"difficulty":29.348,"effort":178808.07,"length":895,"time":9933.782,"vocabulary":112,"volume":6092.583,"operands":{"distinct":99,"total":447,"identifiers":["jest","mock","\"../../helpers/pouchDB\"","Date","now","fn","\"now\"","describe","\"Contacts Middleware\"","next","dispatch","middleware","beforeEach","ContactsMW","\"should handle CONTACT_GET_ALL action\"","it","\"retrieves data correct DB\"","Actions","getAllContacts","expect","getAllDocs","toHaveBeenCalled","toHaveBeenCalledWith","\"contacts\"","not","\"invoices\"","\"\"","resolves","toBe","mockData","contactsRecords","\"calls next after the promised is returned\"","action","then","calls","length","0","data","1","Object","assign","payload","\"handle error correctly\"","mockImplementationOnce","\"random-string\"","expectedError","Error","\"Incorrect database!\"","type","ACTION_TYPES","UI_NOTIFICATION_NEW","\"warning\"","message","\"handle unknown error correctly\"","unknownError","\"Something broke\"","Promise","reject","catch","err","\"should handle CONTACT_SAVE action\"","\"addes id and timestamp to contact data\"","newContact","fullname","faker","name","findName","email","internet","saveContact","saveDoc","\"should save records to DB\"","toEqual","\"should call next and dispatch notification \"","_id","\"id-string\"","created_at","\"success\"","i18n","t","\"messages:contact:saved\"","\"handle syntax error correctly\"","dbError","\"No database found!\"","docError","\"No doc found!\"","rejects","\"Something Broken!\"","\"should handle CONTACT_DELETE action\"","\"should remove record from DB correctly\"","contactID","\"jon-snow\"","deleteContact","deleteDoc","\"messages:contact:deleted\"","\"ned-stark\"","\"No contact found!\"","\"let other actions pass through\"","\"TEST\""]},"operators":{"distinct":13,"total":448,"identifiers":["()",".","=","function=>","let","{}","const","return",":","new","[]",",","... (spread)"]}},"paramCount":6,"sloc":{"logical":272,"physical":258}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../constants/actions.jsx","type":"esm"},{"line":2,"path":"../../actions/contacts","type":"esm"},{"line":3,"path":"../ContactsMW","type":"esm"},{"line":4,"path":"faker","type":"esm"},{"line":5,"path":"../../../i18n/i18n","type":"esm"},{"line":13,"path":"../../helpers/pouchDB","type":"esm"}],"errors":[],"lineEnd":258,"lineStart":1,"maintainability":110.703,"methods":[{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["\"now\""]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":15,"lineStart":15,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.028,"difficulty":1.8,"effort":153.198,"length":23,"time":8.511,"vocabulary":13,"volume":85.11,"operands":{"distinct":10,"total":12,"identifiers":["next","dispatch","middleware","beforeEach","describe","\"should handle CONTACT_GET_ALL action\"","\"should handle CONTACT_SAVE action\"","\"should handle CONTACT_DELETE action\"","it","\"let other actions pass through\""]},"operators":{"distinct":3,"total":11,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":241},"errors":[],"lineEnd":257,"lineStart":17,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.023,"difficulty":3.667,"effort":255.788,"length":21,"time":14.21,"vocabulary":10,"volume":69.76,"operands":{"distinct":6,"total":11,"identifiers":["next","jest","fn","dispatch","middleware","ContactsMW"]},"operators":{"distinct":4,"total":10,"identifiers":["=","()",".","{}"]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":23,"lineStart":19,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"retrieves data correct DB\"","\"calls next after the promised is returned\"","\"handle error correctly\"","\"handle unknown error correctly\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":65},"errors":[],"lineEnd":89,"lineStart":25,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.068,"difficulty":1.8,"effort":367.872,"length":50,"time":20.437,"vocabulary":17,"volume":204.373,"operands":{"distinct":15,"total":27,"identifiers":["middleware","Actions","getAllContacts","expect","getAllDocs","toHaveBeenCalled","toHaveBeenCalledWith","\"contacts\"","not","\"invoices\"","\"\"","resolves","toBe","mockData","contactsRecords"]},"operators":{"distinct":2,"total":23,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":13,"physical":12},"errors":[],"lineEnd":37,"lineStart":26,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.016,"difficulty":3,"effort":139.521,"length":14,"time":7.751,"vocabulary":10,"volume":46.507,"operands":{"distinct":5,"total":6,"identifiers":["action","Actions","getAllContacts","middleware","then"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":16},"errors":[],"lineEnd":54,"lineStart":39,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.029,"difficulty":2,"effort":171.903,"length":22,"time":9.55,"vocabulary":15,"volume":85.952,"operands":{"distinct":11,"total":11,"identifiers":["expect","dispatch","mock","calls","length","toBe","0","getAllDocs","\"contacts\"","then","data"]},"operators":{"distinct":4,"total":11,"identifiers":["()",".","return","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":13},"errors":[],"lineEnd":53,"lineStart":41,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.04,"difficulty":2.308,"effort":273.546,"length":29,"time":15.197,"vocabulary":17,"volume":118.536,"operands":{"distinct":13,"total":15,"identifiers":["expect","next","mock","calls","length","toBe","1","toHaveBeenCalledWith","Object","assign","action","payload","data"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":6,"physical":8},"errors":[],"lineEnd":52,"lineStart":45,"name":"<anon method-8>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.027,"difficulty":3,"effort":246.134,"length":21,"time":13.674,"vocabulary":15,"volume":82.045,"operands":{"distinct":9,"total":9,"identifiers":["getAllDocs","mockImplementationOnce","expectedError","Error","\"Incorrect database!\"","middleware","Actions","getAllContacts","then"]},"operators":{"distinct":6,"total":12,"identifiers":["()",".","function=>","const","=","new"]}},"paramCount":0,"sloc":{"logical":7,"physical":16},"errors":[],"lineEnd":71,"lineStart":56,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["getAllDocs","\"random-string\""]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":58,"lineStart":58,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.038,"difficulty":2.727,"effort":309,"length":29,"time":17.167,"vocabulary":15,"volume":113.3,"operands":{"distinct":11,"total":15,"identifiers":["expect","next","toHaveBeenCalled","toHaveBeenCalledWith","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"warning\"","message","expectedError"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":8,"physical":10},"errors":[],"lineEnd":70,"lineStart":61,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.027,"difficulty":3,"effort":246.134,"length":21,"time":13.674,"vocabulary":15,"volume":82.045,"operands":{"distinct":9,"total":9,"identifiers":["unknownError","Error","\"Something broke\"","getAllDocs","mockImplementationOnce","middleware","Actions","getAllContacts","then"]},"operators":{"distinct":6,"total":12,"identifiers":["const","=","new","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":16},"errors":[],"lineEnd":88,"lineStart":73,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["Promise","reject","unknownError"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":75,"lineStart":75,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.5,"effort":27.142,"length":7,"time":1.508,"vocabulary":6,"volume":18.095,"operands":{"distinct":3,"total":3,"identifiers":["getAllDocs","catch","err"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":11},"errors":[],"lineEnd":86,"lineStart":76,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.038,"difficulty":2.727,"effort":309,"length":29,"time":17.167,"vocabulary":15,"volume":113.3,"operands":{"distinct":11,"total":15,"identifiers":["expect","next","toHaveBeenCalled","toHaveBeenCalledWith","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"warning\"","message","unknownError"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":8,"physical":10},"errors":[],"lineEnd":86,"lineStart":77,"name":"<anon method-15>","paramNames":["err"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.02,"difficulty":1.667,"effort":100,"length":20,"time":5.556,"vocabulary":8,"volume":60,"operands":{"distinct":6,"total":10,"identifiers":["it","\"addes id and timestamp to contact data\"","\"should save records to DB\"","\"should call next and dispatch notification \"","\"handle syntax error correctly\"","\"handle unknown error correctly\""]},"operators":{"distinct":2,"total":10,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":100},"errors":[],"lineEnd":190,"lineStart":91,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.06,"difficulty":4.2,"effort":756.357,"length":41,"time":42.02,"vocabulary":21,"volume":180.085,"operands":{"distinct":15,"total":21,"identifiers":["newContact","fullname","faker","name","findName","email","internet","middleware","Actions","saveContact","expect","saveDoc","toHaveBeenCalled","toHaveBeenCalledWith","\"contacts\""]},"operators":{"distinct":6,"total":20,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":12},"errors":[],"lineEnd":103,"lineStart":92,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.043,"difficulty":4.455,"effort":575.829,"length":31,"time":31.99,"vocabulary":18,"volume":129.268,"operands":{"distinct":11,"total":14,"identifiers":["newContact","fullname","faker","name","findName","email","internet","middleware","Actions","saveContact","then"]},"operators":{"distinct":7,"total":17,"identifiers":["const","=","{}",":","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":14},"errors":[],"lineEnd":118,"lineStart":105,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["saveDoc","\"contacts\"","newContact","then","data"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":116,"lineStart":112,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.015,"difficulty":2.5,"effort":112.432,"length":13,"time":6.246,"vocabulary":11,"volume":44.973,"operands":{"distinct":6,"total":6,"identifiers":["expect","data","toEqual","mockData","contactsRecords","newContact"]},"operators":{"distinct":5,"total":7,"identifiers":["()",".","[]",",","... (spread)"]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":116,"lineStart":113,"name":"<anon method-20>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.062,"difficulty":4.375,"effort":811.414,"length":41,"time":45.079,"vocabulary":23,"volume":185.466,"operands":{"distinct":16,"total":20,"identifiers":["newContact","_id","\"id-string\"","created_at","\"now\"","fullname","faker","name","findName","email","internet","action","Actions","saveContact","middleware","then"]},"operators":{"distinct":7,"total":21,"identifiers":["const","=","{}",":","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":35},"errors":[],"lineEnd":154,"lineStart":120,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["saveDoc","\"contacts\"","newContact","then","data"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":22},"errors":[],"lineEnd":152,"lineStart":131,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.121,"difficulty":5.396,"effort":1951.437,"length":73,"time":108.413,"vocabulary":31,"volume":361.656,"operands":{"distinct":24,"total":37,"identifiers":["expect","next","mock","calls","length","toBe","1","toHaveBeenCalledWith","Object","assign","action","payload","mockData","contactsRecords","newContact","dispatch","type","ACTION_TYPES","UI_NOTIFICATION_NEW","\"success\"","message","i18n","t","\"messages:contact:saved\""]},"operators":{"distinct":7,"total":36,"identifiers":["()",".","{}",":","[]",",","... (spread)"]}},"paramCount":1,"sloc":{"logical":15,"physical":21},"errors":[],"lineEnd":152,"lineStart":132,"name":"<anon method-23>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.043,"difficulty":4.455,"effort":575.829,"length":31,"time":31.99,"vocabulary":18,"volume":129.268,"operands":{"distinct":11,"total":14,"identifiers":["newContact","fullname","faker","name","findName","email","internet","middleware","Actions","saveContact","then"]},"operators":{"distinct":7,"total":17,"identifiers":["const","=","{}",":","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":9,"physical":12},"errors":[],"lineEnd":167,"lineStart":156,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.043,"difficulty":4.25,"effort":547.941,"length":33,"time":30.441,"vocabulary":15,"volume":128.927,"operands":{"distinct":10,"total":17,"identifiers":["dbError","Error","\"No database found!\"","docError","\"No doc found!\"","expect","saveDoc","rejects","toEqual","\"invoices\""]},"operators":{"distinct":5,"total":16,"identifiers":["const","=","new","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":6},"errors":[],"lineEnd":166,"lineStart":161,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.064,"difficulty":4.75,"effort":914.7,"length":42,"time":50.817,"vocabulary":24,"volume":192.568,"operands":{"distinct":16,"total":19,"identifiers":["newContact","fullname","faker","name","findName","email","internet","expectedError","Error","\"Something Broken!\"","saveDoc","mockImplementationOnce","middleware","Actions","saveContact","then"]},"operators":{"distinct":8,"total":23,"identifiers":["const","=","{}",":","()",".","new","function=>"]}},"paramCount":0,"sloc":{"logical":12,"physical":21},"errors":[],"lineEnd":189,"lineStart":169,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["Promise","reject","expectedError"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":176,"lineStart":176,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.038,"difficulty":2.727,"effort":309,"length":29,"time":17.167,"vocabulary":15,"volume":113.3,"operands":{"distinct":11,"total":15,"identifiers":["expect","next","toHaveBeenCalled","toHaveBeenCalledWith","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"warning\"","message","expectedError"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":8,"physical":11},"errors":[],"lineEnd":188,"lineStart":178,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"should remove record from DB correctly\"","\"should call next and dispatch notification \"","\"handle error correctly\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":59},"errors":[],"lineEnd":250,"lineStart":192,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.023,"difficulty":3.214,"effort":218.939,"length":19,"time":12.163,"vocabulary":12,"volume":68.114,"operands":{"distinct":7,"total":9,"identifiers":["contactID","\"jon-snow\"","action","Actions","deleteContact","middleware","then"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":11},"errors":[],"lineEnd":203,"lineStart":193,"name":"<anon method-30>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["deleteDoc","\"contacts\"","contactID","then","data"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":201,"lineStart":198,"name":"<anon method-31>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1.5,"effort":27.142,"length":7,"time":1.508,"vocabulary":6,"volume":18.095,"operands":{"distinct":3,"total":3,"identifiers":["expect","data","toEqual"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","[]"]}},"paramCount":1,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":201,"lineStart":199,"name":"<anon method-32>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.023,"difficulty":3.214,"effort":218.939,"length":19,"time":12.163,"vocabulary":12,"volume":68.114,"operands":{"distinct":7,"total":9,"identifiers":["contactID","\"jon-snow\"","action","Actions","deleteContact","middleware","then"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":26},"errors":[],"lineEnd":230,"lineStart":205,"name":"<anon method-33>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["deleteDoc","\"contacts\"","contactID","then","data"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":19},"errors":[],"lineEnd":228,"lineStart":210,"name":"<anon method-34>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.105,"difficulty":4.048,"effort":1274.714,"length":67,"time":70.817,"vocabulary":26,"volume":314.929,"operands":{"distinct":21,"total":34,"identifiers":["expect","next","mock","calls","length","toBe","1","toHaveBeenCalledWith","Object","assign","action","payload","dispatch","type","ACTION_TYPES","UI_NOTIFICATION_NEW","\"success\"","message","i18n","t","\"messages:contact:deleted\""]},"operators":{"distinct":5,"total":33,"identifiers":["()",".","{}",":","[]"]}},"paramCount":1,"sloc":{"logical":15,"physical":18},"errors":[],"lineEnd":228,"lineStart":211,"name":"<anon method-35>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":3.333,"effort":273.482,"length":21,"time":15.193,"vocabulary":15,"volume":82.045,"operands":{"distinct":9,"total":10,"identifiers":["contactID","\"ned-stark\"","expectedError","Error","\"No contact found!\"","middleware","Actions","deleteContact","then"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","new","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":18},"errors":[],"lineEnd":249,"lineStart":232,"name":"<anon method-36>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.038,"difficulty":2.727,"effort":309,"length":29,"time":17.167,"vocabulary":15,"volume":113.3,"operands":{"distinct":11,"total":15,"identifiers":["expect","next","toHaveBeenCalled","toHaveBeenCalledWith","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"warning\"","message","expectedError"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":8,"physical":11},"errors":[],"lineEnd":248,"lineStart":238,"name":"<anon method-37>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.021,"difficulty":3.857,"effort":242.643,"length":17,"time":13.48,"vocabulary":13,"volume":62.907,"operands":{"distinct":7,"total":9,"identifiers":["action","type","\"TEST\"","middleware","expect","next","toHaveBeenCalledWith"]},"operators":{"distinct":6,"total":8,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":256,"lineStart":252,"name":"<anon method-38>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.368,"halstead":{"bugs":0.052,"difficulty":0.753,"effort":4584.822,"length":22.949,"time":254.712,"vocabulary":2.872,"volume":156.22,"operands":{"distinct":2.538,"total":11.462},"operators":{"distinct":0.333,"total":11.487}},"paramCount":0.154,"sloc":{"logical":6.974,"physical":6.615}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":21.52,"halstead":{"bugs":0.031,"difficulty":2.626,"effort":316.448,"length":23.079,"time":17.58,"vocabulary":12.895,"volume":91.683,"operands":{"distinct":8.737,"total":11.526},"operators":{"distinct":4.158,"total":11.553}},"paramCount":0.158,"sloc":{"logical":7,"physical":22.737}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/middlewares/__tests__/FormMW.spec.js","testCases":8,"smells":20,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  32 |       middleware(Actions.saveFormData());\n  33 |       // Expect\n> 34 |       expect(getState.mock.calls.length).toBe(1);\n     |                                              ^ Magic Number\n  35 |       // Save the Invoice, Save new contact & Clear the Form\n  36 |       expect(dispatch.mock.calls.length).toBe(3);\n  37 |       // No Calling Next","start":{"line":34,"column":46,"index":849}},{"frame":"  34 |       expect(getState.mock.calls.length).toBe(1);\n  35 |       // Save the Invoice, Save new contact & Clear the Form\n> 36 |       expect(dispatch.mock.calls.length).toBe(3);\n     |                                              ^ Magic Number\n  37 |       // No Calling Next\n  38 |       expect(next.mock.calls.length).toBe(0);\n  39 |     });","start":{"line":36,"column":46,"index":960}},{"frame":"  36 |       expect(dispatch.mock.calls.length).toBe(3);\n  37 |       // No Calling Next\n> 38 |       expect(next.mock.calls.length).toBe(0);\n     |                                          ^ Magic Number\n  39 |     });\n  40 |\n  41 |     it('should save Invocie, NOT save Contact and Clear the Form', () => {","start":{"line":38,"column":42,"index":1031}},{"frame":"  59 |\n  60 |       // Expect\n> 61 |       expect(getState.mock.calls.length).toBe(1);\n     |                                              ^ Magic Number\n  62 |       // Save the Invoice & Clear the Form\n  63 |       expect(dispatch.mock.calls.length).toBe(2);\n  64 |       // No Calling Next","start":{"line":61,"column":46,"index":1595}},{"frame":"  61 |       expect(getState.mock.calls.length).toBe(1);\n  62 |       // Save the Invoice & Clear the Form\n> 63 |       expect(dispatch.mock.calls.length).toBe(2);\n     |                                              ^ Magic Number\n  64 |       // No Calling Next\n  65 |       expect(next.mock.calls.length).toBe(0);\n  66 |     });","start":{"line":63,"column":46,"index":1688}},{"frame":"  63 |       expect(dispatch.mock.calls.length).toBe(2);\n  64 |       // No Calling Next\n> 65 |       expect(next.mock.calls.length).toBe(0);\n     |                                          ^ Magic Number\n  66 |     });\n  67 |\n  68 |     it('should update Invocie, save Contact, Clear the Form and Switch Tab', () => {","start":{"line":65,"column":42,"index":1759}},{"frame":"  85 |       middleware(action);\n  86 |       // Expect\n> 87 |       expect(getState.mock.calls.length).toBe(1);\n     |                                              ^ Magic Number\n  88 |       // Update the Invoice, Save new contact, Clear the Form & Change Tab\n  89 |       expect(dispatch.mock.calls.length).toBe(4);\n  90 |       // No Calling Next","start":{"line":87,"column":46,"index":2373}},{"frame":"  87 |       expect(getState.mock.calls.length).toBe(1);\n  88 |       // Update the Invoice, Save new contact, Clear the Form & Change Tab\n> 89 |       expect(dispatch.mock.calls.length).toBe(4);\n     |                                              ^ Magic Number\n  90 |       // No Calling Next\n  91 |       expect(next.mock.calls.length).toBe(0);\n  92 |     });","start":{"line":89,"column":46,"index":2498}},{"frame":"  89 |       expect(dispatch.mock.calls.length).toBe(4);\n  90 |       // No Calling Next\n> 91 |       expect(next.mock.calls.length).toBe(0);\n     |                                          ^ Magic Number\n  92 |     });\n  93 |\n  94 |     it('should update Invocie, NOT add new Contact, Clear the Form and Switch Tab', () => {","start":{"line":91,"column":42,"index":2569}},{"frame":"  113 |\n  114 |       // Expect\n> 115 |       expect(getState.mock.calls.length).toBe(1);\n      |                                              ^ Magic Number\n  116 |       // Update the Invoice, Clear the Form and Switch Tab\n  117 |       expect(dispatch.mock.calls.length).toBe(3);\n  118 |       // No Calling Next","start":{"line":115,"column":46,"index":3193}},{"frame":"  115 |       expect(getState.mock.calls.length).toBe(1);\n  116 |       // Update the Invoice, Clear the Form and Switch Tab\n> 117 |       expect(dispatch.mock.calls.length).toBe(3);\n      |                                              ^ Magic Number\n  118 |       // No Calling Next\n  119 |       expect(next.mock.calls.length).toBe(0);\n  120 |     });","start":{"line":117,"column":46,"index":3302}},{"frame":"  117 |       expect(dispatch.mock.calls.length).toBe(3);\n  118 |       // No Calling Next\n> 119 |       expect(next.mock.calls.length).toBe(0);\n      |                                          ^ Magic Number\n  120 |     });\n  121 |   });\n  122 |","start":{"line":119,"column":42,"index":3373}},{"frame":"  133 |\n  134 |     // Expect\n> 135 |     expect(getState.mock.calls.length).toBe(1);\n      |                                            ^ Magic Number\n  136 |     // No calling to Dispatch or Next since it failed validation\n  137 |     expect(dispatch.mock.calls.length).toBe(0);\n  138 |     expect(next.mock.calls.length).toBe(0);","start":{"line":135,"column":44,"index":3726}},{"frame":"  135 |     expect(getState.mock.calls.length).toBe(1);\n  136 |     // No calling to Dispatch or Next since it failed validation\n> 137 |     expect(dispatch.mock.calls.length).toBe(0);\n      |                                            ^ Magic Number\n  138 |     expect(next.mock.calls.length).toBe(0);\n  139 |   });\n  140 |","start":{"line":137,"column":44,"index":3839}},{"frame":"  136 |     // No calling to Dispatch or Next since it failed validation\n  137 |     expect(dispatch.mock.calls.length).toBe(0);\n> 138 |     expect(next.mock.calls.length).toBe(0);\n      |                                        ^ Magic Number\n  139 |   });\n  140 |\n  141 |   it('should hanlde FORM_ITEM_ADD action', () => {","start":{"line":138,"column":40,"index":3883}},{"frame":"  149 |\n  150 |     // Expect\n> 151 |     expect(getState.mock.calls.length).toBe(0);\n      |                                            ^ Magic Number\n  152 |     expect(next.mock.calls.length).toBe(1);\n  153 |     expect(next).toHaveBeenCalledWith(\n  154 |       Object.assign({}, action, {","start":{"line":151,"column":44,"index":4181}},{"frame":"  150 |     // Expect\n  151 |     expect(getState.mock.calls.length).toBe(0);\n> 152 |     expect(next.mock.calls.length).toBe(1);\n      |                                        ^ Magic Number\n  153 |     expect(next).toHaveBeenCalledWith(\n  154 |       Object.assign({}, action, {\n  155 |         payload: Object.assign({}, action.payload, {","start":{"line":152,"column":40,"index":4225}},{"frame":"  170 |\n  171 |     // Expect\n> 172 |     expect(getState.mock.calls.length).toBe(0);\n      |                                            ^ Magic Number\n  173 |     // Close Form Settings & Add Item\n  174 |     expect(dispatch.mock.calls.length).toBe(2);\n  175 |     expect(next.mock.calls.length).toBe(1);","start":{"line":172,"column":44,"index":4703}},{"frame":"  172 |     expect(getState.mock.calls.length).toBe(0);\n  173 |     // Close Form Settings & Add Item\n> 174 |     expect(dispatch.mock.calls.length).toBe(2);\n      |                                            ^ Magic Number\n  175 |     expect(next.mock.calls.length).toBe(1);\n  176 |     expect(next).toHaveBeenCalledWith(action);\n  177 |   });","start":{"line":174,"column":44,"index":4789}},{"frame":"  173 |     // Close Form Settings & Add Item\n  174 |     expect(dispatch.mock.calls.length).toBe(2);\n> 175 |     expect(next.mock.calls.length).toBe(1);\n      |                                        ^ Magic Number\n  176 |     expect(next).toHaveBeenCalledWith(action);\n  177 |   });\n  178 |","start":{"line":175,"column":40,"index":4833}}]}],"metrics":{"aggregate":{"cyclomatic":17,"cyclomaticDensity":8.374,"halstead":{"bugs":1.394,"difficulty":25.786,"effort":107835.857,"length":697,"time":5990.881,"vocabulary":64,"volume":4182,"operands":{"distinct":56,"total":361,"identifiers":["jest","mock","\"../../helpers/form\"","describe","\"Form Middleware\"","next","dispatch","getState","beforeEach","fn","\"should handle FORM_SAVE action\"","it","\"should save Invocie, save Contact and Clear the Form\"","form","validation","true","recipient","newRecipient","settings","editMode","active","false","middleware","FormMW","Actions","saveFormData","expect","calls","length","toBe","1","3","0","\"should save Invocie, NOT save Contact and Clear the Form\"","action","2","\"should update Invocie, save Contact, Clear the Form and Switch Tab\"","data","_id","\"invoice-uuid\"","4","\"should update Invocie, NOT add new Contact, Clear the Form and Switch Tab\"","\"should NOT pass validation\"","\"should hanlde FORM_ITEM_ADD action\"","addItem","toHaveBeenCalledWith","Object","assign","payload","id","\"id-string\"","\"should hanlde FORM_CLEAR action\"","clearForm","\"let other actions pass through\"","type","\"TEST\""]},"operators":{"distinct":8,"total":336,"identifiers":["()",".","function=>","let","=","{}",":","const"]}},"paramCount":0,"sloc":{"logical":203,"physical":187}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../actions/form","type":"esm"},{"line":2,"path":"../FormMW","type":"esm"}],"errors":[],"lineEnd":187,"lineStart":1,"maintainability":100.881,"methods":[{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.034,"difficulty":1.909,"effort":196.252,"length":27,"time":10.903,"vocabulary":14,"volume":102.799,"operands":{"distinct":11,"total":14,"identifiers":["next","dispatch","getState","beforeEach","describe","\"should handle FORM_SAVE action\"","it","\"should NOT pass validation\"","\"should hanlde FORM_ITEM_ADD action\"","\"should hanlde FORM_CLEAR action\"","\"let other actions pass through\""]},"operators":{"distinct":3,"total":13,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":15,"physical":181},"errors":[],"lineEnd":186,"lineStart":6,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.011,"difficulty":2.25,"effort":75.799,"length":12,"time":4.211,"vocabulary":7,"volume":33.688,"operands":{"distinct":4,"total":6,"identifiers":["next","jest","fn","dispatch"]},"operators":{"distinct":3,"total":6,"identifiers":["=","()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":12,"lineStart":9,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should save Invocie, save Contact and Clear the Form\"","\"should save Invocie, NOT save Contact and Clear the Form\"","\"should update Invocie, save Contact, Clear the Form and Switch Tab\"","\"should update Invocie, NOT add new Contact, Clear the Form and Switch Tab\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":108},"errors":[],"lineEnd":121,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.097,"difficulty":6,"effort":1737.048,"length":64,"time":96.503,"vocabulary":23,"volume":289.508,"operands":{"distinct":17,"total":34,"identifiers":["getState","jest","fn","middleware","FormMW","dispatch","next","Actions","saveFormData","expect","mock","calls","length","toBe","1","3","0"]},"operators":{"distinct":6,"total":30,"identifiers":["=","()",".","function=>","const","{}"]}},"paramCount":0,"sloc":{"logical":16,"physical":25},"errors":[],"lineEnd":39,"lineStart":15,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":1.111,"effort":84.564,"length":22,"time":4.698,"vocabulary":11,"volume":76.107,"operands":{"distinct":9,"total":10,"identifiers":["form","validation","true","recipient","newRecipient","settings","editMode","active","false"]},"operators":{"distinct":2,"total":12,"identifiers":["{}",":"]}},"paramCount":0,"sloc":{"logical":8,"physical":13},"errors":[],"lineEnd":29,"lineStart":17,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.104,"difficulty":6,"effort":1870.665,"length":68,"time":103.926,"vocabulary":24,"volume":311.777,"operands":{"distinct":18,"total":36,"identifiers":["getState","jest","fn","middleware","FormMW","dispatch","next","action","Actions","saveFormData","expect","mock","calls","length","toBe","1","2","0"]},"operators":{"distinct":6,"total":32,"identifiers":["=","()",".","function=>","const","{}"]}},"paramCount":0,"sloc":{"logical":17,"physical":26},"errors":[],"lineEnd":66,"lineStart":41,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.025,"difficulty":1.111,"effort":84.564,"length":22,"time":4.698,"vocabulary":11,"volume":76.107,"operands":{"distinct":9,"total":10,"identifiers":["form","validation","true","recipient","newRecipient","false","settings","editMode","active"]},"operators":{"distinct":2,"total":12,"identifiers":["{}",":"]}},"paramCount":0,"sloc":{"logical":8,"physical":11},"errors":[],"lineEnd":53,"lineStart":43,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.104,"difficulty":6,"effort":1870.665,"length":68,"time":103.926,"vocabulary":24,"volume":311.777,"operands":{"distinct":18,"total":36,"identifiers":["getState","jest","fn","middleware","FormMW","dispatch","next","action","Actions","saveFormData","expect","mock","calls","length","toBe","1","4","0"]},"operators":{"distinct":6,"total":32,"identifiers":["=","()",".","function=>","const","{}"]}},"paramCount":0,"sloc":{"logical":17,"physical":25},"errors":[],"lineEnd":92,"lineStart":68,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.035,"difficulty":1.182,"effort":122.451,"length":28,"time":6.803,"vocabulary":13,"volume":103.612,"operands":{"distinct":11,"total":13,"identifiers":["form","validation","true","recipient","newRecipient","settings","editMode","active","data","_id","\"invoice-uuid\""]},"operators":{"distinct":2,"total":15,"identifiers":["{}",":"]}},"paramCount":0,"sloc":{"logical":10,"physical":12},"errors":[],"lineEnd":81,"lineStart":70,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.104,"difficulty":6,"effort":1870.665,"length":68,"time":103.926,"vocabulary":24,"volume":311.777,"operands":{"distinct":18,"total":36,"identifiers":["getState","jest","fn","middleware","FormMW","dispatch","next","action","Actions","saveFormData","expect","mock","calls","length","toBe","1","3","0"]},"operators":{"distinct":6,"total":32,"identifiers":["=","()",".","function=>","const","{}"]}},"paramCount":0,"sloc":{"logical":17,"physical":27},"errors":[],"lineEnd":120,"lineStart":94,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.036,"difficulty":1.083,"effort":115.49,"length":28,"time":6.416,"vocabulary":14,"volume":106.606,"operands":{"distinct":12,"total":13,"identifiers":["form","validation","true","recipient","newRecipient","false","settings","editMode","active","data","_id","\"invoice-uuid\""]},"operators":{"distinct":2,"total":15,"identifiers":["{}",":"]}},"paramCount":0,"sloc":{"logical":10,"physical":12},"errors":[],"lineEnd":107,"lineStart":96,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.103,"difficulty":6.353,"effort":1954.179,"length":68,"time":108.565,"vocabulary":23,"volume":307.602,"operands":{"distinct":17,"total":36,"identifiers":["getState","jest","fn","middleware","FormMW","dispatch","next","action","Actions","saveFormData","expect","mock","calls","length","toBe","1","0"]},"operators":{"distinct":6,"total":32,"identifiers":["=","()",".","function=>","const","{}"]}},"paramCount":0,"sloc":{"logical":17,"physical":17},"errors":[],"lineEnd":139,"lineStart":123,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.005,"difficulty":1,"effort":16.253,"length":7,"time":0.903,"vocabulary":5,"volume":16.253,"operands":{"distinct":3,"total":3,"identifiers":["form","validation","false"]},"operators":{"distinct":2,"total":4,"identifiers":["{}",":"]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":127,"lineStart":125,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5,"halstead":{"bugs":0.131,"difficulty":5.478,"effort":2155.676,"length":81,"time":119.76,"vocabulary":29,"volume":393.496,"operands":{"distinct":23,"total":42,"identifiers":["getState","jest","fn","middleware","FormMW","dispatch","next","action","Actions","addItem","expect","mock","calls","length","toBe","0","1","toHaveBeenCalledWith","Object","assign","payload","id","\"id-string\""]},"operators":{"distinct":6,"total":39,"identifiers":["=","()",".","const","{}",":"]}},"paramCount":0,"sloc":{"logical":20,"physical":20},"errors":[],"lineEnd":160,"lineStart":141,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.113,"difficulty":5.263,"effort":1785.722,"length":74,"time":99.207,"vocabulary":24,"volume":339.287,"operands":{"distinct":19,"total":40,"identifiers":["getState","jest","fn","middleware","FormMW","dispatch","next","action","Actions","clearForm","expect","mock","calls","length","toBe","0","2","1","toHaveBeenCalledWith"]},"operators":{"distinct":5,"total":34,"identifiers":["=","()",".","const","{}"]}},"paramCount":0,"sloc":{"logical":18,"physical":16},"errors":[],"lineEnd":177,"lineStart":162,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.049,"difficulty":4.75,"effort":693.25,"length":35,"time":38.514,"vocabulary":18,"volume":145.947,"operands":{"distinct":12,"total":19,"identifiers":["getState","jest","fn","middleware","FormMW","dispatch","next","action","type","\"TEST\"","expect","toHaveBeenCalledWith"]},"operators":{"distinct":6,"total":16,"identifiers":["=","()",".","const","{}",":"]}},"paramCount":0,"sloc":{"logical":12,"physical":7},"errors":[],"lineEnd":185,"lineStart":179,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.493,"halstead":{"bugs":0.082,"difficulty":1.517,"effort":6343.286,"length":41,"time":352.405,"vocabulary":3.765,"volume":246,"operands":{"distinct":3.294,"total":21.235},"operators":{"distinct":0.471,"total":19.765}},"paramCount":0,"sloc":{"logical":11.941,"physical":11}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":10.698,"halstead":{"bugs":0.062,"difficulty":3.568,"effort":919.069,"length":43,"time":51.059,"vocabulary":16.938,"volume":185.704,"operands":{"distinct":12.875,"total":22.25},"operators":{"distinct":4.063,"total":20.75}},"paramCount":0,"sloc":{"logical":12.5,"physical":31.688}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/middlewares/__tests__/InvoicesMW.spec.js","testCases":25,"smells":58,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  38 |\n  39 |       // Call correct function\n> 40 |       expect(getAllDocs).toHaveBeenCalled();\n     |      ^ Duplicate Assert\n  41 |       expect(getAllDocs).toHaveBeenCalledWith('invoices');\n  42 |       expect(getAllDocs).not.toHaveBeenCalledWith('contacts');\n  43 |       expect(getAllDocs).not.toHaveBeenCalledWith('');","start":{"line":40,"column":6,"index":1101}},{"frame":"  39 |       // Call correct function\n  40 |       expect(getAllDocs).toHaveBeenCalled();\n> 41 |       expect(getAllDocs).toHaveBeenCalledWith('invoices');\n     |      ^ Duplicate Assert\n  42 |       expect(getAllDocs).not.toHaveBeenCalledWith('contacts');\n  43 |       expect(getAllDocs).not.toHaveBeenCalledWith('');\n  44 |       // Correctly resolves","start":{"line":41,"column":6,"index":1146}},{"frame":"  40 |       expect(getAllDocs).toHaveBeenCalled();\n  41 |       expect(getAllDocs).toHaveBeenCalledWith('invoices');\n> 42 |       expect(getAllDocs).not.toHaveBeenCalledWith('contacts');\n     |      ^ Duplicate Assert\n  43 |       expect(getAllDocs).not.toHaveBeenCalledWith('');\n  44 |       // Correctly resolves\n  45 |       expect(getAllDocs('invoices')).resolves.toBe(mockData.invoicesRecords);","start":{"line":42,"column":6,"index":1205}},{"frame":"  41 |       expect(getAllDocs).toHaveBeenCalledWith('invoices');\n  42 |       expect(getAllDocs).not.toHaveBeenCalledWith('contacts');\n> 43 |       expect(getAllDocs).not.toHaveBeenCalledWith('');\n     |      ^ Duplicate Assert\n  44 |       // Correctly resolves\n  45 |       expect(getAllDocs('invoices')).resolves.toBe(mockData.invoicesRecords);\n  46 |     });","start":{"line":43,"column":6,"index":1268}},{"frame":"  70 |       middleware(Actions.getInvoices()).then(() => {\n  71 |         // Calling next & send new notification\n> 72 |         expect(next).toHaveBeenCalled();\n     |        ^ Duplicate Assert\n  73 |         expect(next).toHaveBeenCalledWith({\n  74 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  75 |           payload: {","start":{"line":72,"column":8,"index":2345}},{"frame":"  71 |         // Calling next & send new notification\n  72 |         expect(next).toHaveBeenCalled();\n> 73 |         expect(next).toHaveBeenCalledWith({\n     |        ^ Duplicate Assert\n  74 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  75 |           payload: {\n  76 |             type: 'warning',","start":{"line":73,"column":8,"index":2386}},{"frame":"  86 |       middleware(Actions.getInvoices()).then(() =>\n  87 |         getAllDocs().catch(err => {\n> 88 |           expect(next).toHaveBeenCalled();\n     |          ^ Duplicate Assert\n  89 |           expect(next).toHaveBeenCalledWith({\n  90 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  91 |             payload: {","start":{"line":88,"column":10,"index":2890}},{"frame":"  87 |         getAllDocs().catch(err => {\n  88 |           expect(next).toHaveBeenCalled();\n> 89 |           expect(next).toHaveBeenCalledWith({\n     |          ^ Duplicate Assert\n  90 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  91 |             payload: {\n  92 |               type: 'warning',","start":{"line":89,"column":10,"index":2933}},{"frame":"  198 |         saveDoc('invoices', newInvoice).then(data => {\n  199 |           // ipc to main process\n> 200 |           expect(ipcRenderer.send).toHaveBeenCalled();\n      |          ^ Duplicate Assert\n  201 |           expect(ipcRenderer.send).toHaveBeenCalledWith(\n  202 |             'preview-invoice',\n  203 |             newInvoice","start":{"line":200,"column":10,"index":6123}},{"frame":"  199 |           // ipc to main process\n  200 |           expect(ipcRenderer.send).toHaveBeenCalled();\n> 201 |           expect(ipcRenderer.send).toHaveBeenCalledWith(\n      |          ^ Duplicate Assert\n  202 |             'preview-invoice',\n  203 |             newInvoice\n  204 |           );","start":{"line":201,"column":10,"index":6178}},{"frame":"  236 |       middleware(Actions.saveInvoice(newInvoice)).then(() => {\n  237 |         // Expect\n> 238 |         expect(next).toHaveBeenCalled();\n      |        ^ Duplicate Assert\n  239 |         expect(next).toHaveBeenCalledWith({\n  240 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  241 |           payload: {","start":{"line":238,"column":8,"index":7286}},{"frame":"  237 |         // Expect\n  238 |         expect(next).toHaveBeenCalled();\n> 239 |         expect(next).toHaveBeenCalledWith({\n      |        ^ Duplicate Assert\n  240 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  241 |           payload: {\n  242 |             type: 'warning',","start":{"line":239,"column":8,"index":7327}},{"frame":"  357 |       updateDoc.mockImplementationOnce(() => Promise.reject(expectedError));\n  358 |       middleware(Actions.updateInvoice(currentInvoice)).then(() => {\n> 359 |         expect(next).toHaveBeenCalled();\n      |        ^ Duplicate Assert\n  360 |         expect(next).toHaveBeenCalledWith({\n  361 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  362 |           payload: {","start":{"line":359,"column":8,"index":11082}},{"frame":"  358 |       middleware(Actions.updateInvoice(currentInvoice)).then(() => {\n  359 |         expect(next).toHaveBeenCalled();\n> 360 |         expect(next).toHaveBeenCalledWith({\n      |        ^ Duplicate Assert\n  361 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  362 |           payload: {\n  363 |             type: 'warning',","start":{"line":360,"column":8,"index":11123}},{"frame":"  447 |       middleware(Actions.deleteInvoice(invoiceID)).then(() => {\n  448 |         // Expect\n> 449 |         expect(next).toHaveBeenCalled();\n      |        ^ Duplicate Assert\n  450 |         expect(next).toHaveBeenCalledWith({\n  451 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  452 |           payload: {","start":{"line":449,"column":8,"index":13932}},{"frame":"  448 |         // Expect\n  449 |         expect(next).toHaveBeenCalled();\n> 450 |         expect(next).toHaveBeenCalledWith({\n      |        ^ Duplicate Assert\n  451 |           type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  452 |           payload: {\n  453 |             type: 'warning',","start":{"line":450,"column":8,"index":13973}},{"frame":"  505 |         getSingleDoc('test', invoiceID).then(() => {\n  506 |           // Expect\n> 507 |           expect(next).toHaveBeenCalled();\n      |          ^ Duplicate Assert\n  508 |           expect(next).toHaveBeenCalledWith({\n  509 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  510 |             payload: {","start":{"line":507,"column":10,"index":15865}},{"frame":"  506 |           // Expect\n  507 |           expect(next).toHaveBeenCalled();\n> 508 |           expect(next).toHaveBeenCalledWith({\n      |          ^ Duplicate Assert\n  509 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  510 |             payload: {\n  511 |               type: 'warning',","start":{"line":508,"column":10,"index":15908}},{"frame":"  542 |         getSingleDoc('test', invoiceID).then(() => {\n  543 |           // Expect\n> 544 |           expect(next).toHaveBeenCalled();\n      |          ^ Duplicate Assert\n  545 |           expect(next).toHaveBeenCalledWith({\n  546 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  547 |             payload: {","start":{"line":544,"column":10,"index":17109}},{"frame":"  543 |           // Expect\n  544 |           expect(next).toHaveBeenCalled();\n> 545 |           expect(next).toHaveBeenCalledWith({\n      |          ^ Duplicate Assert\n  546 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  547 |             payload: {\n  548 |               type: 'warning',","start":{"line":545,"column":10,"index":17152}}]},{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  217 |         const dbError = new Error('No database found!');\n  218 |         const docError = new Error('No doc found!');\n> 219 |         expect(saveDoc()).rejects.toEqual(dbError);\n      |               ^ Eager Test\n  220 |         expect(saveDoc('invoices')).rejects.toEqual(docError);\n  221 |       });\n  222 |     });","start":{"line":219,"column":15,"index":6709}},{"frame":"  218 |         const docError = new Error('No doc found!');\n  219 |         expect(saveDoc()).rejects.toEqual(dbError);\n> 220 |         expect(saveDoc('invoices')).rejects.toEqual(docError);\n      |               ^ Eager Test\n  221 |       });\n  222 |     });\n  223 |","start":{"line":220,"column":15,"index":6761}},{"frame":"  348 |         const dbError = new Error('No database found!');\n  349 |         const docError = new Error('No doc found!');\n> 350 |         expect(updateDoc()).rejects.toEqual(dbError);\n      |               ^ Eager Test\n  351 |         expect(updateDoc('invoices')).rejects.toEqual(docError);\n  352 |       });\n  353 |     });","start":{"line":350,"column":15,"index":10690}},{"frame":"  349 |         const docError = new Error('No doc found!');\n  350 |         expect(updateDoc()).rejects.toEqual(dbError);\n> 351 |         expect(updateDoc('invoices')).rejects.toEqual(docError);\n      |               ^ Eager Test\n  352 |       });\n  353 |     });\n  354 |","start":{"line":351,"column":15,"index":10744}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  43 |       expect(getAllDocs).not.toHaveBeenCalledWith('');\n  44 |       // Correctly resolves\n> 45 |       expect(getAllDocs('invoices')).resolves.toBe(mockData.invoicesRecords);\n     |             ^ Lazy Test\n  46 |     });\n  47 |\n  48 |     it('calls next after the promised is returned', () => {","start":{"line":45,"column":13,"index":1358}},{"frame":"  52 |         expect(dispatch.mock.calls.length).toBe(0);\n  53 |         // Call next with resolved data\n> 54 |         return getAllDocs('invoices').then(data => {\n     |               ^ Lazy Test\n  55 |           expect(next.mock.calls.length).toBe(1);\n  56 |           expect(next).toHaveBeenCalledWith(\n  57 |             Object.assign({}, action, {","start":{"line":54,"column":15,"index":1712}},{"frame":"  65 |     it('handle error correctly', () => {\n  66 |       // Make sure getAllDocs will be called with incorrect dbName\n> 67 |       getAllDocs.mockImplementationOnce(() => getAllDocs('random-string'));\n     |                                              ^ Lazy Test\n  68 |       const expectedError = new Error('Incorrect database!');\n  69 |       // Execute\n  70 |       middleware(Actions.getInvoices()).then(() => {","start":{"line":67,"column":46,"index":2127}},{"frame":"  85 |       getAllDocs.mockImplementationOnce(() => Promise.reject(unknownError));\n  86 |       middleware(Actions.getInvoices()).then(() =>\n> 87 |         getAllDocs().catch(err => {\n     |        ^ Lazy Test\n  88 |           expect(next).toHaveBeenCalled();\n  89 |           expect(next).toHaveBeenCalledWith({\n  90 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,","start":{"line":87,"column":8,"index":2852}},{"frame":"  118 |       // Execute\n  119 |       middleware(Actions.saveInvoice(newInvoice)).then(() =>\n> 120 |         saveDoc('invoices', newInvoice).then(data => {\n      |        ^ Lazy Test\n  121 |           // Expect\n  122 |           expect(data).toEqual([...mockData.invoicesRecords, newInvoice]);\n  123 |         })","start":{"line":120,"column":8,"index":3760}},{"frame":"  150 |       const action = Actions.saveInvoice(newInvoice);\n  151 |       middleware(action).then(() =>\n> 152 |         saveDoc('invoices', newInvoice).then(data => {\n      |        ^ Lazy Test\n  153 |           // Call next after the promised is returned\n  154 |           expect(next.mock.calls.length).toBe(1);\n  155 |           expect(next).toHaveBeenCalledWith(","start":{"line":152,"column":8,"index":4625}},{"frame":"  196 |       };\n  197 |       middleware(Actions.saveInvoice(newInvoice)).then(() =>\n> 198 |         saveDoc('invoices', newInvoice).then(data => {\n      |        ^ Lazy Test\n  199 |           // ipc to main process\n  200 |           expect(ipcRenderer.send).toHaveBeenCalled();\n  201 |           expect(ipcRenderer.send).toHaveBeenCalledWith(","start":{"line":198,"column":8,"index":6033}},{"frame":"  217 |         const dbError = new Error('No database found!');\n  218 |         const docError = new Error('No doc found!');\n> 219 |         expect(saveDoc()).rejects.toEqual(dbError);\n      |               ^ Lazy Test\n  220 |         expect(saveDoc('invoices')).rejects.toEqual(docError);\n  221 |       });\n  222 |     });","start":{"line":219,"column":15,"index":6709}},{"frame":"  316 |     it('should update the invoice', () => {\n  317 |       middleware(Actions.updateInvoice(currentInvoice)).then(() =>\n> 318 |         updateDoc('invoices', currentInvoice).then(data => {\n      |        ^ Lazy Test\n  319 |           expect(data).toEqual(mockData.invoicesRecords);\n  320 |         })\n  321 |       );","start":{"line":318,"column":8,"index":9484}},{"frame":"  324 |     it('should call next and dispatch notification', () => {\n  325 |       middleware(Actions.updateInvoice(currentInvoice)).then(() =>\n> 326 |         updateDoc('invoices', currentInvoice).then(data => {\n      |        ^ Lazy Test\n  327 |           // Call next after the promised is returned\n  328 |           expect(next.mock.calls.length).toBe(1);\n  329 |           expect(next).toHaveBeenCalledWith({","start":{"line":326,"column":8,"index":9760}},{"frame":"  348 |         const dbError = new Error('No database found!');\n  349 |         const docError = new Error('No doc found!');\n> 350 |         expect(updateDoc()).rejects.toEqual(dbError);\n      |               ^ Lazy Test\n  351 |         expect(updateDoc('invoices')).rejects.toEqual(docError);\n  352 |       });\n  353 |     });","start":{"line":350,"column":15,"index":10690}},{"frame":"  373 |       const invoiceID = 'jon-invoice';\n  374 |       middleware(Actions.deleteInvoice(invoiceID)).then(() =>\n> 375 |         deleteDoc('invoices', invoiceID).then(data => {\n      |        ^ Lazy Test\n  376 |           // Correctly resolves\n  377 |           expect(data).toEqual([]);\n  378 |         })","start":{"line":375,"column":8,"index":11576}},{"frame":"  386 |       // Execute\n  387 |       middleware(action).then(() =>\n> 388 |         deleteDoc('invoices', invoiceID).then(data => {\n      |        ^ Lazy Test\n  389 |           // Call next after the promised is returned\n  390 |           expect(next.mock.calls.length).toBe(1);\n  391 |           expect(next).toHaveBeenCalledWith(","start":{"line":388,"column":8,"index":11953}},{"frame":"  422 |       // Execute\n  423 |       middleware(Actions.deleteInvoice(invoiceID)).then(() =>\n> 424 |         deleteDoc('invoices', invoiceID).then(data => {\n      |        ^ Lazy Test\n  425 |           expect(dispatch.mock.calls.length).toBe(2);\n  426 |           // Dispatch success notification\n  427 |           expect(dispatch.mock.calls[0][0]).toEqual({","start":{"line":424,"column":8,"index":13101}},{"frame":"  486 |       const configs = { color: 'red' };\n  487 |       middleware(Actions.saveInvoiceConfigs(invoiceID, configs)).then(() =>\n> 488 |         getSingleDoc('invoices', invoiceID).then(doc => {\n      |        ^ Lazy Test\n  489 |           expect(dispatch.mock.calls.length).toBe(1);\n  490 |           expect(dispatch).toHaveBeenCalledWith({\n  491 |             type: ACTION_TYPES.INVOICE_UPDATE,","start":{"line":488,"column":8,"index":15192}},{"frame":"  503 |       // Execute\n  504 |       middleware(Actions.saveInvoiceConfigs(invoiceID, configs)).then(() => {\n> 505 |         getSingleDoc('test', invoiceID).then(() => {\n      |        ^ Lazy Test\n  506 |           // Expect\n  507 |           expect(next).toHaveBeenCalled();\n  508 |           expect(next).toHaveBeenCalledWith({","start":{"line":505,"column":8,"index":15790}},{"frame":"  523 |       const status = 'paid';\n  524 |       middleware(Actions.setInvoiceStatus(invoiceID, status)).then(() =>\n> 525 |         getSingleDoc('invoices', invoiceID).then(doc => {\n      |        ^ Lazy Test\n  526 |           expect(dispatch.mock.calls.length).toBe(1);\n  527 |           expect(dispatch).toHaveBeenCalledWith({\n  528 |             type: ACTION_TYPES.INVOICE_UPDATE,","start":{"line":525,"column":8,"index":16451}},{"frame":"  540 |       // Execute\n  541 |       middleware(Actions.setInvoiceStatus(invoiceID, status)).then(() => {\n> 542 |         getSingleDoc('test', invoiceID).then(() => {\n      |        ^ Lazy Test\n  543 |           // Expect\n  544 |           expect(next).toHaveBeenCalled();\n  545 |           expect(next).toHaveBeenCalledWith({","start":{"line":542,"column":8,"index":17034}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  50 |       middleware(action).then(() => {\n  51 |         // Never call dispatch\n> 52 |         expect(dispatch.mock.calls.length).toBe(0);\n     |                                                ^ Magic Number\n  53 |         // Call next with resolved data\n  54 |         return getAllDocs('invoices').then(data => {\n  55 |           expect(next.mock.calls.length).toBe(1);","start":{"line":52,"column":48,"index":1653}},{"frame":"  53 |         // Call next with resolved data\n  54 |         return getAllDocs('invoices').then(data => {\n> 55 |           expect(next.mock.calls.length).toBe(1);\n     |                                              ^ Magic Number\n  56 |           expect(next).toHaveBeenCalledWith(\n  57 |             Object.assign({}, action, {\n  58 |               payload: data,","start":{"line":55,"column":46,"index":1796}},{"frame":"  152 |         saveDoc('invoices', newInvoice).then(data => {\n  153 |           // Call next after the promised is returned\n> 154 |           expect(next.mock.calls.length).toBe(1);\n      |                                              ^ Magic Number\n  155 |           expect(next).toHaveBeenCalledWith(\n  156 |             Object.assign({}, action, {\n  157 |               payload: [","start":{"line":154,"column":46,"index":4772}},{"frame":"  162 |           );\n  163 |           // Dispatch success notification\n> 164 |           expect(dispatch.mock.calls.length).toBe(1);\n      |                                                  ^ Magic Number\n  165 |           expect(dispatch).toHaveBeenCalledWith({\n  166 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  167 |             payload: {","start":{"line":164,"column":50,"index":5096}},{"frame":"  273 |       middleware(action).then(() => {\n  274 |         // Call next\n> 275 |         expect(next.mock.calls.length).toBe(1);\n      |                                            ^ Magic Number\n  276 |         expect(next).toHaveBeenCalledWith(\n  277 |           Object.assign({}, action, {\n  278 |             payload: Object.assign({}, action.payload, {","start":{"line":275,"column":44,"index":8328}},{"frame":"  282 |         );\n  283 |         // Dispatch change Tab action\n> 284 |         expect(dispatch.mock.calls.length).toBe(1);\n      |                                                ^ Magic Number\n  285 |         expect(dispatch).toHaveBeenCalledWith({\n  286 |           type: ACTION_TYPES.UI_TAB_CHANGE,\n  287 |           payload: 'form'","start":{"line":284,"column":48,"index":8644}},{"frame":"  326 |         updateDoc('invoices', currentInvoice).then(data => {\n  327 |           // Call next after the promised is returned\n> 328 |           expect(next.mock.calls.length).toBe(1);\n      |                                              ^ Magic Number\n  329 |           expect(next).toHaveBeenCalledWith({\n  330 |             type: ACTION_TYPES.INVOICE_UPDATE,\n  331 |             payload: mockData.invoicesRecords,","start":{"line":328,"column":46,"index":9913}},{"frame":"  332 |           });\n  333 |           // Dispatch success notification\n> 334 |           expect(dispatch.mock.calls.length).toBe(1);\n      |                                                  ^ Magic Number\n  335 |           expect(dispatch).toHaveBeenCalledWith({\n  336 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  337 |             payload: {","start":{"line":334,"column":50,"index":10164}},{"frame":"  388 |         deleteDoc('invoices', invoiceID).then(data => {\n  389 |           // Call next after the promised is returned\n> 390 |           expect(next.mock.calls.length).toBe(1);\n      |                                              ^ Magic Number\n  391 |           expect(next).toHaveBeenCalledWith(\n  392 |             Object.assign({}, action, {\n  393 |               payload: [],","start":{"line":390,"column":46,"index":12101}},{"frame":"  395 |           );\n  396 |           // Dispatch success notification\n> 397 |           expect(dispatch.mock.calls.length).toBe(1);\n      |                                                  ^ Magic Number\n  398 |           expect(dispatch).toHaveBeenCalledWith({\n  399 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  400 |             payload: {","start":{"line":397,"column":50,"index":12338}},{"frame":"  423 |       middleware(Actions.deleteInvoice(invoiceID)).then(() =>\n  424 |         deleteDoc('invoices', invoiceID).then(data => {\n> 425 |           expect(dispatch.mock.calls.length).toBe(2);\n      |                                                  ^ Magic Number\n  426 |           // Dispatch success notification\n  427 |           expect(dispatch.mock.calls[0][0]).toEqual({\n  428 |             type: ACTION_TYPES.UI_NOTIFICATION_NEW,","start":{"line":425,"column":50,"index":13199}},{"frame":"  469 |       middleware(Actions.duplicateInvoice(invoiceData));\n  470 |       // Expect\n> 471 |       expect(dispatch.mock.calls.length).toBe(1);\n      |                                              ^ Magic Number\n  472 |       expect(dispatch).toHaveBeenCalledWith({\n  473 |         type: ACTION_TYPES.INVOICE_SAVE,\n  474 |         payload: Object.assign({}, invoiceData, {","start":{"line":471,"column":46,"index":14619}},{"frame":"  487 |       middleware(Actions.saveInvoiceConfigs(invoiceID, configs)).then(() =>\n  488 |         getSingleDoc('invoices', invoiceID).then(doc => {\n> 489 |           expect(dispatch.mock.calls.length).toBe(1);\n      |                                                  ^ Magic Number\n  490 |           expect(dispatch).toHaveBeenCalledWith({\n  491 |             type: ACTION_TYPES.INVOICE_UPDATE,\n  492 |             payload: Object.assign({}, doc, { configs }),","start":{"line":489,"column":50,"index":15292}},{"frame":"  524 |       middleware(Actions.setInvoiceStatus(invoiceID, status)).then(() =>\n  525 |         getSingleDoc('invoices', invoiceID).then(doc => {\n> 526 |           expect(dispatch.mock.calls.length).toBe(1);\n      |                                                  ^ Magic Number\n  527 |           expect(dispatch).toHaveBeenCalledWith({\n  528 |             type: ACTION_TYPES.INVOICE_UPDATE,\n  529 |             payload: Object.assign({}, doc, { status }),","start":{"line":526,"column":50,"index":16551}},{"frame":"  564 |     middleware(action);\n  565 |     // Move to Form Tab\n> 566 |     expect(next.mock.calls.length).toBe(1);\n      |                                        ^ Magic Number\n  567 |     expect(next).toHaveBeenCalledWith({\n  568 |       type: ACTION_TYPES.UI_TAB_CHANGE,\n  569 |       payload: 'form',","start":{"line":566,"column":40,"index":17721}},{"frame":"  570 |     });\n  571 |     // Update Form recipient data\n> 572 |     expect(dispatch.mock.calls.length).toBe(1);\n      |                                            ^ Magic Number\n  573 |     expect(dispatch).toHaveBeenCalledWith({\n  574 |       type: ACTION_TYPES.FORM_RECIPIENT_UPDATE,\n  575 |       payload: {","start":{"line":572,"column":44,"index":17914}}]}],"metrics":{"aggregate":{"cyclomatic":79,"cyclomaticDensity":12.382,"halstead":{"bugs":5.45,"difficulty":37.505,"effort":613220.249,"length":2139,"time":34067.792,"vocabulary":200,"volume":16350.208,"operands":{"distinct":187,"total":1079,"identifiers":["getAllDocs","getSingleDoc","saveDoc","deleteDoc","updateDoc","mockData","require","\"../../helpers/pouchDB\"","jest","mock","\"../../helpers/invoice\"","Date","now","fn","\"now\"","describe","\"Invoices Middleware\"","next","dispatch","middleware","getState","beforeEach","form","settings","editMode","active","false","InvoicesMW","\"should handle INVOICE_GET_ALL action\"","it","\"retrieves data from correct DB\"","Actions","getInvoices","expect","toHaveBeenCalled","toHaveBeenCalledWith","\"invoices\"","not","\"contacts\"","\"\"","resolves","toBe","invoicesRecords","\"calls next after the promised is returned\"","action","then","calls","length","0","data","1","Object","assign","payload","\"handle error correctly\"","mockImplementationOnce","\"random-string\"","expectedError","Error","\"Incorrect database!\"","type","ACTION_TYPES","UI_NOTIFICATION_NEW","\"warning\"","message","\"handle unknown error correctly\"","unknownError","\"Something broke\"","Promise","reject","catch","err","\"should handle INVOICE_SAVE action\"","\"should save records to DB\"","newInvoice","recipient","fullname","faker","name","findName","email","internet","rows","id","uuidv4","description","commerce","productName","price","quantity","random","number","10","saveInvoice","toEqual","\"should call next and dispatch notification \"","currency","code","\"USD\"","placement","\"before\"","fraction","2","separator","\"commaDot\"","\"success\"","i18n","t","\"messages:invoice:saved\"","\"tell main process to open preview window with invoice data\"","ipcRenderer","send","\"preview-invoice\"","\"handle syntax error correctly\"","dbError","\"No database found!\"","docError","\"No doc found!\"","rejects","\"Something Broken!\"","\"should handle INVOICE_EDIT action\"","\"should call next and dispatch change Tab action\"","currentInvoice","symbol","\"$\"","editInvoice","contacts","contactsRecords","UI_TAB_CHANGE","\"form\"","\"should handle INVOICE_UPDATE action\"","\"should update the invoice\"","updateInvoice","\"should call next and dispatch notification\"","INVOICE_UPDATE","\"messages:invoice:updated\"","\"should handle syntax error correctly\"","\"should handle unkown error correctly\"","\"should handle INVOICE_DELETE action\"","\"should remove record from DB correctly\"","invoiceID","\"jon-invoice\"","deleteInvoice","\"messages:invoice:deleted\"","\"should clear the form if this invoice is being editted\"","true","_id","FORM_CLEAR","\"ned-stark\"","\"No invoice found!\"","\"should handle INVOICE_DUPLICATE action correctly\"","\"update the current invoice and dispatch save action\"","invoiceData","\"a-random-string\"","_rev","\"another-random-string\"","created_at","\"yesterday\"","duplicateInvoice","INVOICE_SAVE","\"id-string\"","null","\"should handle INVOICE_CONFIGS_SAVE action correctly\"","\"get the doc, merge with config object and dispatch a new action\"","configs","color","\"red\"","saveInvoiceConfigs","doc","\"test\"","\"should handle INVOICE_SET_STATUS action\"","\"get the doc, merge with status object and dispatch a new action\"","status","\"paid\"","setInvoiceStatus","\"should handle INVOICE_NEW_FROM_CONTACT action\"","contact","\"jon-snow\"","\"Jon Snow\"","\"jon@hbo.com\"","newInvoiceFromContact","FORM_RECIPIENT_UPDATE","new","select","newRecipient","\"let other actions pass through\"","\"TEST\""]},"operators":{"distinct":13,"total":1060,"identifiers":["const","=","{}","()",".","function=>","let",":","return","new","[]",",","... (spread)"]}},"paramCount":12,"sloc":{"logical":638,"physical":590}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../constants/actions.jsx","type":"esm"},{"line":2,"path":"../../actions/invoices","type":"esm"},{"line":3,"path":"../InvoicesMW","type":"esm"},{"line":4,"path":"faker","type":"esm"},{"line":5,"path":"uuid/v4","type":"esm"},{"line":6,"path":"../../../i18n/i18n","type":"esm"},{"line":17,"path":"../../helpers/invoice","type":"esm"},{"line":18,"path":"electron","type":"esm"}],"errors":[],"lineEnd":590,"lineStart":1,"maintainability":106.527,"methods":[{"cyclomatic":1,"cyclomaticDensity":100,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":1,"time":0,"vocabulary":1,"volume":0,"operands":{"distinct":1,"total":1,"identifiers":["\"now\""]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":1,"physical":1},"errors":[],"lineEnd":21,"lineStart":21,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.846,"halstead":{"bugs":0.069,"difficulty":2.206,"effort":457.616,"length":48,"time":25.423,"vocabulary":20,"volume":207.453,"operands":{"distinct":17,"total":25,"identifiers":["next","dispatch","middleware","getState","beforeEach","describe","\"should handle INVOICE_GET_ALL action\"","\"should handle INVOICE_SAVE action\"","\"should handle INVOICE_EDIT action\"","\"should handle INVOICE_UPDATE action\"","\"should handle INVOICE_DELETE action\"","\"should handle INVOICE_DUPLICATE action correctly\"","\"should handle INVOICE_CONFIGS_SAVE action correctly\"","\"should handle INVOICE_SET_STATUS action\"","it","\"should handle INVOICE_NEW_FROM_CONTACT action\"","\"let other actions pass through\""]},"operators":{"distinct":3,"total":23,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":26,"physical":567},"errors":[],"lineEnd":589,"lineStart":23,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.036,"difficulty":5.714,"effort":614.565,"length":30,"time":34.143,"vocabulary":12,"volume":107.549,"operands":{"distinct":7,"total":16,"identifiers":["next","jest","fn","dispatch","getState","middleware","InvoicesMW"]},"operators":{"distinct":5,"total":14,"identifiers":["=","()",".","function=>","{}"]}},"paramCount":0,"sloc":{"logical":12,"physical":8},"errors":[],"lineEnd":33,"lineStart":26,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.012,"difficulty":1,"effort":36.496,"length":13,"time":2.028,"vocabulary":7,"volume":36.496,"operands":{"distinct":5,"total":5,"identifiers":["form","settings","editMode","active","false"]},"operators":{"distinct":2,"total":8,"identifiers":["{}",":"]}},"paramCount":0,"sloc":{"logical":5,"physical":3},"errors":[],"lineEnd":31,"lineStart":29,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"retrieves data from correct DB\"","\"calls next after the promised is returned\"","\"handle error correctly\"","\"handle unknown error correctly\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":65},"errors":[],"lineEnd":99,"lineStart":35,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.068,"difficulty":1.8,"effort":367.872,"length":50,"time":20.437,"vocabulary":17,"volume":204.373,"operands":{"distinct":15,"total":27,"identifiers":["middleware","Actions","getInvoices","expect","getAllDocs","toHaveBeenCalled","toHaveBeenCalledWith","\"invoices\"","not","\"contacts\"","\"\"","resolves","toBe","mockData","invoicesRecords"]},"operators":{"distinct":2,"total":23,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":13,"physical":11},"errors":[],"lineEnd":46,"lineStart":36,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.016,"difficulty":3,"effort":139.521,"length":14,"time":7.751,"vocabulary":10,"volume":46.507,"operands":{"distinct":5,"total":6,"identifiers":["action","Actions","getInvoices","middleware","then"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":16},"errors":[],"lineEnd":63,"lineStart":48,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.029,"difficulty":2,"effort":171.903,"length":22,"time":9.55,"vocabulary":15,"volume":85.952,"operands":{"distinct":11,"total":11,"identifiers":["expect","dispatch","mock","calls","length","toBe","0","getAllDocs","\"invoices\"","then","data"]},"operators":{"distinct":4,"total":11,"identifiers":["()",".","return","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":13},"errors":[],"lineEnd":62,"lineStart":50,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.04,"difficulty":2.308,"effort":273.546,"length":29,"time":15.197,"vocabulary":17,"volume":118.536,"operands":{"distinct":13,"total":15,"identifiers":["expect","next","mock","calls","length","toBe","1","toHaveBeenCalledWith","Object","assign","action","payload","data"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":6,"physical":8},"errors":[],"lineEnd":61,"lineStart":54,"name":"<anon method-9>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.027,"difficulty":3,"effort":246.134,"length":21,"time":13.674,"vocabulary":15,"volume":82.045,"operands":{"distinct":9,"total":9,"identifiers":["getAllDocs","mockImplementationOnce","expectedError","Error","\"Incorrect database!\"","middleware","Actions","getInvoices","then"]},"operators":{"distinct":6,"total":12,"identifiers":["()",".","function=>","const","=","new"]}},"paramCount":0,"sloc":{"logical":7,"physical":17},"errors":[],"lineEnd":81,"lineStart":65,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.002,"difficulty":0.5,"effort":2.377,"length":3,"time":0.132,"vocabulary":3,"volume":4.755,"operands":{"distinct":2,"total":2,"identifiers":["getAllDocs","\"random-string\""]},"operators":{"distinct":1,"total":1,"identifiers":["()"]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":67,"lineStart":67,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.038,"difficulty":2.727,"effort":309,"length":29,"time":17.167,"vocabulary":15,"volume":113.3,"operands":{"distinct":11,"total":15,"identifiers":["expect","next","toHaveBeenCalled","toHaveBeenCalledWith","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"warning\"","message","expectedError"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":8,"physical":11},"errors":[],"lineEnd":80,"lineStart":70,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.027,"difficulty":3,"effort":246.134,"length":21,"time":13.674,"vocabulary":15,"volume":82.045,"operands":{"distinct":9,"total":9,"identifiers":["unknownError","Error","\"Something broke\"","getAllDocs","mockImplementationOnce","middleware","Actions","getInvoices","then"]},"operators":{"distinct":6,"total":12,"identifiers":["const","=","new","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":16},"errors":[],"lineEnd":98,"lineStart":83,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["Promise","reject","unknownError"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":85,"lineStart":85,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.5,"effort":27.142,"length":7,"time":1.508,"vocabulary":6,"volume":18.095,"operands":{"distinct":3,"total":3,"identifiers":["getAllDocs","catch","err"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":11},"errors":[],"lineEnd":96,"lineStart":86,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.038,"difficulty":2.727,"effort":309,"length":29,"time":17.167,"vocabulary":15,"volume":113.3,"operands":{"distinct":11,"total":15,"identifiers":["expect","next","toHaveBeenCalled","toHaveBeenCalledWith","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"warning\"","message","unknownError"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":8,"physical":10},"errors":[],"lineEnd":96,"lineStart":87,"name":"<anon method-16>","paramNames":["err"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.02,"difficulty":1.667,"effort":100,"length":20,"time":5.556,"vocabulary":8,"volume":60,"operands":{"distinct":6,"total":10,"identifiers":["it","\"should save records to DB\"","\"should call next and dispatch notification \"","\"tell main process to open preview window with invoice data\"","\"handle syntax error correctly\"","\"handle unknown error correctly\""]},"operators":{"distinct":2,"total":10,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":148},"errors":[],"lineEnd":248,"lineStart":101,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.263,"halstead":{"bugs":0.111,"difficulty":5.391,"effort":1789.542,"length":67,"time":99.419,"vocabulary":31,"volume":331.931,"operands":{"distinct":23,"total":31,"identifiers":["newInvoice","recipient","fullname","faker","name","findName","email","internet","rows","id","uuidv4","description","commerce","productName","price","quantity","random","number","10","middleware","Actions","saveInvoice","then"]},"operators":{"distinct":8,"total":36,"identifiers":["const","=","{}",":","()",".","[]","function=>"]}},"paramCount":0,"sloc":{"logical":19,"physical":24},"errors":[],"lineEnd":125,"lineStart":102,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["saveDoc","\"invoices\"","newInvoice","then","data"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":123,"lineStart":119,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.015,"difficulty":2.5,"effort":112.432,"length":13,"time":6.246,"vocabulary":11,"volume":44.973,"operands":{"distinct":6,"total":6,"identifiers":["expect","data","toEqual","mockData","invoicesRecords","newInvoice"]},"operators":{"distinct":5,"total":7,"identifiers":["()",".","[]",",","... (spread)"]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":123,"lineStart":120,"name":"<anon method-20>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.154,"difficulty":5.091,"effort":2345.634,"length":86,"time":130.313,"vocabulary":41,"volume":460.749,"operands":{"distinct":33,"total":42,"identifiers":["newInvoice","recipient","fullname","faker","name","findName","email","internet","currency","code","\"USD\"","placement","\"before\"","fraction","2","separator","\"commaDot\"","rows","id","uuidv4","description","commerce","productName","price","quantity","random","number","10","action","Actions","saveInvoice","middleware","then"]},"operators":{"distinct":8,"total":44,"identifiers":["const","=","{}",":","()",".","[]","function=>"]}},"paramCount":0,"sloc":{"logical":25,"physical":48},"errors":[],"lineEnd":174,"lineStart":127,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["saveDoc","\"invoices\"","newInvoice","then","data"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":22},"errors":[],"lineEnd":172,"lineStart":151,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.121,"difficulty":5.396,"effort":1951.437,"length":73,"time":108.413,"vocabulary":31,"volume":361.656,"operands":{"distinct":24,"total":37,"identifiers":["expect","next","mock","calls","length","toBe","1","toHaveBeenCalledWith","Object","assign","action","payload","mockData","invoicesRecords","newInvoice","dispatch","type","ACTION_TYPES","UI_NOTIFICATION_NEW","\"success\"","message","i18n","t","\"messages:invoice:saved\""]},"operators":{"distinct":7,"total":36,"identifiers":["()",".","{}",":","[]",",","... (spread)"]}},"paramCount":1,"sloc":{"logical":15,"physical":21},"errors":[],"lineEnd":172,"lineStart":152,"name":"<anon method-23>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.167,"halstead":{"bugs":0.145,"difficulty":5,"effort":2181.991,"length":82,"time":121.222,"vocabulary":40,"volume":436.398,"operands":{"distinct":32,"total":40,"identifiers":["newInvoice","recipient","fullname","faker","name","findName","email","internet","currency","code","\"USD\"","placement","\"before\"","fraction","2","separator","\"commaDot\"","rows","id","uuidv4","description","commerce","productName","price","quantity","random","number","10","middleware","Actions","saveInvoice","then"]},"operators":{"distinct":8,"total":42,"identifiers":["const","=","{}",":","()",".","[]","function=>"]}},"paramCount":0,"sloc":{"logical":24,"physical":32},"errors":[],"lineEnd":207,"lineStart":176,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["saveDoc","\"invoices\"","newInvoice","then","data"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":9},"errors":[],"lineEnd":205,"lineStart":197,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.019,"difficulty":1.429,"effort":81.512,"length":18,"time":4.528,"vocabulary":9,"volume":57.059,"operands":{"distinct":7,"total":10,"identifiers":["expect","ipcRenderer","send","toHaveBeenCalled","toHaveBeenCalledWith","\"preview-invoice\"","newInvoice"]},"operators":{"distinct":2,"total":8,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":4,"physical":8},"errors":[],"lineEnd":205,"lineStart":198,"name":"<anon method-26>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.048,"difficulty":4.375,"effort":631.879,"length":34,"time":35.104,"vocabulary":19,"volume":144.43,"operands":{"distinct":12,"total":15,"identifiers":["newInvoice","recipient","fullname","faker","name","findName","email","internet","middleware","Actions","saveInvoice","then"]},"operators":{"distinct":7,"total":19,"identifiers":["const","=","{}",":","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":14},"errors":[],"lineEnd":222,"lineStart":209,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.043,"difficulty":4.25,"effort":547.941,"length":33,"time":30.441,"vocabulary":15,"volume":128.927,"operands":{"distinct":10,"total":17,"identifiers":["dbError","Error","\"No database found!\"","docError","\"No doc found!\"","expect","saveDoc","rejects","toEqual","\"invoices\""]},"operators":{"distinct":5,"total":16,"identifiers":["const","=","new","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":6},"errors":[],"lineEnd":221,"lineStart":216,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.07,"difficulty":4.706,"effort":983.405,"length":45,"time":54.634,"vocabulary":25,"volume":208.974,"operands":{"distinct":17,"total":20,"identifiers":["newInvoice","recipient","fullname","faker","name","findName","email","internet","expectedError","Error","\"Something Broken!\"","saveDoc","mockImplementationOnce","middleware","Actions","saveInvoice","then"]},"operators":{"distinct":8,"total":25,"identifiers":["const","=","{}",":","()",".","new","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":24},"errors":[],"lineEnd":247,"lineStart":224,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["Promise","reject","expectedError"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":233,"lineStart":233,"name":"<anon method-30>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.038,"difficulty":2.727,"effort":309,"length":29,"time":17.167,"vocabulary":15,"volume":113.3,"operands":{"distinct":11,"total":15,"identifiers":["expect","next","toHaveBeenCalled","toHaveBeenCalledWith","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"warning\"","message","expectedError"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":8,"physical":11},"errors":[],"lineEnd":246,"lineStart":236,"name":"<anon method-31>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"should call next and dispatch change Tab action\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":42},"errors":[],"lineEnd":291,"lineStart":250,"name":"<anon method-32>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.348,"halstead":{"bugs":0.139,"difficulty":5.241,"effort":2184.378,"length":80,"time":121.354,"vocabulary":37,"volume":416.756,"operands":{"distinct":29,"total":38,"identifiers":["currentInvoice","recipient","fullname","faker","name","findName","email","internet","currency","code","\"USD\"","symbol","\"$\"","rows","id","uuidv4","description","commerce","productName","price","quantity","random","number","10","action","Actions","editInvoice","middleware","then"]},"operators":{"distinct":8,"total":42,"identifiers":["const","=","{}",":","()",".","[]","function=>"]}},"paramCount":0,"sloc":{"logical":23,"physical":40},"errors":[],"lineEnd":290,"lineStart":251,"name":"<anon method-33>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.107,"difficulty":3.6,"effort":1155.411,"length":70,"time":64.189,"vocabulary":24,"volume":320.947,"operands":{"distinct":20,"total":36,"identifiers":["expect","next","mock","calls","length","toBe","1","toHaveBeenCalledWith","Object","assign","action","payload","contacts","mockData","contactsRecords","dispatch","type","ACTION_TYPES","UI_TAB_CHANGE","\"form\""]},"operators":{"distinct":4,"total":34,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":14,"physical":17},"errors":[],"lineEnd":289,"lineStart":273,"name":"<anon method-34>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.023,"difficulty":2.143,"effort":149.487,"length":21,"time":8.305,"vocabulary":10,"volume":69.76,"operands":{"distinct":7,"total":10,"identifiers":["currentInvoice","beforeEach","it","\"should update the invoice\"","\"should call next and dispatch notification\"","\"should handle syntax error correctly\"","\"should handle unkown error correctly\""]},"operators":{"distinct":3,"total":11,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":77},"errors":[],"lineEnd":369,"lineStart":293,"name":"<anon method-35>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.105,"difficulty":3.875,"effort":1216.909,"length":64,"time":67.606,"vocabulary":30,"volume":314.041,"operands":{"distinct":24,"total":31,"identifiers":["currentInvoice","recipient","fullname","faker","name","findName","email","internet","currency","code","\"USD\"","symbol","\"$\"","rows","id","uuidv4","description","commerce","productName","price","quantity","random","number","10"]},"operators":{"distinct":6,"total":33,"identifiers":["=","{}",":","()",".","[]"]}},"paramCount":0,"sloc":{"logical":18,"physical":20},"errors":[],"lineEnd":314,"lineStart":295,"name":"<anon method-36>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.011,"difficulty":1.5,"effort":49.5,"length":11,"time":2.75,"vocabulary":8,"volume":33,"operands":{"distinct":5,"total":5,"identifiers":["middleware","Actions","updateInvoice","currentInvoice","then"]},"operators":{"distinct":3,"total":6,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":7},"errors":[],"lineEnd":322,"lineStart":316,"name":"<anon method-37>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["updateDoc","\"invoices\"","currentInvoice","then","data"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":320,"lineStart":317,"name":"<anon method-38>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.008,"difficulty":1,"effort":25.266,"length":9,"time":1.404,"vocabulary":7,"volume":25.266,"operands":{"distinct":5,"total":5,"identifiers":["expect","data","toEqual","mockData","invoicesRecords"]},"operators":{"distinct":2,"total":4,"identifiers":["()","."]}},"paramCount":1,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":320,"lineStart":318,"name":"<anon method-39>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.011,"difficulty":1.5,"effort":49.5,"length":11,"time":2.75,"vocabulary":8,"volume":33,"operands":{"distinct":5,"total":5,"identifiers":["middleware","Actions","updateInvoice","currentInvoice","then"]},"operators":{"distinct":3,"total":6,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":21},"errors":[],"lineEnd":344,"lineStart":324,"name":"<anon method-40>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["updateDoc","\"invoices\"","currentInvoice","then","data"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":18},"errors":[],"lineEnd":342,"lineStart":325,"name":"<anon method-41>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.105,"difficulty":3.429,"effort":1082.682,"length":68,"time":60.149,"vocabulary":25,"volume":315.782,"operands":{"distinct":21,"total":36,"identifiers":["expect","next","mock","calls","length","toBe","1","toHaveBeenCalledWith","type","ACTION_TYPES","INVOICE_UPDATE","payload","mockData","invoicesRecords","dispatch","UI_NOTIFICATION_NEW","\"success\"","message","i18n","t","\"messages:invoice:updated\""]},"operators":{"distinct":4,"total":32,"identifiers":["()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":15,"physical":17},"errors":[],"lineEnd":342,"lineStart":326,"name":"<anon method-42>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.011,"difficulty":1.5,"effort":49.5,"length":11,"time":2.75,"vocabulary":8,"volume":33,"operands":{"distinct":5,"total":5,"identifiers":["middleware","Actions","updateInvoice","currentInvoice","then"]},"operators":{"distinct":3,"total":6,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":8},"errors":[],"lineEnd":353,"lineStart":346,"name":"<anon method-43>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.043,"difficulty":4.25,"effort":547.941,"length":33,"time":30.441,"vocabulary":15,"volume":128.927,"operands":{"distinct":10,"total":17,"identifiers":["dbError","Error","\"No database found!\"","docError","\"No doc found!\"","expect","updateDoc","rejects","toEqual","\"invoices\""]},"operators":{"distinct":5,"total":16,"identifiers":["const","=","new","()","."]}},"paramCount":0,"sloc":{"logical":8,"physical":6},"errors":[],"lineEnd":352,"lineStart":347,"name":"<anon method-44>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.029,"difficulty":3,"effort":264,"length":22,"time":14.667,"vocabulary":16,"volume":88,"operands":{"distinct":10,"total":10,"identifiers":["expectedError","Error","\"Something Broken!\"","updateDoc","mockImplementationOnce","middleware","Actions","updateInvoice","currentInvoice","then"]},"operators":{"distinct":6,"total":12,"identifiers":["const","=","new","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":14},"errors":[],"lineEnd":368,"lineStart":355,"name":"<anon method-45>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.004,"difficulty":1,"effort":11.61,"length":5,"time":0.645,"vocabulary":5,"volume":11.61,"operands":{"distinct":3,"total":3,"identifiers":["Promise","reject","expectedError"]},"operators":{"distinct":2,"total":2,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":1},"errors":[],"lineEnd":357,"lineStart":357,"name":"<anon method-46>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.038,"difficulty":2.727,"effort":309,"length":29,"time":17.167,"vocabulary":15,"volume":113.3,"operands":{"distinct":11,"total":15,"identifiers":["expect","next","toHaveBeenCalled","toHaveBeenCalledWith","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"warning\"","message","expectedError"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":8,"physical":10},"errors":[],"lineEnd":367,"lineStart":358,"name":"<anon method-47>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should remove record from DB correctly\"","\"should call next and dispatch notification \"","\"should clear the form if this invoice is being editted\"","\"handle error correctly\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":89},"errors":[],"lineEnd":459,"lineStart":371,"name":"<anon method-48>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.017,"difficulty":2.917,"effort":151.35,"length":15,"time":8.408,"vocabulary":11,"volume":51.891,"operands":{"distinct":6,"total":7,"identifiers":["invoiceID","\"jon-invoice\"","middleware","Actions","deleteInvoice","then"]},"operators":{"distinct":5,"total":8,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":5,"physical":9},"errors":[],"lineEnd":380,"lineStart":372,"name":"<anon method-49>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["deleteDoc","\"invoices\"","invoiceID","then","data"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":5},"errors":[],"lineEnd":378,"lineStart":374,"name":"<anon method-50>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.006,"difficulty":1.5,"effort":27.142,"length":7,"time":1.508,"vocabulary":6,"volume":18.095,"operands":{"distinct":3,"total":3,"identifiers":["expect","data","toEqual"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","[]"]}},"paramCount":1,"sloc":{"logical":2,"physical":4},"errors":[],"lineEnd":378,"lineStart":375,"name":"<anon method-51>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.023,"difficulty":3.214,"effort":218.939,"length":19,"time":12.163,"vocabulary":12,"volume":68.114,"operands":{"distinct":7,"total":9,"identifiers":["invoiceID","\"jon-invoice\"","action","Actions","deleteInvoice","middleware","then"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":26},"errors":[],"lineEnd":407,"lineStart":382,"name":"<anon method-52>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["deleteDoc","\"invoices\"","invoiceID","then","data"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":19},"errors":[],"lineEnd":405,"lineStart":387,"name":"<anon method-53>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.105,"difficulty":4.048,"effort":1274.714,"length":67,"time":70.817,"vocabulary":26,"volume":314.929,"operands":{"distinct":21,"total":34,"identifiers":["expect","next","mock","calls","length","toBe","1","toHaveBeenCalledWith","Object","assign","action","payload","dispatch","type","ACTION_TYPES","UI_NOTIFICATION_NEW","\"success\"","message","i18n","t","\"messages:invoice:deleted\""]},"operators":{"distinct":5,"total":33,"identifiers":["()",".","{}",":","[]"]}},"paramCount":1,"sloc":{"logical":15,"physical":18},"errors":[],"lineEnd":405,"lineStart":388,"name":"<anon method-54>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.049,"difficulty":4.25,"effort":620.276,"length":35,"time":34.46,"vocabulary":18,"volume":145.947,"operands":{"distinct":12,"total":17,"identifiers":["getState","jest","fn","middleware","InvoicesMW","dispatch","next","invoiceID","\"jon-invoice\"","Actions","deleteInvoice","then"]},"operators":{"distinct":6,"total":18,"identifiers":["const","=","()",".","function=>","{}"]}},"paramCount":0,"sloc":{"logical":13,"physical":32},"errors":[],"lineEnd":440,"lineStart":409,"name":"<anon method-55>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.021,"difficulty":1,"effort":63.117,"length":19,"time":3.506,"vocabulary":10,"volume":63.117,"operands":{"distinct":8,"total":8,"identifiers":["form","settings","editMode","active","true","data","_id","\"jon-invoice\""]},"operators":{"distinct":2,"total":11,"identifiers":["{}",":"]}},"paramCount":0,"sloc":{"logical":7,"physical":10},"errors":[],"lineEnd":419,"lineStart":410,"name":"<anon method-56>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["deleteDoc","\"invoices\"","invoiceID","then","data"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":16},"errors":[],"lineEnd":438,"lineStart":423,"name":"<anon method-57>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.102,"difficulty":4.25,"effort":1302.602,"length":66,"time":72.367,"vocabulary":25,"volume":306.495,"operands":{"distinct":20,"total":34,"identifiers":["expect","dispatch","mock","calls","length","toBe","2","0","toEqual","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"success\"","message","i18n","t","\"messages:invoice:deleted\"","1","FORM_CLEAR"]},"operators":{"distinct":5,"total":32,"identifiers":["()",".","[]","{}",":"]}},"paramCount":1,"sloc":{"logical":12,"physical":15},"errors":[],"lineEnd":438,"lineStart":424,"name":"<anon method-58>","paramNames":["data"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.027,"difficulty":3.333,"effort":273.482,"length":21,"time":15.193,"vocabulary":15,"volume":82.045,"operands":{"distinct":9,"total":10,"identifiers":["invoiceID","\"ned-stark\"","expectedError","Error","\"No invoice found!\"","middleware","Actions","deleteInvoice","then"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","new","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":17},"errors":[],"lineEnd":458,"lineStart":442,"name":"<anon method-59>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.038,"difficulty":2.727,"effort":309,"length":29,"time":17.167,"vocabulary":15,"volume":113.3,"operands":{"distinct":11,"total":15,"identifiers":["expect","next","toHaveBeenCalled","toHaveBeenCalledWith","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"warning\"","message","expectedError"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":8,"physical":11},"errors":[],"lineEnd":457,"lineStart":447,"name":"<anon method-60>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.003,"difficulty":1,"effort":8,"length":4,"time":0.444,"vocabulary":4,"volume":8,"operands":{"distinct":2,"total":2,"identifiers":["it","\"update the current invoice and dispatch save action\""]},"operators":{"distinct":2,"total":2,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":2,"physical":21},"errors":[],"lineEnd":481,"lineStart":461,"name":"<anon method-61>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.106,"difficulty":3.778,"effort":1200.566,"length":63,"time":66.698,"vocabulary":33,"volume":317.797,"operands":{"distinct":27,"total":34,"identifiers":["invoiceData","_id","\"a-random-string\"","_rev","\"another-random-string\"","created_at","\"yesterday\"","middleware","Actions","duplicateInvoice","expect","dispatch","mock","calls","length","toBe","1","toHaveBeenCalledWith","type","ACTION_TYPES","INVOICE_SAVE","payload","Object","assign","\"id-string\"","null","\"now\""]},"operators":{"distinct":6,"total":29,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":16,"physical":19},"errors":[],"lineEnd":480,"lineStart":462,"name":"<anon method-62>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"get the doc, merge with config object and dispatch a new action\"","\"handle error correctly\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":36},"errors":[],"lineEnd":518,"lineStart":483,"name":"<anon method-63>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.031,"difficulty":4.278,"effort":393.556,"length":23,"time":21.864,"vocabulary":16,"volume":92,"operands":{"distinct":9,"total":11,"identifiers":["invoiceID","\"id-string\"","configs","color","\"red\"","middleware","Actions","saveInvoiceConfigs","then"]},"operators":{"distinct":7,"total":12,"identifiers":["const","=","{}",":","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":13},"errors":[],"lineEnd":496,"lineStart":484,"name":"<anon method-64>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["getSingleDoc","\"invoices\"","invoiceID","then","doc"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":8},"errors":[],"lineEnd":494,"lineStart":487,"name":"<anon method-65>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.052,"difficulty":2.375,"effort":369.525,"length":36,"time":20.529,"vocabulary":20,"volume":155.589,"operands":{"distinct":16,"total":19,"identifiers":["expect","dispatch","mock","calls","length","toBe","1","toHaveBeenCalledWith","type","ACTION_TYPES","INVOICE_UPDATE","payload","Object","assign","doc","configs"]},"operators":{"distinct":4,"total":17,"identifiers":["()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":8,"physical":7},"errors":[],"lineEnd":494,"lineStart":488,"name":"<anon method-66>","paramNames":["doc"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.042,"difficulty":4.667,"effort":584.901,"length":29,"time":32.494,"vocabulary":20,"volume":125.336,"operands":{"distinct":12,"total":14,"identifiers":["invoiceID","\"id-string\"","configs","color","\"red\"","expectedError","Error","\"No invoice found!\"","middleware","Actions","saveInvoiceConfigs","then"]},"operators":{"distinct":8,"total":15,"identifiers":["const","=","{}",":","new","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":20},"errors":[],"lineEnd":517,"lineStart":498,"name":"<anon method-67>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":33.688,"length":8,"time":1.872,"vocabulary":7,"volume":22.459,"operands":{"distinct":4,"total":4,"identifiers":["getSingleDoc","\"test\"","invoiceID","then"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":13},"errors":[],"lineEnd":516,"lineStart":504,"name":"<anon method-68>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.038,"difficulty":2.727,"effort":309,"length":29,"time":17.167,"vocabulary":15,"volume":113.3,"operands":{"distinct":11,"total":15,"identifiers":["expect","next","toHaveBeenCalled","toHaveBeenCalledWith","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"warning\"","message","expectedError"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":8,"physical":11},"errors":[],"lineEnd":515,"lineStart":505,"name":"<anon method-69>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"get the doc, merge with status object and dispatch a new action\"","\"handle error correctly\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":36},"errors":[],"lineEnd":555,"lineStart":520,"name":"<anon method-70>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.025,"difficulty":3.125,"effort":231.277,"length":20,"time":12.849,"vocabulary":13,"volume":74.009,"operands":{"distinct":8,"total":10,"identifiers":["invoiceID","\"id-string\"","status","\"paid\"","middleware","Actions","setInvoiceStatus","then"]},"operators":{"distinct":5,"total":10,"identifiers":["const","=","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":13},"errors":[],"lineEnd":533,"lineStart":521,"name":"<anon method-71>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":40.5,"length":9,"time":2.25,"vocabulary":8,"volume":27,"operands":{"distinct":5,"total":5,"identifiers":["getSingleDoc","\"invoices\"","invoiceID","then","doc"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":8},"errors":[],"lineEnd":531,"lineStart":524,"name":"<anon method-72>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.052,"difficulty":2.375,"effort":369.525,"length":36,"time":20.529,"vocabulary":20,"volume":155.589,"operands":{"distinct":16,"total":19,"identifiers":["expect","dispatch","mock","calls","length","toBe","1","toHaveBeenCalledWith","type","ACTION_TYPES","INVOICE_UPDATE","payload","Object","assign","doc","status"]},"operators":{"distinct":4,"total":17,"identifiers":["()",".","{}",":"]}},"paramCount":1,"sloc":{"logical":8,"physical":7},"errors":[],"lineEnd":531,"lineStart":525,"name":"<anon method-73>","paramNames":["doc"],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.035,"difficulty":3.545,"effort":376.79,"length":26,"time":20.933,"vocabulary":17,"volume":106.274,"operands":{"distinct":11,"total":13,"identifiers":["invoiceID","\"id-string\"","status","\"paid\"","expectedError","Error","\"No invoice found!\"","middleware","Actions","setInvoiceStatus","then"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","new","()",".","function=>"]}},"paramCount":0,"sloc":{"logical":7,"physical":20},"errors":[],"lineEnd":554,"lineStart":535,"name":"<anon method-74>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.007,"difficulty":1.5,"effort":33.688,"length":8,"time":1.872,"vocabulary":7,"volume":22.459,"operands":{"distinct":4,"total":4,"identifiers":["getSingleDoc","\"test\"","invoiceID","then"]},"operators":{"distinct":3,"total":4,"identifiers":["()",".","function=>"]}},"paramCount":0,"sloc":{"logical":3,"physical":13},"errors":[],"lineEnd":553,"lineStart":541,"name":"<anon method-75>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.038,"difficulty":2.727,"effort":309,"length":29,"time":17.167,"vocabulary":15,"volume":113.3,"operands":{"distinct":11,"total":15,"identifiers":["expect","next","toHaveBeenCalled","toHaveBeenCalledWith","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"warning\"","message","expectedError"]},"operators":{"distinct":4,"total":14,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":8,"physical":11},"errors":[],"lineEnd":552,"lineStart":542,"name":"<anon method-76>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4.545,"halstead":{"bugs":0.153,"difficulty":4.7,"effort":2162.58,"length":89,"time":120.143,"vocabulary":36,"volume":460.123,"operands":{"distinct":30,"total":47,"identifiers":["contact","id","\"jon-snow\"","fullname","\"Jon Snow\"","email","\"jon@hbo.com\"","action","Actions","newInvoiceFromContact","middleware","expect","next","mock","calls","length","toBe","1","toHaveBeenCalledWith","type","ACTION_TYPES","UI_TAB_CHANGE","payload","\"form\"","dispatch","FORM_RECIPIENT_UPDATE","new","select","newRecipient","false"]},"operators":{"distinct":6,"total":42,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":22,"physical":25},"errors":[],"lineEnd":581,"lineStart":557,"name":"<anon method-77>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.021,"difficulty":3.857,"effort":242.643,"length":17,"time":13.48,"vocabulary":13,"volume":62.907,"operands":{"distinct":7,"total":9,"identifiers":["action","type","\"TEST\"","middleware","expect","next","toHaveBeenCalledWith"]},"operators":{"distinct":6,"total":8,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":587,"lineStart":583,"name":"<anon method-78>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.157,"halstead":{"bugs":0.069,"difficulty":0.475,"effort":7762.282,"length":27.076,"time":431.238,"vocabulary":2.532,"volume":206.965,"operands":{"distinct":2.367,"total":13.658},"operators":{"distinct":0.165,"total":13.418}},"paramCount":0.152,"sloc":{"logical":8.076,"physical":7.468}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":20.509,"halstead":{"bugs":0.038,"difficulty":2.59,"effort":420.848,"length":26.897,"time":23.38,"vocabulary":14.269,"volume":114.019,"operands":{"distinct":10.179,"total":13.5},"operators":{"distinct":4.09,"total":13.397}},"paramCount":0.154,"sloc":{"logical":7.987,"physical":25.615}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/middlewares/__tests__/SettingsMW.spec.js","testCases":7,"smells":10,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  67 |     it('should validate currency and tax data', () => {\n  68 |       middleware(action);\n> 69 |       expect(validateCurrency).toHaveBeenCalled();\n     |      ^ Duplicate Assert\n  70 |       expect(validateCurrency).toHaveBeenCalledWith(true, action.payload.invoice.currency);\n  71 |       expect(validateTax).toHaveBeenCalled();\n  72 |       expect(validateTax).toHaveBeenCalledWith(true, action.payload.invoice.tax);","start":{"line":69,"column":6,"index":1868}},{"frame":"  68 |       middleware(action);\n  69 |       expect(validateCurrency).toHaveBeenCalled();\n> 70 |       expect(validateCurrency).toHaveBeenCalledWith(true, action.payload.invoice.currency);\n     |      ^ Duplicate Assert\n  71 |       expect(validateTax).toHaveBeenCalled();\n  72 |       expect(validateTax).toHaveBeenCalledWith(true, action.payload.invoice.tax);\n  73 |     });","start":{"line":70,"column":6,"index":1919}},{"frame":"  69 |       expect(validateCurrency).toHaveBeenCalled();\n  70 |       expect(validateCurrency).toHaveBeenCalledWith(true, action.payload.invoice.currency);\n> 71 |       expect(validateTax).toHaveBeenCalled();\n     |      ^ Duplicate Assert\n  72 |       expect(validateTax).toHaveBeenCalledWith(true, action.payload.invoice.tax);\n  73 |     });\n  74 |","start":{"line":71,"column":6,"index":2011}},{"frame":"  70 |       expect(validateCurrency).toHaveBeenCalledWith(true, action.payload.invoice.currency);\n  71 |       expect(validateTax).toHaveBeenCalled();\n> 72 |       expect(validateTax).toHaveBeenCalledWith(true, action.payload.invoice.tax);\n     |      ^ Duplicate Assert\n  73 |     });\n  74 |\n  75 |     // TODO","start":{"line":72,"column":6,"index":2057}}]},{"name":"Empty Test","packageName":"emptyTest","items":[{"frame":"  74 |\n  75 |     // TODO\n> 76 |     it('should save data', () => {});\n     |    ^ Empty Test\n  77 |\n  78 |     it('should reload sounds cache', () => {\n  79 |       middleware(action);","start":{"line":76,"column":4,"index":2158}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  29 |     const action = Actions.getInitalSettings();\n  30 |     middleware(action);\n> 31 |     expect(dispatch.mock.calls.length).toBe(0);\n     |                                            ^ Magic Number\n  32 |     expect(next.mock.calls.length).toBe(1);\n  33 |     expect(next).toHaveBeenCalledWith(\n  34 |       Object.assign({}, action, {","start":{"line":31,"column":44,"index":999}},{"frame":"  30 |     middleware(action);\n  31 |     expect(dispatch.mock.calls.length).toBe(0);\n> 32 |     expect(next.mock.calls.length).toBe(1);\n     |                                        ^ Magic Number\n  33 |     expect(next).toHaveBeenCalledWith(\n  34 |       Object.assign({}, action, {\n  35 |         payload: {","start":{"line":32,"column":40,"index":1043}},{"frame":"  86 |       middleware(action);\n  87 |       expect(ipc.send).toHaveBeenCalled();\n> 88 |       expect(ipc.send.mock.calls.length).toEqual(2);\n     |                                                 ^ Magic Number\n  89 |       // Notify about profile change\n  90 |       expect(ipc.send.mock.calls[0][0]).toBe('change-preview-window-profile');\n  91 |       expect(ipc.send.mock.calls[0][1]).toBe('New Profile');","start":{"line":88,"column":49,"index":2570}},{"frame":"   98 |       middleware(action);\n   99 |       // Call Next\n> 100 |       expect(next.mock.calls.length).toBe(1);\n      |                                          ^ Magic Number\n  101 |       expect(next).toHaveBeenCalledWith(action);\n  102 |       // Send Notification\n  103 |       expect(dispatch.mock.calls.length).toBe(1);","start":{"line":100,"column":42,"index":3077}},{"frame":"  101 |       expect(next).toHaveBeenCalledWith(action);\n  102 |       // Send Notification\n> 103 |       expect(dispatch.mock.calls.length).toBe(1);\n      |                                              ^ Magic Number\n  104 |       expect(dispatch).toHaveBeenCalledWith({\n  105 |         type: ACTION_TYPES.UI_NOTIFICATION_NEW,\n  106 |         payload: {","start":{"line":103,"column":46,"index":3203}}]}],"metrics":{"aggregate":{"cyclomatic":12,"cyclomaticDensity":10.084,"halstead":{"bugs":0.983,"difficulty":12.31,"effort":36316.295,"length":448,"time":2017.572,"vocabulary":96,"volume":2950.063,"operands":{"distinct":87,"total":238,"identifiers":["sounds","require","\"../../../libs/sounds\"","ipc","\"electron\"","ipcRenderer","openDialog","\"../../renderers/dialog\"","jest","mock","\"../../helpers/form\"","describe","\"Settings Middleware\"","next","dispatch","middleware","beforeEach","fn","SettingsMW","it","\"should handle SETTINGS_GET_INITIAL action\"","savedSettings","profile","\"someSettings\"","invoice","general","action","Actions","getInitalSettings","expect","calls","length","toBe","0","1","toHaveBeenCalledWith","Object","assign","payload","current","saved","\"should handle SETTINGS_SAVE action\"","saveSettings","\"New Profile\"","language","\"fr\"","currency","code","\"USD\"","fraction","2","separator","\"commaDot\"","placement","\"before\"","tax","tin","\"123-456-789\"","amount","10","method","\"default\"","\"should validate currency and tax data\"","validateCurrency","toHaveBeenCalled","true","validateTax","\"should save data\"","\"should reload sounds cache\"","preload","\"should notify previewWindow of language & profile change\"","send","mockClear","toEqual","\"change-preview-window-profile\"","\"change-preview-window-language\"","\"should call next and dispatch notification\"","type","ACTION_TYPES","UI_NOTIFICATION_NEW","\"success\"","message","i18n","t","\"messages:settings:saved\"","\"let other actions pass through\"","\"TEST\""]},"operators":{"distinct":9,"total":210,"identifiers":["const","=","()",".","function=>","let","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":119,"physical":121}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":2,"path":"../../actions/settings","type":"esm"},{"line":3,"path":"../../constants/actions.jsx","type":"esm"},{"line":4,"path":"../SettingsMW","type":"esm"},{"line":5,"path":"../../../i18n/i18n","type":"esm"},{"line":9,"path":"../../helpers/form.js","type":"esm"}],"errors":[],"lineEnd":121,"lineStart":1,"maintainability":106.422,"methods":[{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.023,"difficulty":1.667,"effort":113.524,"length":19,"time":6.307,"vocabulary":12,"volume":68.114,"operands":{"distinct":9,"total":10,"identifiers":["next","dispatch","middleware","beforeEach","it","\"should handle SETTINGS_GET_INITIAL action\"","describe","\"should handle SETTINGS_SAVE action\"","\"let other actions pass through\""]},"operators":{"distinct":3,"total":9,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":106},"errors":[],"lineEnd":120,"lineStart":15,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.023,"difficulty":3.667,"effort":255.788,"length":21,"time":14.21,"vocabulary":10,"volume":69.76,"operands":{"distinct":6,"total":11,"identifiers":["next","jest","fn","dispatch","middleware","SettingsMW"]},"operators":{"distinct":4,"total":10,"identifiers":["=","()",".","{}"]}},"paramCount":0,"sloc":{"logical":8,"physical":5},"errors":[],"lineEnd":21,"lineStart":17,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.116,"difficulty":4.625,"effort":1611.3,"length":71,"time":89.517,"vocabulary":30,"volume":348.389,"operands":{"distinct":24,"total":37,"identifiers":["savedSettings","profile","\"someSettings\"","invoice","general","action","Actions","getInitalSettings","middleware","expect","dispatch","mock","calls","length","toBe","0","next","1","toHaveBeenCalledWith","Object","assign","payload","current","saved"]},"operators":{"distinct":6,"total":34,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":17,"physical":19},"errors":[],"lineEnd":41,"lineStart":23,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.029,"difficulty":2.25,"effort":194.593,"length":25,"time":10.811,"vocabulary":11,"volume":86.486,"operands":{"distinct":8,"total":12,"identifiers":["action","beforeEach","it","\"should validate currency and tax data\"","\"should save data\"","\"should reload sounds cache\"","\"should notify previewWindow of language & profile change\"","\"should call next and dispatch notification\""]},"operators":{"distinct":3,"total":13,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":71},"errors":[],"lineEnd":113,"lineStart":43,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.075,"difficulty":2.5,"effort":564.292,"length":46,"time":31.35,"vocabulary":30,"volume":225.717,"operands":{"distinct":25,"total":25,"identifiers":["action","Actions","saveSettings","profile","\"New Profile\"","general","language","\"fr\"","invoice","currency","code","\"USD\"","fraction","2","separator","\"commaDot\"","placement","\"before\"","tax","tin","\"123-456-789\"","amount","10","method","\"default\""]},"operators":{"distinct":5,"total":21,"identifiers":["=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":21},"errors":[],"lineEnd":65,"lineStart":45,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.055,"difficulty":2,"effort":327.433,"length":43,"time":18.191,"vocabulary":14,"volume":163.716,"operands":{"distinct":12,"total":24,"identifiers":["middleware","action","expect","validateCurrency","toHaveBeenCalled","toHaveBeenCalledWith","true","payload","invoice","currency","validateTax","tax"]},"operators":{"distinct":2,"total":19,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":7},"errors":[],"lineEnd":73,"lineStart":67,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0,"halstead":{"bugs":0,"difficulty":0,"effort":0,"length":0,"time":0,"vocabulary":0,"volume":0,"operands":{"distinct":0,"total":0,"identifiers":[]},"operators":{"distinct":0,"total":0,"identifiers":[]}},"paramCount":0,"sloc":{"logical":0,"physical":1},"errors":[],"lineEnd":76,"lineStart":76,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.011,"difficulty":1,"effort":33,"length":11,"time":1.833,"vocabulary":8,"volume":33,"operands":{"distinct":6,"total":6,"identifiers":["middleware","action","expect","sounds","preload","toHaveBeenCalled"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":4},"errors":[],"lineEnd":81,"lineStart":78,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.149,"difficulty":4.184,"effort":1865.92,"length":100,"time":103.662,"vocabulary":22,"volume":445.943,"operands":{"distinct":19,"total":53,"identifiers":["ipc","send","mockClear","middleware","action","expect","toHaveBeenCalled","mock","calls","length","toEqual","2","0","toBe","\"change-preview-window-profile\"","1","\"New Profile\"","\"change-preview-window-language\"","\"fr\""]},"operators":{"distinct":3,"total":47,"identifiers":["()",".","[]"]}},"paramCount":0,"sloc":{"logical":14,"physical":13},"errors":[],"lineEnd":95,"lineStart":83,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.093,"difficulty":3.3,"effort":922.953,"length":61,"time":51.275,"vocabulary":24,"volume":279.683,"operands":{"distinct":20,"total":33,"identifiers":["middleware","action","expect","next","mock","calls","length","toBe","1","toHaveBeenCalledWith","dispatch","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"success\"","message","i18n","t","\"messages:settings:saved\""]},"operators":{"distinct":4,"total":28,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":14,"physical":15},"errors":[],"lineEnd":111,"lineStart":97,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.021,"difficulty":3.857,"effort":242.643,"length":17,"time":13.48,"vocabulary":13,"volume":62.907,"operands":{"distinct":7,"total":9,"identifiers":["action","type","\"TEST\"","middleware","expect","next","toHaveBeenCalledWith"]},"operators":{"distinct":6,"total":8,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":119,"lineStart":115,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.84,"halstead":{"bugs":0.082,"difficulty":1.026,"effort":3026.358,"length":37.333,"time":168.131,"vocabulary":8,"volume":245.839,"operands":{"distinct":7.25,"total":19.833},"operators":{"distinct":0.75,"total":17.5}},"paramCount":0,"sloc":{"logical":9.917,"physical":10.083}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":10.96,"halstead":{"bugs":0.054,"difficulty":2.641,"effort":557.404,"length":37.636,"time":30.967,"vocabulary":15.818,"volume":162.156,"operands":{"distinct":12.364,"total":20},"operators":{"distinct":3.455,"total":17.636}},"paramCount":0,"sloc":{"logical":9.909,"physical":24.273}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/middlewares/__tests__/UIMiddleware.spec.js","testCases":9,"smells":14,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  23 |     it('should NOT update active tab', () => {\n  24 |       middleware(UIActions.changeActiveTab('form'));\n> 25 |       expect(getState.mock.calls.length).toBe(1);\n     |                                              ^ Magic Number\n  26 |       expect(next.mock.calls.length).toBe(0);\n  27 |     });\n  28 |","start":{"line":25,"column":46,"index":731}},{"frame":"  24 |       middleware(UIActions.changeActiveTab('form'));\n  25 |       expect(getState.mock.calls.length).toBe(1);\n> 26 |       expect(next.mock.calls.length).toBe(0);\n     |                                          ^ Magic Number\n  27 |     });\n  28 |\n  29 |     it('should update active tab', () => {","start":{"line":26,"column":42,"index":777}},{"frame":"  30 |       const action = UIActions.changeActiveTab('settings');\n  31 |       middleware(action);\n> 32 |       expect(getState.mock.calls.length).toBe(1);\n     |                                              ^ Magic Number\n  33 |       expect(next.mock.calls.length).toBe(1);\n  34 |       expect(next).toHaveBeenCalledWith(action);\n  35 |       // Test Sound","start":{"line":32,"column":46,"index":965}},{"frame":"  31 |       middleware(action);\n  32 |       expect(getState.mock.calls.length).toBe(1);\n> 33 |       expect(next.mock.calls.length).toBe(1);\n     |                                          ^ Magic Number\n  34 |       expect(next).toHaveBeenCalledWith(action);\n  35 |       // Test Sound\n  36 |       expect(sounds.play).toBeCalledWith('TAP');","start":{"line":33,"column":42,"index":1011}},{"frame":"  45 |       );\n  46 |       middleware(action);\n> 47 |       expect(getState.mock.calls.length).toBe(0);\n     |                                              ^ Magic Number\n  48 |       expect(next.mock.calls.length).toBe(1);\n  49 |       // Add id field with uuidv4 string to payload\n  50 |       expect(next).toHaveBeenCalledWith(","start":{"line":47,"column":46,"index":1453}},{"frame":"  46 |       middleware(action);\n  47 |       expect(getState.mock.calls.length).toBe(0);\n> 48 |       expect(next.mock.calls.length).toBe(1);\n     |                                          ^ Magic Number\n  49 |       // Add id field with uuidv4 string to payload\n  50 |       expect(next).toHaveBeenCalledWith(\n  51 |         Object.assign({}, action, {","start":{"line":48,"column":42,"index":1499}},{"frame":"  62 |       const action = UIActions.newNoti('warning', 'Missing Doc');\n  63 |       middleware(action);\n> 64 |       expect(getState.mock.calls.length).toBe(0);\n     |                                              ^ Magic Number\n  65 |       expect(next.mock.calls.length).toBe(1);\n  66 |       // Add id field with uuidv4 string to payload\n  67 |       expect(next).toHaveBeenCalledWith(","start":{"line":64,"column":46,"index":2029}},{"frame":"  63 |       middleware(action);\n  64 |       expect(getState.mock.calls.length).toBe(0);\n> 65 |       expect(next.mock.calls.length).toBe(1);\n     |                                          ^ Magic Number\n  66 |       // Add id field with uuidv4 string to payload\n  67 |       expect(next).toHaveBeenCalledWith(\n  68 |         Object.assign({}, action, {","start":{"line":65,"column":42,"index":2075}},{"frame":"  81 |       const action = FormActions.addItem();\n  82 |       middleware(action);\n> 83 |       expect(getState.mock.calls.length).toBe(0);\n     |                                              ^ Magic Number\n  84 |       expect(next.mock.calls.length).toBe(1);\n  85 |       expect(next).toHaveBeenCalledWith(action);\n  86 |       expect(sounds.play).toBeCalledWith('ADD');","start":{"line":83,"column":46,"index":2632}},{"frame":"  82 |       middleware(action);\n  83 |       expect(getState.mock.calls.length).toBe(0);\n> 84 |       expect(next.mock.calls.length).toBe(1);\n     |                                          ^ Magic Number\n  85 |       expect(next).toHaveBeenCalledWith(action);\n  86 |       expect(sounds.play).toBeCalledWith('ADD');\n  87 |     });","start":{"line":84,"column":42,"index":2678}},{"frame":"  90 |       const action = FormActions.removeItem();\n  91 |       middleware(action);\n> 92 |       expect(getState.mock.calls.length).toBe(0);\n     |                                              ^ Magic Number\n  93 |       expect(next.mock.calls.length).toBe(1);\n  94 |       expect(next).toHaveBeenCalledWith(action);\n  95 |       expect(sounds.play).toBeCalledWith('REMOVE');","start":{"line":92,"column":46,"index":2964}},{"frame":"  91 |       middleware(action);\n  92 |       expect(getState.mock.calls.length).toBe(0);\n> 93 |       expect(next.mock.calls.length).toBe(1);\n     |                                          ^ Magic Number\n  94 |       expect(next).toHaveBeenCalledWith(action);\n  95 |       expect(sounds.play).toBeCalledWith('REMOVE');\n  96 |     });","start":{"line":93,"column":42,"index":3010}},{"frame":"   99 |       const action = FormActions.clearForm('muted');\n  100 |       middleware(action);\n> 101 |       expect(getState.mock.calls.length).toBe(0);\n      |                                              ^ Magic Number\n  102 |       expect(next.mock.calls.length).toBe(1);\n  103 |       expect(next).toHaveBeenCalledWith(action);\n  104 |     });","start":{"line":101,"column":46,"index":3312}},{"frame":"  100 |       middleware(action);\n  101 |       expect(getState.mock.calls.length).toBe(0);\n> 102 |       expect(next.mock.calls.length).toBe(1);\n      |                                          ^ Magic Number\n  103 |       expect(next).toHaveBeenCalledWith(action);\n  104 |     });\n  105 |","start":{"line":102,"column":42,"index":3358}}]}],"metrics":{"aggregate":{"cyclomatic":16,"cyclomaticDensity":11.852,"halstead":{"bugs":1.076,"difficulty":19.038,"effort":61473.588,"length":520,"time":3415.199,"vocabulary":74,"volume":3228.916,"operands":{"distinct":65,"total":275,"identifiers":["jest","mock","\"../../../libs/sounds\"","sounds","require","describe","\"UI Middleware\"","next","getState","middleware","beforeEach","fn","ui","activeTab","\"form\"","notifications","UIMiddleware","\"should handle UI_TAB_CHANGE action\"","it","\"should NOT update active tab\"","UIActions","changeActiveTab","expect","calls","length","toBe","1","0","\"should update active tab\"","action","\"settings\"","toHaveBeenCalledWith","play","toBeCalledWith","\"TAP\"","\"should handle update notifications\"","\"should handle UI_NOTIFICATION_NEW action\"","newNoti","\"success\"","\"Invoice has been created successfully!\"","Object","assign","payload","id","\"id-string\"","\"SUCCESS\"","\"warning\"","\"Missing Doc\"","\"WARNING\"","\"should handle form actions\"","\"should handle FORM_ITEM_ADD action\"","FormActions","addItem","\"ADD\"","\"should handle FORM_ITEM_REMOVE action\"","removeItem","\"REMOVE\"","\"should handle FORM_CLEAR action WIHOUT sound\"","clearForm","\"muted\"","\"should handle FORM_CLEAR action WITH sound\"","\"RELOAD\"","\"let other actions pass through\"","type","\"TEST\""]},"operators":{"distinct":9,"total":245,"identifiers":["()",".","const","=","function=>","let","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":135,"physical":119}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../../actions/ui","type":"esm"},{"line":2,"path":"../../actions/form","type":"esm"},{"line":3,"path":"../UIMiddleware","type":"esm"}],"errors":[],"lineEnd":119,"lineStart":1,"maintainability":108.223,"methods":[{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.028,"difficulty":1.8,"effort":153.198,"length":23,"time":8.511,"vocabulary":13,"volume":85.11,"operands":{"distinct":10,"total":12,"identifiers":["next","getState","middleware","beforeEach","describe","\"should handle UI_TAB_CHANGE action\"","\"should handle update notifications\"","\"should handle form actions\"","it","\"let other actions pass through\""]},"operators":{"distinct":3,"total":11,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":110},"errors":[],"lineEnd":118,"lineStart":9,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.025,"difficulty":4.583,"effort":348.826,"length":22,"time":19.379,"vocabulary":11,"volume":76.107,"operands":{"distinct":6,"total":11,"identifiers":["next","jest","fn","getState","middleware","UIMiddleware"]},"operators":{"distinct":5,"total":11,"identifiers":["=","()",".","function=>","{}"]}},"paramCount":0,"sloc":{"logical":9,"physical":10},"errors":[],"lineEnd":20,"lineStart":11,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.009,"difficulty":1.5,"effort":42.11,"length":10,"time":2.339,"vocabulary":7,"volume":28.074,"operands":{"distinct":4,"total":4,"identifiers":["ui","activeTab","\"form\"","notifications"]},"operators":{"distinct":3,"total":6,"identifiers":["{}",":","[]"]}},"paramCount":0,"sloc":{"logical":4,"physical":6},"errors":[],"lineEnd":18,"lineStart":13,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.006,"difficulty":1.333,"effort":24.767,"length":8,"time":1.376,"vocabulary":5,"volume":18.575,"operands":{"distinct":3,"total":4,"identifiers":["it","\"should NOT update active tab\"","\"should update active tab\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":17},"errors":[],"lineEnd":38,"lineStart":22,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.043,"difficulty":1.385,"effort":178.515,"length":33,"time":9.917,"vocabulary":15,"volume":128.927,"operands":{"distinct":13,"total":18,"identifiers":["middleware","UIActions","changeActiveTab","\"form\"","expect","getState","mock","calls","length","toBe","1","next","0"]},"operators":{"distinct":2,"total":15,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":6,"physical":5},"errors":[],"lineEnd":27,"lineStart":23,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.079,"difficulty":3.222,"effort":761.572,"length":53,"time":42.31,"vocabulary":22,"volume":236.35,"operands":{"distinct":18,"total":29,"identifiers":["action","UIActions","changeActiveTab","\"settings\"","middleware","expect","getState","mock","calls","length","toBe","1","next","toHaveBeenCalledWith","sounds","play","toBeCalledWith","\"TAP\""]},"operators":{"distinct":4,"total":24,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":9},"errors":[],"lineEnd":37,"lineStart":29,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.005,"difficulty":2,"effort":32,"length":8,"time":1.778,"vocabulary":4,"volume":16,"operands":{"distinct":2,"total":4,"identifiers":["it","\"should handle UI_NOTIFICATION_NEW action\""]},"operators":{"distinct":2,"total":4,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":4,"physical":38},"errors":[],"lineEnd":77,"lineStart":40,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.122,"difficulty":4.68,"effort":1715.737,"length":74,"time":95.319,"vocabulary":31,"volume":366.611,"operands":{"distinct":25,"total":39,"identifiers":["action","UIActions","newNoti","\"success\"","\"Invoice has been created successfully!\"","middleware","expect","getState","mock","calls","length","toBe","0","next","1","toHaveBeenCalledWith","Object","assign","payload","id","\"id-string\"","sounds","play","toBeCalledWith","\"SUCCESS\""]},"operators":{"distinct":6,"total":35,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":19},"errors":[],"lineEnd":59,"lineStart":41,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.122,"difficulty":4.68,"effort":1715.737,"length":74,"time":95.319,"vocabulary":31,"volume":366.611,"operands":{"distinct":25,"total":39,"identifiers":["action","UIActions","newNoti","\"warning\"","\"Missing Doc\"","middleware","expect","getState","mock","calls","length","toBe","0","next","1","toHaveBeenCalledWith","Object","assign","payload","id","\"id-string\"","sounds","play","toBeCalledWith","\"WARNING\""]},"operators":{"distinct":6,"total":35,"identifiers":["const","=","()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":15,"physical":16},"errors":[],"lineEnd":76,"lineStart":61,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should handle FORM_ITEM_ADD action\"","\"should handle FORM_ITEM_REMOVE action\"","\"should handle FORM_CLEAR action WIHOUT sound\"","\"should handle FORM_CLEAR action WITH sound\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":33},"errors":[],"lineEnd":111,"lineStart":79,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.077,"difficulty":3.111,"effort":721.437,"length":52,"time":40.08,"vocabulary":22,"volume":231.89,"operands":{"distinct":18,"total":28,"identifiers":["action","FormActions","addItem","middleware","expect","getState","mock","calls","length","toBe","0","next","1","toHaveBeenCalledWith","sounds","play","toBeCalledWith","\"ADD\""]},"operators":{"distinct":4,"total":24,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":8},"errors":[],"lineEnd":87,"lineStart":80,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.077,"difficulty":3.111,"effort":721.437,"length":52,"time":40.08,"vocabulary":22,"volume":231.89,"operands":{"distinct":18,"total":28,"identifiers":["action","FormActions","removeItem","middleware","expect","getState","mock","calls","length","toBe","0","next","1","toHaveBeenCalledWith","sounds","play","toBeCalledWith","\"REMOVE\""]},"operators":{"distinct":4,"total":24,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":11,"physical":8},"errors":[],"lineEnd":96,"lineStart":89,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.062,"difficulty":3.2,"effort":598.108,"length":44,"time":33.228,"vocabulary":19,"volume":186.909,"operands":{"distinct":15,"total":24,"identifiers":["action","FormActions","clearForm","\"muted\"","middleware","expect","getState","mock","calls","length","toBe","0","next","1","toHaveBeenCalledWith"]},"operators":{"distinct":4,"total":20,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":9,"physical":7},"errors":[],"lineEnd":104,"lineStart":98,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.023,"difficulty":2.222,"effort":156.241,"length":19,"time":8.68,"vocabulary":13,"volume":70.308,"operands":{"distinct":9,"total":10,"identifiers":["action","FormActions","clearForm","middleware","expect","sounds","play","toBeCalledWith","\"RELOAD\""]},"operators":{"distinct":4,"total":9,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":110,"lineStart":106,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.021,"difficulty":3.857,"effort":242.643,"length":17,"time":13.48,"vocabulary":13,"volume":62.907,"operands":{"distinct":7,"total":9,"identifiers":["action","type","\"TEST\"","middleware","expect","next","toHaveBeenCalledWith"]},"operators":{"distinct":6,"total":8,"identifiers":["const","=","{}",":","()","."]}},"paramCount":0,"sloc":{"logical":5,"physical":5},"errors":[],"lineEnd":117,"lineStart":113,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.741,"halstead":{"bugs":0.067,"difficulty":1.19,"effort":3842.099,"length":32.5,"time":213.45,"vocabulary":4.625,"volume":201.807,"operands":{"distinct":4.063,"total":17.188},"operators":{"distinct":0.563,"total":15.313}},"paramCount":0,"sloc":{"logical":8.438,"physical":7.438}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":14.312,"halstead":{"bugs":0.048,"difficulty":2.819,"effort":498.946,"length":33.667,"time":27.719,"vocabulary":15.667,"volume":143.413,"operands":{"distinct":11.867,"total":17.8},"operators":{"distinct":3.8,"total":15.867}},"paramCount":0,"sloc":{"logical":8.667,"physical":19.733}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/reducers/__tests__/FormReducer.spec.js","testCases":30,"smells":23,"smellInfo":[{"name":"Duplicate Assert","packageName":"duplicateAssert","items":[{"frame":"  88 |       },\n  89 |     });\n> 90 |     expect(newState.rows).toHaveLength(4);\n     |    ^ Duplicate Assert\n  91 |     expect(newState.rows).toEqual([\n  92 |       { id: 'Jon Snow' },\n  93 |       { id: 'Daenerys Targaryen' },","start":{"line":90,"column":4,"index":2120}},{"frame":"  89 |     });\n  90 |     expect(newState.rows).toHaveLength(4);\n> 91 |     expect(newState.rows).toEqual([\n     |    ^ Duplicate Assert\n  92 |       { id: 'Jon Snow' },\n  93 |       { id: 'Daenerys Targaryen' },\n  94 |       { id: 'Arya Stark' },","start":{"line":91,"column":4,"index":2163}},{"frame":"  238 |     });\n  239 |     expect(newState.recipient.newRecipient).toBe(false);\n> 240 |     expect(newState.recipient.select).toEqual({\n      |    ^ Duplicate Assert\n  241 |       fullname: 'Jon Snow',\n  242 |       company: 'HBO',\n  243 |       email: 'jon@snow.got',","start":{"line":240,"column":4,"index":6067}},{"frame":"  244 |       phone: '000000000',\n  245 |     });\n> 246 |     expect(newState.recipient.select).not.toEqual({\n      |    ^ Duplicate Assert\n  247 |       fullname: 'Dany',\n  248 |       company: 'HBO',\n  249 |       email: 'mother@dragons.got',","start":{"line":246,"column":4,"index":6228}},{"frame":"  270 |       },\n  271 |     });\n> 272 |     expect(newState.currency.selectedCurrency.code).not.toEqual('VND');\n      |    ^ Duplicate Assert\n  273 |     expect(newState.currency.selectedCurrency.code).toEqual('USD');\n  274 |   });\n  275 |","start":{"line":272,"column":4,"index":6869}},{"frame":"  271 |     });\n  272 |     expect(newState.currency.selectedCurrency.code).not.toEqual('VND');\n> 273 |     expect(newState.currency.selectedCurrency.code).toEqual('USD');\n      |    ^ Duplicate Assert\n  274 |   });\n  275 |\n  276 |   it('dueDate data', () => {","start":{"line":273,"column":4,"index":6941}},{"frame":"  298 |       },\n  299 |     });\n> 300 |     expect(newState.discount.type).toEqual('percentage');\n      |    ^ Duplicate Assert\n  301 |     expect(newState.discount.type).not.toEqual('flat');\n  302 |     expect(newState.discount.amount).toEqual(10);\n  303 |     expect(newState.discount.amount).not.toEqual(5);","start":{"line":300,"column":4,"index":7608}},{"frame":"  299 |     });\n  300 |     expect(newState.discount.type).toEqual('percentage');\n> 301 |     expect(newState.discount.type).not.toEqual('flat');\n      |    ^ Duplicate Assert\n  302 |     expect(newState.discount.amount).toEqual(10);\n  303 |     expect(newState.discount.amount).not.toEqual(5);\n  304 |   });","start":{"line":301,"column":4,"index":7666}},{"frame":"  300 |     expect(newState.discount.type).toEqual('percentage');\n  301 |     expect(newState.discount.type).not.toEqual('flat');\n> 302 |     expect(newState.discount.amount).toEqual(10);\n      |    ^ Duplicate Assert\n  303 |     expect(newState.discount.amount).not.toEqual(5);\n  304 |   });\n  305 |","start":{"line":302,"column":4,"index":7722}},{"frame":"  301 |     expect(newState.discount.type).not.toEqual('flat');\n  302 |     expect(newState.discount.amount).toEqual(10);\n> 303 |     expect(newState.discount.amount).not.toEqual(5);\n      |    ^ Duplicate Assert\n  304 |   });\n  305 |\n  306 |   it('tax data', () => {","start":{"line":303,"column":4,"index":7772}},{"frame":"  314 |       },\n  315 |     });\n> 316 |     expect(newState.tax.amount).toEqual(5);\n      |    ^ Duplicate Assert\n  317 |     expect(newState.tax.amount).not.toEqual(10);\n  318 |   });\n  319 |","start":{"line":316,"column":4,"index":8059}},{"frame":"  315 |     });\n  316 |     expect(newState.tax.amount).toEqual(5);\n> 317 |     expect(newState.tax.amount).not.toEqual(10);\n      |    ^ Duplicate Assert\n  318 |   });\n  319 |\n  320 |   it('note data', () => {","start":{"line":317,"column":4,"index":8103}},{"frame":"  328 |       },\n  329 |     });\n> 330 |     expect(newState.note.content).toEqual('You know nothing, Jon Snow');\n      |    ^ Duplicate Assert\n  331 |     expect(newState.note.content).not.toEqual(\n  332 |       'The Lannisters always pay their debts'\n  333 |     );","start":{"line":330,"column":4,"index":8416}},{"frame":"  329 |     });\n  330 |     expect(newState.note.content).toEqual('You know nothing, Jon Snow');\n> 331 |     expect(newState.note.content).not.toEqual(\n      |    ^ Duplicate Assert\n  332 |       'The Lannisters always pay their debts'\n  333 |     );\n  334 |   });","start":{"line":331,"column":4,"index":8489}}]},{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  56 |       type: ACTION_TYPES.FORM_ITEM_ADD,\n  57 |     });\n> 58 |     expect(newState.rows).toHaveLength(5);\n     |                                       ^ Magic Number\n  59 |   });\n  60 |\n  61 |   it('remove a row item', () => {","start":{"line":58,"column":39,"index":1329}},{"frame":"  64 |       payload: 'Arya Stark',\n  65 |     });\n> 66 |     expect(newState.rows).toHaveLength(3);\n     |                                       ^ Magic Number\n  67 |   });\n  68 |\n  69 |   it('update a row item', () => {","start":{"line":66,"column":39,"index":1542}},{"frame":"  88 |       },\n  89 |     });\n> 90 |     expect(newState.rows).toHaveLength(4);\n     |                                       ^ Magic Number\n  91 |     expect(newState.rows).toEqual([\n  92 |       { id: 'Jon Snow' },\n  93 |       { id: 'Daenerys Targaryen' },","start":{"line":90,"column":39,"index":2155}},{"frame":"  106 |       new: {},\n  107 |     });\n> 108 |     expect(newState.rows).toHaveLength(0);\n      |                                       ^ Magic Number\n  109 |     expect(newState.dueDate).toEqual({\n  110 |       selectedDate: null,\n  111 |       paymentTerm: null,","start":{"line":108,"column":39,"index":2606}},{"frame":"  300 |     expect(newState.discount.type).toEqual('percentage');\n  301 |     expect(newState.discount.type).not.toEqual('flat');\n> 302 |     expect(newState.discount.amount).toEqual(10);\n      |                                             ^ Magic Number\n  303 |     expect(newState.discount.amount).not.toEqual(5);\n  304 |   });\n  305 |","start":{"line":302,"column":45,"index":7763}},{"frame":"  301 |     expect(newState.discount.type).not.toEqual('flat');\n  302 |     expect(newState.discount.amount).toEqual(10);\n> 303 |     expect(newState.discount.amount).not.toEqual(5);\n      |                                                 ^ Magic Number\n  304 |   });\n  305 |\n  306 |   it('tax data', () => {","start":{"line":303,"column":49,"index":7817}},{"frame":"  314 |       },\n  315 |     });\n> 316 |     expect(newState.tax.amount).toEqual(5);\n      |                                        ^ Magic Number\n  317 |     expect(newState.tax.amount).not.toEqual(10);\n  318 |   });\n  319 |","start":{"line":316,"column":40,"index":8095}},{"frame":"  315 |     });\n  316 |     expect(newState.tax.amount).toEqual(5);\n> 317 |     expect(newState.tax.amount).not.toEqual(10);\n      |                                            ^ Magic Number\n  318 |   });\n  319 |\n  320 |   it('note data', () => {","start":{"line":317,"column":44,"index":8143}},{"frame":"  482 |   it('should populate other fields data correctly', () => {\n  483 |     // Rows\n> 484 |     expect(newState.rows.length).toEqual(1);\n      |                                         ^ Magic Number\n  485 |     expect(newState.rows).toEqual(invoiceData.rows);\n  486 |     // Tax\n  487 |     expect(newState.tax).toEqual(invoiceData.tax);","start":{"line":484,"column":41,"index":12427}}]}],"metrics":{"aggregate":{"cyclomatic":42,"cyclomaticDensity":7.513,"halstead":{"bugs":5.259,"difficulty":29.845,"effort":470903.212,"length":2049,"time":26161.29,"vocabulary":208,"volume":15778.201,"operands":{"distinct":197,"total":1069,"identifiers":["describe","\"Form Reducer should handle\"","currentState","beforeEach","rows","id","\"Jon Snow\"","\"Daenerys Targaryen\"","\"Tyrion Lannister\"","\"Arya Stark\"","dueDate","selectedDate","null","paymentTerm","useCustom","true","note","currency","code","\"USD\"","fraction","2","placement","\"before\"","separator","\"commaDot\"","discount","tax","settings","open","required_fields","savedSettings","it","\"adding a row item\"","newState","FormReducer","type","ACTION_TYPES","FORM_ITEM_ADD","expect","toHaveLength","5","\"remove a row item\"","FORM_ITEM_REMOVE","payload","3","\"update a row item\"","FORM_ITEM_UPDATE","description","\"The Lannisters always pay their debts\"","toEqual","\"drag row item\"","FORM_ITEM_MOVE","dragIndex","hoverIndex","4","\"clear the form\"","FORM_CLEAR","recipient","newRecipient","select","new","0","false","\"toggle the form settings\"","newState1","FORM_SETTING_TOGGLE","newState2","\"close the form settings\"","FORM_SETTING_CLOSE","\"Form Reducer should handle toggle\"","\"currency field\"","FORM_FIELD_TOGGLE","\"currency\"","toBe","\"dueDate field\"","\"dueDate\"","\"discount field\"","\"discount\"","\"note field\"","\"note\"","\"tax field\"","\"tax\"","\"Form Reducer should handle update\"","required","\"recipient data\"","FORM_RECIPIENT_UPDATE","fullname","company","\"HBO\"","email","\"jon@snow.got\"","phone","\"000000000\"","not","\"Dany\"","\"mother@dragons.got\"","\"111111111\"","\"currency data\"","FORM_FIELD_UPDATE_DATA","field","data","selectedCurrency","symbol","\"$\"","name","\"US Dollar\"","symbol_native","decimal_digits","rounding","name_plural","\"US dollars\"","\"VND\"","\"dueDate data\"","\"28/07/1988\"","\"discount data\"","\"percentage\"","amount","10","\"flat\"","\"tax data\"","\"note data\"","content","\"You know nothing, Jon Snow\"","\"Form Reducer should handle Invoice Edit\"","invoiceData","method","\"default\"","tin","\"123-456-789\"","editMode","active","contacts","_id","\"first-contact\"","faker","findName","internet","companyName","phoneNumber","\"second-contact\"","\"third-contact\"","\"random-string\"","\"16bf1a07-71e6-4be4-8a18-d89a715bd191\"","\"iPhone X\"","price","999","quantity","1","subtotal","\"reverse-charge\"","\"555-444-333\"","date","hours","12","milliseconds","minutes","months","seconds","years","2018","\"Thank you!\"","INVOICE_EDIT","\"change editMode to true and add editData\"","\"should populate recipient field data correctly\"","invoiceData2","Object","assign","\"should create a new contact in form if all contacts are deleted\"","pick","\"fullname\"","\"company\"","\"phone\"","\"email\"","\"should populate other fields data correctly\"","length","\"toggle optional field if necessary\"","undefined","\"should only show currency field if it is different than default\"","currentCurrencyCode","savedCurrencyCode","\"Form Reducer should handle update Settings\"","SAVED_FORM_SETTING_UPDATE","\"reverse\"","\"111-111-111\"","\"should save default tax value\"","\"should save default currency value\"","\"should save default visibility value\"","state","form","\"Form Selectors\"","\"getRows should return form rows\"","getRows","\"getRecipient should return form recipient\"","getRecipient","\"getCurrentInvoice should return form state\"","getCurrentInvoice"]},"operators":{"distinct":11,"total":980,"identifiers":["()","function=>","let","=","{}",":","[]",",","const",".","!=="]}},"paramCount":0,"sloc":{"logical":559,"physical":605}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":5,"path":"../FormReducer","type":"esm"},{"line":6,"path":"../../constants/actions.jsx","type":"esm"},{"line":7,"path":"../../../libs/currencies.json","type":"esm"},{"line":9,"path":"uuid/v4","type":"esm"},{"line":10,"path":"faker","type":"esm"},{"line":11,"path":"lodash","type":"esm"}],"errors":[],"lineEnd":605,"lineStart":1,"maintainability":97.176,"methods":[{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.041,"difficulty":2.4,"effort":293.075,"length":33,"time":16.282,"vocabulary":13,"volume":122.115,"operands":{"distinct":10,"total":16,"identifiers":["currentState","beforeEach","it","\"adding a row item\"","\"remove a row item\"","\"update a row item\"","\"drag row item\"","\"clear the form\"","\"toggle the form settings\"","\"close the form settings\""]},"operators":{"distinct":3,"total":17,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":17,"physical":137},"errors":[],"lineEnd":149,"lineStart":13,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.159,"difficulty":3.879,"effort":1855.17,"length":94,"time":103.065,"vocabulary":34,"volume":478.222,"operands":{"distinct":29,"total":45,"identifiers":["currentState","rows","id","\"Jon Snow\"","\"Daenerys Targaryen\"","\"Tyrion Lannister\"","\"Arya Stark\"","dueDate","selectedDate","null","paymentTerm","useCustom","true","note","currency","code","\"USD\"","fraction","2","placement","\"before\"","separator","\"commaDot\"","discount","tax","settings","open","required_fields","savedSettings"]},"operators":{"distinct":5,"total":49,"identifiers":["=","{}",":","[]",","]}},"paramCount":0,"sloc":{"logical":29,"physical":38},"errors":[],"lineEnd":52,"lineStart":15,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.028,"difficulty":3.3,"effort":277.2,"length":21,"time":15.4,"vocabulary":16,"volume":84,"operands":{"distinct":10,"total":11,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_ITEM_ADD","expect","rows","toHaveLength","5"]},"operators":{"distinct":6,"total":10,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":59,"lineStart":54,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.033,"difficulty":3.25,"effort":325.254,"length":24,"time":18.07,"vocabulary":18,"volume":100.078,"operands":{"distinct":12,"total":13,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_ITEM_REMOVE","payload","\"Arya Stark\"","expect","rows","toHaveLength","3"]},"operators":{"distinct":6,"total":11,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":67,"lineStart":61,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.051,"difficulty":4.2,"effort":636.807,"length":34,"time":35.378,"vocabulary":22,"volume":151.621,"operands":{"distinct":15,"total":18,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_ITEM_UPDATE","payload","id","\"Tyrion Lannister\"","description","\"The Lannisters always pay their debts\"","expect","rows","2","toEqual"]},"operators":{"distinct":7,"total":16,"identifiers":["const","=","()","{}",":",".","[]"]}},"paramCount":0,"sloc":{"logical":8,"physical":12},"errors":[],"lineEnd":80,"lineStart":69,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.094,"difficulty":5.333,"effort":1502.735,"length":58,"time":83.485,"vocabulary":29,"volume":281.763,"operands":{"distinct":21,"total":28,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_ITEM_MOVE","payload","dragIndex","2","hoverIndex","3","expect","rows","toHaveLength","4","toEqual","id","\"Jon Snow\"","\"Daenerys Targaryen\"","\"Arya Stark\"","\"Tyrion Lannister\""]},"operators":{"distinct":8,"total":30,"identifiers":["const","=","()","{}",":",".","[]",","]}},"paramCount":0,"sloc":{"logical":14,"physical":16},"errors":[],"lineEnd":97,"lineStart":82,"name":"<anon method-6>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.448,"halstead":{"bugs":0.209,"difficulty":4.917,"effort":3075.418,"length":116,"time":170.857,"vocabulary":42,"volume":625.509,"operands":{"distinct":36,"total":59,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_CLEAR","expect","recipient","toEqual","newRecipient","true","select","new","rows","toHaveLength","0","dueDate","selectedDate","null","paymentTerm","useCustom","note","currency","code","\"USD\"","fraction","2","placement","\"before\"","separator","\"commaDot\"","discount","tax","settings","open","false"]},"operators":{"distinct":6,"total":57,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":29,"physical":26},"errors":[],"lineEnd":124,"lineStart":99,"name":"<anon method-7>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.065,"difficulty":5.538,"effort":1082.241,"length":46,"time":60.125,"vocabulary":19,"volume":195.405,"operands":{"distinct":13,"total":24,"identifiers":["newState1","FormReducer","currentState","type","ACTION_TYPES","FORM_SETTING_TOGGLE","expect","settings","open","toEqual","false","newState2","true"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":10,"physical":10},"errors":[],"lineEnd":135,"lineStart":126,"name":"<anon method-8>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.064,"difficulty":6,"effort":1150.899,"length":46,"time":63.939,"vocabulary":18,"volume":191.817,"operands":{"distinct":12,"total":24,"identifiers":["newState1","FormReducer","currentState","type","ACTION_TYPES","FORM_SETTING_CLOSE","expect","settings","open","toEqual","false","newState2"]},"operators":{"distinct":6,"total":22,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":10,"physical":12},"errors":[],"lineEnd":148,"lineStart":137,"name":"<anon method-9>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.029,"difficulty":2.25,"effort":194.593,"length":25,"time":10.811,"vocabulary":11,"volume":86.486,"operands":{"distinct":8,"total":12,"identifiers":["currentState","beforeEach","it","\"currency field\"","\"dueDate field\"","\"discount field\"","\"note field\"","\"tax field\""]},"operators":{"distinct":3,"total":13,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":13,"physical":61},"errors":[],"lineEnd":211,"lineStart":151,"name":"<anon method-10>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.692,"halstead":{"bugs":0.047,"difficulty":3,"effort":419.441,"length":39,"time":23.302,"vocabulary":12,"volume":139.814,"operands":{"distinct":9,"total":18,"identifiers":["currentState","dueDate","currency","discount","tax","note","settings","required_fields","false"]},"operators":{"distinct":3,"total":21,"identifiers":["=","{}",":"]}},"paramCount":0,"sloc":{"logical":13,"physical":18},"errors":[],"lineEnd":170,"lineStart":153,"name":"<anon method-11>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.04,"difficulty":3.214,"effort":388.974,"length":28,"time":21.61,"vocabulary":20,"volume":121.014,"operands":{"distinct":14,"total":15,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_FIELD_TOGGLE","payload","\"currency\"","expect","settings","required_fields","currency","toBe","true"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":178,"lineStart":172,"name":"<anon method-12>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.04,"difficulty":3.214,"effort":388.974,"length":28,"time":21.61,"vocabulary":20,"volume":121.014,"operands":{"distinct":14,"total":15,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_FIELD_TOGGLE","payload","\"dueDate\"","expect","settings","required_fields","dueDate","toBe","true"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":186,"lineStart":180,"name":"<anon method-13>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.04,"difficulty":3.214,"effort":388.974,"length":28,"time":21.61,"vocabulary":20,"volume":121.014,"operands":{"distinct":14,"total":15,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_FIELD_TOGGLE","payload","\"discount\"","expect","settings","required_fields","discount","toBe","true"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":194,"lineStart":188,"name":"<anon method-14>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.04,"difficulty":3.214,"effort":388.974,"length":28,"time":21.61,"vocabulary":20,"volume":121.014,"operands":{"distinct":14,"total":15,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_FIELD_TOGGLE","payload","\"note\"","expect","settings","required_fields","note","toBe","true"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":202,"lineStart":196,"name":"<anon method-15>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.04,"difficulty":3.214,"effort":388.974,"length":28,"time":21.61,"vocabulary":20,"volume":121.014,"operands":{"distinct":14,"total":15,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_FIELD_TOGGLE","payload","\"tax\"","expect","settings","required_fields","tax","toBe","true"]},"operators":{"distinct":6,"total":13,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":6,"physical":7},"errors":[],"lineEnd":210,"lineStart":204,"name":"<anon method-16>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.667,"halstead":{"bugs":0.035,"difficulty":2.333,"effort":242.582,"length":29,"time":13.477,"vocabulary":12,"volume":103.964,"operands":{"distinct":9,"total":14,"identifiers":["currentState","beforeEach","it","\"recipient data\"","\"currency data\"","\"dueDate data\"","\"discount data\"","\"tax data\"","\"note data\""]},"operators":{"distinct":3,"total":15,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":15,"physical":123},"errors":[],"lineEnd":335,"lineStart":213,"name":"<anon method-17>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.038,"difficulty":3,"effort":342.484,"length":33,"time":19.027,"vocabulary":11,"volume":114.161,"operands":{"distinct":8,"total":16,"identifiers":["currentState","dueDate","required","true","currency","discount","tax","note"]},"operators":{"distinct":3,"total":17,"identifiers":["=","{}",":"]}},"paramCount":0,"sloc":{"logical":11,"physical":9},"errors":[],"lineEnd":223,"lineStart":215,"name":"<anon method-18>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.16,"difficulty":5.778,"effort":2768.812,"length":95,"time":153.823,"vocabulary":33,"volume":479.217,"operands":{"distinct":27,"total":52,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_RECIPIENT_UPDATE","payload","newRecipient","false","select","fullname","\"Jon Snow\"","company","\"HBO\"","email","\"jon@snow.got\"","phone","\"000000000\"","new","expect","recipient","toBe","toEqual","not","\"Dany\"","\"mother@dragons.got\"","\"111111111\""]},"operators":{"distinct":6,"total":43,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":25,"physical":28},"errors":[],"lineEnd":252,"lineStart":225,"name":"<anon method-19>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.125,"difficulty":4.138,"effort":1549.397,"length":73,"time":86.078,"vocabulary":35,"volume":374.438,"operands":{"distinct":29,"total":40,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_FIELD_UPDATE_DATA","payload","field","\"currency\"","data","selectedCurrency","symbol","\"$\"","name","\"US Dollar\"","symbol_native","decimal_digits","2","rounding","0","code","\"USD\"","name_plural","\"US dollars\"","expect","currency","not","toEqual","\"VND\""]},"operators":{"distinct":6,"total":33,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":18,"physical":21},"errors":[],"lineEnd":274,"lineStart":254,"name":"<anon method-20>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":11.111,"halstead":{"bugs":0.051,"difficulty":3.6,"effort":553.432,"length":35,"time":30.746,"vocabulary":21,"volume":153.731,"operands":{"distinct":15,"total":18,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_FIELD_UPDATE_DATA","payload","field","\"dueDate\"","data","selectedDate","\"28/07/1988\"","expect","dueDate","toEqual"]},"operators":{"distinct":6,"total":17,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":9,"physical":12},"errors":[],"lineEnd":287,"lineStart":276,"name":"<anon method-21>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":6.25,"halstead":{"bugs":0.116,"difficulty":6.316,"effort":2199.721,"length":75,"time":122.207,"vocabulary":25,"volume":348.289,"operands":{"distinct":19,"total":40,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_FIELD_UPDATE_DATA","payload","field","\"discount\"","data","\"percentage\"","amount","10","expect","discount","toEqual","not","\"flat\"","5"]},"operators":{"distinct":6,"total":35,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":16,"physical":16},"errors":[],"lineEnd":304,"lineStart":289,"name":"<anon method-22>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.072,"difficulty":4.412,"effort":957.931,"length":48,"time":53.218,"vocabulary":23,"volume":217.131,"operands":{"distinct":17,"total":25,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_FIELD_UPDATE_DATA","payload","field","\"tax\"","data","amount","5","expect","tax","toEqual","not","10"]},"operators":{"distinct":6,"total":23,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":11,"physical":13},"errors":[],"lineEnd":318,"lineStart":306,"name":"<anon method-23>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.072,"difficulty":4.412,"effort":957.931,"length":48,"time":53.218,"vocabulary":23,"volume":217.131,"operands":{"distinct":17,"total":25,"identifiers":["newState","FormReducer","currentState","type","ACTION_TYPES","FORM_FIELD_UPDATE_DATA","payload","field","\"note\"","data","content","\"You know nothing, Jon Snow\"","expect","note","toEqual","not","\"The Lannisters always pay their debts\""]},"operators":{"distinct":6,"total":23,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":11,"physical":15},"errors":[],"lineEnd":334,"lineStart":320,"name":"<anon method-24>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.882,"halstead":{"bugs":0.039,"difficulty":2.182,"effort":257.516,"length":31,"time":14.306,"vocabulary":14,"volume":118.028,"operands":{"distinct":11,"total":16,"identifiers":["currentState","invoiceData","newState","beforeEach","it","\"change editMode to true and add editData\"","\"should populate recipient field data correctly\"","\"should create a new contact in form if all contacts are deleted\"","\"should populate other fields data correctly\"","\"toggle optional field if necessary\"","\"should only show currency field if it is different than default\""]},"operators":{"distinct":3,"total":15,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":17,"physical":179},"errors":[],"lineEnd":515,"lineStart":337,"name":"<anon method-25>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":0.943,"halstead":{"bugs":0.777,"difficulty":7.917,"effort":18444.175,"length":358,"time":1024.676,"vocabulary":91,"volume":2329.79,"operands":{"distinct":84,"total":190,"identifiers":["currentState","recipient","newRecipient","true","select","new","rows","dueDate","discount","note","currency","code","\"USD\"","decimal_digits","2","name","\"US Dollar\"","name_plural","\"US dollars\"","rounding","0","symbol","\"$\"","symbol_native","tax","amount","10","method","\"default\"","tin","\"123-456-789\"","settings","open","false","editMode","active","required_fields","savedSettings","\"VND\"","invoiceData","contacts","_id","\"first-contact\"","fullname","faker","findName","email","internet","company","companyName","phone","phoneNumber","\"second-contact\"","\"third-contact\"","\"random-string\"","id","\"16bf1a07-71e6-4be4-8a18-d89a715bd191\"","description","\"iPhone X\"","price","999","quantity","1","subtotal","5","\"reverse-charge\"","\"555-444-333\"","date","hours","12","milliseconds","minutes","months","seconds","years","2018","type","\"percentage\"","\"Thank you!\"","newState","FormReducer","ACTION_TYPES","INVOICE_EDIT","payload"]},"operators":{"distinct":7,"total":168,"identifiers":["=","{}",":","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":106,"physical":118},"errors":[],"lineEnd":456,"lineStart":339,"name":"<anon method-26>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.03,"difficulty":1.556,"effort":139.915,"length":26,"time":7.773,"vocabulary":11,"volume":89.945,"operands":{"distinct":9,"total":14,"identifiers":["expect","newState","settings","editMode","active","toEqual","true","data","invoiceData"]},"operators":{"distinct":2,"total":12,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":4,"physical":4},"errors":[],"lineEnd":461,"lineStart":458,"name":"<anon method-27>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.088,"difficulty":5.342,"effort":1406.174,"length":56,"time":78.121,"vocabulary":26,"volume":263.225,"operands":{"distinct":19,"total":29,"identifiers":["invoiceData2","Object","assign","invoiceData","recipient","contacts","0","newState2","FormReducer","currentState","type","ACTION_TYPES","INVOICE_EDIT","payload","expect","newRecipient","toEqual","false","select"]},"operators":{"distinct":7,"total":27,"identifiers":["const","=","()",".","{}",":","[]"]}},"paramCount":0,"sloc":{"logical":11,"physical":11},"errors":[],"lineEnd":473,"lineStart":463,"name":"<anon method-28>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.046,"difficulty":2.769,"effort":384.85,"length":34,"time":21.381,"vocabulary":17,"volume":138.974,"operands":{"distinct":13,"total":18,"identifiers":["expect","newState","recipient","newRecipient","toEqual","true","new","pick","invoiceData","\"fullname\"","\"company\"","\"phone\"","\"email\""]},"operators":{"distinct":4,"total":16,"identifiers":["()",".","[]",","]}},"paramCount":0,"sloc":{"logical":5,"physical":6},"errors":[],"lineEnd":480,"lineStart":475,"name":"<anon method-29>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":7.143,"halstead":{"bugs":0.103,"difficulty":3.308,"effort":1020.901,"length":79,"time":56.717,"vocabulary":15,"volume":308.644,"operands":{"distinct":13,"total":43,"identifiers":["expect","newState","rows","length","toEqual","1","invoiceData","tax","currency","note","content","discount","dueDate"]},"operators":{"distinct":2,"total":36,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":14,"physical":15},"errors":[],"lineEnd":496,"lineStart":482,"name":"<anon method-30>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.082,"difficulty":8.727,"effort":2140.344,"length":60,"time":118.908,"vocabulary":17,"volume":245.248,"operands":{"distinct":11,"total":32,"identifiers":["required_fields","newState","settings","expect","tax","toEqual","invoiceData","undefined","dueDate","discount","note"]},"operators":{"distinct":6,"total":28,"identifiers":["const","=","{}",".","()","!=="]}},"paramCount":0,"sloc":{"logical":10,"physical":9},"errors":[],"lineEnd":506,"lineStart":498,"name":"<anon method-31>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":25,"halstead":{"bugs":0.04,"difficulty":4,"effort":484.454,"length":31,"time":26.914,"vocabulary":15,"volume":121.114,"operands":{"distinct":10,"total":16,"identifiers":["currentCurrencyCode","newState","currency","code","savedCurrencyCode","savedSettings","expect","settings","required_fields","toEqual"]},"operators":{"distinct":5,"total":15,"identifiers":["const","=",".","()","!=="]}},"paramCount":0,"sloc":{"logical":4,"physical":7},"errors":[],"lineEnd":514,"lineStart":508,"name":"<anon method-32>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":10,"halstead":{"bugs":0.02,"difficulty":1.929,"effort":115.318,"length":18,"time":6.407,"vocabulary":10,"volume":59.795,"operands":{"distinct":7,"total":9,"identifiers":["currentState","newState","beforeEach","it","\"should save default tax value\"","\"should save default currency value\"","\"should save default visibility value\""]},"operators":{"distinct":3,"total":9,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":10,"physical":68},"errors":[],"lineEnd":584,"lineStart":517,"name":"<anon method-33>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":3.03,"halstead":{"bugs":0.177,"difficulty":5.156,"effort":2733.022,"length":101,"time":151.835,"vocabulary":38,"volume":530.041,"operands":{"distinct":32,"total":55,"identifiers":["currentState","recipient","newRecipient","true","select","new","rows","savedSettings","tax","amount","10","method","\"default\"","tin","\"123-456-789\"","currency","\"USD\"","required_fields","dueDate","false","discount","note","newState","FormReducer","type","ACTION_TYPES","SAVED_FORM_SETTING_UPDATE","payload","5","\"reverse\"","\"111-111-111\"","\"VND\""]},"operators":{"distinct":6,"total":46,"identifiers":["=","{}",":","[]","()","."]}},"paramCount":0,"sloc":{"logical":33,"physical":43},"errors":[],"lineEnd":561,"lineStart":519,"name":"<anon method-34>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":20,"halstead":{"bugs":0.026,"difficulty":2,"effort":156.276,"length":20,"time":8.682,"vocabulary":15,"volume":78.138,"operands":{"distinct":11,"total":11,"identifiers":["expect","newState","savedSettings","tax","toEqual","amount","5","method","\"reverse\"","tin","\"111-111-111\""]},"operators":{"distinct":4,"total":9,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":5,"physical":7},"errors":[],"lineEnd":569,"lineStart":563,"name":"<anon method-35>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":50,"halstead":{"bugs":0.011,"difficulty":1,"effort":33,"length":11,"time":1.833,"vocabulary":8,"volume":33,"operands":{"distinct":6,"total":6,"identifiers":["expect","newState","savedSettings","currency","toEqual","\"VND\""]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":2,"physical":3},"errors":[],"lineEnd":573,"lineStart":571,"name":"<anon method-36>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":14.286,"halstead":{"bugs":0.034,"difficulty":2.727,"effort":277.034,"length":26,"time":15.391,"vocabulary":15,"volume":101.579,"operands":{"distinct":11,"total":15,"identifiers":["expect","newState","savedSettings","required_fields","toEqual","dueDate","true","currency","discount","tax","note"]},"operators":{"distinct":4,"total":11,"identifiers":["()",".","{}",":"]}},"paramCount":0,"sloc":{"logical":7,"physical":9},"errors":[],"lineEnd":583,"lineStart":575,"name":"<anon method-37>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":16.667,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":46.529,"length":12,"time":2.585,"vocabulary":6,"volume":31.02,"operands":{"distinct":4,"total":6,"identifiers":["it","\"getRows should return form rows\"","\"getRecipient should return form recipient\"","\"getCurrentInvoice should return form state\""]},"operators":{"distinct":2,"total":6,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":6,"physical":11},"errors":[],"lineEnd":604,"lineStart":594,"name":"<anon method-38>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":1.167,"effort":45.5,"length":13,"time":2.528,"vocabulary":8,"volume":39,"operands":{"distinct":6,"total":7,"identifiers":["expect","getRows","state","toEqual","form","rows"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":597,"lineStart":595,"name":"<anon method-39>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.013,"difficulty":1.167,"effort":45.5,"length":13,"time":2.528,"vocabulary":8,"volume":39,"operands":{"distinct":6,"total":7,"identifiers":["expect","getRecipient","state","toEqual","form","recipient"]},"operators":{"distinct":2,"total":6,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":600,"lineStart":598,"name":"<anon method-40>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1.2,"effort":37.057,"length":11,"time":2.059,"vocabulary":7,"volume":30.881,"operands":{"distinct":5,"total":6,"identifiers":["expect","getCurrentInvoice","state","toEqual","form"]},"operators":{"distinct":2,"total":5,"identifiers":["()","."]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":603,"lineStart":601,"name":"<anon method-41>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":0.179,"halstead":{"bugs":0.125,"difficulty":0.711,"effort":11211.981,"length":48.786,"time":622.888,"vocabulary":4.952,"volume":375.671,"operands":{"distinct":4.69,"total":25.452},"operators":{"distinct":0.262,"total":23.333}},"paramCount":0,"sloc":{"logical":13.31,"physical":14.405}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":13.798,"halstead":{"bugs":0.078,"difficulty":3.604,"effort":1221.892,"length":49.073,"time":67.883,"vocabulary":20.439,"volume":234.814,"operands":{"distinct":15.707,"total":25.683},"operators":{"distinct":4.732,"total":23.39}},"paramCount":0,"sloc":{"logical":13.244,"physical":27.171}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/app/reducers/__tests__/UIReducer.spec.js","testCases":4,"smells":3,"smellInfo":[{"name":"Magic Number","packageName":"magicNumberRule","items":[{"frame":"  39 |       },\n  40 |     });\n> 41 |     expect(newState.notifications).toHaveLength(1);\n     |                                                ^ Magic Number\n  42 |     expect(newState.notifications[0].type).toEqual('warning');\n  43 |     expect(newState.notifications[0].message).toEqual('Missing Document');\n  44 |   });","start":{"line":41,"column":48,"index":1216}},{"frame":"  64 |       payload: 'abc',\n  65 |     });\n> 66 |     expect(newState.notifications).toHaveLength(1);\n     |                                                ^ Magic Number\n  67 |     expect(newState.notifications[0].id).toEqual('xyz');\n  68 |     const newState2 = UIReducer(currentState, {\n  69 |       type: ACTION_TYPES.UI_NOTIFICATION_REMOVE,","start":{"line":66,"column":48,"index":1913}},{"frame":"  70 |       payload: 'xyz',\n  71 |     });\n> 72 |     expect(newState2.notifications).toHaveLength(1);\n     |                                                 ^ Magic Number\n  73 |     expect(newState2.notifications[0].id).toEqual('abc');\n  74 |   });\n  75 | });","start":{"line":72,"column":49,"index":2150}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":8.333,"halstead":{"bugs":0.519,"difficulty":15.915,"effort":24790.294,"length":276,"time":1377.239,"vocabulary":50,"volume":1557.704,"operands":{"distinct":41,"total":145,"identifiers":["initialState","activeTab","\"form\"","notifications","checkUpdatesMessage","describe","\"UI Reducer\"","it","\"should handle initial state\"","expect","UIReducer","undefined","toEqual","\"should handle UI_TAB_CHANGE action\"","newState","type","ACTION_TYPES","UI_TAB_CHANGE","payload","\"invoices\"","newState2","\"contacts\"","newState3","\"settings\"","\"should handle UI_NOTIFICATION_NEW action\"","UI_NOTIFICATION_NEW","\"warning\"","message","\"Missing Document\"","toHaveLength","1","0","\"should handle UI_NOTIFICATION_REMOVE action\"","currentState","id","\"abc\"","\"Missing Doc\"","\"xyz\"","\"success\"","\"Invoice Created Successfully\"","UI_NOTIFICATION_REMOVE"]},"operators":{"distinct":9,"total":131,"identifiers":["const","=","{}",":","[]","()","function=>",".",","]}},"paramCount":0,"sloc":{"logical":72,"physical":76}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../UIReducer","type":"esm"},{"line":2,"path":"../../constants/actions.jsx","type":"esm"}],"errors":[],"lineEnd":76,"lineStart":1,"maintainability":102.268,"methods":[{"cyclomatic":1,"cyclomaticDensity":12.5,"halstead":{"bugs":0.015,"difficulty":1.6,"effort":71.868,"length":16,"time":3.993,"vocabulary":7,"volume":44.918,"operands":{"distinct":5,"total":8,"identifiers":["it","\"should handle initial state\"","\"should handle UI_TAB_CHANGE action\"","\"should handle UI_NOTIFICATION_NEW action\"","\"should handle UI_NOTIFICATION_REMOVE action\""]},"operators":{"distinct":2,"total":8,"identifiers":["()","function=>"]}},"paramCount":0,"sloc":{"logical":8,"physical":66},"errors":[],"lineEnd":75,"lineStart":10,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.01,"difficulty":1.5,"effort":45,"length":10,"time":2.5,"vocabulary":8,"volume":30,"operands":{"distinct":5,"total":5,"identifiers":["expect","UIReducer","undefined","toEqual","initialState"]},"operators":{"distinct":3,"total":5,"identifiers":["()",".","{}"]}},"paramCount":0,"sloc":{"logical":3,"physical":3},"errors":[],"lineEnd":13,"lineStart":11,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":5.556,"halstead":{"bugs":0.105,"difficulty":7.8,"effort":2466.725,"length":72,"time":137.04,"vocabulary":21,"volume":316.247,"operands":{"distinct":15,"total":39,"identifiers":["newState","UIReducer","initialState","type","ACTION_TYPES","UI_TAB_CHANGE","payload","\"invoices\"","expect","activeTab","toEqual","newState2","\"contacts\"","newState3","\"settings\""]},"operators":{"distinct":6,"total":33,"identifiers":["const","=","()","{}",":","."]}},"paramCount":0,"sloc":{"logical":18,"physical":17},"errors":[],"lineEnd":31,"lineStart":15,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.084,"difficulty":6.563,"effort":1662.409,"length":56,"time":92.356,"vocabulary":23,"volume":253.319,"operands":{"distinct":16,"total":30,"identifiers":["newState","UIReducer","initialState","type","ACTION_TYPES","UI_NOTIFICATION_NEW","payload","\"warning\"","message","\"Missing Document\"","expect","notifications","toHaveLength","1","0","toEqual"]},"operators":{"distinct":7,"total":26,"identifiers":["const","=","()","{}",":",".","[]"]}},"paramCount":0,"sloc":{"logical":12,"physical":12},"errors":[],"lineEnd":44,"lineStart":33,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":4,"halstead":{"bugs":0.175,"difficulty":9.333,"effort":4900,"length":105,"time":272.222,"vocabulary":32,"volume":525,"operands":{"distinct":24,"total":56,"identifiers":["currentState","activeTab","\"form\"","notifications","id","\"abc\"","type","\"warning\"","message","\"Missing Doc\"","\"xyz\"","\"success\"","\"Invoice Created Successfully\"","newState","UIReducer","ACTION_TYPES","UI_NOTIFICATION_REMOVE","payload","expect","toHaveLength","1","0","toEqual","newState2"]},"operators":{"distinct":8,"total":49,"identifiers":["const","=","{}",":","[]",",","()","."]}},"paramCount":0,"sloc":{"logical":25,"physical":29},"errors":[],"lineEnd":74,"lineStart":46,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.389,"halstead":{"bugs":0.087,"difficulty":2.652,"effort":4131.716,"length":46,"time":229.54,"vocabulary":8.333,"volume":259.617,"operands":{"distinct":6.833,"total":24.167},"operators":{"distinct":1.5,"total":21.833}},"paramCount":0,"sloc":{"logical":12,"physical":12.667}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":12.744,"halstead":{"bugs":0.078,"difficulty":5.359,"effort":1829.201,"length":51.8,"time":101.622,"vocabulary":18.2,"volume":233.897,"operands":{"distinct":13,"total":27.6},"operators":{"distinct":5.2,"total":24.2}},"paramCount":0,"sloc":{"logical":13.2,"physical":25.4}}}},{"path":"/home/gabriel/Desktop/research/projects/Manta/helpers/__tests__/formatNumber.spec.js","testCases":3,"smells":12,"smellInfo":[{"name":"Eager Test","packageName":"eagerTest","items":[{"frame":"  13 |\n  14 |   it('return correct formatted number with commaDot settings', () => {\n> 15 |     const formattedNumber1 = formatNumber(number1, 2, 'commaDot');\n     |                             ^ Eager Test\n  16 |     expect(formattedNumber1).toEqual('99.00');\n  17 |     const formattedNumber2 = formatNumber(number2, 2, 'commaDot');\n  18 |     expect(formattedNumber2).toEqual('1,000.00');","start":{"line":15,"column":29,"index":340}},{"frame":"  15 |     const formattedNumber1 = formatNumber(number1, 2, 'commaDot');\n  16 |     expect(formattedNumber1).toEqual('99.00');\n> 17 |     const formattedNumber2 = formatNumber(number2, 2, 'commaDot');\n     |                             ^ Eager Test\n  18 |     expect(formattedNumber2).toEqual('1,000.00');\n  19 |     const formattedNumber3 = formatNumber(number3, 2, 'commaDot');\n  20 |     expect(formattedNumber3).toEqual('1,999.99');","start":{"line":17,"column":29,"index":454}},{"frame":"  17 |     const formattedNumber2 = formatNumber(number2, 2, 'commaDot');\n  18 |     expect(formattedNumber2).toEqual('1,000.00');\n> 19 |     const formattedNumber3 = formatNumber(number3, 2, 'commaDot');\n     |                             ^ Eager Test\n  20 |     expect(formattedNumber3).toEqual('1,999.99');\n  21 |   });\n  22 |","start":{"line":19,"column":29,"index":571}},{"frame":"  22 |\n  23 |   it('return correct formatted number with dotComma settings', () => {\n> 24 |     const formattedNumber1 = formatNumber(number1, 2, 'dotComma');\n     |                             ^ Eager Test\n  25 |     expect(formattedNumber1).toEqual('99,00');\n  26 |     const formattedNumber2 = formatNumber(number2, 2, 'dotComma');\n  27 |     expect(formattedNumber2).toEqual('1.000,00');","start":{"line":24,"column":29,"index":766}},{"frame":"  24 |     const formattedNumber1 = formatNumber(number1, 2, 'dotComma');\n  25 |     expect(formattedNumber1).toEqual('99,00');\n> 26 |     const formattedNumber2 = formatNumber(number2, 2, 'dotComma');\n     |                             ^ Eager Test\n  27 |     expect(formattedNumber2).toEqual('1.000,00');\n  28 |     const formattedNumber3 = formatNumber(number3, 2, 'dotComma');\n  29 |     expect(formattedNumber3).toEqual('1.999,99');","start":{"line":26,"column":29,"index":880}},{"frame":"  26 |     const formattedNumber2 = formatNumber(number2, 2, 'dotComma');\n  27 |     expect(formattedNumber2).toEqual('1.000,00');\n> 28 |     const formattedNumber3 = formatNumber(number3, 2, 'dotComma');\n     |                             ^ Eager Test\n  29 |     expect(formattedNumber3).toEqual('1.999,99');\n  30 |   });\n  31 |","start":{"line":28,"column":29,"index":997}},{"frame":"  31 |\n  32 |   it('return correct formatted number with spaceDot settings', () => {\n> 33 |     const formattedNumber1 = formatNumber(number1, 2, 'spaceDot');\n     |                             ^ Eager Test\n  34 |     expect(formattedNumber1).toEqual('99.00');\n  35 |     const formattedNumber2 = formatNumber(number2, 2, 'spaceDot');\n  36 |     expect(formattedNumber2).toEqual('1 000.00');","start":{"line":33,"column":29,"index":1192}},{"frame":"  33 |     const formattedNumber1 = formatNumber(number1, 2, 'spaceDot');\n  34 |     expect(formattedNumber1).toEqual('99.00');\n> 35 |     const formattedNumber2 = formatNumber(number2, 2, 'spaceDot');\n     |                             ^ Eager Test\n  36 |     expect(formattedNumber2).toEqual('1 000.00');\n  37 |     const formattedNumber3 = formatNumber(number3, 2, 'spaceDot');\n  38 |     expect(formattedNumber3).toEqual('1 999.99');","start":{"line":35,"column":29,"index":1306}},{"frame":"  35 |     const formattedNumber2 = formatNumber(number2, 2, 'spaceDot');\n  36 |     expect(formattedNumber2).toEqual('1 000.00');\n> 37 |     const formattedNumber3 = formatNumber(number3, 2, 'spaceDot');\n     |                             ^ Eager Test\n  38 |     expect(formattedNumber3).toEqual('1 999.99');\n  39 |   });\n  40 | })","start":{"line":37,"column":29,"index":1423}}]},{"name":"Lazy Test","packageName":"lazyTest","items":[{"frame":"  13 |\n  14 |   it('return correct formatted number with commaDot settings', () => {\n> 15 |     const formattedNumber1 = formatNumber(number1, 2, 'commaDot');\n     |                             ^ Lazy Test\n  16 |     expect(formattedNumber1).toEqual('99.00');\n  17 |     const formattedNumber2 = formatNumber(number2, 2, 'commaDot');\n  18 |     expect(formattedNumber2).toEqual('1,000.00');","start":{"line":15,"column":29,"index":340}},{"frame":"  22 |\n  23 |   it('return correct formatted number with dotComma settings', () => {\n> 24 |     const formattedNumber1 = formatNumber(number1, 2, 'dotComma');\n     |                             ^ Lazy Test\n  25 |     expect(formattedNumber1).toEqual('99,00');\n  26 |     const formattedNumber2 = formatNumber(number2, 2, 'dotComma');\n  27 |     expect(formattedNumber2).toEqual('1.000,00');","start":{"line":24,"column":29,"index":766}},{"frame":"  31 |\n  32 |   it('return correct formatted number with spaceDot settings', () => {\n> 33 |     const formattedNumber1 = formatNumber(number1, 2, 'spaceDot');\n     |                             ^ Lazy Test\n  34 |     expect(formattedNumber1).toEqual('99.00');\n  35 |     const formattedNumber2 = formatNumber(number2, 2, 'spaceDot');\n  36 |     expect(formattedNumber2).toEqual('1 000.00');","start":{"line":33,"column":29,"index":1192}}]}],"metrics":{"aggregate":{"cyclomatic":6,"cyclomaticDensity":11.538,"halstead":{"bugs":0.29,"difficulty":9.581,"effort":8334.957,"length":167,"time":463.053,"vocabulary":37,"volume":869.979,"operands":{"distinct":31,"total":99,"identifiers":["describe","\"should return correct format number\"","number1","number2","number3","beforeEach","99","1000","1999.99","it","\"return correct formatted number with commaDot settings\"","formattedNumber1","formatNumber","2","\"commaDot\"","expect","toEqual","\"99.00\"","formattedNumber2","\"1,000.00\"","formattedNumber3","\"1,999.99\"","\"return correct formatted number with dotComma settings\"","\"dotComma\"","\"99,00\"","\"1.000,00\"","\"1.999,99\"","\"return correct formatted number with spaceDot settings\"","\"spaceDot\"","\"1 000.00\"","\"1 999.99\""]},"operators":{"distinct":6,"total":68,"identifiers":["()","function=>","let","=","const","."]}},"paramCount":0,"sloc":{"logical":52,"physical":42}},"settings":{"commonjs":false,"esmImportExport":{"halstead":false,"lloc":false},"forin":false,"logicalor":true,"switchcase":true,"templateExpression":{"halstead":true,"lloc":true},"trycatch":false,"newmi":false},"classes":[],"dependencies":[{"line":1,"path":"../formatNumber","type":"esm"}],"errors":[],"lineEnd":42,"lineStart":1,"maintainability":111.268,"methods":[{"cyclomatic":1,"cyclomaticDensity":9.091,"halstead":{"bugs":0.022,"difficulty":1.875,"effort":123.242,"length":19,"time":6.847,"vocabulary":11,"volume":65.729,"operands":{"distinct":8,"total":10,"identifiers":["number1","number2","number3","beforeEach","it","\"return correct formatted number with commaDot settings\"","\"return correct formatted number with dotComma settings\"","\"return correct formatted number with spaceDot settings\""]},"operators":{"distinct":3,"total":9,"identifiers":["let","()","function=>"]}},"paramCount":0,"sloc":{"logical":11,"physical":38},"errors":[],"lineEnd":40,"lineStart":3,"name":"<anon method-1>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":33.333,"halstead":{"bugs":0.008,"difficulty":0.5,"effort":12.633,"length":9,"time":0.702,"vocabulary":7,"volume":25.266,"operands":{"distinct":6,"total":6,"identifiers":["number1","99","number2","1000","number3","1999.99"]},"operators":{"distinct":1,"total":3,"identifiers":["="]}},"paramCount":0,"sloc":{"logical":3,"physical":5},"errors":[],"lineEnd":12,"lineStart":8,"name":"<anon method-2>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.063,"difficulty":3.857,"effort":723.78,"length":45,"time":40.21,"vocabulary":18,"volume":187.647,"operands":{"distinct":14,"total":27,"identifiers":["formattedNumber1","formatNumber","number1","2","\"commaDot\"","expect","toEqual","\"99.00\"","formattedNumber2","number2","\"1,000.00\"","formattedNumber3","number3","\"1,999.99\""]},"operators":{"distinct":4,"total":18,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":12,"physical":8},"errors":[],"lineEnd":21,"lineStart":14,"name":"<anon method-3>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.063,"difficulty":3.857,"effort":723.78,"length":45,"time":40.21,"vocabulary":18,"volume":187.647,"operands":{"distinct":14,"total":27,"identifiers":["formattedNumber1","formatNumber","number1","2","\"dotComma\"","expect","toEqual","\"99,00\"","formattedNumber2","number2","\"1.000,00\"","formattedNumber3","number3","\"1.999,99\""]},"operators":{"distinct":4,"total":18,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":12,"physical":8},"errors":[],"lineEnd":30,"lineStart":23,"name":"<anon method-4>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]},{"cyclomatic":1,"cyclomaticDensity":8.333,"halstead":{"bugs":0.063,"difficulty":3.857,"effort":723.78,"length":45,"time":40.21,"vocabulary":18,"volume":187.647,"operands":{"distinct":14,"total":27,"identifiers":["formattedNumber1","formatNumber","number1","2","\"spaceDot\"","expect","toEqual","\"99.00\"","formattedNumber2","number2","\"1 000.00\"","formattedNumber3","number3","\"1 999.99\""]},"operators":{"distinct":4,"total":18,"identifiers":["const","=","()","."]}},"paramCount":0,"sloc":{"logical":12,"physical":8},"errors":[],"lineEnd":39,"lineStart":32,"name":"<anon method-5>","paramNames":[],"maxNestedMethodDepth":0,"nestedMethods":[]}],"aggregateAverage":{"cyclomatic":1,"cyclomaticDensity":1.923,"halstead":{"bugs":0.048,"difficulty":1.597,"effort":1389.16,"length":27.833,"time":77.176,"vocabulary":6.167,"volume":144.996,"operands":{"distinct":5.167,"total":16.5},"operators":{"distinct":1,"total":11.333}},"paramCount":0,"sloc":{"logical":8.667,"physical":7}},"methodAverage":{"cyclomatic":1,"cyclomaticDensity":13.485,"halstead":{"bugs":0.044,"difficulty":2.789,"effort":461.443,"length":32.6,"time":25.636,"vocabulary":14.4,"volume":130.787,"operands":{"distinct":11.2,"total":19.4},"operators":{"distinct":3.2,"total":13.2}},"paramCount":0,"sloc":{"logical":10,"physical":13.4}}}}]}