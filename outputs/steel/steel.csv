file,type,smells,frame
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Global Variable,"{'line': 2, 'column': 4, 'index': 48}","  1 | describe('pc.AssetReference', function () {
> 2 |     var app;
    |    ^ Global Variable
  3 |     var parent;
  4 |     var load;
  5 |     var remove;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Global Variable,"{'line': 3, 'column': 4, 'index': 61}","  1 | describe('pc.AssetReference', function () {
  2 |     var app;
> 3 |     var parent;
    |    ^ Global Variable
  4 |     var load;
  5 |     var remove;
  6 |     var add;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Global Variable,"{'line': 4, 'column': 4, 'index': 77}","  2 |     var app;
  3 |     var parent;
> 4 |     var load;
    |    ^ Global Variable
  5 |     var remove;
  6 |     var add;
  7 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Global Variable,"{'line': 5, 'column': 4, 'index': 91}","  3 |     var parent;
  4 |     var load;
> 5 |     var remove;
    |    ^ Global Variable
  6 |     var add;
  7 |
  8 |     beforeEach(function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Global Variable,"{'line': 6, 'column': 4, 'index': 107}","  4 |     var load;
  5 |     var remove;
> 6 |     var add;
    |    ^ Global Variable
  7 |
  8 |     beforeEach(function () {
  9 |         this.parent = sinon.fake();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Global Variable,"{'line': 24, 'column': 8, 'index': 528}","  22 |
  23 |     it('pc.AssetReference, load callback', function (done) {
> 24 |         var reg = new pc.AssetReference('propName', this.parent, this.app.assets, {
     |        ^ Global Variable
  25 |             load: this.load
  26 |         });
  27 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Global Variable,"{'line': 28, 'column': 8, 'index': 653}","  26 |         });
  27 |
> 28 |         var asset = new pc.Asset(""Reference Test"", ""texture"", {
     |        ^ Global Variable
  29 |             url: 'base/tests/test-assets/sprite/red-atlas.png'
  30 |         });
  31 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Global Variable,"{'line': 48, 'column': 8, 'index': 1288}","  46 |
  47 |     it('pc.AssetReference, add callback', function (done) {
> 48 |         var reg = new pc.AssetReference('propName', this.parent, this.app.assets, {
     |        ^ Global Variable
  49 |             add: this.add
  50 |         });
  51 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Global Variable,"{'line': 52, 'column': 8, 'index': 1411}","  50 |         });
  51 |
> 52 |         var asset = new pc.Asset(""Reference Test"", ""texture"", {
     |        ^ Global Variable
  53 |             url: 'base/tests/test-assets/sprite/red-atlas.png'
  54 |         });
  55 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Global Variable,"{'line': 73, 'column': 8, 'index': 2104}","  71 |
  72 |     it('pc.AssetReference, remove callback', function (done) {
> 73 |         var reg = new pc.AssetReference('propName', this.parent, this.app.assets, {
     |        ^ Global Variable
  74 |             remove: this.remove
  75 |         });
  76 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Global Variable,"{'line': 77, 'column': 8, 'index': 2233}","  75 |         });
  76 |
> 77 |         var asset = new pc.Asset(""Reference Test"", ""texture"", {
     |        ^ Global Variable
  78 |             url: 'base/tests/test-assets/sprite/red-atlas.png'
  79 |         });
  80 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Sleepy Test,"{'line': 59, 'column': 12, 'index': 1633}","  57 |
  58 |         this.app.assets.once('add', function () {
> 59 |             setTimeout(function () {
     |            ^ Sleepy Test
  60 |                 expect(this.add.callCount).to.equal(1);
  61 |                 expect(this.add.args[0][0]).to.equal('propName');
  62 |                 expect(this.add.args[0][1]).to.equal(this.parent);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/assets/test_asset_reference.js,Sleepy Test,"{'line': 84, 'column': 12, 'index': 2448}","  82 |
  83 |         asset.once('remove', function () {
> 84 |             setTimeout(function () {
     |            ^ Sleepy Test
  85 |                 expect(this.remove.callCount).to.equal(1);
  86 |                 expect(this.remove.args[0][0]).to.equal('propName');
  87 |                 expect(this.remove.args[0][1]).to.equal(this.parent);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Conditional Test Logic,"{'line': 173, 'column': 12, 'index': 5472}","  171 |             var expected = self.expectedTypes[this.type];
  172 |
> 173 |             if (expected.typeof) {
      |            ^ Conditional Test Logic
  174 |                 expect(typeof resource).to.equal(expected.typeof);
  175 |             }
  176 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Conditional Test Logic,"{'line': 177, 'column': 12, 'index': 5589}","  175 |             }
  176 |
> 177 |             if (expected.instanceof) {
      |            ^ Conditional Test Logic
  178 |                 expect(resource instanceof expected.instanceof).to.equal(true);
  179 |             }
  180 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Conditional Test Logic,"{'line': 181, 'column': 12, 'index': 5723}","  179 |             }
  180 |
> 181 |             if (this.type === 'font') {
      |            ^ Conditional Test Logic
  182 |                 expect(resource.textures.length).to.equal(2);
  183 |             }
  184 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Conditional Test Logic,"{'line': 185, 'column': 12, 'index': 5840}","  183 |             }
  184 |
> 185 |             if ((self.assets.length + 1) === loaded) {
      |            ^ Conditional Test Logic
  186 |                 done();
  187 |             }
  188 |         };"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Conditional Test Logic,"{'line': 303, 'column': 16, 'index': 9526}","  301 |                 expect(bundles.length).to.equal(2);
  302 |
> 303 |                 if (bundles[0].name === 'bundle asset 2') {
      |                ^ Conditional Test Logic
  304 |                     return bundles[0];
  305 |                 } else {
  306 |                     return bundles[1];"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Duplicate Assert,"{'line': 200, 'column': 8, 'index': 6268}","  198 |         this.app.assets.add(this.assets[0]);
  199 |
> 200 |         expect(this.assets[0].loading).to.equal(false);
      |        ^ Duplicate Assert
  201 |         this.app.assets.load(this.bundleAsset);
  202 |         expect(this.assets[0].loading).to.equal(true);
  203 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Duplicate Assert,"{'line': 202, 'column': 8, 'index': 6372}","  200 |         expect(this.assets[0].loading).to.equal(false);
  201 |         this.app.assets.load(this.bundleAsset);
> 202 |         expect(this.assets[0].loading).to.equal(true);
      |        ^ Duplicate Assert
  203 |
  204 |         this.assets[0].ready(() => {
  205 |             done();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Duplicate Assert,"{'line': 213, 'column': 8, 'index': 6673}","  211 |         this.app.assets.add(this.assets[0]);
  212 |
> 213 |         expect(this.bundleAsset.loading).to.equal(false);
      |        ^ Duplicate Assert
  214 |         this.app.assets.load(this.assets[0]);
  215 |         expect(this.bundleAsset.loading).to.equal(true);
  216 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Duplicate Assert,"{'line': 215, 'column': 8, 'index': 6777}","  213 |         expect(this.bundleAsset.loading).to.equal(false);
  214 |         this.app.assets.load(this.assets[0]);
> 215 |         expect(this.bundleAsset.loading).to.equal(true);
      |        ^ Duplicate Assert
  216 |
  217 |         this.bundleAsset.ready(() => {
  218 |             done();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Duplicate Assert,"{'line': 226, 'column': 8, 'index': 7082}","  224 |         this.app.assets.add(this.assets[0]);
  225 |
> 226 |         expect(this.bundleAsset.loading).to.equal(false);
      |        ^ Duplicate Assert
  227 |         this.app.assets.load(this.assets[0]);
  228 |         expect(this.bundleAsset.loading).to.equal(true);
  229 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Duplicate Assert,"{'line': 228, 'column': 8, 'index': 7186}","  226 |         expect(this.bundleAsset.loading).to.equal(false);
  227 |         this.app.assets.load(this.assets[0]);
> 228 |         expect(this.bundleAsset.loading).to.equal(true);
      |        ^ Duplicate Assert
  229 |
  230 |         this.bundleAsset.ready(() => {
  231 |             done();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Duplicate Assert,"{'line': 241, 'column': 8, 'index': 7542}","  239 |         let filterCalled = false;
  240 |
> 241 |         expect(this.bundleAsset.loading).to.equal(false);
      |        ^ Duplicate Assert
  242 |         this.app.assets.load(this.assets[0], {
  243 |             bundlesIgnore: true,
  244 |             bundlesFilter: (bundles) => {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Duplicate Assert,"{'line': 249, 'column': 8, 'index': 7831}","  247 |         });
  248 |         expect(filterCalled).to.equal(false);
> 249 |         expect(this.bundleAsset.loading).to.equal(false);
      |        ^ Duplicate Assert
  250 |
  251 |         this.assets[0].ready(() => {
  252 |             done();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Duplicate Assert,"{'line': 270, 'column': 8, 'index': 8467}","  268 |         this.app.assets.add(this.assets[0]);
  269 |
> 270 |         expect(this.bundleAsset.loading).to.equal(false);
      |        ^ Duplicate Assert
  271 |         this.app.assets.load(this.assets[0]);
  272 |         expect(this.bundleAsset.loading).to.equal(true);
  273 |         expect(bundleAsset2.loading).to.equal(false);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Duplicate Assert,"{'line': 272, 'column': 8, 'index': 8571}","  270 |         expect(this.bundleAsset.loading).to.equal(false);
  271 |         this.app.assets.load(this.assets[0]);
> 272 |         expect(this.bundleAsset.loading).to.equal(true);
      |        ^ Duplicate Assert
  273 |         expect(bundleAsset2.loading).to.equal(false);
  274 |
  275 |         this.assets[0].ready(() => {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Duplicate Assert,"{'line': 296, 'column': 8, 'index': 9284}","  294 |         let filterCalled = false;
  295 |
> 296 |         expect(bundleAsset2.loading).to.equal(false);
      |        ^ Duplicate Assert
  297 |
  298 |         this.app.assets.load(this.assets[0], {
  299 |             bundlesFilter: (bundles) => {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Duplicate Assert,"{'line': 311, 'column': 8, 'index': 9770}","  309 |         });
  310 |         expect(filterCalled).to.equal(true);
> 311 |         expect(bundleAsset2.loading).to.equal(true);
      |        ^ Duplicate Assert
  312 |         expect(this.bundleAsset.loading).to.equal(false);
  313 |
  314 |         this.assets[0].ready(() => {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Global Variable,"{'line': 169, 'column': 12, 'index': 5276}","  167 |         const onLoad = function() {
  168 |             loaded++;
> 169 |             var resource = this.type === 'cubemap' ? this.resources[1] : this.resource;
      |            ^ Global Variable
  170 |             expect(resource).to.not.equal(null);
  171 |             var expected = self.expectedTypes[this.type];
  172 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_loader.js,Global Variable,"{'line': 171, 'column': 12, 'index': 5413}","  169 |             var resource = this.type === 'cubemap' ? this.resources[1] : this.resource;
  170 |             expect(resource).to.not.equal(null);
> 171 |             var expected = self.expectedTypes[this.type];
      |            ^ Global Variable
  172 |
  173 |             if (expected.typeof) {
  174 |                 expect(typeof resource).to.equal(expected.typeof);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Conditional Test Logic,"{'line': 10, 'column': 8, 'index': 311}","   8 |     afterEach(function () {
   9 |         var assets = this.assets.list();
> 10 |         for (var i = 0; i < assets.length; i++) {
     |        ^ Conditional Test Logic
  11 |             assets[i].unload();
  12 |             assets[i].off();
  13 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Duplicate Assert,"{'line': 32, 'column': 8, 'index': 1057}","  30 |         this.assets.add(asset);
  31 |         var bundles = this.bundles.list();
> 32 |         expect(bundles).to.deep.equal([asset]);
     |        ^ Duplicate Assert
  33 |
  34 |         this.assets.remove(asset);
  35 |         bundles = this.bundles.list();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Duplicate Assert,"{'line': 36, 'column': 8, 'index': 1180}","  34 |         this.assets.remove(asset);
  35 |         bundles = this.bundles.list();
> 36 |         expect(bundles).to.deep.equal([]);
     |        ^ Duplicate Assert
  37 |     });
  38 |
  39 |     it('listBundlesForAsset() returns null for assets not in bundles', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 9, 'column': 8, 'index': 270}","   7 |
   8 |     afterEach(function () {
>  9 |         var assets = this.assets.list();
     |        ^ Global Variable
  10 |         for (var i = 0; i < assets.length; i++) {
  11 |             assets[i].unload();
  12 |             assets[i].off();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 10, 'column': 13, 'index': 316}","   8 |     afterEach(function () {
   9 |         var assets = this.assets.list();
> 10 |         for (var i = 0; i < assets.length; i++) {
     |             ^ Global Variable
  11 |             assets[i].unload();
  12 |             assets[i].off();
  13 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 22, 'column': 8, 'index': 627}","  20 |
  21 |     it('bundle asset is added to the bundle registry', function () {
> 22 |         var asset = new pc.Asset('bundle', 'bundle', null, { assets: [] });
     |        ^ Global Variable
  23 |         this.assets.add(asset);
  24 |         var assets = this.bundles.list();
  25 |         expect(assets).to.deep.equal([asset]);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 24, 'column': 8, 'index': 735}","  22 |         var asset = new pc.Asset('bundle', 'bundle', null, { assets: [] });
  23 |         this.assets.add(asset);
> 24 |         var assets = this.bundles.list();
     |        ^ Global Variable
  25 |         expect(assets).to.deep.equal([asset]);
  26 |     });
  27 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 29, 'column': 8, 'index': 906}","  27 |
  28 |     it('bundle asset is removed from the bundle registry', function () {
> 29 |         var asset = new pc.Asset('bundle', 'bundle', null, { assets: [] });
     |        ^ Global Variable
  30 |         this.assets.add(asset);
  31 |         var bundles = this.bundles.list();
  32 |         expect(bundles).to.deep.equal([asset]);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 31, 'column': 8, 'index': 1014}","  29 |         var asset = new pc.Asset('bundle', 'bundle', null, { assets: [] });
  30 |         this.assets.add(asset);
> 31 |         var bundles = this.bundles.list();
     |        ^ Global Variable
  32 |         expect(bundles).to.deep.equal([asset]);
  33 |
  34 |         this.assets.remove(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 40, 'column': 8, 'index': 1317}","  38 |
  39 |     it('listBundlesForAsset() returns null for assets not in bundles', function () {
> 40 |         var asset = new pc.Asset('asset', 'text', {
     |        ^ Global Variable
  41 |             url: 'text.txt'
  42 |         });
  43 |         this.assets.add(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 45, 'column': 8, 'index': 1442}","  43 |         this.assets.add(asset);
  44 |
> 45 |         var notInBundle = new pc.Asset('asset', 'text', {
     |        ^ Global Variable
  46 |             url: 'text2.txt'
  47 |         });
  48 |         this.assets.add(notInBundle);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 50, 'column': 8, 'index': 1580}","  48 |         this.assets.add(notInBundle);
  49 |
> 50 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
     |        ^ Global Variable
  51 |             assets: [asset.id]
  52 |         });
  53 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 55, 'column': 8, 'index': 1729}","  53 |         this.assets.add(bundleAsset);
  54 |
> 55 |         var bundles = this.bundles.listBundlesForAsset(notInBundle);
     |        ^ Global Variable
  56 |         expect(bundles).to.equal(null);
  57 |     });
  58 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 60, 'column': 8, 'index': 1946}","  58 |
  59 |     it('listBundlesForAsset() lists bundles for asset if asset added before bundle', function () {
> 60 |         var asset = new pc.Asset('asset', 'text', {
     |        ^ Global Variable
  61 |             url: 'text.txt'
  62 |         });
  63 |         this.assets.add(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 65, 'column': 8, 'index': 2071}","  63 |         this.assets.add(asset);
  64 |
> 65 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
     |        ^ Global Variable
  66 |             assets: [asset.id]
  67 |         });
  68 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 70, 'column': 8, 'index': 2220}","  68 |         this.assets.add(bundleAsset);
  69 |
> 70 |         var bundles = this.bundles.listBundlesForAsset(asset);
     |        ^ Global Variable
  71 |         expect(bundles).to.deep.equal([bundleAsset]);
  72 |     });
  73 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 75, 'column': 8, 'index': 2444}","  73 |
  74 |     it('listBundlesForAsset() lists bundles for asset if asset added after bundle', function () {
> 75 |         var asset = new pc.Asset('asset', 'text', {
     |        ^ Global Variable
  76 |             url: 'text.txt'
  77 |         });
  78 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 79, 'column': 8, 'index': 2537}","  77 |         });
  78 |
> 79 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
     |        ^ Global Variable
  80 |             assets: [asset.id]
  81 |         });
  82 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 86, 'column': 8, 'index': 2719}","  84 |         this.assets.add(asset);
  85 |
> 86 |         var bundles = this.bundles.listBundlesForAsset(asset);
     |        ^ Global Variable
  87 |         expect(bundles).to.deep.equal([bundleAsset]);
  88 |     });
  89 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 91, 'column': 8, 'index': 2928}","  89 |
  90 |     it('listBundlesForAsset() does not return removed bundle asset', function () {
> 91 |         var asset = new pc.Asset('asset', 'text', {
     |        ^ Global Variable
  92 |             url: 'text.txt'
  93 |         });
  94 |         this.assets.add(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 96, 'column': 8, 'index': 3053}","  94 |         this.assets.add(asset);
  95 |
> 96 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
     |        ^ Global Variable
  97 |             assets: [asset.id]
  98 |         });
  99 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 103, 'column': 8, 'index': 3244}","  101 |         this.assets.remove(bundleAsset);
  102 |
> 103 |         var bundles = this.bundles.listBundlesForAsset(asset);
      |        ^ Global Variable
  104 |         expect(bundles).to.equal(null);
  105 |     });
  106 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 108, 'column': 8, 'index': 3443}","  106 |
  107 |     it('listBundlesForAsset() does not return bundle for removed asset', function () {
> 108 |         var asset = new pc.Asset('asset', 'text', {
      |        ^ Global Variable
  109 |             url: 'text.txt'
  110 |         });
  111 |         this.assets.add(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 113, 'column': 8, 'index': 3568}","  111 |         this.assets.add(asset);
  112 |
> 113 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
      |        ^ Global Variable
  114 |             assets: [asset.id]
  115 |         });
  116 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 120, 'column': 8, 'index': 3753}","  118 |         this.assets.remove(asset);
  119 |
> 120 |         var bundles = this.bundles.listBundlesForAsset(asset);
      |        ^ Global Variable
  121 |         expect(bundles).to.equal(null);
  122 |     });
  123 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 125, 'column': 8, 'index': 3929}","  123 |
  124 |     it('hasUrl() returns true for url in bundle', function () {
> 125 |         var asset = new pc.Asset('asset', 'text', {
      |        ^ Global Variable
  126 |             url: 'text.txt'
  127 |         });
  128 |         this.assets.add(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 130, 'column': 8, 'index': 4054}","  128 |         this.assets.add(asset);
  129 |
> 130 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
      |        ^ Global Variable
  131 |             assets: [asset.id]
  132 |         });
  133 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 143, 'column': 8, 'index': 4508}","  141 |
  142 |     it('hasUrl() returns true for url with query parameters in bundle', function () {
> 143 |         var asset = new pc.Asset('asset', 'text', {
      |        ^ Global Variable
  144 |             url: 'text.txt?query=true&query2=true'
  145 |         });
  146 |         this.assets.add(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 148, 'column': 8, 'index': 4656}","  146 |         this.assets.add(asset);
  147 |
> 148 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
      |        ^ Global Variable
  149 |             assets: [asset.id]
  150 |         });
  151 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 157, 'column': 8, 'index': 4948}","  155 |
  156 |     it('hasUrl() returns true for all font asset urls', function () {
> 157 |         var asset = new pc.Asset('asset', 'font', {
      |        ^ Global Variable
  158 |             url: 'test.png'
  159 |         }, {
  160 |             info: {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 170, 'column': 8, 'index': 5273}","  168 |         this.assets.add(asset);
  169 |
> 170 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
      |        ^ Global Variable
  171 |             assets: [asset.id]
  172 |         });
  173 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 180, 'column': 8, 'index': 5630}","  178 |
  179 |     it('hasUrl() returns false after asset is removed', function () {
> 180 |         var asset = new pc.Asset('asset', 'text', {
      |        ^ Global Variable
  181 |             url: 'text.txt'
  182 |         });
  183 |         this.assets.add(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 185, 'column': 8, 'index': 5755}","  183 |         this.assets.add(asset);
  184 |
> 185 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
      |        ^ Global Variable
  186 |             assets: [asset.id]
  187 |         });
  188 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 196, 'column': 8, 'index': 6096}","  194 |
  195 |     it('urlIsLoadedOrLoading() returns false if bundle not loaded', function () {
> 196 |         var asset = new pc.Asset('asset', 'text', {
      |        ^ Global Variable
  197 |             url: 'text.txt'
  198 |         });
  199 |         this.assets.add(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 201, 'column': 8, 'index': 6221}","  199 |         this.assets.add(asset);
  200 |
> 201 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
      |        ^ Global Variable
  202 |             assets: [asset.id]
  203 |         });
  204 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 210, 'column': 8, 'index': 6555}","  208 |
  209 |     it('urlIsLoadedOrLoading() returns false if bundle loaded without a resource', function () {
> 210 |         var asset = new pc.Asset('asset', 'text', {
      |        ^ Global Variable
  211 |             url: 'text.txt'
  212 |         });
  213 |         this.assets.add(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 215, 'column': 8, 'index': 6680}","  213 |         this.assets.add(asset);
  214 |
> 215 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
      |        ^ Global Variable
  216 |             assets: [asset.id]
  217 |         });
  218 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 225, 'column': 8, 'index': 7029}","  223 |
  224 |     it('urlIsLoadedOrLoading() returns true if bundle loaded', function () {
> 225 |         var asset = new pc.Asset('asset', 'text', {
      |        ^ Global Variable
  226 |             url: 'text.txt'
  227 |         });
  228 |         this.assets.add(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 230, 'column': 8, 'index': 7154}","  228 |         this.assets.add(asset);
  229 |
> 230 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
      |        ^ Global Variable
  231 |             assets: [asset.id]
  232 |         });
  233 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 242, 'column': 8, 'index': 7554}","  240 |
  241 |     it('urlIsLoadedOrLoading() returns true if bundle being loaded', function () {
> 242 |         var asset = new pc.Asset('asset', 'text', {
      |        ^ Global Variable
  243 |             url: 'text.txt'
  244 |         });
  245 |         this.assets.add(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 247, 'column': 8, 'index': 7679}","  245 |         this.assets.add(asset);
  246 |
> 247 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
      |        ^ Global Variable
  248 |             assets: [asset.id]
  249 |         });
  250 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 257, 'column': 8, 'index': 8039}","  255 |
  256 |     it('loadUrl() calls callback with error if bundle fails to load', function (done) {
> 257 |         var asset = new pc.Asset('asset', 'text', {
      |        ^ Global Variable
  258 |             url: 'text.txt'
  259 |         });
  260 |         this.assets.add(asset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Global Variable,"{'line': 262, 'column': 8, 'index': 8164}","  260 |         this.assets.add(asset);
  261 |
> 262 |         var bundleAsset = new pc.Asset('bundle', 'bundle', null, {
      |        ^ Global Variable
  263 |             assets: [asset.id]
  264 |         });
  265 |         this.assets.add(bundleAsset);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/bundles/test_bundle_registry.js,Sleepy Test,"{'line': 273, 'column': 8, 'index': 8492}","  271 |         });
  272 |
> 273 |         setTimeout(function () {
      |        ^ Sleepy Test
  274 |             bundleAsset.loading = false;
  275 |             bundleAsset.loaded = true;
  276 |             this.assets.fire('error:' + bundleAsset.id, 'error');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_animationcomponent.js,Conditional Test Logic,"{'line': 22, 'column': 12, 'index': 571}","  20 |         app.assets.on('load', function (asset) {
  21 |             count++;
> 22 |             if (count === list.length) {
     |            ^ Conditional Test Logic
  23 |                 cb();
  24 |             }
  25 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_animationcomponent.js,Conditional Test Logic,"{'line': 28, 'column': 8, 'index': 688}","  26 |
  27 |         // add and load assets
> 28 |         for (var i = 0; i < list.length; i++) {
     |        ^ Conditional Test Logic
  29 |             app.assets.add(list[i]);
  30 |             app.assets.load(list[i]);
  31 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_animationcomponent.js,Global Variable,"{'line': 2, 'column': 4, 'index': 52}","  1 | describe(""pc.AnimationComponent"", function () {
> 2 |     var app;
    |    ^ Global Variable
  3 |     var assets = {};
  4 |
  5 |     beforeEach(function (done) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_animationcomponent.js,Global Variable,"{'line': 3, 'column': 4, 'index': 65}","  1 | describe(""pc.AnimationComponent"", function () {
  2 |     var app;
> 3 |     var assets = {};
    |    ^ Global Variable
  4 |
  5 |     beforeEach(function (done) {
  6 |         app = new pc.Application(document.createElement(""canvas""));"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_animationcomponent.js,Global Variable,"{'line': 17, 'column': 4, 'index': 343}","  15 |     });
  16 |
> 17 |     var loadAssetList = function (list, cb) {
     |    ^ Global Variable
  18 |         // listen for asset load events and fire cb() when all assets are loaded
  19 |         var count = 0;
  20 |         app.assets.on('load', function (asset) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_animationcomponent.js,Global Variable,"{'line': 19, 'column': 8, 'index': 474}","  17 |     var loadAssetList = function (list, cb) {
  18 |         // listen for asset load events and fire cb() when all assets are loaded
> 19 |         var count = 0;
     |        ^ Global Variable
  20 |         app.assets.on('load', function (asset) {
  21 |             count++;
  22 |             if (count === list.length) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_animationcomponent.js,Global Variable,"{'line': 28, 'column': 13, 'index': 693}","  26 |
  27 |         // add and load assets
> 28 |         for (var i = 0; i < list.length; i++) {
     |             ^ Global Variable
  29 |             app.assets.add(list[i]);
  30 |             app.assets.load(list[i]);
  31 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_animationcomponent.js,Global Variable,"{'line': 34, 'column': 4, 'index': 825}","  32 |     };
  33 |
> 34 |     var loadAssets = function (cb) {
     |    ^ Global Variable
  35 |         var assetlist = [
  36 |             new pc.Asset('playbot.json', 'model', {
  37 |                 url: 'base/examples/assets/models/playbot/playbot.json'"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_animationcomponent.js,Global Variable,"{'line': 35, 'column': 8, 'index': 866}","  33 |
  34 |     var loadAssets = function (cb) {
> 35 |         var assetlist = [
     |        ^ Global Variable
  36 |             new pc.Asset('playbot.json', 'model', {
  37 |                 url: 'base/examples/assets/models/playbot/playbot.json'
  38 |             }),"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_animationcomponent.js,Global Variable,"{'line': 52, 'column': 8, 'index': 1427}","  50 |
  51 |     it(""can create animation component"", function () {
> 52 |         var entity = new pc.Entity();
     |        ^ Global Variable
  53 |
  54 |         entity.addComponent(""model"", {
  55 |             asset: assets.model"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_animationcomponent.js,Global Variable,"{'line': 66, 'column': 8, 'index': 1758}","  64 |
  65 |     it(""can create animation and auto play them"", function () {
> 66 |         var entity = new pc.Entity();
     |        ^ Global Variable
  67 |
  68 |         entity.addComponent(""model"", {
  69 |             asset: assets.model"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_async_animationcomponent.js,Conditional Test Logic,"{'line': 22, 'column': 12, 'index': 622}","  20 |         app.assets.on('load', function (asset) {
  21 |             count++;
> 22 |             if (count === list.length) {
     |            ^ Conditional Test Logic
  23 |                 cb();
  24 |             }
  25 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_async_animationcomponent.js,Conditional Test Logic,"{'line': 28, 'column': 8, 'index': 739}","  26 |
  27 |         // add and load assets
> 28 |         for (var i = 0; i < list.length; i++) {
     |        ^ Conditional Test Logic
  29 |             app.assets.add(list[i]);
  30 |             app.assets.load(list[i]);
  31 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_async_animationcomponent.js,Global Variable,"{'line': 2, 'column': 4, 'index': 58}","  1 | describe(""async pc.AnimationComponent"", function () {
> 2 |     var app;
    |    ^ Global Variable
  3 |     var assets = {};
  4 |     var assetlist;
  5 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_async_animationcomponent.js,Global Variable,"{'line': 3, 'column': 4, 'index': 71}","  1 | describe(""async pc.AnimationComponent"", function () {
  2 |     var app;
> 3 |     var assets = {};
    |    ^ Global Variable
  4 |     var assetlist;
  5 |
  6 |     beforeEach(function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_async_animationcomponent.js,Global Variable,"{'line': 4, 'column': 4, 'index': 92}","  2 |     var app;
  3 |     var assets = {};
> 4 |     var assetlist;
    |    ^ Global Variable
  5 |
  6 |     beforeEach(function () {
  7 |         this.timeout(4000); // Double the default 2000ms timeout which often fails on CirclCI"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_async_animationcomponent.js,Global Variable,"{'line': 17, 'column': 4, 'index': 394}","  15 |     });
  16 |
> 17 |     var loadAssetList = function (list, cb) {
     |    ^ Global Variable
  18 |         // listen for asset load events and fire cb() when all assets are loaded
  19 |         var count = 0;
  20 |         app.assets.on('load', function (asset) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_async_animationcomponent.js,Global Variable,"{'line': 19, 'column': 8, 'index': 525}","  17 |     var loadAssetList = function (list, cb) {
  18 |         // listen for asset load events and fire cb() when all assets are loaded
> 19 |         var count = 0;
     |        ^ Global Variable
  20 |         app.assets.on('load', function (asset) {
  21 |             count++;
  22 |             if (count === list.length) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_async_animationcomponent.js,Global Variable,"{'line': 28, 'column': 13, 'index': 744}","  26 |
  27 |         // add and load assets
> 28 |         for (var i = 0; i < list.length; i++) {
     |             ^ Global Variable
  29 |             app.assets.add(list[i]);
  30 |             app.assets.load(list[i]);
  31 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_async_animationcomponent.js,Global Variable,"{'line': 34, 'column': 4, 'index': 876}","  32 |     };
  33 |
> 34 |     var loadAssets = function (cb) {
     |    ^ Global Variable
  35 |         assetlist = [
  36 |             new pc.Asset('playbot.json', 'model', {
  37 |                 url: 'base/examples/assets/models/playbot/playbot.json'"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_async_animationcomponent.js,Global Variable,"{'line': 52, 'column': 8, 'index': 1501}","  50 |
  51 |     it(""async assets, can create animation and auto play them"", function (done) {
> 52 |         var entity = new pc.Entity();
     |        ^ Global Variable
  53 |
  54 |         loadAssets(function () {
  55 |             // is currAnim public API?"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_async_animationcomponent.js,Global Variable,"{'line': 75, 'column': 8, 'index': 2060}","  73 |
  74 |     it(""async assets, clone of animation component loads animations"", function (done) {
> 75 |         var entity = new pc.Entity();
     |        ^ Global Variable
  76 |
  77 |         loadAssets(function () {
  78 |             // is currAnim public API?"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/animation/test_async_animationcomponent.js,Global Variable,"{'line': 96, 'column': 8, 'index': 2596}","  94 |         app.root.addChild(entity);
  95 |
> 96 |         var clone = entity.clone();
     |        ^ Global Variable
  97 |         app.root.addChild(clone);
  98 |     });
  99 | });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 11, 'column': 8, 'index': 271}","   9 |
  10 |     it(""basic hierarchy"", function () {
> 11 |         var screen = new pc.Entity('screen');
     |        ^ Global Variable
  12 |         screen.addComponent('screen');
  13 |
  14 |         var p1 = new pc.Entity('p1');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 14, 'column': 8, 'index': 357}","  12 |         screen.addComponent('screen');
  13 |
> 14 |         var p1 = new pc.Entity('p1');
     |        ^ Global Variable
  15 |         p1.addComponent('element', {
  16 |         });
  17 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 18, 'column': 8, 'index': 445}","  16 |         });
  17 |
> 18 |         var c1 = new pc.Entity('c1');
     |        ^ Global Variable
  19 |         c1.addComponent('element', {
  20 |
  21 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 35, 'column': 8, 'index': 848}","  33 |
  34 |     it(""clamp max drawOrder"", function () {
> 35 |         var p1 = new pc.Entity('p1');
     |        ^ Global Variable
  36 |         p1.addComponent('element');
  37 |         p1.element.drawOrder = 0x1FFFFFF;
  38 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 43, 'column': 8, 'index': 1072}","  41 |
  42 |     it(""reorder children"", function () {
> 43 |         var screen = new pc.Entity('screen');
     |        ^ Global Variable
  44 |         screen.addComponent('screen');
  45 |
  46 |         var p1 = new pc.Entity('p1');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 46, 'column': 8, 'index': 1158}","  44 |         screen.addComponent('screen');
  45 |
> 46 |         var p1 = new pc.Entity('p1');
     |        ^ Global Variable
  47 |         p1.addComponent('element', {
  48 |         });
  49 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 50, 'column': 8, 'index': 1246}","  48 |         });
  49 |
> 50 |         var c1 = new pc.Entity('c1');
     |        ^ Global Variable
  51 |         c1.addComponent('element', {
  52 |
  53 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 55, 'column': 8, 'index': 1335}","  53 |         });
  54 |
> 55 |         var c2 = new pc.Entity('c2');
     |        ^ Global Variable
  56 |         c2.addComponent('element', {
  57 |
  58 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 77, 'column': 8, 'index': 1846}","  75 |
  76 |     it('add screen late', function () {
> 77 |         var screen = new pc.Entity('screen');
     |        ^ Global Variable
  78 |
  79 |         var p1 = new pc.Entity('p1');
  80 |         p1.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 79, 'column': 8, 'index': 1893}","  77 |         var screen = new pc.Entity('screen');
  78 |
> 79 |         var p1 = new pc.Entity('p1');
     |        ^ Global Variable
  80 |         p1.addComponent('element', {
  81 |         });
  82 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 83, 'column': 8, 'index': 1981}","  81 |         });
  82 |
> 83 |         var c1 = new pc.Entity('c1');
     |        ^ Global Variable
  84 |         c1.addComponent('element', {
  85 |
  86 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 102, 'column': 8, 'index': 2424}","  100 |
  101 |     it('reparent to screen', function () {
> 102 |         var screen = new pc.Entity('screen');
      |        ^ Global Variable
  103 |         screen.addComponent('screen');
  104 |
  105 |         var p1 = new pc.Entity('p1');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 105, 'column': 8, 'index': 2510}","  103 |         screen.addComponent('screen');
  104 |
> 105 |         var p1 = new pc.Entity('p1');
      |        ^ Global Variable
  106 |         p1.addComponent('element', {
  107 |         });
  108 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 109, 'column': 8, 'index': 2598}","  107 |         });
  108 |
> 109 |         var c1 = new pc.Entity('c1');
      |        ^ Global Variable
  110 |         c1.addComponent('element', {
  111 |
  112 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 129, 'column': 8, 'index': 3057}","  127 |
  128 |     it('single call to _processDrawOrderSync', function () {
> 129 |         var count = 0;
      |        ^ Global Variable
  130 |         // patch to count
  131 |         var _processDrawOrderSync = pc.ScreenComponent.prototype._processDrawOrderSync;
  132 |         pc.ScreenComponent.prototype._processDrawOrderSync = function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 131, 'column': 8, 'index': 3106}","  129 |         var count = 0;
  130 |         // patch to count
> 131 |         var _processDrawOrderSync = pc.ScreenComponent.prototype._processDrawOrderSync;
      |        ^ Global Variable
  132 |         pc.ScreenComponent.prototype._processDrawOrderSync = function () {
  133 |             count++;
  134 |             _processDrawOrderSync.apply(this, arguments);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 137, 'column': 8, 'index': 3360}","  135 |         };
  136 |
> 137 |         var screen = new pc.Entity('screen');
      |        ^ Global Variable
  138 |         screen.addComponent('screen');
  139 |
  140 |         var p1 = new pc.Entity('p1');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 140, 'column': 8, 'index': 3446}","  138 |         screen.addComponent('screen');
  139 |
> 140 |         var p1 = new pc.Entity('p1');
      |        ^ Global Variable
  141 |         p1.addComponent('element', {
  142 |         });
  143 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 144, 'column': 8, 'index': 3534}","  142 |         });
  143 |
> 144 |         var c1 = new pc.Entity('c1');
      |        ^ Global Variable
  145 |         c1.addComponent('element', {
  146 |
  147 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 163, 'column': 8, 'index': 3983}","  161 |
  162 |     it(""Unmask drawOrder"", function () {
> 163 |         var screen = new pc.Entity('screen');
      |        ^ Global Variable
  164 |         screen.addComponent('screen');
  165 |
  166 |         var m1 = new pc.Entity('m1');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 166, 'column': 8, 'index': 4069}","  164 |         screen.addComponent('screen');
  165 |
> 166 |         var m1 = new pc.Entity('m1');
      |        ^ Global Variable
  167 |         m1.addComponent('element', {
  168 |             type: ""image"",
  169 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 172, 'column': 8, 'index': 4207}","  170 |         });
  171 |
> 172 |         var m2 = new pc.Entity('m2');
      |        ^ Global Variable
  173 |         m2.addComponent('element', {
  174 |             type: ""image"",
  175 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 178, 'column': 8, 'index': 4345}","  176 |         });
  177 |
> 178 |         var m3 = new pc.Entity('m3');
      |        ^ Global Variable
  179 |         m3.addComponent('element', {
  180 |             type: ""image"",
  181 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 184, 'column': 8, 'index': 4483}","  182 |         });
  183 |
> 184 |         var c1 = new pc.Entity('c1');
      |        ^ Global Variable
  185 |         c1.addComponent('element', {
  186 |             type: ""image""
  187 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 198, 'column': 8, 'index': 4809}","  196 |         this.app.tick();
  197 |
> 198 |         var m1DrawOrder = m1.element.drawOrder;
      |        ^ Global Variable
  199 |         var m2DrawOrder = m2.element.drawOrder;
  200 |         var m3DrawOrder = m3.element.drawOrder;
  201 |         var c1DrawOrder = c1.element.drawOrder;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 199, 'column': 8, 'index': 4857}","  197 |
  198 |         var m1DrawOrder = m1.element.drawOrder;
> 199 |         var m2DrawOrder = m2.element.drawOrder;
      |        ^ Global Variable
  200 |         var m3DrawOrder = m3.element.drawOrder;
  201 |         var c1DrawOrder = c1.element.drawOrder;
  202 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 200, 'column': 8, 'index': 4905}","  198 |         var m1DrawOrder = m1.element.drawOrder;
  199 |         var m2DrawOrder = m2.element.drawOrder;
> 200 |         var m3DrawOrder = m3.element.drawOrder;
      |        ^ Global Variable
  201 |         var c1DrawOrder = c1.element.drawOrder;
  202 |
  203 |         var m1Unmask = m1.element._image._renderable.unmaskMeshInstance.drawOrder;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 201, 'column': 8, 'index': 4953}","  199 |         var m2DrawOrder = m2.element.drawOrder;
  200 |         var m3DrawOrder = m3.element.drawOrder;
> 201 |         var c1DrawOrder = c1.element.drawOrder;
      |        ^ Global Variable
  202 |
  203 |         var m1Unmask = m1.element._image._renderable.unmaskMeshInstance.drawOrder;
  204 |         var m2Unmask = m2.element._image._renderable.unmaskMeshInstance.drawOrder;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 203, 'column': 8, 'index': 5002}","  201 |         var c1DrawOrder = c1.element.drawOrder;
  202 |
> 203 |         var m1Unmask = m1.element._image._renderable.unmaskMeshInstance.drawOrder;
      |        ^ Global Variable
  204 |         var m2Unmask = m2.element._image._renderable.unmaskMeshInstance.drawOrder;
  205 |         var m3Unmask = m3.element._image._renderable.unmaskMeshInstance.drawOrder;
  206 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 204, 'column': 8, 'index': 5085}","  202 |
  203 |         var m1Unmask = m1.element._image._renderable.unmaskMeshInstance.drawOrder;
> 204 |         var m2Unmask = m2.element._image._renderable.unmaskMeshInstance.drawOrder;
      |        ^ Global Variable
  205 |         var m3Unmask = m3.element._image._renderable.unmaskMeshInstance.drawOrder;
  206 |
  207 |         expect(m1Unmask > m1DrawOrder).to.equal(true, ""unmask for m1 drawn after m1"");"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 205, 'column': 8, 'index': 5168}","  203 |         var m1Unmask = m1.element._image._renderable.unmaskMeshInstance.drawOrder;
  204 |         var m2Unmask = m2.element._image._renderable.unmaskMeshInstance.drawOrder;
> 205 |         var m3Unmask = m3.element._image._renderable.unmaskMeshInstance.drawOrder;
      |        ^ Global Variable
  206 |
  207 |         expect(m1Unmask > m1DrawOrder).to.equal(true, ""unmask for m1 drawn after m1"");
  208 |         expect(m1Unmask > m2DrawOrder).to.equal(true, ""unmask for m1 drawn after m2"");"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 231, 'column': 8, 'index': 6949}","  229 |
  230 |     it(""Unmask drawOrder - draw order remains the same for repeated calls"", function () {
> 231 |         var screen = new pc.Entity('screen');
      |        ^ Global Variable
  232 |         screen.addComponent('screen');
  233 |
  234 |         var m1 = new pc.Entity('m1');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 234, 'column': 8, 'index': 7035}","  232 |         screen.addComponent('screen');
  233 |
> 234 |         var m1 = new pc.Entity('m1');
      |        ^ Global Variable
  235 |         m1.addComponent('element', {
  236 |             type: ""image"",
  237 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 240, 'column': 8, 'index': 7173}","  238 |         });
  239 |
> 240 |         var m2 = new pc.Entity('m2');
      |        ^ Global Variable
  241 |         m2.addComponent('element', {
  242 |             type: ""image"",
  243 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 246, 'column': 8, 'index': 7311}","  244 |         });
  245 |
> 246 |         var m3 = new pc.Entity('m3');
      |        ^ Global Variable
  247 |         m3.addComponent('element', {
  248 |             type: ""image"",
  249 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 252, 'column': 8, 'index': 7449}","  250 |         });
  251 |
> 252 |         var c1 = new pc.Entity('c1');
      |        ^ Global Variable
  253 |         c1.addComponent('element', {
  254 |             type: ""image""
  255 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 266, 'column': 8, 'index': 7776}","  264 |         this.app.tick();
  265 |
> 266 |         var addChild = function (parent) {
      |        ^ Global Variable
  267 |             var e = new pc.Entity();
  268 |             e.addComponent(""element"", {
  269 |                 type: ""image"","
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 267, 'column': 12, 'index': 7823}","  265 |
  266 |         var addChild = function (parent) {
> 267 |             var e = new pc.Entity();
      |            ^ Global Variable
  268 |             e.addComponent(""element"", {
  269 |                 type: ""image"",
  270 |                 mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 276, 'column': 8, 'index': 8036}","  274 |         };
  275 |
> 276 |         var beforeResult = {
      |        ^ Global Variable
  277 |             m1DrawOrder: m1.element.drawOrder,
  278 |             m2DrawOrder: m2.element.drawOrder,
  279 |             m3DrawOrder: m3.element.drawOrder,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 286, 'column': 8, 'index': 8510}","  284 |         };
  285 |
> 286 |         var e = addChild(m1);
      |        ^ Global Variable
  287 |         this.app.tick();
  288 |         e.destroy();
  289 |         this.app.tick();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_draworder.js,Global Variable,"{'line': 291, 'column': 8, 'index': 8612}","  289 |         this.app.tick();
  290 |
> 291 |         var afterResult = {
      |        ^ Global Variable
  292 |             m1DrawOrder: m1.element.drawOrder,
  293 |             m2DrawOrder: m2.element.drawOrder,
  294 |             m3DrawOrder: m3.element.drawOrder,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Conditional Test Logic,"{'line': 15, 'column': 8, 'index': 380}","  13 |     beforeEach(function () {
  14 |         // Simulate the browser being touch capable, so that we can test touch-based dragging
> 15 |         if (!('ontouchstart' in window)) {
     |        ^ Conditional Test Logic
  16 |             window.ontouchstart = {};
  17 |             stubbedOntouchstart = true;
  18 |             pc.platform.touch = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Conditional Test Logic,"{'line': 82, 'column': 8, 'index': 2265}","  80 |         app.destroy();
  81 |
> 82 |         if (stubbedOntouchstart) {
     |        ^ Conditional Test Logic
  83 |             delete window.ontouchstart;
  84 |             pc.platform.touch = false;
  85 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 2, 'column': 4, 'index': 50}","  1 | describe(""pc.ElementDragHelper"", function() {
> 2 |     var stubbedOntouchstart;
    |    ^ Global Variable
  3 |     var app;
  4 |     var entity;
  5 |     var element;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 3, 'column': 4, 'index': 79}","  1 | describe(""pc.ElementDragHelper"", function() {
  2 |     var stubbedOntouchstart;
> 3 |     var app;
    |    ^ Global Variable
  4 |     var entity;
  5 |     var element;
  6 |     var dragHelper;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 4, 'column': 4, 'index': 92}","  2 |     var stubbedOntouchstart;
  3 |     var app;
> 4 |     var entity;
    |    ^ Global Variable
  5 |     var element;
  6 |     var dragHelper;
  7 |     var dragStartHandler;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 5, 'column': 4, 'index': 108}","  3 |     var app;
  4 |     var entity;
> 5 |     var element;
    |    ^ Global Variable
  6 |     var dragHelper;
  7 |     var dragStartHandler;
  8 |     var dragEndHandler;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 6, 'column': 4, 'index': 125}","  4 |     var entity;
  5 |     var element;
> 6 |     var dragHelper;
    |    ^ Global Variable
  7 |     var dragStartHandler;
  8 |     var dragEndHandler;
  9 |     var dragMoveHandler;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 7, 'column': 4, 'index': 145}","   5 |     var element;
   6 |     var dragHelper;
>  7 |     var dragStartHandler;
     |    ^ Global Variable
   8 |     var dragEndHandler;
   9 |     var dragMoveHandler;
  10 |     var camera;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 8, 'column': 4, 'index': 171}","   6 |     var dragHelper;
   7 |     var dragStartHandler;
>  8 |     var dragEndHandler;
     |    ^ Global Variable
   9 |     var dragMoveHandler;
  10 |     var camera;
  11 |     var parent;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 9, 'column': 4, 'index': 195}","   7 |     var dragStartHandler;
   8 |     var dragEndHandler;
>  9 |     var dragMoveHandler;
     |    ^ Global Variable
  10 |     var camera;
  11 |     var parent;
  12 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 10, 'column': 4, 'index': 220}","   8 |     var dragEndHandler;
   9 |     var dragMoveHandler;
> 10 |     var camera;
     |    ^ Global Variable
  11 |     var parent;
  12 |
  13 |     beforeEach(function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 11, 'column': 4, 'index': 236}","   9 |     var dragMoveHandler;
  10 |     var camera;
> 11 |     var parent;
     |    ^ Global Variable
  12 |
  13 |     beforeEach(function () {
  14 |         // Simulate the browser being touch capable, so that we can test touch-based dragging"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 21, 'column': 8, 'index': 550}","  19 |         }
  20 |
> 21 |         var canvasWidth = 300;
     |        ^ Global Variable
  22 |         var canvasHeight = 400;
  23 |
  24 |         var canvas = document.createElement(""canvas"");"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 22, 'column': 8, 'index': 581}","  20 |
  21 |         var canvasWidth = 300;
> 22 |         var canvasHeight = 400;
     |        ^ Global Variable
  23 |
  24 |         var canvas = document.createElement(""canvas"");
  25 |         canvas.width = canvasWidth;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 24, 'column': 8, 'index': 614}","  22 |         var canvasHeight = 400;
  23 |
> 24 |         var canvas = document.createElement(""canvas"");
     |        ^ Global Variable
  25 |         canvas.width = canvasWidth;
  26 |         canvas.height = 400;
  27 |         canvas.getBoundingClientRect = function() {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 59, 'column': 8, 'index': 1585}","  57 |         createDragHelper(null);
  58 |
> 59 |         var cameraEntity = new pc.Entity(""camera"", app);
     |        ^ Global Variable
  60 |         cameraEntity.setPosition(new pc.Vec3(0, 0, 100));
  61 |         camera = cameraEntity.addComponent(""camera"", {});
  62 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 68, 'column': 4, 'index': 1879}","  66 |     });
  67 |
> 68 |     var createDragHelper = function(axis) {
     |    ^ Global Variable
  69 |         dragHelper = new pc.ElementDragHelper(element, axis);
  70 |         dragHelper.on(""drag:start"", dragStartHandler);
  71 |         dragHelper.on(""drag:end"", dragEndHandler);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 219, 'column': 4, 'index': 6030}","  217 |     });
  218 |
> 219 |     var defaultXDelta = 4.90;
      |    ^ Global Variable
  220 |     var defaultYDelta = -2.07;
  221 |
  222 |     function runTransformTest(expectedXDelta, expectedYDelta) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 220, 'column': 4, 'index': 6060}","  218 |
  219 |     var defaultXDelta = 4.90;
> 220 |     var defaultYDelta = -2.07;
      |    ^ Global Variable
  221 |
  222 |     function runTransformTest(expectedXDelta, expectedYDelta) {
  223 |         element.fire(""mousedown"", {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 240, 'column': 8, 'index': 6679}","  238 |
  239 |     it(""includes ancestral rotation in coordinate conversion"", function () {
> 240 |         var fourtyFiveDegreesAboutZ = new pc.Quat();
      |        ^ Global Variable
  241 |         fourtyFiveDegreesAboutZ.setFromAxisAngle(new pc.Vec3(0, 0, 1), 45);
  242 |
  243 |         parent.setLocalRotation(fourtyFiveDegreesAboutZ);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 251, 'column': 8, 'index': 7182}","  249 |
  250 |     it(""includes ancestral scale in coordinate conversion"", function () {
> 251 |         var twoXandFourY = new pc.Vec3(2, 4, 1);
      |        ^ Global Variable
  252 |
  253 |         parent.setLocalScale(twoXandFourY);
  254 |         entity.setLocalScale(twoXandFourY);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 260, 'column': 8, 'index': 7479}","  258 |
  259 |     it(""includes camera rotation in coordinate conversion"", function () {
> 260 |         var ninetyDegreesAboutZ = new pc.Quat();
      |        ^ Global Variable
  261 |         ninetyDegreesAboutZ.setFromAxisAngle(new pc.Vec3(0, 0, 1), 90);
  262 |         camera.entity.setLocalRotation(ninetyDegreesAboutZ);
  263 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Global Variable,"{'line': 271, 'column': 8, 'index': 7977}","  269 |         app.root.removeChild(parent);
  270 |
> 271 |         var screen = new pc.Entity(""screen"", app);
      |        ^ Global Variable
  272 |         screen.addComponent(""screen"", { screenSpace: true });
  273 |         screen.addChild(parent);
  274 |         screen.screen.scale = 0.5;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Unknown Test,"{'column': 4, 'line': 185}","  183 |     }
  184 |
> 185 |     it(""fires a drag:end event when dragging ends via touchend and stops firing drag:move events"", function () {
      |    ^ Unknown Test
  186 |         testDragEndViaTouch.call(this, ""touchend"");
  187 |     });
  188 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Unknown Test,"{'column': 4, 'line': 189}","  187 |     });
  188 |
> 189 |     it(""fires a drag:end event when dragging ends via touchcancel and stops firing drag:move events"", function () {
      |    ^ Unknown Test
  190 |         testDragEndViaTouch.call(this, ""touchcancel"");
  191 |     });
  192 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Unknown Test,"{'column': 4, 'line': 239}","  237 |     }
  238 |
> 239 |     it(""includes ancestral rotation in coordinate conversion"", function () {
      |    ^ Unknown Test
  240 |         var fourtyFiveDegreesAboutZ = new pc.Quat();
  241 |         fourtyFiveDegreesAboutZ.setFromAxisAngle(new pc.Vec3(0, 0, 1), 45);
  242 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Unknown Test,"{'column': 4, 'line': 250}","  248 |     });
  249 |
> 250 |     it(""includes ancestral scale in coordinate conversion"", function () {
      |    ^ Unknown Test
  251 |         var twoXandFourY = new pc.Vec3(2, 4, 1);
  252 |
  253 |         parent.setLocalScale(twoXandFourY);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Unknown Test,"{'column': 4, 'line': 259}","  257 |     });
  258 |
> 259 |     it(""includes camera rotation in coordinate conversion"", function () {
      |    ^ Unknown Test
  260 |         var ninetyDegreesAboutZ = new pc.Quat();
  261 |         ninetyDegreesAboutZ.setFromAxisAngle(new pc.Vec3(0, 0, 1), 90);
  262 |         camera.entity.setLocalRotation(ninetyDegreesAboutZ);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Unknown Test,"{'column': 4, 'line': 268}","  266 |     });
  267 |
> 268 |     it(""includes screen scale in coordinate conversion and disables perspective when using screen space"", function () {
      |    ^ Unknown Test
  269 |         app.root.removeChild(parent);
  270 |
  271 |         var screen = new pc.Entity(""screen"", app);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Unknown Test,"{'column': 4, 'line': 282}","  280 |     });
  281 |
> 282 |     it(""allows dragging to be constrained to the X axis"", function () {
      |    ^ Unknown Test
  283 |         dragHelper.destroy();
  284 |         createDragHelper(""x"");
  285 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Unknown Test,"{'column': 4, 'line': 289}","  287 |     });
  288 |
> 289 |     it(""allows dragging to be constrained to the Y axis"", function () {
      |    ^ Unknown Test
  290 |         dragHelper.destroy();
  291 |         createDragHelper(""y"");
  292 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementdraghelper.js,Unknown Test,"{'column': 4, 'line': 296}","  294 |     });
  295 |
> 296 |     it(""takes device pixel ratio into account"", function () {
      |    ^ Unknown Test
  297 |         app.graphicsDevice.maxPixelRatio = 2;
  298 |         runTransformTest.call(this, defaultXDelta * 2, defaultYDelta * 2);
  299 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Duplicate Assert,"{'line': 401, 'column': 8, 'index': 9910}","  399 |         app.update(0.1);
  400 |         app.render();
> 401 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.false;
      |        ^ Duplicate Assert
  402 |
  403 |         // move just into parent
  404 |         e.translateLocal(-2, 0, 0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Duplicate Assert,"{'line': 409, 'column': 8, 'index': 10136}","  407 |         app.update(0.1);
  408 |         app.render();
> 409 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.true;
      |        ^ Duplicate Assert
  410 |
  411 |     });
  412 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Duplicate Assert,"{'line': 450, 'column': 8, 'index': 11200}","  448 |         app.update(0.1);
  449 |         app.render();
> 450 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.false;
      |        ^ Duplicate Assert
  451 |
  452 |         // move just into parent
  453 |         e.translateLocal(-2, 0, 0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Duplicate Assert,"{'line': 458, 'column': 8, 'index': 11426}","  456 |         app.update(0.1);
  457 |         app.render();
> 458 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.true;
      |        ^ Duplicate Assert
  459 |
  460 |     });
  461 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 2, 'column': 4, 'index': 48}","  1 | describe(""pc.Element: Masks"", function () {
> 2 |     var app;
    |    ^ Global Variable
  3 |     var canvas;
  4 |
  5 |     beforeEach(function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 3, 'column': 4, 'index': 61}","  1 | describe(""pc.Element: Masks"", function () {
  2 |     var app;
> 3 |     var canvas;
    |    ^ Global Variable
  4 |
  5 |     beforeEach(function () {
  6 |         canvas = document.createElement(""canvas"")"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 17, 'column': 8, 'index': 352}","  15 |
  16 |     it(""add / remove"", function () {
> 17 |         var e = new pc.Entity();
     |        ^ Global Variable
  18 |         e.addComponent('element', {
  19 |             type: 'image',
  20 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 32, 'column': 8, 'index': 624}","  30 |
  31 |     it(""masked children"", function () {
> 32 |         var m1 = new pc.Entity();
     |        ^ Global Variable
  33 |         m1.addComponent('element', {
  34 |             type: 'image',
  35 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 38, 'column': 8, 'index': 758}","  36 |         });
  37 |
> 38 |         var c1 = new pc.Entity();
     |        ^ Global Variable
  39 |         c1.addComponent('element', {
  40 |             type: 'image',
  41 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 52, 'column': 8, 'index': 1071}","  50 |
  51 |     it(""sub-masked children"", function () {
> 52 |         var m1 = new pc.Entity(""m1"");
     |        ^ Global Variable
  53 |         m1.addComponent('element', {
  54 |             type: 'image',
  55 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 58, 'column': 8, 'index': 1209}","  56 |         });
  57 |
> 58 |         var c1 = new pc.Entity(""c1"");
     |        ^ Global Variable
  59 |         c1.addComponent('element', {
  60 |             type: 'image',
  61 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 64, 'column': 8, 'index': 1347}","  62 |         });
  63 |
> 64 |         var c2 = new pc.Entity(""c2"");
     |        ^ Global Variable
  65 |         c2.addComponent('element', {
  66 |             type: 'image',
  67 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 86, 'column': 8, 'index': 1929}","  84 |         // |    |
  85 |         // c1   c2
> 86 |         var m1 = new pc.Entity(""m1"");
     |        ^ Global Variable
  87 |         m1.addComponent('element', {
  88 |             type: 'image',
  89 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 92, 'column': 8, 'index': 2067}","  90 |         });
  91 |
> 92 |         var m2 = new pc.Entity(""m2"");
     |        ^ Global Variable
  93 |         m2.addComponent('element', {
  94 |             type: 'image',
  95 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 98, 'column': 8, 'index': 2205}","   96 |         });
   97 |
>  98 |         var c1 = new pc.Entity(""c1"");
      |        ^ Global Variable
   99 |         c1.addComponent('element', {
  100 |             type: 'image'
  101 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 103, 'column': 8, 'index': 2319}","  101 |         });
  102 |
> 103 |         var c2 = new pc.Entity(""c2"");
      |        ^ Global Variable
  104 |         c2.addComponent('element', {
  105 |             type: 'image',
  106 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 131, 'column': 8, 'index': 3036}","  129 |         // |  \     |
  130 |         // c31 c32  d31
> 131 |         var top = new pc.Entity(""top"")
      |        ^ Global Variable
  132 |         top.addComponent('element', {
  133 |             type: 'group'
  134 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 136, 'column': 8, 'index': 3152}","  134 |         });
  135 |
> 136 |         var m11 = new pc.Entity(""m11"");
      |        ^ Global Variable
  137 |         m11.addComponent('element', {
  138 |             type: 'image',
  139 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 142, 'column': 8, 'index': 3293}","  140 |         });
  141 |
> 142 |         var m12 = new pc.Entity(""m12"");
      |        ^ Global Variable
  143 |         m12.addComponent('element', {
  144 |             type: 'image',
  145 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 148, 'column': 8, 'index': 3434}","  146 |         });
  147 |
> 148 |         var m21 = new pc.Entity(""m21"");
      |        ^ Global Variable
  149 |         m21.addComponent('element', {
  150 |             type: 'image',
  151 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 154, 'column': 8, 'index': 3575}","  152 |         });
  153 |
> 154 |         var c31 = new pc.Entity(""c31"");
      |        ^ Global Variable
  155 |         c31.addComponent('element', {
  156 |             type: 'image',
  157 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 159, 'column': 8, 'index': 3693}","  157 |         });
  158 |
> 159 |         var c32 = new pc.Entity(""c32"");
      |        ^ Global Variable
  160 |         c32.addComponent('element', {
  161 |             type: 'image',
  162 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 164, 'column': 8, 'index': 3811}","  162 |         });
  163 |
> 164 |         var m22 = new pc.Entity(""m22"");
      |        ^ Global Variable
  165 |         m22.addComponent('element', {
  166 |             type: 'image',
  167 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 170, 'column': 8, 'index': 3952}","  168 |         });
  169 |
> 170 |         var d31 = new pc.Entity(""d31"");
      |        ^ Global Variable
  171 |         d31.addComponent('element', {
  172 |             type: 'image',
  173 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 210, 'column': 8, 'index': 5058}","  208 |
  209 |
> 210 |         var m11 = new pc.Entity(""m11"");
      |        ^ Global Variable
  211 |         m11.addComponent('element', {
  212 |             type: 'image',
  213 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 216, 'column': 8, 'index': 5199}","  214 |         });
  215 |
> 216 |         var m12 = new pc.Entity(""m12"");
      |        ^ Global Variable
  217 |         m12.addComponent('element', {
  218 |             type: 'image',
  219 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 222, 'column': 8, 'index': 5340}","  220 |         });
  221 |
> 222 |         var m21 = new pc.Entity(""m21"");
      |        ^ Global Variable
  223 |         m21.addComponent('element', {
  224 |             type: 'image',
  225 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 228, 'column': 8, 'index': 5481}","  226 |         });
  227 |
> 228 |         var c1 = new pc.Entity(""c1"");
      |        ^ Global Variable
  229 |         c1.addComponent('element', {
  230 |             type: 'image',
  231 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 233, 'column': 8, 'index': 5596}","  231 |         });
  232 |
> 233 |         var m22 = new pc.Entity(""m22"");
      |        ^ Global Variable
  234 |         m22.addComponent('element', {
  235 |             type: 'image',
  236 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 239, 'column': 8, 'index': 5737}","  237 |         });
  238 |
> 239 |         var d1 = new pc.Entity(""d1"");
      |        ^ Global Variable
  240 |         d1.addComponent('element', {
  241 |             type: 'image',
  242 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 273, 'column': 8, 'index': 6670}","  271 |
  272 |
> 273 |         var m1 = new pc.Entity(""m1"");
      |        ^ Global Variable
  274 |         m1.addComponent('element', {
  275 |             type: 'image',
  276 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 279, 'column': 8, 'index': 6808}","  277 |         });
  278 |
> 279 |         var m2 = new pc.Entity(""m2"");
      |        ^ Global Variable
  280 |         m2.addComponent('element', {
  281 |             type: 'image',
  282 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 285, 'column': 8, 'index': 6946}","  283 |         });
  284 |
> 285 |         var c1 = new pc.Entity(""c1"");
      |        ^ Global Variable
  286 |         c1.addComponent('element', {
  287 |             type: 'image',
  288 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 290, 'column': 8, 'index': 7061}","  288 |         });
  289 |
> 290 |         var c2 = new pc.Entity(""c2"");
      |        ^ Global Variable
  291 |         c2.addComponent('element', {
  292 |             type: 'image',
  293 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 319, 'column': 8, 'index': 7767}","  317 |
  318 |
> 319 |         var m1 = new pc.Entity(""m1"");
      |        ^ Global Variable
  320 |         m1.addComponent('element', {
  321 |             type: 'image',
  322 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 325, 'column': 8, 'index': 7905}","  323 |         });
  324 |
> 325 |         var m2 = new pc.Entity(""m2"");
      |        ^ Global Variable
  326 |         m2.addComponent('element', {
  327 |             type: 'image',
  328 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 331, 'column': 8, 'index': 8043}","  329 |         });
  330 |
> 331 |         var m3 = new pc.Entity(""m3"");
      |        ^ Global Variable
  332 |         m3.addComponent('element', {
  333 |             type: 'image',
  334 |             mask: true"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 337, 'column': 8, 'index': 8181}","  335 |         });
  336 |
> 337 |         var c1 = new pc.Entity(""c1"");
      |        ^ Global Variable
  338 |         c1.addComponent('element', {
  339 |             type: 'image',
  340 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 342, 'column': 8, 'index': 8296}","  340 |         });
  341 |
> 342 |         var c2 = new pc.Entity(""c2"");
      |        ^ Global Variable
  343 |         c2.addComponent('element', {
  344 |             type: 'image',
  345 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 365, 'column': 8, 'index': 8995}","  363 |
  364 |     it(""ImageElement outside a mask is culled"", function () {
> 365 |         var screen = new pc.Entity();
      |        ^ Global Variable
  366 |         screen.addComponent('screen', {
  367 |             screenSpace: true
  368 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 371, 'column': 8, 'index': 9151}","  369 |         app.root.addChild(screen);
  370 |
> 371 |         var mask = new pc.Entity();
      |        ^ Global Variable
  372 |         mask.addComponent('element', {
  373 |             type: 'image',
  374 |             width: 100,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 381, 'column': 8, 'index': 9399}","  379 |         screen.addChild(mask);
  380 |
> 381 |         var e = new pc.Entity();
      |        ^ Global Variable
  382 |         e.addComponent('element', {
  383 |             type: 'image',
  384 |             width: 50,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 391, 'column': 8, 'index': 9650}","  389 |         mask.addChild(e);
  390 |
> 391 |         var camera = new pc.Entity();
      |        ^ Global Variable
  392 |         camera.addComponent('camera');
  393 |         app.root.addChild(camera);
  394 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 414, 'column': 8, 'index': 10286}","  412 |
  413 |     it(""TextElement outside a mask is culled"", function () {
> 414 |         var screen = new pc.Entity();
      |        ^ Global Variable
  415 |         screen.addComponent('screen', {
  416 |             screenSpace: true
  417 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 420, 'column': 8, 'index': 10442}","  418 |         app.root.addChild(screen);
  419 |
> 420 |         var mask = new pc.Entity();
      |        ^ Global Variable
  421 |         mask.addComponent('element', {
  422 |             type: 'image',
  423 |             width: 100,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 430, 'column': 8, 'index': 10690}","  428 |         screen.addChild(mask);
  429 |
> 430 |         var e = new pc.Entity();
      |        ^ Global Variable
  431 |         e.addComponent('element', {
  432 |             type: 'text',
  433 |             width: 50,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_elementmasks.js,Global Variable,"{'line': 440, 'column': 8, 'index': 10940}","  438 |         mask.addChild(e);
  439 |
> 440 |         var camera = new pc.Entity();
      |        ^ Global Variable
  441 |         camera.addComponent('camera');
  442 |         app.root.addChild(camera);
  443 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Conditional Test Logic,"{'line': 29, 'column': 12, 'index': 709}","  27 |         app.assets.on('load', function (asset) {
  28 |             count++;
> 29 |             if (count === list.length) {
     |            ^ Conditional Test Logic
  30 |                 cb();
  31 |             }
  32 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Conditional Test Logic,"{'line': 35, 'column': 8, 'index': 826}","  33 |
  34 |         // add and load assets
> 35 |         for (var i = 0; i < list.length; i++) {
     |        ^ Conditional Test Logic
  36 |             app.assets.add(list[i]);
  37 |             app.assets.load(list[i]);
  38 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Conditional Test Logic,"{'line': 107, 'column': 12, 'index': 2936}","  105 |         var _onSpriteAssetLoaded = pc.ImageElement.prototype._onSpriteAssetLoaded;
  106 |         pc.ImageElement.prototype._onSpriteAssetLoaded = function () {
> 107 |             if (destroyed) {
      |            ^ Conditional Test Logic
  108 |                 ok(false, ""_onSpriteAssetLoaded called after Element is destroyed"");
  109 |             } else {
  110 |                 _onSpriteAssetLoaded.apply(this, arguments);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Conditional Test Logic,"{'line': 130, 'column': 12, 'index': 3609}","  128 |         var _onTextureLoad = pc.ImageElement.prototype._onTextureLoad;
  129 |         pc.ImageElement.prototype._onTextureLoad = function () {
> 130 |             if (destroyed) {
      |            ^ Conditional Test Logic
  131 |                 fail(""_onTextureLoad called after Element is destroyed"");
  132 |                 done();
  133 |             } else {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Conditional Test Logic,"{'line': 164, 'column': 12, 'index': 4562}","  162 |         var _onMaterialLoad = pc.ImageElement.prototype._onMaterialLoad;
  163 |         pc.ImageElement.prototype._onMaterialLoad = function () {
> 164 |             if (destroyed) {
      |            ^ Conditional Test Logic
  165 |                 fail(false, ""_onMaterialLoad called after Element is destroyed"");
  166 |                 done();
  167 |             } else {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Conditional Test Logic,"{'line': 990, 'column': 8, 'index': 32141}","  988 |         });
  989 |
> 990 |         if (spriteAsset.resource) {
      |        ^ Conditional Test Logic
  991 |             fail(""spriteAsset should not be loaded at this stage"");
  992 |         }
  993 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 192, 'column': 8, 'index': 5336}","  190 |
  191 |     it('Texture asset unbound on destroy', function () {
> 192 |         expect(assets.texture.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  193 |         expect(assets.texture.hasEvent('load')).to.be.false;
  194 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  195 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 193, 'column': 8, 'index': 5399}","  191 |     it('Texture asset unbound on destroy', function () {
  192 |         expect(assets.texture.hasEvent('change')).to.be.false;
> 193 |         expect(assets.texture.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  194 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  195 |
  196 |         var e = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 194, 'column': 8, 'index': 5460}","  192 |         expect(assets.texture.hasEvent('change')).to.be.false;
  193 |         expect(assets.texture.hasEvent('load')).to.be.false;
> 194 |         expect(assets.texture.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  195 |
  196 |         var e = new pc.Entity();
  197 |         e.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 203, 'column': 8, 'index': 5704}","  201 |         app.root.addChild(e);
  202 |
> 203 |         expect(assets.texture.hasEvent('change')).to.be.true;
      |        ^ Duplicate Assert
  204 |         expect(assets.texture.hasEvent('load')).to.be.true;
  205 |         expect(assets.texture.hasEvent('remove')).to.be.true;
  206 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 204, 'column': 8, 'index': 5766}","  202 |
  203 |         expect(assets.texture.hasEvent('change')).to.be.true;
> 204 |         expect(assets.texture.hasEvent('load')).to.be.true;
      |        ^ Duplicate Assert
  205 |         expect(assets.texture.hasEvent('remove')).to.be.true;
  206 |
  207 |         e.destroy();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 205, 'column': 8, 'index': 5826}","  203 |         expect(assets.texture.hasEvent('change')).to.be.true;
  204 |         expect(assets.texture.hasEvent('load')).to.be.true;
> 205 |         expect(assets.texture.hasEvent('remove')).to.be.true;
      |        ^ Duplicate Assert
  206 |
  207 |         e.destroy();
  208 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 209, 'column': 8, 'index': 5911}","  207 |         e.destroy();
  208 |
> 209 |         expect(assets.texture.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  210 |         expect(assets.texture.hasEvent('load')).to.be.false;
  211 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  212 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 210, 'column': 8, 'index': 5974}","  208 |
  209 |         expect(assets.texture.hasEvent('change')).to.be.false;
> 210 |         expect(assets.texture.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  211 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  212 |     });
  213 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 211, 'column': 8, 'index': 6035}","  209 |         expect(assets.texture.hasEvent('change')).to.be.false;
  210 |         expect(assets.texture.hasEvent('load')).to.be.false;
> 211 |         expect(assets.texture.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  212 |     });
  213 |
  214 |     it('Texture asset unbound on reset', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 215, 'column': 8, 'index': 6162}","  213 |
  214 |     it('Texture asset unbound on reset', function () {
> 215 |         expect(assets.texture.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  216 |         expect(assets.texture.hasEvent('load')).to.be.false;
  217 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  218 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 216, 'column': 8, 'index': 6225}","  214 |     it('Texture asset unbound on reset', function () {
  215 |         expect(assets.texture.hasEvent('change')).to.be.false;
> 216 |         expect(assets.texture.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  217 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  218 |
  219 |         var e = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 217, 'column': 8, 'index': 6286}","  215 |         expect(assets.texture.hasEvent('change')).to.be.false;
  216 |         expect(assets.texture.hasEvent('load')).to.be.false;
> 217 |         expect(assets.texture.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  218 |
  219 |         var e = new pc.Entity();
  220 |         e.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 226, 'column': 8, 'index': 6530}","  224 |         app.root.addChild(e);
  225 |
> 226 |         expect(assets.texture.hasEvent('change')).to.be.true;
      |        ^ Duplicate Assert
  227 |         expect(assets.texture.hasEvent('load')).to.be.true;
  228 |         expect(assets.texture.hasEvent('remove')).to.be.true;
  229 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 227, 'column': 8, 'index': 6592}","  225 |
  226 |         expect(assets.texture.hasEvent('change')).to.be.true;
> 227 |         expect(assets.texture.hasEvent('load')).to.be.true;
      |        ^ Duplicate Assert
  228 |         expect(assets.texture.hasEvent('remove')).to.be.true;
  229 |
  230 |         e.element.textureAsset = null;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 228, 'column': 8, 'index': 6652}","  226 |         expect(assets.texture.hasEvent('change')).to.be.true;
  227 |         expect(assets.texture.hasEvent('load')).to.be.true;
> 228 |         expect(assets.texture.hasEvent('remove')).to.be.true;
      |        ^ Duplicate Assert
  229 |
  230 |         e.element.textureAsset = null;
  231 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 232, 'column': 8, 'index': 6755}","  230 |         e.element.textureAsset = null;
  231 |
> 232 |         expect(assets.texture.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  233 |         expect(assets.texture.hasEvent('load')).to.be.false;
  234 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  235 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 233, 'column': 8, 'index': 6818}","  231 |
  232 |         expect(assets.texture.hasEvent('change')).to.be.false;
> 233 |         expect(assets.texture.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  234 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  235 |     });
  236 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 234, 'column': 8, 'index': 6879}","  232 |         expect(assets.texture.hasEvent('change')).to.be.false;
  233 |         expect(assets.texture.hasEvent('load')).to.be.false;
> 234 |         expect(assets.texture.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  235 |     });
  236 |
  237 |     it('Texture asset unbound when sprite assigned', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 238, 'column': 8, 'index': 7018}","  236 |
  237 |     it('Texture asset unbound when sprite assigned', function () {
> 238 |         expect(assets.texture.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  239 |         expect(assets.texture.hasEvent('load')).to.be.false;
  240 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  241 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 239, 'column': 8, 'index': 7081}","  237 |     it('Texture asset unbound when sprite assigned', function () {
  238 |         expect(assets.texture.hasEvent('change')).to.be.false;
> 239 |         expect(assets.texture.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  240 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  241 |
  242 |         var e = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 240, 'column': 8, 'index': 7142}","  238 |         expect(assets.texture.hasEvent('change')).to.be.false;
  239 |         expect(assets.texture.hasEvent('load')).to.be.false;
> 240 |         expect(assets.texture.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  241 |
  242 |         var e = new pc.Entity();
  243 |         e.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 249, 'column': 8, 'index': 7386}","  247 |         app.root.addChild(e);
  248 |
> 249 |         expect(assets.texture.hasEvent('change')).to.be.true;
      |        ^ Duplicate Assert
  250 |         expect(assets.texture.hasEvent('load')).to.be.true;
  251 |         expect(assets.texture.hasEvent('remove')).to.be.true;
  252 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 250, 'column': 8, 'index': 7448}","  248 |
  249 |         expect(assets.texture.hasEvent('change')).to.be.true;
> 250 |         expect(assets.texture.hasEvent('load')).to.be.true;
      |        ^ Duplicate Assert
  251 |         expect(assets.texture.hasEvent('remove')).to.be.true;
  252 |
  253 |         e.element.sprite = assets.sprite.resource;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 251, 'column': 8, 'index': 7508}","  249 |         expect(assets.texture.hasEvent('change')).to.be.true;
  250 |         expect(assets.texture.hasEvent('load')).to.be.true;
> 251 |         expect(assets.texture.hasEvent('remove')).to.be.true;
      |        ^ Duplicate Assert
  252 |
  253 |         e.element.sprite = assets.sprite.resource;
  254 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 255, 'column': 8, 'index': 7623}","  253 |         e.element.sprite = assets.sprite.resource;
  254 |
> 255 |         expect(assets.texture.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  256 |         expect(assets.texture.hasEvent('load')).to.be.false;
  257 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  258 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 256, 'column': 8, 'index': 7686}","  254 |
  255 |         expect(assets.texture.hasEvent('change')).to.be.false;
> 256 |         expect(assets.texture.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  257 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  258 |     });
  259 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 257, 'column': 8, 'index': 7747}","  255 |         expect(assets.texture.hasEvent('change')).to.be.false;
  256 |         expect(assets.texture.hasEvent('load')).to.be.false;
> 257 |         expect(assets.texture.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  258 |     });
  259 |
  260 |     it('Sprites assets unbound on destroy', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 262, 'column': 8, 'index': 7942}","  260 |     it('Sprites assets unbound on destroy', function () {
  261 |         // expect(assets.sprite.hasEvent('change')).to.be.false;
> 262 |         expect(assets.sprite.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  263 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
  264 |
  265 |         var e = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 263, 'column': 8, 'index': 8002}","  261 |         // expect(assets.sprite.hasEvent('change')).to.be.false;
  262 |         expect(assets.sprite.hasEvent('load')).to.be.false;
> 263 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  264 |
  265 |         var e = new pc.Entity();
  266 |         e.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 273, 'column': 8, 'index': 8307}","  271 |
  272 |         // expect(assets.sprite.hasEvent('change')).to.be.true;
> 273 |         expect(assets.sprite.hasEvent('load')).to.be.true;
      |        ^ Duplicate Assert
  274 |         expect(assets.sprite.hasEvent('remove')).to.be.true;
  275 |
  276 |         e.destroy();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 274, 'column': 8, 'index': 8366}","  272 |         // expect(assets.sprite.hasEvent('change')).to.be.true;
  273 |         expect(assets.sprite.hasEvent('load')).to.be.true;
> 274 |         expect(assets.sprite.hasEvent('remove')).to.be.true;
      |        ^ Duplicate Assert
  275 |
  276 |         e.destroy();
  277 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 279, 'column': 8, 'index': 8515}","  277 |
  278 |         // expect(assets.sprite.hasEvent('change')).to.be.false;
> 279 |         expect(assets.sprite.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  280 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
  281 |     });
  282 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 280, 'column': 8, 'index': 8575}","  278 |         // expect(assets.sprite.hasEvent('change')).to.be.false;
  279 |         expect(assets.sprite.hasEvent('load')).to.be.false;
> 280 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  281 |     });
  282 |
  283 |     it('Sprites assets unbound when reset', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 285, 'column': 8, 'index': 8769}","  283 |     it('Sprites assets unbound when reset', function () {
  284 |         // expect(assets.sprite.hasEvent('change')).to.be.false;
> 285 |         expect(assets.sprite.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  286 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
  287 |
  288 |         var e = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 286, 'column': 8, 'index': 8829}","  284 |         // expect(assets.sprite.hasEvent('change')).to.be.false;
  285 |         expect(assets.sprite.hasEvent('load')).to.be.false;
> 286 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  287 |
  288 |         var e = new pc.Entity();
  289 |         e.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 296, 'column': 8, 'index': 9134}","  294 |
  295 |         // expect(assets.sprite.hasEvent('change')).to.be.true;
> 296 |         expect(assets.sprite.hasEvent('load')).to.be.true;
      |        ^ Duplicate Assert
  297 |         expect(assets.sprite.hasEvent('remove')).to.be.true;
  298 |
  299 |         e.element.spriteAsset = null;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 297, 'column': 8, 'index': 9193}","  295 |         // expect(assets.sprite.hasEvent('change')).to.be.true;
  296 |         expect(assets.sprite.hasEvent('load')).to.be.true;
> 297 |         expect(assets.sprite.hasEvent('remove')).to.be.true;
      |        ^ Duplicate Assert
  298 |
  299 |         e.element.spriteAsset = null;
  300 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 302, 'column': 8, 'index': 9359}","  300 |
  301 |         // expect(assets.sprite.hasEvent('change')).to.be.false;
> 302 |         expect(assets.sprite.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  303 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
  304 |     });
  305 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 303, 'column': 8, 'index': 9419}","  301 |         // expect(assets.sprite.hasEvent('change')).to.be.false;
  302 |         expect(assets.sprite.hasEvent('load')).to.be.false;
> 303 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  304 |     });
  305 |
  306 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 309, 'column': 8, 'index': 9620}","  307 |     it('Sprites assets unbound when texture set', function () {
  308 |         // expect(assets.sprite.hasEvent('change')).to.be.false;
> 309 |         expect(assets.sprite.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  310 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
  311 |
  312 |         var e = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 310, 'column': 8, 'index': 9680}","  308 |         // expect(assets.sprite.hasEvent('change')).to.be.false;
  309 |         expect(assets.sprite.hasEvent('load')).to.be.false;
> 310 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  311 |
  312 |         var e = new pc.Entity();
  313 |         e.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 320, 'column': 8, 'index': 9985}","  318 |
  319 |         // expect(assets.sprite.hasEvent('change')).to.be.true;
> 320 |         expect(assets.sprite.hasEvent('load')).to.be.true;
      |        ^ Duplicate Assert
  321 |         expect(assets.sprite.hasEvent('remove')).to.be.true;
  322 |
  323 |         e.element.texture = assets.texture.resource;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 321, 'column': 8, 'index': 10044}","  319 |         // expect(assets.sprite.hasEvent('change')).to.be.true;
  320 |         expect(assets.sprite.hasEvent('load')).to.be.true;
> 321 |         expect(assets.sprite.hasEvent('remove')).to.be.true;
      |        ^ Duplicate Assert
  322 |
  323 |         e.element.texture = assets.texture.resource;
  324 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 326, 'column': 8, 'index': 10225}","  324 |
  325 |         // expect(assets.sprite.hasEvent('change')).to.be.false;
> 326 |         expect(assets.sprite.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  327 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
  328 |     });
  329 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 327, 'column': 8, 'index': 10285}","  325 |         // expect(assets.sprite.hasEvent('change')).to.be.false;
  326 |         expect(assets.sprite.hasEvent('load')).to.be.false;
> 327 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  328 |     });
  329 |
  330 |     it('Sprite resource unbound on destroy', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 342, 'column': 8, 'index': 10713}","  340 |         var sprite = e.element.sprite;
  341 |         expect(sprite).to.be.not.null;
> 342 |         expect(sprite.hasEvent('set:meshes')).to.be.true;
      |        ^ Duplicate Assert
  343 |         expect(sprite.hasEvent('set:pixelsPerUnit')).to.be.true;
  344 |         expect(sprite.hasEvent('set:atlas')).to.be.true;
  345 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 343, 'column': 8, 'index': 10771}","  341 |         expect(sprite).to.be.not.null;
  342 |         expect(sprite.hasEvent('set:meshes')).to.be.true;
> 343 |         expect(sprite.hasEvent('set:pixelsPerUnit')).to.be.true;
      |        ^ Duplicate Assert
  344 |         expect(sprite.hasEvent('set:atlas')).to.be.true;
  345 |
  346 |         expect(atlas.resource.hasEvent('set:texture')).to.equal(true);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 344, 'column': 8, 'index': 10836}","  342 |         expect(sprite.hasEvent('set:meshes')).to.be.true;
  343 |         expect(sprite.hasEvent('set:pixelsPerUnit')).to.be.true;
> 344 |         expect(sprite.hasEvent('set:atlas')).to.be.true;
      |        ^ Duplicate Assert
  345 |
  346 |         expect(atlas.resource.hasEvent('set:texture')).to.equal(true);
  347 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 346, 'column': 8, 'index': 10894}","  344 |         expect(sprite.hasEvent('set:atlas')).to.be.true;
  345 |
> 346 |         expect(atlas.resource.hasEvent('set:texture')).to.equal(true);
      |        ^ Duplicate Assert
  347 |
  348 |         e.destroy();
  349 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 350, 'column': 8, 'index': 10988}","  348 |         e.destroy();
  349 |
> 350 |         expect(atlas.resource.hasEvent('set:texture')).to.equal(false);
      |        ^ Duplicate Assert
  351 |
  352 |         expect(sprite.hasEvent('set:meshes')).to.be.false;
  353 |         expect(sprite.hasEvent('set:pixelsPerUnit')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 352, 'column': 8, 'index': 11061}","  350 |         expect(atlas.resource.hasEvent('set:texture')).to.equal(false);
  351 |
> 352 |         expect(sprite.hasEvent('set:meshes')).to.be.false;
      |        ^ Duplicate Assert
  353 |         expect(sprite.hasEvent('set:pixelsPerUnit')).to.be.false;
  354 |         expect(sprite.hasEvent('set:atlas')).to.be.false;
  355 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 353, 'column': 8, 'index': 11120}","  351 |
  352 |         expect(sprite.hasEvent('set:meshes')).to.be.false;
> 353 |         expect(sprite.hasEvent('set:pixelsPerUnit')).to.be.false;
      |        ^ Duplicate Assert
  354 |         expect(sprite.hasEvent('set:atlas')).to.be.false;
  355 |     });
  356 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 354, 'column': 8, 'index': 11186}","  352 |         expect(sprite.hasEvent('set:meshes')).to.be.false;
  353 |         expect(sprite.hasEvent('set:pixelsPerUnit')).to.be.false;
> 354 |         expect(sprite.hasEvent('set:atlas')).to.be.false;
      |        ^ Duplicate Assert
  355 |     });
  356 |
  357 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 365, 'column': 8, 'index': 11478}","  363 |         });
  364 |
> 365 |         expect(app.assets.hasEvent('add:123456')).to.equal(true);
      |        ^ Duplicate Assert
  366 |
  367 |         e.destroy();
  368 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 369, 'column': 8, 'index': 11567}","  367 |         e.destroy();
  368 |
> 369 |         expect(app.assets.hasEvent('add:123456')).to.equal(false);
      |        ^ Duplicate Assert
  370 |     });
  371 |
  372 |     it('AssetRegistry events unbound on destroy for sprite asset', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 379, 'column': 8, 'index': 11865}","  377 |         });
  378 |
> 379 |         expect(app.assets.hasEvent('add:123456')).to.equal(true);
      |        ^ Duplicate Assert
  380 |
  381 |         e.destroy();
  382 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 383, 'column': 8, 'index': 11954}","  381 |         e.destroy();
  382 |
> 383 |         expect(app.assets.hasEvent('add:123456')).to.equal(false);
      |        ^ Duplicate Assert
  384 |     });
  385 |
  386 |     it('AssetRegistry events unbound on destroy for material asset', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 393, 'column': 8, 'index': 12256}","  391 |         });
  392 |
> 393 |         expect(app.assets.hasEvent('add:123456')).to.equal(true);
      |        ^ Duplicate Assert
  394 |
  395 |         e.destroy();
  396 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 397, 'column': 8, 'index': 12345}","  395 |         e.destroy();
  396 |
> 397 |         expect(app.assets.hasEvent('add:123456')).to.equal(false);
      |        ^ Duplicate Assert
  398 |     });
  399 |
  400 |     it('Image element calls _updateMesh once when rect changes', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 540, 'column': 8, 'index': 17000}","  538 |         });
  539 |         app.root.addChild(e);
> 540 |         expect(e.element.spriteFrame).to.equal(1);
      |        ^ Duplicate Assert
  541 |
  542 |         e.element.sprite = new pc.Sprite(app.graphicsDevice, {
  543 |             frameKeys: [1]"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 545, 'column': 8, 'index': 17154}","  543 |             frameKeys: [1]
  544 |         });
> 545 |         expect(e.element.spriteFrame).to.equal(0);
      |        ^ Duplicate Assert
  546 |     });
  547 |
  548 |     it('Image element spriteFrame clamped to the latest frame available to the sprite when the frame keys of the sprite change with correct aspect ratio', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 566, 'column': 8, 'index': 17971}","  564 |         });
  565 |         app.root.addChild(e);
> 566 |         expect(e.element.spriteFrame).to.equal(1);
      |        ^ Duplicate Assert
  567 |         expect(e.element._image._targetAspectRatio).to.equal(0.5);
  568 |
  569 |         e.element.sprite.frameKeys = [0];"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 567, 'column': 8, 'index': 18022}","  565 |         app.root.addChild(e);
  566 |         expect(e.element.spriteFrame).to.equal(1);
> 567 |         expect(e.element._image._targetAspectRatio).to.equal(0.5);
      |        ^ Duplicate Assert
  568 |
  569 |         e.element.sprite.frameKeys = [0];
  570 |         expect(e.element.spriteFrame).to.equal(0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 570, 'column': 8, 'index': 18132}","  568 |
  569 |         e.element.sprite.frameKeys = [0];
> 570 |         expect(e.element.spriteFrame).to.equal(0);
      |        ^ Duplicate Assert
  571 |
  572 |         expect(e.element._image._targetAspectRatio).to.equal(1);
  573 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 572, 'column': 8, 'index': 18184}","  570 |         expect(e.element.spriteFrame).to.equal(0);
  571 |
> 572 |         expect(e.element._image._targetAspectRatio).to.equal(1);
      |        ^ Duplicate Assert
  573 |     });
  574 |
  575 |     it('Image element calls _updateMesh when its sprite is 9-sliced and the sprite\'s PPU changes', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 846, 'column': 8, 'index': 27941}","  844 |         app.update(0.1);
  845 |         app.render();
> 846 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.true;
      |        ^ Duplicate Assert
  847 |
  848 |         // move just off screen
  849 |         e.translateLocal(canvasWidth+(100/2)+0.001,0,0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 853, 'column': 8, 'index': 28158}","  851 |         app.update(0.1);
  852 |         app.render();
> 853 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.false;
      |        ^ Duplicate Assert
  854 |
  855 |         // move just on screen
  856 |         e.translateLocal(-1, 0, 0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 860, 'column': 8, 'index': 28354}","  858 |         app.update(0.1);
  859 |         app.render();
> 860 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.true;
      |        ^ Duplicate Assert
  861 |
  862 |     });
  863 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 900, 'column': 8, 'index': 29398}","  898 |         app.update(0.1);
  899 |         app.render();
> 900 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.true;
      |        ^ Duplicate Assert
  901 |
  902 |         // move just off screen
  903 |         parent.translateLocal(50, 50, 0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 909, 'column': 8, 'index': 29666}","  907 |         app.update(0.1);
  908 |         app.render();
> 909 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.false;
      |        ^ Duplicate Assert
  910 |     });
  911 |
  912 |     it('Offscreen rotated element is culled', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 995, 'column': 12, 'index': 32307}","  993 |
  994 |         spriteAsset.once(""load"", function () {
> 995 |             expect(app.assets.hasEvent('load:' + textureAtlasAsset.id)).to.be.true;
      |            ^ Duplicate Assert
  996 |
  997 |             e.element.spriteAsset = null;
  998 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1010, 'column': 8, 'index': 32807}","  1008 |         app.assets.add(textureAtlasAsset);
  1009 |
> 1010 |         expect(app.assets.hasEvent('load:' + textureAtlasAsset.id)).to.be.false;
       |        ^ Duplicate Assert
  1011 |
  1012 |         var e = new pc.Entity();
  1013 |         e.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1056, 'column': 8, 'index': 34144}","  1054 |         });
  1055 |
> 1056 |         expect(e.element.spriteAsset).to.be.not.null;
       |        ^ Duplicate Assert
  1057 |         // expect(e.element.sprite).to.be.not.null;
  1058 |
  1059 |         var texture = new pc.Texture(app.graphicsDevice);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1063, 'column': 8, 'index': 34348}","  1061 |         e.element.texture = texture;
  1062 |
> 1063 |         expect(e.element.spriteAsset).to.be.null;
       |        ^ Duplicate Assert
  1064 |         expect(e.element.sprite).to.be.null;
  1065 |         expect(e.element.texture).to.be.equal(texture);
  1066 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1125, 'column': 8, 'index': 36183}","  1123 |         });
  1124 |
> 1125 |         expect(e.element.textureAsset).to.be.not.null;
       |        ^ Duplicate Assert
  1126 |         // expect(e.element.texture).to.be.not.null;
  1127 |
  1128 |         var sprite = new pc.Sprite(app.graphicsDevice, {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1134, 'column': 8, 'index': 36424}","  1132 |         e.element.sprite = sprite;
  1133 |
> 1134 |         expect(e.element.textureAsset).to.be.null;
       |        ^ Duplicate Assert
  1135 |         expect(e.element.texture).to.be.null;
  1136 |         expect(e.element.sprite).to.be.equal(sprite);
  1137 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1179, 'column': 8, 'index': 37837}","  1177 |         // no aspect ratio fitting
  1178 |         expect(e.element.fitMode).to.equal(pc.FITMODE_STRETCH);
> 1179 |         expect(e.element._image.mesh.aabb.center.x).to.equal(25);
       |        ^ Duplicate Assert
  1180 |         expect(e.element._image.mesh.aabb.center.y).to.equal(12.5);
  1181 |         expect(e.element._image.mesh.aabb.halfExtents.x).to.equal(25);
  1182 |         expect(e.element._image.mesh.aabb.halfExtents.y).to.equal(12.5);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1180, 'column': 8, 'index': 37903}","  1178 |         expect(e.element.fitMode).to.equal(pc.FITMODE_STRETCH);
  1179 |         expect(e.element._image.mesh.aabb.center.x).to.equal(25);
> 1180 |         expect(e.element._image.mesh.aabb.center.y).to.equal(12.5);
       |        ^ Duplicate Assert
  1181 |         expect(e.element._image.mesh.aabb.halfExtents.x).to.equal(25);
  1182 |         expect(e.element._image.mesh.aabb.halfExtents.y).to.equal(12.5);
  1183 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1181, 'column': 8, 'index': 37971}","  1179 |         expect(e.element._image.mesh.aabb.center.x).to.equal(25);
  1180 |         expect(e.element._image.mesh.aabb.center.y).to.equal(12.5);
> 1181 |         expect(e.element._image.mesh.aabb.halfExtents.x).to.equal(25);
       |        ^ Duplicate Assert
  1182 |         expect(e.element._image.mesh.aabb.halfExtents.y).to.equal(12.5);
  1183 |
  1184 |         // change aspect ratio should trigger _updateMesh"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1182, 'column': 8, 'index': 38042}","  1180 |         expect(e.element._image.mesh.aabb.center.y).to.equal(12.5);
  1181 |         expect(e.element._image.mesh.aabb.halfExtents.x).to.equal(25);
> 1182 |         expect(e.element._image.mesh.aabb.halfExtents.y).to.equal(12.5);
       |        ^ Duplicate Assert
  1183 |
  1184 |         // change aspect ratio should trigger _updateMesh
  1185 |         var spy = sandbox.spy(pc.ImageElement.prototype, '_updateMesh');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1189, 'column': 8, 'index': 38343}","  1187 |         expect(spy.calledOnce).to.equal(true);
  1188 |
> 1189 |         expect(e.element._image.mesh.aabb.center.x).to.equal(12.5);
       |        ^ Duplicate Assert
  1190 |         expect(e.element._image.mesh.aabb.center.y).to.equal(12.5);
  1191 |         expect(e.element._image.mesh.aabb.halfExtents.x).to.equal(12.5);
  1192 |         expect(e.element._image.mesh.aabb.halfExtents.y).to.equal(12.5);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1190, 'column': 8, 'index': 38411}","  1188 |
  1189 |         expect(e.element._image.mesh.aabb.center.x).to.equal(12.5);
> 1190 |         expect(e.element._image.mesh.aabb.center.y).to.equal(12.5);
       |        ^ Duplicate Assert
  1191 |         expect(e.element._image.mesh.aabb.halfExtents.x).to.equal(12.5);
  1192 |         expect(e.element._image.mesh.aabb.halfExtents.y).to.equal(12.5);
  1193 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1191, 'column': 8, 'index': 38479}","  1189 |         expect(e.element._image.mesh.aabb.center.x).to.equal(12.5);
  1190 |         expect(e.element._image.mesh.aabb.center.y).to.equal(12.5);
> 1191 |         expect(e.element._image.mesh.aabb.halfExtents.x).to.equal(12.5);
       |        ^ Duplicate Assert
  1192 |         expect(e.element._image.mesh.aabb.halfExtents.y).to.equal(12.5);
  1193 |     });
  1194 | });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Duplicate Assert,"{'line': 1192, 'column': 8, 'index': 38552}","  1190 |         expect(e.element._image.mesh.aabb.center.y).to.equal(12.5);
  1191 |         expect(e.element._image.mesh.aabb.halfExtents.x).to.equal(12.5);
> 1192 |         expect(e.element._image.mesh.aabb.halfExtents.y).to.equal(12.5);
       |        ^ Duplicate Assert
  1193 |     });
  1194 | });
  1195 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 2, 'column': 4, 'index': 46}","  1 | describe('pc.ImageElement', function () {
> 2 |     var app;
    |    ^ Global Variable
  3 |     var assets;
  4 |     var sandbox;
  5 |     var canvas;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 3, 'column': 4, 'index': 59}","  1 | describe('pc.ImageElement', function () {
  2 |     var app;
> 3 |     var assets;
    |    ^ Global Variable
  4 |     var sandbox;
  5 |     var canvas;
  6 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 4, 'column': 4, 'index': 75}","  2 |     var app;
  3 |     var assets;
> 4 |     var sandbox;
    |    ^ Global Variable
  5 |     var canvas;
  6 |
  7 |     beforeEach(function (done) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 5, 'column': 4, 'index': 92}","  3 |     var assets;
  4 |     var sandbox;
> 5 |     var canvas;
    |    ^ Global Variable
  6 |
  7 |     beforeEach(function (done) {
  8 |         canvas = document.createElement(""canvas"");"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 24, 'column': 4, 'index': 484}","  22 |     });
  23 |
> 24 |     var loadAssets = function (list, cb) {
     |    ^ Global Variable
  25 |         // listen for asset load events and fire cb() when all assets are loaded
  26 |         var count = 0;
  27 |         app.assets.on('load', function (asset) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 26, 'column': 8, 'index': 612}","  24 |     var loadAssets = function (list, cb) {
  25 |         // listen for asset load events and fire cb() when all assets are loaded
> 26 |         var count = 0;
     |        ^ Global Variable
  27 |         app.assets.on('load', function (asset) {
  28 |             count++;
  29 |             if (count === list.length) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 35, 'column': 13, 'index': 831}","  33 |
  34 |         // add and load assets
> 35 |         for (var i = 0; i < list.length; i++) {
     |             ^ Global Variable
  36 |             app.assets.add(list[i]);
  37 |             app.assets.load(list[i]);
  38 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 41, 'column': 4, 'index': 963}","  39 |     };
  40 |
> 41 |     var loadAllAssets = function (cb) {
     |    ^ Global Variable
  42 |         app.assets.prefix = '../../';
  43 |
  44 |         // load atlas first so that sprite is set up with out waiting for next frame"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 45, 'column': 8, 'index': 1131}","  43 |
  44 |         // load atlas first so that sprite is set up with out waiting for next frame
> 45 |         var assetsToPreload = [
     |        ^ Global Variable
  46 |             new pc.Asset('red-atlas', 'textureatlas', {
  47 |                 url: 'base/tests/test-assets/sprite/red-atlas.json'
  48 |             })"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 52, 'column': 8, 'index': 1348}","  50 |
  51 |         // list of assets to load
> 52 |         var assetsToLoad = [
     |        ^ Global Variable
  53 |             new pc.Asset('red-sprite', 'sprite', {
  54 |                 url: 'base/tests/test-assets/sprite/red-sprite.json'
  55 |             }),"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 81, 'column': 8, 'index': 2232}","  79 |
  80 |     it('Add Image Element', function () {
> 81 |         var e = new pc.Entity();
     |        ^ Global Variable
  82 |         e.addComponent('element', {
  83 |             type: 'image'
  84 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 90, 'column': 8, 'index': 2450}","  88 |
  89 |     it('Add / Remove Image Element', function () {
> 90 |         var e = new pc.Entity();
     |        ^ Global Variable
  91 |         e.addComponent('element', {
  92 |             type: 'image'
  93 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 101, 'column': 8, 'index': 2696}","   99 |
  100 |     it('Destroy Sprite Image Element', function () {
> 101 |         var e = new pc.Entity();
      |        ^ Global Variable
  102 |
  103 |         // patch
  104 |         var destroyed = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 104, 'column': 8, 'index': 2747}","  102 |
  103 |         // patch
> 104 |         var destroyed = false;
      |        ^ Global Variable
  105 |         var _onSpriteAssetLoaded = pc.ImageElement.prototype._onSpriteAssetLoaded;
  106 |         pc.ImageElement.prototype._onSpriteAssetLoaded = function () {
  107 |             if (destroyed) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 105, 'column': 8, 'index': 2778}","  103 |         // patch
  104 |         var destroyed = false;
> 105 |         var _onSpriteAssetLoaded = pc.ImageElement.prototype._onSpriteAssetLoaded;
      |        ^ Global Variable
  106 |         pc.ImageElement.prototype._onSpriteAssetLoaded = function () {
  107 |             if (destroyed) {
  108 |                 ok(false, ""_onSpriteAssetLoaded called after Element is destroyed"");"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 127, 'column': 8, 'index': 3438}","  125 |     it('Destroy Texture Image Element', function (done) {
  126 |         // patch
> 127 |         var destroyed = false;
      |        ^ Global Variable
  128 |         var _onTextureLoad = pc.ImageElement.prototype._onTextureLoad;
  129 |         pc.ImageElement.prototype._onTextureLoad = function () {
  130 |             if (destroyed) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 128, 'column': 8, 'index': 3469}","  126 |         // patch
  127 |         var destroyed = false;
> 128 |         var _onTextureLoad = pc.ImageElement.prototype._onTextureLoad;
      |        ^ Global Variable
  129 |         pc.ImageElement.prototype._onTextureLoad = function () {
  130 |             if (destroyed) {
  131 |                 fail(""_onTextureLoad called after Element is destroyed"");"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 139, 'column': 8, 'index': 3835}","  137 |
  138 |
> 139 |         var e = new pc.Entity();
      |        ^ Global Variable
  140 |         e.addComponent('element', {
  141 |             type: 'image',
  142 |             textureAsset: assets.texture"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 161, 'column': 8, 'index': 4388}","  159 |     it('Destroy Material Image Element', function (done) {
  160 |         // patch
> 161 |         var destroyed = false;
      |        ^ Global Variable
  162 |         var _onMaterialLoad = pc.ImageElement.prototype._onMaterialLoad;
  163 |         pc.ImageElement.prototype._onMaterialLoad = function () {
  164 |             if (destroyed) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 162, 'column': 8, 'index': 4419}","  160 |         // patch
  161 |         var destroyed = false;
> 162 |         var _onMaterialLoad = pc.ImageElement.prototype._onMaterialLoad;
      |        ^ Global Variable
  163 |         pc.ImageElement.prototype._onMaterialLoad = function () {
  164 |             if (destroyed) {
  165 |                 fail(false, ""_onMaterialLoad called after Element is destroyed"");"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 173, 'column': 8, 'index': 4797}","  171 |
  172 |
> 173 |         var e = new pc.Entity();
      |        ^ Global Variable
  174 |         e.addComponent('element', {
  175 |             type: 'image',
  176 |             materialAsset: assets.material"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 196, 'column': 8, 'index': 5524}","  194 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  195 |
> 196 |         var e = new pc.Entity();
      |        ^ Global Variable
  197 |         e.addComponent('element', {
  198 |             type: 'image',
  199 |             textureAsset: assets.texture"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 219, 'column': 8, 'index': 6350}","  217 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  218 |
> 219 |         var e = new pc.Entity();
      |        ^ Global Variable
  220 |         e.addComponent('element', {
  221 |             type: 'image',
  222 |             textureAsset: assets.texture"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 242, 'column': 8, 'index': 7206}","  240 |         expect(assets.texture.hasEvent('remove')).to.be.false;
  241 |
> 242 |         var e = new pc.Entity();
      |        ^ Global Variable
  243 |         e.addComponent('element', {
  244 |             type: 'image',
  245 |             textureAsset: assets.texture"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 265, 'column': 8, 'index': 8065}","  263 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
  264 |
> 265 |         var e = new pc.Entity();
      |        ^ Global Variable
  266 |         e.addComponent('element', {
  267 |             type: 'image',
  268 |             spriteAsset: assets.sprite"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 288, 'column': 8, 'index': 8892}","  286 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
  287 |
> 288 |         var e = new pc.Entity();
      |        ^ Global Variable
  289 |         e.addComponent('element', {
  290 |             type: 'image',
  291 |             spriteAsset: assets.sprite"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 312, 'column': 8, 'index': 9743}","  310 |         expect(assets.sprite.hasEvent('remove')).to.be.false;
  311 |
> 312 |         var e = new pc.Entity();
      |        ^ Global Variable
  313 |         e.addComponent('element', {
  314 |             type: 'image',
  315 |             spriteAsset: assets.sprite"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 331, 'column': 8, 'index': 10415}","  329 |
  330 |     it('Sprite resource unbound on destroy', function () {
> 331 |         var atlas = assets.textureatlas;
      |        ^ Global Variable
  332 |
  333 |         var e = new pc.Entity();
  334 |         e.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 333, 'column': 8, 'index': 10457}","  331 |         var atlas = assets.textureatlas;
  332 |
> 333 |         var e = new pc.Entity();
      |        ^ Global Variable
  334 |         e.addComponent('element', {
  335 |             type: 'image',
  336 |             spriteAsset: assets.sprite"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 340, 'column': 8, 'index': 10635}","  338 |         app.root.addChild(e);
  339 |
> 340 |         var sprite = e.element.sprite;
      |        ^ Global Variable
  341 |         expect(sprite).to.be.not.null;
  342 |         expect(sprite.hasEvent('set:meshes')).to.be.true;
  343 |         expect(sprite.hasEvent('set:pixelsPerUnit')).to.be.true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 359, 'column': 8, 'index': 11336}","  357 |
  358 |     it('AssetRegistry events unbound on destroy for texture asset', function () {
> 359 |         var e = new pc.Entity();
      |        ^ Global Variable
  360 |         e.addComponent('element', {
  361 |             type: 'image',
  362 |             textureAsset: 123456"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 373, 'column': 8, 'index': 11724}","  371 |
  372 |     it('AssetRegistry events unbound on destroy for sprite asset', function () {
> 373 |         var e = new pc.Entity();
      |        ^ Global Variable
  374 |         e.addComponent('element', {
  375 |             type: 'image',
  376 |             spriteAsset: 123456"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 387, 'column': 8, 'index': 12113}","  385 |
  386 |     it('AssetRegistry events unbound on destroy for material asset', function () {
> 387 |         var e = new pc.Entity();
      |        ^ Global Variable
  388 |         e.addComponent('element', {
  389 |             type: 'image',
  390 |             materialAsset: 123456"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 401, 'column': 8, 'index': 12500}","  399 |
  400 |     it('Image element calls _updateMesh once when rect changes', function () {
> 401 |         var e = new pc.Entity();
      |        ^ Global Variable
  402 |         e.addComponent('element', {
  403 |             type: 'image'
  404 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 407, 'column': 8, 'index': 12638}","  405 |         app.root.addChild(e);
  406 |
> 407 |         var spy = sandbox.spy(pc.ImageElement.prototype, '_updateMesh');
      |        ^ Global Variable
  408 |         e.element.rect = [1, 1, 1, 1];
  409 |         expect(spy.calledOnce).to.equal(true);
  410 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 413, 'column': 8, 'index': 12890}","  411 |
  412 |     it('Image element does not call _updateMesh if rect is the same', function () {
> 413 |         var e = new pc.Entity();
      |        ^ Global Variable
  414 |         e.addComponent('element', {
  415 |             type: 'image'
  416 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 419, 'column': 8, 'index': 13028}","  417 |         app.root.addChild(e);
  418 |
> 419 |         var spy = sandbox.spy(pc.ImageElement.prototype, '_updateMesh');
      |        ^ Global Variable
  420 |         e.element.rect = [0, 0, 1, 1];
  421 |         e.element.rect = new pc.Vec4(0, 0, 1, 1);
  422 |         expect(spy.notCalled).to.equal(true);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 426, 'column': 8, 'index': 13397}","  424 |
  425 |     it('Image element calls _updateMesh once at the start and once at the end when all properties that call it are passed into the data', function () {
> 426 |         var spy = sandbox.spy(pc.ImageElement.prototype, '_updateMesh');
      |        ^ Global Variable
  427 |
  428 |         var sprite = new pc.Sprite(app.graphicsDevice, {
  429 |             frameKeys: [1, 2]"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 428, 'column': 8, 'index': 13471}","  426 |         var spy = sandbox.spy(pc.ImageElement.prototype, '_updateMesh');
  427 |
> 428 |         var sprite = new pc.Sprite(app.graphicsDevice, {
      |        ^ Global Variable
  429 |             frameKeys: [1, 2]
  430 |         });
  431 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 432, 'column': 8, 'index': 13571}","  430 |         });
  431 |
> 432 |         var e = new pc.Entity();
      |        ^ Global Variable
  433 |         e.addComponent('element', {
  434 |             type: 'image',
  435 |             rect: [1, 1, 1, 1],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 453, 'column': 8, 'index': 14223}","  451 |     it('Image element calls _updateMesh once when sprite changes', function () {
  452 |
> 453 |         var e = new pc.Entity();
      |        ^ Global Variable
  454 |         e.addComponent('element', {
  455 |             type: 'image'
  456 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 459, 'column': 8, 'index': 14361}","  457 |         app.root.addChild(e);
  458 |
> 459 |         var spy = sandbox.spy(pc.ImageElement.prototype, '_updateMesh');
      |        ^ Global Variable
  460 |         e.element.sprite = new pc.Sprite(app.graphicsDevice, {
  461 |             frameKeys: []
  462 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 467, 'column': 8, 'index': 14677}","  465 |
  466 |     it('Image element does not call _updateMesh if sprite is the same', function () {
> 467 |         var sprite = new pc.Sprite(app.graphicsDevice, {
      |        ^ Global Variable
  468 |             frameKeys: []
  469 |         });
  470 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 471, 'column': 8, 'index': 14773}","  469 |         });
  470 |
> 471 |         var e = new pc.Entity();
      |        ^ Global Variable
  472 |         e.addComponent('element', {
  473 |             type: 'image',
  474 |             sprite: sprite"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 478, 'column': 8, 'index': 14939}","  476 |         app.root.addChild(e);
  477 |
> 478 |         var spy = sandbox.spy(pc.ImageElement.prototype, '_updateMesh');
      |        ^ Global Variable
  479 |         e.element.sprite = sprite;
  480 |         expect(spy.notCalled).to.equal(true);
  481 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 485, 'column': 8, 'index': 15189}","  483 |     it('Image element calls _updateMesh once when spriteFrame changes', function () {
  484 |
> 485 |         var e = new pc.Entity();
      |        ^ Global Variable
  486 |         e.addComponent('element', {
  487 |             type: 'image',
  488 |             spriteFrame: 1,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 495, 'column': 8, 'index': 15461}","  493 |         app.root.addChild(e);
  494 |
> 495 |         var spy = sandbox.spy(pc.ImageElement.prototype, '_updateMesh');
      |        ^ Global Variable
  496 |         e.element.spriteFrame = 0;
  497 |         expect(spy.calledOnce).to.equal(true);
  498 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 501, 'column': 8, 'index': 15716}","  499 |
  500 |     it('Image element does not call _updateMesh if spriteFrame is the same', function () {
> 501 |         var e = new pc.Entity();
      |        ^ Global Variable
  502 |         e.addComponent('element', {
  503 |             type: 'image',
  504 |             sprite: new pc.Sprite(app.graphicsDevice, {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 511, 'column': 8, 'index': 15988}","  509 |         app.root.addChild(e);
  510 |
> 511 |         var spy = sandbox.spy(pc.ImageElement.prototype, '_updateMesh');
      |        ^ Global Variable
  512 |         e.element.spriteFrame = 1;
  513 |         expect(spy.notCalled).to.equal(true);
  514 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 517, 'column': 8, 'index': 16259}","  515 |
  516 |     it('Image element spriteFrame clamped to the latest frame available to the sprite asset', function () {
> 517 |         var e = new pc.Entity();
      |        ^ Global Variable
  518 |         e.addComponent('element', {
  519 |             type: 'image',
  520 |             sprite: new pc.Sprite(app.graphicsDevice, {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 531, 'column': 8, 'index': 16729}","  529 |
  530 |     it('Image element spriteFrame clamped to the latest frame available to the sprite when a different sprite is assigned', function () {
> 531 |         var e = new pc.Entity();
      |        ^ Global Variable
  532 |         e.addComponent('element', {
  533 |             type: 'image',
  534 |             sprite: new pc.Sprite(app.graphicsDevice, {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 549, 'column': 8, 'index': 17383}","  547 |
  548 |     it('Image element spriteFrame clamped to the latest frame available to the sprite when the frame keys of the sprite change with correct aspect ratio', function () {
> 549 |         var atlas = new pc.TextureAtlas();
      |        ^ Global Variable
  550 |         atlas.frames = {
  551 |             0: { rect: new pc.Vec4(0, 0, 32, 32), pivot: new pc.Vec2() },
  552 |             1: { rect: new pc.Vec4(0, 0, 16, 32), pivot: new pc.Vec2() }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 556, 'column': 8, 'index': 17670}","  554 |         atlas.texture = new pc.Texture(app.graphicsDevice);
  555 |
> 556 |         var e = new pc.Entity();
      |        ^ Global Variable
  557 |         e.addComponent('element', {
  558 |             type: 'image',
  559 |             sprite: new pc.Sprite(app.graphicsDevice, {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 576, 'column': 8, 'index': 18372}","  574 |
  575 |     it('Image element calls _updateMesh when its sprite is 9-sliced and the sprite\'s PPU changes', function () {
> 576 |         var atlas = new pc.TextureAtlas();
      |        ^ Global Variable
  577 |         atlas.frames = {
  578 |             0: { rect: new pc.Vec4(), pivot: new pc.Vec2(), border: new pc.Vec4() },
  579 |             1: { rect: new pc.Vec4(), pivot: new pc.Vec2(), border: new pc.Vec4() }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 583, 'column': 8, 'index': 18681}","  581 |         atlas.texture = new pc.Texture(app.graphicsDevice);
  582 |
> 583 |         var sprite = new pc.Sprite(app.graphicsDevice, {
      |        ^ Global Variable
  584 |             atlas: atlas,
  585 |             frameKeys: [0, 1],
  586 |             pixelsPerUnit: 1,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 590, 'column': 8, 'index': 18890}","  588 |         });
  589 |
> 590 |         var e = new pc.Entity();
      |        ^ Global Variable
  591 |         e.addComponent('element', {
  592 |             type: 'image',
  593 |             sprite: sprite,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 598, 'column': 8, 'index': 19084}","  596 |         app.root.addChild(e);
  597 |
> 598 |         var spy = sandbox.spy(pc.ImageElement.prototype, '_updateMesh');
      |        ^ Global Variable
  599 |         sprite.pixelsPerUnit = 2;
  600 |         expect(spy.calledOnce).to.equal(true);
  601 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 604, 'column': 8, 'index': 19370}","  602 |
  603 |     it('Image element calls _updateMesh once when its sprite is not 9-sliced and the sprite\'s PPU changes', function () {
> 604 |         var atlas = new pc.TextureAtlas();
      |        ^ Global Variable
  605 |         atlas.frames = {
  606 |             0: { rect: new pc.Vec4(), pivot: new pc.Vec2(), border: new pc.Vec4() },
  607 |             1: { rect: new pc.Vec4(), pivot: new pc.Vec2(), border: new pc.Vec4() }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 611, 'column': 8, 'index': 19679}","  609 |         atlas.texture = new pc.Texture(app.graphicsDevice);
  610 |
> 611 |         var sprite = new pc.Sprite(app.graphicsDevice, {
      |        ^ Global Variable
  612 |             atlas: atlas,
  613 |             frameKeys: [0, 1],
  614 |             pixelsPerUnit: 1,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 618, 'column': 8, 'index': 19888}","  616 |         });
  617 |
> 618 |         var e = new pc.Entity();
      |        ^ Global Variable
  619 |         e.addComponent('element', {
  620 |             type: 'image',
  621 |             sprite: sprite,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 626, 'column': 8, 'index': 20082}","  624 |         app.root.addChild(e);
  625 |
> 626 |         var spy = sandbox.spy(pc.ImageElement.prototype, '_updateMesh');
      |        ^ Global Variable
  627 |         sprite.pixelsPerUnit = 2;
  628 |         expect(spy.calledOnce).to.equal(true);
  629 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 632, 'column': 8, 'index': 20321}","  630 |
  631 |     it('Image element defaults to white color and opacity 1', function () {
> 632 |         var e = new pc.Entity();
      |        ^ Global Variable
  633 |         e.addComponent('element', {
  634 |             type: 'image'
  635 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 642, 'column': 8, 'index': 20618}","  640 |         expect(e.element.opacity).to.equal(1);
  641 |
> 642 |         var emissive = e.element._image._renderable.meshInstance.getParameter('material_emissive').data;
      |        ^ Global Variable
  643 |         expect(emissive[0]).to.equal(1);
  644 |         expect(emissive[1]).to.equal(1);
  645 |         expect(emissive[2]).to.equal(1);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 647, 'column': 8, 'index': 20847}","  645 |         expect(emissive[2]).to.equal(1);
  646 |
> 647 |         var opacity = e.element._image._renderable.meshInstance.getParameter('material_opacity').data;
      |        ^ Global Variable
  648 |         expect(opacity).to.equal(1);
  649 |     });
  650 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 652, 'column': 8, 'index': 21087}","  650 |
  651 |     it('Image element initializes to color and opacity 1 specified in data', function () {
> 652 |         var e = new pc.Entity();
      |        ^ Global Variable
  653 |         e.addComponent('element', {
  654 |             type: 'image',
  655 |             color: [0.5, 0.6, 0.7],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 663, 'column': 8, 'index': 21441}","  661 |         expect(e.element.color.b).to.be.closeTo(0.7, 0.001);
  662 |
> 663 |         var emissive = e.element._image._renderable.meshInstance.getParameter('material_emissive').data;
      |        ^ Global Variable
  664 |         expect(emissive[0]).to.be.closeTo(0.5, 0.001);
  665 |         expect(emissive[1]).to.be.closeTo(0.6, 0.001);
  666 |         expect(emissive[2]).to.be.closeTo(0.7, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 668, 'column': 8, 'index': 21712}","  666 |         expect(emissive[2]).to.be.closeTo(0.7, 0.001);
  667 |
> 668 |         var opacity = e.element._image._renderable.meshInstance.getParameter('material_opacity').data;
      |        ^ Global Variable
  669 |         expect(opacity).to.be.closeTo(0.1, 0.001);
  670 |     });
  671 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 673, 'column': 8, 'index': 21927}","  671 |
  672 |     it('Image element color changes', function () {
> 673 |         var e = new pc.Entity();
      |        ^ Global Variable
  674 |         e.addComponent('element', {
  675 |             type: 'image'
  676 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 685, 'column': 8, 'index': 22274}","  683 |         expect(e.element.opacity).to.equal(1);
  684 |
> 685 |         var emissive = e.element._image._renderable.meshInstance.getParameter('material_emissive').data;
      |        ^ Global Variable
  686 |         expect(emissive[0]).to.equal(0);
  687 |         expect(emissive[1]).to.equal(0);
  688 |         expect(emissive[2]).to.equal(0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 690, 'column': 8, 'index': 22503}","  688 |         expect(emissive[2]).to.equal(0);
  689 |
> 690 |         var opacity = e.element._image._renderable.meshInstance.getParameter('material_opacity').data;
      |        ^ Global Variable
  691 |         expect(opacity).to.equal(1);
  692 |     });
  693 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 695, 'column': 8, 'index': 22706}","  693 |
  694 |     it('Image element opacity changes', function () {
> 695 |         var e = new pc.Entity();
      |        ^ Global Variable
  696 |         e.addComponent('element', {
  697 |             type: 'image'
  698 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 704, 'column': 8, 'index': 22894}","  702 |         expect(e.element.opacity).to.equal(0);
  703 |
> 704 |         var opacity = e.element._image._renderable.meshInstance.getParameter('material_opacity').data;
      |        ^ Global Variable
  705 |         expect(opacity).to.equal(0);
  706 |     });
  707 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 709, 'column': 8, 'index': 23163}","  707 |
  708 |     it('Image element reverts back to the previous color, opacity and material if we clear its material', function () {
> 709 |         var e = new pc.Entity();
      |        ^ Global Variable
  710 |         e.addComponent('element', {
  711 |             type: 'image',
  712 |             color: [0.1, 0.2, 0.3],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 716, 'column': 8, 'index': 23333}","  714 |         });
  715 |
> 716 |         var defaultMaterial = e.element.material;
      |        ^ Global Variable
  717 |         e.element.material = new pc.StandardMaterial();
  718 |         e.element.material = null;
  719 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 722, 'column': 8, 'index': 23538}","  720 |         expect(e.element.material).to.equal(defaultMaterial);
  721 |
> 722 |         var emissive = e.element._image._renderable.meshInstance.getParameter('material_emissive').data;
      |        ^ Global Variable
  723 |         expect(emissive[0]).to.be.closeTo(0.1, 0.001);
  724 |         expect(emissive[1]).to.be.closeTo(0.2, 0.001);
  725 |         expect(emissive[2]).to.be.closeTo(0.3, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 727, 'column': 8, 'index': 23809}","  725 |         expect(emissive[2]).to.be.closeTo(0.3, 0.001);
  726 |
> 727 |         var opacity = e.element._image._renderable.meshInstance.getParameter('material_opacity').data;
      |        ^ Global Variable
  728 |         expect(opacity).to.be.closeTo(0.4, 0.001);
  729 |
  730 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 733, 'column': 8, 'index': 24103}","  731 |
  732 |     it('Image element with mask reverts back to the previous color, opacity and material if we clear its material', function () {
> 733 |         var e = new pc.Entity();
      |        ^ Global Variable
  734 |         e.addComponent('element', {
  735 |             type: 'image',
  736 |             color: [0.1, 0.2, 0.3],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 741, 'column': 8, 'index': 24297}","  739 |         });
  740 |
> 741 |         var defaultMaterial = e.element.material;
      |        ^ Global Variable
  742 |         e.element.material = new pc.StandardMaterial();
  743 |         e.element.material = null;
  744 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 747, 'column': 8, 'index': 24502}","  745 |         expect(e.element.material).to.equal(defaultMaterial);
  746 |
> 747 |         var emissive = e.element._image._renderable.meshInstance.getParameter('material_emissive').data;
      |        ^ Global Variable
  748 |         expect(emissive[0]).to.be.closeTo(0.1, 0.001);
  749 |         expect(emissive[1]).to.be.closeTo(0.2, 0.001);
  750 |         expect(emissive[2]).to.be.closeTo(0.3, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 752, 'column': 8, 'index': 24773}","  750 |         expect(emissive[2]).to.be.closeTo(0.3, 0.001);
  751 |
> 752 |         var opacity = e.element._image._renderable.meshInstance.getParameter('material_opacity').data;
      |        ^ Global Variable
  753 |         expect(opacity).to.be.closeTo(0.4, 0.001);
  754 |
  755 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 758, 'column': 8, 'index': 25069}","  756 |
  757 |     it('Screenspace Image element reverts back to the previous color, opacity and material if we clear its material', function () {
> 758 |         var screen = new pc.Entity();
      |        ^ Global Variable
  759 |         screen.addComponent('screen', {
  760 |             screenSpace: true
  761 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 764, 'column': 8, 'index': 25225}","  762 |         app.root.addChild(screen);
  763 |
> 764 |         var e = new pc.Entity();
      |        ^ Global Variable
  765 |         e.addComponent('element', {
  766 |             type: 'image',
  767 |             color: [0.1, 0.2, 0.3],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 772, 'column': 8, 'index': 25423}","  770 |         screen.addChild(e);
  771 |
> 772 |         var defaultMaterial = e.element.material;
      |        ^ Global Variable
  773 |         e.element.material = new pc.StandardMaterial();
  774 |         e.element.material = null;
  775 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 778, 'column': 8, 'index': 25628}","  776 |         expect(e.element.material).to.equal(defaultMaterial);
  777 |
> 778 |         var emissive = e.element._image._renderable.meshInstance.getParameter('material_emissive').data;
      |        ^ Global Variable
  779 |         expect(emissive[0]).to.be.closeTo(0.1, 0.001);
  780 |         expect(emissive[1]).to.be.closeTo(0.2, 0.001);
  781 |         expect(emissive[2]).to.be.closeTo(0.3, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 783, 'column': 8, 'index': 25899}","  781 |         expect(emissive[2]).to.be.closeTo(0.3, 0.001);
  782 |
> 783 |         var opacity = e.element._image._renderable.meshInstance.getParameter('material_opacity').data;
      |        ^ Global Variable
  784 |         expect(opacity).to.be.closeTo(0.4, 0.001);
  785 |
  786 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 789, 'column': 8, 'index': 26205}","  787 |
  788 |     it('Screenspace Image element with mask reverts back to the previous color, opacity and material if we clear its material', function () {
> 789 |         var screen = new pc.Entity();
      |        ^ Global Variable
  790 |         screen.addComponent('screen', {
  791 |             screenSpace: true
  792 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 795, 'column': 8, 'index': 26361}","  793 |         app.root.addChild(screen);
  794 |
> 795 |         var e = new pc.Entity();
      |        ^ Global Variable
  796 |         e.addComponent('element', {
  797 |             type: 'image',
  798 |             color: [0.1, 0.2, 0.3],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 804, 'column': 8, 'index': 26583}","  802 |         screen.addChild(e);
  803 |
> 804 |         var defaultMaterial = e.element.material;
      |        ^ Global Variable
  805 |         e.element.material = new pc.StandardMaterial();
  806 |         e.element.material = null;
  807 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 810, 'column': 8, 'index': 26788}","  808 |         expect(e.element.material).to.equal(defaultMaterial);
  809 |
> 810 |         var emissive = e.element._image._renderable.meshInstance.getParameter('material_emissive').data;
      |        ^ Global Variable
  811 |         expect(emissive[0]).to.be.closeTo(0.1, 0.001);
  812 |         expect(emissive[1]).to.be.closeTo(0.2, 0.001);
  813 |         expect(emissive[2]).to.be.closeTo(0.3, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 815, 'column': 8, 'index': 27059}","  813 |         expect(emissive[2]).to.be.closeTo(0.3, 0.001);
  814 |
> 815 |         var opacity = e.element._image._renderable.meshInstance.getParameter('material_opacity').data;
      |        ^ Global Variable
  816 |         expect(opacity).to.be.closeTo(0.4, 0.001);
  817 |
  818 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 821, 'column': 8, 'index': 27275}","  819 |
  820 |     it('Offscreen element is culled', function () {
> 821 |         var canvasWidth = app.graphicsDevice.width;
      |        ^ Global Variable
  822 |         var canvasHeight = app.graphicsDevice.height;
  823 |
  824 |         var screen = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 822, 'column': 8, 'index': 27327}","  820 |     it('Offscreen element is culled', function () {
  821 |         var canvasWidth = app.graphicsDevice.width;
> 822 |         var canvasHeight = app.graphicsDevice.height;
      |        ^ Global Variable
  823 |
  824 |         var screen = new pc.Entity();
  825 |         screen.addComponent('screen', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 824, 'column': 8, 'index': 27382}","  822 |         var canvasHeight = app.graphicsDevice.height;
  823 |
> 824 |         var screen = new pc.Entity();
      |        ^ Global Variable
  825 |         screen.addComponent('screen', {
  826 |             screenSpace: true
  827 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 830, 'column': 8, 'index': 27538}","  828 |         app.root.addChild(screen);
  829 |
> 830 |         var e = new pc.Entity();
      |        ^ Global Variable
  831 |         e.addComponent('element', {
  832 |             type: 'image',
  833 |             width: 100,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 839, 'column': 8, 'index': 27753}","  837 |         screen.addChild(e);
  838 |
> 839 |         var camera = new pc.Entity();
      |        ^ Global Variable
  840 |         camera.addComponent('camera');
  841 |         app.root.addChild(camera);
  842 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 866, 'column': 8, 'index': 28502}","  864 |
  865 |     it('Offscreen child element is culled', function () {
> 866 |         var canvasWidth = app.graphicsDevice.width;
      |        ^ Global Variable
  867 |         var canvasHeight = app.graphicsDevice.height;
  868 |
  869 |         var screen = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 867, 'column': 8, 'index': 28554}","  865 |     it('Offscreen child element is culled', function () {
  866 |         var canvasWidth = app.graphicsDevice.width;
> 867 |         var canvasHeight = app.graphicsDevice.height;
      |        ^ Global Variable
  868 |
  869 |         var screen = new pc.Entity();
  870 |         screen.addComponent('screen', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 869, 'column': 8, 'index': 28609}","  867 |         var canvasHeight = app.graphicsDevice.height;
  868 |
> 869 |         var screen = new pc.Entity();
      |        ^ Global Variable
  870 |         screen.addComponent('screen', {
  871 |             screenSpace: true
  872 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 875, 'column': 8, 'index': 28765}","  873 |         app.root.addChild(screen);
  874 |
> 875 |         var parent = new pc.Entity();
      |        ^ Global Variable
  876 |         parent.addComponent('element', {
  877 |             type: 'image',
  878 |             width: 100,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 884, 'column': 8, 'index': 28995}","  882 |         screen.addChild(parent);
  883 |
> 884 |         var e = new pc.Entity();
      |        ^ Global Variable
  885 |         e.addComponent('element', {
  886 |             type: 'image',
  887 |             width: 100,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 893, 'column': 8, 'index': 29210}","  891 |         parent.addChild(e);
  892 |
> 893 |         var camera = new pc.Entity();
      |        ^ Global Variable
  894 |         camera.addComponent('camera');
  895 |         app.root.addChild(camera);
  896 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 913, 'column': 8, 'index': 29815}","  911 |
  912 |     it('Offscreen rotated element is culled', function () {
> 913 |         var canvasWidth = app.graphicsDevice.width;
      |        ^ Global Variable
  914 |         var canvasHeight = app.graphicsDevice.height;
  915 |
  916 |         var screen = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 914, 'column': 8, 'index': 29867}","  912 |     it('Offscreen rotated element is culled', function () {
  913 |         var canvasWidth = app.graphicsDevice.width;
> 914 |         var canvasHeight = app.graphicsDevice.height;
      |        ^ Global Variable
  915 |
  916 |         var screen = new pc.Entity();
  917 |         screen.addComponent('screen', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 916, 'column': 8, 'index': 29922}","  914 |         var canvasHeight = app.graphicsDevice.height;
  915 |
> 916 |         var screen = new pc.Entity();
      |        ^ Global Variable
  917 |         screen.addComponent('screen', {
  918 |             screenSpace: true
  919 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 922, 'column': 8, 'index': 30078}","  920 |         app.root.addChild(screen);
  921 |
> 922 |         var e = new pc.Entity();
      |        ^ Global Variable
  923 |         e.addComponent('element', {
  924 |             type: 'image',
  925 |             width: 100,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 931, 'column': 8, 'index': 30293}","  929 |         screen.addChild(e);
  930 |
> 931 |         var camera = new pc.Entity();
      |        ^ Global Variable
  932 |         camera.addComponent('camera');
  933 |         app.root.addChild(camera);
  934 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 946, 'column': 8, 'index': 30777}","  944 |
  945 |     it('Offscreen rotated out of plane is culled', function () {
> 946 |         var canvasWidth = app.graphicsDevice.width;
      |        ^ Global Variable
  947 |         var canvasHeight = app.graphicsDevice.height;
  948 |
  949 |         var screen = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 947, 'column': 8, 'index': 30829}","  945 |     it('Offscreen rotated out of plane is culled', function () {
  946 |         var canvasWidth = app.graphicsDevice.width;
> 947 |         var canvasHeight = app.graphicsDevice.height;
      |        ^ Global Variable
  948 |
  949 |         var screen = new pc.Entity();
  950 |         screen.addComponent('screen', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 949, 'column': 8, 'index': 30884}","  947 |         var canvasHeight = app.graphicsDevice.height;
  948 |
> 949 |         var screen = new pc.Entity();
      |        ^ Global Variable
  950 |         screen.addComponent('screen', {
  951 |             screenSpace: true
  952 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 955, 'column': 8, 'index': 31040}","  953 |         app.root.addChild(screen);
  954 |
> 955 |         var e = new pc.Entity();
      |        ^ Global Variable
  956 |         e.addComponent('element', {
  957 |             type: 'image',
  958 |             width: 100,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 964, 'column': 8, 'index': 31255}","  962 |         screen.addChild(e);
  963 |
> 964 |         var camera = new pc.Entity();
      |        ^ Global Variable
  965 |         camera.addComponent('camera');
  966 |         app.root.addChild(camera);
  967 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 983, 'column': 8, 'index': 31849}","  981 |         });
  982 |
> 983 |         var spriteAsset = new pc.Asset('red-sprite', 'sprite', {
      |        ^ Global Variable
  984 |             url: 'base/tests/test-assets/sprite/red-sprite.json'
  985 |         });
  986 |         var textureAtlasAsset = new pc.Asset('red-texture', 'texture', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 986, 'column': 8, 'index': 31991}","  984 |             url: 'base/tests/test-assets/sprite/red-sprite.json'
  985 |         });
> 986 |         var textureAtlasAsset = new pc.Asset('red-texture', 'texture', {
      |        ^ Global Variable
  987 |             url: 'base/tests/test-assets/sprite/red-atlas.json'
  988 |         });
  989 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1012, 'column': 8, 'index': 32889}","  1010 |         expect(app.assets.hasEvent('load:' + textureAtlasAsset.id)).to.be.false;
  1011 |
> 1012 |         var e = new pc.Entity();
       |        ^ Global Variable
  1013 |         e.addComponent('element', {
  1014 |             type: 'image',
  1015 |             spriteAsset: spriteAsset.id"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1022, 'column': 8, 'index': 33142}","  1020 |
  1021 |     it('Cloning image element with texture works', function () {
> 1022 |         var e = new pc.Entity();
       |        ^ Global Variable
  1023 |         e.addComponent('element', {
  1024 |             type: 'image',
  1025 |             textureAsset: assets.texture.id"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1028, 'column': 8, 'index': 33295}","  1026 |         });
  1027 |
> 1028 |         var copy = e.clone();
       |        ^ Global Variable
  1029 |
  1030 |         expect(copy.element.textureAsset).to.equal(assets.texture.id);
  1031 |         expect(copy.element.texture).to.equal(e.element.texture);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1035, 'column': 8, 'index': 33550}","  1033 |
  1034 |     it('Setting texture on image element clears texture asset', function () {
> 1035 |         var e = new pc.Entity();
       |        ^ Global Variable
  1036 |         e.addComponent('element', {
  1037 |             type: 'image',
  1038 |             textureAsset: assets.texture.id"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1041, 'column': 8, 'index': 33703}","  1039 |         });
  1040 |
> 1041 |         var texture = new pc.Texture(app.graphicsDevice);
       |        ^ Global Variable
  1042 |
  1043 |         e.element.texture = texture;
  1044 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1050, 'column': 8, 'index': 33993}","  1048 |
  1049 |     it('Setting texture on image element clears sprite asset', function () {
> 1050 |         var e = new pc.Entity();
       |        ^ Global Variable
  1051 |         e.addComponent('element', {
  1052 |             type: 'image',
  1053 |             spriteAsset: assets.sprite.id"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1059, 'column': 8, 'index': 34251}","  1057 |         // expect(e.element.sprite).to.be.not.null;
  1058 |
> 1059 |         var texture = new pc.Texture(app.graphicsDevice);
       |        ^ Global Variable
  1060 |
  1061 |         e.element.texture = texture;
  1062 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1069, 'column': 8, 'index': 34584}","  1067 |
  1068 |     it('Setting texture on image element then cloning works', function () {
> 1069 |         var e = new pc.Entity();
       |        ^ Global Variable
  1070 |         e.addComponent('element', {
  1071 |             type: 'image',
  1072 |             textureAsset: assets.texture.id"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1075, 'column': 8, 'index': 34737}","  1073 |         });
  1074 |
> 1075 |         var texture = new pc.Texture(app.graphicsDevice);
       |        ^ Global Variable
  1076 |
  1077 |         e.element.texture = texture;
  1078 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1079, 'column': 8, 'index': 34834}","  1077 |         e.element.texture = texture;
  1078 |
> 1079 |         var copy = e.clone();
       |        ^ Global Variable
  1080 |
  1081 |         expect(e.element.textureAsset).to.be.null;
  1082 |         expect(e.element.texture).to.equal(texture);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1089, 'column': 8, 'index': 35163}","  1087 |
  1088 |     it('Cloning image element with sprite works', function () {
> 1089 |         var e = new pc.Entity();
       |        ^ Global Variable
  1090 |         e.addComponent('element', {
  1091 |             type: 'image',
  1092 |             spriteAsset: assets.sprite.id"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1095, 'column': 8, 'index': 35314}","  1093 |         });
  1094 |
> 1095 |         var copy = e.clone();
       |        ^ Global Variable
  1096 |
  1097 |         expect(copy.element.spriteAsset).to.equal(assets.sprite.id);
  1098 |         expect(copy.element.sprite).to.equal(e.element.sprite);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1102, 'column': 8, 'index': 35563}","  1100 |
  1101 |     it('Setting sprite on image element clears sprite asset', function () {
> 1102 |         var e = new pc.Entity();
       |        ^ Global Variable
  1103 |         e.addComponent('element', {
  1104 |             type: 'image',
  1105 |             spriteAsset: assets.sprite"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1108, 'column': 8, 'index': 35711}","  1106 |         });
  1107 |
> 1108 |         var sprite = new pc.Sprite(app.graphicsDevice, {
       |        ^ Global Variable
  1109 |             frameKeys: []
  1110 |         });
  1111 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1119, 'column': 8, 'index': 36033}","  1117 |
  1118 |     it('Setting sprite on image element clears texture asset', function () {
> 1119 |         var e = new pc.Entity();
       |        ^ Global Variable
  1120 |         e.addComponent('element', {
  1121 |             type: 'image',
  1122 |             textureAsset: assets.texture"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1128, 'column': 8, 'index': 36292}","  1126 |         // expect(e.element.texture).to.be.not.null;
  1127 |
> 1128 |         var sprite = new pc.Sprite(app.graphicsDevice, {
       |        ^ Global Variable
  1129 |             frameKeys: []
  1130 |         });
  1131 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1140, 'column': 8, 'index': 36659}","  1138 |
  1139 |     it('Setting sprite on image element then cloning works', function () {
> 1140 |         var e = new pc.Entity();
       |        ^ Global Variable
  1141 |         e.addComponent('element', {
  1142 |             type: 'image',
  1143 |             spriteAsset: assets.sprite"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1146, 'column': 8, 'index': 36807}","  1144 |         });
  1145 |
> 1146 |         var sprite = new pc.Sprite(app.graphicsDevice, {
       |        ^ Global Variable
  1147 |             frameKeys: []
  1148 |         });
  1149 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1152, 'column': 8, 'index': 36939}","  1150 |         e.element.sprite = sprite;
  1151 |
> 1152 |         var copy = e.clone();
       |        ^ Global Variable
  1153 |
  1154 |         expect(e.element.spriteAsset).to.be.null;
  1155 |         expect(e.element.sprite).to.equal(e.element.sprite);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1162, 'column': 8, 'index': 37298}","  1160 |
  1161 |     it('Setting texture and changing the fitMode setting changes the mesh', function () {
> 1162 |         var e = new pc.Entity();
       |        ^ Global Variable
  1163 |         e.addComponent('element', {
  1164 |             type: 'image',
  1165 |             width: 50,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1171, 'column': 8, 'index': 37528}","  1169 |         app.root.addChild(e);
  1170 |
> 1171 |         var texture = new pc.Texture(app.graphicsDevice);
       |        ^ Global Variable
  1172 |
  1173 |         e.element.texture = texture;
  1174 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_imageelement.js,Global Variable,"{'line': 1185, 'column': 8, 'index': 38174}","  1183 |
  1184 |         // change aspect ratio should trigger _updateMesh
> 1185 |         var spy = sandbox.spy(pc.ImageElement.prototype, '_updateMesh');
       |        ^ Global Variable
  1186 |         e.element.fitMode = pc.FITMODE_CONTAIN;
  1187 |         expect(spy.calledOnce).to.equal(true);
  1188 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Conditional Test Logic,"{'line': 17, 'column': 8, 'index': 339}","  15 |
  16 |     afterEach(function () {
> 17 |         for (var key in assets) {
     |        ^ Conditional Test Logic
  18 |             assets[key].unload();
  19 |         }
  20 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Conditional Test Logic,"{'line': 624, 'column': 8, 'index': 17625}","  622 |         rtlWidths.spaces = element.width;
  623 |
> 624 |         for (var key in ltrWidths) {
      |        ^ Conditional Test Logic
  625 |             expect(ltrWidths[key]).to.equal(rtlWidths[key]);
  626 |         }
  627 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Conditional Test Logic,"{'line': 675, 'column': 8, 'index': 18922}","  673 |         rtlWidths.spaces = element.width;
  674 |
> 675 |         for (var key in ltrWidths) {
      |        ^ Conditional Test Logic
  676 |             expect(ltrWidths[key]).to.equal(rtlWidths[key]);
  677 |         }
  678 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Conditional Test Logic,"{'line': 1086, 'column': 8, 'index': 33282}","  1084 |
  1085 |         var meshes = element._text._model.meshInstances;
> 1086 |         for (var i = 0; i < meshes.length; i++) {
       |        ^ Conditional Test Logic
  1087 |             var color = meshes[i].getParameter('material_emissive').data;
  1088 |             expect(color[0]).to.equal(1);
  1089 |             expect(color[1]).to.equal(1);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Conditional Test Logic,"{'line': 1113, 'column': 8, 'index': 34284}","  1111 |
  1112 |         var meshes = e.element._text._model.meshInstances;
> 1113 |         for (var i = 0; i < meshes.length; i++) {
       |        ^ Conditional Test Logic
  1114 |             var color = meshes[i].getParameter('material_emissive').data;
  1115 |             expect(color[0]).to.be.closeTo(0.1, 0.001);
  1116 |             expect(color[1]).to.be.closeTo(0.2, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Conditional Test Logic,"{'line': 1133, 'column': 8, 'index': 35110}","  1131 |
  1132 |         var meshes = element._text._model.meshInstances;
> 1133 |         for (var i = 0; i < meshes.length; i++) {
       |        ^ Conditional Test Logic
  1134 |             var color = meshes[i].getParameter('material_emissive').data;
  1135 |             expect(color[0]).to.be.closeTo(0.1, 0.001);
  1136 |             expect(color[1]).to.be.closeTo(0.2, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Conditional Test Logic,"{'line': 1149, 'column': 8, 'index': 35738}","  1147 |
  1148 |         var meshes = element._text._model.meshInstances;
> 1149 |         for (var i = 0; i < meshes.length; i++) {
       |        ^ Conditional Test Logic
  1150 |             var opacity = meshes[i].getParameter('material_opacity').data;
  1151 |             expect(opacity).to.be.closeTo(0.4, 0.001);
  1152 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 134, 'column': 8, 'index': 4223}","  132 |         element.autoWidth = true;
  133 |         element.text = ""abcde fghij klmno pqrst uvwxyz"";
> 134 |         expect(element.lines.length).to.equal(1);
      |        ^ Duplicate Assert
  135 |         element.autoWidth = false;
  136 |         element.width = 200;
  137 |         expect(element.lines.length).to.equal(3);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 137, 'column': 8, 'index': 4337}","  135 |         element.autoWidth = false;
  136 |         element.width = 200;
> 137 |         expect(element.lines.length).to.equal(3);
      |        ^ Duplicate Assert
  138 |     });
  139 |
  140 |     it(""does not break onto multiple lines if the wrapLines is set to false"", function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 153, 'column': 8, 'index': 4899}","  151 |         element.wrapLines = false;
  152 |         element.text = ""abcde fghij klmno pqrst uvwxyz"";
> 153 |         expect(element.lines.length).to.equal(1);
      |        ^ Duplicate Assert
  154 |         element.wrapLines = true;
  155 |         expect(element.lines.length).to.equal(3);
  156 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 155, 'column': 8, 'index': 4983}","  153 |         expect(element.lines.length).to.equal(1);
  154 |         element.wrapLines = true;
> 155 |         expect(element.lines.length).to.equal(3);
      |        ^ Duplicate Assert
  156 |     });
  157 |
  158 |     it(""breaks onto multiple lines if individual lines are too long"", function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 733, 'column': 8, 'index': 21079}","  731 |         element.minFontSize = 8;
  732 |         element.autoFitWidth = true;
> 733 |         expect(element.fontSize).to.equal(8);
      |        ^ Duplicate Assert
  734 |         element.minFontSize = 4;
  735 |         expect(element.fontSize).to.equal(4);
  736 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 735, 'column': 8, 'index': 21158}","  733 |         expect(element.fontSize).to.equal(8);
  734 |         element.minFontSize = 4;
> 735 |         expect(element.fontSize).to.equal(4);
      |        ^ Duplicate Assert
  736 |     });
  737 |
  738 |     it(""does not increase the font size above maxFontSize"", function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 757, 'column': 8, 'index': 21912}","  755 |         element.text = ""abcdefghijklmn"";
  756 |         element.autoFitWidth = true;
> 757 |         expect(element.fontSize).to.equal(10);
      |        ^ Duplicate Assert
  758 |         element.maxFontSize = 11;
  759 |         expect(element.fontSize).to.equal(11);
  760 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 759, 'column': 8, 'index': 21993}","  757 |         expect(element.fontSize).to.equal(10);
  758 |         element.maxFontSize = 11;
> 759 |         expect(element.fontSize).to.equal(11);
      |        ^ Duplicate Assert
  760 |     });
  761 |
  762 |     it(""reduces font size when height is larger then the element height and autoFitHeight is true"", function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 825, 'column': 8, 'index': 24508}","  823 |         element.text = ""ab"";
  824 |         element.autoFitWidth = true;
> 825 |         expect(element.fontSize).to.not.equal(44);
      |        ^ Duplicate Assert
  826 |         element.autoFitWidth = false;
  827 |         expect(element.fontSize).to.equal(44);
  828 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 827, 'column': 8, 'index': 24597}","  825 |         expect(element.fontSize).to.not.equal(44);
  826 |         element.autoFitWidth = false;
> 827 |         expect(element.fontSize).to.equal(44);
      |        ^ Duplicate Assert
  828 |     });
  829 |
  830 |     it('does not change fontSize after setting autoFitWidth to true while autoWidth is already true', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 836, 'column': 8, 'index': 24938}","  834 |         element.autoHeight = false;
  835 |         element.text = ""ab"";
> 836 |         expect(element.fontSize).to.equal(44);
      |        ^ Duplicate Assert
  837 |         element.autoFitWidth = true;
  838 |         expect(element.fontSize).to.equal(44);
  839 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 838, 'column': 8, 'index': 25022}","  836 |         expect(element.fontSize).to.equal(44);
  837 |         element.autoFitWidth = true;
> 838 |         expect(element.fontSize).to.equal(44);
      |        ^ Duplicate Assert
  839 |     });
  840 |
  841 |     it('restores fontSize to maxFontSize after setting autoFitWidth to false if autoFitHeight is true', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 851, 'column': 8, 'index': 25500}","  849 |         element.autoFitWidth = true;
  850 |         element.autoFitHeight = true;
> 851 |         expect(element.fontSize).to.not.equal(44);
      |        ^ Duplicate Assert
  852 |         element.autoFitWidth = false;
  853 |         expect(element.fontSize).to.equal(element.maxFontSize);
  854 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 853, 'column': 8, 'index': 25589}","  851 |         expect(element.fontSize).to.not.equal(44);
  852 |         element.autoFitWidth = false;
> 853 |         expect(element.fontSize).to.equal(element.maxFontSize);
      |        ^ Duplicate Assert
  854 |     });
  855 |
  856 |     it('restores fontSize after setting autoFitHeight to false', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 864, 'column': 8, 'index': 25982}","  862 |         element.text = ""ab\nab"";
  863 |         element.autoFitHeight = true;
> 864 |         expect(element.fontSize).to.not.equal(44);
      |        ^ Duplicate Assert
  865 |         element.autoFitHeight = false;
  866 |         expect(element.fontSize).to.equal(44);
  867 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 866, 'column': 8, 'index': 26072}","  864 |         expect(element.fontSize).to.not.equal(44);
  865 |         element.autoFitHeight = false;
> 866 |         expect(element.fontSize).to.equal(44);
      |        ^ Duplicate Assert
  867 |     });
  868 |
  869 |     it('does not change fontSize after setting autoFitHeight to true while autoHeight is already true', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 875, 'column': 8, 'index': 26419}","  873 |         element.autoHeight = true;
  874 |         element.text = ""ab\nab"";
> 875 |         expect(element.fontSize).to.equal(44);
      |        ^ Duplicate Assert
  876 |         element.autoFitHeight = true;
  877 |         expect(element.fontSize).to.equal(44);
  878 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 877, 'column': 8, 'index': 26504}","  875 |         expect(element.fontSize).to.equal(44);
  876 |         element.autoFitHeight = true;
> 877 |         expect(element.fontSize).to.equal(44);
      |        ^ Duplicate Assert
  878 |     });
  879 |
  880 |     it('restores fontSize to maxFontSize after setting autoFitHeight to false if autoFitWidth is true', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 889, 'column': 8, 'index': 26956}","  887 |         element.autoFitHeight = true;
  888 |         element.autoFitWidth = true;
> 889 |         expect(element.fontSize).to.not.equal(44);
      |        ^ Duplicate Assert
  890 |         element.autoFitHeight = false;
  891 |         expect(element.fontSize).to.equal(element.maxFontSize);
  892 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 891, 'column': 8, 'index': 27046}","  889 |         expect(element.fontSize).to.not.equal(44);
  890 |         element.autoFitHeight = false;
> 891 |         expect(element.fontSize).to.equal(element.maxFontSize);
      |        ^ Duplicate Assert
  892 |     });
  893 |
  894 |     it('restores fontSize if autoFitWidth is true and autoWidth becomes true', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 902, 'column': 8, 'index': 27447}","  900 |         element.text = ""ab"";
  901 |         element.autoFitWidth = true;
> 902 |         expect(element.fontSize).to.not.equal(44);
      |        ^ Duplicate Assert
  903 |         element.autoWidth = true;
  904 |         expect(element.fontSize).to.equal(44);
  905 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 904, 'column': 8, 'index': 27532}","  902 |         expect(element.fontSize).to.not.equal(44);
  903 |         element.autoWidth = true;
> 904 |         expect(element.fontSize).to.equal(44);
      |        ^ Duplicate Assert
  905 |     });
  906 |
  907 |     it('restores fontSize if autoFitHeight is true and autoHeight becomes true', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 915, 'column': 8, 'index': 27924}","  913 |         element.text = ""ab\nab"";
  914 |         element.autoFitHeight = true;
> 915 |         expect(element.fontSize).to.not.equal(44);
      |        ^ Duplicate Assert
  916 |         element.autoHeight = true;
  917 |         expect(element.fontSize).to.equal(44);
  918 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 917, 'column': 8, 'index': 28010}","  915 |         expect(element.fontSize).to.not.equal(44);
  916 |         element.autoHeight = true;
> 917 |         expect(element.fontSize).to.equal(44);
      |        ^ Duplicate Assert
  918 |     });
  919 |
  920 |     it('restores fontSize to maxFontSize when autoHeight becomes true while autoFitHeight and autoFitWidth are true', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 930, 'column': 8, 'index': 28506}","  928 |         element.autoFitWidth = true;
  929 |         element.autoFitHeight = true;
> 930 |         expect(element.fontSize).to.not.equal(44);
      |        ^ Duplicate Assert
  931 |         element.autoHeight = true;
  932 |         expect(element.fontSize).to.equal(element.maxFontSize);
  933 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 932, 'column': 8, 'index': 28592}","  930 |         expect(element.fontSize).to.not.equal(44);
  931 |         element.autoHeight = true;
> 932 |         expect(element.fontSize).to.equal(element.maxFontSize);
      |        ^ Duplicate Assert
  933 |     });
  934 |
  935 |     it('restores fontSize to maxFontSize when autoWidth becomes true while autoFitHeight and autoFitWidth are true', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 944, 'column': 8, 'index': 29072}","  942 |         element.autoFitWidth = true;
  943 |         element.autoFitHeight = true;
> 944 |         expect(element.fontSize).to.not.equal(44);
      |        ^ Duplicate Assert
  945 |         element.autoWidth = true;
  946 |         expect(element.fontSize).to.equal(element.maxFontSize);
  947 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 946, 'column': 8, 'index': 29157}","  944 |         expect(element.fontSize).to.not.equal(44);
  945 |         element.autoWidth = true;
> 946 |         expect(element.fontSize).to.equal(element.maxFontSize);
      |        ^ Duplicate Assert
  947 |     });
  948 |
  949 |     it('AssetRegistry events unbound on destroy for font asset', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 957, 'column': 8, 'index': 29448}","  955 |         });
  956 |
> 957 |         expect(app.assets.hasEvent('add:123456')).to.be.true;
      |        ^ Duplicate Assert
  958 |
  959 |         e.destroy();
  960 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 961, 'column': 8, 'index': 29533}","  959 |         e.destroy();
  960 |
> 961 |         expect(app.assets.hasEvent('add:123456')).to.be.false;
      |        ^ Duplicate Assert
  962 |     });
  963 |
  964 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 966, 'column': 8, 'index': 29661}","  964 |
  965 |     it('Font assets unbound when reset', function () {
> 966 |         expect(assets.font.hasEvent('add')).to.be.false;
      |        ^ Duplicate Assert
  967 |         expect(assets.font.hasEvent('change')).to.be.false;
  968 |         expect(assets.font.hasEvent('load')).to.be.false;
  969 |         expect(assets.font.hasEvent('remove')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 967, 'column': 8, 'index': 29718}","  965 |     it('Font assets unbound when reset', function () {
  966 |         expect(assets.font.hasEvent('add')).to.be.false;
> 967 |         expect(assets.font.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  968 |         expect(assets.font.hasEvent('load')).to.be.false;
  969 |         expect(assets.font.hasEvent('remove')).to.be.false;
  970 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 968, 'column': 8, 'index': 29778}","  966 |         expect(assets.font.hasEvent('add')).to.be.false;
  967 |         expect(assets.font.hasEvent('change')).to.be.false;
> 968 |         expect(assets.font.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  969 |         expect(assets.font.hasEvent('remove')).to.be.false;
  970 |
  971 |         var e = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 969, 'column': 8, 'index': 29836}","  967 |         expect(assets.font.hasEvent('change')).to.be.false;
  968 |         expect(assets.font.hasEvent('load')).to.be.false;
> 969 |         expect(assets.font.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  970 |
  971 |         var e = new pc.Entity();
  972 |         e.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 979, 'column': 8, 'index': 30077}","  977 |         e.element.fontAsset = null;
  978 |
> 979 |         expect(assets.font.hasEvent('add')).to.be.false;
      |        ^ Duplicate Assert
  980 |         expect(assets.font.hasEvent('change')).to.be.false;
  981 |         expect(assets.font.hasEvent('load')).to.be.false;
  982 |         expect(assets.font.hasEvent('remove')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 980, 'column': 8, 'index': 30134}","  978 |
  979 |         expect(assets.font.hasEvent('add')).to.be.false;
> 980 |         expect(assets.font.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  981 |         expect(assets.font.hasEvent('load')).to.be.false;
  982 |         expect(assets.font.hasEvent('remove')).to.be.false;
  983 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 981, 'column': 8, 'index': 30194}","  979 |         expect(assets.font.hasEvent('add')).to.be.false;
  980 |         expect(assets.font.hasEvent('change')).to.be.false;
> 981 |         expect(assets.font.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  982 |         expect(assets.font.hasEvent('remove')).to.be.false;
  983 |     });
  984 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 982, 'column': 8, 'index': 30252}","  980 |         expect(assets.font.hasEvent('change')).to.be.false;
  981 |         expect(assets.font.hasEvent('load')).to.be.false;
> 982 |         expect(assets.font.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  983 |     });
  984 |
  985 |     it('Font assets unbound when destroy', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 986, 'column': 8, 'index': 30378}","  984 |
  985 |     it('Font assets unbound when destroy', function () {
> 986 |         expect(assets.font.hasEvent('add')).to.be.false;
      |        ^ Duplicate Assert
  987 |         expect(assets.font.hasEvent('change')).to.be.false;
  988 |         expect(assets.font.hasEvent('load')).to.be.false;
  989 |         expect(assets.font.hasEvent('remove')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 987, 'column': 8, 'index': 30435}","  985 |     it('Font assets unbound when destroy', function () {
  986 |         expect(assets.font.hasEvent('add')).to.be.false;
> 987 |         expect(assets.font.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  988 |         expect(assets.font.hasEvent('load')).to.be.false;
  989 |         expect(assets.font.hasEvent('remove')).to.be.false;
  990 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 988, 'column': 8, 'index': 30495}","  986 |         expect(assets.font.hasEvent('add')).to.be.false;
  987 |         expect(assets.font.hasEvent('change')).to.be.false;
> 988 |         expect(assets.font.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  989 |         expect(assets.font.hasEvent('remove')).to.be.false;
  990 |
  991 |         var e = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 989, 'column': 8, 'index': 30553}","  987 |         expect(assets.font.hasEvent('change')).to.be.false;
  988 |         expect(assets.font.hasEvent('load')).to.be.false;
> 989 |         expect(assets.font.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  990 |
  991 |         var e = new pc.Entity();
  992 |         e.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 999, 'column': 8, 'index': 30779}","   997 |         e.destroy();
   998 |
>  999 |         expect(assets.font.hasEvent('add')).to.be.false;
       |        ^ Duplicate Assert
  1000 |         expect(assets.font.hasEvent('change')).to.be.false;
  1001 |         expect(assets.font.hasEvent('load')).to.be.false;
  1002 |         expect(assets.font.hasEvent('remove')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1000, 'column': 8, 'index': 30836}","   998 |
   999 |         expect(assets.font.hasEvent('add')).to.be.false;
> 1000 |         expect(assets.font.hasEvent('change')).to.be.false;
       |        ^ Duplicate Assert
  1001 |         expect(assets.font.hasEvent('load')).to.be.false;
  1002 |         expect(assets.font.hasEvent('remove')).to.be.false;
  1003 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1001, 'column': 8, 'index': 30896}","   999 |         expect(assets.font.hasEvent('add')).to.be.false;
  1000 |         expect(assets.font.hasEvent('change')).to.be.false;
> 1001 |         expect(assets.font.hasEvent('load')).to.be.false;
       |        ^ Duplicate Assert
  1002 |         expect(assets.font.hasEvent('remove')).to.be.false;
  1003 |     });
  1004 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1002, 'column': 8, 'index': 30954}","  1000 |         expect(assets.font.hasEvent('change')).to.be.false;
  1001 |         expect(assets.font.hasEvent('load')).to.be.false;
> 1002 |         expect(assets.font.hasEvent('remove')).to.be.false;
       |        ^ Duplicate Assert
  1003 |     });
  1004 |
  1005 |     it('Font assets to be bound once when enabled late', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1006, 'column': 8, 'index': 31094}","  1004 |
  1005 |     it('Font assets to be bound once when enabled late', function () {
> 1006 |         expect(assets.font.hasEvent('add')).to.be.false;
       |        ^ Duplicate Assert
  1007 |         expect(assets.font.hasEvent('change')).to.be.false;
  1008 |         expect(assets.font.hasEvent('load')).to.be.false;
  1009 |         expect(assets.font.hasEvent('remove')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1007, 'column': 8, 'index': 31151}","  1005 |     it('Font assets to be bound once when enabled late', function () {
  1006 |         expect(assets.font.hasEvent('add')).to.be.false;
> 1007 |         expect(assets.font.hasEvent('change')).to.be.false;
       |        ^ Duplicate Assert
  1008 |         expect(assets.font.hasEvent('load')).to.be.false;
  1009 |         expect(assets.font.hasEvent('remove')).to.be.false;
  1010 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1008, 'column': 8, 'index': 31211}","  1006 |         expect(assets.font.hasEvent('add')).to.be.false;
  1007 |         expect(assets.font.hasEvent('change')).to.be.false;
> 1008 |         expect(assets.font.hasEvent('load')).to.be.false;
       |        ^ Duplicate Assert
  1009 |         expect(assets.font.hasEvent('remove')).to.be.false;
  1010 |
  1011 |         var e = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1009, 'column': 8, 'index': 31269}","  1007 |         expect(assets.font.hasEvent('change')).to.be.false;
  1008 |         expect(assets.font.hasEvent('load')).to.be.false;
> 1009 |         expect(assets.font.hasEvent('remove')).to.be.false;
       |        ^ Duplicate Assert
  1010 |
  1011 |         var e = new pc.Entity();
  1012 |         e.enabled = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1023, 'column': 8, 'index': 31594}","  1021 |         e.element.fontAsset = null;
  1022 |
> 1023 |         expect(assets.font.hasEvent('add')).to.be.false;
       |        ^ Duplicate Assert
  1024 |         expect(assets.font.hasEvent('change')).to.be.false;
  1025 |         expect(assets.font.hasEvent('load')).to.be.false;
  1026 |         expect(assets.font.hasEvent('remove')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1024, 'column': 8, 'index': 31651}","  1022 |
  1023 |         expect(assets.font.hasEvent('add')).to.be.false;
> 1024 |         expect(assets.font.hasEvent('change')).to.be.false;
       |        ^ Duplicate Assert
  1025 |         expect(assets.font.hasEvent('load')).to.be.false;
  1026 |         expect(assets.font.hasEvent('remove')).to.be.false;
  1027 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1025, 'column': 8, 'index': 31711}","  1023 |         expect(assets.font.hasEvent('add')).to.be.false;
  1024 |         expect(assets.font.hasEvent('change')).to.be.false;
> 1025 |         expect(assets.font.hasEvent('load')).to.be.false;
       |        ^ Duplicate Assert
  1026 |         expect(assets.font.hasEvent('remove')).to.be.false;
  1027 |     });
  1028 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1026, 'column': 8, 'index': 31769}","  1024 |         expect(assets.font.hasEvent('change')).to.be.false;
  1025 |         expect(assets.font.hasEvent('load')).to.be.false;
> 1026 |         expect(assets.font.hasEvent('remove')).to.be.false;
       |        ^ Duplicate Assert
  1027 |     });
  1028 |
  1029 |     it('CanvasFont render event is unbound when reset', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1036, 'column': 8, 'index': 32028}","  1034 |         cf.createTextures('abc');
  1035 |
> 1036 |         expect(cf.hasEvent('render')).to.be.false;
       |        ^ Duplicate Assert
  1037 |
  1038 |         var e = new pc.Entity();
  1039 |         e.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1047, 'column': 8, 'index': 32272}","  1045 |         e.element.font = cf;
  1046 |
> 1047 |         expect(cf.hasEvent('render')).to.be.true;
       |        ^ Duplicate Assert
  1048 |
  1049 |         e.element.font = null;
  1050 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1051, 'column': 8, 'index': 32355}","  1049 |         e.element.font = null;
  1050 |
> 1051 |         expect(cf.hasEvent('render')).to.be.false;
       |        ^ Duplicate Assert
  1052 |     });
  1053 |
  1054 |     it('CanvasFont render event is unbound on destroy', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1061, 'column': 8, 'index': 32605}","  1059 |         cf.createTextures('abc');
  1060 |
> 1061 |         expect(cf.hasEvent('render')).to.be.false;
       |        ^ Duplicate Assert
  1062 |
  1063 |         var e = new pc.Entity();
  1064 |         e.addComponent('element', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1072, 'column': 8, 'index': 32849}","  1070 |         e.element.font = cf;
  1071 |
> 1072 |         expect(cf.hasEvent('render')).to.be.true;
       |        ^ Duplicate Assert
  1073 |
  1074 |         e.destroy();
  1075 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1076, 'column': 8, 'index': 32922}","  1074 |         e.destroy();
  1075 |
> 1076 |         expect(cf.hasEvent('render')).to.be.false;
       |        ^ Duplicate Assert
  1077 |     });
  1078 |
  1079 |     it(""defaults to white color and opacity 1"", function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1234, 'column': 8, 'index': 38381}","  1232 |         var meshInstance = e.element._text._model.meshInstances[0];
  1233 |
> 1234 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.true;
       |        ^ Duplicate Assert
  1235 |
  1236 |         // move just off screen
  1237 |         e.translateLocal(canvasWidth+(100/2)+0.001,0,0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1241, 'column': 8, 'index': 38598}","  1239 |         app.update(0.1);
  1240 |         app.render();
> 1241 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.false;
       |        ^ Duplicate Assert
  1242 |
  1243 |         // move just on screen
  1244 |         e.translateLocal(-1, 0, 0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1248, 'column': 8, 'index': 38794}","  1246 |         app.update(0.1);
  1247 |         app.render();
> 1248 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.true;
       |        ^ Duplicate Assert
  1249 |
  1250 |     });
  1251 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1285, 'column': 8, 'index': 39800}","  1283 |         var meshInstance = e.element._text._model.meshInstances[0];
  1284 |
> 1285 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.true;
       |        ^ Duplicate Assert
  1286 |
  1287 |         // move just off screen
  1288 |         e.translateLocal(canvasWidth+(e.element.width/2)+0.001,0,0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1292, 'column': 8, 'index': 40029}","  1290 |         app.update(0.1);
  1291 |         app.render();
> 1292 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.false;
       |        ^ Duplicate Assert
  1293 |
  1294 |         // move just on screen
  1295 |         e.translateLocal(-1, 0, 0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1299, 'column': 8, 'index': 40225}","  1297 |         app.update(0.1);
  1298 |         app.render();
> 1299 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.true;
       |        ^ Duplicate Assert
  1300 |     });
  1301 |
  1302 |     it('Offscreen child element is culled', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1347, 'column': 8, 'index': 41576}","  1345 |         app.update(0.1);
  1346 |         app.render();
> 1347 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.true;
       |        ^ Duplicate Assert
  1348 |
  1349 |         // move just off screen
  1350 |         parent.translateLocal(50, 50, 0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1356, 'column': 8, 'index': 41844}","  1354 |         app.update(0.1);
  1355 |         app.render();
> 1356 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.false;
       |        ^ Duplicate Assert
  1357 |     });
  1358 |
  1359 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1586, 'column': 8, 'index': 49262}","  1584 |
  1585 |     it('text element removes i18n event listeners on destroy', function () {
> 1586 |         expect(app.i18n.hasEvent('set:locale')).to.equal(true);
       |        ^ Duplicate Assert
  1587 |         expect(app.i18n.hasEvent('data:add')).to.equal(true);
  1588 |         expect(app.i18n.hasEvent('data:remove')).to.equal(true);
  1589 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1587, 'column': 8, 'index': 49326}","  1585 |     it('text element removes i18n event listeners on destroy', function () {
  1586 |         expect(app.i18n.hasEvent('set:locale')).to.equal(true);
> 1587 |         expect(app.i18n.hasEvent('data:add')).to.equal(true);
       |        ^ Duplicate Assert
  1588 |         expect(app.i18n.hasEvent('data:remove')).to.equal(true);
  1589 |
  1590 |         element.entity.destroy();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1588, 'column': 8, 'index': 49388}","  1586 |         expect(app.i18n.hasEvent('set:locale')).to.equal(true);
  1587 |         expect(app.i18n.hasEvent('data:add')).to.equal(true);
> 1588 |         expect(app.i18n.hasEvent('data:remove')).to.equal(true);
       |        ^ Duplicate Assert
  1589 |
  1590 |         element.entity.destroy();
  1591 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1592, 'column': 8, 'index': 49489}","  1590 |         element.entity.destroy();
  1591 |
> 1592 |         expect(app.i18n.hasEvent('set:locale')).to.equal(false);
       |        ^ Duplicate Assert
  1593 |         expect(app.i18n.hasEvent('data:add')).to.equal(false);
  1594 |         expect(app.i18n.hasEvent('data:remove')).to.equal(false);
  1595 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1593, 'column': 8, 'index': 49554}","  1591 |
  1592 |         expect(app.i18n.hasEvent('set:locale')).to.equal(false);
> 1593 |         expect(app.i18n.hasEvent('data:add')).to.equal(false);
       |        ^ Duplicate Assert
  1594 |         expect(app.i18n.hasEvent('data:remove')).to.equal(false);
  1595 |     });
  1596 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Duplicate Assert,"{'line': 1594, 'column': 8, 'index': 49617}","  1592 |         expect(app.i18n.hasEvent('set:locale')).to.equal(false);
  1593 |         expect(app.i18n.hasEvent('data:add')).to.equal(false);
> 1594 |         expect(app.i18n.hasEvent('data:remove')).to.equal(false);
       |        ^ Duplicate Assert
  1595 |     });
  1596 |
  1597 |     it('text markup color tag', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 2, 'column': 4, 'index': 45}","  1 | describe(""pc.TextElement"", function () {
> 2 |     var app;
    |    ^ Global Variable
  3 |     var assets;
  4 |     var entity;
  5 |     var element;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 3, 'column': 4, 'index': 58}","  1 | describe(""pc.TextElement"", function () {
  2 |     var app;
> 3 |     var assets;
    |    ^ Global Variable
  4 |     var entity;
  5 |     var element;
  6 |     var fontAsset;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 4, 'column': 4, 'index': 74}","  2 |     var app;
  3 |     var assets;
> 4 |     var entity;
    |    ^ Global Variable
  5 |     var element;
  6 |     var fontAsset;
  7 |     var canvas;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 5, 'column': 4, 'index': 90}","  3 |     var assets;
  4 |     var entity;
> 5 |     var element;
    |    ^ Global Variable
  6 |     var fontAsset;
  7 |     var canvas;
  8 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 6, 'column': 4, 'index': 107}","  4 |     var entity;
  5 |     var element;
> 6 |     var fontAsset;
    |    ^ Global Variable
  7 |     var canvas;
  8 |
  9 |     beforeEach(function (done) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 7, 'column': 4, 'index': 126}","   5 |     var element;
   6 |     var fontAsset;
>  7 |     var canvas;
     |    ^ Global Variable
   8 |
   9 |     beforeEach(function (done) {
  10 |         canvas = document.createElement(""canvas"");"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 17, 'column': 13, 'index': 344}","  15 |
  16 |     afterEach(function () {
> 17 |         for (var key in assets) {
     |             ^ Global Variable
  18 |             assets[key].unload();
  19 |         }
  20 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 27, 'column': 4, 'index': 515}","  25 |     });
  26 |
> 27 |     var buildElement = function (callback) {
     |    ^ Global Variable
  28 |         entity = new pc.Entity(""myEntity"", app);
  29 |         element = app.systems.element.addComponent(entity, { type: pc.ELEMENTTYPE_TEXT });
  30 |         element.autoWidth = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 55, 'column': 4, 'index': 1341}","  53 |     };
  54 |
> 55 |     var assertLineContents = function (expectedLineContents) {
     |    ^ Global Variable
  56 |         expect(element.lines.length).to.equal(expectedLineContents.length);
  57 |         expect(element.lines).to.deep.equal(expectedLineContents);
  58 |     };"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 60, 'column': 4, 'index': 1555}","  58 |     };
  59 |
> 60 |     var assertLineColors = function (expectedLineColors) {
     |    ^ Global Variable
  61 |         expect(element._text.symbolColors.length).to.equal(expectedLineColors.length);
  62 |         expect(element._text.symbolColors).to.deep.equal(expectedLineColors);
  63 |     };"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 65, 'column': 4, 'index': 1787}","  63 |     };
  64 |
> 65 |     var assertLineOutlineParams = function (expectedLineOutlineParams) {
     |    ^ Global Variable
  66 |         expect(element._text.symbolOutlineParams.length).to.equal(expectedLineOutlineParams.length);
  67 |         expect(element._text.symbolOutlineParams).to.deep.equal(expectedLineOutlineParams);
  68 |     };"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 70, 'column': 4, 'index': 2061}","  68 |     };
  69 |
> 70 |     var assertLineShadowParams = function (expectedLineShadowParams) {
     |    ^ Global Variable
  71 |         expect(element._text.symbolShadowParams.length).to.equal(expectedLineShadowParams.length);
  72 |         expect(element._text.symbolShadowParams).to.deep.equal(expectedLineShadowParams);
  73 |     };"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 76, 'column': 4, 'index': 2401}","  74 |
  75 |     // Creates data for a single translation as if it was a whole asset
> 76 |     var createTranslation = function (locale, key, translations) {
     |    ^ Global Variable
  77 |         var messages = {};
  78 |         messages[key] = translations;
  79 |         var data = {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 77, 'column': 8, 'index': 2472}","  75 |     // Creates data for a single translation as if it was a whole asset
  76 |     var createTranslation = function (locale, key, translations) {
> 77 |         var messages = {};
     |        ^ Global Variable
  78 |         messages[key] = translations;
  79 |         var data = {
  80 |             header: {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 79, 'column': 8, 'index': 2537}","  77 |         var messages = {};
  78 |         messages[key] = translations;
> 79 |         var data = {
     |        ^ Global Variable
  80 |             header: {
  81 |                 version: 1
  82 |             },"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 96, 'column': 4, 'index': 2957}","  94 |     // Adds the specified key->translations pair for the specified locale to
  95 |     // the specified i18n instance, as if it's adding a whole new asset
> 96 |     var addText = function (locale, key, translations) {
     |    ^ Global Variable
  97 |         var data = createTranslation(locale, key, translations);
  98 |         app.i18n.addData(data);
  99 |         return data;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 97, 'column': 8, 'index': 3018}","   95 |     // the specified i18n instance, as if it's adding a whole new asset
   96 |     var addText = function (locale, key, translations) {
>  97 |         var data = createTranslation(locale, key, translations);
      |        ^ Global Variable
   98 |         app.i18n.addData(data);
   99 |         return data;
  100 |     };"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 102, 'column': 4, 'index': 3140}","  100 |     };
  101 |
> 102 |     var registerRtlHandler = function (lineBreakChar) {
      |    ^ Global Variable
  103 |         app.systems.element.registerRtlReorder(function (symbols) {
  104 |             var mapping = symbols.map(function (s, i) {
  105 |                 return i;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 104, 'column': 12, 'index': 3272}","  102 |     var registerRtlHandler = function (lineBreakChar) {
  103 |         app.systems.element.registerRtlReorder(function (symbols) {
> 104 |             var mapping = symbols.map(function (s, i) {
      |            ^ Global Variable
  105 |                 return i;
  106 |             });
  107 |             return {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 592, 'column': 8, 'index': 16844}","  590 |         element.wrapLines = false;
  591 |
> 592 |         var ltrWidths = {
      |        ^ Global Variable
  593 |             oneLine: 0,
  594 |             spaces: 0,
  595 |             newLines: 0"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 598, 'column': 8, 'index': 16953}","  596 |         };
  597 |
> 598 |         var rtlWidths = Object.assign({}, ltrWidths);
      |        ^ Global Variable
  599 |
  600 |         // new lines
  601 |         element.text = 'abcdefghij';"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 624, 'column': 13, 'index': 17630}","  622 |         rtlWidths.spaces = element.width;
  623 |
> 624 |         for (var key in ltrWidths) {
      |             ^ Global Variable
  625 |             expect(ltrWidths[key]).to.equal(rtlWidths[key]);
  626 |         }
  627 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 630, 'column': 8, 'index': 17840}","  628 |
  629 |     it(""rtl and ltr text in one line using CanvasFont ends up with the same width"", function () {
> 630 |         var cf = new pc.CanvasFont(app, {
      |        ^ Global Variable
  631 |             fontName: 'Arial',
  632 |             fontSize: 64,
  633 |             width: 1024,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 643, 'column': 8, 'index': 18141}","  641 |         element.wrapLines = false;
  642 |
> 643 |         var ltrWidths = {
      |        ^ Global Variable
  644 |             oneLine: 0,
  645 |             spaces: 0,
  646 |             newLines: 0"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 649, 'column': 8, 'index': 18250}","  647 |         };
  648 |
> 649 |         var rtlWidths = Object.assign({}, ltrWidths);
      |        ^ Global Variable
  650 |
  651 |         // new lines
  652 |         element.text = 'abcdefghij';"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 675, 'column': 13, 'index': 18927}","  673 |         rtlWidths.spaces = element.width;
  674 |
> 675 |         for (var key in ltrWidths) {
      |             ^ Global Variable
  676 |             expect(ltrWidths[key]).to.equal(rtlWidths[key]);
  677 |         }
  678 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 687, 'column': 8, 'index': 19318}","  685 |         element.text = ""ab"";
  686 |
> 687 |         var width = element.calculatedWidth;
      |        ^ Global Variable
  688 |         var textWidth = element._text.width;
  689 |         element.autoFitWidth = true;
  690 |         expect(element.fontSize).to.equal(Math.floor(32 * width / textWidth));"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 688, 'column': 8, 'index': 19363}","  686 |
  687 |         var width = element.calculatedWidth;
> 688 |         var textWidth = element._text.width;
      |        ^ Global Variable
  689 |         element.autoFitWidth = true;
  690 |         expect(element.fontSize).to.equal(Math.floor(32 * width / textWidth));
  691 |         expect(element._text._scaledLineHeight).to.equal(32 * element.fontSize / element.maxFontSize);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 950, 'column': 8, 'index': 29309}","  948 |
  949 |     it('AssetRegistry events unbound on destroy for font asset', function () {
> 950 |         var e = new pc.Entity();
      |        ^ Global Variable
  951 |
  952 |         e.addComponent('element', {
  953 |             type: 'text',"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 971, 'column': 8, 'index': 29897}","  969 |         expect(assets.font.hasEvent('remove')).to.be.false;
  970 |
> 971 |         var e = new pc.Entity();
      |        ^ Global Variable
  972 |         e.addComponent('element', {
  973 |             type: 'text',
  974 |             fontAsset: assets.font"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 991, 'column': 8, 'index': 30614}","  989 |         expect(assets.font.hasEvent('remove')).to.be.false;
  990 |
> 991 |         var e = new pc.Entity();
      |        ^ Global Variable
  992 |         e.addComponent('element', {
  993 |             type: 'text',
  994 |             fontAsset: assets.font"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1011, 'column': 8, 'index': 31330}","  1009 |         expect(assets.font.hasEvent('remove')).to.be.false;
  1010 |
> 1011 |         var e = new pc.Entity();
       |        ^ Global Variable
  1012 |         e.enabled = false;
  1013 |         e.addComponent('element', {
  1014 |             type: 'text',"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1030, 'column': 8, 'index': 31908}","  1028 |
  1029 |     it('CanvasFont render event is unbound when reset', function () {
> 1030 |         var cf = new pc.CanvasFont(app, {
       |        ^ Global Variable
  1031 |             fontName: 'Arial'
  1032 |         });
  1033 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1038, 'column': 8, 'index': 32080}","  1036 |         expect(cf.hasEvent('render')).to.be.false;
  1037 |
> 1038 |         var e = new pc.Entity();
       |        ^ Global Variable
  1039 |         e.addComponent('element', {
  1040 |             type: 'text',
  1041 |             text: 'abc'"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1055, 'column': 8, 'index': 32485}","  1053 |
  1054 |     it('CanvasFont render event is unbound on destroy', function () {
> 1055 |         var cf = new pc.CanvasFont(app, {
       |        ^ Global Variable
  1056 |             fontName: 'Arial'
  1057 |         });
  1058 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1063, 'column': 8, 'index': 32657}","  1061 |         expect(cf.hasEvent('render')).to.be.false;
  1062 |
> 1063 |         var e = new pc.Entity();
       |        ^ Global Variable
  1064 |         e.addComponent('element', {
  1065 |             type: 'text',
  1066 |             text: 'abc'"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1085, 'column': 8, 'index': 33225}","  1083 |         expect(element.opacity).to.equal(1);
  1084 |
> 1085 |         var meshes = element._text._model.meshInstances;
       |        ^ Global Variable
  1086 |         for (var i = 0; i < meshes.length; i++) {
  1087 |             var color = meshes[i].getParameter('material_emissive').data;
  1088 |             expect(color[0]).to.equal(1);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1086, 'column': 13, 'index': 33287}","  1084 |
  1085 |         var meshes = element._text._model.meshInstances;
> 1086 |         for (var i = 0; i < meshes.length; i++) {
       |             ^ Global Variable
  1087 |             var color = meshes[i].getParameter('material_emissive').data;
  1088 |             expect(color[0]).to.equal(1);
  1089 |             expect(color[1]).to.equal(1);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1087, 'column': 12, 'index': 33336}","  1085 |         var meshes = element._text._model.meshInstances;
  1086 |         for (var i = 0; i < meshes.length; i++) {
> 1087 |             var color = meshes[i].getParameter('material_emissive').data;
       |            ^ Global Variable
  1088 |             expect(color[0]).to.equal(1);
  1089 |             expect(color[1]).to.equal(1);
  1090 |             expect(color[2]).to.equal(1);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1092, 'column': 12, 'index': 33537}","  1090 |             expect(color[2]).to.equal(1);
  1091 |
> 1092 |             var opacity = meshes[i].getParameter('material_opacity').data;
       |            ^ Global Variable
  1093 |             expect(opacity).to.equal(1);
  1094 |         }
  1095 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1098, 'column': 8, 'index': 33743}","  1096 |
  1097 |     it(""uses color and opacity passed in addComponent data"", function () {
> 1098 |         var e = new pc.Entity();
       |        ^ Global Variable
  1099 |         e.addComponent('element', {
  1100 |             type: 'text',
  1101 |             text: 'test',"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1112, 'column': 8, 'index': 34225}","  1110 |         expect(e.element.opacity).to.be.closeTo(0.4, 0.001);
  1111 |
> 1112 |         var meshes = e.element._text._model.meshInstances;
       |        ^ Global Variable
  1113 |         for (var i = 0; i < meshes.length; i++) {
  1114 |             var color = meshes[i].getParameter('material_emissive').data;
  1115 |             expect(color[0]).to.be.closeTo(0.1, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1113, 'column': 13, 'index': 34289}","  1111 |
  1112 |         var meshes = e.element._text._model.meshInstances;
> 1113 |         for (var i = 0; i < meshes.length; i++) {
       |             ^ Global Variable
  1114 |             var color = meshes[i].getParameter('material_emissive').data;
  1115 |             expect(color[0]).to.be.closeTo(0.1, 0.001);
  1116 |             expect(color[1]).to.be.closeTo(0.2, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1114, 'column': 12, 'index': 34338}","  1112 |         var meshes = e.element._text._model.meshInstances;
  1113 |         for (var i = 0; i < meshes.length; i++) {
> 1114 |             var color = meshes[i].getParameter('material_emissive').data;
       |            ^ Global Variable
  1115 |             expect(color[0]).to.be.closeTo(0.1, 0.001);
  1116 |             expect(color[1]).to.be.closeTo(0.2, 0.001);
  1117 |             expect(color[2]).to.be.closeTo(0.3, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1119, 'column': 12, 'index': 34581}","  1117 |             expect(color[2]).to.be.closeTo(0.3, 0.001);
  1118 |
> 1119 |             var opacity = meshes[i].getParameter('material_opacity').data;
       |            ^ Global Variable
  1120 |             expect(opacity).to.be.closeTo(0.4, 0.001);
  1121 |         }
  1122 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1132, 'column': 8, 'index': 35053}","  1130 |         expect(element.opacity).to.be.closeTo(1, 0.001);
  1131 |
> 1132 |         var meshes = element._text._model.meshInstances;
       |        ^ Global Variable
  1133 |         for (var i = 0; i < meshes.length; i++) {
  1134 |             var color = meshes[i].getParameter('material_emissive').data;
  1135 |             expect(color[0]).to.be.closeTo(0.1, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1133, 'column': 13, 'index': 35115}","  1131 |
  1132 |         var meshes = element._text._model.meshInstances;
> 1133 |         for (var i = 0; i < meshes.length; i++) {
       |             ^ Global Variable
  1134 |             var color = meshes[i].getParameter('material_emissive').data;
  1135 |             expect(color[0]).to.be.closeTo(0.1, 0.001);
  1136 |             expect(color[1]).to.be.closeTo(0.2, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1134, 'column': 12, 'index': 35164}","  1132 |         var meshes = element._text._model.meshInstances;
  1133 |         for (var i = 0; i < meshes.length; i++) {
> 1134 |             var color = meshes[i].getParameter('material_emissive').data;
       |            ^ Global Variable
  1135 |             expect(color[0]).to.be.closeTo(0.1, 0.001);
  1136 |             expect(color[1]).to.be.closeTo(0.2, 0.001);
  1137 |             expect(color[2]).to.be.closeTo(0.3, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1139, 'column': 12, 'index': 35407}","  1137 |             expect(color[2]).to.be.closeTo(0.3, 0.001);
  1138 |
> 1139 |             var opacity = meshes[i].getParameter('material_opacity').data;
       |            ^ Global Variable
  1140 |             expect(opacity).to.be.closeTo(1, 0.001);
  1141 |         }
  1142 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1148, 'column': 8, 'index': 35681}","  1146 |         expect(element.opacity).to.be.closeTo(0.4, 0.001);
  1147 |
> 1148 |         var meshes = element._text._model.meshInstances;
       |        ^ Global Variable
  1149 |         for (var i = 0; i < meshes.length; i++) {
  1150 |             var opacity = meshes[i].getParameter('material_opacity').data;
  1151 |             expect(opacity).to.be.closeTo(0.4, 0.001);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1149, 'column': 13, 'index': 35743}","  1147 |
  1148 |         var meshes = element._text._model.meshInstances;
> 1149 |         for (var i = 0; i < meshes.length; i++) {
       |             ^ Global Variable
  1150 |             var opacity = meshes[i].getParameter('material_opacity').data;
  1151 |             expect(opacity).to.be.closeTo(0.4, 0.001);
  1152 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1150, 'column': 12, 'index': 35792}","  1148 |         var meshes = element._text._model.meshInstances;
  1149 |         for (var i = 0; i < meshes.length; i++) {
> 1150 |             var opacity = meshes[i].getParameter('material_opacity').data;
       |            ^ Global Variable
  1151 |             expect(opacity).to.be.closeTo(0.4, 0.001);
  1152 |         }
  1153 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1157, 'column': 8, 'index': 35996}","  1155 |
  1156 |     it(""cloned text component is complete"", function () {
> 1157 |         var e = new pc.Entity();
       |        ^ Global Variable
  1158 |
  1159 |         e.addComponent('element', {
  1160 |             type: 'text',"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1165, 'column': 8, 'index': 36166}","  1163 |         });
  1164 |
> 1165 |         var clone = e.clone();
       |        ^ Global Variable
  1166 |
  1167 |         expect(e.element.fontAsset).to.be.ok;
  1168 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1183, 'column': 8, 'index': 37088}","  1181 |
  1182 |     it(""clears font asset when font is assigned directly"", function () {
> 1183 |         var e = new pc.Entity();
       |        ^ Global Variable
  1184 |
  1185 |         e.addComponent('element', {
  1186 |             type: 'text',"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1191, 'column': 8, 'index': 37254}","  1189 |         });
  1190 |
> 1191 |         var font = new pc.CanvasFont(app);
       |        ^ Global Variable
  1192 |         font.createTextures(' ');
  1193 |
  1194 |         e.element.font = font;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1202, 'column': 8, 'index': 37525}","  1200 |
  1201 |     it('Offscreen element is culled', function () {
> 1202 |         var canvasWidth = app.graphicsDevice.width;
       |        ^ Global Variable
  1203 |         var canvasHeight = app.graphicsDevice.height;
  1204 |
  1205 |         var screen = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1203, 'column': 8, 'index': 37577}","  1201 |     it('Offscreen element is culled', function () {
  1202 |         var canvasWidth = app.graphicsDevice.width;
> 1203 |         var canvasHeight = app.graphicsDevice.height;
       |        ^ Global Variable
  1204 |
  1205 |         var screen = new pc.Entity();
  1206 |         screen.addComponent('screen', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1205, 'column': 8, 'index': 37632}","  1203 |         var canvasHeight = app.graphicsDevice.height;
  1204 |
> 1205 |         var screen = new pc.Entity();
       |        ^ Global Variable
  1206 |         screen.addComponent('screen', {
  1207 |             screenSpace: true
  1208 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1211, 'column': 8, 'index': 37788}","  1209 |         app.root.addChild(screen);
  1210 |
> 1211 |         var e = new pc.Entity();
       |        ^ Global Variable
  1212 |         e.addComponent('element', {
  1213 |             type: 'text',
  1214 |             text: ""test"","
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1224, 'column': 8, 'index': 38123}","  1222 |         screen.addChild(e);
  1223 |
> 1224 |         var camera = new pc.Entity();
       |        ^ Global Variable
  1225 |         camera.addComponent('camera');
  1226 |         app.root.addChild(camera);
  1227 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1232, 'column': 8, 'index': 38312}","  1230 |         app.render();
  1231 |
> 1232 |         var meshInstance = e.element._text._model.meshInstances[0];
       |        ^ Global Variable
  1233 |
  1234 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.true;
  1235 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1253, 'column': 8, 'index': 38945}","  1251 |
  1252 |     it('Offscreen autowidth element is culled', function () {
> 1253 |         var canvasWidth = app.graphicsDevice.width;
       |        ^ Global Variable
  1254 |         var canvasHeight = app.graphicsDevice.height;
  1255 |
  1256 |         var screen = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1254, 'column': 8, 'index': 38997}","  1252 |     it('Offscreen autowidth element is culled', function () {
  1253 |         var canvasWidth = app.graphicsDevice.width;
> 1254 |         var canvasHeight = app.graphicsDevice.height;
       |        ^ Global Variable
  1255 |
  1256 |         var screen = new pc.Entity();
  1257 |         screen.addComponent('screen', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1256, 'column': 8, 'index': 39052}","  1254 |         var canvasHeight = app.graphicsDevice.height;
  1255 |
> 1256 |         var screen = new pc.Entity();
       |        ^ Global Variable
  1257 |         screen.addComponent('screen', {
  1258 |             screenSpace: true
  1259 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1262, 'column': 8, 'index': 39208}","  1260 |         app.root.addChild(screen);
  1261 |
> 1262 |         var e = new pc.Entity();
       |        ^ Global Variable
  1263 |         e.addComponent('element', {
  1264 |             type: 'text',
  1265 |             text: ""test"","
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1275, 'column': 8, 'index': 39542}","  1273 |         screen.addChild(e);
  1274 |
> 1275 |         var camera = new pc.Entity();
       |        ^ Global Variable
  1276 |         camera.addComponent('camera');
  1277 |         app.root.addChild(camera);
  1278 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1283, 'column': 8, 'index': 39731}","  1281 |         app.render();
  1282 |
> 1283 |         var meshInstance = e.element._text._model.meshInstances[0];
       |        ^ Global Variable
  1284 |
  1285 |         expect(e.element.isVisibleForCamera(camera.camera.camera)).to.be.true;
  1286 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1303, 'column': 8, 'index': 40371}","  1301 |
  1302 |     it('Offscreen child element is culled', function () {
> 1303 |         var canvasWidth = app.graphicsDevice.width;
       |        ^ Global Variable
  1304 |         var canvasHeight = app.graphicsDevice.height;
  1305 |
  1306 |         var screen = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1304, 'column': 8, 'index': 40423}","  1302 |     it('Offscreen child element is culled', function () {
  1303 |         var canvasWidth = app.graphicsDevice.width;
> 1304 |         var canvasHeight = app.graphicsDevice.height;
       |        ^ Global Variable
  1305 |
  1306 |         var screen = new pc.Entity();
  1307 |         screen.addComponent('screen', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1306, 'column': 8, 'index': 40478}","  1304 |         var canvasHeight = app.graphicsDevice.height;
  1305 |
> 1306 |         var screen = new pc.Entity();
       |        ^ Global Variable
  1307 |         screen.addComponent('screen', {
  1308 |             screenSpace: true
  1309 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1312, 'column': 8, 'index': 40634}","  1310 |         app.root.addChild(screen);
  1311 |
> 1312 |         var parent = new pc.Entity();
       |        ^ Global Variable
  1313 |         parent.addComponent('element', {
  1314 |             type: 'text',
  1315 |             text: ""test"","
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1325, 'column': 8, 'index': 40984}","  1323 |         screen.addChild(parent);
  1324 |
> 1325 |         var e = new pc.Entity();
       |        ^ Global Variable
  1326 |         e.addComponent('element', {
  1327 |             type: 'text',
  1328 |             text: ""test"","
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1338, 'column': 8, 'index': 41319}","  1336 |         parent.addChild(e);
  1337 |
> 1338 |         var camera = new pc.Entity();
       |        ^ Global Variable
  1339 |         camera.addComponent('camera');
  1340 |         app.root.addChild(camera);
  1341 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1342, 'column': 8, 'index': 41432}","  1340 |         app.root.addChild(camera);
  1341 |
> 1342 |         var meshInstance = e.element._text._model.meshInstances[0];
       |        ^ Global Variable
  1343 |
  1344 |         // update transform
  1345 |         app.update(0.1);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1361, 'column': 8, 'index': 41994}","  1359 |
  1360 |     it('Offscreen rotated element is culled', function () {
> 1361 |         var canvasWidth = app.graphicsDevice.width;
       |        ^ Global Variable
  1362 |         var canvasHeight = app.graphicsDevice.height;
  1363 |
  1364 |         var screen = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1362, 'column': 8, 'index': 42046}","  1360 |     it('Offscreen rotated element is culled', function () {
  1361 |         var canvasWidth = app.graphicsDevice.width;
> 1362 |         var canvasHeight = app.graphicsDevice.height;
       |        ^ Global Variable
  1363 |
  1364 |         var screen = new pc.Entity();
  1365 |         screen.addComponent('screen', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1364, 'column': 8, 'index': 42101}","  1362 |         var canvasHeight = app.graphicsDevice.height;
  1363 |
> 1364 |         var screen = new pc.Entity();
       |        ^ Global Variable
  1365 |         screen.addComponent('screen', {
  1366 |             screenSpace: true
  1367 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1370, 'column': 8, 'index': 42257}","  1368 |         app.root.addChild(screen);
  1369 |
> 1370 |         var e = new pc.Entity();
       |        ^ Global Variable
  1371 |         e.addComponent('element', {
  1372 |             type: 'text',
  1373 |             text: ""test"","
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1383, 'column': 8, 'index': 42592}","  1381 |         screen.addChild(e);
  1382 |
> 1383 |         var camera = new pc.Entity();
       |        ^ Global Variable
  1384 |         camera.addComponent('camera');
  1385 |         app.root.addChild(camera);
  1386 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1391, 'column': 8, 'index': 42847}","  1389 |         e.rotateLocal(0, 0, 45);
  1390 |
> 1391 |         var meshInstance = e.element._text._model.meshInstances[0];
       |        ^ Global Variable
  1392 |
  1393 |         // update transform
  1394 |         app.update(0.1);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1400, 'column': 8, 'index': 43145}","  1398 |
  1399 |     it('Offscreen rotated out of plane is culled', function () {
> 1400 |         var canvasWidth = app.graphicsDevice.width;
       |        ^ Global Variable
  1401 |         var canvasHeight = app.graphicsDevice.height;
  1402 |
  1403 |         var screen = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1401, 'column': 8, 'index': 43197}","  1399 |     it('Offscreen rotated out of plane is culled', function () {
  1400 |         var canvasWidth = app.graphicsDevice.width;
> 1401 |         var canvasHeight = app.graphicsDevice.height;
       |        ^ Global Variable
  1402 |
  1403 |         var screen = new pc.Entity();
  1404 |         screen.addComponent('screen', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1403, 'column': 8, 'index': 43252}","  1401 |         var canvasHeight = app.graphicsDevice.height;
  1402 |
> 1403 |         var screen = new pc.Entity();
       |        ^ Global Variable
  1404 |         screen.addComponent('screen', {
  1405 |             screenSpace: true
  1406 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1409, 'column': 8, 'index': 43408}","  1407 |         app.root.addChild(screen);
  1408 |
> 1409 |         var e = new pc.Entity();
       |        ^ Global Variable
  1410 |         e.addComponent('element', {
  1411 |             type: 'text',
  1412 |             text: ""test"","
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1422, 'column': 8, 'index': 43743}","  1420 |         screen.addChild(e);
  1421 |
> 1422 |         var camera = new pc.Entity();
       |        ^ Global Variable
  1423 |         camera.addComponent('camera');
  1424 |         app.root.addChild(camera);
  1425 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1430, 'column': 8, 'index': 43978}","  1428 |         e.rotateLocal(0, 90, 0);
  1429 |
> 1430 |         var meshInstance = e.element._text._model.meshInstances[0];
       |        ^ Global Variable
  1431 |
  1432 |         // update transform
  1433 |         app.update(0.1);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1484, 'column': 8, 'index': 45875}","  1482 |         element.key = 'key';
  1483 |
> 1484 |         var clone = element.entity.clone();
       |        ^ Global Variable
  1485 |         expect(clone.element.key).to.equal('key');
  1486 |         expect(clone.element.text).to.equal('translation');
  1487 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1494, 'column': 8, 'index': 46250}","  1492 |         element.text = 'text';
  1493 |
> 1494 |         var clone = element.entity.clone();
       |        ^ Global Variable
  1495 |         expect(clone.element.key).to.equal(null);
  1496 |         expect(clone.element.text).to.equal('text');
  1497 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1610, 'column': 8, 'index': 50082}","  1608 |         ]);
  1609 |
> 1610 |         var w = [255, 255, 255];
       |        ^ Global Variable
  1611 |         var r = [255, 0, 0];
  1612 |         assertLineColors([
  1613 |             w, w, w, w, w, w, w, w, w, w, w, w, w, r, r, r, r, r, r, w, w, w, w, w, w, w"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1611, 'column': 8, 'index': 50115}","  1609 |
  1610 |         var w = [255, 255, 255];
> 1611 |         var r = [255, 0, 0];
       |        ^ Global Variable
  1612 |         assertLineColors([
  1613 |             w, w, w, w, w, w, w, w, w, w, w, w, w, r, r, r, r, r, r, w, w, w, w, w, w, w
  1614 |         ]);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1659, 'column': 8, 'index': 51750}","  1657 |
  1658 |         // (r, g, b, a, offsetx, offsety)
> 1659 |         var d1 = [255, 255, 0, 255, 64, -127];
       |        ^ Global Variable
  1660 |         var g = [0, 255, 0, 187, 127, 127];
  1661 |         var r = [255, 0, 0, 255, 64, -127];
  1662 |         var d2 = [255, 255, 0, 255, 127, 127];"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1660, 'column': 8, 'index': 51797}","  1658 |         // (r, g, b, a, offsetx, offsety)
  1659 |         var d1 = [255, 255, 0, 255, 64, -127];
> 1660 |         var g = [0, 255, 0, 187, 127, 127];
       |        ^ Global Variable
  1661 |         var r = [255, 0, 0, 255, 64, -127];
  1662 |         var d2 = [255, 255, 0, 255, 127, 127];
  1663 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1661, 'column': 8, 'index': 51841}","  1659 |         var d1 = [255, 255, 0, 255, 64, -127];
  1660 |         var g = [0, 255, 0, 187, 127, 127];
> 1661 |         var r = [255, 0, 0, 255, 64, -127];
       |        ^ Global Variable
  1662 |         var d2 = [255, 255, 0, 255, 127, 127];
  1663 |
  1664 |         assertLineShadowParams(["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1662, 'column': 8, 'index': 51885}","  1660 |         var g = [0, 255, 0, 187, 127, 127];
  1661 |         var r = [255, 0, 0, 255, 64, -127];
> 1662 |         var d2 = [255, 255, 0, 255, 127, 127];
       |        ^ Global Variable
  1663 |
  1664 |         assertLineShadowParams([
  1665 |             d1, d1, d1, d1, d1,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1689, 'column': 8, 'index': 52761}","  1687 |
  1688 |         // (r, g, b, a, thickness)
> 1689 |         var d1 = [255, 255, 0, 255, 255];
       |        ^ Global Variable
  1690 |         var g = [0, 255, 0, 187, 128];
  1691 |         var r = [255, 0, 0, 255, 255];
  1692 |         var d2 = [255, 255, 0, 255, 255];"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1690, 'column': 8, 'index': 52803}","  1688 |         // (r, g, b, a, thickness)
  1689 |         var d1 = [255, 255, 0, 255, 255];
> 1690 |         var g = [0, 255, 0, 187, 128];
       |        ^ Global Variable
  1691 |         var r = [255, 0, 0, 255, 255];
  1692 |         var d2 = [255, 255, 0, 255, 255];
  1693 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1691, 'column': 8, 'index': 52842}","  1689 |         var d1 = [255, 255, 0, 255, 255];
  1690 |         var g = [0, 255, 0, 187, 128];
> 1691 |         var r = [255, 0, 0, 255, 255];
       |        ^ Global Variable
  1692 |         var d2 = [255, 255, 0, 255, 255];
  1693 |
  1694 |         assertLineOutlineParams(["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1692, 'column': 8, 'index': 52881}","  1690 |         var g = [0, 255, 0, 187, 128];
  1691 |         var r = [255, 0, 0, 255, 255];
> 1692 |         var d2 = [255, 255, 0, 255, 255];
       |        ^ Global Variable
  1693 |
  1694 |         assertLineOutlineParams([
  1695 |             d1, d1, d1, d1, d1,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Global Variable,"{'line': 1713, 'column': 8, 'index': 53449}","  1711 |         ]);
  1712 |
> 1713 |         var w = [255, 255, 255];
       |        ^ Global Variable
  1714 |         assertLineColors([
  1715 |             w, w, w, w, w, w, w, w, w, w, w, w, w, w, w, w, w, w, w
  1716 |         ]);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Sleepy Test,"{'line': 1525, 'column': 12, 'index': 47249}","  1523 |
  1524 |         assets.font2.on('load', function () {
> 1525 |             setTimeout(function () {
       |            ^ Sleepy Test
  1526 |                 expect(element.fontAsset).to.equal(assets.font2.id);
  1527 |                 expect(element.font).to.equal(assets.font2.resource);
  1528 |                 done();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Sleepy Test,"{'line': 1552, 'column': 12, 'index': 48171}","  1550 |         assets.font2.on('load', function () {
  1551 |             app.i18n.locale = 'fr';
> 1552 |             setTimeout(function () {
       |            ^ Sleepy Test
  1553 |                 expect(element.font).to.equal(assets.font.resource);
  1554 |                 expect(element.fontAsset).to.equal(assets.font.id);
  1555 |                 done();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 114}","  112 |     };
  113 |
> 114 |     it(""does not break onto multiple lines if the text is short enough"", function () {
      |    ^ Unknown Test
  115 |         element.fontAsset = fontAsset;
  116 |
  117 |         element.text = ""abcde fghij"";"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 121}","  119 |     });
  120 |
> 121 |     it(""does not break onto multiple lines if the autoWidth is set to true"", function () {
      |    ^ Unknown Test
  122 |         element.fontAsset = fontAsset;
  123 |
  124 |         element.autoWidth = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 140}","  138 |     });
  139 |
> 140 |     it(""does not break onto multiple lines if the wrapLines is set to false"", function () {
      |    ^ Unknown Test
  141 |         element.fontAsset = fontAsset;
  142 |
  143 |         element.wrapLines = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 158}","  156 |     });
  157 |
> 158 |     it(""breaks onto multiple lines if individual lines are too long"", function () {
      |    ^ Unknown Test
  159 |         element.fontAsset = fontAsset;
  160 |
  161 |         element.text = ""abcde fghij klmno pqrst uvwxyz"";"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 169}","  167 |     });
  168 |
> 169 |     it(""breaks individual words if they are too long to fit onto a line by themselves (single word case)"", function () {
      |    ^ Unknown Test
  170 |         element.fontAsset = fontAsset;
  171 |
  172 |         element.text = ""abcdefghijklmnopqrstuvwxyz"";"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 180}","  178 |     });
  179 |
> 180 |     it(""breaks individual words if they are too long to fit onto a line by themselves (multi word case)"", function () {
      |    ^ Unknown Test
  181 |         element.fontAsset = fontAsset;
  182 |
  183 |         element.text = ""abcdefgh ijklmnopqrstuvwxyz"";"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 191}","  189 |     });
  190 |
> 191 |     it(""breaks individual characters onto separate lines if the width is really constrained"", function () {
      |    ^ Unknown Test
  192 |         element.fontAsset = fontAsset;
  193 |
  194 |         element.width = 1;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 212}","  210 |     });
  211 |
> 212 |     it(""does not include whitespace at the end of a line in width calculations"", function () {
      |    ^ Unknown Test
  213 |         element.fontAsset = fontAsset;
  214 |
  215 |         element.text = ""abcdefgh        i"";"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 222}","  220 |     });
  221 |
> 222 |     it(""breaks words on hypens"", function () {
      |    ^ Unknown Test
  223 |         element.fontAsset = fontAsset;
  224 |
  225 |         element.text = ""abcde fghij-klm nopqr stuvwxyz"";"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 233}","  231 |     });
  232 |
> 233 |     it(""keeps hyphenated word segments together when wrapping them"", function () {
      |    ^ Unknown Test
  234 |         element.fontAsset = fontAsset;
  235 |
  236 |         element.width = 150;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 246}","  244 |     });
  245 |
> 246 |     it(""splits lines on \\n"", function () {
      |    ^ Unknown Test
  247 |         element.fontAsset = fontAsset;
  248 |
  249 |         element.text = ""abcde\nfghij"";"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 256}","  254 |     });
  255 |
> 256 |     it(""splits lines on \\r"", function () {
      |    ^ Unknown Test
  257 |         element.fontAsset = fontAsset;
  258 |
  259 |         element.text = ""abcde\rfghij"";"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 266}","  264 |     });
  265 |
> 266 |     it(""splits lines on multiple \\n"", function () {
      |    ^ Unknown Test
  267 |         element.fontAsset = fontAsset;
  268 |
  269 |         element.text = ""abcde\n\n\nfg\nhij"";"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 279}","  277 |     });
  278 |
> 279 |     it(""does not break beyond 1 line if maxLines is equal to 1"", function () {
      |    ^ Unknown Test
  280 |         element.fontAsset = fontAsset;
  281 |         element.maxLines = 1;
  282 |         element.text = ""abcde fghij klmno pqrst uvwxyz"";"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 315}","  313 |     });
  314 |
> 315 |     it(""breaks remaining text in last line when maxLines limit is reached"", function () {
      |    ^ Unknown Test
  316 |         element.fontAsset = fontAsset;
  317 |         element.maxLines = 2;
  318 |         element.text = ""abcde fghij klmno pqrst uvwxyz"";"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 357}","  355 |     });
  356 |
> 357 |     it(""rtl - breaks onto multiple lines if individual lines are too long"", function () {
      |    ^ Unknown Test
  358 |         registerRtlHandler();
  359 |
  360 |         element.fontAsset = fontAsset;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 371}","  369 |     });
  370 |
> 371 |     it(""rtl - breaks individual words if they are too long to fit onto a line by themselves (single word case)"", function () {
      |    ^ Unknown Test
  372 |         registerRtlHandler();
  373 |
  374 |         element.fontAsset = fontAsset;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 385}","  383 |     });
  384 |
> 385 |     it(""rtl - breaks individual words if they are too long to fit onto a line by themselves (multi word case)"", function () {
      |    ^ Unknown Test
  386 |         registerRtlHandler();
  387 |         element.fontAsset = fontAsset;
  388 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 398}","  396 |     });
  397 |
> 398 |     it(""rtl - breaks individual characters onto separate lines if the width is really constrained"", function () {
      |    ^ Unknown Test
  399 |         registerRtlHandler();
  400 |         element.fontAsset = fontAsset;
  401 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 421}","  419 |     });
  420 |
> 421 |     it(""rtl - does not include whitespace at the end of a line in width calculations"", function () {
      |    ^ Unknown Test
  422 |         registerRtlHandler();
  423 |         element.fontAsset = fontAsset;
  424 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 433}","  431 |     });
  432 |
> 433 |     it(""rtl - breaks words on hypens"", function () {
      |    ^ Unknown Test
  434 |         registerRtlHandler();
  435 |         element.fontAsset = fontAsset;
  436 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 446}","  444 |     });
  445 |
> 446 |     it(""rtl - keeps hyphenated word segments together when wrapping them"", function () {
      |    ^ Unknown Test
  447 |         registerRtlHandler();
  448 |         element.fontAsset = fontAsset;
  449 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 461}","  459 |     });
  460 |
> 461 |     it(""rtl - splits lines on \\n"", function () {
      |    ^ Unknown Test
  462 |         registerRtlHandler();
  463 |         element.fontAsset = fontAsset;
  464 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 473}","  471 |     });
  472 |
> 473 |     it(""rtl - splits lines on \\r"", function () {
      |    ^ Unknown Test
  474 |         registerRtlHandler('\r');
  475 |         element.fontAsset = fontAsset;
  476 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 485}","  483 |     });
  484 |
> 485 |     it(""rtl - splits lines on multiple \\n"", function () {
      |    ^ Unknown Test
  486 |         registerRtlHandler();
  487 |         element.fontAsset = fontAsset;
  488 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 500}","  498 |     });
  499 |
> 500 |     it(""rtl - does not break beyond 1 line if maxLines is equal to 1"", function () {
      |    ^ Unknown Test
  501 |         registerRtlHandler();
  502 |         element.fontAsset = fontAsset;
  503 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 541}","  539 |     });
  540 |
> 541 |     it(""rtl breaks remaining text in last line when maxLines limit is reached"", function () {
      |    ^ Unknown Test
  542 |         registerRtlHandler();
  543 |         element.fontAsset = fontAsset;
  544 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 1438}","  1436 |     });
  1437 |
> 1438 |     it('text is set to translated text when we set the key', function () {
       |    ^ Unknown Test
  1439 |         addText('en-US', 'key', 'translation');
  1440 |         element.fontAsset = fontAsset;
  1441 |         element.key = ""key"";"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 1453}","  1451 |     });
  1452 |
> 1453 |     it('text changes language when we change the locale', function () {
       |    ^ Unknown Test
  1454 |         addText('en-US', 'key', 'translation');
  1455 |         addText('fr-FR', 'key', 'french');
  1456 |         element.fontAsset = fontAsset;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 1463}","  1461 |     });
  1462 |
> 1463 |     it('text changes language when we add translations for the current locale', function () {
       |    ^ Unknown Test
  1464 |         element.fontAsset = fontAsset;
  1465 |         element.key = ""key"";
  1466 |         assertLineContents([""key""]);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 1471}","  1469 |     });
  1470 |
> 1471 |     it('text changes to first plural entry when the key is plural', function () {
       |    ^ Unknown Test
  1472 |         element.fontAsset = fontAsset;
  1473 |         element.key = ""key"";
  1474 |         assertLineContents([""key""]);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 1499}","  1497 |     });
  1498 |
> 1499 |     it('text does not wrap when its width reaches exactly the width of the element', function () {
       |    ^ Unknown Test
  1500 |         element.fontAsset = fontAsset;
  1501 |         element.wrapLines = true;
  1502 |         element.autoWidth = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 1597}","  1595 |     });
  1596 |
> 1597 |     it('text markup color tag', function () {
       |    ^ Unknown Test
  1598 |         registerRtlHandler('\r');
  1599 |         element.fontAsset = fontAsset;
  1600 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 1617}","  1615 |     });
  1616 |
> 1617 |     it('text markup color without closing tag', function () {
       |    ^ Unknown Test
  1618 |         element.fontAsset = fontAsset;
  1619 |         element.enableMarkup = true;
  1620 |         element.autoWidth = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 1630}","  1628 |     });
  1629 |
> 1630 |     it('text markup with escaping open bracket', function () {
       |    ^ Unknown Test
  1631 |         element.fontAsset = fontAsset;
  1632 |         element.enableMarkup = true;
  1633 |         element.autoWidth = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 1643}","  1641 |     });
  1642 |
> 1643 |     it('text markup shadow tag', function () {
       |    ^ Unknown Test
  1644 |         registerRtlHandler('\r');
  1645 |         element.fontAsset = fontAsset;
  1646 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 1673}","  1671 |     });
  1672 |
> 1673 |     it('text markup outline tag', function () {
       |    ^ Unknown Test
  1674 |         registerRtlHandler('\r');
  1675 |         element.fontAsset = fontAsset;
  1676 |         element.rtlReorder = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/element/test_textelement.js,Unknown Test,"{'column': 4, 'line': 1703}","  1701 |     });
  1702 |
> 1703 |     it('text markup with attributes', function () {
       |    ^ Unknown Test
  1704 |         element.fontAsset = fontAsset;
  1705 |         element.enableMarkup = true;
  1706 |         element.autoWidth = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Conditional Test Logic,"{'line': 22, 'column': 12, 'index': 576}","  20 |         app.assets.on('load', function (asset) {
  21 |             count++;
> 22 |             if (count === list.length) {
     |            ^ Conditional Test Logic
  23 |                 cb();
  24 |             }
  25 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Conditional Test Logic,"{'line': 28, 'column': 8, 'index': 693}","  26 |
  27 |         // add and load assets
> 28 |         for (var i = 0; i < list.length; i++) {
     |        ^ Conditional Test Logic
  29 |             app.assets.add(list[i]);
  30 |             app.assets.load(list[i]);
  31 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 79, 'column': 8, 'index': 2141}","  77 |         });
  78 |
> 79 |         expect(assets.colorMap.hasEvent('load')).to.be.true;
     |        ^ Duplicate Assert
  80 |         expect(assets.colorMap.hasEvent('unload')).to.be.true;
  81 |         expect(assets.colorMap.hasEvent('change')).to.be.true;
  82 |         expect(assets.colorMap.hasEvent('remove')).to.be.true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 80, 'column': 8, 'index': 2202}","  78 |
  79 |         expect(assets.colorMap.hasEvent('load')).to.be.true;
> 80 |         expect(assets.colorMap.hasEvent('unload')).to.be.true;
     |        ^ Duplicate Assert
  81 |         expect(assets.colorMap.hasEvent('change')).to.be.true;
  82 |         expect(assets.colorMap.hasEvent('remove')).to.be.true;
  83 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 81, 'column': 8, 'index': 2265}","  79 |         expect(assets.colorMap.hasEvent('load')).to.be.true;
  80 |         expect(assets.colorMap.hasEvent('unload')).to.be.true;
> 81 |         expect(assets.colorMap.hasEvent('change')).to.be.true;
     |        ^ Duplicate Assert
  82 |         expect(assets.colorMap.hasEvent('remove')).to.be.true;
  83 |
  84 |         e.destroy();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 82, 'column': 8, 'index': 2328}","  80 |         expect(assets.colorMap.hasEvent('unload')).to.be.true;
  81 |         expect(assets.colorMap.hasEvent('change')).to.be.true;
> 82 |         expect(assets.colorMap.hasEvent('remove')).to.be.true;
     |        ^ Duplicate Assert
  83 |
  84 |         e.destroy();
  85 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 86, 'column': 8, 'index': 2414}","  84 |         e.destroy();
  85 |
> 86 |         expect(assets.colorMap.hasEvent('load')).to.be.false;
     |        ^ Duplicate Assert
  87 |         expect(assets.colorMap.hasEvent('unload')).to.be.false;
  88 |         expect(assets.colorMap.hasEvent('change')).to.be.false;
  89 |         expect(assets.colorMap.hasEvent('remove')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 87, 'column': 8, 'index': 2476}","  85 |
  86 |         expect(assets.colorMap.hasEvent('load')).to.be.false;
> 87 |         expect(assets.colorMap.hasEvent('unload')).to.be.false;
     |        ^ Duplicate Assert
  88 |         expect(assets.colorMap.hasEvent('change')).to.be.false;
  89 |         expect(assets.colorMap.hasEvent('remove')).to.be.false;
  90 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 88, 'column': 8, 'index': 2540}","  86 |         expect(assets.colorMap.hasEvent('load')).to.be.false;
  87 |         expect(assets.colorMap.hasEvent('unload')).to.be.false;
> 88 |         expect(assets.colorMap.hasEvent('change')).to.be.false;
     |        ^ Duplicate Assert
  89 |         expect(assets.colorMap.hasEvent('remove')).to.be.false;
  90 |     });
  91 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 89, 'column': 8, 'index': 2604}","  87 |         expect(assets.colorMap.hasEvent('unload')).to.be.false;
  88 |         expect(assets.colorMap.hasEvent('change')).to.be.false;
> 89 |         expect(assets.colorMap.hasEvent('remove')).to.be.false;
     |        ^ Duplicate Assert
  90 |     });
  91 |
  92 |     it('ColorMap Asset unbinds on reset', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 99, 'column': 8, 'index': 2898}","   97 |         });
   98 |
>  99 |         expect(assets.colorMap.hasEvent('load')).to.be.true;
      |        ^ Duplicate Assert
  100 |         expect(assets.colorMap.hasEvent('unload')).to.be.true;
  101 |         expect(assets.colorMap.hasEvent('change')).to.be.true;
  102 |         expect(assets.colorMap.hasEvent('remove')).to.be.true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 100, 'column': 8, 'index': 2959}","   98 |
   99 |         expect(assets.colorMap.hasEvent('load')).to.be.true;
> 100 |         expect(assets.colorMap.hasEvent('unload')).to.be.true;
      |        ^ Duplicate Assert
  101 |         expect(assets.colorMap.hasEvent('change')).to.be.true;
  102 |         expect(assets.colorMap.hasEvent('remove')).to.be.true;
  103 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 101, 'column': 8, 'index': 3022}","   99 |         expect(assets.colorMap.hasEvent('load')).to.be.true;
  100 |         expect(assets.colorMap.hasEvent('unload')).to.be.true;
> 101 |         expect(assets.colorMap.hasEvent('change')).to.be.true;
      |        ^ Duplicate Assert
  102 |         expect(assets.colorMap.hasEvent('remove')).to.be.true;
  103 |
  104 |         e.particlesystem.colorMapAsset = null;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 102, 'column': 8, 'index': 3085}","  100 |         expect(assets.colorMap.hasEvent('unload')).to.be.true;
  101 |         expect(assets.colorMap.hasEvent('change')).to.be.true;
> 102 |         expect(assets.colorMap.hasEvent('remove')).to.be.true;
      |        ^ Duplicate Assert
  103 |
  104 |         e.particlesystem.colorMapAsset = null;
  105 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 106, 'column': 8, 'index': 3197}","  104 |         e.particlesystem.colorMapAsset = null;
  105 |
> 106 |         expect(assets.colorMap.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  107 |         expect(assets.colorMap.hasEvent('unload')).to.be.false;
  108 |         expect(assets.colorMap.hasEvent('change')).to.be.false;
  109 |         expect(assets.colorMap.hasEvent('remove')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 107, 'column': 8, 'index': 3259}","  105 |
  106 |         expect(assets.colorMap.hasEvent('load')).to.be.false;
> 107 |         expect(assets.colorMap.hasEvent('unload')).to.be.false;
      |        ^ Duplicate Assert
  108 |         expect(assets.colorMap.hasEvent('change')).to.be.false;
  109 |         expect(assets.colorMap.hasEvent('remove')).to.be.false;
  110 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 108, 'column': 8, 'index': 3323}","  106 |         expect(assets.colorMap.hasEvent('load')).to.be.false;
  107 |         expect(assets.colorMap.hasEvent('unload')).to.be.false;
> 108 |         expect(assets.colorMap.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  109 |         expect(assets.colorMap.hasEvent('remove')).to.be.false;
  110 |     });
  111 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 109, 'column': 8, 'index': 3387}","  107 |         expect(assets.colorMap.hasEvent('unload')).to.be.false;
  108 |         expect(assets.colorMap.hasEvent('change')).to.be.false;
> 109 |         expect(assets.colorMap.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  110 |     });
  111 |
  112 |     it('NormalMap Asset unbinds on destroy', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 119, 'column': 8, 'index': 3686}","  117 |         });
  118 |
> 119 |         expect(assets.normalMap.hasEvent('load')).to.be.true;
      |        ^ Duplicate Assert
  120 |         expect(assets.normalMap.hasEvent('unload')).to.be.true;
  121 |         expect(assets.normalMap.hasEvent('change')).to.be.true;
  122 |         expect(assets.normalMap.hasEvent('remove')).to.be.true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 120, 'column': 8, 'index': 3748}","  118 |
  119 |         expect(assets.normalMap.hasEvent('load')).to.be.true;
> 120 |         expect(assets.normalMap.hasEvent('unload')).to.be.true;
      |        ^ Duplicate Assert
  121 |         expect(assets.normalMap.hasEvent('change')).to.be.true;
  122 |         expect(assets.normalMap.hasEvent('remove')).to.be.true;
  123 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 121, 'column': 8, 'index': 3812}","  119 |         expect(assets.normalMap.hasEvent('load')).to.be.true;
  120 |         expect(assets.normalMap.hasEvent('unload')).to.be.true;
> 121 |         expect(assets.normalMap.hasEvent('change')).to.be.true;
      |        ^ Duplicate Assert
  122 |         expect(assets.normalMap.hasEvent('remove')).to.be.true;
  123 |
  124 |         e.destroy();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 122, 'column': 8, 'index': 3876}","  120 |         expect(assets.normalMap.hasEvent('unload')).to.be.true;
  121 |         expect(assets.normalMap.hasEvent('change')).to.be.true;
> 122 |         expect(assets.normalMap.hasEvent('remove')).to.be.true;
      |        ^ Duplicate Assert
  123 |
  124 |         e.destroy();
  125 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 126, 'column': 8, 'index': 3963}","  124 |         e.destroy();
  125 |
> 126 |         expect(assets.normalMap.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  127 |         expect(assets.normalMap.hasEvent('unload')).to.be.false;
  128 |         expect(assets.normalMap.hasEvent('change')).to.be.false;
  129 |         expect(assets.normalMap.hasEvent('remove')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 127, 'column': 8, 'index': 4026}","  125 |
  126 |         expect(assets.normalMap.hasEvent('load')).to.be.false;
> 127 |         expect(assets.normalMap.hasEvent('unload')).to.be.false;
      |        ^ Duplicate Assert
  128 |         expect(assets.normalMap.hasEvent('change')).to.be.false;
  129 |         expect(assets.normalMap.hasEvent('remove')).to.be.false;
  130 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 128, 'column': 8, 'index': 4091}","  126 |         expect(assets.normalMap.hasEvent('load')).to.be.false;
  127 |         expect(assets.normalMap.hasEvent('unload')).to.be.false;
> 128 |         expect(assets.normalMap.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  129 |         expect(assets.normalMap.hasEvent('remove')).to.be.false;
  130 |     });
  131 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 129, 'column': 8, 'index': 4156}","  127 |         expect(assets.normalMap.hasEvent('unload')).to.be.false;
  128 |         expect(assets.normalMap.hasEvent('change')).to.be.false;
> 129 |         expect(assets.normalMap.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  130 |     });
  131 |
  132 |     it('NormalMap Asset unbinds on reset', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 139, 'column': 8, 'index': 4454}","  137 |         });
  138 |
> 139 |         expect(assets.normalMap.hasEvent('load')).to.be.true;
      |        ^ Duplicate Assert
  140 |         expect(assets.normalMap.hasEvent('unload')).to.be.true;
  141 |         expect(assets.normalMap.hasEvent('change')).to.be.true;
  142 |         expect(assets.normalMap.hasEvent('remove')).to.be.true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 140, 'column': 8, 'index': 4516}","  138 |
  139 |         expect(assets.normalMap.hasEvent('load')).to.be.true;
> 140 |         expect(assets.normalMap.hasEvent('unload')).to.be.true;
      |        ^ Duplicate Assert
  141 |         expect(assets.normalMap.hasEvent('change')).to.be.true;
  142 |         expect(assets.normalMap.hasEvent('remove')).to.be.true;
  143 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 141, 'column': 8, 'index': 4580}","  139 |         expect(assets.normalMap.hasEvent('load')).to.be.true;
  140 |         expect(assets.normalMap.hasEvent('unload')).to.be.true;
> 141 |         expect(assets.normalMap.hasEvent('change')).to.be.true;
      |        ^ Duplicate Assert
  142 |         expect(assets.normalMap.hasEvent('remove')).to.be.true;
  143 |
  144 |         e.particlesystem.normalMapAsset = null;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 142, 'column': 8, 'index': 4644}","  140 |         expect(assets.normalMap.hasEvent('unload')).to.be.true;
  141 |         expect(assets.normalMap.hasEvent('change')).to.be.true;
> 142 |         expect(assets.normalMap.hasEvent('remove')).to.be.true;
      |        ^ Duplicate Assert
  143 |
  144 |         e.particlesystem.normalMapAsset = null;
  145 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 146, 'column': 8, 'index': 4758}","  144 |         e.particlesystem.normalMapAsset = null;
  145 |
> 146 |         expect(assets.normalMap.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  147 |         expect(assets.normalMap.hasEvent('unload')).to.be.false;
  148 |         expect(assets.normalMap.hasEvent('change')).to.be.false;
  149 |         expect(assets.normalMap.hasEvent('remove')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 147, 'column': 8, 'index': 4821}","  145 |
  146 |         expect(assets.normalMap.hasEvent('load')).to.be.false;
> 147 |         expect(assets.normalMap.hasEvent('unload')).to.be.false;
      |        ^ Duplicate Assert
  148 |         expect(assets.normalMap.hasEvent('change')).to.be.false;
  149 |         expect(assets.normalMap.hasEvent('remove')).to.be.false;
  150 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 148, 'column': 8, 'index': 4886}","  146 |         expect(assets.normalMap.hasEvent('load')).to.be.false;
  147 |         expect(assets.normalMap.hasEvent('unload')).to.be.false;
> 148 |         expect(assets.normalMap.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  149 |         expect(assets.normalMap.hasEvent('remove')).to.be.false;
  150 |     });
  151 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 149, 'column': 8, 'index': 4951}","  147 |         expect(assets.normalMap.hasEvent('unload')).to.be.false;
  148 |         expect(assets.normalMap.hasEvent('change')).to.be.false;
> 149 |         expect(assets.normalMap.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  150 |     });
  151 |
  152 |     it('Mesh Asset unbinds on destroy', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 159, 'column': 8, 'index': 5236}","  157 |         });
  158 |
> 159 |         expect(assets.mesh.hasEvent('load')).to.be.true;
      |        ^ Duplicate Assert
  160 |         expect(assets.mesh.hasEvent('unload')).to.be.true;
  161 |         expect(assets.mesh.hasEvent('change')).to.be.true;
  162 |         expect(assets.mesh.hasEvent('remove')).to.be.true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 160, 'column': 8, 'index': 5293}","  158 |
  159 |         expect(assets.mesh.hasEvent('load')).to.be.true;
> 160 |         expect(assets.mesh.hasEvent('unload')).to.be.true;
      |        ^ Duplicate Assert
  161 |         expect(assets.mesh.hasEvent('change')).to.be.true;
  162 |         expect(assets.mesh.hasEvent('remove')).to.be.true;
  163 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 161, 'column': 8, 'index': 5352}","  159 |         expect(assets.mesh.hasEvent('load')).to.be.true;
  160 |         expect(assets.mesh.hasEvent('unload')).to.be.true;
> 161 |         expect(assets.mesh.hasEvent('change')).to.be.true;
      |        ^ Duplicate Assert
  162 |         expect(assets.mesh.hasEvent('remove')).to.be.true;
  163 |
  164 |         e.destroy();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 162, 'column': 8, 'index': 5411}","  160 |         expect(assets.mesh.hasEvent('unload')).to.be.true;
  161 |         expect(assets.mesh.hasEvent('change')).to.be.true;
> 162 |         expect(assets.mesh.hasEvent('remove')).to.be.true;
      |        ^ Duplicate Assert
  163 |
  164 |         e.destroy();
  165 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 166, 'column': 8, 'index': 5493}","  164 |         e.destroy();
  165 |
> 166 |         expect(assets.mesh.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  167 |         expect(assets.mesh.hasEvent('unload')).to.be.false;
  168 |         expect(assets.mesh.hasEvent('change')).to.be.false;
  169 |         expect(assets.mesh.hasEvent('remove')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 167, 'column': 8, 'index': 5551}","  165 |
  166 |         expect(assets.mesh.hasEvent('load')).to.be.false;
> 167 |         expect(assets.mesh.hasEvent('unload')).to.be.false;
      |        ^ Duplicate Assert
  168 |         expect(assets.mesh.hasEvent('change')).to.be.false;
  169 |         expect(assets.mesh.hasEvent('remove')).to.be.false;
  170 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 168, 'column': 8, 'index': 5611}","  166 |         expect(assets.mesh.hasEvent('load')).to.be.false;
  167 |         expect(assets.mesh.hasEvent('unload')).to.be.false;
> 168 |         expect(assets.mesh.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  169 |         expect(assets.mesh.hasEvent('remove')).to.be.false;
  170 |     });
  171 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 169, 'column': 8, 'index': 5671}","  167 |         expect(assets.mesh.hasEvent('unload')).to.be.false;
  168 |         expect(assets.mesh.hasEvent('change')).to.be.false;
> 169 |         expect(assets.mesh.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  170 |     });
  171 |
  172 |     it('Mesh Asset unbinds on reset', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 179, 'column': 8, 'index': 5949}","  177 |         });
  178 |
> 179 |         expect(assets.mesh.hasEvent('load')).to.be.true;
      |        ^ Duplicate Assert
  180 |         expect(assets.mesh.hasEvent('unload')).to.be.true;
  181 |         expect(assets.mesh.hasEvent('change')).to.be.true;
  182 |         expect(assets.mesh.hasEvent('remove')).to.be.true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 180, 'column': 8, 'index': 6006}","  178 |
  179 |         expect(assets.mesh.hasEvent('load')).to.be.true;
> 180 |         expect(assets.mesh.hasEvent('unload')).to.be.true;
      |        ^ Duplicate Assert
  181 |         expect(assets.mesh.hasEvent('change')).to.be.true;
  182 |         expect(assets.mesh.hasEvent('remove')).to.be.true;
  183 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 181, 'column': 8, 'index': 6065}","  179 |         expect(assets.mesh.hasEvent('load')).to.be.true;
  180 |         expect(assets.mesh.hasEvent('unload')).to.be.true;
> 181 |         expect(assets.mesh.hasEvent('change')).to.be.true;
      |        ^ Duplicate Assert
  182 |         expect(assets.mesh.hasEvent('remove')).to.be.true;
  183 |
  184 |         e.particlesystem.meshAsset = null;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 182, 'column': 8, 'index': 6124}","  180 |         expect(assets.mesh.hasEvent('unload')).to.be.true;
  181 |         expect(assets.mesh.hasEvent('change')).to.be.true;
> 182 |         expect(assets.mesh.hasEvent('remove')).to.be.true;
      |        ^ Duplicate Assert
  183 |
  184 |         e.particlesystem.meshAsset = null;
  185 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 186, 'column': 8, 'index': 6228}","  184 |         e.particlesystem.meshAsset = null;
  185 |
> 186 |         expect(assets.mesh.hasEvent('load')).to.be.false;
      |        ^ Duplicate Assert
  187 |         expect(assets.mesh.hasEvent('unload')).to.be.false;
  188 |         expect(assets.mesh.hasEvent('change')).to.be.false;
  189 |         expect(assets.mesh.hasEvent('remove')).to.be.false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 187, 'column': 8, 'index': 6286}","  185 |
  186 |         expect(assets.mesh.hasEvent('load')).to.be.false;
> 187 |         expect(assets.mesh.hasEvent('unload')).to.be.false;
      |        ^ Duplicate Assert
  188 |         expect(assets.mesh.hasEvent('change')).to.be.false;
  189 |         expect(assets.mesh.hasEvent('remove')).to.be.false;
  190 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 188, 'column': 8, 'index': 6346}","  186 |         expect(assets.mesh.hasEvent('load')).to.be.false;
  187 |         expect(assets.mesh.hasEvent('unload')).to.be.false;
> 188 |         expect(assets.mesh.hasEvent('change')).to.be.false;
      |        ^ Duplicate Assert
  189 |         expect(assets.mesh.hasEvent('remove')).to.be.false;
  190 |     });
  191 | });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Duplicate Assert,"{'line': 189, 'column': 8, 'index': 6406}","  187 |         expect(assets.mesh.hasEvent('unload')).to.be.false;
  188 |         expect(assets.mesh.hasEvent('change')).to.be.false;
> 189 |         expect(assets.mesh.hasEvent('remove')).to.be.false;
      |        ^ Duplicate Assert
  190 |     });
  191 | });
  192 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 2, 'column': 4, 'index': 57}","  1 | describe(""pc.ParticleSystemComponent"", function () {
> 2 |     var app;
    |    ^ Global Variable
  3 |     var assets = {};
  4 |
  5 |     beforeEach(function (done) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 3, 'column': 4, 'index': 70}","  1 | describe(""pc.ParticleSystemComponent"", function () {
  2 |     var app;
> 3 |     var assets = {};
    |    ^ Global Variable
  4 |
  5 |     beforeEach(function (done) {
  6 |         app = new pc.Application(document.createElement('canvas'));"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 17, 'column': 4, 'index': 348}","  15 |     });
  16 |
> 17 |     var loadAssetList = function (list, cb) {
     |    ^ Global Variable
  18 |         // listen for asset load events and fire cb() when all assets are loaded
  19 |         var count = 0;
  20 |         app.assets.on('load', function (asset) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 19, 'column': 8, 'index': 479}","  17 |     var loadAssetList = function (list, cb) {
  18 |         // listen for asset load events and fire cb() when all assets are loaded
> 19 |         var count = 0;
     |        ^ Global Variable
  20 |         app.assets.on('load', function (asset) {
  21 |             count++;
  22 |             if (count === list.length) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 28, 'column': 13, 'index': 698}","  26 |
  27 |         // add and load assets
> 28 |         for (var i = 0; i < list.length; i++) {
     |             ^ Global Variable
  29 |             app.assets.add(list[i]);
  30 |             app.assets.load(list[i]);
  31 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 34, 'column': 4, 'index': 830}","  32 |     };
  33 |
> 34 |     var loadAssets = function (cb) {
     |    ^ Global Variable
  35 |         var assetlist = [
  36 |             new pc.Asset('Box', 'model', {
  37 |                 url: 'base/tests/test-assets/box/box.json'"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 35, 'column': 8, 'index': 871}","  33 |
  34 |     var loadAssets = function (cb) {
> 35 |         var assetlist = [
     |        ^ Global Variable
  36 |             new pc.Asset('Box', 'model', {
  37 |                 url: 'base/tests/test-assets/box/box.json'
  38 |             }),"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 56, 'column': 8, 'index': 1565}","  54 |
  55 |     it(""Add particlesystem"", function () {
> 56 |         var e = new pc.Entity();
     |        ^ Global Variable
  57 |
  58 |         e.addComponent(""particlesystem"");
  59 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 64, 'column': 8, 'index': 1740}","  62 |
  63 |     it(""Remove particlesystem"", function () {
> 64 |         var e = new pc.Entity();
     |        ^ Global Variable
  65 |
  66 |         e.addComponent(""particlesystem"");
  67 |         e.removeComponent(""particlesystem"");"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 73, 'column': 8, 'index': 1976}","  71 |
  72 |     it('ColorMap Asset unbinds on destroy', function () {
> 73 |         var e = new pc.Entity();
     |        ^ Global Variable
  74 |         app.root.addChild(e);
  75 |         e.addComponent('particlesystem', {
  76 |             colorMapAsset: assets.colorMap.id"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 93, 'column': 8, 'index': 2733}","  91 |
  92 |     it('ColorMap Asset unbinds on reset', function () {
> 93 |         var e = new pc.Entity();
     |        ^ Global Variable
  94 |         app.root.addChild(e);
  95 |         e.addComponent('particlesystem', {
  96 |             colorMapAsset: assets.colorMap.id"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 113, 'column': 8, 'index': 3519}","  111 |
  112 |     it('NormalMap Asset unbinds on destroy', function () {
> 113 |         var e = new pc.Entity();
      |        ^ Global Variable
  114 |         app.root.addChild(e);
  115 |         e.addComponent('particlesystem', {
  116 |             normalMapAsset: assets.normalMap.id"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 133, 'column': 8, 'index': 4287}","  131 |
  132 |     it('NormalMap Asset unbinds on reset', function () {
> 133 |         var e = new pc.Entity();
      |        ^ Global Variable
  134 |         app.root.addChild(e);
  135 |         e.addComponent('particlesystem', {
  136 |             normalMapAsset: assets.normalMap.id"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 153, 'column': 8, 'index': 5079}","  151 |
  152 |     it('Mesh Asset unbinds on destroy', function () {
> 153 |         var e = new pc.Entity();
      |        ^ Global Variable
  154 |         app.root.addChild(e);
  155 |         e.addComponent('particlesystem', {
  156 |             meshAsset: assets.mesh.id"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/particlesystem/test_particlesystemcomponent.js,Global Variable,"{'line': 173, 'column': 8, 'index': 5792}","  171 |
  172 |     it('Mesh Asset unbinds on reset', function () {
> 173 |         var e = new pc.Entity();
      |        ^ Global Variable
  174 |         app.root.addChild(e);
  175 |         e.addComponent('particlesystem', {
  176 |             meshAsset: assets.mesh.id"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Conditional Test Logic,"{'line': 289, 'column': 12, 'index': 10068}","  287 |
  288 |         app.preload(function (err) {
> 289 |             if (err) {
      |            ^ Conditional Test Logic
  290 |                 console.error(err);
  291 |             }
  292 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Conditional Test Logic,"{'line': 1772, 'column': 8, 'index': 56973}","  1770 |
  1771 |         var updatesFound = 0;
> 1772 |         for (var i = 2; i < window.initializeCalls.length; i++) {
       |        ^ Conditional Test Logic
  1773 |             if (window.initializeCalls[i].indexOf('update') >= 0) {
  1774 |                 updatesFound++;
  1775 |             }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Conditional Test Logic,"{'line': 1773, 'column': 12, 'index': 57043}","  1771 |         var updatesFound = 0;
  1772 |         for (var i = 2; i < window.initializeCalls.length; i++) {
> 1773 |             if (window.initializeCalls[i].indexOf('update') >= 0) {
       |            ^ Conditional Test Logic
  1774 |                 updatesFound++;
  1775 |             }
  1776 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Conditional Test Logic,"{'line': 1819, 'column': 8, 'index': 58496}","  1817 |
  1818 |         var updatesFound = 0;
> 1819 |         for (var i = 2; i < window.initializeCalls.length; i++) {
       |        ^ Conditional Test Logic
  1820 |             if (window.initializeCalls[i].indexOf('update') >= 0) {
  1821 |                 updatesFound++;
  1822 |             }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Conditional Test Logic,"{'line': 1820, 'column': 12, 'index': 58566}","  1818 |         var updatesFound = 0;
  1819 |         for (var i = 2; i < window.initializeCalls.length; i++) {
> 1820 |             if (window.initializeCalls[i].indexOf('update') >= 0) {
       |            ^ Conditional Test Logic
  1821 |                 updatesFound++;
  1822 |             }
  1823 |         }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Conditional Test Logic,"{'line': 3038, 'column': 8, 'index': 101497}","  3036 |
  3037 |         // make 3 entities with scriptA
> 3038 |         for (var i = 0; i < 3; i++) {
       |        ^ Conditional Test Logic
  3039 |             e = new pc.Entity();
  3040 |             e.addComponent('script', {
  3041 |                 enabled: true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 333, 'column': 8, 'index': 11289}","  331 |
  332 |         expect(e.script.scriptA).to.exist;
> 333 |         expect(window.initializeCalls.length).to.equal(0);
      |        ^ Duplicate Assert
  334 |
  335 |         app.root.addChild(e);
  336 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 337, 'column': 8, 'index': 11380}","  335 |         app.root.addChild(e);
  336 |
> 337 |         expect(window.initializeCalls.length).to.equal(2);
      |        ^ Duplicate Assert
  338 |         checkInitCall(e, 0, 'initialize scriptA');
  339 |         checkInitCall(e, 1, 'postInitialize scriptA');
  340 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 366, 'column': 8, 'index': 12221}","  364 |         expect(e.script.scriptB).to.exist;
  365 |
> 366 |         expect(window.initializeCalls.length).to.equal(0);
      |        ^ Duplicate Assert
  367 |
  368 |         app.root.addChild(e);
  369 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 370, 'column': 8, 'index': 12312}","  368 |         app.root.addChild(e);
  369 |
> 370 |         expect(window.initializeCalls.length).to.equal(4);
      |        ^ Duplicate Assert
  371 |         checkInitCall(e, 0, 'initialize scriptA');
  372 |         checkInitCall(e, 1, 'initialize scriptB');
  373 |         checkInitCall(e, 2, 'postInitialize scriptA');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 394, 'column': 8, 'index': 13093}","  392 |
  393 |         expect(e.script.scriptA).to.exist;
> 394 |         expect(window.initializeCalls.length).to.equal(0);
      |        ^ Duplicate Assert
  395 |
  396 |         app.root.addChild(e);
  397 |         expect(window.initializeCalls.length).to.equal(0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 397, 'column': 8, 'index': 13183}","  395 |
  396 |         app.root.addChild(e);
> 397 |         expect(window.initializeCalls.length).to.equal(0);
      |        ^ Duplicate Assert
  398 |
  399 |         e.enabled = true;
  400 |         expect(window.initializeCalls.length).to.equal(2);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 400, 'column': 8, 'index': 13269}","  398 |
  399 |         e.enabled = true;
> 400 |         expect(window.initializeCalls.length).to.equal(2);
      |        ^ Duplicate Assert
  401 |         checkInitCall(e, 0, 'initialize scriptA');
  402 |         checkInitCall(e, 1, 'postInitialize scriptA');
  403 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 421, 'column': 8, 'index': 13928}","  419 |
  420 |         expect(e.script.scriptA).to.exist;
> 421 |         expect(window.initializeCalls.length).to.equal(0);
      |        ^ Duplicate Assert
  422 |
  423 |         app.root.addChild(e);
  424 |         expect(window.initializeCalls.length).to.equal(0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 424, 'column': 8, 'index': 14018}","  422 |
  423 |         app.root.addChild(e);
> 424 |         expect(window.initializeCalls.length).to.equal(0);
      |        ^ Duplicate Assert
  425 |
  426 |         e.script.enabled = true;
  427 |         expect(window.initializeCalls.length).to.equal(2);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 427, 'column': 8, 'index': 14111}","  425 |
  426 |         e.script.enabled = true;
> 427 |         expect(window.initializeCalls.length).to.equal(2);
      |        ^ Duplicate Assert
  428 |         checkInitCall(e, 0, 'initialize scriptA');
  429 |         checkInitCall(e, 1, 'postInitialize scriptA');
  430 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 448, 'column': 8, 'index': 14769}","  446 |
  447 |         expect(e.script.scriptA).to.exist;
> 448 |         expect(window.initializeCalls.length).to.equal(0);
      |        ^ Duplicate Assert
  449 |
  450 |         app.root.addChild(e);
  451 |         expect(window.initializeCalls.length).to.equal(0);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 451, 'column': 8, 'index': 14859}","  449 |
  450 |         app.root.addChild(e);
> 451 |         expect(window.initializeCalls.length).to.equal(0);
      |        ^ Duplicate Assert
  452 |
  453 |         e.script.scriptA.enabled = true;
  454 |         expect(window.initializeCalls.length).to.equal(2);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 454, 'column': 8, 'index': 14960}","  452 |
  453 |         e.script.scriptA.enabled = true;
> 454 |         expect(window.initializeCalls.length).to.equal(2);
      |        ^ Duplicate Assert
  455 |         checkInitCall(e, 0, 'initialize scriptA');
  456 |         checkInitCall(e, 1, 'postInitialize scriptA');
  457 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 494, 'column': 8, 'index': 16227}","  492 |
  493 |         var clone = e.clone();
> 494 |         expect(window.initializeCalls.length).to.equal(4);
      |        ^ Duplicate Assert
  495 |
  496 |         app.root.addChild(clone);
  497 |         expect(window.initializeCalls.length).to.equal(8);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 497, 'column': 8, 'index': 16321}","  495 |
  496 |         app.root.addChild(clone);
> 497 |         expect(window.initializeCalls.length).to.equal(8);
      |        ^ Duplicate Assert
  498 |
  499 |         checkInitCall(e, 0, 'initialize scriptA');
  500 |         checkInitCall(e, 1, 'initialize scriptB');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 534, 'column': 8, 'index': 17521}","  532 |         app.root.addChild(e);
  533 |
> 534 |         expect(window.initializeCalls.length).to.equal(0);
      |        ^ Duplicate Assert
  535 |
  536 |         var enabler = new pc.Entity('enabler');
  537 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 555, 'column': 8, 'index': 18050}","  553 |         app.root.addChild(enabler);
  554 |
> 555 |         expect(window.initializeCalls.length).to.equal(6);
      |        ^ Duplicate Assert
  556 |         checkInitCall(enabler, 0, 'initialize enabler');
  557 |         checkInitCall(e, 1, 'initialize scriptA');
  558 |         checkInitCall(e, 2, 'initialize scriptB');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 588, 'column': 8, 'index': 19132}","  586 |         app.root.addChild(e);
  587 |
> 588 |         expect(window.initializeCalls.length).to.equal(0);
      |        ^ Duplicate Assert
  589 |
  590 |         var enabler = new pc.Entity();
  591 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 609, 'column': 8, 'index': 19652}","  607 |         app.root.addChild(enabler);
  608 |
> 609 |         expect(window.initializeCalls.length).to.equal(6);
      |        ^ Duplicate Assert
  610 |         checkInitCall(enabler, 0, 'initialize enabler');
  611 |         checkInitCall(e, 1, 'initialize scriptA');
  612 |         checkInitCall(e, 2, 'initialize scriptB');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 642, 'column': 8, 'index': 20719}","  640 |         app.root.addChild(e);
  641 |
> 642 |         expect(window.initializeCalls.length).to.equal(0);
      |        ^ Duplicate Assert
  643 |
  644 |         var enabler = new pc.Entity();
  645 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 663, 'column': 8, 'index': 21239}","  661 |         app.root.addChild(enabler);
  662 |
> 663 |         expect(window.initializeCalls.length).to.equal(6);
      |        ^ Duplicate Assert
  664 |         var idx = -1;
  665 |         checkInitCall(enabler, ++idx, 'initialize enabler');
  666 |         checkInitCall(e, ++idx, 'initialize scriptA');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 756, 'column': 8, 'index': 23796}","  754 |         c1.addChild(c3);
  755 |
> 756 |         expect(window.initializeCalls.length).to.equal(0);
      |        ^ Duplicate Assert
  757 |
  758 |         app.root.addChild(e);
  759 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 760, 'column': 8, 'index': 23887}","  758 |         app.root.addChild(e);
  759 |
> 760 |         expect(window.initializeCalls.length).to.equal(16);
      |        ^ Duplicate Assert
  761 |         var idx = -1;
  762 |         checkInitCall(e, ++idx, 'initialize scriptA');
  763 |         checkInitCall(e, ++idx, 'initialize scriptB');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1106, 'column': 12, 'index': 34819}","  1104 |         var names = ['EnabledEntity', 'DisabledEntity', 'DisabledScriptComponent', 'DisabledScriptInstance'];
  1105 |         names.forEach(function (name) {
> 1106 |             expect(app.root.findByName(name)).to.not.exist;
       |            ^ Duplicate Assert
  1107 |         })
  1108 |
  1109 |         app.loadSceneHierarchy('base/tests/framework/components/script/scene1.json', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1113, 'column': 16, 'index': 35081}","  1111 |             // verify entities are loaded
  1112 |             names.forEach(function (name) {
> 1113 |                 expect(app.root.findByName(name)).to.exist;
       |                ^ Duplicate Assert
  1114 |             })
  1115 |
  1116 |             var referenced = app.root.findByName('ReferencedEntity');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1209, 'column': 8, 'index': 38563}","  1207 |
  1208 |         expect(e2.script.scriptWithAttributes.attribute3).to.be.an('object');
> 1209 |         expect(e2.script.scriptWithAttributes.attribute3.fieldNumber).to.equal(1);
       |        ^ Duplicate Assert
  1210 |         expect(e2.script.scriptWithAttributes.attribute4).to.be.an.instanceof(Array);
  1211 |
  1212 |         expect(e2.script.scriptWithAttributes.attribute4[0]).to.be.an('object');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1210, 'column': 8, 'index': 38646}","  1208 |         expect(e2.script.scriptWithAttributes.attribute3).to.be.an('object');
  1209 |         expect(e2.script.scriptWithAttributes.attribute3.fieldNumber).to.equal(1);
> 1210 |         expect(e2.script.scriptWithAttributes.attribute4).to.be.an.instanceof(Array);
       |        ^ Duplicate Assert
  1211 |
  1212 |         expect(e2.script.scriptWithAttributes.attribute4[0]).to.be.an('object');
  1213 |         expect(e2.script.scriptWithAttributes.attribute4[0].fieldNumber).to.equal(2);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1213, 'column': 8, 'index': 38814}","  1211 |
  1212 |         expect(e2.script.scriptWithAttributes.attribute4[0]).to.be.an('object');
> 1213 |         expect(e2.script.scriptWithAttributes.attribute4[0].fieldNumber).to.equal(2);
       |        ^ Duplicate Assert
  1214 |         expect(e2.script.scriptWithAttributes.attribute4).to.not.equal(e.script.scriptWithAttributes.attribute4);
  1215 |
  1216 |         var clonedChild = e2.findByName('child');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1214, 'column': 8, 'index': 38900}","  1212 |         expect(e2.script.scriptWithAttributes.attribute4[0]).to.be.an('object');
  1213 |         expect(e2.script.scriptWithAttributes.attribute4[0].fieldNumber).to.equal(2);
> 1214 |         expect(e2.script.scriptWithAttributes.attribute4).to.not.equal(e.script.scriptWithAttributes.attribute4);
       |        ^ Duplicate Assert
  1215 |
  1216 |         var clonedChild = e2.findByName('child');
  1217 |         expect(clonedChild).to.not.equal(null);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1224, 'column': 8, 'index': 39498}","  1222 |
  1223 |         e2.script.scriptWithAttributes.attribute3.fieldNumber = 4;
> 1224 |         expect(e2.script.scriptWithAttributes.attribute3.fieldNumber).to.equal(4);
       |        ^ Duplicate Assert
  1225 |         expect(e.script.scriptWithAttributes.attribute3.fieldNumber).to.equal(1);
  1226 |
  1227 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1235, 'column': 8, 'index': 39878}","  1233 |
  1234 |         expect(e2.script.scriptWithAttributes.attribute4.length).to.equal(2);
> 1235 |         expect(e2.script.scriptWithAttributes.attribute4[0].fieldNumber).to.equal(3);
       |        ^ Duplicate Assert
  1236 |         expect(e2.script.scriptWithAttributes.attribute4[1].fieldNumber).to.equal(4);
  1237 |
  1238 |         expect(e.script.scriptWithAttributes.attribute4.length).to.equal(1);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1291, 'column': 8, 'index': 41766}","  1289 |         app.root.addChild(e);
  1290 |
> 1291 |         expect(window.initializeCalls.length).to.equal(2);
       |        ^ Duplicate Assert
  1292 |         checkInitCall(e, 0, 'initialize scriptA');
  1293 |         checkInitCall(e, 1, 'postInitialize scriptA');
  1294 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1301, 'column': 8, 'index': 42031}","  1299 |         e.enabled = true;
  1300 |
> 1301 |         expect(window.initializeCalls.length).to.equal(4);
       |        ^ Duplicate Assert
  1302 |         checkInitCall(e, 0, 'enable scriptComponent scriptA');
  1303 |         checkInitCall(e, 1, 'state scriptComponent true scriptA');
  1304 |         checkInitCall(e, 2, 'enable scriptA');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1443, 'column': 8, 'index': 46169}","  1441 |         app.root.addChild(e);
  1442 |
> 1443 |         expect(window.initializeCalls.length).to.equal(1);
       |        ^ Duplicate Assert
  1444 |         checkInitCall(e, 0, 'initialize disabler');
  1445 |
  1446 |         window.initializeCalls.length = 0;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1450, 'column': 8, 'index': 46352}","  1448 |         e.enabled = true;
  1449 |
> 1450 |         expect(window.initializeCalls.length).to.equal(3);
       |        ^ Duplicate Assert
  1451 |         checkInitCall(e, 0, 'initialize scriptA');
  1452 |         checkInitCall(e, 1, 'postInitialize disabler');
  1453 |         checkInitCall(e, 2, 'postInitialize scriptA');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1480, 'column': 8, 'index': 47304}","  1478 |         app.root.addChild(e);
  1479 |
> 1480 |         expect(window.initializeCalls.length).to.equal(1);
       |        ^ Duplicate Assert
  1481 |         checkInitCall(e, 0, 'initialize disabler');
  1482 |
  1483 |         window.initializeCalls.length = 0;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1487, 'column': 8, 'index': 47494}","  1485 |         e.script.enabled = true;
  1486 |
> 1487 |         expect(window.initializeCalls.length).to.equal(3);
       |        ^ Duplicate Assert
  1488 |         checkInitCall(e, 0, 'initialize scriptA');
  1489 |         checkInitCall(e, 1, 'postInitialize disabler');
  1490 |         checkInitCall(e, 2, 'postInitialize scriptA');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1517, 'column': 8, 'index': 48444}","  1515 |         app.root.addChild(e);
  1516 |
> 1517 |         expect(window.initializeCalls.length).to.equal(2);
       |        ^ Duplicate Assert
  1518 |         checkInitCall(e, 0, 'initialize disabler');
  1519 |         checkInitCall(e, 1, 'postInitialize disabler');
  1520 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1525, 'column': 8, 'index': 48698}","  1523 |         e.script.scriptA.enabled = true;
  1524 |
> 1525 |         expect(window.initializeCalls.length).to.equal(2);
       |        ^ Duplicate Assert
  1526 |         checkInitCall(e, 0, 'initialize scriptA');
  1527 |         checkInitCall(e, 1, 'postInitialize scriptA');
  1528 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1545, 'column': 8, 'index': 49332}","  1543 |         app.root.addChild(e);
  1544 |
> 1545 |         expect(window.initializeCalls.length).to.equal(0);
       |        ^ Duplicate Assert
  1546 |
  1547 |         var asset = app.assets.get(7);
  1548 |         app.scripts.on('add:loadedLater', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1550, 'column': 16, 'index': 49532}","  1548 |         app.scripts.on('add:loadedLater', function () {
  1549 |             setTimeout(function () {
> 1550 |                 expect(window.initializeCalls.length).to.equal(2);
       |                ^ Duplicate Assert
  1551 |                 checkInitCall(e, 0, 'initialize loadedLater');
  1552 |                 checkInitCall(e, 1, 'postInitialize loadedLater');
  1553 |                 done();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1575, 'column': 8, 'index': 50280}","  1573 |         app.root.addChild(e);
  1574 |
> 1575 |         expect(window.initializeCalls.length).to.equal(0);
       |        ^ Duplicate Assert
  1576 |
  1577 |         var asset = app.assets.get(7);
  1578 |         app.scripts.on('add:loadedLater', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1580, 'column': 16, 'index': 50480}","  1578 |         app.scripts.on('add:loadedLater', function () {
  1579 |             setTimeout(function () {
> 1580 |                 expect(window.initializeCalls.length).to.equal(2);
       |                ^ Duplicate Assert
  1581 |                 checkInitCall(e, 0, 'initialize loadedLater');
  1582 |                 checkInitCall(e, 1, 'postInitialize loadedLater');
  1583 |                 done();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1607, 'column': 8, 'index': 51354}","  1605 |         app.root.addChild(e);
  1606 |
> 1607 |         expect(window.initializeCalls.length).to.equal(0);
       |        ^ Duplicate Assert
  1608 |
  1609 |         var asset = app.assets.get(7);
  1610 |         app.scripts.on('add:loadedLater', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1612, 'column': 16, 'index': 51554}","  1610 |         app.scripts.on('add:loadedLater', function () {
  1611 |             setTimeout(function () {
> 1612 |                 expect(window.initializeCalls.length).to.equal(1);
       |                ^ Duplicate Assert
  1613 |                 checkInitCall(e, 0, 'initialize loadedLater');
  1614 |                 window.initializeCalls.length = 0;
  1615 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1617, 'column': 16, 'index': 51770}","  1615 |
  1616 |                 e.enabled = true;
> 1617 |                 expect(window.initializeCalls.length).to.equal(1);
       |                ^ Duplicate Assert
  1618 |                 checkInitCall(e, 0, 'postInitialize loadedLater');
  1619 |                 done();
  1620 |             }, 100);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1643, 'column': 8, 'index': 52600}","  1641 |         app.root.addChild(e);
  1642 |
> 1643 |         expect(window.initializeCalls.length).to.equal(0);
       |        ^ Duplicate Assert
  1644 |
  1645 |         var asset = app.assets.get(7);
  1646 |         app.scripts.on('add:loadedLater', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1648, 'column': 16, 'index': 52800}","  1646 |         app.scripts.on('add:loadedLater', function () {
  1647 |             setTimeout(function () {
> 1648 |                 expect(window.initializeCalls.length).to.equal(1);
       |                ^ Duplicate Assert
  1649 |                 checkInitCall(e, 0, 'initialize loadedLater');
  1650 |                 window.initializeCalls.length = 0;
  1651 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1653, 'column': 16, 'index': 53023}","  1651 |
  1652 |                 e.script.enabled = true;
> 1653 |                 expect(window.initializeCalls.length).to.equal(1);
       |                ^ Duplicate Assert
  1654 |                 checkInitCall(e, 0, 'postInitialize loadedLater');
  1655 |                 done();
  1656 |             }, 100);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1679, 'column': 8, 'index': 53851}","  1677 |         app.root.addChild(e);
  1678 |
> 1679 |         expect(window.initializeCalls.length).to.equal(0);
       |        ^ Duplicate Assert
  1680 |
  1681 |         var asset = app.assets.get(7);
  1682 |         app.scripts.on('add:loadedLater', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1684, 'column': 16, 'index': 54051}","  1682 |         app.scripts.on('add:loadedLater', function () {
  1683 |             setTimeout(function () {
> 1684 |                 expect(window.initializeCalls.length).to.equal(1);
       |                ^ Duplicate Assert
  1685 |                 checkInitCall(e, 0, 'initialize loadedLater');
  1686 |                 window.initializeCalls.length = 0;
  1687 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1689, 'column': 16, 'index': 54286}","  1687 |
  1688 |                 e.script.loadedLater.enabled = true;
> 1689 |                 expect(window.initializeCalls.length).to.equal(1);
       |                ^ Duplicate Assert
  1690 |                 checkInitCall(e, 0, 'postInitialize loadedLater');
  1691 |
  1692 |                 done();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1718, 'column': 8, 'index': 55139}","  1716 |         app.root.addChild(e);
  1717 |
> 1718 |         expect(e.script.loadedLater).to.not.exist;
       |        ^ Duplicate Assert
  1719 |
  1720 |         var asset = app.assets.get(7);
  1721 |         app.scripts.on('add:loadedLater', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1723, 'column': 16, 'index': 55331}","  1721 |         app.scripts.on('add:loadedLater', function () {
  1722 |             setTimeout(function () {
> 1723 |                 expect(e.script.loadedLater).to.exist;
       |                ^ Duplicate Assert
  1724 |                 expect(e.script.loadedLater.disableEntity).to.equal(true);
  1725 |                 expect(e.script.loadedLater.disableScriptComponent).to.equal(true);
  1726 |                 expect(e.script.loadedLater.disableScriptInstance).to.equal(true);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1851, 'column': 8, 'index': 59451}","  1849 |         app.root.addChild(e);
  1850 |
> 1851 |         expect(window.initializeCalls.length).to.equal(6);
       |        ^ Duplicate Assert
  1852 |         checkInitCall(e, 0, 'initialize scriptA');
  1853 |         checkInitCall(e, 1, 'initialize destroyer');
  1854 |         checkInitCall(e, 2, 'initialize scriptB');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 1862, 'column': 8, 'index': 59899}","  1860 |         app.update();
  1861 |
> 1862 |         expect(window.initializeCalls.length).to.equal(8);
       |        ^ Duplicate Assert
  1863 |
  1864 |         var idx = 0;
  1865 |         checkInitCall(e, idx++, 'update scriptA');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 2837, 'column': 8, 'index': 93362}","  2835 |         app.update();
  2836 |
> 2837 |         expect(window.initializeCalls.length).to.equal(7);
       |        ^ Duplicate Assert
  2838 |         checkInitCall(b, 0, 'update enableDuringUpdateLoop');
  2839 |         checkInitCall(a, 1, 'initialize scriptA');
  2840 |         checkInitCall(a, 2, 'initialize scriptB');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 2849, 'column': 8, 'index': 93864}","  2847 |         app.update();
  2848 |
> 2849 |         expect(window.initializeCalls.length).to.equal(5);
       |        ^ Duplicate Assert
  2850 |         checkInitCall(a, 0, 'update scriptA');
  2851 |         checkInitCall(a, 1, 'update scriptB');
  2852 |         checkInitCall(b, 2, 'update enableDuringUpdateLoop');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 2927, 'column': 8, 'index': 97030}","  2925 |         app.update();
  2926 |
> 2927 |         expect(window.initializeCalls.length).to.equal(6);
       |        ^ Duplicate Assert
  2928 |         checkInitCall(a, 0, 'update enableDuringUpdateLoop');
  2929 |         checkInitCall(a, 1, 'initialize scriptB');
  2930 |         checkInitCall(a, 2, 'postInitialize scriptB');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 2937, 'column': 8, 'index': 97472}","  2935 |         window.initializeCalls.length = 0;
  2936 |         app.update();
> 2937 |         expect(window.initializeCalls.length).to.equal(5);
       |        ^ Duplicate Assert
  2938 |         checkInitCall(a, 0, 'update scriptB');
  2939 |         checkInitCall(a, 1, 'update enableDuringUpdateLoop');
  2940 |         checkInitCall(a, 2, 'update scriptA');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 3015, 'column': 8, 'index': 100597}","  3013 |         app.update();
  3014 |
> 3015 |         expect(window.initializeCalls.length).to.equal(5);
       |        ^ Duplicate Assert
  3016 |         checkInitCall(a, 0, 'update scriptA');
  3017 |         checkInitCall(a, 1, 'post update enableDuringUpdateLoop');
  3018 |         checkInitCall(a, 2, 'initialize scriptB');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Duplicate Assert,"{'line': 3024, 'column': 8, 'index': 100993}","  3022 |         window.initializeCalls.length = 0;
  3023 |         app.update();
> 3024 |         expect(window.initializeCalls.length).to.equal(5);
       |        ^ Duplicate Assert
  3025 |         checkInitCall(a, 0, 'update scriptB');
  3026 |         checkInitCall(a, 1, 'update scriptA');
  3027 |         checkInitCall(a, 2, 'postUpdate scriptB');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2, 'column': 4, 'index': 49}","  1 | describe(""pc.ScriptComponent"", function () {
> 2 |     var app;
    |    ^ Global Variable
  3 |
  4 |     beforeEach(function (done) {
  5 |         this.timeout(4000); // Double the default 2000ms timeout which often fails on CirclCI"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 305, 'column': 4, 'index': 10424}","  303 |     });
  304 |
> 305 |     var checkInitCall = function (entity, index, text) {
      |    ^ Global Variable
  306 |         expect(window.initializeCalls[index]).to.equal(entity.getGuid() + ' ' + text);
  307 |     };
  308 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 317, 'column': 8, 'index': 10911}","  315 |
  316 |     it(""initialize and postInitialize are called on new entity"", function () {
> 317 |         var e = new pc.Entity();
      |        ^ Global Variable
  318 |
  319 |         e.addComponent('script', {
  320 |             ""enabled"": true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 343, 'column': 8, 'index': 11649}","  341 |
  342 |     it(""all initialize calls are before all postInitialize calls on new entity"", function () {
> 343 |         var e = new pc.Entity();
      |        ^ Global Variable
  344 |
  345 |         e.addComponent('script', {
  346 |             ""enabled"": true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 378, 'column': 8, 'index': 12689}","  376 |
  377 |     it(""initialize and postInitialize are called on entity that is enabled later"", function () {
> 378 |         var e = new pc.Entity();
      |        ^ Global Variable
  379 |         e.enabled = false;
  380 |         e.addComponent('script', {
  381 |             ""enabled"": true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 406, 'column': 8, 'index': 13550}","  404 |
  405 |     it(""initialize and postInitialize are called on script component that is enabled later"", function () {
> 406 |         var e = new pc.Entity();
      |        ^ Global Variable
  407 |         e.addComponent('script', {
  408 |             ""enabled"": false,
  409 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 433, 'column': 8, 'index': 14391}","  431 |
  432 |     it(""initialize and postInitialize are called on script instance that is enabled later"", function () {
> 433 |         var e = new pc.Entity();
      |        ^ Global Variable
  434 |         e.addComponent('script', {
  435 |             ""enabled"": true,
  436 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 460, 'column': 8, 'index': 15240}","  458 |
  459 |     it(""initialize and postInitialize are called on script instance that is created later"", function () {
> 460 |         var e = new pc.Entity();
      |        ^ Global Variable
  461 |         app.root.addChild(e);
  462 |         e.addComponent('script');
  463 |         e.script.create('scriptA');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 471, 'column': 8, 'index': 15680}","  469 |
  470 |     it(""initialize and postInitialize are called on cloned enabled entity"", function () {
> 471 |         var e = new pc.Entity();
      |        ^ Global Variable
  472 |
  473 |         e.addComponent('script', {
  474 |             ""enabled"": true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 493, 'column': 8, 'index': 16196}","  491 |         app.root.addChild(e);
  492 |
> 493 |         var clone = e.clone();
      |        ^ Global Variable
  494 |         expect(window.initializeCalls.length).to.equal(4);
  495 |
  496 |         app.root.addChild(clone);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 511, 'column': 8, 'index': 16960}","  509 |
  510 |     it(""all initialize calls are before postInitialize calls when enabling entity from inside initilize function"", function () {
> 511 |         var e = new pc.Entity('entity to enable');
      |        ^ Global Variable
  512 |         e.enabled = false;
  513 |
  514 |         e.addComponent('script', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 536, 'column': 8, 'index': 17581}","  534 |         expect(window.initializeCalls.length).to.equal(0);
  535 |
> 536 |         var enabler = new pc.Entity('enabler');
      |        ^ Global Variable
  537 |
  538 |         enabler.addComponent('script', {
  539 |             ""enabled"": true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 566, 'column': 8, 'index': 18597}","  564 |
  565 |     it(""all initialize calls are before postInitialize calls for entity whose script component is enabled inside initilize function"", function () {
> 566 |         var e = new pc.Entity('entity to enable');
      |        ^ Global Variable
  567 |
  568 |         e.addComponent('script', {
  569 |             ""enabled"": false,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 590, 'column': 8, 'index': 19192}","  588 |         expect(window.initializeCalls.length).to.equal(0);
  589 |
> 590 |         var enabler = new pc.Entity();
      |        ^ Global Variable
  591 |
  592 |         enabler.addComponent('script', {
  593 |             ""enabled"": true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 620, 'column': 8, 'index': 20183}","  618 |
  619 |     it(""initialize and postInitialize are fired together for script instance that is enabled in initialize function"", function () {
> 620 |         var e = new pc.Entity('entity to enable');
      |        ^ Global Variable
  621 |
  622 |         e.addComponent('script', {
  623 |             ""enabled"": true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 644, 'column': 8, 'index': 20779}","  642 |         expect(window.initializeCalls.length).to.equal(0);
  643 |
> 644 |         var enabler = new pc.Entity();
      |        ^ Global Variable
  645 |
  646 |         enabler.addComponent('script', {
  647 |             ""enabled"": true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 664, 'column': 8, 'index': 21298}","  662 |
  663 |         expect(window.initializeCalls.length).to.equal(6);
> 664 |         var idx = -1;
      |        ^ Global Variable
  665 |         checkInitCall(enabler, ++idx, 'initialize enabler');
  666 |         checkInitCall(e, ++idx, 'initialize scriptA');
  667 |         checkInitCall(e, ++idx, 'postInitialize scriptA');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 675, 'column': 8, 'index': 21779}","  673 |
  674 |     it(""initialize is called for entity and all children before postInitialize"", function () {
> 675 |         var e = new pc.Entity();
      |        ^ Global Variable
  676 |
  677 |         e.addComponent('script', {
  678 |             ""enabled"": true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 695, 'column': 8, 'index': 22264}","  693 |         });
  694 |
> 695 |         var c1 = new pc.Entity();
      |        ^ Global Variable
  696 |         c1.addComponent('script', {
  697 |             ""enabled"": true,
  698 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 715, 'column': 8, 'index': 22774}","  713 |         e.addChild(c1);
  714 |
> 715 |         var c2 = new pc.Entity();
      |        ^ Global Variable
  716 |         c2.addComponent('script', {
  717 |             ""enabled"": true,
  718 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 735, 'column': 8, 'index': 23284}","  733 |         e.addChild(c2);
  734 |
> 735 |         var c3 = new pc.Entity();
      |        ^ Global Variable
  736 |         c3.addComponent('script', {
  737 |             ""enabled"": true,
  738 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 761, 'column': 8, 'index': 23947}","  759 |
  760 |         expect(window.initializeCalls.length).to.equal(16);
> 761 |         var idx = -1;
      |        ^ Global Variable
  762 |         checkInitCall(e, ++idx, 'initialize scriptA');
  763 |         checkInitCall(e, ++idx, 'initialize scriptB');
  764 |         checkInitCall(c1, ++idx, 'initialize scriptA');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 782, 'column': 8, 'index': 25007}","  780 |
  781 |     it(""postInitialize is called for entities that are cloned in another postInitialize"", function () {
> 782 |         var src = new pc.Entity();
      |        ^ Global Variable
  783 |         src.enabled = false;
  784 |         src.addComponent('script', {
  785 |             ""enabled"": true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 800, 'column': 8, 'index': 25458}","  798 |         app.root.addChild(src);
  799 |
> 800 |         var e = new pc.Entity();
      |        ^ Global Variable
  801 |         e.addComponent('script', {
  802 |             ""enabled"": true,
  803 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 822, 'column': 8, 'index': 26050}","  820 |
  821 |     it(""script attributes are initialized for enabled entity"", function () {
> 822 |         var e2 = new pc.Entity();
      |        ^ Global Variable
  823 |         app.root.addChild(e2);
  824 |
  825 |         expect(e2).to.exist;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 827, 'column': 8, 'index': 26146}","  825 |         expect(e2).to.exist;
  826 |
> 827 |         var e = new pc.Entity();
      |        ^ Global Variable
  828 |         e.addComponent('script', {
  829 |             ""enabled"": true,
  830 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 851, 'column': 8, 'index': 26839}","  849 |
  850 |     it(""script attributes are initialized with disabled entity"", function () {
> 851 |         var e2 = new pc.Entity();
      |        ^ Global Variable
  852 |         app.root.addChild(e2);
  853 |         expect(e2).to.exist;
  854 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 855, 'column': 8, 'index': 26934}","  853 |         expect(e2).to.exist;
  854 |
> 855 |         var e = new pc.Entity();
      |        ^ Global Variable
  856 |         e.enabled = false;
  857 |         e.addComponent('script', {
  858 |             ""enabled"": true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 879, 'column': 8, 'index': 27662}","  877 |
  878 |     it(""script attributes are initialized for disabled script component"", function () {
> 879 |         var e2 = new pc.Entity();
      |        ^ Global Variable
  880 |         app.root.addChild(e2);
  881 |         expect(e2).to.exist;
  882 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 883, 'column': 8, 'index': 27757}","  881 |         expect(e2).to.exist;
  882 |
> 883 |         var e = new pc.Entity();
      |        ^ Global Variable
  884 |         e.addComponent('script', {
  885 |             ""enabled"": false,
  886 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 905, 'column': 8, 'index': 28457}","  903 |
  904 |     it(""script attributes are initialized for disabled script instance"", function () {
> 905 |         var e2 = new pc.Entity();
      |        ^ Global Variable
  906 |         app.root.addChild(e2);
  907 |         expect(e2).to.exist;
  908 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 909, 'column': 8, 'index': 28552}","  907 |         expect(e2).to.exist;
  908 |
> 909 |         var e = new pc.Entity();
      |        ^ Global Variable
  910 |         e.addComponent('script', {
  911 |             ""enabled"": true,
  912 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 931, 'column': 8, 'index': 29251}","  929 |
  930 |     it(""script attributes are initialized when cloning enabled entity"", function () {
> 931 |         var e2 = new pc.Entity();
      |        ^ Global Variable
  932 |         app.root.addChild(e2);
  933 |         expect(e2).to.exist;
  934 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 935, 'column': 8, 'index': 29346}","  933 |         expect(e2).to.exist;
  934 |
> 935 |         var e = new pc.Entity();
      |        ^ Global Variable
  936 |         e.addComponent('script', {
  937 |             ""enabled"": true,
  938 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 953, 'column': 8, 'index': 29809}","  951 |         app.root.addChild(e);
  952 |
> 953 |         var clone = e.clone();
      |        ^ Global Variable
  954 |         app.root.addChild(clone);
  955 |
  956 |         expect(clone.script.scriptWithAttributes.attribute1).to.equal(e2);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 961, 'column': 8, 'index': 30120}","  959 |
  960 |     it(""script attributes are initialized when cloning disabled entity"", function () {
> 961 |         var e2 = new pc.Entity();
      |        ^ Global Variable
  962 |         app.root.addChild(e2);
  963 |         expect(e2).to.exist;
  964 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 965, 'column': 8, 'index': 30215}","  963 |         expect(e2).to.exist;
  964 |
> 965 |         var e = new pc.Entity();
      |        ^ Global Variable
  966 |         e.enabled = false;
  967 |         e.addComponent('script', {
  968 |             ""enabled"": true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 984, 'column': 8, 'index': 30705}","  982 |         app.root.addChild(e);
  983 |
> 984 |         var clone = e.clone();
      |        ^ Global Variable
  985 |         app.root.addChild(clone);
  986 |
  987 |         expect(clone.script.scriptWithAttributes.attribute1).to.equal(e2);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 992, 'column': 8, 'index': 31026}","  990 |
  991 |     it(""script attributes are initialized when cloning disabled script component"", function () {
> 992 |         var e2 = new pc.Entity();
      |        ^ Global Variable
  993 |         app.root.addChild(e2);
  994 |         expect(e2).to.exist;
  995 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 996, 'column': 8, 'index': 31121}","  994 |         expect(e2).to.exist;
  995 |
> 996 |         var e = new pc.Entity();
      |        ^ Global Variable
  997 |         e.addComponent('script', {
  998 |             ""enabled"": false,
  999 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1014, 'column': 8, 'index': 31585}","  1012 |         app.root.addChild(e);
  1013 |
> 1014 |         var clone = e.clone();
       |        ^ Global Variable
  1015 |         app.root.addChild(clone);
  1016 |
  1017 |         expect(clone.script.scriptWithAttributes.attribute1).to.equal(e2);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1022, 'column': 8, 'index': 31905}","  1020 |
  1021 |     it(""script attributes are initialized when cloning disabled script instance"", function () {
> 1022 |         var e2 = new pc.Entity();
       |        ^ Global Variable
  1023 |         app.root.addChild(e2);
  1024 |         expect(e2).to.exist;
  1025 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1026, 'column': 8, 'index': 32000}","  1024 |         expect(e2).to.exist;
  1025 |
> 1026 |         var e = new pc.Entity();
       |        ^ Global Variable
  1027 |         e.addComponent('script', {
  1028 |             ""enabled"": true,
  1029 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1044, 'column': 8, 'index': 32464}","  1042 |         app.root.addChild(e);
  1043 |
> 1044 |         var clone = e.clone();
       |        ^ Global Variable
  1045 |         app.root.addChild(clone);
  1046 |
  1047 |         expect(clone.script.scriptWithAttributes.attribute1).to.equal(e2);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1053, 'column': 8, 'index': 32785}","  1051 |
  1052 |     it(""script attributes are initialized when loading scene for enabled entity"", function () {
> 1053 |         var a = app.root.findByName('EnabledEntity');
       |        ^ Global Variable
  1054 |         expect(a).to.exist;
  1055 |
  1056 |         var b = app.root.findByName('ReferencedEntity');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1056, 'column': 8, 'index': 32868}","  1054 |         expect(a).to.exist;
  1055 |
> 1056 |         var b = app.root.findByName('ReferencedEntity');
       |        ^ Global Variable
  1057 |         expect(b).to.exist;
  1058 |
  1059 |         expect(a.script.scriptWithAttributes.attribute1).to.equal(b);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1064, 'column': 8, 'index': 33200}","  1062 |
  1063 |     it(""script attributes are initialized when loading scene for disabled entity"", function () {
> 1064 |         var a = app.root.findByName('DisabledEntity');
       |        ^ Global Variable
  1065 |
  1066 |         var b = app.root.findByName('ReferencedEntity');
  1067 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1066, 'column': 8, 'index': 33256}","  1064 |         var a = app.root.findByName('DisabledEntity');
  1065 |
> 1066 |         var b = app.root.findByName('ReferencedEntity');
       |        ^ Global Variable
  1067 |
  1068 |         expect(a).to.exist;
  1069 |         expect(b).to.exist;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1076, 'column': 8, 'index': 33627}","  1074 |
  1075 |     it(""script attributes are initialized when loading scene for disabled script component"", function () {
> 1076 |         var a = app.root.findByName('DisabledScriptComponent');
       |        ^ Global Variable
  1077 |         expect(a).to.exist;
  1078 |
  1079 |         var b = app.root.findByName('ReferencedEntity');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1079, 'column': 8, 'index': 33720}","  1077 |         expect(a).to.exist;
  1078 |
> 1079 |         var b = app.root.findByName('ReferencedEntity');
       |        ^ Global Variable
  1080 |         expect(b).to.exist;
  1081 |
  1082 |         expect(a.script.scriptWithAttributes.attribute1).to.equal(b);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1087, 'column': 8, 'index': 34061}","  1085 |
  1086 |     it(""script attributes are initialized when loading scene for disabled script instance"", function () {
> 1087 |         var a = app.root.findByName('DisabledScriptInstance');
       |        ^ Global Variable
  1088 |         expect(a).to.exist;
  1089 |
  1090 |         var b = app.root.findByName('ReferencedEntity');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1090, 'column': 8, 'index': 34153}","  1088 |         expect(a).to.exist;
  1089 |
> 1090 |         var b = app.root.findByName('ReferencedEntity');
       |        ^ Global Variable
  1091 |         expect(b).to.exist;
  1092 |
  1093 |         expect(a.script.scriptWithAttributes.attribute1).to.equal(b);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1104, 'column': 8, 'index': 34665}","  1102 |
  1103 |         // verify entities are not there anymore
> 1104 |         var names = ['EnabledEntity', 'DisabledEntity', 'DisabledScriptComponent', 'DisabledScriptInstance'];
       |        ^ Global Variable
  1105 |         names.forEach(function (name) {
  1106 |             expect(app.root.findByName(name)).to.not.exist;
  1107 |         })"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1116, 'column': 12, 'index': 35153}","  1114 |             })
  1115 |
> 1116 |             var referenced = app.root.findByName('ReferencedEntity');
       |            ^ Global Variable
  1117 |
  1118 |             // verify script attributes are initialized
  1119 |             names.forEach(function (name) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1120, 'column': 16, 'index': 35328}","  1118 |             // verify script attributes are initialized
  1119 |             names.forEach(function (name) {
> 1120 |                 var e = app.root.findByName(name);
       |                ^ Global Variable
  1121 |                 expect(e.script).to.exist;
  1122 |                 expect(e.script.scriptWithAttributes.attribute1).to.equal(referenced);
  1123 |                 expect(e.script.scriptWithAttributes.attribute2).to.equal(2);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1131, 'column': 8, 'index': 35710}","  1129 |
  1130 |     it('json script attributes are initialized correctly', function () {
> 1131 |         var e = new pc.Entity();
       |        ^ Global Variable
  1132 |         e.addComponent('script', {
  1133 |             ""enabled"": true,
  1134 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1177, 'column': 8, 'index': 37604}","  1175 |
  1176 |     it('json script attributes are cloned correctly', function () {
> 1177 |         var e = new pc.Entity();
       |        ^ Global Variable
  1178 |         var child = new pc.Entity('child');
  1179 |         e.addChild(child);
  1180 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1178, 'column': 8, 'index': 37637}","  1176 |     it('json script attributes are cloned correctly', function () {
  1177 |         var e = new pc.Entity();
> 1178 |         var child = new pc.Entity('child');
       |        ^ Global Variable
  1179 |         e.addChild(child);
  1180 |
  1181 |         e.addComponent('script', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1205, 'column': 8, 'index': 38425}","  1203 |         app.root.addChild(e);
  1204 |
> 1205 |         var e2 = e.clone();
       |        ^ Global Variable
  1206 |         app.root.addChild(e2);
  1207 |
  1208 |         expect(e2.script.scriptWithAttributes.attribute3).to.be.an('object');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1216, 'column': 8, 'index': 39015}","  1214 |         expect(e2.script.scriptWithAttributes.attribute4).to.not.equal(e.script.scriptWithAttributes.attribute4);
  1215 |
> 1216 |         var clonedChild = e2.findByName('child');
       |        ^ Global Variable
  1217 |         expect(clonedChild).to.not.equal(null);
  1218 |
  1219 |         // check for 'true' instead of perform actual equals test because when it's false it's terribly slow"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1243, 'column': 8, 'index': 40288}","  1241 |
  1242 |     it('default values work for script attributes', function () {
> 1243 |         var e = new pc.Entity();
       |        ^ Global Variable
  1244 |         e.addComponent('script');
  1245 |         e.script.create('scriptWithAttributes');
  1246 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1256, 'column': 8, 'index': 40753}","  1254 |
  1255 |     it('default values work for partially initialized script attributes', function () {
> 1256 |         var e = new pc.Entity();
       |        ^ Global Variable
  1257 |         e.addComponent('script');
  1258 |         e.script.create('scriptWithAttributes', {
  1259 |             attributes: {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1275, 'column': 8, 'index': 41401}","  1273 |
  1274 |     it('enable is fired when entity becomes enabled', function () {
> 1275 |         var e = new pc.Entity();
       |        ^ Global Variable
  1276 |         e.addComponent('script', {
  1277 |             ""enabled"": true,
  1278 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1309, 'column': 8, 'index': 42397}","  1307 |
  1308 |     it('disable is fired when entity becomes disabled', function () {
> 1309 |         var e = new pc.Entity();
       |        ^ Global Variable
  1310 |         e.addComponent('script', {
  1311 |             ""enabled"": true,
  1312 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1337, 'column': 8, 'index': 43212}","  1335 |
  1336 |     it('enable is fired when script component becomes enabled', function () {
> 1337 |         var e = new pc.Entity();
       |        ^ Global Variable
  1338 |         e.addComponent('script', {
  1339 |             ""enabled"": true,
  1340 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1367, 'column': 8, 'index': 44067}","  1365 |
  1366 |     it('enable is not fired if script component started disabled', function () {
> 1367 |         var e = new pc.Entity();
       |        ^ Global Variable
  1368 |         e.addComponent('script', {
  1369 |             ""enabled"": false,
  1370 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1391, 'column': 8, 'index': 44721}","  1389 |
  1390 |     it('disable is fired when script component becomes disabled', function () {
> 1391 |         var e = new pc.Entity();
       |        ^ Global Variable
  1392 |         e.addComponent('script', {
  1393 |             ""enabled"": true,
  1394 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1420, 'column': 8, 'index': 45586}","  1418 |
  1419 |     it('if entity is disabled in initialize call and enabled later, postInitialize is called only later', function () {
> 1420 |         var e = new pc.Entity();
       |        ^ Global Variable
  1421 |         e.addComponent('script', {
  1422 |             ""enabled"": true,
  1423 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1457, 'column': 8, 'index': 46712}","  1455 |
  1456 |     it('if script component is disabled in initialize call and enabled later, postInitialize is called only later', function () {
> 1457 |         var e = new pc.Entity();
       |        ^ Global Variable
  1458 |         e.addComponent('script', {
  1459 |             ""enabled"": true,
  1460 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1494, 'column': 8, 'index': 47853}","  1492 |
  1493 |     it('if script instance is disabled in initialize call and enabled later, postInitialize is called only later', function () {
> 1494 |         var e = new pc.Entity();
       |        ^ Global Variable
  1495 |         e.addComponent('script', {
  1496 |             ""enabled"": true,
  1497 |             ""order"": ["
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1531, 'column': 8, 'index': 48989}","  1529 |
  1530 |     it('initialize and postInitialize are called if script is added to the script registry later', function (done) {
> 1531 |         var e = new pc.Entity();
       |        ^ Global Variable
  1532 |         e.addComponent('script', {
  1533 |             ""enabled"": true,
  1534 |             ""order"": [""loadedLater""],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1547, 'column': 8, 'index': 49392}","  1545 |         expect(window.initializeCalls.length).to.equal(0);
  1546 |
> 1547 |         var asset = app.assets.get(7);
       |        ^ Global Variable
  1548 |         app.scripts.on('add:loadedLater', function () {
  1549 |             setTimeout(function () {
  1550 |                 expect(window.initializeCalls.length).to.equal(2);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1561, 'column': 8, 'index': 49937}","  1559 |
  1560 |     it('initialize and postInitialize are called if script is added to the script registry later', function (done) {
> 1561 |         var e = new pc.Entity();
       |        ^ Global Variable
  1562 |         e.addComponent('script', {
  1563 |             ""enabled"": true,
  1564 |             ""order"": [""loadedLater""],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1577, 'column': 8, 'index': 50340}","  1575 |         expect(window.initializeCalls.length).to.equal(0);
  1576 |
> 1577 |         var asset = app.assets.get(7);
       |        ^ Global Variable
  1578 |         app.scripts.on('add:loadedLater', function () {
  1579 |             setTimeout(function () {
  1580 |                 expect(window.initializeCalls.length).to.equal(2);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1591, 'column': 8, 'index': 50944}","  1589 |
  1590 |     it('if entity is disabled in initialize call of script that is added to the registry later, postInitialize is called only when it becomes enabled again', function (done) {
> 1591 |         var e = new pc.Entity();
       |        ^ Global Variable
  1592 |         e.addComponent('script', {
  1593 |             ""enabled"": true,
  1594 |             ""order"": [""loadedLater""],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1609, 'column': 8, 'index': 51414}","  1607 |         expect(window.initializeCalls.length).to.equal(0);
  1608 |
> 1609 |         var asset = app.assets.get(7);
       |        ^ Global Variable
  1610 |         app.scripts.on('add:loadedLater', function () {
  1611 |             setTimeout(function () {
  1612 |                 expect(window.initializeCalls.length).to.equal(1);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1627, 'column': 8, 'index': 52181}","  1625 |
  1626 |     it('if script component is disabled in initialize call of script that is added to the registry later, postInitialize is called only when it becomes enabled again', function (done) {
> 1627 |         var e = new pc.Entity();
       |        ^ Global Variable
  1628 |         e.addComponent('script', {
  1629 |             ""enabled"": true,
  1630 |             ""order"": [""loadedLater""],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1645, 'column': 8, 'index': 52660}","  1643 |         expect(window.initializeCalls.length).to.equal(0);
  1644 |
> 1645 |         var asset = app.assets.get(7);
       |        ^ Global Variable
  1646 |         app.scripts.on('add:loadedLater', function () {
  1647 |             setTimeout(function () {
  1648 |                 expect(window.initializeCalls.length).to.equal(1);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1663, 'column': 8, 'index': 53433}","  1661 |
  1662 |     it('if script instance is disabled in initialize call of script that is added to the registry later, postInitialize is called only when it becomes enabled again', function (done) {
> 1663 |         var e = new pc.Entity();
       |        ^ Global Variable
  1664 |         e.addComponent('script', {
  1665 |             ""enabled"": true,
  1666 |             ""order"": [""loadedLater""],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1681, 'column': 8, 'index': 53911}","  1679 |         expect(window.initializeCalls.length).to.equal(0);
  1680 |
> 1681 |         var asset = app.assets.get(7);
       |        ^ Global Variable
  1682 |         app.scripts.on('add:loadedLater', function () {
  1683 |             setTimeout(function () {
  1684 |                 expect(window.initializeCalls.length).to.equal(1);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1700, 'column': 8, 'index': 54617}","  1698 |
  1699 |     it('script attributes are initialized when script is added to the registry later', function (done) {
> 1700 |         var e = new pc.Entity();
       |        ^ Global Variable
  1701 |         e.addComponent('script', {
  1702 |             ""enabled"": true,
  1703 |             ""order"": [""loadedLater""],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1720, 'column': 8, 'index': 55191}","  1718 |         expect(e.script.loadedLater).to.not.exist;
  1719 |
> 1720 |         var asset = app.assets.get(7);
       |        ^ Global Variable
  1721 |         app.scripts.on('add:loadedLater', function () {
  1722 |             setTimeout(function () {
  1723 |                 expect(e.script.loadedLater).to.exist;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1735, 'column': 8, 'index': 55824}","  1733 |
  1734 |     it('destroying entity during update stops updating the rest of the entity\'s scripts', function () {
> 1735 |         var e = new pc.Entity();
       |        ^ Global Variable
  1736 |         e.addComponent('script', {
  1737 |             enabled: true,
  1738 |             order: ['scriptA', 'destroyer', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1771, 'column': 8, 'index': 56943}","  1769 |         checkInitCall(e, 1, 'update destroyer');
  1770 |
> 1771 |         var updatesFound = 0;
       |        ^ Global Variable
  1772 |         for (var i = 2; i < window.initializeCalls.length; i++) {
  1773 |             if (window.initializeCalls[i].indexOf('update') >= 0) {
  1774 |                 updatesFound++;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1772, 'column': 13, 'index': 56978}","  1770 |
  1771 |         var updatesFound = 0;
> 1772 |         for (var i = 2; i < window.initializeCalls.length; i++) {
       |             ^ Global Variable
  1773 |             if (window.initializeCalls[i].indexOf('update') >= 0) {
  1774 |                 updatesFound++;
  1775 |             }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1782, 'column': 8, 'index': 57338}","  1780 |
  1781 |     it('remove script component from entity during update stops updating the rest of the entity\'s scripts', function () {
> 1782 |         var e = new pc.Entity();
       |        ^ Global Variable
  1783 |         e.addComponent('script', {
  1784 |             enabled: true,
  1785 |             order: ['scriptA', 'destroyer', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1818, 'column': 8, 'index': 58466}","  1816 |         checkInitCall(e, 1, 'update destroyer');
  1817 |
> 1818 |         var updatesFound = 0;
       |        ^ Global Variable
  1819 |         for (var i = 2; i < window.initializeCalls.length; i++) {
  1820 |             if (window.initializeCalls[i].indexOf('update') >= 0) {
  1821 |                 updatesFound++;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1819, 'column': 13, 'index': 58501}","  1817 |
  1818 |         var updatesFound = 0;
> 1819 |         for (var i = 2; i < window.initializeCalls.length; i++) {
       |             ^ Global Variable
  1820 |             if (window.initializeCalls[i].indexOf('update') >= 0) {
  1821 |                 updatesFound++;
  1822 |             }"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1829, 'column': 8, 'index': 58869}","  1827 |
  1828 |     it('remove script instance from script component during update keeps updating the rest of the entity\s scripts', function () {
> 1829 |         var e = new pc.Entity();
       |        ^ Global Variable
  1830 |         e.addComponent('script', {
  1831 |             enabled: true,
  1832 |             order: ['scriptA', 'destroyer', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1864, 'column': 8, 'index': 59959}","  1862 |         expect(window.initializeCalls.length).to.equal(8);
  1863 |
> 1864 |         var idx = 0;
       |        ^ Global Variable
  1865 |         checkInitCall(e, idx++, 'update scriptA');
  1866 |         checkInitCall(e, idx++, 'update destroyer');
  1867 |         checkInitCall(e, idx++, 'disable scriptA');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1877, 'column': 8, 'index': 60512}","  1875 |
  1876 |     it('destroying entity fires disable and destroy events on script instances', function () {
> 1877 |         var e = new pc.Entity();
       |        ^ Global Variable
  1878 |         e.addComponent('script', {
  1879 |             enabled: true,
  1880 |             order: ['scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1903, 'column': 8, 'index': 61316}","  1901 |
  1902 |     it('removing script component fires disable and destroy events on script instances', function () {
> 1903 |         var e = new pc.Entity();
       |        ^ Global Variable
  1904 |         e.addComponent('script', {
  1905 |             enabled: true,
  1906 |             order: ['scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1927, 'column': 8, 'index': 62011}","  1925 |
  1926 |     it('destroying script instance disable and destroy event on the destroyed script instance', function () {
> 1927 |         var e = new pc.Entity();
       |        ^ Global Variable
  1928 |         e.addComponent('script', {
  1929 |             enabled: true,
  1930 |             order: ['scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1951, 'column': 8, 'index': 62721}","  1949 |
  1950 |     it('destroying entity during update does not skip updating any other script components on other entities', function () {
> 1951 |         var e = new pc.Entity('destroyer');
       |        ^ Global Variable
  1952 |         e.addComponent('script', {
  1953 |             enabled: true,
  1954 |             order: ['destroyer'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1965, 'column': 8, 'index': 63093}","  1963 |         });
  1964 |
> 1965 |         var other = new pc.Entity('scriptA');
       |        ^ Global Variable
  1966 |         other.addComponent('script', {
  1967 |             enabled: true,
  1968 |             order: ['scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 1993, 'column': 8, 'index': 64004}","  1991 |
  1992 |     it('destroying entity during postUpdate does not skip updating any other script components on other entities', function () {
> 1993 |         var e = new pc.Entity();
       |        ^ Global Variable
  1994 |         e.addComponent('script', {
  1995 |             enabled: true,
  1996 |             order: ['destroyer'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2008, 'column': 8, 'index': 64415}","  2006 |         });
  2007 |
> 2008 |         var other = new pc.Entity();
       |        ^ Global Variable
  2009 |         other.addComponent('script', {
  2010 |             enabled: true,
  2011 |             order: ['scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2028, 'column': 8, 'index': 64871}","  2026 |
  2027 |         expect(window.initializeCalls.length).to.equal(7);
> 2028 |         var idx = 0;
       |        ^ Global Variable
  2029 |         checkInitCall(e, idx++, 'update destroyer');
  2030 |         checkInitCall(other, idx++, 'update scriptA');
  2031 |         checkInitCall(e, idx++, 'postUpdate destroyer');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2043, 'column': 12, 'index': 65609}","  2041 |         window.initializeCalls.length = 0;
  2042 |         app.scenes.loadScene('base/tests/framework/components/script/scene2.json', function () {
> 2043 |             var e = app.root.findByName('A');
       |            ^ Global Variable
  2044 |             var other = app.root.findByName('B');
  2045 |
  2046 |             app.start();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2044, 'column': 12, 'index': 65655}","  2042 |         app.scenes.loadScene('base/tests/framework/components/script/scene2.json', function () {
  2043 |             var e = app.root.findByName('A');
> 2044 |             var other = app.root.findByName('B');
       |            ^ Global Variable
  2045 |
  2046 |             app.start();
  2047 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2049, 'column': 12, 'index': 65795}","  2047 |
  2048 |             expect(window.initializeCalls.length).to.equal(8);
> 2049 |             var idx = 0;
       |            ^ Global Variable
  2050 |             checkInitCall(e, idx++, 'initialize destroyer');
  2051 |             checkInitCall(e, idx++, 'disable destroyer');
  2052 |             checkInitCall(e, idx++, 'state false destroyer');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2064, 'column': 8, 'index': 66482}","  2062 |
  2063 |     it('destroying entity during postInitialize does not skip updating any other script components on other entities', function () {
> 2064 |         var root = new pc.Entity();
       |        ^ Global Variable
  2065 |
  2066 |         var e = new pc.Entity();
  2067 |         e.addComponent('script', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2066, 'column': 8, 'index': 66519}","  2064 |         var root = new pc.Entity();
  2065 |
> 2066 |         var e = new pc.Entity();
       |        ^ Global Variable
  2067 |         e.addComponent('script', {
  2068 |             enabled: true,
  2069 |             order: ['destroyer'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2083, 'column': 8, 'index': 66961}","  2081 |         root.addChild(e);
  2082 |
> 2083 |         var other = new pc.Entity();
       |        ^ Global Variable
  2084 |         other.addComponent('script', {
  2085 |             enabled: true,
  2086 |             order: ['scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2101, 'column': 8, 'index': 67372}","  2099 |
  2100 |         expect(window.initializeCalls.length).to.equal(9);
> 2101 |         var idx = 0;
       |        ^ Global Variable
  2102 |         checkInitCall(e, idx++, 'initialize destroyer');
  2103 |         checkInitCall(other, idx++, 'initialize scriptA');
  2104 |         checkInitCall(e, idx++, 'postInitialize destroyer');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2114, 'column': 8, 'index': 68055}","  2112 |
  2113 |     it('removing script component during update does not skip updating any other script components on other entities', function () {
> 2114 |         var e = new pc.Entity();
       |        ^ Global Variable
  2115 |         e.addComponent('script', {
  2116 |             enabled: true,
  2117 |             order: ['destroyer'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2128, 'column': 8, 'index': 68425}","  2126 |         });
  2127 |
> 2128 |         var other = new pc.Entity();
       |        ^ Global Variable
  2129 |         other.addComponent('script', {
  2130 |             enabled: true,
  2131 |             order: ['scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2171, 'column': 12, 'index': 69792}","  2169 |             //    -- B
  2170 |             // -- C
> 2171 |             var root = app.root.findByName('Root');
       |            ^ Global Variable
  2172 |             var a = app.root.findByName('A');
  2173 |             var b = app.root.findByName('B');
  2174 |             var c = app.root.findByName('C');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2172, 'column': 12, 'index': 69844}","  2170 |             // -- C
  2171 |             var root = app.root.findByName('Root');
> 2172 |             var a = app.root.findByName('A');
       |            ^ Global Variable
  2173 |             var b = app.root.findByName('B');
  2174 |             var c = app.root.findByName('C');
  2175 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2173, 'column': 12, 'index': 69890}","  2171 |             var root = app.root.findByName('Root');
  2172 |             var a = app.root.findByName('A');
> 2173 |             var b = app.root.findByName('B');
       |            ^ Global Variable
  2174 |             var c = app.root.findByName('C');
  2175 |
  2176 |             checkInitCall(root, 0, 'update scriptA');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2174, 'column': 12, 'index': 69936}","  2172 |             var a = app.root.findByName('A');
  2173 |             var b = app.root.findByName('B');
> 2174 |             var c = app.root.findByName('C');
       |            ^ Global Variable
  2175 |
  2176 |             checkInitCall(root, 0, 'update scriptA');
  2177 |             checkInitCall(root, 1, 'update scriptB');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2199, 'column': 8, 'index': 70978}","  2197 |
  2198 |     it('update and postUpdate are not called on disabled script instances', function () {
> 2199 |         var a = new pc.Entity();
       |        ^ Global Variable
  2200 |         a.addComponent('script', {
  2201 |             enabled: true,
  2202 |             order: ['scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2225, 'column': 8, 'index': 71681}","  2223 |
  2224 |     it('update and postUpdate are not called on disabled script components', function () {
> 2225 |         var a = new pc.Entity();
       |        ^ Global Variable
  2226 |         a.addComponent('script', {
  2227 |             enabled: false,
  2228 |             order: ['scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2245, 'column': 8, 'index': 72185}","  2243 |
  2244 |     it('update and postUpdate are not called on disabled entities', function () {
> 2245 |         var a = new pc.Entity();
       |        ^ Global Variable
  2246 |         a.addComponent('script', {
  2247 |             enabled: true,
  2248 |             order: ['scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2267, 'column': 8, 'index': 72751}","  2265 |
  2266 |     it('update and postUpdate are not called on script instance that was disabled during update loop', function () {
> 2267 |         var DisableDuringUpdateLoop = pc.createScript('disableDuringUpdateLoop');
       |        ^ Global Variable
  2268 |         DisableDuringUpdateLoop.prototype.update = function () {
  2269 |             window.initializeCalls.push(this.entity.getGuid() + ' update disableDuringUpdateLoop');
  2270 |             this.entity.script.scriptA.enabled = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2276, 'column': 8, 'index': 73250}","  2274 |         };
  2275 |
> 2276 |         var a = new pc.Entity();
       |        ^ Global Variable
  2277 |         a.addComponent('script', {
  2278 |             enabled: true,
  2279 |             order: ['disableDuringUpdateLoop', 'scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2303, 'column': 8, 'index': 74142}","  2301 |
  2302 |     it('update and postUpdate are not called on script component that was disabled during update loop', function () {
> 2303 |         var DisableDuringUpdateLoop = pc.createScript('disableDuringUpdateLoop');
       |        ^ Global Variable
  2304 |         DisableDuringUpdateLoop.prototype.update = function () {
  2305 |             window.initializeCalls.push(this.entity.getGuid() + ' update disableDuringUpdateLoop');
  2306 |             this.entity.script.enabled = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2312, 'column': 8, 'index': 74633}","  2310 |         };
  2311 |
> 2312 |         var a = new pc.Entity();
       |        ^ Global Variable
  2313 |         a.addComponent('script', {
  2314 |             enabled: true,
  2315 |             order: ['disableDuringUpdateLoop', 'scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2340, 'column': 8, 'index': 75580}","  2338 |
  2339 |     it('update and postUpdate are not called on entity that was disabled during update loop', function () {
> 2340 |         var DisableDuringUpdateLoop = pc.createScript('disableDuringUpdateLoop');
       |        ^ Global Variable
  2341 |         DisableDuringUpdateLoop.prototype.update = function () {
  2342 |             window.initializeCalls.push(this.entity.getGuid() + ' update disableDuringUpdateLoop');
  2343 |             this.entity.enabled = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2349, 'column': 8, 'index': 76064}","  2347 |         };
  2348 |
> 2349 |         var a = new pc.Entity();
       |        ^ Global Variable
  2350 |         a.addComponent('script', {
  2351 |             enabled: true,
  2352 |             order: ['disableDuringUpdateLoop', 'scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2377, 'column': 8, 'index': 77010}","  2375 |
  2376 |     it('postUpdate not called on script instance that was disabled during post update loop', function () {
> 2377 |         var DisableDuringUpdateLoop = pc.createScript('disableDuringUpdateLoop');
       |        ^ Global Variable
  2378 |         DisableDuringUpdateLoop.prototype.postUpdate = function () {
  2379 |             window.initializeCalls.push(this.entity.getGuid() + ' postUpdate disableDuringUpdateLoop');
  2380 |             this.entity.script.scriptA.enabled = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2383, 'column': 8, 'index': 77333}","  2381 |         };
  2382 |
> 2383 |         var a = new pc.Entity();
       |        ^ Global Variable
  2384 |         a.addComponent('script', {
  2385 |             enabled: true,
  2386 |             order: ['disableDuringUpdateLoop', 'scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2410, 'column': 8, 'index': 78199}","  2408 |
  2409 |     it('postUpdate not called on script component that was disabled during post update loop', function () {
> 2410 |         var DisableDuringUpdateLoop = pc.createScript('disableDuringUpdateLoop');
       |        ^ Global Variable
  2411 |         DisableDuringUpdateLoop.prototype.postUpdate = function () {
  2412 |             window.initializeCalls.push(this.entity.getGuid() + ' postUpdate disableDuringUpdateLoop');
  2413 |             this.entity.script.enabled = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2416, 'column': 8, 'index': 78514}","  2414 |         };
  2415 |
> 2416 |         var a = new pc.Entity();
       |        ^ Global Variable
  2417 |         a.addComponent('script', {
  2418 |             enabled: true,
  2419 |             order: ['disableDuringUpdateLoop', 'scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2445, 'column': 8, 'index': 79502}","  2443 |
  2444 |     it('postUpdate not called on entity that was disabled during post update loop', function () {
> 2445 |         var DisableDuringUpdateLoop = pc.createScript('disableDuringUpdateLoop');
       |        ^ Global Variable
  2446 |         DisableDuringUpdateLoop.prototype.postUpdate = function () {
  2447 |             window.initializeCalls.push(this.entity.getGuid() + ' postUpdate disableDuringUpdateLoop');
  2448 |             this.entity.enabled = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2451, 'column': 8, 'index': 79810}","  2449 |         };
  2450 |
> 2451 |         var a = new pc.Entity();
       |        ^ Global Variable
  2452 |         a.addComponent('script', {
  2453 |             enabled: true,
  2454 |             order: ['disableDuringUpdateLoop', 'scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2480, 'column': 8, 'index': 80815}","  2478 |
  2479 |     it('update not called second time on script instance that was re-enabled during the same frame', function () {
> 2480 |         var DisableDuringUpdateLoop = pc.createScript('disableDuringUpdateLoop');
       |        ^ Global Variable
  2481 |         DisableDuringUpdateLoop.prototype.update = function () {
  2482 |             window.initializeCalls.push(this.entity.getGuid() + ' update disableDuringUpdateLoop');
  2483 |             this.entity.script.disableDuringUpdateLoop.enabled = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2486, 'column': 8, 'index': 81146}","  2484 |         };
  2485 |
> 2486 |         var EnableDuringUpdateLoop = pc.createScript('enableDuringUpdateLoop');
       |        ^ Global Variable
  2487 |         EnableDuringUpdateLoop.prototype.update = function () {
  2488 |             window.initializeCalls.push(this.entity.getGuid() + ' update enableDuringUpdateLoop');
  2489 |             this.entity.script.disableDuringUpdateLoop.enabled = true; // enable first script back"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2492, 'column': 8, 'index': 81500}","  2490 |         };
  2491 |
> 2492 |         var a = new pc.Entity();
       |        ^ Global Variable
  2493 |         a.addComponent('script', {
  2494 |             enabled: true,
  2495 |             order: ['disableDuringUpdateLoop', 'enableDuringUpdateLoop'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2517, 'column': 8, 'index': 82319}","  2515 |
  2516 |     it('post update not called second time on script instance that was re-enabled during the same frame', function () {
> 2517 |         var DisableDuringUpdateLoop = pc.createScript('disableDuringUpdateLoop');
       |        ^ Global Variable
  2518 |         DisableDuringUpdateLoop.prototype.postUpdate = function () {
  2519 |             window.initializeCalls.push(this.entity.getGuid() + ' postUpdate disableDuringUpdateLoop');
  2520 |             this.entity.script.disableDuringUpdateLoop.enabled = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2523, 'column': 8, 'index': 82658}","  2521 |         };
  2522 |
> 2523 |         var EnableDuringUpdateLoop = pc.createScript('enableDuringUpdateLoop');
       |        ^ Global Variable
  2524 |         EnableDuringUpdateLoop.prototype.postUpdate = function () {
  2525 |             window.initializeCalls.push(this.entity.getGuid() + ' postUpdate enableDuringUpdateLoop');
  2526 |             this.entity.script.disableDuringUpdateLoop.enabled = true; // enable first script back"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2529, 'column': 8, 'index': 83020}","  2527 |         };
  2528 |
> 2529 |         var a = new pc.Entity();
       |        ^ Global Variable
  2530 |         a.addComponent('script', {
  2531 |             enabled: true,
  2532 |             order: ['disableDuringUpdateLoop', 'enableDuringUpdateLoop'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2554, 'column': 8, 'index': 83860}","  2552 |
  2553 |     it('update not called second time on script instance whose script component was re-enabled during the same frame', function () {
> 2554 |         var DisableDuringUpdateLoop = pc.createScript('disableDuringUpdateLoop');
       |        ^ Global Variable
  2555 |         DisableDuringUpdateLoop.prototype.update = function () {
  2556 |             window.initializeCalls.push(this.entity.getGuid() + ' update disableDuringUpdateLoop');
  2557 |             this.entity.script.enabled = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2560, 'column': 8, 'index': 84167}","  2558 |         };
  2559 |
> 2560 |         var EnableDuringUpdateLoop = pc.createScript('enableDuringUpdateLoop');
       |        ^ Global Variable
  2561 |         EnableDuringUpdateLoop.prototype.update = function () {
  2562 |             window.initializeCalls.push(this.entity.getGuid() + ' update enableDuringUpdateLoop');
  2563 |             var e = app.root.findByName('a');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2563, 'column': 12, 'index': 84414}","  2561 |         EnableDuringUpdateLoop.prototype.update = function () {
  2562 |             window.initializeCalls.push(this.entity.getGuid() + ' update enableDuringUpdateLoop');
> 2563 |             var e = app.root.findByName('a');
       |            ^ Global Variable
  2564 |             e.script.enabled = true; // enable first script component back
  2565 |         };
  2566 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2567, 'column': 8, 'index': 84543}","  2565 |         };
  2566 |
> 2567 |         var a = new pc.Entity('a');
       |        ^ Global Variable
  2568 |         a.addComponent('script', {
  2569 |             enabled: true,
  2570 |             order: ['disableDuringUpdateLoop'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2579, 'column': 8, 'index': 84864}","  2577 |         app.root.addChild(a);
  2578 |
> 2579 |         var b = new pc.Entity('b');
       |        ^ Global Variable
  2580 |         b.addComponent('script', {
  2581 |             enabled: true,
  2582 |             order: ['enableDuringUpdateLoop'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2601, 'column': 8, 'index': 85581}","  2599 |
  2600 |     it('post update not called second time on script instance whose script component was re-enabled during the same frame', function () {
> 2601 |         var DisableDuringUpdateLoop = pc.createScript('disableDuringUpdateLoop');
       |        ^ Global Variable
  2602 |         DisableDuringUpdateLoop.prototype.postUpdate = function () {
  2603 |             window.initializeCalls.push(this.entity.getGuid() + ' postUpdate disableDuringUpdateLoop');
  2604 |             this.entity.script.enabled = false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2607, 'column': 8, 'index': 85896}","  2605 |         };
  2606 |
> 2607 |         var EnableDuringUpdateLoop = pc.createScript('enableDuringUpdateLoop');
       |        ^ Global Variable
  2608 |         EnableDuringUpdateLoop.prototype.postUpdate = function () {
  2609 |             window.initializeCalls.push(this.entity.getGuid() + ' postUpdate enableDuringUpdateLoop');
  2610 |             var e = app.root.findByName('a');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2610, 'column': 12, 'index': 86151}","  2608 |         EnableDuringUpdateLoop.prototype.postUpdate = function () {
  2609 |             window.initializeCalls.push(this.entity.getGuid() + ' postUpdate enableDuringUpdateLoop');
> 2610 |             var e = app.root.findByName('a');
       |            ^ Global Variable
  2611 |             e.script.enabled = true; // enable first script component back
  2612 |         };
  2613 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2614, 'column': 8, 'index': 86280}","  2612 |         };
  2613 |
> 2614 |         var a = new pc.Entity('a');
       |        ^ Global Variable
  2615 |         a.addComponent('script', {
  2616 |             enabled: true,
  2617 |             order: ['disableDuringUpdateLoop'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2626, 'column': 8, 'index': 86601}","  2624 |         app.root.addChild(a);
  2625 |
> 2626 |         var b = new pc.Entity('b');
       |        ^ Global Variable
  2627 |         b.addComponent('script', {
  2628 |             enabled: true,
  2629 |             order: ['enableDuringUpdateLoop'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2649, 'column': 8, 'index': 87357}","  2647 |     it('update and postUpdate order for dynamically created entities follows the order in which script components were created', function () {
  2648 |         // regular entity
> 2649 |         var a = new pc.Entity();
       |        ^ Global Variable
  2650 |         a.addComponent('script', {
  2651 |             enabled: true,
  2652 |             order: ['scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2665, 'column': 8, 'index': 87758}","  2663 |
  2664 |         // child of 'a'
> 2665 |         var b = new pc.Entity();
       |        ^ Global Variable
  2666 |         b.addComponent('script', {
  2667 |             enabled: true,
  2668 |             order: ['scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2681, 'column': 8, 'index': 88184}","  2679 |
  2680 |         // create entity but add script component later
> 2681 |         var c = new pc.Entity();
       |        ^ Global Variable
  2682 |         app.root.addChild(c);
  2683 |
  2684 |         // insert entity in the beginning of the hierarchy"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2686, 'column': 8, 'index': 88349}","  2684 |         // insert entity in the beginning of the hierarchy
  2685 |         // (should not make a difference)
> 2686 |         var d = new pc.Entity();
       |        ^ Global Variable
  2687 |         d.addComponent('script', {
  2688 |             enabled: true,
  2689 |             order: ['scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2742, 'column': 8, 'index': 90177}","  2740 |
  2741 |     it('update and post update are called on the same frame for child entities that become enabled during a parent\s update', function () {
> 2742 |         var EnableDuringUpdateLoop = pc.createScript('enableDuringUpdateLoop');
       |        ^ Global Variable
  2743 |         EnableDuringUpdateLoop.prototype.update = function () {
  2744 |             window.initializeCalls.push(this.entity.getGuid() + ' update enableDuringUpdateLoop');
  2745 |             var e = app.root.findByName('b');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2745, 'column': 12, 'index': 90424}","  2743 |         EnableDuringUpdateLoop.prototype.update = function () {
  2744 |             window.initializeCalls.push(this.entity.getGuid() + ' update enableDuringUpdateLoop');
> 2745 |             var e = app.root.findByName('b');
       |            ^ Global Variable
  2746 |             e.enabled = true;
  2747 |         };
  2748 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2750, 'column': 8, 'index': 90533}","  2748 |
  2749 |         // parent entity
> 2750 |         var a = new pc.Entity('a');
       |        ^ Global Variable
  2751 |         a.addComponent('script', {
  2752 |             enabled: true,
  2753 |             order: ['enableDuringUpdateLoop'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2763, 'column': 8, 'index': 90876}","  2761 |
  2762 |         // child of 'a'
> 2763 |         var b = new pc.Entity('b');
       |        ^ Global Variable
  2764 |         b.addComponent('script', {
  2765 |             enabled: true,
  2766 |             order: ['scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2797, 'column': 8, 'index': 92058}","  2795 |
  2796 |     it('update is called on the next frame and post update on the same frame for parent entities whose script component becomes enabled during a child\s update', function () {
> 2797 |         var EnableDuringUpdateLoop = pc.createScript('enableDuringUpdateLoop');
       |        ^ Global Variable
  2798 |         EnableDuringUpdateLoop.prototype.update = function () {
  2799 |             window.initializeCalls.push(this.entity.getGuid() + ' update enableDuringUpdateLoop');
  2800 |             var e = app.root.findByName('a');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2800, 'column': 12, 'index': 92305}","  2798 |         EnableDuringUpdateLoop.prototype.update = function () {
  2799 |             window.initializeCalls.push(this.entity.getGuid() + ' update enableDuringUpdateLoop');
> 2800 |             var e = app.root.findByName('a');
       |            ^ Global Variable
  2801 |             e.script.enabled = true;
  2802 |         };
  2803 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2806, 'column': 8, 'index': 92579}","  2804 |         // parent entity (note there doesn't have to be a parent-child relationship
  2805 |         // what really matters is which script component is created first by calling addComponent)
> 2806 |         var a = new pc.Entity('a');
       |        ^ Global Variable
  2807 |         a.addComponent('script', {
  2808 |             enabled: false,
  2809 |             order: ['scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2822, 'column': 8, 'index': 92984}","  2820 |
  2821 |         // child of 'a'
> 2822 |         var b = new pc.Entity('b');
       |        ^ Global Variable
  2823 |         b.addComponent('script', {
  2824 |             enabled: true,
  2825 |             order: ['enableDuringUpdateLoop'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2858, 'column': 8, 'index': 94317}","  2856 |
  2857 |     it('update is called on the same frame for subsequent script instance that gets enabled during update loop', function () {
> 2858 |         var EnableDuringUpdateLoop = pc.createScript('enableDuringUpdateLoop');
       |        ^ Global Variable
  2859 |         EnableDuringUpdateLoop.prototype.update = function () {
  2860 |             window.initializeCalls.push(this.entity.getGuid() + ' update enableDuringUpdateLoop');
  2861 |             this.entity.script.scriptB.enabled = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2866, 'column': 8, 'index': 94810}","  2864 |         // parent entity (note there doesn't have to be a parent-child relationship
  2865 |         // what really matters is which script component is created first by calling addComponent)
> 2866 |         var a = new pc.Entity('a');
       |        ^ Global Variable
  2867 |         a.addComponent('script', {
  2868 |             enabled: true,
  2869 |             order: ['enableDuringUpdateLoop', 'scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2898, 'column': 8, 'index': 95969}","  2896 |
  2897 |     it('update is called on the next frame and post update on the same frame for previous script instance that gets enabled during update loop', function () {
> 2898 |         var EnableDuringUpdateLoop = pc.createScript('enableDuringUpdateLoop');
       |        ^ Global Variable
  2899 |         EnableDuringUpdateLoop.prototype.update = function () {
  2900 |             window.initializeCalls.push(this.entity.getGuid() + ' update enableDuringUpdateLoop');
  2901 |             this.entity.script.scriptB.enabled = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2906, 'column': 8, 'index': 96462}","  2904 |         // parent entity (note there doesn't have to be a parent-child relationship
  2905 |         // what really matters is which script component is created first by calling addComponent)
> 2906 |         var a = new pc.Entity('a');
       |        ^ Global Variable
  2907 |         a.addComponent('script', {
  2908 |             enabled: true,
  2909 |             order: ['scriptB', 'enableDuringUpdateLoop', 'scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2947, 'column': 8, 'index': 97936}","  2945 |
  2946 |     it('post update is called on the same frame for subsequent script instance that gets enabled during post update loop', function () {
> 2947 |         var EnableDuringUpdateLoop = pc.createScript('enableDuringUpdateLoop');
       |        ^ Global Variable
  2948 |         EnableDuringUpdateLoop.prototype.postUpdate = function () {
  2949 |             window.initializeCalls.push(this.entity.getGuid() + ' post update enableDuringUpdateLoop');
  2950 |             this.entity.script.scriptB.enabled = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2955, 'column': 8, 'index': 98438}","  2953 |         // parent entity (note there doesn't have to be a parent-child relationship
  2954 |         // what really matters is which script component is created first by calling addComponent)
> 2955 |         var a = new pc.Entity('a');
       |        ^ Global Variable
  2956 |         a.addComponent('script', {
  2957 |             enabled: true,
  2958 |             order: ['enableDuringUpdateLoop', 'scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2986, 'column': 8, 'index': 99527}","  2984 |
  2985 |     it('post update is called on the next frame previous script instance that gets enabled during post update loop', function () {
> 2986 |         var EnableDuringUpdateLoop = pc.createScript('enableDuringUpdateLoop');
       |        ^ Global Variable
  2987 |         EnableDuringUpdateLoop.prototype.postUpdate = function () {
  2988 |             window.initializeCalls.push(this.entity.getGuid() + ' post update enableDuringUpdateLoop');
  2989 |             this.entity.script.scriptB.enabled = true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 2994, 'column': 8, 'index': 100029}","  2992 |         // parent entity (note there doesn't have to be a parent-child relationship
  2993 |         // what really matters is which script component is created first by calling addComponent)
> 2994 |         var a = new pc.Entity('a');
       |        ^ Global Variable
  2995 |         a.addComponent('script', {
  2996 |             enabled: true,
  2997 |             order: ['scriptB', 'enableDuringUpdateLoop', 'scriptA'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3034, 'column': 8, 'index': 101414}","  3032 |
  3033 |     it('execution order remains consistent when components are destroyed', function () {
> 3034 |         var e;
       |        ^ Global Variable
  3035 |         var entities = [];
  3036 |
  3037 |         // make 3 entities with scriptA"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3035, 'column': 8, 'index': 101429}","  3033 |     it('execution order remains consistent when components are destroyed', function () {
  3034 |         var e;
> 3035 |         var entities = [];
       |        ^ Global Variable
  3036 |
  3037 |         // make 3 entities with scriptA
  3038 |         for (var i = 0; i < 3; i++) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3038, 'column': 13, 'index': 101502}","  3036 |
  3037 |         // make 3 entities with scriptA
> 3038 |         for (var i = 0; i < 3; i++) {
       |             ^ Global Variable
  3039 |             e = new pc.Entity();
  3040 |             e.addComponent('script', {
  3041 |                 enabled: true,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3089, 'column': 8, 'index': 102982}","  3087 |
  3088 |     it('move() moves script instance after others', function () {
> 3089 |         var e = new pc.Entity();
       |        ^ Global Variable
  3090 |         e.addComponent('script', {
  3091 |             enabled: true,
  3092 |             order: ['scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3117, 'column': 8, 'index': 103813}","  3115 |
  3116 |     it('move() does not accept index larger than scripts array length', function () {
> 3117 |         var e = new pc.Entity();
       |        ^ Global Variable
  3118 |         e.addComponent('script', {
  3119 |             enabled: true,
  3120 |             order: ['scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3145, 'column': 8, 'index': 104620}","  3143 |
  3144 |     it('move() does not accept negative index', function () {
> 3145 |         var e = new pc.Entity();
       |        ^ Global Variable
  3146 |         e.addComponent('script', {
  3147 |             enabled: true,
  3148 |             order: ['scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3173, 'column': 8, 'index': 105498}","  3171 |
  3172 |     it('move() during update loop will update moved script again if new index is after the script who called move()', function () {
> 3173 |         var Move = pc.createScript('mover');
       |        ^ Global Variable
  3174 |         Move.prototype.update = function () {
  3175 |             this.entity.script.move('scriptA', 2);
  3176 |         };"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3178, 'column': 8, 'index': 105652}","  3176 |         };
  3177 |
> 3178 |         var e = new pc.Entity();
       |        ^ Global Variable
  3179 |         e.addComponent('script', {
  3180 |             enabled: true,
  3181 |             order: ['scriptA', 'mover', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3208, 'column': 8, 'index': 106624}","  3206 |
  3207 |     it('move() during update loop will not update moved script if new index is before the script who called move()', function () {
> 3208 |         var Move = pc.createScript('mover');
       |        ^ Global Variable
  3209 |         Move.prototype.update = function () {
  3210 |             this.entity.script.move('scriptB', 0);
  3211 |         };"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3213, 'column': 8, 'index': 106778}","  3211 |         };
  3212 |
> 3213 |         var e = new pc.Entity();
       |        ^ Global Variable
  3214 |         e.addComponent('script', {
  3215 |             enabled: true,
  3216 |             order: ['scriptA', 'mover', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3241, 'column': 8, 'index': 107580}","  3239 |
  3240 |     it('swap() uses the new script', function (done) {
> 3241 |         var e = new pc.Entity();
       |        ^ Global Variable
  3242 |         e.addComponent('script', {
  3243 |             enabled: true,
  3244 |             order: ['scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3258, 'column': 8, 'index': 108044}","  3256 |         // create new script with the same name
  3257 |         // so that 'swap' is triggered
> 3258 |         var NewScriptA = pc.createScript('scriptA');
       |        ^ Global Variable
  3259 |         NewScriptA.prototype.update = function () {
  3260 |             window.initializeCalls.push(this.entity.getGuid() + ' update new scriptA');
  3261 |         };"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Global Variable,"{'line': 3285, 'column': 8, 'index': 109045}","  3283 |
  3284 |     it('pc.ScriptComponent#has', function () {
> 3285 |         var e = new pc.Entity();
       |        ^ Global Variable
  3286 |         e.addComponent('script', {
  3287 |             enabled: true,
  3288 |             order: ['scriptA', 'scriptB'],"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Sleepy Test,"{'line': 1549, 'column': 12, 'index': 49491}","  1547 |         var asset = app.assets.get(7);
  1548 |         app.scripts.on('add:loadedLater', function () {
> 1549 |             setTimeout(function () {
       |            ^ Sleepy Test
  1550 |                 expect(window.initializeCalls.length).to.equal(2);
  1551 |                 checkInitCall(e, 0, 'initialize loadedLater');
  1552 |                 checkInitCall(e, 1, 'postInitialize loadedLater');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Sleepy Test,"{'line': 1579, 'column': 12, 'index': 50439}","  1577 |         var asset = app.assets.get(7);
  1578 |         app.scripts.on('add:loadedLater', function () {
> 1579 |             setTimeout(function () {
       |            ^ Sleepy Test
  1580 |                 expect(window.initializeCalls.length).to.equal(2);
  1581 |                 checkInitCall(e, 0, 'initialize loadedLater');
  1582 |                 checkInitCall(e, 1, 'postInitialize loadedLater');"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Sleepy Test,"{'line': 1611, 'column': 12, 'index': 51513}","  1609 |         var asset = app.assets.get(7);
  1610 |         app.scripts.on('add:loadedLater', function () {
> 1611 |             setTimeout(function () {
       |            ^ Sleepy Test
  1612 |                 expect(window.initializeCalls.length).to.equal(1);
  1613 |                 checkInitCall(e, 0, 'initialize loadedLater');
  1614 |                 window.initializeCalls.length = 0;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Sleepy Test,"{'line': 1647, 'column': 12, 'index': 52759}","  1645 |         var asset = app.assets.get(7);
  1646 |         app.scripts.on('add:loadedLater', function () {
> 1647 |             setTimeout(function () {
       |            ^ Sleepy Test
  1648 |                 expect(window.initializeCalls.length).to.equal(1);
  1649 |                 checkInitCall(e, 0, 'initialize loadedLater');
  1650 |                 window.initializeCalls.length = 0;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Sleepy Test,"{'line': 1683, 'column': 12, 'index': 54010}","  1681 |         var asset = app.assets.get(7);
  1682 |         app.scripts.on('add:loadedLater', function () {
> 1683 |             setTimeout(function () {
       |            ^ Sleepy Test
  1684 |                 expect(window.initializeCalls.length).to.equal(1);
  1685 |                 checkInitCall(e, 0, 'initialize loadedLater');
  1686 |                 window.initializeCalls.length = 0;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Sleepy Test,"{'line': 1722, 'column': 12, 'index': 55290}","  1720 |         var asset = app.assets.get(7);
  1721 |         app.scripts.on('add:loadedLater', function () {
> 1722 |             setTimeout(function () {
       |            ^ Sleepy Test
  1723 |                 expect(e.script.loadedLater).to.exist;
  1724 |                 expect(e.script.loadedLater.disableEntity).to.equal(true);
  1725 |                 expect(e.script.loadedLater.disableScriptComponent).to.equal(true);"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/script/test_script_component.js,Sleepy Test,"{'line': 3269, 'column': 12, 'index': 108518}","  3267 |
  3268 |         app.scripts.on('swap', function () {
> 3269 |             setTimeout(function () {
       |            ^ Sleepy Test
  3270 |                 window.initializeCalls.length = 0;
  3271 |                 app.update();
  3272 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Conditional Test Logic,"{'line': 24, 'column': 12, 'index': 506}","  22 |         var check = function () {
  23 |             i++;
> 24 |             if (i === 3) {
     |            ^ Conditional Test Logic
  25 |                 return true;
  26 |             } else {
  27 |                 return false;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Conditional Test Logic,"{'line': 52, 'column': 12, 'index': 1328}","  50 |
  51 |         atlasAsset.ready(function () {
> 52 |             if (check()) cb();
     |            ^ Conditional Test Logic
  53 |         });
  54 |
  55 |         spriteAsset.ready(function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Conditional Test Logic,"{'line': 56, 'column': 12, 'index': 1412}","  54 |
  55 |         spriteAsset.ready(function () {
> 56 |             if (check()) cb();
     |            ^ Conditional Test Logic
  57 |         });
  58 |
  59 |         spriteAsset2.ready(function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Conditional Test Logic,"{'line': 60, 'column': 12, 'index': 1497}","  58 |
  59 |         spriteAsset2.ready(function () {
> 60 |             if (check()) cb();
     |            ^ Conditional Test Logic
  61 |         });
  62 |     }
  63 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Duplicate Assert,"{'line': 111, 'column': 8, 'index': 3178}","  109 |
  110 |     it('Sprites assets unbound on destroy', function () {
> 111 |         expect(!spriteAsset.hasEvent('add')).to.exist;
      |        ^ Duplicate Assert
  112 |         expect(!spriteAsset.hasEvent('load')).to.exist;
  113 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
  114 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Duplicate Assert,"{'line': 112, 'column': 8, 'index': 3233}","  110 |     it('Sprites assets unbound on destroy', function () {
  111 |         expect(!spriteAsset.hasEvent('add')).to.exist;
> 112 |         expect(!spriteAsset.hasEvent('load')).to.exist;
      |        ^ Duplicate Assert
  113 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
  114 |
  115 |         var e = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Duplicate Assert,"{'line': 113, 'column': 8, 'index': 3289}","  111 |         expect(!spriteAsset.hasEvent('add')).to.exist;
  112 |         expect(!spriteAsset.hasEvent('load')).to.exist;
> 113 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
      |        ^ Duplicate Assert
  114 |
  115 |         var e = new pc.Entity();
  116 |         e.addComponent('sprite', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Duplicate Assert,"{'line': 122, 'column': 8, 'index': 3488}","  120 |         e.destroy();
  121 |
> 122 |         expect(!spriteAsset.hasEvent('add')).to.exist;
      |        ^ Duplicate Assert
  123 |         expect(!spriteAsset.hasEvent('load')).to.exist;
  124 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
  125 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Duplicate Assert,"{'line': 123, 'column': 8, 'index': 3543}","  121 |
  122 |         expect(!spriteAsset.hasEvent('add')).to.exist;
> 123 |         expect(!spriteAsset.hasEvent('load')).to.exist;
      |        ^ Duplicate Assert
  124 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
  125 |     });
  126 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Duplicate Assert,"{'line': 124, 'column': 8, 'index': 3599}","  122 |         expect(!spriteAsset.hasEvent('add')).to.exist;
  123 |         expect(!spriteAsset.hasEvent('load')).to.exist;
> 124 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
      |        ^ Duplicate Assert
  125 |     });
  126 |
  127 |     it('Sprites assets unbound when reset', function () {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Duplicate Assert,"{'line': 128, 'column': 8, 'index': 3724}","  126 |
  127 |     it('Sprites assets unbound when reset', function () {
> 128 |         expect(!spriteAsset.hasEvent('add')).to.exist;
      |        ^ Duplicate Assert
  129 |         expect(!spriteAsset.hasEvent('load')).to.exist;
  130 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
  131 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Duplicate Assert,"{'line': 129, 'column': 8, 'index': 3779}","  127 |     it('Sprites assets unbound when reset', function () {
  128 |         expect(!spriteAsset.hasEvent('add')).to.exist;
> 129 |         expect(!spriteAsset.hasEvent('load')).to.exist;
      |        ^ Duplicate Assert
  130 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
  131 |
  132 |         var e = new pc.Entity();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Duplicate Assert,"{'line': 130, 'column': 8, 'index': 3835}","  128 |         expect(!spriteAsset.hasEvent('add')).to.exist;
  129 |         expect(!spriteAsset.hasEvent('load')).to.exist;
> 130 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
      |        ^ Duplicate Assert
  131 |
  132 |         var e = new pc.Entity();
  133 |         e.addComponent('sprite', {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Duplicate Assert,"{'line': 139, 'column': 8, 'index': 4058}","  137 |         e.sprite.spriteAsset = spriteAsset2;
  138 |
> 139 |         expect(!spriteAsset.hasEvent('add')).to.exist;
      |        ^ Duplicate Assert
  140 |         expect(!spriteAsset.hasEvent('load')).to.exist;
  141 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
  142 |     });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Duplicate Assert,"{'line': 140, 'column': 8, 'index': 4113}","  138 |
  139 |         expect(!spriteAsset.hasEvent('add')).to.exist;
> 140 |         expect(!spriteAsset.hasEvent('load')).to.exist;
      |        ^ Duplicate Assert
  141 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
  142 |     });
  143 | });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Duplicate Assert,"{'line': 141, 'column': 8, 'index': 4169}","  139 |         expect(!spriteAsset.hasEvent('add')).to.exist;
  140 |         expect(!spriteAsset.hasEvent('load')).to.exist;
> 141 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
      |        ^ Duplicate Assert
  142 |     });
  143 | });
  144 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Global Variable,"{'line': 2, 'column': 4, 'index': 49}","  1 | describe(""pc.SpriteComponent"", function () {
> 2 |     var app = null;
    |    ^ Global Variable
  3 |     var atlasAsset = null;
  4 |     var spriteAsset = null;
  5 |     var spriteAsset2 = null;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Global Variable,"{'line': 3, 'column': 4, 'index': 69}","  1 | describe(""pc.SpriteComponent"", function () {
  2 |     var app = null;
> 3 |     var atlasAsset = null;
    |    ^ Global Variable
  4 |     var spriteAsset = null;
  5 |     var spriteAsset2 = null;
  6 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Global Variable,"{'line': 4, 'column': 4, 'index': 96}","  2 |     var app = null;
  3 |     var atlasAsset = null;
> 4 |     var spriteAsset = null;
    |    ^ Global Variable
  5 |     var spriteAsset2 = null;
  6 |
  7 |     beforeEach(function (done) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Global Variable,"{'line': 5, 'column': 4, 'index': 124}","  3 |     var atlasAsset = null;
  4 |     var spriteAsset = null;
> 5 |     var spriteAsset2 = null;
    |    ^ Global Variable
  6 |
  7 |     beforeEach(function (done) {
  8 |         app = new pc.Application(document.createElement(""canvas""));"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Global Variable,"{'line': 20, 'column': 4, 'index': 391}","  18 |
  19 |
> 20 |     var loadAssets = function (cb) {
     |    ^ Global Variable
  21 |         var i = 0;
  22 |         var check = function () {
  23 |             i++;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Global Variable,"{'line': 21, 'column': 8, 'index': 432}","  19 |
  20 |     var loadAssets = function (cb) {
> 21 |         var i = 0;
     |        ^ Global Variable
  22 |         var check = function () {
  23 |             i++;
  24 |             if (i === 3) {"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Global Variable,"{'line': 22, 'column': 8, 'index': 451}","  20 |     var loadAssets = function (cb) {
  21 |         var i = 0;
> 22 |         var check = function () {
     |        ^ Global Variable
  23 |             i++;
  24 |             if (i === 3) {
  25 |                 return true;"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Global Variable,"{'line': 65, 'column': 8, 'index': 1585}","  63 |
  64 |     it('Add new Component', function () {
> 65 |         var e = new pc.Entity();
     |        ^ Global Variable
  66 |
  67 |         e.addComponent('sprite', {});
  68 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Global Variable,"{'line': 88, 'column': 8, 'index': 2698}","  86 |     // Once this has been addressed they can be re-enabled.
  87 |     it('Add / Remove Component', function () {
> 88 |         var e = new pc.Entity();
     |        ^ Global Variable
  89 |
  90 |         e.addComponent('sprite', {});
  91 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Global Variable,"{'line': 100, 'column': 8, 'index': 2935}","   98 |
   99 |     it('Remove after destroy', function () {
> 100 |         var e = new pc.Entity();
      |        ^ Global Variable
  101 |         e.addComponent('sprite', {
  102 |             spriteAsset: spriteAsset
  103 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Global Variable,"{'line': 115, 'column': 8, 'index': 3348}","  113 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
  114 |
> 115 |         var e = new pc.Entity();
      |        ^ Global Variable
  116 |         e.addComponent('sprite', {
  117 |             spriteAsset: spriteAsset
  118 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/components/sprite/test_sprite_component.js,Global Variable,"{'line': 132, 'column': 8, 'index': 3894}","  130 |         expect(!spriteAsset.hasEvent('remove')).to.exist;
  131 |
> 132 |         var e = new pc.Entity();
      |        ^ Global Variable
  133 |         e.addComponent('sprite', {
  134 |             spriteAsset: spriteAsset
  135 |         });"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/handlers/test_sprite_resource.js,Global Variable,"{'line': 13, 'column': 8, 'index': 301}","  11 |     it(""load from filesystem"", function (done) {
  12 |
> 13 |         var atlasAsset = new pc.Asset(""Red Atlas"", ""textureatlas"", {
     |        ^ Global Variable
  14 |             url: 'base/tests/test-assets/sprite/red-atlas.json'
  15 |         });
  16 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/handlers/test_sprite_resource.js,Global Variable,"{'line': 17, 'column': 8, 'index': 447}","  15 |         });
  16 |
> 17 |         var spriteAsset = new pc.Asset(""Red Sprite"", ""sprite"", {
     |        ^ Global Variable
  18 |             url: 'base/tests/test-assets/sprite/red-sprite.json'
  19 |         });
  20 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/handlers/test_sprite_resource.js,Global Variable,"{'line': 53, 'column': 8, 'index': 1542}","  51 |
  52 |     it(""load from asset data"", function (done) {
> 53 |         var atlasAsset = new pc.Asset(""Red Atlas"", ""textureatlas"", {
     |        ^ Global Variable
  54 |             url: 'base/tests/test-assets/sprite/red-atlas.json'
  55 |         });
  56 |"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/framework/handlers/test_sprite_resource.js,Global Variable,"{'line': 57, 'column': 8, 'index': 1688}","  55 |         });
  56 |
> 57 |         var spriteAsset = new pc.Asset(""Red Sprite"", ""sprite"", null, {
     |        ^ Global Variable
  58 |             ""renderMode"": 0,
  59 |             ""pixelsPerUnit"": 100,
  60 |             ""textureAtlasAsset"": atlasAsset.id,"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/platform/net/test_http.js,Conditional Test Logic,"{'line': 34, 'column': 16, 'index': 1097}","  32 |             setTimeout(function () {
  33 |                 const response = responses[requestIndex++];
> 34 |                 if (response.status === 200) {
     |                ^ Conditional Test Logic
  35 |                     xhr.respond(response.status, { ContentType: 'application/json' }, response.responseText);
  36 |                 } else {
  37 |                     xhr.error();"
/home/gabriel/Desktop/research/projects/Play_Canvas/tests/platform/net/test_http.js,Sleepy Test,"{'line': 32, 'column': 12, 'index': 996}","  30 |         let requestIndex = 0;
  31 |         xhr.onCreate = function (xhr) {
> 32 |             setTimeout(function () {
     |            ^ Sleepy Test
  33 |                 const response = responses[requestIndex++];
  34 |                 if (response.status === 200) {
  35 |                     xhr.respond(response.status, { ContentType: 'application/json' }, response.responseText);"
