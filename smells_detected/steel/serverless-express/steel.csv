file,type,smells,frame
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/unit.js,Lazy Test,"{'line': 303, 'column': 32, 'index': 10118}","  301 |       (resolve, reject) => {
  302 |         const context = new MockContext(resolve, reject)
> 303 |         const contextResolver = makeResolver({
      |                                ^ Lazy Test
  304 |           context,
  305 |           resolutionMode: 'CONTEXT'
  306 |         })"
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/unit.js,Lazy Test,"{'line': 316, 'column': 29, 'index': 10468}","  314 |   test('CALLBACK', () => {
  315 |     const callback = (e, response) => response
> 316 |     const callbackResolver = makeResolver({
      |                             ^ Lazy Test
  317 |       callback,
  318 |       resolutionMode: 'CALLBACK',
  319 |       context: {}"
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/unit.js,Lazy Test,"{'line': 334, 'column': 30, 'index': 10866}","  332 |         reject
  333 |       }
> 334 |       const promiseResolver = makeResolver({
      |                              ^ Lazy Test
  335 |         promise,
  336 |         resolutionMode: 'PROMISE'
  337 |       })"
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/integration.js,Duplicate Assert,"{'line': 281, 'column': 8, 'index': 8873}","  279 |         expectedResponse.body = Buffer.from(samLogoBase64, 'base64')
  280 |         expectedResponse.isBase64Encoded = false
> 281 |         expect(response.headers.etag).toMatch(etagRegex)
      |        ^ Duplicate Assert
  282 |         expect(response.headers['last-modified']).toMatch(lastModifiedRegex)
  283 |         delete response.headers.etag
  284 |         delete response.headers['last-modified']"
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/integration.js,Duplicate Assert,"{'line': 282, 'column': 8, 'index': 8930}","  280 |         expectedResponse.isBase64Encoded = false
  281 |         expect(response.headers.etag).toMatch(etagRegex)
> 282 |         expect(response.headers['last-modified']).toMatch(lastModifiedRegex)
      |        ^ Duplicate Assert
  283 |         delete response.headers.etag
  284 |         delete response.headers['last-modified']
  285 |         break"
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/integration.js,Duplicate Assert,"{'line': 287, 'column': 8, 'index': 9134}","  285 |         break
  286 |       case 'apiGatewayV2':
> 287 |         expect(response.headers.etag).toMatch(etagRegex)
      |        ^ Duplicate Assert
  288 |         expect(response.headers['last-modified']).toMatch(lastModifiedRegex)
  289 |         delete response.headers.etag
  290 |         delete response.headers['last-modified']"
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/integration.js,Duplicate Assert,"{'line': 288, 'column': 8, 'index': 9191}","  286 |       case 'apiGatewayV2':
  287 |         expect(response.headers.etag).toMatch(etagRegex)
> 288 |         expect(response.headers['last-modified']).toMatch(lastModifiedRegex)
      |        ^ Duplicate Assert
  289 |         delete response.headers.etag
  290 |         delete response.headers['last-modified']
  291 |         break"
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/integration.js,Duplicate Assert,"{'line': 567, 'column': 6, 'index': 17214}","  565 |       loggerError.debug('nocall')
  566 |       loggerError.verbose('nocall')
> 567 |       expect(global.console.warn).not.toHaveBeenCalled()
      |      ^ Duplicate Assert
  568 |       expect(global.console.debug).not.toHaveBeenCalled()
  569 |       expect(global.console.info).not.toHaveBeenCalled()
  570 |       expect(global.console.error).toHaveBeenLastCalledWith({"
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/integration.js,Magic Number,"{'line': 270, 'column': 63, 'index': 8318}","  268 |       case 'alb':
  269 |       case 'apiGatewayV1':
> 270 |         expect(response.multiValueHeaders.etag.length).toEqual(1)
      |                                                               ^ Magic Number
  271 |         expect(response.multiValueHeaders.etag[0]).toMatch(etagRegex)
  272 |         expect(response.multiValueHeaders['last-modified'].length).toEqual(1)
  273 |         expect(response.multiValueHeaders['last-modified'][0]).toMatch(lastModifiedRegex)"
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/integration.js,Magic Number,"{'line': 272, 'column': 75, 'index': 8466}","  270 |         expect(response.multiValueHeaders.etag.length).toEqual(1)
  271 |         expect(response.multiValueHeaders.etag[0]).toMatch(etagRegex)
> 272 |         expect(response.multiValueHeaders['last-modified'].length).toEqual(1)
      |                                                                           ^ Magic Number
  273 |         expect(response.multiValueHeaders['last-modified'][0]).toMatch(lastModifiedRegex)
  274 |         delete response.multiValueHeaders.etag
  275 |         delete response.multiValueHeaders['last-modified']"
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/integration.js,Magic Number,"{'line': 293, 'column': 53, 'index': 9438}","  291 |         break
  292 |       case 'lambdaEdge':
> 293 |         expect(response.headers.etag.length).toEqual(1)
      |                                                     ^ Magic Number
  294 |         expect(response.headers.etag[0].key).toMatch('etag')
  295 |         expect(response.headers.etag[0].value).toMatch(etagRegex)
  296 |         expect(response.headers['last-modified'].length).toEqual(1)"
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/integration.js,Magic Number,"{'line': 296, 'column': 65, 'index': 9633}","  294 |         expect(response.headers.etag[0].key).toMatch('etag')
  295 |         expect(response.headers.etag[0].value).toMatch(etagRegex)
> 296 |         expect(response.headers['last-modified'].length).toEqual(1)
      |                                                                 ^ Magic Number
  297 |         expect(response.headers['last-modified'][0].key).toMatch('last-modified')
  298 |         expect(response.headers['last-modified'][0].value).toMatch(lastModifiedRegex)
  299 |         delete response.headers.etag"
/home/gabriel/Desktop/research/projects/serverless-express/__tests__/integration.js,Magic Number,"{'line': 546, 'column': 56, 'index': 16539}","  544 |       await serverlessExpressInstance(event)
  545 |
> 546 |       expect(customLogger.debug.mock.calls.length).toBe(6)
      |                                                        ^ Magic Number
  547 |
  548 |       // TODO: test log levels
  549 |       // customLogger.level = 'error'"
